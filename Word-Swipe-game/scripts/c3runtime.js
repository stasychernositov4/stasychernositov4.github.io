// Generated by Construct 3, the game and app creator :: https://www.construct.net
// ../3rdparty/glmatrix.js
{
/*
 @fileoverview gl-matrix - High performance matrix and vector operations
@author Brandon Jones
@author Colin MacKenzie IV
@version 3.3.0

Copyright (c) 2015-2020, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
'use strict';(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?factory(exports):typeof define==="function"&&define.amd?define(["exports"],factory):(global=global||self,factory(global.glMatrix={}))})(this,function(exports){var EPSILON=1E-6;var ARRAY_TYPE=typeof Float32Array!=="undefined"?Float32Array:Array;var RANDOM=Math.random;function setMatrixArrayType(type){ARRAY_TYPE=type}var degree=Math.PI/180;function toRadian(a){return a*degree}function equals(a,b){return Math.abs(a-
b)<=EPSILON*Math.max(1,Math.abs(a),Math.abs(b))}if(!Math.hypot)Math.hypot=function(){var y=0,i=arguments.length;while(i--)y+=arguments[i]*arguments[i];return Math.sqrt(y)};var common=Object.freeze({__proto__:null,EPSILON:EPSILON,get ARRAY_TYPE(){return ARRAY_TYPE},RANDOM:RANDOM,setMatrixArrayType:setMatrixArrayType,toRadian:toRadian,equals:equals});function create(){var out=new ARRAY_TYPE(4);if(ARRAY_TYPE!=Float32Array){out[1]=0;out[2]=0}out[0]=1;out[3]=1;return out}function clone(a){var out=new ARRAY_TYPE(4);
out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];return out}function copy(out,a){out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];return out}function identity(out){out[0]=1;out[1]=0;out[2]=0;out[3]=1;return out}function fromValues(m00,m01,m10,m11){var out=new ARRAY_TYPE(4);out[0]=m00;out[1]=m01;out[2]=m10;out[3]=m11;return out}function set(out,m00,m01,m10,m11){out[0]=m00;out[1]=m01;out[2]=m10;out[3]=m11;return out}function transpose(out,a){if(out===a){var a1=a[1];out[1]=a[2];out[2]=a1}else{out[0]=a[0];
out[1]=a[2];out[2]=a[1];out[3]=a[3]}return out}function invert(out,a){var a0=a[0],a1=a[1],a2=a[2],a3=a[3];var det=a0*a3-a2*a1;if(!det)return null;det=1/det;out[0]=a3*det;out[1]=-a1*det;out[2]=-a2*det;out[3]=a0*det;return out}function adjoint(out,a){var a0=a[0];out[0]=a[3];out[1]=-a[1];out[2]=-a[2];out[3]=a0;return out}function determinant(a){return a[0]*a[3]-a[2]*a[1]}function multiply(out,a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3];var b0=b[0],b1=b[1],b2=b[2],b3=b[3];out[0]=a0*b0+a2*b1;out[1]=a1*b0+
a3*b1;out[2]=a0*b2+a2*b3;out[3]=a1*b2+a3*b3;return out}function rotate(out,a,rad){var a0=a[0],a1=a[1],a2=a[2],a3=a[3];var s=Math.sin(rad);var c=Math.cos(rad);out[0]=a0*c+a2*s;out[1]=a1*c+a3*s;out[2]=a0*-s+a2*c;out[3]=a1*-s+a3*c;return out}function scale(out,a,v){var a0=a[0],a1=a[1],a2=a[2],a3=a[3];var v0=v[0],v1=v[1];out[0]=a0*v0;out[1]=a1*v0;out[2]=a2*v1;out[3]=a3*v1;return out}function fromRotation(out,rad){var s=Math.sin(rad);var c=Math.cos(rad);out[0]=c;out[1]=s;out[2]=-s;out[3]=c;return out}
function fromScaling(out,v){out[0]=v[0];out[1]=0;out[2]=0;out[3]=v[1];return out}function str(a){return"mat2("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"}function frob(a){return Math.hypot(a[0],a[1],a[2],a[3])}function LDU(L,D,U,a){L[2]=a[2]/a[0];U[0]=a[0];U[1]=a[1];U[3]=a[3]-L[2]*U[1];return[L,D,U]}function add(out,a,b){out[0]=a[0]+b[0];out[1]=a[1]+b[1];out[2]=a[2]+b[2];out[3]=a[3]+b[3];return out}function subtract(out,a,b){out[0]=a[0]-b[0];out[1]=a[1]-b[1];out[2]=a[2]-b[2];out[3]=a[3]-b[3];return out}
function exactEquals(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]}function equals$1(a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3];var b0=b[0],b1=b[1],b2=b[2],b3=b[3];return Math.abs(a0-b0)<=EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))&&Math.abs(a3-b3)<=EPSILON*Math.max(1,Math.abs(a3),Math.abs(b3))}function multiplyScalar(out,a,b){out[0]=a[0]*b;out[1]=a[1]*b;
out[2]=a[2]*b;out[3]=a[3]*b;return out}function multiplyScalarAndAdd(out,a,b,scale){out[0]=a[0]+b[0]*scale;out[1]=a[1]+b[1]*scale;out[2]=a[2]+b[2]*scale;out[3]=a[3]+b[3]*scale;return out}var mul=multiply;var sub=subtract;var mat2=Object.freeze({__proto__:null,create:create,clone:clone,copy:copy,identity:identity,fromValues:fromValues,set:set,transpose:transpose,invert:invert,adjoint:adjoint,determinant:determinant,multiply:multiply,rotate:rotate,scale:scale,fromRotation:fromRotation,fromScaling:fromScaling,
str:str,frob:frob,LDU:LDU,add:add,subtract:subtract,exactEquals:exactEquals,equals:equals$1,multiplyScalar:multiplyScalar,multiplyScalarAndAdd:multiplyScalarAndAdd,mul:mul,sub:sub});function create$1(){var out=new ARRAY_TYPE(6);if(ARRAY_TYPE!=Float32Array){out[1]=0;out[2]=0;out[4]=0;out[5]=0}out[0]=1;out[3]=1;return out}function clone$1(a){var out=new ARRAY_TYPE(6);out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];out[4]=a[4];out[5]=a[5];return out}function copy$1(out,a){out[0]=a[0];out[1]=a[1];out[2]=
a[2];out[3]=a[3];out[4]=a[4];out[5]=a[5];return out}function identity$1(out){out[0]=1;out[1]=0;out[2]=0;out[3]=1;out[4]=0;out[5]=0;return out}function fromValues$1(a,b,c,d,tx,ty){var out=new ARRAY_TYPE(6);out[0]=a;out[1]=b;out[2]=c;out[3]=d;out[4]=tx;out[5]=ty;return out}function set$1(out,a,b,c,d,tx,ty){out[0]=a;out[1]=b;out[2]=c;out[3]=d;out[4]=tx;out[5]=ty;return out}function invert$1(out,a){var aa=a[0],ab=a[1],ac=a[2],ad=a[3];var atx=a[4],aty=a[5];var det=aa*ad-ab*ac;if(!det)return null;det=1/
det;out[0]=ad*det;out[1]=-ab*det;out[2]=-ac*det;out[3]=aa*det;out[4]=(ac*aty-ad*atx)*det;out[5]=(ab*atx-aa*aty)*det;return out}function determinant$1(a){return a[0]*a[3]-a[1]*a[2]}function multiply$1(out,a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5];var b0=b[0],b1=b[1],b2=b[2],b3=b[3],b4=b[4],b5=b[5];out[0]=a0*b0+a2*b1;out[1]=a1*b0+a3*b1;out[2]=a0*b2+a2*b3;out[3]=a1*b2+a3*b3;out[4]=a0*b4+a2*b5+a4;out[5]=a1*b4+a3*b5+a5;return out}function rotate$1(out,a,rad){var a0=a[0],a1=a[1],a2=a[2],
a3=a[3],a4=a[4],a5=a[5];var s=Math.sin(rad);var c=Math.cos(rad);out[0]=a0*c+a2*s;out[1]=a1*c+a3*s;out[2]=a0*-s+a2*c;out[3]=a1*-s+a3*c;out[4]=a4;out[5]=a5;return out}function scale$1(out,a,v){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5];var v0=v[0],v1=v[1];out[0]=a0*v0;out[1]=a1*v0;out[2]=a2*v1;out[3]=a3*v1;out[4]=a4;out[5]=a5;return out}function translate(out,a,v){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5];var v0=v[0],v1=v[1];out[0]=a0;out[1]=a1;out[2]=a2;out[3]=a3;out[4]=a0*v0+a2*
v1+a4;out[5]=a1*v0+a3*v1+a5;return out}function fromRotation$1(out,rad){var s=Math.sin(rad),c=Math.cos(rad);out[0]=c;out[1]=s;out[2]=-s;out[3]=c;out[4]=0;out[5]=0;return out}function fromScaling$1(out,v){out[0]=v[0];out[1]=0;out[2]=0;out[3]=v[1];out[4]=0;out[5]=0;return out}function fromTranslation(out,v){out[0]=1;out[1]=0;out[2]=0;out[3]=1;out[4]=v[0];out[5]=v[1];return out}function str$1(a){return"mat2d("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+")"}function frob$1(a){return Math.hypot(a[0],
a[1],a[2],a[3],a[4],a[5],1)}function add$1(out,a,b){out[0]=a[0]+b[0];out[1]=a[1]+b[1];out[2]=a[2]+b[2];out[3]=a[3]+b[3];out[4]=a[4]+b[4];out[5]=a[5]+b[5];return out}function subtract$1(out,a,b){out[0]=a[0]-b[0];out[1]=a[1]-b[1];out[2]=a[2]-b[2];out[3]=a[3]-b[3];out[4]=a[4]-b[4];out[5]=a[5]-b[5];return out}function multiplyScalar$1(out,a,b){out[0]=a[0]*b;out[1]=a[1]*b;out[2]=a[2]*b;out[3]=a[3]*b;out[4]=a[4]*b;out[5]=a[5]*b;return out}function multiplyScalarAndAdd$1(out,a,b,scale){out[0]=a[0]+b[0]*
scale;out[1]=a[1]+b[1]*scale;out[2]=a[2]+b[2]*scale;out[3]=a[3]+b[3]*scale;out[4]=a[4]+b[4]*scale;out[5]=a[5]+b[5]*scale;return out}function exactEquals$1(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]&&a[4]===b[4]&&a[5]===b[5]}function equals$2(a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5];var b0=b[0],b1=b[1],b2=b[2],b3=b[3],b4=b[4],b5=b[5];return Math.abs(a0-b0)<=EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&
Math.abs(a2-b2)<=EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))&&Math.abs(a3-b3)<=EPSILON*Math.max(1,Math.abs(a3),Math.abs(b3))&&Math.abs(a4-b4)<=EPSILON*Math.max(1,Math.abs(a4),Math.abs(b4))&&Math.abs(a5-b5)<=EPSILON*Math.max(1,Math.abs(a5),Math.abs(b5))}var mul$1=multiply$1;var sub$1=subtract$1;var mat2d=Object.freeze({__proto__:null,create:create$1,clone:clone$1,copy:copy$1,identity:identity$1,fromValues:fromValues$1,set:set$1,invert:invert$1,determinant:determinant$1,multiply:multiply$1,rotate:rotate$1,
scale:scale$1,translate:translate,fromRotation:fromRotation$1,fromScaling:fromScaling$1,fromTranslation:fromTranslation,str:str$1,frob:frob$1,add:add$1,subtract:subtract$1,multiplyScalar:multiplyScalar$1,multiplyScalarAndAdd:multiplyScalarAndAdd$1,exactEquals:exactEquals$1,equals:equals$2,mul:mul$1,sub:sub$1});function create$2(){var out=new ARRAY_TYPE(9);if(ARRAY_TYPE!=Float32Array){out[1]=0;out[2]=0;out[3]=0;out[5]=0;out[6]=0;out[7]=0}out[0]=1;out[4]=1;out[8]=1;return out}function fromMat4(out,
a){out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[4];out[4]=a[5];out[5]=a[6];out[6]=a[8];out[7]=a[9];out[8]=a[10];return out}function clone$2(a){var out=new ARRAY_TYPE(9);out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];out[4]=a[4];out[5]=a[5];out[6]=a[6];out[7]=a[7];out[8]=a[8];return out}function copy$2(out,a){out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];out[4]=a[4];out[5]=a[5];out[6]=a[6];out[7]=a[7];out[8]=a[8];return out}function fromValues$2(m00,m01,m02,m10,m11,m12,m20,m21,m22){var out=new ARRAY_TYPE(9);
out[0]=m00;out[1]=m01;out[2]=m02;out[3]=m10;out[4]=m11;out[5]=m12;out[6]=m20;out[7]=m21;out[8]=m22;return out}function set$2(out,m00,m01,m02,m10,m11,m12,m20,m21,m22){out[0]=m00;out[1]=m01;out[2]=m02;out[3]=m10;out[4]=m11;out[5]=m12;out[6]=m20;out[7]=m21;out[8]=m22;return out}function identity$2(out){out[0]=1;out[1]=0;out[2]=0;out[3]=0;out[4]=1;out[5]=0;out[6]=0;out[7]=0;out[8]=1;return out}function transpose$1(out,a){if(out===a){var a01=a[1],a02=a[2],a12=a[5];out[1]=a[3];out[2]=a[6];out[3]=a01;out[5]=
a[7];out[6]=a02;out[7]=a12}else{out[0]=a[0];out[1]=a[3];out[2]=a[6];out[3]=a[1];out[4]=a[4];out[5]=a[7];out[6]=a[2];out[7]=a[5];out[8]=a[8]}return out}function invert$2(out,a){var a00=a[0],a01=a[1],a02=a[2];var a10=a[3],a11=a[4],a12=a[5];var a20=a[6],a21=a[7],a22=a[8];var b01=a22*a11-a12*a21;var b11=-a22*a10+a12*a20;var b21=a21*a10-a11*a20;var det=a00*b01+a01*b11+a02*b21;if(!det)return null;det=1/det;out[0]=b01*det;out[1]=(-a22*a01+a02*a21)*det;out[2]=(a12*a01-a02*a11)*det;out[3]=b11*det;out[4]=(a22*
a00-a02*a20)*det;out[5]=(-a12*a00+a02*a10)*det;out[6]=b21*det;out[7]=(-a21*a00+a01*a20)*det;out[8]=(a11*a00-a01*a10)*det;return out}function adjoint$1(out,a){var a00=a[0],a01=a[1],a02=a[2];var a10=a[3],a11=a[4],a12=a[5];var a20=a[6],a21=a[7],a22=a[8];out[0]=a11*a22-a12*a21;out[1]=a02*a21-a01*a22;out[2]=a01*a12-a02*a11;out[3]=a12*a20-a10*a22;out[4]=a00*a22-a02*a20;out[5]=a02*a10-a00*a12;out[6]=a10*a21-a11*a20;out[7]=a01*a20-a00*a21;out[8]=a00*a11-a01*a10;return out}function determinant$2(a){var a00=
a[0],a01=a[1],a02=a[2];var a10=a[3],a11=a[4],a12=a[5];var a20=a[6],a21=a[7],a22=a[8];return a00*(a22*a11-a12*a21)+a01*(-a22*a10+a12*a20)+a02*(a21*a10-a11*a20)}function multiply$2(out,a,b){var a00=a[0],a01=a[1],a02=a[2];var a10=a[3],a11=a[4],a12=a[5];var a20=a[6],a21=a[7],a22=a[8];var b00=b[0],b01=b[1],b02=b[2];var b10=b[3],b11=b[4],b12=b[5];var b20=b[6],b21=b[7],b22=b[8];out[0]=b00*a00+b01*a10+b02*a20;out[1]=b00*a01+b01*a11+b02*a21;out[2]=b00*a02+b01*a12+b02*a22;out[3]=b10*a00+b11*a10+b12*a20;out[4]=
b10*a01+b11*a11+b12*a21;out[5]=b10*a02+b11*a12+b12*a22;out[6]=b20*a00+b21*a10+b22*a20;out[7]=b20*a01+b21*a11+b22*a21;out[8]=b20*a02+b21*a12+b22*a22;return out}function translate$1(out,a,v){var a00=a[0],a01=a[1],a02=a[2],a10=a[3],a11=a[4],a12=a[5],a20=a[6],a21=a[7],a22=a[8],x=v[0],y=v[1];out[0]=a00;out[1]=a01;out[2]=a02;out[3]=a10;out[4]=a11;out[5]=a12;out[6]=x*a00+y*a10+a20;out[7]=x*a01+y*a11+a21;out[8]=x*a02+y*a12+a22;return out}function rotate$2(out,a,rad){var a00=a[0],a01=a[1],a02=a[2],a10=a[3],
a11=a[4],a12=a[5],a20=a[6],a21=a[7],a22=a[8],s=Math.sin(rad),c=Math.cos(rad);out[0]=c*a00+s*a10;out[1]=c*a01+s*a11;out[2]=c*a02+s*a12;out[3]=c*a10-s*a00;out[4]=c*a11-s*a01;out[5]=c*a12-s*a02;out[6]=a20;out[7]=a21;out[8]=a22;return out}function scale$2(out,a,v){var x=v[0],y=v[1];out[0]=x*a[0];out[1]=x*a[1];out[2]=x*a[2];out[3]=y*a[3];out[4]=y*a[4];out[5]=y*a[5];out[6]=a[6];out[7]=a[7];out[8]=a[8];return out}function fromTranslation$1(out,v){out[0]=1;out[1]=0;out[2]=0;out[3]=0;out[4]=1;out[5]=0;out[6]=
v[0];out[7]=v[1];out[8]=1;return out}function fromRotation$2(out,rad){var s=Math.sin(rad),c=Math.cos(rad);out[0]=c;out[1]=s;out[2]=0;out[3]=-s;out[4]=c;out[5]=0;out[6]=0;out[7]=0;out[8]=1;return out}function fromScaling$2(out,v){out[0]=v[0];out[1]=0;out[2]=0;out[3]=0;out[4]=v[1];out[5]=0;out[6]=0;out[7]=0;out[8]=1;return out}function fromMat2d(out,a){out[0]=a[0];out[1]=a[1];out[2]=0;out[3]=a[2];out[4]=a[3];out[5]=0;out[6]=a[4];out[7]=a[5];out[8]=1;return out}function fromQuat(out,q){var x=q[0],y=
q[1],z=q[2],w=q[3];var x2=x+x;var y2=y+y;var z2=z+z;var xx=x*x2;var yx=y*x2;var yy=y*y2;var zx=z*x2;var zy=z*y2;var zz=z*z2;var wx=w*x2;var wy=w*y2;var wz=w*z2;out[0]=1-yy-zz;out[3]=yx-wz;out[6]=zx+wy;out[1]=yx+wz;out[4]=1-xx-zz;out[7]=zy-wx;out[2]=zx-wy;out[5]=zy+wx;out[8]=1-xx-yy;return out}function normalFromMat4(out,a){var a00=a[0],a01=a[1],a02=a[2],a03=a[3];var a10=a[4],a11=a[5],a12=a[6],a13=a[7];var a20=a[8],a21=a[9],a22=a[10],a23=a[11];var a30=a[12],a31=a[13],a32=a[14],a33=a[15];var b00=a00*
a11-a01*a10;var b01=a00*a12-a02*a10;var b02=a00*a13-a03*a10;var b03=a01*a12-a02*a11;var b04=a01*a13-a03*a11;var b05=a02*a13-a03*a12;var b06=a20*a31-a21*a30;var b07=a20*a32-a22*a30;var b08=a20*a33-a23*a30;var b09=a21*a32-a22*a31;var b10=a21*a33-a23*a31;var b11=a22*a33-a23*a32;var det=b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;if(!det)return null;det=1/det;out[0]=(a11*b11-a12*b10+a13*b09)*det;out[1]=(a12*b08-a10*b11-a13*b07)*det;out[2]=(a10*b10-a11*b08+a13*b06)*det;out[3]=(a02*b10-a01*b11-a03*
b09)*det;out[4]=(a00*b11-a02*b08+a03*b07)*det;out[5]=(a01*b08-a00*b10-a03*b06)*det;out[6]=(a31*b05-a32*b04+a33*b03)*det;out[7]=(a32*b02-a30*b05-a33*b01)*det;out[8]=(a30*b04-a31*b02+a33*b00)*det;return out}function projection(out,width,height){out[0]=2/width;out[1]=0;out[2]=0;out[3]=0;out[4]=-2/height;out[5]=0;out[6]=-1;out[7]=1;out[8]=1;return out}function str$2(a){return"mat3("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+")"}function frob$2(a){return Math.hypot(a[0],
a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8])}function add$2(out,a,b){out[0]=a[0]+b[0];out[1]=a[1]+b[1];out[2]=a[2]+b[2];out[3]=a[3]+b[3];out[4]=a[4]+b[4];out[5]=a[5]+b[5];out[6]=a[6]+b[6];out[7]=a[7]+b[7];out[8]=a[8]+b[8];return out}function subtract$2(out,a,b){out[0]=a[0]-b[0];out[1]=a[1]-b[1];out[2]=a[2]-b[2];out[3]=a[3]-b[3];out[4]=a[4]-b[4];out[5]=a[5]-b[5];out[6]=a[6]-b[6];out[7]=a[7]-b[7];out[8]=a[8]-b[8];return out}function multiplyScalar$2(out,a,b){out[0]=a[0]*b;out[1]=a[1]*b;out[2]=a[2]*b;out[3]=
a[3]*b;out[4]=a[4]*b;out[5]=a[5]*b;out[6]=a[6]*b;out[7]=a[7]*b;out[8]=a[8]*b;return out}function multiplyScalarAndAdd$2(out,a,b,scale){out[0]=a[0]+b[0]*scale;out[1]=a[1]+b[1]*scale;out[2]=a[2]+b[2]*scale;out[3]=a[3]+b[3]*scale;out[4]=a[4]+b[4]*scale;out[5]=a[5]+b[5]*scale;out[6]=a[6]+b[6]*scale;out[7]=a[7]+b[7]*scale;out[8]=a[8]+b[8]*scale;return out}function exactEquals$2(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]&&a[4]===b[4]&&a[5]===b[5]&&a[6]===b[6]&&a[7]===b[7]&&a[8]===b[8]}
function equals$3(a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5],a6=a[6],a7=a[7],a8=a[8];var b0=b[0],b1=b[1],b2=b[2],b3=b[3],b4=b[4],b5=b[5],b6=b[6],b7=b[7],b8=b[8];return Math.abs(a0-b0)<=EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))&&Math.abs(a3-b3)<=EPSILON*Math.max(1,Math.abs(a3),Math.abs(b3))&&Math.abs(a4-b4)<=EPSILON*Math.max(1,Math.abs(a4),Math.abs(b4))&&
Math.abs(a5-b5)<=EPSILON*Math.max(1,Math.abs(a5),Math.abs(b5))&&Math.abs(a6-b6)<=EPSILON*Math.max(1,Math.abs(a6),Math.abs(b6))&&Math.abs(a7-b7)<=EPSILON*Math.max(1,Math.abs(a7),Math.abs(b7))&&Math.abs(a8-b8)<=EPSILON*Math.max(1,Math.abs(a8),Math.abs(b8))}var mul$2=multiply$2;var sub$2=subtract$2;var mat3=Object.freeze({__proto__:null,create:create$2,fromMat4:fromMat4,clone:clone$2,copy:copy$2,fromValues:fromValues$2,set:set$2,identity:identity$2,transpose:transpose$1,invert:invert$2,adjoint:adjoint$1,
determinant:determinant$2,multiply:multiply$2,translate:translate$1,rotate:rotate$2,scale:scale$2,fromTranslation:fromTranslation$1,fromRotation:fromRotation$2,fromScaling:fromScaling$2,fromMat2d:fromMat2d,fromQuat:fromQuat,normalFromMat4:normalFromMat4,projection:projection,str:str$2,frob:frob$2,add:add$2,subtract:subtract$2,multiplyScalar:multiplyScalar$2,multiplyScalarAndAdd:multiplyScalarAndAdd$2,exactEquals:exactEquals$2,equals:equals$3,mul:mul$2,sub:sub$2});function create$3(){var out=new ARRAY_TYPE(16);
if(ARRAY_TYPE!=Float32Array){out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[6]=0;out[7]=0;out[8]=0;out[9]=0;out[11]=0;out[12]=0;out[13]=0;out[14]=0}out[0]=1;out[5]=1;out[10]=1;out[15]=1;return out}function clone$3(a){var out=new ARRAY_TYPE(16);out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];out[4]=a[4];out[5]=a[5];out[6]=a[6];out[7]=a[7];out[8]=a[8];out[9]=a[9];out[10]=a[10];out[11]=a[11];out[12]=a[12];out[13]=a[13];out[14]=a[14];out[15]=a[15];return out}function copy$3(out,a){out[0]=a[0];out[1]=a[1];out[2]=
a[2];out[3]=a[3];out[4]=a[4];out[5]=a[5];out[6]=a[6];out[7]=a[7];out[8]=a[8];out[9]=a[9];out[10]=a[10];out[11]=a[11];out[12]=a[12];out[13]=a[13];out[14]=a[14];out[15]=a[15];return out}function fromValues$3(m00,m01,m02,m03,m10,m11,m12,m13,m20,m21,m22,m23,m30,m31,m32,m33){var out=new ARRAY_TYPE(16);out[0]=m00;out[1]=m01;out[2]=m02;out[3]=m03;out[4]=m10;out[5]=m11;out[6]=m12;out[7]=m13;out[8]=m20;out[9]=m21;out[10]=m22;out[11]=m23;out[12]=m30;out[13]=m31;out[14]=m32;out[15]=m33;return out}function set$3(out,
m00,m01,m02,m03,m10,m11,m12,m13,m20,m21,m22,m23,m30,m31,m32,m33){out[0]=m00;out[1]=m01;out[2]=m02;out[3]=m03;out[4]=m10;out[5]=m11;out[6]=m12;out[7]=m13;out[8]=m20;out[9]=m21;out[10]=m22;out[11]=m23;out[12]=m30;out[13]=m31;out[14]=m32;out[15]=m33;return out}function identity$3(out){out[0]=1;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=1;out[6]=0;out[7]=0;out[8]=0;out[9]=0;out[10]=1;out[11]=0;out[12]=0;out[13]=0;out[14]=0;out[15]=1;return out}function transpose$2(out,a){if(out===a){var a01=a[1],a02=
a[2],a03=a[3];var a12=a[6],a13=a[7];var a23=a[11];out[1]=a[4];out[2]=a[8];out[3]=a[12];out[4]=a01;out[6]=a[9];out[7]=a[13];out[8]=a02;out[9]=a12;out[11]=a[14];out[12]=a03;out[13]=a13;out[14]=a23}else{out[0]=a[0];out[1]=a[4];out[2]=a[8];out[3]=a[12];out[4]=a[1];out[5]=a[5];out[6]=a[9];out[7]=a[13];out[8]=a[2];out[9]=a[6];out[10]=a[10];out[11]=a[14];out[12]=a[3];out[13]=a[7];out[14]=a[11];out[15]=a[15]}return out}function invert$3(out,a){var a00=a[0],a01=a[1],a02=a[2],a03=a[3];var a10=a[4],a11=a[5],
a12=a[6],a13=a[7];var a20=a[8],a21=a[9],a22=a[10],a23=a[11];var a30=a[12],a31=a[13],a32=a[14],a33=a[15];var b00=a00*a11-a01*a10;var b01=a00*a12-a02*a10;var b02=a00*a13-a03*a10;var b03=a01*a12-a02*a11;var b04=a01*a13-a03*a11;var b05=a02*a13-a03*a12;var b06=a20*a31-a21*a30;var b07=a20*a32-a22*a30;var b08=a20*a33-a23*a30;var b09=a21*a32-a22*a31;var b10=a21*a33-a23*a31;var b11=a22*a33-a23*a32;var det=b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;if(!det)return null;det=1/det;out[0]=(a11*b11-a12*b10+
a13*b09)*det;out[1]=(a02*b10-a01*b11-a03*b09)*det;out[2]=(a31*b05-a32*b04+a33*b03)*det;out[3]=(a22*b04-a21*b05-a23*b03)*det;out[4]=(a12*b08-a10*b11-a13*b07)*det;out[5]=(a00*b11-a02*b08+a03*b07)*det;out[6]=(a32*b02-a30*b05-a33*b01)*det;out[7]=(a20*b05-a22*b02+a23*b01)*det;out[8]=(a10*b10-a11*b08+a13*b06)*det;out[9]=(a01*b08-a00*b10-a03*b06)*det;out[10]=(a30*b04-a31*b02+a33*b00)*det;out[11]=(a21*b02-a20*b04-a23*b00)*det;out[12]=(a11*b07-a10*b09-a12*b06)*det;out[13]=(a00*b09-a01*b07+a02*b06)*det;out[14]=
(a31*b01-a30*b03-a32*b00)*det;out[15]=(a20*b03-a21*b01+a22*b00)*det;return out}function adjoint$2(out,a){var a00=a[0],a01=a[1],a02=a[2],a03=a[3];var a10=a[4],a11=a[5],a12=a[6],a13=a[7];var a20=a[8],a21=a[9],a22=a[10],a23=a[11];var a30=a[12],a31=a[13],a32=a[14],a33=a[15];out[0]=a11*(a22*a33-a23*a32)-a21*(a12*a33-a13*a32)+a31*(a12*a23-a13*a22);out[1]=-(a01*(a22*a33-a23*a32)-a21*(a02*a33-a03*a32)+a31*(a02*a23-a03*a22));out[2]=a01*(a12*a33-a13*a32)-a11*(a02*a33-a03*a32)+a31*(a02*a13-a03*a12);out[3]=-(a01*
(a12*a23-a13*a22)-a11*(a02*a23-a03*a22)+a21*(a02*a13-a03*a12));out[4]=-(a10*(a22*a33-a23*a32)-a20*(a12*a33-a13*a32)+a30*(a12*a23-a13*a22));out[5]=a00*(a22*a33-a23*a32)-a20*(a02*a33-a03*a32)+a30*(a02*a23-a03*a22);out[6]=-(a00*(a12*a33-a13*a32)-a10*(a02*a33-a03*a32)+a30*(a02*a13-a03*a12));out[7]=a00*(a12*a23-a13*a22)-a10*(a02*a23-a03*a22)+a20*(a02*a13-a03*a12);out[8]=a10*(a21*a33-a23*a31)-a20*(a11*a33-a13*a31)+a30*(a11*a23-a13*a21);out[9]=-(a00*(a21*a33-a23*a31)-a20*(a01*a33-a03*a31)+a30*(a01*a23-a03*
a21));out[10]=a00*(a11*a33-a13*a31)-a10*(a01*a33-a03*a31)+a30*(a01*a13-a03*a11);out[11]=-(a00*(a11*a23-a13*a21)-a10*(a01*a23-a03*a21)+a20*(a01*a13-a03*a11));out[12]=-(a10*(a21*a32-a22*a31)-a20*(a11*a32-a12*a31)+a30*(a11*a22-a12*a21));out[13]=a00*(a21*a32-a22*a31)-a20*(a01*a32-a02*a31)+a30*(a01*a22-a02*a21);out[14]=-(a00*(a11*a32-a12*a31)-a10*(a01*a32-a02*a31)+a30*(a01*a12-a02*a11));out[15]=a00*(a11*a22-a12*a21)-a10*(a01*a22-a02*a21)+a20*(a01*a12-a02*a11);return out}function determinant$3(a){var a00=
a[0],a01=a[1],a02=a[2],a03=a[3];var a10=a[4],a11=a[5],a12=a[6],a13=a[7];var a20=a[8],a21=a[9],a22=a[10],a23=a[11];var a30=a[12],a31=a[13],a32=a[14],a33=a[15];var b00=a00*a11-a01*a10;var b01=a00*a12-a02*a10;var b02=a00*a13-a03*a10;var b03=a01*a12-a02*a11;var b04=a01*a13-a03*a11;var b05=a02*a13-a03*a12;var b06=a20*a31-a21*a30;var b07=a20*a32-a22*a30;var b08=a20*a33-a23*a30;var b09=a21*a32-a22*a31;var b10=a21*a33-a23*a31;var b11=a22*a33-a23*a32;return b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06}
function multiply$3(out,a,b){var a00=a[0],a01=a[1],a02=a[2],a03=a[3];var a10=a[4],a11=a[5],a12=a[6],a13=a[7];var a20=a[8],a21=a[9],a22=a[10],a23=a[11];var a30=a[12],a31=a[13],a32=a[14],a33=a[15];var b0=b[0],b1=b[1],b2=b[2],b3=b[3];out[0]=b0*a00+b1*a10+b2*a20+b3*a30;out[1]=b0*a01+b1*a11+b2*a21+b3*a31;out[2]=b0*a02+b1*a12+b2*a22+b3*a32;out[3]=b0*a03+b1*a13+b2*a23+b3*a33;b0=b[4];b1=b[5];b2=b[6];b3=b[7];out[4]=b0*a00+b1*a10+b2*a20+b3*a30;out[5]=b0*a01+b1*a11+b2*a21+b3*a31;out[6]=b0*a02+b1*a12+b2*a22+
b3*a32;out[7]=b0*a03+b1*a13+b2*a23+b3*a33;b0=b[8];b1=b[9];b2=b[10];b3=b[11];out[8]=b0*a00+b1*a10+b2*a20+b3*a30;out[9]=b0*a01+b1*a11+b2*a21+b3*a31;out[10]=b0*a02+b1*a12+b2*a22+b3*a32;out[11]=b0*a03+b1*a13+b2*a23+b3*a33;b0=b[12];b1=b[13];b2=b[14];b3=b[15];out[12]=b0*a00+b1*a10+b2*a20+b3*a30;out[13]=b0*a01+b1*a11+b2*a21+b3*a31;out[14]=b0*a02+b1*a12+b2*a22+b3*a32;out[15]=b0*a03+b1*a13+b2*a23+b3*a33;return out}function translate$2(out,a,v){var x=v[0],y=v[1],z=v[2];var a00,a01,a02,a03;var a10,a11,a12,a13;
var a20,a21,a22,a23;if(a===out){out[12]=a[0]*x+a[4]*y+a[8]*z+a[12];out[13]=a[1]*x+a[5]*y+a[9]*z+a[13];out[14]=a[2]*x+a[6]*y+a[10]*z+a[14];out[15]=a[3]*x+a[7]*y+a[11]*z+a[15]}else{a00=a[0];a01=a[1];a02=a[2];a03=a[3];a10=a[4];a11=a[5];a12=a[6];a13=a[7];a20=a[8];a21=a[9];a22=a[10];a23=a[11];out[0]=a00;out[1]=a01;out[2]=a02;out[3]=a03;out[4]=a10;out[5]=a11;out[6]=a12;out[7]=a13;out[8]=a20;out[9]=a21;out[10]=a22;out[11]=a23;out[12]=a00*x+a10*y+a20*z+a[12];out[13]=a01*x+a11*y+a21*z+a[13];out[14]=a02*x+
a12*y+a22*z+a[14];out[15]=a03*x+a13*y+a23*z+a[15]}return out}function scale$3(out,a,v){var x=v[0],y=v[1],z=v[2];out[0]=a[0]*x;out[1]=a[1]*x;out[2]=a[2]*x;out[3]=a[3]*x;out[4]=a[4]*y;out[5]=a[5]*y;out[6]=a[6]*y;out[7]=a[7]*y;out[8]=a[8]*z;out[9]=a[9]*z;out[10]=a[10]*z;out[11]=a[11]*z;out[12]=a[12];out[13]=a[13];out[14]=a[14];out[15]=a[15];return out}function rotate$3(out,a,rad,axis){var x=axis[0],y=axis[1],z=axis[2];var len=Math.hypot(x,y,z);var s,c,t;var a00,a01,a02,a03;var a10,a11,a12,a13;var a20,
a21,a22,a23;var b00,b01,b02;var b10,b11,b12;var b20,b21,b22;if(len<EPSILON)return null;len=1/len;x*=len;y*=len;z*=len;s=Math.sin(rad);c=Math.cos(rad);t=1-c;a00=a[0];a01=a[1];a02=a[2];a03=a[3];a10=a[4];a11=a[5];a12=a[6];a13=a[7];a20=a[8];a21=a[9];a22=a[10];a23=a[11];b00=x*x*t+c;b01=y*x*t+z*s;b02=z*x*t-y*s;b10=x*y*t-z*s;b11=y*y*t+c;b12=z*y*t+x*s;b20=x*z*t+y*s;b21=y*z*t-x*s;b22=z*z*t+c;out[0]=a00*b00+a10*b01+a20*b02;out[1]=a01*b00+a11*b01+a21*b02;out[2]=a02*b00+a12*b01+a22*b02;out[3]=a03*b00+a13*b01+
a23*b02;out[4]=a00*b10+a10*b11+a20*b12;out[5]=a01*b10+a11*b11+a21*b12;out[6]=a02*b10+a12*b11+a22*b12;out[7]=a03*b10+a13*b11+a23*b12;out[8]=a00*b20+a10*b21+a20*b22;out[9]=a01*b20+a11*b21+a21*b22;out[10]=a02*b20+a12*b21+a22*b22;out[11]=a03*b20+a13*b21+a23*b22;if(a!==out){out[12]=a[12];out[13]=a[13];out[14]=a[14];out[15]=a[15]}return out}function rotateX(out,a,rad){var s=Math.sin(rad);var c=Math.cos(rad);var a10=a[4];var a11=a[5];var a12=a[6];var a13=a[7];var a20=a[8];var a21=a[9];var a22=a[10];var a23=
a[11];if(a!==out){out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];out[12]=a[12];out[13]=a[13];out[14]=a[14];out[15]=a[15]}out[4]=a10*c+a20*s;out[5]=a11*c+a21*s;out[6]=a12*c+a22*s;out[7]=a13*c+a23*s;out[8]=a20*c-a10*s;out[9]=a21*c-a11*s;out[10]=a22*c-a12*s;out[11]=a23*c-a13*s;return out}function rotateY(out,a,rad){var s=Math.sin(rad);var c=Math.cos(rad);var a00=a[0];var a01=a[1];var a02=a[2];var a03=a[3];var a20=a[8];var a21=a[9];var a22=a[10];var a23=a[11];if(a!==out){out[4]=a[4];out[5]=a[5];out[6]=
a[6];out[7]=a[7];out[12]=a[12];out[13]=a[13];out[14]=a[14];out[15]=a[15]}out[0]=a00*c-a20*s;out[1]=a01*c-a21*s;out[2]=a02*c-a22*s;out[3]=a03*c-a23*s;out[8]=a00*s+a20*c;out[9]=a01*s+a21*c;out[10]=a02*s+a22*c;out[11]=a03*s+a23*c;return out}function rotateZ(out,a,rad){var s=Math.sin(rad);var c=Math.cos(rad);var a00=a[0];var a01=a[1];var a02=a[2];var a03=a[3];var a10=a[4];var a11=a[5];var a12=a[6];var a13=a[7];if(a!==out){out[8]=a[8];out[9]=a[9];out[10]=a[10];out[11]=a[11];out[12]=a[12];out[13]=a[13];
out[14]=a[14];out[15]=a[15]}out[0]=a00*c+a10*s;out[1]=a01*c+a11*s;out[2]=a02*c+a12*s;out[3]=a03*c+a13*s;out[4]=a10*c-a00*s;out[5]=a11*c-a01*s;out[6]=a12*c-a02*s;out[7]=a13*c-a03*s;return out}function fromTranslation$2(out,v){out[0]=1;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=1;out[6]=0;out[7]=0;out[8]=0;out[9]=0;out[10]=1;out[11]=0;out[12]=v[0];out[13]=v[1];out[14]=v[2];out[15]=1;return out}function fromScaling$3(out,v){out[0]=v[0];out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=v[1];out[6]=0;out[7]=
0;out[8]=0;out[9]=0;out[10]=v[2];out[11]=0;out[12]=0;out[13]=0;out[14]=0;out[15]=1;return out}function fromRotation$3(out,rad,axis){var x=axis[0],y=axis[1],z=axis[2];var len=Math.hypot(x,y,z);var s,c,t;if(len<EPSILON)return null;len=1/len;x*=len;y*=len;z*=len;s=Math.sin(rad);c=Math.cos(rad);t=1-c;out[0]=x*x*t+c;out[1]=y*x*t+z*s;out[2]=z*x*t-y*s;out[3]=0;out[4]=x*y*t-z*s;out[5]=y*y*t+c;out[6]=z*y*t+x*s;out[7]=0;out[8]=x*z*t+y*s;out[9]=y*z*t-x*s;out[10]=z*z*t+c;out[11]=0;out[12]=0;out[13]=0;out[14]=
0;out[15]=1;return out}function fromXRotation(out,rad){var s=Math.sin(rad);var c=Math.cos(rad);out[0]=1;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=c;out[6]=s;out[7]=0;out[8]=0;out[9]=-s;out[10]=c;out[11]=0;out[12]=0;out[13]=0;out[14]=0;out[15]=1;return out}function fromYRotation(out,rad){var s=Math.sin(rad);var c=Math.cos(rad);out[0]=c;out[1]=0;out[2]=-s;out[3]=0;out[4]=0;out[5]=1;out[6]=0;out[7]=0;out[8]=s;out[9]=0;out[10]=c;out[11]=0;out[12]=0;out[13]=0;out[14]=0;out[15]=1;return out}function fromZRotation(out,
rad){var s=Math.sin(rad);var c=Math.cos(rad);out[0]=c;out[1]=s;out[2]=0;out[3]=0;out[4]=-s;out[5]=c;out[6]=0;out[7]=0;out[8]=0;out[9]=0;out[10]=1;out[11]=0;out[12]=0;out[13]=0;out[14]=0;out[15]=1;return out}function fromRotationTranslation(out,q,v){var x=q[0],y=q[1],z=q[2],w=q[3];var x2=x+x;var y2=y+y;var z2=z+z;var xx=x*x2;var xy=x*y2;var xz=x*z2;var yy=y*y2;var yz=y*z2;var zz=z*z2;var wx=w*x2;var wy=w*y2;var wz=w*z2;out[0]=1-(yy+zz);out[1]=xy+wz;out[2]=xz-wy;out[3]=0;out[4]=xy-wz;out[5]=1-(xx+zz);
out[6]=yz+wx;out[7]=0;out[8]=xz+wy;out[9]=yz-wx;out[10]=1-(xx+yy);out[11]=0;out[12]=v[0];out[13]=v[1];out[14]=v[2];out[15]=1;return out}function fromQuat2(out,a){var translation=new ARRAY_TYPE(3);var bx=-a[0],by=-a[1],bz=-a[2],bw=a[3],ax=a[4],ay=a[5],az=a[6],aw=a[7];var magnitude=bx*bx+by*by+bz*bz+bw*bw;if(magnitude>0){translation[0]=(ax*bw+aw*bx+ay*bz-az*by)*2/magnitude;translation[1]=(ay*bw+aw*by+az*bx-ax*bz)*2/magnitude;translation[2]=(az*bw+aw*bz+ax*by-ay*bx)*2/magnitude}else{translation[0]=(ax*
bw+aw*bx+ay*bz-az*by)*2;translation[1]=(ay*bw+aw*by+az*bx-ax*bz)*2;translation[2]=(az*bw+aw*bz+ax*by-ay*bx)*2}fromRotationTranslation(out,a,translation);return out}function getTranslation(out,mat){out[0]=mat[12];out[1]=mat[13];out[2]=mat[14];return out}function getScaling(out,mat){var m11=mat[0];var m12=mat[1];var m13=mat[2];var m21=mat[4];var m22=mat[5];var m23=mat[6];var m31=mat[8];var m32=mat[9];var m33=mat[10];out[0]=Math.hypot(m11,m12,m13);out[1]=Math.hypot(m21,m22,m23);out[2]=Math.hypot(m31,
m32,m33);return out}function getRotation(out,mat){var scaling=new ARRAY_TYPE(3);getScaling(scaling,mat);var is1=1/scaling[0];var is2=1/scaling[1];var is3=1/scaling[2];var sm11=mat[0]*is1;var sm12=mat[1]*is2;var sm13=mat[2]*is3;var sm21=mat[4]*is1;var sm22=mat[5]*is2;var sm23=mat[6]*is3;var sm31=mat[8]*is1;var sm32=mat[9]*is2;var sm33=mat[10]*is3;var trace=sm11+sm22+sm33;var S=0;if(trace>0){S=Math.sqrt(trace+1)*2;out[3]=.25*S;out[0]=(sm23-sm32)/S;out[1]=(sm31-sm13)/S;out[2]=(sm12-sm21)/S}else if(sm11>
sm22&&sm11>sm33){S=Math.sqrt(1+sm11-sm22-sm33)*2;out[3]=(sm23-sm32)/S;out[0]=.25*S;out[1]=(sm12+sm21)/S;out[2]=(sm31+sm13)/S}else if(sm22>sm33){S=Math.sqrt(1+sm22-sm11-sm33)*2;out[3]=(sm31-sm13)/S;out[0]=(sm12+sm21)/S;out[1]=.25*S;out[2]=(sm23+sm32)/S}else{S=Math.sqrt(1+sm33-sm11-sm22)*2;out[3]=(sm12-sm21)/S;out[0]=(sm31+sm13)/S;out[1]=(sm23+sm32)/S;out[2]=.25*S}return out}function fromRotationTranslationScale(out,q,v,s){var x=q[0],y=q[1],z=q[2],w=q[3];var x2=x+x;var y2=y+y;var z2=z+z;var xx=x*x2;
var xy=x*y2;var xz=x*z2;var yy=y*y2;var yz=y*z2;var zz=z*z2;var wx=w*x2;var wy=w*y2;var wz=w*z2;var sx=s[0];var sy=s[1];var sz=s[2];out[0]=(1-(yy+zz))*sx;out[1]=(xy+wz)*sx;out[2]=(xz-wy)*sx;out[3]=0;out[4]=(xy-wz)*sy;out[5]=(1-(xx+zz))*sy;out[6]=(yz+wx)*sy;out[7]=0;out[8]=(xz+wy)*sz;out[9]=(yz-wx)*sz;out[10]=(1-(xx+yy))*sz;out[11]=0;out[12]=v[0];out[13]=v[1];out[14]=v[2];out[15]=1;return out}function fromRotationTranslationScaleOrigin(out,q,v,s,o){var x=q[0],y=q[1],z=q[2],w=q[3];var x2=x+x;var y2=
y+y;var z2=z+z;var xx=x*x2;var xy=x*y2;var xz=x*z2;var yy=y*y2;var yz=y*z2;var zz=z*z2;var wx=w*x2;var wy=w*y2;var wz=w*z2;var sx=s[0];var sy=s[1];var sz=s[2];var ox=o[0];var oy=o[1];var oz=o[2];var out0=(1-(yy+zz))*sx;var out1=(xy+wz)*sx;var out2=(xz-wy)*sx;var out4=(xy-wz)*sy;var out5=(1-(xx+zz))*sy;var out6=(yz+wx)*sy;var out8=(xz+wy)*sz;var out9=(yz-wx)*sz;var out10=(1-(xx+yy))*sz;out[0]=out0;out[1]=out1;out[2]=out2;out[3]=0;out[4]=out4;out[5]=out5;out[6]=out6;out[7]=0;out[8]=out8;out[9]=out9;
out[10]=out10;out[11]=0;out[12]=v[0]+ox-(out0*ox+out4*oy+out8*oz);out[13]=v[1]+oy-(out1*ox+out5*oy+out9*oz);out[14]=v[2]+oz-(out2*ox+out6*oy+out10*oz);out[15]=1;return out}function fromQuat$1(out,q){var x=q[0],y=q[1],z=q[2],w=q[3];var x2=x+x;var y2=y+y;var z2=z+z;var xx=x*x2;var yx=y*x2;var yy=y*y2;var zx=z*x2;var zy=z*y2;var zz=z*z2;var wx=w*x2;var wy=w*y2;var wz=w*z2;out[0]=1-yy-zz;out[1]=yx+wz;out[2]=zx-wy;out[3]=0;out[4]=yx-wz;out[5]=1-xx-zz;out[6]=zy+wx;out[7]=0;out[8]=zx+wy;out[9]=zy-wx;out[10]=
1-xx-yy;out[11]=0;out[12]=0;out[13]=0;out[14]=0;out[15]=1;return out}function frustum(out,left,right,bottom,top,near,far){var rl=1/(right-left);var tb=1/(top-bottom);var nf=1/(near-far);out[0]=near*2*rl;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=near*2*tb;out[6]=0;out[7]=0;out[8]=(right+left)*rl;out[9]=(top+bottom)*tb;out[10]=(far+near)*nf;out[11]=-1;out[12]=0;out[13]=0;out[14]=far*near*2*nf;out[15]=0;return out}function perspective(out,fovy,aspect,near,far){var f=1/Math.tan(fovy/2),nf;out[0]=f/aspect;
out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=f;out[6]=0;out[7]=0;out[8]=0;out[9]=0;out[11]=-1;out[12]=0;out[13]=0;out[15]=0;if(far!=null&&far!==Infinity){nf=1/(near-far);out[10]=(far+near)*nf;out[14]=2*far*near*nf}else{out[10]=-1;out[14]=-2*near}return out}function perspectiveFromFieldOfView(out,fov,near,far){var upTan=Math.tan(fov.upDegrees*Math.PI/180);var downTan=Math.tan(fov.downDegrees*Math.PI/180);var leftTan=Math.tan(fov.leftDegrees*Math.PI/180);var rightTan=Math.tan(fov.rightDegrees*Math.PI/
180);var xScale=2/(leftTan+rightTan);var yScale=2/(upTan+downTan);out[0]=xScale;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=yScale;out[6]=0;out[7]=0;out[8]=-((leftTan-rightTan)*xScale*.5);out[9]=(upTan-downTan)*yScale*.5;out[10]=far/(near-far);out[11]=-1;out[12]=0;out[13]=0;out[14]=far*near/(near-far);out[15]=0;return out}function ortho(out,left,right,bottom,top,near,far){var lr=1/(left-right);var bt=1/(bottom-top);var nf=1/(near-far);out[0]=-2*lr;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=-2*bt;out[6]=
0;out[7]=0;out[8]=0;out[9]=0;out[10]=2*nf;out[11]=0;out[12]=(left+right)*lr;out[13]=(top+bottom)*bt;out[14]=(far+near)*nf;out[15]=1;return out}function lookAt(out,eye,center,up){var x0,x1,x2,y0,y1,y2,z0,z1,z2,len;var eyex=eye[0];var eyey=eye[1];var eyez=eye[2];var upx=up[0];var upy=up[1];var upz=up[2];var centerx=center[0];var centery=center[1];var centerz=center[2];if(Math.abs(eyex-centerx)<EPSILON&&Math.abs(eyey-centery)<EPSILON&&Math.abs(eyez-centerz)<EPSILON)return identity$3(out);z0=eyex-centerx;
z1=eyey-centery;z2=eyez-centerz;len=1/Math.hypot(z0,z1,z2);z0*=len;z1*=len;z2*=len;x0=upy*z2-upz*z1;x1=upz*z0-upx*z2;x2=upx*z1-upy*z0;len=Math.hypot(x0,x1,x2);if(!len){x0=0;x1=0;x2=0}else{len=1/len;x0*=len;x1*=len;x2*=len}y0=z1*x2-z2*x1;y1=z2*x0-z0*x2;y2=z0*x1-z1*x0;len=Math.hypot(y0,y1,y2);if(!len){y0=0;y1=0;y2=0}else{len=1/len;y0*=len;y1*=len;y2*=len}out[0]=x0;out[1]=y0;out[2]=z0;out[3]=0;out[4]=x1;out[5]=y1;out[6]=z1;out[7]=0;out[8]=x2;out[9]=y2;out[10]=z2;out[11]=0;out[12]=-(x0*eyex+x1*eyey+x2*
eyez);out[13]=-(y0*eyex+y1*eyey+y2*eyez);out[14]=-(z0*eyex+z1*eyey+z2*eyez);out[15]=1;return out}function targetTo(out,eye,target,up){var eyex=eye[0],eyey=eye[1],eyez=eye[2],upx=up[0],upy=up[1],upz=up[2];var z0=eyex-target[0],z1=eyey-target[1],z2=eyez-target[2];var len=z0*z0+z1*z1+z2*z2;if(len>0){len=1/Math.sqrt(len);z0*=len;z1*=len;z2*=len}var x0=upy*z2-upz*z1,x1=upz*z0-upx*z2,x2=upx*z1-upy*z0;len=x0*x0+x1*x1+x2*x2;if(len>0){len=1/Math.sqrt(len);x0*=len;x1*=len;x2*=len}out[0]=x0;out[1]=x1;out[2]=
x2;out[3]=0;out[4]=z1*x2-z2*x1;out[5]=z2*x0-z0*x2;out[6]=z0*x1-z1*x0;out[7]=0;out[8]=z0;out[9]=z1;out[10]=z2;out[11]=0;out[12]=eyex;out[13]=eyey;out[14]=eyez;out[15]=1;return out}function str$3(a){return"mat4("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+", "+a[9]+", "+a[10]+", "+a[11]+", "+a[12]+", "+a[13]+", "+a[14]+", "+a[15]+")"}function frob$3(a){return Math.hypot(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15])}function add$3(out,
a,b){out[0]=a[0]+b[0];out[1]=a[1]+b[1];out[2]=a[2]+b[2];out[3]=a[3]+b[3];out[4]=a[4]+b[4];out[5]=a[5]+b[5];out[6]=a[6]+b[6];out[7]=a[7]+b[7];out[8]=a[8]+b[8];out[9]=a[9]+b[9];out[10]=a[10]+b[10];out[11]=a[11]+b[11];out[12]=a[12]+b[12];out[13]=a[13]+b[13];out[14]=a[14]+b[14];out[15]=a[15]+b[15];return out}function subtract$3(out,a,b){out[0]=a[0]-b[0];out[1]=a[1]-b[1];out[2]=a[2]-b[2];out[3]=a[3]-b[3];out[4]=a[4]-b[4];out[5]=a[5]-b[5];out[6]=a[6]-b[6];out[7]=a[7]-b[7];out[8]=a[8]-b[8];out[9]=a[9]-b[9];
out[10]=a[10]-b[10];out[11]=a[11]-b[11];out[12]=a[12]-b[12];out[13]=a[13]-b[13];out[14]=a[14]-b[14];out[15]=a[15]-b[15];return out}function multiplyScalar$3(out,a,b){out[0]=a[0]*b;out[1]=a[1]*b;out[2]=a[2]*b;out[3]=a[3]*b;out[4]=a[4]*b;out[5]=a[5]*b;out[6]=a[6]*b;out[7]=a[7]*b;out[8]=a[8]*b;out[9]=a[9]*b;out[10]=a[10]*b;out[11]=a[11]*b;out[12]=a[12]*b;out[13]=a[13]*b;out[14]=a[14]*b;out[15]=a[15]*b;return out}function multiplyScalarAndAdd$3(out,a,b,scale){out[0]=a[0]+b[0]*scale;out[1]=a[1]+b[1]*scale;
out[2]=a[2]+b[2]*scale;out[3]=a[3]+b[3]*scale;out[4]=a[4]+b[4]*scale;out[5]=a[5]+b[5]*scale;out[6]=a[6]+b[6]*scale;out[7]=a[7]+b[7]*scale;out[8]=a[8]+b[8]*scale;out[9]=a[9]+b[9]*scale;out[10]=a[10]+b[10]*scale;out[11]=a[11]+b[11]*scale;out[12]=a[12]+b[12]*scale;out[13]=a[13]+b[13]*scale;out[14]=a[14]+b[14]*scale;out[15]=a[15]+b[15]*scale;return out}function exactEquals$3(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]&&a[4]===b[4]&&a[5]===b[5]&&a[6]===b[6]&&a[7]===b[7]&&a[8]===b[8]&&
a[9]===b[9]&&a[10]===b[10]&&a[11]===b[11]&&a[12]===b[12]&&a[13]===b[13]&&a[14]===b[14]&&a[15]===b[15]}function equals$4(a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3];var a4=a[4],a5=a[5],a6=a[6],a7=a[7];var a8=a[8],a9=a[9],a10=a[10],a11=a[11];var a12=a[12],a13=a[13],a14=a[14],a15=a[15];var b0=b[0],b1=b[1],b2=b[2],b3=b[3];var b4=b[4],b5=b[5],b6=b[6],b7=b[7];var b8=b[8],b9=b[9],b10=b[10],b11=b[11];var b12=b[12],b13=b[13],b14=b[14],b15=b[15];return Math.abs(a0-b0)<=EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&
Math.abs(a1-b1)<=EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))&&Math.abs(a3-b3)<=EPSILON*Math.max(1,Math.abs(a3),Math.abs(b3))&&Math.abs(a4-b4)<=EPSILON*Math.max(1,Math.abs(a4),Math.abs(b4))&&Math.abs(a5-b5)<=EPSILON*Math.max(1,Math.abs(a5),Math.abs(b5))&&Math.abs(a6-b6)<=EPSILON*Math.max(1,Math.abs(a6),Math.abs(b6))&&Math.abs(a7-b7)<=EPSILON*Math.max(1,Math.abs(a7),Math.abs(b7))&&Math.abs(a8-b8)<=EPSILON*Math.max(1,Math.abs(a8),Math.abs(b8))&&
Math.abs(a9-b9)<=EPSILON*Math.max(1,Math.abs(a9),Math.abs(b9))&&Math.abs(a10-b10)<=EPSILON*Math.max(1,Math.abs(a10),Math.abs(b10))&&Math.abs(a11-b11)<=EPSILON*Math.max(1,Math.abs(a11),Math.abs(b11))&&Math.abs(a12-b12)<=EPSILON*Math.max(1,Math.abs(a12),Math.abs(b12))&&Math.abs(a13-b13)<=EPSILON*Math.max(1,Math.abs(a13),Math.abs(b13))&&Math.abs(a14-b14)<=EPSILON*Math.max(1,Math.abs(a14),Math.abs(b14))&&Math.abs(a15-b15)<=EPSILON*Math.max(1,Math.abs(a15),Math.abs(b15))}var mul$3=multiply$3;var sub$3=
subtract$3;var mat4=Object.freeze({__proto__:null,create:create$3,clone:clone$3,copy:copy$3,fromValues:fromValues$3,set:set$3,identity:identity$3,transpose:transpose$2,invert:invert$3,adjoint:adjoint$2,determinant:determinant$3,multiply:multiply$3,translate:translate$2,scale:scale$3,rotate:rotate$3,rotateX:rotateX,rotateY:rotateY,rotateZ:rotateZ,fromTranslation:fromTranslation$2,fromScaling:fromScaling$3,fromRotation:fromRotation$3,fromXRotation:fromXRotation,fromYRotation:fromYRotation,fromZRotation:fromZRotation,
fromRotationTranslation:fromRotationTranslation,fromQuat2:fromQuat2,getTranslation:getTranslation,getScaling:getScaling,getRotation:getRotation,fromRotationTranslationScale:fromRotationTranslationScale,fromRotationTranslationScaleOrigin:fromRotationTranslationScaleOrigin,fromQuat:fromQuat$1,frustum:frustum,perspective:perspective,perspectiveFromFieldOfView:perspectiveFromFieldOfView,ortho:ortho,lookAt:lookAt,targetTo:targetTo,str:str$3,frob:frob$3,add:add$3,subtract:subtract$3,multiplyScalar:multiplyScalar$3,
multiplyScalarAndAdd:multiplyScalarAndAdd$3,exactEquals:exactEquals$3,equals:equals$4,mul:mul$3,sub:sub$3});function create$4(){var out=new ARRAY_TYPE(3);if(ARRAY_TYPE!=Float32Array){out[0]=0;out[1]=0;out[2]=0}return out}function clone$4(a){var out=new ARRAY_TYPE(3);out[0]=a[0];out[1]=a[1];out[2]=a[2];return out}function length(a){var x=a[0];var y=a[1];var z=a[2];return Math.hypot(x,y,z)}function fromValues$4(x,y,z){var out=new ARRAY_TYPE(3);out[0]=x;out[1]=y;out[2]=z;return out}function copy$4(out,
a){out[0]=a[0];out[1]=a[1];out[2]=a[2];return out}function set$4(out,x,y,z){out[0]=x;out[1]=y;out[2]=z;return out}function add$4(out,a,b){out[0]=a[0]+b[0];out[1]=a[1]+b[1];out[2]=a[2]+b[2];return out}function subtract$4(out,a,b){out[0]=a[0]-b[0];out[1]=a[1]-b[1];out[2]=a[2]-b[2];return out}function multiply$4(out,a,b){out[0]=a[0]*b[0];out[1]=a[1]*b[1];out[2]=a[2]*b[2];return out}function divide(out,a,b){out[0]=a[0]/b[0];out[1]=a[1]/b[1];out[2]=a[2]/b[2];return out}function ceil(out,a){out[0]=Math.ceil(a[0]);
out[1]=Math.ceil(a[1]);out[2]=Math.ceil(a[2]);return out}function floor(out,a){out[0]=Math.floor(a[0]);out[1]=Math.floor(a[1]);out[2]=Math.floor(a[2]);return out}function min(out,a,b){out[0]=Math.min(a[0],b[0]);out[1]=Math.min(a[1],b[1]);out[2]=Math.min(a[2],b[2]);return out}function max(out,a,b){out[0]=Math.max(a[0],b[0]);out[1]=Math.max(a[1],b[1]);out[2]=Math.max(a[2],b[2]);return out}function round(out,a){out[0]=Math.round(a[0]);out[1]=Math.round(a[1]);out[2]=Math.round(a[2]);return out}function scale$4(out,
a,b){out[0]=a[0]*b;out[1]=a[1]*b;out[2]=a[2]*b;return out}function scaleAndAdd(out,a,b,scale){out[0]=a[0]+b[0]*scale;out[1]=a[1]+b[1]*scale;out[2]=a[2]+b[2]*scale;return out}function distance(a,b){var x=b[0]-a[0];var y=b[1]-a[1];var z=b[2]-a[2];return Math.hypot(x,y,z)}function squaredDistance(a,b){var x=b[0]-a[0];var y=b[1]-a[1];var z=b[2]-a[2];return x*x+y*y+z*z}function squaredLength(a){var x=a[0];var y=a[1];var z=a[2];return x*x+y*y+z*z}function negate(out,a){out[0]=-a[0];out[1]=-a[1];out[2]=
-a[2];return out}function inverse(out,a){out[0]=1/a[0];out[1]=1/a[1];out[2]=1/a[2];return out}function normalize(out,a){var x=a[0];var y=a[1];var z=a[2];var len=x*x+y*y+z*z;if(len>0)len=1/Math.sqrt(len);out[0]=a[0]*len;out[1]=a[1]*len;out[2]=a[2]*len;return out}function dot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]}function cross(out,a,b){var ax=a[0],ay=a[1],az=a[2];var bx=b[0],by=b[1],bz=b[2];out[0]=ay*bz-az*by;out[1]=az*bx-ax*bz;out[2]=ax*by-ay*bx;return out}function lerp(out,a,b,t){var ax=a[0];
var ay=a[1];var az=a[2];out[0]=ax+t*(b[0]-ax);out[1]=ay+t*(b[1]-ay);out[2]=az+t*(b[2]-az);return out}function hermite(out,a,b,c,d,t){var factorTimes2=t*t;var factor1=factorTimes2*(2*t-3)+1;var factor2=factorTimes2*(t-2)+t;var factor3=factorTimes2*(t-1);var factor4=factorTimes2*(3-2*t);out[0]=a[0]*factor1+b[0]*factor2+c[0]*factor3+d[0]*factor4;out[1]=a[1]*factor1+b[1]*factor2+c[1]*factor3+d[1]*factor4;out[2]=a[2]*factor1+b[2]*factor2+c[2]*factor3+d[2]*factor4;return out}function bezier(out,a,b,c,d,
t){var inverseFactor=1-t;var inverseFactorTimesTwo=inverseFactor*inverseFactor;var factorTimes2=t*t;var factor1=inverseFactorTimesTwo*inverseFactor;var factor2=3*t*inverseFactorTimesTwo;var factor3=3*factorTimes2*inverseFactor;var factor4=factorTimes2*t;out[0]=a[0]*factor1+b[0]*factor2+c[0]*factor3+d[0]*factor4;out[1]=a[1]*factor1+b[1]*factor2+c[1]*factor3+d[1]*factor4;out[2]=a[2]*factor1+b[2]*factor2+c[2]*factor3+d[2]*factor4;return out}function random(out,scale){scale=scale||1;var r=RANDOM()*2*
Math.PI;var z=RANDOM()*2-1;var zScale=Math.sqrt(1-z*z)*scale;out[0]=Math.cos(r)*zScale;out[1]=Math.sin(r)*zScale;out[2]=z*scale;return out}function transformMat4(out,a,m){var x=a[0],y=a[1],z=a[2];var w=m[3]*x+m[7]*y+m[11]*z+m[15];w=w||1;out[0]=(m[0]*x+m[4]*y+m[8]*z+m[12])/w;out[1]=(m[1]*x+m[5]*y+m[9]*z+m[13])/w;out[2]=(m[2]*x+m[6]*y+m[10]*z+m[14])/w;return out}function transformMat3(out,a,m){var x=a[0],y=a[1],z=a[2];out[0]=x*m[0]+y*m[3]+z*m[6];out[1]=x*m[1]+y*m[4]+z*m[7];out[2]=x*m[2]+y*m[5]+z*m[8];
return out}function transformQuat(out,a,q){var qx=q[0],qy=q[1],qz=q[2],qw=q[3];var x=a[0],y=a[1],z=a[2];var uvx=qy*z-qz*y,uvy=qz*x-qx*z,uvz=qx*y-qy*x;var uuvx=qy*uvz-qz*uvy,uuvy=qz*uvx-qx*uvz,uuvz=qx*uvy-qy*uvx;var w2=qw*2;uvx*=w2;uvy*=w2;uvz*=w2;uuvx*=2;uuvy*=2;uuvz*=2;out[0]=x+uvx+uuvx;out[1]=y+uvy+uuvy;out[2]=z+uvz+uuvz;return out}function rotateX$1(out,a,b,rad){var p=[],r=[];p[0]=a[0]-b[0];p[1]=a[1]-b[1];p[2]=a[2]-b[2];r[0]=p[0];r[1]=p[1]*Math.cos(rad)-p[2]*Math.sin(rad);r[2]=p[1]*Math.sin(rad)+
p[2]*Math.cos(rad);out[0]=r[0]+b[0];out[1]=r[1]+b[1];out[2]=r[2]+b[2];return out}function rotateY$1(out,a,b,rad){var p=[],r=[];p[0]=a[0]-b[0];p[1]=a[1]-b[1];p[2]=a[2]-b[2];r[0]=p[2]*Math.sin(rad)+p[0]*Math.cos(rad);r[1]=p[1];r[2]=p[2]*Math.cos(rad)-p[0]*Math.sin(rad);out[0]=r[0]+b[0];out[1]=r[1]+b[1];out[2]=r[2]+b[2];return out}function rotateZ$1(out,a,b,rad){var p=[],r=[];p[0]=a[0]-b[0];p[1]=a[1]-b[1];p[2]=a[2]-b[2];r[0]=p[0]*Math.cos(rad)-p[1]*Math.sin(rad);r[1]=p[0]*Math.sin(rad)+p[1]*Math.cos(rad);
r[2]=p[2];out[0]=r[0]+b[0];out[1]=r[1]+b[1];out[2]=r[2]+b[2];return out}function angle(a,b){var ax=a[0],ay=a[1],az=a[2],bx=b[0],by=b[1],bz=b[2],mag1=Math.sqrt(ax*ax+ay*ay+az*az),mag2=Math.sqrt(bx*bx+by*by+bz*bz),mag=mag1*mag2,cosine=mag&&dot(a,b)/mag;return Math.acos(Math.min(Math.max(cosine,-1),1))}function zero(out){out[0]=0;out[1]=0;out[2]=0;return out}function str$4(a){return"vec3("+a[0]+", "+a[1]+", "+a[2]+")"}function exactEquals$4(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]}function equals$5(a,
b){var a0=a[0],a1=a[1],a2=a[2];var b0=b[0],b1=b[1],b2=b[2];return Math.abs(a0-b0)<=EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))}var sub$4=subtract$4;var mul$4=multiply$4;var div=divide;var dist=distance;var sqrDist=squaredDistance;var len=length;var sqrLen=squaredLength;var forEach=function(){var vec=create$4();return function(a,stride,offset,count,fn,arg){var i,l;if(!stride)stride=
3;if(!offset)offset=0;if(count)l=Math.min(count*stride+offset,a.length);else l=a.length;for(i=offset;i<l;i+=stride){vec[0]=a[i];vec[1]=a[i+1];vec[2]=a[i+2];fn(vec,vec,arg);a[i]=vec[0];a[i+1]=vec[1];a[i+2]=vec[2]}return a}}();var vec3=Object.freeze({__proto__:null,create:create$4,clone:clone$4,length:length,fromValues:fromValues$4,copy:copy$4,set:set$4,add:add$4,subtract:subtract$4,multiply:multiply$4,divide:divide,ceil:ceil,floor:floor,min:min,max:max,round:round,scale:scale$4,scaleAndAdd:scaleAndAdd,
distance:distance,squaredDistance:squaredDistance,squaredLength:squaredLength,negate:negate,inverse:inverse,normalize:normalize,dot:dot,cross:cross,lerp:lerp,hermite:hermite,bezier:bezier,random:random,transformMat4:transformMat4,transformMat3:transformMat3,transformQuat:transformQuat,rotateX:rotateX$1,rotateY:rotateY$1,rotateZ:rotateZ$1,angle:angle,zero:zero,str:str$4,exactEquals:exactEquals$4,equals:equals$5,sub:sub$4,mul:mul$4,div:div,dist:dist,sqrDist:sqrDist,len:len,sqrLen:sqrLen,forEach:forEach});
function create$5(){var out=new ARRAY_TYPE(4);if(ARRAY_TYPE!=Float32Array){out[0]=0;out[1]=0;out[2]=0;out[3]=0}return out}function clone$5(a){var out=new ARRAY_TYPE(4);out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];return out}function fromValues$5(x,y,z,w){var out=new ARRAY_TYPE(4);out[0]=x;out[1]=y;out[2]=z;out[3]=w;return out}function copy$5(out,a){out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];return out}function set$5(out,x,y,z,w){out[0]=x;out[1]=y;out[2]=z;out[3]=w;return out}function add$5(out,
a,b){out[0]=a[0]+b[0];out[1]=a[1]+b[1];out[2]=a[2]+b[2];out[3]=a[3]+b[3];return out}function subtract$5(out,a,b){out[0]=a[0]-b[0];out[1]=a[1]-b[1];out[2]=a[2]-b[2];out[3]=a[3]-b[3];return out}function multiply$5(out,a,b){out[0]=a[0]*b[0];out[1]=a[1]*b[1];out[2]=a[2]*b[2];out[3]=a[3]*b[3];return out}function divide$1(out,a,b){out[0]=a[0]/b[0];out[1]=a[1]/b[1];out[2]=a[2]/b[2];out[3]=a[3]/b[3];return out}function ceil$1(out,a){out[0]=Math.ceil(a[0]);out[1]=Math.ceil(a[1]);out[2]=Math.ceil(a[2]);out[3]=
Math.ceil(a[3]);return out}function floor$1(out,a){out[0]=Math.floor(a[0]);out[1]=Math.floor(a[1]);out[2]=Math.floor(a[2]);out[3]=Math.floor(a[3]);return out}function min$1(out,a,b){out[0]=Math.min(a[0],b[0]);out[1]=Math.min(a[1],b[1]);out[2]=Math.min(a[2],b[2]);out[3]=Math.min(a[3],b[3]);return out}function max$1(out,a,b){out[0]=Math.max(a[0],b[0]);out[1]=Math.max(a[1],b[1]);out[2]=Math.max(a[2],b[2]);out[3]=Math.max(a[3],b[3]);return out}function round$1(out,a){out[0]=Math.round(a[0]);out[1]=Math.round(a[1]);
out[2]=Math.round(a[2]);out[3]=Math.round(a[3]);return out}function scale$5(out,a,b){out[0]=a[0]*b;out[1]=a[1]*b;out[2]=a[2]*b;out[3]=a[3]*b;return out}function scaleAndAdd$1(out,a,b,scale){out[0]=a[0]+b[0]*scale;out[1]=a[1]+b[1]*scale;out[2]=a[2]+b[2]*scale;out[3]=a[3]+b[3]*scale;return out}function distance$1(a,b){var x=b[0]-a[0];var y=b[1]-a[1];var z=b[2]-a[2];var w=b[3]-a[3];return Math.hypot(x,y,z,w)}function squaredDistance$1(a,b){var x=b[0]-a[0];var y=b[1]-a[1];var z=b[2]-a[2];var w=b[3]-a[3];
return x*x+y*y+z*z+w*w}function length$1(a){var x=a[0];var y=a[1];var z=a[2];var w=a[3];return Math.hypot(x,y,z,w)}function squaredLength$1(a){var x=a[0];var y=a[1];var z=a[2];var w=a[3];return x*x+y*y+z*z+w*w}function negate$1(out,a){out[0]=-a[0];out[1]=-a[1];out[2]=-a[2];out[3]=-a[3];return out}function inverse$1(out,a){out[0]=1/a[0];out[1]=1/a[1];out[2]=1/a[2];out[3]=1/a[3];return out}function normalize$1(out,a){var x=a[0];var y=a[1];var z=a[2];var w=a[3];var len=x*x+y*y+z*z+w*w;if(len>0)len=1/
Math.sqrt(len);out[0]=x*len;out[1]=y*len;out[2]=z*len;out[3]=w*len;return out}function dot$1(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3]}function cross$1(out,u,v,w){var A=v[0]*w[1]-v[1]*w[0],B=v[0]*w[2]-v[2]*w[0],C=v[0]*w[3]-v[3]*w[0],D=v[1]*w[2]-v[2]*w[1],E=v[1]*w[3]-v[3]*w[1],F=v[2]*w[3]-v[3]*w[2];var G=u[0];var H=u[1];var I=u[2];var J=u[3];out[0]=H*F-I*E+J*D;out[1]=-(G*F)+I*C-J*B;out[2]=G*E-H*C+J*A;out[3]=-(G*D)+H*B-I*A;return out}function lerp$1(out,a,b,t){var ax=a[0];var ay=a[1];var az=
a[2];var aw=a[3];out[0]=ax+t*(b[0]-ax);out[1]=ay+t*(b[1]-ay);out[2]=az+t*(b[2]-az);out[3]=aw+t*(b[3]-aw);return out}function random$1(out,scale){scale=scale||1;var v1,v2,v3,v4;var s1,s2;do{v1=RANDOM()*2-1;v2=RANDOM()*2-1;s1=v1*v1+v2*v2}while(s1>=1);do{v3=RANDOM()*2-1;v4=RANDOM()*2-1;s2=v3*v3+v4*v4}while(s2>=1);var d=Math.sqrt((1-s1)/s2);out[0]=scale*v1;out[1]=scale*v2;out[2]=scale*v3*d;out[3]=scale*v4*d;return out}function transformMat4$1(out,a,m){var x=a[0],y=a[1],z=a[2],w=a[3];out[0]=m[0]*x+m[4]*
y+m[8]*z+m[12]*w;out[1]=m[1]*x+m[5]*y+m[9]*z+m[13]*w;out[2]=m[2]*x+m[6]*y+m[10]*z+m[14]*w;out[3]=m[3]*x+m[7]*y+m[11]*z+m[15]*w;return out}function transformQuat$1(out,a,q){var x=a[0],y=a[1],z=a[2];var qx=q[0],qy=q[1],qz=q[2],qw=q[3];var ix=qw*x+qy*z-qz*y;var iy=qw*y+qz*x-qx*z;var iz=qw*z+qx*y-qy*x;var iw=-qx*x-qy*y-qz*z;out[0]=ix*qw+iw*-qx+iy*-qz-iz*-qy;out[1]=iy*qw+iw*-qy+iz*-qx-ix*-qz;out[2]=iz*qw+iw*-qz+ix*-qy-iy*-qx;out[3]=a[3];return out}function zero$1(out){out[0]=0;out[1]=0;out[2]=0;out[3]=
0;return out}function str$5(a){return"vec4("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"}function exactEquals$5(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]}function equals$6(a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3];var b0=b[0],b1=b[1],b2=b[2],b3=b[3];return Math.abs(a0-b0)<=EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))&&Math.abs(a3-b3)<=EPSILON*Math.max(1,Math.abs(a3),
Math.abs(b3))}var sub$5=subtract$5;var mul$5=multiply$5;var div$1=divide$1;var dist$1=distance$1;var sqrDist$1=squaredDistance$1;var len$1=length$1;var sqrLen$1=squaredLength$1;var forEach$1=function(){var vec=create$5();return function(a,stride,offset,count,fn,arg){var i,l;if(!stride)stride=4;if(!offset)offset=0;if(count)l=Math.min(count*stride+offset,a.length);else l=a.length;for(i=offset;i<l;i+=stride){vec[0]=a[i];vec[1]=a[i+1];vec[2]=a[i+2];vec[3]=a[i+3];fn(vec,vec,arg);a[i]=vec[0];a[i+1]=vec[1];
a[i+2]=vec[2];a[i+3]=vec[3]}return a}}();var vec4=Object.freeze({__proto__:null,create:create$5,clone:clone$5,fromValues:fromValues$5,copy:copy$5,set:set$5,add:add$5,subtract:subtract$5,multiply:multiply$5,divide:divide$1,ceil:ceil$1,floor:floor$1,min:min$1,max:max$1,round:round$1,scale:scale$5,scaleAndAdd:scaleAndAdd$1,distance:distance$1,squaredDistance:squaredDistance$1,length:length$1,squaredLength:squaredLength$1,negate:negate$1,inverse:inverse$1,normalize:normalize$1,dot:dot$1,cross:cross$1,
lerp:lerp$1,random:random$1,transformMat4:transformMat4$1,transformQuat:transformQuat$1,zero:zero$1,str:str$5,exactEquals:exactEquals$5,equals:equals$6,sub:sub$5,mul:mul$5,div:div$1,dist:dist$1,sqrDist:sqrDist$1,len:len$1,sqrLen:sqrLen$1,forEach:forEach$1});function create$6(){var out=new ARRAY_TYPE(4);if(ARRAY_TYPE!=Float32Array){out[0]=0;out[1]=0;out[2]=0}out[3]=1;return out}function identity$4(out){out[0]=0;out[1]=0;out[2]=0;out[3]=1;return out}function setAxisAngle(out,axis,rad){rad=rad*.5;var s=
Math.sin(rad);out[0]=s*axis[0];out[1]=s*axis[1];out[2]=s*axis[2];out[3]=Math.cos(rad);return out}function getAxisAngle(out_axis,q){var rad=Math.acos(q[3])*2;var s=Math.sin(rad/2);if(s>EPSILON){out_axis[0]=q[0]/s;out_axis[1]=q[1]/s;out_axis[2]=q[2]/s}else{out_axis[0]=1;out_axis[1]=0;out_axis[2]=0}return rad}function getAngle(a,b){var dotproduct=dot$2(a,b);return Math.acos(2*dotproduct*dotproduct-1)}function multiply$6(out,a,b){var ax=a[0],ay=a[1],az=a[2],aw=a[3];var bx=b[0],by=b[1],bz=b[2],bw=b[3];
out[0]=ax*bw+aw*bx+ay*bz-az*by;out[1]=ay*bw+aw*by+az*bx-ax*bz;out[2]=az*bw+aw*bz+ax*by-ay*bx;out[3]=aw*bw-ax*bx-ay*by-az*bz;return out}function rotateX$2(out,a,rad){rad*=.5;var ax=a[0],ay=a[1],az=a[2],aw=a[3];var bx=Math.sin(rad),bw=Math.cos(rad);out[0]=ax*bw+aw*bx;out[1]=ay*bw+az*bx;out[2]=az*bw-ay*bx;out[3]=aw*bw-ax*bx;return out}function rotateY$2(out,a,rad){rad*=.5;var ax=a[0],ay=a[1],az=a[2],aw=a[3];var by=Math.sin(rad),bw=Math.cos(rad);out[0]=ax*bw-az*by;out[1]=ay*bw+aw*by;out[2]=az*bw+ax*by;
out[3]=aw*bw-ay*by;return out}function rotateZ$2(out,a,rad){rad*=.5;var ax=a[0],ay=a[1],az=a[2],aw=a[3];var bz=Math.sin(rad),bw=Math.cos(rad);out[0]=ax*bw+ay*bz;out[1]=ay*bw-ax*bz;out[2]=az*bw+aw*bz;out[3]=aw*bw-az*bz;return out}function calculateW(out,a){var x=a[0],y=a[1],z=a[2];out[0]=x;out[1]=y;out[2]=z;out[3]=Math.sqrt(Math.abs(1-x*x-y*y-z*z));return out}function exp(out,a){var x=a[0],y=a[1],z=a[2],w=a[3];var r=Math.sqrt(x*x+y*y+z*z);var et=Math.exp(w);var s=r>0?et*Math.sin(r)/r:0;out[0]=x*s;
out[1]=y*s;out[2]=z*s;out[3]=et*Math.cos(r);return out}function ln(out,a){var x=a[0],y=a[1],z=a[2],w=a[3];var r=Math.sqrt(x*x+y*y+z*z);var t=r>0?Math.atan2(r,w)/r:0;out[0]=x*t;out[1]=y*t;out[2]=z*t;out[3]=.5*Math.log(x*x+y*y+z*z+w*w);return out}function pow(out,a,b){ln(out,a);scale$6(out,out,b);exp(out,out);return out}function slerp(out,a,b,t){var ax=a[0],ay=a[1],az=a[2],aw=a[3];var bx=b[0],by=b[1],bz=b[2],bw=b[3];var omega,cosom,sinom,scale0,scale1;cosom=ax*bx+ay*by+az*bz+aw*bw;if(cosom<0){cosom=
-cosom;bx=-bx;by=-by;bz=-bz;bw=-bw}if(1-cosom>EPSILON){omega=Math.acos(cosom);sinom=Math.sin(omega);scale0=Math.sin((1-t)*omega)/sinom;scale1=Math.sin(t*omega)/sinom}else{scale0=1-t;scale1=t}out[0]=scale0*ax+scale1*bx;out[1]=scale0*ay+scale1*by;out[2]=scale0*az+scale1*bz;out[3]=scale0*aw+scale1*bw;return out}function random$2(out){var u1=RANDOM();var u2=RANDOM();var u3=RANDOM();var sqrt1MinusU1=Math.sqrt(1-u1);var sqrtU1=Math.sqrt(u1);out[0]=sqrt1MinusU1*Math.sin(2*Math.PI*u2);out[1]=sqrt1MinusU1*
Math.cos(2*Math.PI*u2);out[2]=sqrtU1*Math.sin(2*Math.PI*u3);out[3]=sqrtU1*Math.cos(2*Math.PI*u3);return out}function invert$4(out,a){var a0=a[0],a1=a[1],a2=a[2],a3=a[3];var dot=a0*a0+a1*a1+a2*a2+a3*a3;var invDot=dot?1/dot:0;out[0]=-a0*invDot;out[1]=-a1*invDot;out[2]=-a2*invDot;out[3]=a3*invDot;return out}function conjugate(out,a){out[0]=-a[0];out[1]=-a[1];out[2]=-a[2];out[3]=a[3];return out}function fromMat3(out,m){var fTrace=m[0]+m[4]+m[8];var fRoot;if(fTrace>0){fRoot=Math.sqrt(fTrace+1);out[3]=
.5*fRoot;fRoot=.5/fRoot;out[0]=(m[5]-m[7])*fRoot;out[1]=(m[6]-m[2])*fRoot;out[2]=(m[1]-m[3])*fRoot}else{var i=0;if(m[4]>m[0])i=1;if(m[8]>m[i*3+i])i=2;var j=(i+1)%3;var k=(i+2)%3;fRoot=Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k]+1);out[i]=.5*fRoot;fRoot=.5/fRoot;out[3]=(m[j*3+k]-m[k*3+j])*fRoot;out[j]=(m[j*3+i]+m[i*3+j])*fRoot;out[k]=(m[k*3+i]+m[i*3+k])*fRoot}return out}function fromEuler(out,x,y,z){var halfToRad=.5*Math.PI/180;x*=halfToRad;y*=halfToRad;z*=halfToRad;var sx=Math.sin(x);var cx=Math.cos(x);
var sy=Math.sin(y);var cy=Math.cos(y);var sz=Math.sin(z);var cz=Math.cos(z);out[0]=sx*cy*cz-cx*sy*sz;out[1]=cx*sy*cz+sx*cy*sz;out[2]=cx*cy*sz-sx*sy*cz;out[3]=cx*cy*cz+sx*sy*sz;return out}function str$6(a){return"quat("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"}var clone$6=clone$5;var fromValues$6=fromValues$5;var copy$6=copy$5;var set$6=set$5;var add$6=add$5;var mul$6=multiply$6;var scale$6=scale$5;var dot$2=dot$1;var lerp$2=lerp$1;var length$2=length$1;var len$2=length$2;var squaredLength$2=squaredLength$1;
var sqrLen$2=squaredLength$2;var normalize$2=normalize$1;var exactEquals$6=exactEquals$5;var equals$7=equals$6;var rotationTo=function(){var tmpvec3=create$4();var xUnitVec3=fromValues$4(1,0,0);var yUnitVec3=fromValues$4(0,1,0);return function(out,a,b){var dot$1=dot(a,b);if(dot$1<-.999999){cross(tmpvec3,xUnitVec3,a);if(len(tmpvec3)<1E-6)cross(tmpvec3,yUnitVec3,a);normalize(tmpvec3,tmpvec3);setAxisAngle(out,tmpvec3,Math.PI);return out}else if(dot$1>.999999){out[0]=0;out[1]=0;out[2]=0;out[3]=1;return out}else{cross(tmpvec3,
a,b);out[0]=tmpvec3[0];out[1]=tmpvec3[1];out[2]=tmpvec3[2];out[3]=1+dot$1;return normalize$2(out,out)}}}();var sqlerp=function(){var temp1=create$6();var temp2=create$6();return function(out,a,b,c,d,t){slerp(temp1,a,d,t);slerp(temp2,b,c,t);slerp(out,temp1,temp2,2*t*(1-t));return out}}();var setAxes=function(){var matr=create$2();return function(out,view,right,up){matr[0]=right[0];matr[3]=right[1];matr[6]=right[2];matr[1]=up[0];matr[4]=up[1];matr[7]=up[2];matr[2]=-view[0];matr[5]=-view[1];matr[8]=
-view[2];return normalize$2(out,fromMat3(out,matr))}}();var quat=Object.freeze({__proto__:null,create:create$6,identity:identity$4,setAxisAngle:setAxisAngle,getAxisAngle:getAxisAngle,getAngle:getAngle,multiply:multiply$6,rotateX:rotateX$2,rotateY:rotateY$2,rotateZ:rotateZ$2,calculateW:calculateW,exp:exp,ln:ln,pow:pow,slerp:slerp,random:random$2,invert:invert$4,conjugate:conjugate,fromMat3:fromMat3,fromEuler:fromEuler,str:str$6,clone:clone$6,fromValues:fromValues$6,copy:copy$6,set:set$6,add:add$6,
mul:mul$6,scale:scale$6,dot:dot$2,lerp:lerp$2,length:length$2,len:len$2,squaredLength:squaredLength$2,sqrLen:sqrLen$2,normalize:normalize$2,exactEquals:exactEquals$6,equals:equals$7,rotationTo:rotationTo,sqlerp:sqlerp,setAxes:setAxes});function create$7(){var dq=new ARRAY_TYPE(8);if(ARRAY_TYPE!=Float32Array){dq[0]=0;dq[1]=0;dq[2]=0;dq[4]=0;dq[5]=0;dq[6]=0;dq[7]=0}dq[3]=1;return dq}function clone$7(a){var dq=new ARRAY_TYPE(8);dq[0]=a[0];dq[1]=a[1];dq[2]=a[2];dq[3]=a[3];dq[4]=a[4];dq[5]=a[5];dq[6]=
a[6];dq[7]=a[7];return dq}function fromValues$7(x1,y1,z1,w1,x2,y2,z2,w2){var dq=new ARRAY_TYPE(8);dq[0]=x1;dq[1]=y1;dq[2]=z1;dq[3]=w1;dq[4]=x2;dq[5]=y2;dq[6]=z2;dq[7]=w2;return dq}function fromRotationTranslationValues(x1,y1,z1,w1,x2,y2,z2){var dq=new ARRAY_TYPE(8);dq[0]=x1;dq[1]=y1;dq[2]=z1;dq[3]=w1;var ax=x2*.5,ay=y2*.5,az=z2*.5;dq[4]=ax*w1+ay*z1-az*y1;dq[5]=ay*w1+az*x1-ax*z1;dq[6]=az*w1+ax*y1-ay*x1;dq[7]=-ax*x1-ay*y1-az*z1;return dq}function fromRotationTranslation$1(out,q,t){var ax=t[0]*.5,ay=
t[1]*.5,az=t[2]*.5,bx=q[0],by=q[1],bz=q[2],bw=q[3];out[0]=bx;out[1]=by;out[2]=bz;out[3]=bw;out[4]=ax*bw+ay*bz-az*by;out[5]=ay*bw+az*bx-ax*bz;out[6]=az*bw+ax*by-ay*bx;out[7]=-ax*bx-ay*by-az*bz;return out}function fromTranslation$3(out,t){out[0]=0;out[1]=0;out[2]=0;out[3]=1;out[4]=t[0]*.5;out[5]=t[1]*.5;out[6]=t[2]*.5;out[7]=0;return out}function fromRotation$4(out,q){out[0]=q[0];out[1]=q[1];out[2]=q[2];out[3]=q[3];out[4]=0;out[5]=0;out[6]=0;out[7]=0;return out}function fromMat4$1(out,a){var outer=
create$6();getRotation(outer,a);var t=new ARRAY_TYPE(3);getTranslation(t,a);fromRotationTranslation$1(out,outer,t);return out}function copy$7(out,a){out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];out[4]=a[4];out[5]=a[5];out[6]=a[6];out[7]=a[7];return out}function identity$5(out){out[0]=0;out[1]=0;out[2]=0;out[3]=1;out[4]=0;out[5]=0;out[6]=0;out[7]=0;return out}function set$7(out,x1,y1,z1,w1,x2,y2,z2,w2){out[0]=x1;out[1]=y1;out[2]=z1;out[3]=w1;out[4]=x2;out[5]=y2;out[6]=z2;out[7]=w2;return out}var getReal=
copy$6;function getDual(out,a){out[0]=a[4];out[1]=a[5];out[2]=a[6];out[3]=a[7];return out}var setReal=copy$6;function setDual(out,q){out[4]=q[0];out[5]=q[1];out[6]=q[2];out[7]=q[3];return out}function getTranslation$1(out,a){var ax=a[4],ay=a[5],az=a[6],aw=a[7],bx=-a[0],by=-a[1],bz=-a[2],bw=a[3];out[0]=(ax*bw+aw*bx+ay*bz-az*by)*2;out[1]=(ay*bw+aw*by+az*bx-ax*bz)*2;out[2]=(az*bw+aw*bz+ax*by-ay*bx)*2;return out}function translate$3(out,a,v){var ax1=a[0],ay1=a[1],az1=a[2],aw1=a[3],bx1=v[0]*.5,by1=v[1]*
.5,bz1=v[2]*.5,ax2=a[4],ay2=a[5],az2=a[6],aw2=a[7];out[0]=ax1;out[1]=ay1;out[2]=az1;out[3]=aw1;out[4]=aw1*bx1+ay1*bz1-az1*by1+ax2;out[5]=aw1*by1+az1*bx1-ax1*bz1+ay2;out[6]=aw1*bz1+ax1*by1-ay1*bx1+az2;out[7]=-ax1*bx1-ay1*by1-az1*bz1+aw2;return out}function rotateX$3(out,a,rad){var bx=-a[0],by=-a[1],bz=-a[2],bw=a[3],ax=a[4],ay=a[5],az=a[6],aw=a[7],ax1=ax*bw+aw*bx+ay*bz-az*by,ay1=ay*bw+aw*by+az*bx-ax*bz,az1=az*bw+aw*bz+ax*by-ay*bx,aw1=aw*bw-ax*bx-ay*by-az*bz;rotateX$2(out,a,rad);bx=out[0];by=out[1];
bz=out[2];bw=out[3];out[4]=ax1*bw+aw1*bx+ay1*bz-az1*by;out[5]=ay1*bw+aw1*by+az1*bx-ax1*bz;out[6]=az1*bw+aw1*bz+ax1*by-ay1*bx;out[7]=aw1*bw-ax1*bx-ay1*by-az1*bz;return out}function rotateY$3(out,a,rad){var bx=-a[0],by=-a[1],bz=-a[2],bw=a[3],ax=a[4],ay=a[5],az=a[6],aw=a[7],ax1=ax*bw+aw*bx+ay*bz-az*by,ay1=ay*bw+aw*by+az*bx-ax*bz,az1=az*bw+aw*bz+ax*by-ay*bx,aw1=aw*bw-ax*bx-ay*by-az*bz;rotateY$2(out,a,rad);bx=out[0];by=out[1];bz=out[2];bw=out[3];out[4]=ax1*bw+aw1*bx+ay1*bz-az1*by;out[5]=ay1*bw+aw1*by+
az1*bx-ax1*bz;out[6]=az1*bw+aw1*bz+ax1*by-ay1*bx;out[7]=aw1*bw-ax1*bx-ay1*by-az1*bz;return out}function rotateZ$3(out,a,rad){var bx=-a[0],by=-a[1],bz=-a[2],bw=a[3],ax=a[4],ay=a[5],az=a[6],aw=a[7],ax1=ax*bw+aw*bx+ay*bz-az*by,ay1=ay*bw+aw*by+az*bx-ax*bz,az1=az*bw+aw*bz+ax*by-ay*bx,aw1=aw*bw-ax*bx-ay*by-az*bz;rotateZ$2(out,a,rad);bx=out[0];by=out[1];bz=out[2];bw=out[3];out[4]=ax1*bw+aw1*bx+ay1*bz-az1*by;out[5]=ay1*bw+aw1*by+az1*bx-ax1*bz;out[6]=az1*bw+aw1*bz+ax1*by-ay1*bx;out[7]=aw1*bw-ax1*bx-ay1*by-
az1*bz;return out}function rotateByQuatAppend(out,a,q){var qx=q[0],qy=q[1],qz=q[2],qw=q[3],ax=a[0],ay=a[1],az=a[2],aw=a[3];out[0]=ax*qw+aw*qx+ay*qz-az*qy;out[1]=ay*qw+aw*qy+az*qx-ax*qz;out[2]=az*qw+aw*qz+ax*qy-ay*qx;out[3]=aw*qw-ax*qx-ay*qy-az*qz;ax=a[4];ay=a[5];az=a[6];aw=a[7];out[4]=ax*qw+aw*qx+ay*qz-az*qy;out[5]=ay*qw+aw*qy+az*qx-ax*qz;out[6]=az*qw+aw*qz+ax*qy-ay*qx;out[7]=aw*qw-ax*qx-ay*qy-az*qz;return out}function rotateByQuatPrepend(out,q,a){var qx=q[0],qy=q[1],qz=q[2],qw=q[3],bx=a[0],by=a[1],
bz=a[2],bw=a[3];out[0]=qx*bw+qw*bx+qy*bz-qz*by;out[1]=qy*bw+qw*by+qz*bx-qx*bz;out[2]=qz*bw+qw*bz+qx*by-qy*bx;out[3]=qw*bw-qx*bx-qy*by-qz*bz;bx=a[4];by=a[5];bz=a[6];bw=a[7];out[4]=qx*bw+qw*bx+qy*bz-qz*by;out[5]=qy*bw+qw*by+qz*bx-qx*bz;out[6]=qz*bw+qw*bz+qx*by-qy*bx;out[7]=qw*bw-qx*bx-qy*by-qz*bz;return out}function rotateAroundAxis(out,a,axis,rad){if(Math.abs(rad)<EPSILON)return copy$7(out,a);var axisLength=Math.hypot(axis[0],axis[1],axis[2]);rad=rad*.5;var s=Math.sin(rad);var bx=s*axis[0]/axisLength;
var by=s*axis[1]/axisLength;var bz=s*axis[2]/axisLength;var bw=Math.cos(rad);var ax1=a[0],ay1=a[1],az1=a[2],aw1=a[3];out[0]=ax1*bw+aw1*bx+ay1*bz-az1*by;out[1]=ay1*bw+aw1*by+az1*bx-ax1*bz;out[2]=az1*bw+aw1*bz+ax1*by-ay1*bx;out[3]=aw1*bw-ax1*bx-ay1*by-az1*bz;var ax=a[4],ay=a[5],az=a[6],aw=a[7];out[4]=ax*bw+aw*bx+ay*bz-az*by;out[5]=ay*bw+aw*by+az*bx-ax*bz;out[6]=az*bw+aw*bz+ax*by-ay*bx;out[7]=aw*bw-ax*bx-ay*by-az*bz;return out}function add$7(out,a,b){out[0]=a[0]+b[0];out[1]=a[1]+b[1];out[2]=a[2]+b[2];
out[3]=a[3]+b[3];out[4]=a[4]+b[4];out[5]=a[5]+b[5];out[6]=a[6]+b[6];out[7]=a[7]+b[7];return out}function multiply$7(out,a,b){var ax0=a[0],ay0=a[1],az0=a[2],aw0=a[3],bx1=b[4],by1=b[5],bz1=b[6],bw1=b[7],ax1=a[4],ay1=a[5],az1=a[6],aw1=a[7],bx0=b[0],by0=b[1],bz0=b[2],bw0=b[3];out[0]=ax0*bw0+aw0*bx0+ay0*bz0-az0*by0;out[1]=ay0*bw0+aw0*by0+az0*bx0-ax0*bz0;out[2]=az0*bw0+aw0*bz0+ax0*by0-ay0*bx0;out[3]=aw0*bw0-ax0*bx0-ay0*by0-az0*bz0;out[4]=ax0*bw1+aw0*bx1+ay0*bz1-az0*by1+ax1*bw0+aw1*bx0+ay1*bz0-az1*by0;out[5]=
ay0*bw1+aw0*by1+az0*bx1-ax0*bz1+ay1*bw0+aw1*by0+az1*bx0-ax1*bz0;out[6]=az0*bw1+aw0*bz1+ax0*by1-ay0*bx1+az1*bw0+aw1*bz0+ax1*by0-ay1*bx0;out[7]=aw0*bw1-ax0*bx1-ay0*by1-az0*bz1+aw1*bw0-ax1*bx0-ay1*by0-az1*bz0;return out}var mul$7=multiply$7;function scale$7(out,a,b){out[0]=a[0]*b;out[1]=a[1]*b;out[2]=a[2]*b;out[3]=a[3]*b;out[4]=a[4]*b;out[5]=a[5]*b;out[6]=a[6]*b;out[7]=a[7]*b;return out}var dot$3=dot$2;function lerp$3(out,a,b,t){var mt=1-t;if(dot$3(a,b)<0)t=-t;out[0]=a[0]*mt+b[0]*t;out[1]=a[1]*mt+b[1]*
t;out[2]=a[2]*mt+b[2]*t;out[3]=a[3]*mt+b[3]*t;out[4]=a[4]*mt+b[4]*t;out[5]=a[5]*mt+b[5]*t;out[6]=a[6]*mt+b[6]*t;out[7]=a[7]*mt+b[7]*t;return out}function invert$5(out,a){var sqlen=squaredLength$3(a);out[0]=-a[0]/sqlen;out[1]=-a[1]/sqlen;out[2]=-a[2]/sqlen;out[3]=a[3]/sqlen;out[4]=-a[4]/sqlen;out[5]=-a[5]/sqlen;out[6]=-a[6]/sqlen;out[7]=a[7]/sqlen;return out}function conjugate$1(out,a){out[0]=-a[0];out[1]=-a[1];out[2]=-a[2];out[3]=a[3];out[4]=-a[4];out[5]=-a[5];out[6]=-a[6];out[7]=a[7];return out}
var length$3=length$2;var len$3=length$3;var squaredLength$3=squaredLength$2;var sqrLen$3=squaredLength$3;function normalize$3(out,a){var magnitude=squaredLength$3(a);if(magnitude>0){magnitude=Math.sqrt(magnitude);var a0=a[0]/magnitude;var a1=a[1]/magnitude;var a2=a[2]/magnitude;var a3=a[3]/magnitude;var b0=a[4];var b1=a[5];var b2=a[6];var b3=a[7];var a_dot_b=a0*b0+a1*b1+a2*b2+a3*b3;out[0]=a0;out[1]=a1;out[2]=a2;out[3]=a3;out[4]=(b0-a0*a_dot_b)/magnitude;out[5]=(b1-a1*a_dot_b)/magnitude;out[6]=(b2-
a2*a_dot_b)/magnitude;out[7]=(b3-a3*a_dot_b)/magnitude}return out}function str$7(a){return"quat2("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+")"}function exactEquals$7(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]&&a[4]===b[4]&&a[5]===b[5]&&a[6]===b[6]&&a[7]===b[7]}function equals$8(a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5],a6=a[6],a7=a[7];var b0=b[0],b1=b[1],b2=b[2],b3=b[3],b4=b[4],b5=b[5],b6=b[6],b7=b[7];return Math.abs(a0-b0)<=EPSILON*
Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))&&Math.abs(a3-b3)<=EPSILON*Math.max(1,Math.abs(a3),Math.abs(b3))&&Math.abs(a4-b4)<=EPSILON*Math.max(1,Math.abs(a4),Math.abs(b4))&&Math.abs(a5-b5)<=EPSILON*Math.max(1,Math.abs(a5),Math.abs(b5))&&Math.abs(a6-b6)<=EPSILON*Math.max(1,Math.abs(a6),Math.abs(b6))&&Math.abs(a7-b7)<=EPSILON*Math.max(1,Math.abs(a7),Math.abs(b7))}var quat2=Object.freeze({__proto__:null,
create:create$7,clone:clone$7,fromValues:fromValues$7,fromRotationTranslationValues:fromRotationTranslationValues,fromRotationTranslation:fromRotationTranslation$1,fromTranslation:fromTranslation$3,fromRotation:fromRotation$4,fromMat4:fromMat4$1,copy:copy$7,identity:identity$5,set:set$7,getReal:getReal,getDual:getDual,setReal:setReal,setDual:setDual,getTranslation:getTranslation$1,translate:translate$3,rotateX:rotateX$3,rotateY:rotateY$3,rotateZ:rotateZ$3,rotateByQuatAppend:rotateByQuatAppend,rotateByQuatPrepend:rotateByQuatPrepend,
rotateAroundAxis:rotateAroundAxis,add:add$7,multiply:multiply$7,mul:mul$7,scale:scale$7,dot:dot$3,lerp:lerp$3,invert:invert$5,conjugate:conjugate$1,length:length$3,len:len$3,squaredLength:squaredLength$3,sqrLen:sqrLen$3,normalize:normalize$3,str:str$7,exactEquals:exactEquals$7,equals:equals$8});function create$8(){var out=new ARRAY_TYPE(2);if(ARRAY_TYPE!=Float32Array){out[0]=0;out[1]=0}return out}function clone$8(a){var out=new ARRAY_TYPE(2);out[0]=a[0];out[1]=a[1];return out}function fromValues$8(x,
y){var out=new ARRAY_TYPE(2);out[0]=x;out[1]=y;return out}function copy$8(out,a){out[0]=a[0];out[1]=a[1];return out}function set$8(out,x,y){out[0]=x;out[1]=y;return out}function add$8(out,a,b){out[0]=a[0]+b[0];out[1]=a[1]+b[1];return out}function subtract$6(out,a,b){out[0]=a[0]-b[0];out[1]=a[1]-b[1];return out}function multiply$8(out,a,b){out[0]=a[0]*b[0];out[1]=a[1]*b[1];return out}function divide$2(out,a,b){out[0]=a[0]/b[0];out[1]=a[1]/b[1];return out}function ceil$2(out,a){out[0]=Math.ceil(a[0]);
out[1]=Math.ceil(a[1]);return out}function floor$2(out,a){out[0]=Math.floor(a[0]);out[1]=Math.floor(a[1]);return out}function min$2(out,a,b){out[0]=Math.min(a[0],b[0]);out[1]=Math.min(a[1],b[1]);return out}function max$2(out,a,b){out[0]=Math.max(a[0],b[0]);out[1]=Math.max(a[1],b[1]);return out}function round$2(out,a){out[0]=Math.round(a[0]);out[1]=Math.round(a[1]);return out}function scale$8(out,a,b){out[0]=a[0]*b;out[1]=a[1]*b;return out}function scaleAndAdd$2(out,a,b,scale){out[0]=a[0]+b[0]*scale;
out[1]=a[1]+b[1]*scale;return out}function distance$2(a,b){var x=b[0]-a[0],y=b[1]-a[1];return Math.hypot(x,y)}function squaredDistance$2(a,b){var x=b[0]-a[0],y=b[1]-a[1];return x*x+y*y}function length$4(a){var x=a[0],y=a[1];return Math.hypot(x,y)}function squaredLength$4(a){var x=a[0],y=a[1];return x*x+y*y}function negate$2(out,a){out[0]=-a[0];out[1]=-a[1];return out}function inverse$2(out,a){out[0]=1/a[0];out[1]=1/a[1];return out}function normalize$4(out,a){var x=a[0],y=a[1];var len=x*x+y*y;if(len>
0)len=1/Math.sqrt(len);out[0]=a[0]*len;out[1]=a[1]*len;return out}function dot$4(a,b){return a[0]*b[0]+a[1]*b[1]}function cross$2(out,a,b){var z=a[0]*b[1]-a[1]*b[0];out[0]=out[1]=0;out[2]=z;return out}function lerp$4(out,a,b,t){var ax=a[0],ay=a[1];out[0]=ax+t*(b[0]-ax);out[1]=ay+t*(b[1]-ay);return out}function random$3(out,scale){scale=scale||1;var r=RANDOM()*2*Math.PI;out[0]=Math.cos(r)*scale;out[1]=Math.sin(r)*scale;return out}function transformMat2(out,a,m){var x=a[0],y=a[1];out[0]=m[0]*x+m[2]*
y;out[1]=m[1]*x+m[3]*y;return out}function transformMat2d(out,a,m){var x=a[0],y=a[1];out[0]=m[0]*x+m[2]*y+m[4];out[1]=m[1]*x+m[3]*y+m[5];return out}function transformMat3$1(out,a,m){var x=a[0],y=a[1];out[0]=m[0]*x+m[3]*y+m[6];out[1]=m[1]*x+m[4]*y+m[7];return out}function transformMat4$2(out,a,m){var x=a[0];var y=a[1];out[0]=m[0]*x+m[4]*y+m[12];out[1]=m[1]*x+m[5]*y+m[13];return out}function rotate$4(out,a,b,rad){var p0=a[0]-b[0],p1=a[1]-b[1],sinC=Math.sin(rad),cosC=Math.cos(rad);out[0]=p0*cosC-p1*
sinC+b[0];out[1]=p0*sinC+p1*cosC+b[1];return out}function angle$1(a,b){var x1=a[0],y1=a[1],x2=b[0],y2=b[1],mag=Math.sqrt(x1*x1+y1*y1)*Math.sqrt(x2*x2+y2*y2),cosine=mag&&(x1*x2+y1*y2)/mag;return Math.acos(Math.min(Math.max(cosine,-1),1))}function zero$2(out){out[0]=0;out[1]=0;return out}function str$8(a){return"vec2("+a[0]+", "+a[1]+")"}function exactEquals$8(a,b){return a[0]===b[0]&&a[1]===b[1]}function equals$9(a,b){var a0=a[0],a1=a[1];var b0=b[0],b1=b[1];return Math.abs(a0-b0)<=EPSILON*Math.max(1,
Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))}var len$4=length$4;var sub$6=subtract$6;var mul$8=multiply$8;var div$2=divide$2;var dist$2=distance$2;var sqrDist$2=squaredDistance$2;var sqrLen$4=squaredLength$4;var forEach$2=function(){var vec=create$8();return function(a,stride,offset,count,fn,arg){var i,l;if(!stride)stride=2;if(!offset)offset=0;if(count)l=Math.min(count*stride+offset,a.length);else l=a.length;for(i=offset;i<l;i+=stride){vec[0]=a[i];vec[1]=
a[i+1];fn(vec,vec,arg);a[i]=vec[0];a[i+1]=vec[1]}return a}}();var vec2=Object.freeze({__proto__:null,create:create$8,clone:clone$8,fromValues:fromValues$8,copy:copy$8,set:set$8,add:add$8,subtract:subtract$6,multiply:multiply$8,divide:divide$2,ceil:ceil$2,floor:floor$2,min:min$2,max:max$2,round:round$2,scale:scale$8,scaleAndAdd:scaleAndAdd$2,distance:distance$2,squaredDistance:squaredDistance$2,length:length$4,squaredLength:squaredLength$4,negate:negate$2,inverse:inverse$2,normalize:normalize$4,dot:dot$4,
cross:cross$2,lerp:lerp$4,random:random$3,transformMat2:transformMat2,transformMat2d:transformMat2d,transformMat3:transformMat3$1,transformMat4:transformMat4$2,rotate:rotate$4,angle:angle$1,zero:zero$2,str:str$8,exactEquals:exactEquals$8,equals:equals$9,len:len$4,sub:sub$6,mul:mul$8,div:div$2,dist:dist$2,sqrDist:sqrDist$2,sqrLen:sqrLen$4,forEach:forEach$2});exports.glMatrix=common;exports.mat2=mat2;exports.mat2d=mat2d;exports.mat3=mat3;exports.mat4=mat4;exports.quat=quat;exports.quat2=quat2;exports.vec2=
vec2;exports.vec3=vec3;exports.vec4=vec4;Object.defineProperty(exports,"__esModule",{value:true})});

}

// 3rdparty/poly-decomp.js
{
'use strict';function lineInt(l1,l2,precision){precision=precision||0;var i=[0,0];var a1,b1,c1,a2,b2,c2,det;a1=l1[1][1]-l1[0][1];b1=l1[0][0]-l1[1][0];c1=a1*l1[0][0]+b1*l1[0][1];a2=l2[1][1]-l2[0][1];b2=l2[0][0]-l2[1][0];c2=a2*l2[0][0]+b2*l2[0][1];det=a1*b2-a2*b1;if(!scalar_eq(det,0,precision)){i[0]=(b2*c1-b1*c2)/det;i[1]=(a1*c2-a2*c1)/det}return i}
function lineSegmentsIntersect(p1,p2,q1,q2){var dx=p2[0]-p1[0];var dy=p2[1]-p1[1];var da=q2[0]-q1[0];var db=q2[1]-q1[1];if(da*dy-db*dx===0)return false;var s=(dx*(q1[1]-p1[1])+dy*(p1[0]-q1[0]))/(da*dy-db*dx);var t=(da*(p1[1]-q1[1])+db*(q1[0]-p1[0]))/(db*dx-da*dy);return s>=0&&s<=1&&t>=0&&t<=1}function triangleArea(a,b,c){return(b[0]-a[0])*(c[1]-a[1])-(c[0]-a[0])*(b[1]-a[1])}function isLeft(a,b,c){return triangleArea(a,b,c)>0}function isLeftOn(a,b,c){return triangleArea(a,b,c)>=0}
function isRight(a,b,c){return triangleArea(a,b,c)<0}function isRightOn(a,b,c){return triangleArea(a,b,c)<=0}var tmpPoint1=[],tmpPoint2=[];
function collinear(a,b,c,thresholdAngle){if(!thresholdAngle)return triangleArea(a,b,c)===0;else{var ab=tmpPoint1,bc=tmpPoint2;ab[0]=b[0]-a[0];ab[1]=b[1]-a[1];bc[0]=c[0]-b[0];bc[1]=c[1]-b[1];var dot=ab[0]*bc[0]+ab[1]*bc[1],magA=Math.sqrt(ab[0]*ab[0]+ab[1]*ab[1]),magB=Math.sqrt(bc[0]*bc[0]+bc[1]*bc[1]),angle=Math.acos(dot/(magA*magB));return angle<thresholdAngle}}function sqdist(a,b){var dx=b[0]-a[0];var dy=b[1]-a[1];return dx*dx+dy*dy}
function polygonAt(polygon,i){var s=polygon.length;return polygon[i<0?i%s+s:i%s]}function polygonClear(polygon){polygon.length=0}function polygonAppend(polygon,poly,from,to){for(var i=from;i<to;i++)polygon.push(poly[i])}
function polygonMakeCCW(polygon){var br=0,v=polygon;for(var i=1;i<polygon.length;++i)if(v[i][1]<v[br][1]||v[i][1]===v[br][1]&&v[i][0]>v[br][0])br=i;if(!isLeft(polygonAt(polygon,br-1),polygonAt(polygon,br),polygonAt(polygon,br+1))){polygonReverse(polygon);return true}else return false}function polygonReverse(polygon){var tmp=[];var N=polygon.length;for(var i=0;i!==N;i++)tmp.push(polygon.pop());for(var i=0;i!==N;i++)polygon[i]=tmp[i]}
function polygonIsReflex(polygon,i){return isRight(polygonAt(polygon,i-1),polygonAt(polygon,i),polygonAt(polygon,i+1))}var tmpLine1=[],tmpLine2=[];
function polygonCanSee(polygon,a,b){var p,dist,l1=tmpLine1,l2=tmpLine2;if(isLeftOn(polygonAt(polygon,a+1),polygonAt(polygon,a),polygonAt(polygon,b))&&isRightOn(polygonAt(polygon,a-1),polygonAt(polygon,a),polygonAt(polygon,b)))return false;dist=sqdist(polygonAt(polygon,a),polygonAt(polygon,b));for(var i=0;i!==polygon.length;++i){if((i+1)%polygon.length===a||i===a)continue;if(isLeftOn(polygonAt(polygon,a),polygonAt(polygon,b),polygonAt(polygon,i+1))&&isRightOn(polygonAt(polygon,a),polygonAt(polygon,
b),polygonAt(polygon,i))){l1[0]=polygonAt(polygon,a);l1[1]=polygonAt(polygon,b);l2[0]=polygonAt(polygon,i);l2[1]=polygonAt(polygon,i+1);p=lineInt(l1,l2);if(sqdist(polygonAt(polygon,a),p)<dist)return false}}return true}
function polygonCanSee2(polygon,a,b){for(var i=0;i!==polygon.length;++i){if(i===a||i===b||(i+1)%polygon.length===a||(i+1)%polygon.length===b)continue;if(lineSegmentsIntersect(polygonAt(polygon,a),polygonAt(polygon,b),polygonAt(polygon,i),polygonAt(polygon,i+1)))return false}return true}
function polygonCopy(polygon,i,j,targetPoly){var p=targetPoly||[];polygonClear(p);if(i<j)for(var k=i;k<=j;k++)p.push(polygon[k]);else{for(var k=0;k<=j;k++)p.push(polygon[k]);for(var k=i;k<polygon.length;k++)p.push(polygon[k])}return p}
function polygonGetCutEdges(polygon){var min=[],tmp1=[],tmp2=[],tmpPoly=[];var nDiags=Number.MAX_VALUE;for(var i=0;i<polygon.length;++i)if(polygonIsReflex(polygon,i))for(var j=0;j<polygon.length;++j)if(polygonCanSee(polygon,i,j)){tmp1=polygonGetCutEdges(polygonCopy(polygon,i,j,tmpPoly));tmp2=polygonGetCutEdges(polygonCopy(polygon,j,i,tmpPoly));for(var k=0;k<tmp2.length;k++)tmp1.push(tmp2[k]);if(tmp1.length<nDiags){min=tmp1;nDiags=tmp1.length;min.push([polygonAt(polygon,i),polygonAt(polygon,j)])}}return min}
function polygonDecomp(polygon){var edges=polygonGetCutEdges(polygon);if(edges.length>0)return polygonSlice(polygon,edges);else return[polygon]}
function polygonSlice(polygon,cutEdges){if(cutEdges.length===0)return[polygon];if(cutEdges instanceof Array&&cutEdges.length&&cutEdges[0]instanceof Array&&cutEdges[0].length===2&&cutEdges[0][0]instanceof Array){var polys=[polygon];for(var i=0;i<cutEdges.length;i++){var cutEdge=cutEdges[i];for(var j=0;j<polys.length;j++){var poly=polys[j];var result=polygonSlice(poly,cutEdge);if(result){polys.splice(j,1);polys.push(result[0],result[1]);break}}}return polys}else{var cutEdge=cutEdges;var i=polygon.indexOf(cutEdge[0]);
var j=polygon.indexOf(cutEdge[1]);if(i!==-1&&j!==-1)return[polygonCopy(polygon,i,j),polygonCopy(polygon,j,i)];else return false}}function polygonIsSimple(polygon){var path=polygon,i;for(i=0;i<path.length-1;i++)for(var j=0;j<i-1;j++)if(lineSegmentsIntersect(path[i],path[i+1],path[j],path[j+1]))return false;for(i=1;i<path.length-2;i++)if(lineSegmentsIntersect(path[0],path[path.length-1],path[i],path[i+1]))return false;return true}
function getIntersectionPoint(p1,p2,q1,q2,delta){delta=delta||0;var a1=p2[1]-p1[1];var b1=p1[0]-p2[0];var c1=a1*p1[0]+b1*p1[1];var a2=q2[1]-q1[1];var b2=q1[0]-q2[0];var c2=a2*q1[0]+b2*q1[1];var det=a1*b2-a2*b1;if(!scalar_eq(det,0,delta))return[(b2*c1-b1*c2)/det,(a1*c2-a2*c1)/det];else return[0,0]}
function polygonQuickDecomp(polygon,result,reflexVertices,steinerPoints,delta,maxlevel,level){maxlevel=maxlevel||100;level=level||0;delta=delta||25;result=typeof result!=="undefined"?result:[];reflexVertices=reflexVertices||[];steinerPoints=steinerPoints||[];var upperInt=[0,0],lowerInt=[0,0],p=[0,0];var upperDist=0,lowerDist=0,d=0,closestDist=0;var upperIndex=0,lowerIndex=0,closestIndex=0;var lowerPoly=[],upperPoly=[];var poly=polygon,v=polygon;if(v.length<3)return result;level++;if(level>maxlevel){console.warn("quickDecomp: max level ("+
maxlevel+") reached.");return result}for(var i=0;i<polygon.length;++i)if(polygonIsReflex(poly,i)){reflexVertices.push(poly[i]);upperDist=lowerDist=Number.MAX_VALUE;for(var j=0;j<polygon.length;++j){if(isLeft(polygonAt(poly,i-1),polygonAt(poly,i),polygonAt(poly,j))&&isRightOn(polygonAt(poly,i-1),polygonAt(poly,i),polygonAt(poly,j-1))){p=getIntersectionPoint(polygonAt(poly,i-1),polygonAt(poly,i),polygonAt(poly,j),polygonAt(poly,j-1));if(isRight(polygonAt(poly,i+1),polygonAt(poly,i),p)){d=sqdist(poly[i],
p);if(d<lowerDist){lowerDist=d;lowerInt=p;lowerIndex=j}}}if(isLeft(polygonAt(poly,i+1),polygonAt(poly,i),polygonAt(poly,j+1))&&isRightOn(polygonAt(poly,i+1),polygonAt(poly,i),polygonAt(poly,j))){p=getIntersectionPoint(polygonAt(poly,i+1),polygonAt(poly,i),polygonAt(poly,j),polygonAt(poly,j+1));if(isLeft(polygonAt(poly,i-1),polygonAt(poly,i),p)){d=sqdist(poly[i],p);if(d<upperDist){upperDist=d;upperInt=p;upperIndex=j}}}}if(lowerIndex===(upperIndex+1)%polygon.length){p[0]=(lowerInt[0]+upperInt[0])/2;
p[1]=(lowerInt[1]+upperInt[1])/2;steinerPoints.push(p);if(i<upperIndex){polygonAppend(lowerPoly,poly,i,upperIndex+1);lowerPoly.push(p);upperPoly.push(p);if(lowerIndex!==0)polygonAppend(upperPoly,poly,lowerIndex,poly.length);polygonAppend(upperPoly,poly,0,i+1)}else{if(i!==0)polygonAppend(lowerPoly,poly,i,poly.length);polygonAppend(lowerPoly,poly,0,upperIndex+1);lowerPoly.push(p);upperPoly.push(p);polygonAppend(upperPoly,poly,lowerIndex,i+1)}}else{if(lowerIndex>upperIndex)upperIndex+=polygon.length;
closestDist=Number.MAX_VALUE;if(upperIndex<lowerIndex)return result;for(var j=lowerIndex;j<=upperIndex;++j)if(isLeftOn(polygonAt(poly,i-1),polygonAt(poly,i),polygonAt(poly,j))&&isRightOn(polygonAt(poly,i+1),polygonAt(poly,i),polygonAt(poly,j))){d=sqdist(polygonAt(poly,i),polygonAt(poly,j));if(d<closestDist&&polygonCanSee2(poly,i,j)){closestDist=d;closestIndex=j%polygon.length}}if(i<closestIndex){polygonAppend(lowerPoly,poly,i,closestIndex+1);if(closestIndex!==0)polygonAppend(upperPoly,poly,closestIndex,
v.length);polygonAppend(upperPoly,poly,0,i+1)}else{if(i!==0)polygonAppend(lowerPoly,poly,i,v.length);polygonAppend(lowerPoly,poly,0,closestIndex+1);polygonAppend(upperPoly,poly,closestIndex,i+1)}}if(lowerPoly.length<upperPoly.length){polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level)}else{polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);polygonQuickDecomp(lowerPoly,
result,reflexVertices,steinerPoints,delta,maxlevel,level)}return result}result.push(polygon);return result}function polygonRemoveCollinearPoints(polygon,precision){var num=0;for(var i=polygon.length-1;polygon.length>3&&i>=0;--i)if(collinear(polygonAt(polygon,i-1),polygonAt(polygon,i),polygonAt(polygon,i+1),precision)){polygon.splice(i%polygon.length,1);num++}return num}
function polygonRemoveDuplicatePoints(polygon,precision){for(var i=polygon.length-1;i>=1;--i){var pi=polygon[i];for(var j=i-1;j>=0;--j)if(points_eq(pi,polygon[j],precision)){polygon.splice(i,1);continue}}}function scalar_eq(a,b,precision){precision=precision||0;return Math.abs(a-b)<=precision}function points_eq(a,b,precision){return scalar_eq(a[0],b[0],precision)&&scalar_eq(a[1],b[1],precision)}
self.polyDecomp={decomp:polygonDecomp,quickDecomp:polygonQuickDecomp,isSimple:polygonIsSimple,removeCollinearPoints:polygonRemoveCollinearPoints,removeDuplicatePoints:polygonRemoveDuplicatePoints,makeCCW:polygonMakeCCW};

}

// lib/c3.js
{
'use strict';let isReady=false;let hasAppStarted=false;let buildMode="dev";const C3=self.C3=class C3{constructor(){throw TypeError("static class can't be instantiated");}static SetReady(){isReady=true}static IsReady(){return isReady}static SetAppStarted(){hasAppStarted=true}static HasAppStarted(){return hasAppStarted}static SetBuildMode(m){buildMode=m}static GetBuildMode(){return buildMode}static IsReleaseBuild(){return buildMode==="final"}};C3.isDebug=false;C3.isDebugDefend=false;
C3.hardwareConcurrency=navigator.hardwareConcurrency||2;self.C3X={};

}

// ../lib/queryParser.js
{
'use strict';const C3=self.C3;
C3.QueryParser=class QueryParser{constructor(queryString){this._queryString=queryString;this._parameters=new Map;this._Parse()}_Parse(){let str=this._queryString;if(str.startsWith("?")||str.startsWith("#"))str=str.substr(1);const arr=str.split("&");for(const p of arr)this._ParseParameter(p)}_ParseParameter(p){if(!p)return;if(!p.includes("=")){this._parameters.set(p,null);return}const i=p.indexOf("=");const parameterName=decodeURIComponent(p.substring(0,i));const parameterValue=decodeURIComponent(p.substring(i+
1));this._parameters.set(parameterName,parameterValue)}LogAll(){for(const e of this._parameters)console.log("[QueryParser] Parameter '"+e[0]+"' = "+(e[1]===null?"null":"'"+e[1]+"'"))}Has(name){return this._parameters.has(name)}Get(name){const ret=this._parameters.get(name);if(typeof ret==="undefined")return null;else return ret}ClearHash(){history.replaceState("",document.title,location.pathname+location.search)}Reparse(str){this._queryString=str;this._parameters.clear();this._Parse()}};
C3.QueryString=new C3.QueryParser(location.search);C3.LocationHashString=new C3.QueryParser(location.hash);if(C3.QueryString.Get("mode")!=="dev")C3.SetBuildMode("final");

}

// ../lib/detect/detect.js
{
'use strict';const C3=self.C3;const UNKNOWN="(unknown)";const UA=navigator.userAgent;
let Flags={linux:/linux|openbsd|freebsd|netbsd/i.test(UA),chromeOS:/CrOS/.test(UA),windowsTizen:/trident|iemobile|msie|tizen/i.test(UA),genericMS:/trident|iemobile|msie|edge\//i.test(UA),opera:/OPR\//.test(UA),blackberry:/bb10/i.test(UA),edge:/edge\//i.test(UA),trident:/trident/i.test(UA),webkit:/webkit/i.test(UA),safari:/safari\//i.test(UA),chrome:/chrome\//i.test(UA),chromium:/chromium\//i.test(UA),crosswalk:/crosswalk|xwalk/i.test(UA),nwjs:/nwjs/i.test(UA),amazonwebapp:/amazonwebappplatform/i.test(UA),
webview:/wv\)/.test(UA),android:/android/i.test(UA),nokia:/nokiabrowser\/[0-9.]+/i.test(UA)};
let Versions={windows:/windows\s+nt\s+\d+\.\d+/i.exec(UA),OSX:/mac\s+os\s+x\s+[0-9_]+/i.exec(UA),android:/android\s+[0-9.]+/i.exec(UA),opera:/OPR\/[0-9.]+/.exec(UA),tizen:/tizen\s+[0-9.]+/i.exec(UA),iphone:/iphone\s+os\s+[0-9_]+/i.exec(UA),ipad:/ipad[^)]*os\s+[0-9_]+/i.exec(UA),winPhone:/windows\s+phone\s+[0-9.]+/i.exec(UA),winPhoneOS:/windows\s+phone\s+os\s+[0-9.]+/i.exec(UA),chrome:/chrome\/[0-9.]+/i.exec(UA),chromium:/chromium\/[0-9.]+/i.exec(UA),nwjs:/nwjs\/[0-9.]+/i.exec(UA),firefox:/firefox\/[0-9.]+/i.exec(UA),
ie:/msie\s+[0-9.]+/i.exec(UA),edge:/edge\/[0-9.]+/i.exec(UA),edgeChromium:/edg\/[0-9.]+/i.exec(UA),silk:/silk\/[0-9.]+/i.exec(UA)};let os=UNKNOWN;let os_version=UNKNOWN;let browser=UNKNOWN;let browser_version=UNKNOWN;let engine=UNKNOWN;let context="browser";let is_desktop=false;let is_desktop_app=false;let testResults=new Map;
function runTest(name,value,fn){if(value===true){const result=fn();testResults.set(name,true)}else if(value&&value.length){const result=fn(value[0]);testResults.set(name,true)}else;}
runTest("isWindows",Versions.windows,WIN=>{os="Windows";const nt_ver=WIN.split(" ")[2];if(nt_ver)switch(nt_ver){case "5.0":os_version="2000";break;case "5.1":os_version="XP";break;case "5.2":os_version="XP";break;case "6.0":os_version="Vista";break;case "6.1":os_version="7";break;case "6.2":os_version="8";break;case "6.3":os_version="8.1";break;case "10.0":os_version="10";break}});
runTest("isOSX",Versions.OSX,OSX=>{os="Mac OS X";const osx_ver=OSX.split(" ")[3];if(osx_ver)os_version=osx_ver.replace("_",".")});runTest("isLinux",Flags.linux,()=>{os="Linux"});runTest("isChromeOS",Flags.chromeOS,()=>{os="Chrome OS"});runTest("isAndroid",!Flags.windowsTizen&&Versions.android,AND=>{os="Android";const android_ver=AND.split(" ")[1];if(android_ver)os_version=android_ver});runTest("isTizen",Versions.tizen,TIZ=>{os="Tizen";const tizen_ver=TIZ.split(" ")[1];if(tizen_ver)os_version=tizen_ver});
runTest("isIPhone",!Flags.windowsTizen&&Versions.iphone,IOS=>{os="iOS";const ios_ver=IOS.split(" ")[2];if(ios_ver)os_version=ios_ver.replace("_",".")});runTest("isIPad",!Flags.windowsTizen&&Versions.ipad,IOS=>{os="iOS";const ios_ver=IOS.split(" ")[3];if(ios_ver)os_version=ios_ver.replace("_",".")});runTest("isWindowsPhone",Versions.winPhone,WIN=>{os="Windows Phone";const ver_str=WIN.split(" ")[2];if(ver_str)os_version=ver_str});
runTest("isWindowsPhoneOS",Versions.winPhoneOS,WIN=>{os="Windows Phone";const ver_str=WIN.split(" ")[3];if(ver_str)os_version=ver_str});runTest("isBlackberry",Flags.blackberry,()=>{os="Blackberry";os_version="10";browser="stock";engine="webkit"});runTest("isChrome",!Flags.edge&&!Flags.opera&&Versions.chrome,CHR=>{browser="Chrome";engine="Chromium";const ver_str=CHR.split("/")[1];if(ver_str)browser_version=ver_str});
runTest("isOpera",Versions.opera,OPR=>{browser="Opera";engine="Chromium";const ver_str=OPR.split("/")[1];if(ver_str)browser_version=ver_str});runTest("isChromium",Versions.chromium,CHR=>{browser="Chromium";engine="Chromium";const ver_str=CHR.split("/")[1];if(ver_str)browser_version=ver_str});runTest("isFirefox",Versions.firefox,FIR=>{browser="Firefox";engine="Gecko";const ver_str=FIR.split("/")[1];if(ver_str)browser_version=ver_str});
runTest("isInternetExplorer",Versions.ie,IE=>{browser="Internet Explorer";engine="Trident";const ver_str=IE.split(" ")[1];if(ver_str)browser_version=ver_str});runTest("isTrident",browser!=="Internet Explorer"&&Flags.trident,()=>{engine="Trident";const rRv=/rv:[0-9.]+/i.exec(UA);if(rRv&&rRv.length){browser="Internet Explorer";const ver_str=rRv[0].split(":")[1];if(ver_str)browser_version=ver_str}});
runTest("isEdge",Versions.edge,EDGE=>{browser="Edge";engine="Edge";const ver_str=EDGE.split("/")[1];if(ver_str)browser_version=ver_str});runTest("isEdgeChromium",Versions.edgeChromium,EDGECHR=>{browser="Edge";engine="Chromium";const ver_str=EDGECHR.split("/")[1];if(ver_str)browser_version=ver_str});
runTest("isSafari",Flags.safari&&!Flags.nokia&&!Flags.chrome&&!Flags.chromium&&!Flags.genericIE&&!Flags.blackberry,()=>{browser="Safari";engine="WebKit";const rVersion=/version\/[0-9.]+/i.exec(UA);const rChromeiOS=/crios\/[0-9.]+/i.exec(UA);const rFirefoxiOS=/fxios\/[0-9.]+/i.exec(UA);if(rVersion&&rVersion.length){const ver_str=rVersion[0].split("/")[1];if(ver_str)browser_version=ver_str}if(rChromeiOS&&rChromeiOS.length){browser="Chrome for iOS";const ver_str=rChromeiOS[0].split("/")[1];if(ver_str)browser_version=
ver_str}if(rFirefoxiOS&&rFirefoxiOS.length){browser="Firefox for iOS";const ver_str=rFirefoxiOS[0].split("/")[1];if(ver_str)browser_version=ver_str}});runTest("isSilk",Versions.silk,SILK=>{browser="Silk";const ver_str=SILK.split("/")[1];if(ver_str)browser_version=ver_str});runTest("isCrosswalk",Flags.crosswalk,()=>context="crosswalk");runTest("isCordova",self["device"]&&(self["device"]["cordova"]||self["device"]["phonegap"]),()=>context="cordova");
runTest("isNWJS",Versions.nwjs,NWJS=>{context="nwjs";browser="NW.js";engine="Chromium";const ver_str=NWJS.split("/")[1];if(ver_str)browser_version=ver_str});runTest("isAmazonWebApp",Flags.amazonwebapp,()=>context="webapp");runTest("isHomeScreenWebApp",context!=="nwjs"&&typeof window!=="undefined"&&(window.matchMedia&&window.matchMedia("(display-mode: standalone)").matches||navigator["standalone"]),()=>context="webapp");
runTest("isFalseSafari",browser==="Safari"&&(os==="Android"||os==="Tizen"||os==="Blackberry"),()=>browser="stock");runTest("isAndroidWebview",browser==="Chrome"&&context==="browser"&&Flags.webview,()=>context="webview");runTest("isFirefoxOS",browser==="Firefox"&&os===UNKNOWN,()=>os="Firefox OS");runTest("isAndroidFallback",os===UNKNOWN&&!Flags.windowsTizen&&Flags.android,()=>os="Android");runTest("isTridentFallback",os===UNKNOWN&&Flags.trident,()=>engine="Trident");
runTest("isWebkitFallback",os===UNKNOWN&&Flags.webkit,()=>engine="WebKit");runTest("isDesktop",(()=>{return os==="Windows"||os==="Mac OS X"||os==="Linux"||os==="Chrome OS"||context==="nwjs"})(),()=>is_desktop=true);is_desktop_app=context==="nwjs";const is_ipad_os=os==="Mac OS X"&&navigator["maxTouchPoints"]&&navigator["maxTouchPoints"]>2;if(is_ipad_os){os="iOS";os_version=browser_version;is_desktop=false;is_desktop_app=false}
C3.Platform={OS:os,OSVersion:os_version,Browser:browser,BrowserVersion:browser_version,BrowserVersionNumber:parseFloat(browser_version),BrowserEngine:engine,Context:context,IsDesktop:is_desktop,IsMobile:!is_desktop,IsDesktopApp:is_desktop_app,IsChromeWebStore:!!(self["chrome"]&&self["chrome"]["runtime"]&&self["chrome"]["runtime"]["id"]),IsAppleOS:os==="Mac OS X"||os==="iOS",IsIpadOS:is_ipad_os,IsLinux:os==="Linux"};

}

// ../lib/storage/kvStorage.js
{
'use strict';{const VERSION=2;const STORE_NAME="keyvaluepairs";const DATABASE_PROMISE_MAP=new Map;const SUPPORTS_GETALL=typeof IDBObjectStore!=="undefined"&&typeof IDBObjectStore.prototype.getAll==="function";const SUPPORTS_GETALLKEYS=typeof IDBObjectStore!=="undefined"&&typeof IDBObjectStore.prototype.getAllKeys==="function";function asyncifyRequest(request){return new Promise((res,rej)=>{request.onsuccess=()=>res(request.result);request.onerror=()=>rej(request.error)})}function asyncifyTransaction(tx){return new Promise((res,
rej)=>{tx.oncomplete=()=>res();tx.onerror=()=>rej(tx.error);tx.onabort=()=>rej(tx.error)})}function openReadOnlyTransaction(name,method){return openTransaction(name,method)}function openWriteTransaction(name,method){return openTransaction(name,method,true)}async function openTransaction(name,method,write=false,allowRetry=true){const db=await lazyOpenDatabase(name);try{const tx=db.transaction([STORE_NAME],write?"readwrite":"readonly");return method(tx)}catch(err){if(allowRetry&&err["name"]==="InvalidStateError"){DATABASE_PROMISE_MAP.delete(name);
return openTransaction(name,method,write,false)}else throw err;}}function lazyOpenDatabase(name){RequireString(name);let dbPromise=DATABASE_PROMISE_MAP.get(name);if(!(dbPromise instanceof Promise)){dbPromise=openDatabase(name);DATABASE_PROMISE_MAP.set(name,dbPromise);dbPromise.catch(err=>DATABASE_PROMISE_MAP.delete(name))}return dbPromise}async function openDatabase(name){RequireString(name);const openRequest=indexedDB.open(name,VERSION);openRequest.addEventListener("upgradeneeded",e=>{try{const db=
e.target.result;db.createObjectStore(STORE_NAME)}catch(err){console.error(`Failed to create objectstore for database ${name}`,err)}});return asyncifyRequest(openRequest)}function RequireString(x){if(typeof x!=="string")throw new TypeError("expected string");}function getEntriesFromCursor(tx,type){const request=tx.objectStore(STORE_NAME).openCursor();return new Promise(resolve=>{const results=[];request.onsuccess=event=>{const cursor=event.target.result;if(cursor){switch(type){case "entries":results.push([cursor.key,
cursor.value]);break;case "keys":results.push(cursor.key);break;case "values":results.push(cursor.value);break}cursor.continue()}else resolve(results)}})}class KVStorageContainer{constructor(name){RequireString(name);this.name=name}async ready(){await lazyOpenDatabase(this.name)}set(key,value){RequireString(key);return openWriteTransaction(this.name,async tx=>{const request=tx.objectStore(STORE_NAME).put(value,key);const requestPromise=asyncifyRequest(request);const txPromise=asyncifyTransaction(tx);
await Promise.all([txPromise,requestPromise])})}get(key){RequireString(key);return openReadOnlyTransaction(this.name,async tx=>{const request=tx.objectStore(STORE_NAME).get(key);const requestPromise=asyncifyRequest(request);const txPromise=asyncifyTransaction(tx);const [_,value]=await Promise.all([txPromise,requestPromise]);return value})}delete(key){RequireString(key);return openWriteTransaction(this.name,async tx=>{const request=tx.objectStore(STORE_NAME).delete(key);const requestPromise=asyncifyRequest(request);
const txPromise=asyncifyTransaction(tx);await Promise.all([txPromise,requestPromise])})}clear(){return openWriteTransaction(this.name,async tx=>{const request=tx.objectStore(STORE_NAME).clear();const requestPromise=asyncifyRequest(request);const txPromise=asyncifyTransaction(tx);await Promise.all([txPromise,requestPromise])})}keys(){return openReadOnlyTransaction(this.name,async tx=>{let requestPromise;if(SUPPORTS_GETALLKEYS){const request=tx.objectStore(STORE_NAME).getAllKeys();requestPromise=asyncifyRequest(request)}else requestPromise=
getEntriesFromCursor(tx,"keys");const txPromise=asyncifyTransaction(tx);const [_,value]=await Promise.all([txPromise,requestPromise]);return value})}values(){return openReadOnlyTransaction(this.name,async tx=>{let requestPromise;if(SUPPORTS_GETALL){const request=tx.objectStore(STORE_NAME).getAll();requestPromise=asyncifyRequest(request)}else requestPromise=getEntriesFromCursor(tx,"values");const txPromise=asyncifyTransaction(tx);const [_,value]=await Promise.all([txPromise,requestPromise]);return value})}entries(){return openReadOnlyTransaction(this.name,
async tx=>{const requestPromise=getEntriesFromCursor(tx,"entries");const txPromise=asyncifyTransaction(tx);const [_,value]=await Promise.all([txPromise,requestPromise]);return value})}}self.KVStorageContainer=KVStorageContainer};

}

// ../lib/storage/localForageAdaptor.js
{
'use strict';{const KVStorageContainer=self.KVStorageContainer;const CRITICAL_ERRORS=[/no available storage method found/i,/an attempt was made to break through the security policy of the user agent/i,/the user denied permission to access the database/i,/a mutation operation was attempted on a database that did not allow mutations/i,/idbfactory\.open\(\) called in an invalid security context/i];const memoryStorage=new WeakMap;let isInMemory=false;if(typeof indexedDB==="undefined"){isInMemory=true;
console.warn("Unable to use local storage because indexedDB is not defined")}function NOT_IMPLEMENTED(name){throw new Error(`"${name}" is not implemented`);}function DISALLOW_CALLBACK(fn){if(typeof fn==="function")throw new Error(`localforage callback API is not implemented; please use the promise API instead`);}function StructuredClone(value){if(typeof value==="object")return new Promise(resolve=>{const {port1,port2}=new MessageChannel;port2.onmessage=ev=>resolve(ev.data);port1.postMessage(value)});
else return Promise.resolve(value)}class ForageAdaptor{constructor(inst){this._inst=inst;memoryStorage.set(this,new Map)}_MaybeSwitchToMemoryFallback(err){if(isInMemory)return;for(const regex of CRITICAL_ERRORS)if(err&&regex.test(err.message)){console.error("Unable to use local storage, reverting to in-memory store: ",err,err.message);isInMemory=true;break}}async _getItemFallback(name){const value=memoryStorage.get(this).get(name);const ret=await StructuredClone(value);return typeof ret==="undefined"?
null:ret}async _setItemFallback(name,value){value=await StructuredClone(value);memoryStorage.get(this).set(name,value)}_removeItemFallback(name){memoryStorage.get(this).delete(name)}_clearFallback(){memoryStorage.get(this).clear()}_keysFallback(){return Array.from(memoryStorage.get(this).keys())}IsUsingFallback(){return isInMemory}async getItem(key,successCallback){DISALLOW_CALLBACK(successCallback);if(isInMemory)return await this._getItemFallback(key);let result;try{result=await this._inst.get(key)}catch(err){this._MaybeSwitchToMemoryFallback(err);
if(isInMemory)return await this._getItemFallback(key);else{console.error(`Error reading '${key}' from storage, returning null: `,err);return null}}return typeof result==="undefined"?null:result}async setItem(key,value,successCallback){DISALLOW_CALLBACK(successCallback);if(typeof value==="undefined")value=null;if(isInMemory){await this._setItemFallback(key,value);return}try{await this._inst.set(key,value)}catch(err){this._MaybeSwitchToMemoryFallback(err);if(isInMemory)await this._setItemFallback(key,
value);else throw err;}}async removeItem(key,successCallback){DISALLOW_CALLBACK(successCallback);if(isInMemory){this._removeItemFallback(key);return}try{await this._inst.delete(key)}catch(err){this._MaybeSwitchToMemoryFallback(err);if(isInMemory)this._removeItemFallback(key);else console.error(`Error removing '${key}' from storage: `,err)}}async clear(successCallback){DISALLOW_CALLBACK(successCallback);if(isInMemory){this._clearFallback();return}try{await this._inst.clear()}catch(err){this._MaybeSwitchToMemoryFallback(err);
if(isInMemory)this._clearFallback();else console.error(`Error clearing storage: `,err)}}async keys(successCallback){DISALLOW_CALLBACK(successCallback);if(isInMemory)return this._keysFallback();let result=[];try{result=await this._inst.keys()}catch(err){this._MaybeSwitchToMemoryFallback(err);if(isInMemory)return this._keysFallback();else console.error(`Error getting storage keys: `,err)}return result}ready(successCallback){DISALLOW_CALLBACK(successCallback);if(isInMemory)return Promise.resolve(true);
else return this._inst.ready()}createInstance(options){if(typeof options!=="object")throw new TypeError("invalid options object");const name=options["name"];if(typeof name!=="string")throw new TypeError("invalid store name");const inst=new KVStorageContainer(name);return new ForageAdaptor(inst)}length(successCallback){NOT_IMPLEMENTED("localforage.length()")}key(index,successCallback){NOT_IMPLEMENTED("localforage.key()")}iterate(iteratorCallback,successCallback){NOT_IMPLEMENTED("localforage.iterate()")}setDriver(driverName){NOT_IMPLEMENTED("localforage.setDriver()")}config(options){NOT_IMPLEMENTED("localforage.config()")}defineDriver(customDriver){NOT_IMPLEMENTED("localforage.defineDriver()")}driver(){NOT_IMPLEMENTED("localforage.driver()")}supports(driverName){NOT_IMPLEMENTED("localforage.supports()")}dropInstance(){NOT_IMPLEMENTED("localforage.dropInstance()")}disableMemoryMode(){isInMemory=
false}}self["localforage"]=new ForageAdaptor(new KVStorageContainer("localforage"))};

}

// ../lib/misc/supports.js
{
'use strict';const C3=self.C3;C3.Supports={};C3.Supports.WebAnimations=(()=>{try{if(C3.Platform.Browser==="Safari")return false;if(typeof document==="undefined")return false;const e=document.createElement("div");if(typeof e.animate==="undefined")return false;const player=e.animate([{opacity:"0"},{opacity:"1"}],1E3);return typeof player.reverse!=="undefined"}catch(e){return false}})();C3.Supports.DialogElement=typeof HTMLDialogElement!=="undefined";C3.Supports.RequestIdleCallback=!!self.requestIdleCallback;
C3.Supports.ImageBitmap=!!self.createImageBitmap;C3.Supports.ImageBitmapOptions=false;if(C3.Supports.ImageBitmap)try{self.createImageBitmap(new ImageData(32,32),{premultiplyAlpha:"none"}).then(imageBitmap=>{C3.Supports.ImageBitmapOptions=true}).catch(err=>{C3.Supports.ImageBitmapOptions=false})}catch(e){C3.Supports.ImageBitmapOptions=false}C3.Supports.ClipboardReadText=!!(navigator["clipboard"]&&navigator["clipboard"]["readText"]&&C3.Platform.Browser!=="Firefox");
C3.Supports.PermissionsQuery=!!(navigator["permissions"]&&navigator["permissions"]["query"]);C3.Supports.Proxies=typeof Proxy!=="undefined";C3.Supports.DownloadAttribute=(()=>{if(typeof document==="undefined")return false;const a=document.createElement("a");return typeof a.download!=="undefined"})();C3.Supports.CanvasToBlob=(()=>{return typeof HTMLCanvasElement!=="undefined"&&HTMLCanvasElement.prototype.toBlob})();C3.Supports.Fetch=typeof fetch==="function";
C3.Supports.PersistentStorage=!!(self.isSecureContext&&C3.Platform.Browser!=="Opera"&&(navigator["storage"]&&navigator["storage"]["persist"]));C3.Supports.StorageQuotaEstimate=!!(self.isSecureContext&&(navigator["storage"]&&navigator["storage"]["estimate"]));C3.Supports.Fullscreen=(()=>{if(typeof document==="undefined")return false;if(C3.Platform.OS==="iOS")return false;const elem=document.documentElement;return!!(elem.requestFullscreen||elem.msRequestFullscreen||elem.mozRequestFullScreen||elem.webkitRequestFullscreen)})();
C3.Supports.ImageDecoder=typeof self["ImageDecoder"]!=="undefined";C3.Supports.NativeFileSystemAPI=!!self["showOpenFilePicker"];C3.Supports.NavigatorFontsQuery=!!(navigator["fonts"]&&navigator["fonts"]["query"]);

}

// ../lib/misc/polyfills.js
{
'use strict';const C3=self.C3;if(!String.prototype.trimStart){const startWhitespace=/^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]*/;String.prototype.trimStart=function trimStart(){return this.replace(startWhitespace,"")}}
if(!String.prototype.trimEnd){const endWhitespace=/[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]*$/;String.prototype.trimEnd=function trimEnd(){return this.replace(endWhitespace,"")}}if(!String.prototype.replaceAll)String.prototype.replaceAll=function replaceAll(find,replace){return this.replace(new RegExp(C3.EscapeRegex(find),"g"),replace)};if(!Array.prototype.values)Array.prototype.values=function*(){for(const i of this)yield i};
if(!Array.prototype.flat){function arrayFlat(arr,depth){return arr.reduce((acc,val)=>{if(depth>0&&Array.isArray(val)){Array.prototype.push.apply(acc,arrayFlat(val,depth-1));return acc}else{acc.push(val);return acc}},[])}Array.prototype.flat=function(depth=1){return arrayFlat(this,depth)}}if(!Array.prototype.at)Array.prototype.at=function at(n){n=Math.trunc(n)||0;if(n<0)n+=this.length;if(n<0||n>=this.length)return undefined;return this[n]};
if(!String.prototype.at)String.prototype.at=function at(n){n=Math.trunc(n)||0;if(n<0)n+=this.length;if(n<0||n>=this.length)return undefined;return this[n]};if(!RegExp.escape)RegExp.escape=function(s){return String(s).replace(/[\\^$*+?.()|[\]{}]/g,"\\$&")};
if(navigator["storage"]&&!navigator["storage"]["estimate"]&&navigator["webkitTemporaryStorage"]&&navigator["webkitTemporaryStorage"]["queryUsageAndQuota"])navigator["storage"]["estimate"]=function(){return new Promise((resolve,reject)=>{return navigator["webkitTemporaryStorage"]["queryUsageAndQuota"]((usage,quota)=>resolve({"usage":usage,"quota":quota}),reject)})};if(typeof self.isSecureContext==="undefined")self.isSecureContext=location.protocol==="https:";
if(typeof self["globalThis"]==="undefined")self["globalThis"]=self;

}

// lib/misc/assert.js
{
'use strict';const C3=self.C3;function assertFail(msg_){let stack=C3.GetCallStack();let msg="Assertion failure: "+msg_+"\n\nStack trace:\n"+stack;console.error(msg)}self.assert=function assert(cnd_,msg_){if(!cnd_)assertFail(msg_)};

}

// ../lib/misc/typeChecks.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;C3.IsNumber=function IsNumber(x){return typeof x==="number"};C3.IsFiniteNumber=function IsFiniteNumber(x){return C3.IsNumber(x)&&isFinite(x)};C3.RequireNumber=function RequireNumber(x){if(!C3.IsNumber(x))throw new TypeError("expected number");};C3.RequireOptionalNumber=function RequireOptionalNumber(x){if(C3.IsNullOrUndefined(x))return};
C3.RequireNumberInRange=function RequireNumberInRange(x,low,high){if(!C3.IsNumber(x)||isNaN(x)||low>x||high<x)throw new RangeError("number outside of range");};C3.RequireAllNumber=function RequireAllNumber(...args){for(let a of args);};C3.RequireFiniteNumber=function RequireFiniteNumber(x){if(!C3.IsFiniteNumber(x))throw new TypeError("expected finite number");};C3.RequireOptionalFiniteNumber=function RequireOptionalFiniteNumber(x){if(C3.IsNullOrUndefined(x))return};
C3.RequireAllFiniteNumber=function RequireAllFiniteNumber(...args){for(let a of args);};C3.IsString=function IsString(x){return typeof x==="string"};C3.RequireString=function RequireString(x){if(!C3.IsString(x))throw new TypeError("expected string");};C3.RequireOptionalString=function RequireOptionalString(x){if(C3.IsNullOrUndefined(x))return};C3.RequireAllString=function RequireAllString(...args){for(let a of args);};
C3.IsSimpleObject=function IsSimpleObject(x){if(typeof x!=="object"||x===null)return false;let proto=Object.getPrototypeOf(x);return proto?proto.constructor===Object:proto===null};C3.RequireSimpleObject=function RequireSimpleObject(x){if(!C3.IsSimpleObject(x))throw new TypeError("expected simple object");};C3.RequireOptionalSimpleObject=function RequireSimpleObject(x){if(C3.IsNullOrUndefined(x))return;if(!C3.IsSimpleObject(x))throw new TypeError("expected simple object");};
C3.IsObject=function IsObject(x){return typeof x==="object"&&x!==null&&!Array.isArray(x)};C3.RequireObject=function RequireObject(x){if(!C3.IsObject(x))throw new TypeError("expected object");};C3.RequireOptionalObject=function RequireOptionalObject(x){if(C3.IsNullOrUndefined(x))return};C3.RequireAllObject=function RequireAllObject(...args){for(let a of args);};C3.IsFileLike=function IsFileLike(x){return C3.IsInstanceOf(x,Blob)&&typeof x["name"]==="string"};
C3.RequireFileLike=function RequireFileLike(x){if(!C3.IsFileLike(x))throw new TypeError("expected file");};C3.RequireOptionalFileLike=function RequireOptionalFileLike(x){if(C3.IsNullOrUndefined(x))return};C3.IsArray=function IsArray(x){return Array.isArray(x)};C3.RequireArray=function RequireArray(x){if(!C3.IsArray(x))throw new TypeError("expected array");};C3.RequireOptionalArray=function RequireOptionalArray(x){if(C3.IsNullOrUndefined(x))return};
C3.RequireAllArray=function RequireAllArray(...args){for(let a of args);};C3.Is2DArray=function(x){if(!C3.IsArray(x))return false;if(!x.length)return true;if(!C3.IsArray(x[0]))return false;return true};C3.Require2DArray=function Require2DArray(x){if(!C3.Is2DArray(x))throw new TypeError("expected 2d array");for(let arr of x)if(!C3.IsArray(arr))throw new TypeError("expected 2d array");};C3.RequireOptional2DArray=function Require2DArray(x){if(C3.IsNullOrUndefined(x))return};
C3.IsFunction=function IsFunction(x){return typeof x==="function"};C3.RequireFunction=function RequireFunction(x,f){if(!C3.IsFunction(x))throw new TypeError("expected function");if(!C3.IsNullOrUndefined(f))if(x!==f)throw new TypeError("expected same function reference");};C3.RequireOptionalFunction=function RequireOptionalFunction(x){if(C3.IsNullOrUndefined(x))return};C3.RequireAllFunction=function RequireAllFunction(...args){for(let a of args);};
C3.RequireAnyFunction=function RequireAllFunction(x,...args){if(!C3.IsFunction(x))throw new TypeError("expected function");if(!args.length)throw new Error("missing comparison functions");for(let a of args)if(!C3.IsNullOrUndefined(a))if(x===a)return;throw new TypeError("expected same function reference");};C3.RequireOptionalAllFunction=function RequireAllFunction(...args){if(C3.IsNullOrUndefined(args))return;for(let a of args);};C3.IsInstanceOf=function IsInstanceOf(x,t){return x instanceof t};
C3.IsInstanceOfAny=function IsInstanceOfAny(x,...args){for(let t of args)if(C3.IsInstanceOf(x,t))return true;return false};C3.RequireInstanceOf=function RequireInstanceOf(x,t){if(!C3.IsInstanceOf(x,t))throw new TypeError("unexpected type");};C3.RequireOptionalInstanceOf=function RequireOptionalInstanceOf(x,t){if(C3.IsNullOrUndefined(x))return};C3.RequireAllInstanceOf=function RequireAllInstanceOf(t,...args){for(let a of args);};
C3.RequireAnyInstanceOf=function RequireAnyInstanceOf(x,...args){if(!C3.IsInstanceOfAny(x,...args))throw new TypeError("unexpected type");};C3.RequireAnyOptionalInstanceOf=function RequireAnyOptionalInstanceOf(x,...args){if(C3.IsNullOrUndefined(x))return;if(!C3.IsInstanceOfAny(x,...args))throw new TypeError("unexpected type");};C3.IsArrayOf=function IsArrayOf(x,t){for(let i of x)if(!C3.IsInstanceOf(i,t))return false;return true};
C3.IsArrayOfFiniteNumbers=function IsArrayOfFiniteNumbers(x){for(let i of x)if(!C3.IsFiniteNumber(i))return false;return true};C3.RequireArrayOf=function RequireArrayOf(x,t){for(let i of x);};C3.RequireOptionalArrayOf=function RequireOptionalArrayOf(x,t){if(C3.IsNullOrUndefined(x))return;for(let i of x);};C3.RequireArrayOfAny=function RequireArrayOf(x,...args){for(let i of x);};
C3.RequireOptionalArrayOfAny=function RequireOptionalArrayOfAny(x,...args){if(C3.IsNullOrUndefined(x))return;for(let i of x);};C3.IsDOMNode=function IsDOMNode(d,n){if(C3.IsNullOrUndefined(d)||!C3.IsString(d.nodeName))return false;return!n||C3.equalsNoCase(d.nodeName,n)};C3.RequireDOMNode=function RequireDOMNode(d,n){if(C3.IsNullOrUndefined(d)||!C3.IsString(d.nodeName))throw new TypeError("expected DOM node");if(n&&!C3.equalsNoCase(d.nodeName,n))throw new TypeError(`expected DOM '${n}' node`);};
C3.RequireOptionalDOMNode=function RequireOptionalDOMNode(d,n){if(C3.IsNullOrUndefined(d))return};C3.IsHTMLElement=function IsHTMLElement(e,t){if(C3.IsNullOrUndefined(e)||!C3.IsString(e.tagName))return false;return!t||C3.equalsNoCase(e.tagName,t)};C3.RequireHTMLElement=function RequireHTMLElement(e,t){if(C3.IsNullOrUndefined(e)||!C3.IsString(e.tagName))throw new TypeError("expected HTML element");if(t&&!C3.equalsNoCase(e.tagName,t))throw new TypeError(`expected HTML '${t}' element`);};
C3.RequireOptionalHTMLElement=function RequireOptionalHTMLElement(e,t){if(C3.IsNullOrUndefined(e))return};C3.IsDrawable=function IsDrawable(d){return C3.IsHTMLElement(d,"img")||C3.IsHTMLElement(d,"canvas")||C3.IsHTMLElement(d,"video")||typeof OffscreenCanvas!=="undefined"&&d instanceof OffscreenCanvas||typeof ImageBitmap!=="undefined"&&d instanceof ImageBitmap};C3.RequireDrawable=function RequireDrawable(d){if(!C3.IsDrawable(d))throw new TypeError("expected drawable");};
C3.RequireOptionalDrawable=function RequireOptionalDrawable(d){if(C3.IsNullOrUndefined(d))return};C3.IsDrawableOrImageData=function IsDrawableOrImageData(x){if(x instanceof ImageData)return true;return C3.IsDrawable(x)};C3.RequireDrawableOrImageData=function RequireDrawableOrImageData(d){if(!C3.IsDrawableOrImageData(d))throw new TypeError("expected drawable or image data");};
C3.RequireOptionalDrawableOrImageData=function RequireOptionalDrawableOrImageData(d){if(C3.IsNullOrUndefined(d))return;if(!C3.IsDrawableOrImageData(d))throw new TypeError("expected drawable or image data");};C3.IsStringLike=function IsStringLike(x){return typeof x==="string"||x instanceof C3.HtmlString||x instanceof C3.BBString};C3.RequireStringLike=function RequireStringLike(x){if(!C3.IsStringLike(x))throw new TypeError("expected string-like");};C3.RequireOptionalStringLike=function RequireOptionalStringLike(x){if(C3.IsNullOrUndefined(x))return};
C3.RequireAllStringLike=function RequireAllStringLike(...args){for(let a of args);};C3.RequireOverride=function RequireOverride(){throw new Error("must be overridden");};C3.NotYetImplemented=function NotYetImplemented(){throw new Error("not yet implemented");};C3.IsDefined=function isDefined(obj,...follow){let currentObject=obj;if(typeof currentObject==="undefined")return false;for(let key of follow){if(typeof currentObject[key]==="undefined")return false;currentObject=currentObject[key]}return true};
C3.IsNullOrUndefined=function(x){return typeof x==="undefined"||x===null};C3.AreArrayElementsOfSameType=function(arr){let type=arr[0].constructor;for(let x of arr)if(x.constructor!==type)return false;return type};C3.AreArrayElementsOfType=function(arr,t){for(let x of arr)if(!(x instanceof t))return false;return true};const TypedArray=Object.getPrototypeOf(Uint8Array);C3.IsTypedArray=function(view){return C3.IsInstanceOf(view,TypedArray)};C3.RequireTypedArray=function(view){};
C3.WeakRequireTypedArray=function WeakRequireTypedArray(inst){C3.WeakRequireInstanceOf(inst,TypedArray)};C3.WeakRequireAnyInstanceOf=function WeakRequireAnyInstanceOf(inst,...ctors){if(!C3.WeakIsAnyInstanceOf(inst,...ctors))throw new TypeError("unexpected type");};C3.WeakIsAnyInstanceOf=function WeakIsAnyInstanceOf(inst,...ctors){for(const ctor of ctors)if(C3.WeakIsInstanceOf(inst,ctor))return true;return false};
C3.WeakRequireInstanceOf=function WeakRequireInstanceOf(inst,ctor){if(!C3.WeakIsInstanceOf(inst,ctor))throw new TypeError("unexpected type");};C3.WeakIsInstanceOf=function WeakIsInstanceOf(inst,ctor){while(inst=Object.getPrototypeOf(inst))if(inst.constructor.name===ctor.name)return true;return false};C3X.RequireNumber=C3.RequireNumber;C3X.RequireOptionalNumber=C3.RequireOptionalNumber;C3X.RequireFiniteNumber=C3.RequireFiniteNumber;C3X.RequireOptionalFiniteNumber=C3.RequireOptionalFiniteNumber;
C3X.RequireString=C3.RequireString;C3X.RequireOptionalString=C3.RequireOptionalString;C3X.RequireObject=C3.RequireObject;C3X.RequireOptionalObject=C3.RequireOptionalObject;C3X.RequireArray=C3.RequireArray;C3X.RequireOptionalArray=C3.RequireOptionalArray;C3X.RequireFunction=C3.RequireFunction;C3X.RequireOptionalFunction=C3.RequireOptionalFunction;C3X.RequireInstanceOf=C3.RequireInstanceOf;C3X.RequireOptionalInstanceOf=C3.RequireOptionalInstanceOf;C3X.IsNullOrUndefined=C3.IsNullOrUndefined;

}

// ../lib/misc/jsutil.js
{
'use strict';const C3=self.C3;const logRafIds=new Map;C3.RafLog=function RaFLog(name,...args){if(!logRafIds.has(name))logRafIds.set(name,-1);if(logRafIds.get(name)===-1)logRafIds.set(name,requestAnimationFrame(()=>{console.log(`%c${name}`,"font-weight: bold",...args);logRafIds.set(name,-1)}))};C3.GetCallStack=function GetCallStack(){return(new Error).stack};C3.Debugger=function Debugger(){debugger};C3.cast=function cast(o,T){if(o&&o instanceof T)return o;else return null};
C3.getName=function getName(o){if(typeof o==="undefined")return"undefined";if(o===null)return"null";if(typeof o==="boolean")return"<boolean>";if(C3.IsNumber(o))return"<number>";if(C3.IsString(o))return"<string>";if(C3.IsArray(o))return"<array>";if(typeof o==="symbol")return"<"+o.toString()+">";if(C3.IsFunction(o)){if(o.name&&o.name!=="Function")return o.name;return"<anonymous function>"}if(typeof o==="object"){if(o.constructor&&o.constructor.name&&o.constructor.name!=="Object")return o.constructor.name;
return"<anonymous object>"}return"<unknown>"};C3.getType=function getType(o){if(o===null)return"null";if(Array.isArray(o))return"array";return typeof o};C3.range=function*range(a,b){if(!isFinite(Math.abs(a-b)))throw new Error("Invalid parameters");if(a>b)for(let i=a-1;i>=b;i--)yield i;else for(let i=a;i<b;i++)yield i};
function isValidTypeChange(from,to){let fromType=C3.getType(from);let toType=C3.getType(to);if(fromType==="null"||toType==="null")return true;if(fromType==="undefined"||toType==="undefined")return false;return fromType===toType}let ctorObjectToProxy=new Map;let ctorProxyToObject=new Map;let proxyToObject=new WeakMap;let releasedObjects=new WeakMap;C3.DefendHandler={};const VALID_GET_MISSING_KEYS=new Set(["then","splice"]);
function logDefendedObjectWarning(msg){console.warn("[Defence] "+msg+" @",C3.GetCallStack())}
C3.DefendHandler.get=function defended_get(target,key){if(!(key in target)&&typeof key!=="symbol"&&!VALID_GET_MISSING_KEYS.has(key))logDefendedObjectWarning(`Accessed missing property '${key}' from defended object '${C3.getName(target)}', returning undefined`);if(releasedObjects.has(target)&&typeof key!=="symbol"&&!VALID_GET_MISSING_KEYS.has(key))logDefendedObjectWarning(`Accessed property '${key}' on a released object '${C3.getName(target)}'\nObject was originally released at: ${releasedObjects.get(target)})\nCall stack at access: `);return target[key]};
C3.DefendHandler.set=function defended_set(target,key,value){if(!(key in target)&&!ctorObjectToProxy.has(target))logDefendedObjectWarning(`Set non-existent property '${key}' to '${value}' on defended object '${C3.getName(target)}'`);if(!isValidTypeChange(target[key],value)&&!ctorObjectToProxy.has(target))logDefendedObjectWarning(`Set '${C3.getType(target[key])}' property '${key}' to type '${C3.getType(value)}' on defended object '${C3.getName(target)}'`);if(releasedObjects.has(target))logDefendedObjectWarning(`Set property '${key}' on a released object '${C3.getName(target)}'\nObject was originally released at: ${releasedObjects.get(target)})\nCall stack at access: `);
target[key]=value;return true};C3.DefendHandler.deleteProperty=function defended_deleteProperty(target,key){throw new ReferenceError(`Cannot delete property '${key}' from defended object '${C3.getName(target)}'`);};C3.DefendHandler.defineProperty=function defended_defineProperty(target,key,desc){throw new ReferenceError(`Cannot define property '${key}' on defended object '${C3.getName(target)}'`);};
C3.DefendHandler.enumerate=function defended_enumerate(target){throw new ReferenceError(`Cannot enumerate defended object '${C3.getName(target)}'`);};let checkRafId=-1;
function CheckDefendedObjectsUsedCorrectly(){checkRafId=-1;if(ctorObjectToProxy.size>0||ctorProxyToObject.size>0){let uniqueNames=new Set([...ctorObjectToProxy.keys()].map(o=>C3.getName(o)));let leftoverNames=[...uniqueNames].join(",");console.warn(`An object derived from DefendedBase was not protected with debugDefend(). This will disable some checks. See the coding guidelines! Possible affected class names: ${leftoverNames}`);ctorObjectToProxy.clear();ctorProxyToObject.clear()}}
C3.DefendedBase=class DefendedBase{constructor(){if(!C3.isDebugDefend||!C3.Supports.Proxies)return;let newTarget=new.target;let realObject=Object.create(newTarget.prototype);let proxy=new Proxy(realObject,C3.DefendHandler);ctorObjectToProxy.set(realObject,proxy);ctorProxyToObject.set(proxy,realObject);proxyToObject.set(proxy,realObject);if(checkRafId===-1)checkRafId=requestAnimationFrame(CheckDefendedObjectsUsedCorrectly);return proxy}};
C3.debugDefend=function debugDefend(o){if(C3.isDebugDefend&&C3.Supports.Proxies&&o instanceof C3.DefendedBase){if(!ctorProxyToObject.has(o))return o;let realObject=ctorProxyToObject.get(o);ctorProxyToObject.delete(o);ctorObjectToProxy.delete(realObject);return o}else if(C3.isDebug)return Object.seal(o);else return o};
C3.New=function New(Type,...args){let o;try{o=new Type(...args)}catch(e){ctorProxyToObject.clear();ctorObjectToProxy.clear();throw e;}if(C3.isDebugDefend)VerifyObjectPropertiesConsistent(Type,o);return C3.debugDefend(o)};C3.Release=function Release(o){let realObject=proxyToObject.get(o);if(realObject)releasedObjects.set(realObject,C3.GetCallStack())};C3.WasReleased=function(o){let realObject=proxyToObject.get(o);if(!realObject)return false;return!!releasedObjects.get(realObject)};
let typeProperties=new Map;function getObjectPropertySet(o){let ret=new Set;for(let k in o)ret.add(k);return ret}
function VerifyObjectPropertiesConsistent(Type,o){let properties=getObjectPropertySet(o);let existingProperties=typeProperties.get(Type);if(existingProperties){let inconsistentProperties=[];for(let k of existingProperties.values())if(properties.has(k))properties.delete(k);else inconsistentProperties.push(k);C3.appendArray(inconsistentProperties,[...properties]);if(inconsistentProperties.length)console.warn(`[Defence] '${C3.getName(Type)}' constructor creates inconsistent properties: ${inconsistentProperties.join(", ")}`)}else typeProperties.set(Type,properties)}
C3.PerfMark=class PerfMark{constructor(name){this._name="";if(name)this.start(name)}start(name){this._name=name;performance.mark(this._name+"-Start")}end(){performance.mark(this._name+"-End");performance.measure(this._name,this._name+"-Start",this._name+"-End")}next(name){this.end();this._name=name;performance.mark(this._name+"-Start")}};

}

// ../lib/misc/mathutil.js
{
'use strict';const C3=self.C3;const TWO_PI=Math.PI*2;const D_TO_R=Math.PI/180;const R_TO_D=180/Math.PI;C3.wrap=function wrap(x,min,max){x=Math.floor(x);min=Math.floor(min);max=Math.floor(max);if(x<min){let r=max-(min-x)%(max-min);return r===max?0:r}else return min+(x-min)%(max-min)};C3.mapToRange=function mapToRange(x,inMin,inMax,outMin,outMax){return(x-inMin)*(outMax-outMin)/(inMax-inMin)+outMin};C3.normalize=function normalize(value,minimum,maximum){return(value-minimum)/(maximum-minimum)};
C3.clamp=function clamp(x,a,b){if(x<a)return a;else if(x>b)return b;else return x};C3.clampAngle=function clampAngle(a){a%=TWO_PI;if(a<0)a+=TWO_PI;return a};C3.toRadians=function toRadians(x){return x*D_TO_R};C3.toDegrees=function toDegrees(x){return x*R_TO_D};C3.distanceTo=function distanceTo(x1,y1,x2,y2){return Math.hypot(x2-x1,y2-y1)};C3.distanceSquared=function distanceSquared(x1,y1,x2,y2){const dx=x2-x1;const dy=y2-y1;return dx*dx+dy*dy};
C3.angleTo=function angleTo(x1,y1,x2,y2){return Math.atan2(y2-y1,x2-x1)};C3.angleDiff=function angleDiff(a1,a2){if(a1===a2)return 0;let s1=Math.sin(a1);let c1=Math.cos(a1);let s2=Math.sin(a2);let c2=Math.cos(a2);let n=s1*s2+c1*c2;if(n>=1)return 0;if(n<=-1)return Math.PI;return Math.acos(n)};
C3.angleRotate=function angleRotate(start,end,step){let ss=Math.sin(start);let cs=Math.cos(start);let se=Math.sin(end);let ce=Math.cos(end);if(Math.acos(ss*se+cs*ce)>step)if(cs*se-ss*ce>0)return C3.clampAngle(start+step);else return C3.clampAngle(start-step);else return C3.clampAngle(end)};C3.angleClockwise=function angleClockwise(a1,a2){let s1=Math.sin(a1);let c1=Math.cos(a1);let s2=Math.sin(a2);let c2=Math.cos(a2);return c1*s2-s1*c2<=0};
C3.angleLerp=function angleLerp(a,b,x,r=0){let diff=C3.angleDiff(a,b);const revs=TWO_PI*r;if(C3.angleClockwise(b,a))return C3.clampAngle(a+(diff+revs)*x);else return C3.clampAngle(a-(diff+revs)*x)};C3.angleLerpClockwise=function angleLerpClockwise(a,b,x,r=0){const diff=C3.angleDiff(a,b);const revs=TWO_PI*r;if(C3.angleClockwise(b,a))return C3.clampAngle(a+(diff+revs)*x);return C3.clampAngle((TWO_PI-diff+revs)*x)};
C3.angleLerpAntiClockwise=function angleLerpAntiClockwise(a,b,x,r=0){const diff=C3.angleDiff(a,b);const revs=TWO_PI*r;if(C3.angleClockwise(b,a))return C3.clampAngle((-TWO_PI+diff-revs)*x);return C3.clampAngle(a-(diff+revs)*x)};C3.lerp=function lerp(a,b,x){return a+x*(b-a)};C3.unlerp=function unlerp(a,b,x){if(a===b)return 0;return(x-a)/(b-a)};C3.relerp=function relerp(a,b,x,c,d){return C3.lerp(c,d,C3.unlerp(a,b,x))};C3.qarp=function qarp(a,b,c,x){return C3.lerp(C3.lerp(a,b,x),C3.lerp(b,c,x),x)};
C3.cubic=function cubic(a,b,c,d,x){return C3.lerp(C3.qarp(a,b,c,x),C3.qarp(b,c,d,x),x)};C3.cosp=function cosp(a,b,x){return(a+b+(a-b)*Math.cos(x*Math.PI))/2};C3.isPOT=function isPOT(x){return x>0&&(x-1&x)===0};C3.nextHighestPowerOfTwo=function nextHighestPowerOfTwo(x){--x;for(let i=1;i<32;i<<=1)x=x|x>>i;return x+1};C3.roundToNearestFraction=function roundToNearestFraction(x,n){return Math.round(x*n)/n};C3.floorToNearestFraction=function floorToNearestFraction(x,n){return Math.floor(x*n)/n};
C3.round6dp=function round6dp(x){return Math.round(x*1E6)/1E6};C3.toFixed=function toFixed(n,dp){let ret=n.toFixed(dp);let last=ret.length-1;for(;last>=0&&ret.charAt(last)==="0";--last);if(last>=0&&ret.charAt(last)===".")--last;if(last<0)return ret;return ret.substr(0,last+1)};C3.PackRGB=function PackRGB(red,green,blue){return C3.clamp(red,0,255)|C3.clamp(green,0,255)<<8|C3.clamp(blue,0,255)<<16};const ALPHAEX_SHIFT=1024;const ALPHAEX_MAX=1023;const RGBEX_SHIFT=16384;const RGBEX_MAX=8191;
const RGBEX_MIN=-8192;C3.PackRGBAEx=function PackRGBAEx(red,green,blue,alpha){red=C3.clamp(Math.floor(red*1024),RGBEX_MIN,RGBEX_MAX);green=C3.clamp(Math.floor(green*1024),RGBEX_MIN,RGBEX_MAX);blue=C3.clamp(Math.floor(blue*1024),RGBEX_MIN,RGBEX_MAX);alpha=C3.clamp(Math.floor(alpha*ALPHAEX_MAX),0,ALPHAEX_MAX);if(red<0)red+=RGBEX_SHIFT;if(green<0)green+=RGBEX_SHIFT;if(blue<0)blue+=RGBEX_SHIFT;return-(red*RGBEX_SHIFT*RGBEX_SHIFT*ALPHAEX_SHIFT+green*RGBEX_SHIFT*ALPHAEX_SHIFT+blue*ALPHAEX_SHIFT+alpha)};
C3.PackRGBEx=function PackRGBEx(red,green,blue){return C3.PackRGBAEx(red,green,blue,1)};function isNegativeZero(x){return x===0&&1/x<0}C3.GetRValue=function GetRValue(rgb){if(rgb>=0)return(rgb&255)/255;else{let v=Math.floor(-rgb/(RGBEX_SHIFT*RGBEX_SHIFT*ALPHAEX_SHIFT));if(v>RGBEX_MAX)v-=RGBEX_SHIFT;return v/1024}};
C3.GetGValue=function GetGValue(rgb){if(rgb>=0)return((rgb&65280)>>8)/255;else{let v=Math.floor(-rgb%(RGBEX_SHIFT*RGBEX_SHIFT*ALPHAEX_SHIFT)/(RGBEX_SHIFT*ALPHAEX_SHIFT));if(v>RGBEX_MAX)v-=RGBEX_SHIFT;return v/1024}};C3.GetBValue=function GetBValue(rgb){if(rgb>=0)return((rgb&16711680)>>16)/255;else{let v=Math.floor(-rgb%(RGBEX_SHIFT*ALPHAEX_SHIFT)/ALPHAEX_SHIFT);if(v>RGBEX_MAX)v-=RGBEX_SHIFT;return v/1024}};
C3.GetAValue=function GetAValue(rgb){if(isNegativeZero(rgb))return 0;else if(rgb>=0)return 1;else{const v=Math.floor(-rgb%ALPHAEX_SHIFT);return v/ALPHAEX_MAX}};C3.greatestCommonDivisor=function greatestCommonDivisor(a,b){a=Math.floor(a);b=Math.floor(b);while(b!==0){let t=b;b=a%b;a=t}return a};const COMMON_ASPECT_RATIOS=[[3,2],[4,3],[5,4],[5,3],[6,5],[14,9],[16,9],[16,10],[21,9]];
C3.getAspectRatio=function getAspectRatio(w,h){w=Math.floor(w);h=Math.floor(h);if(w===h)return[1,1];for(let aspect of COMMON_ASPECT_RATIOS){let approxH=w/aspect[0]*aspect[1];if(Math.abs(h-approxH)<1)return aspect.slice(0);approxH=w/aspect[1]*aspect[0];if(Math.abs(h-approxH)<1)return[aspect[1],aspect[0]]}let gcd=C3.greatestCommonDivisor(w,h);return[w/gcd,h/gcd]};
C3.segmentsIntersect=function segmentsIntersect(a1x,a1y,a2x,a2y,b1x,b1y,b2x,b2y){const min_ax=Math.min(a1x,a2x);const max_ax=Math.max(a1x,a2x);const min_bx=Math.min(b1x,b2x);const max_bx=Math.max(b1x,b2x);if(max_ax<min_bx||min_ax>max_bx)return false;const min_ay=Math.min(a1y,a2y);const max_ay=Math.max(a1y,a2y);const min_by=Math.min(b1y,b2y);const max_by=Math.max(b1y,b2y);if(max_ay<min_by||min_ay>max_by)return false;const dpx=b1x-a1x+b2x-a2x;const dpy=b1y-a1y+b2y-a2y;const qax=a2x-a1x;const qay=a2y-
a1y;const qbx=b2x-b1x;const qby=b2y-b1y;const d=Math.abs(qay*qbx-qby*qax);const la=qbx*dpy-qby*dpx;if(Math.abs(la)>d)return false;const lb=qax*dpy-qay*dpx;return Math.abs(lb)<=d};
C3.segmentsIntersectPreCalc=function segmentsIntersectPreCalc(a1x,a1y,a2x,a2y,min_ax,max_ax,min_ay,max_ay,b1x,b1y,b2x,b2y){const min_bx=Math.min(b1x,b2x);const max_bx=Math.max(b1x,b2x);if(max_ax<min_bx||min_ax>max_bx)return false;const min_by=Math.min(b1y,b2y);const max_by=Math.max(b1y,b2y);if(max_ay<min_by||min_ay>max_by)return false;const dpx=b1x-a1x+b2x-a2x;const dpy=b1y-a1y+b2y-a2y;const qax=a2x-a1x;const qay=a2y-a1y;const qbx=b2x-b1x;const qby=b2y-b1y;const d=Math.abs(qay*qbx-qby*qax);const la=
qbx*dpy-qby*dpx;if(Math.abs(la)>d)return false;const lb=qax*dpy-qay*dpx;return Math.abs(lb)<=d};
C3.segmentIntersectsQuad=function segmentIntersectsQuad(x1,y1,x2,y2,q){const min_x=Math.min(x1,x2);const max_x=Math.max(x1,x2);const min_y=Math.min(y1,y2);const max_y=Math.max(y1,y2);const tlx=q.getTlx(),tly=q.getTly(),trx=q.getTrx(),try_=q.getTry(),brx=q.getBrx(),bry=q.getBry(),blx=q.getBlx(),bly=q.getBly();return C3.segmentsIntersectPreCalc(x1,y1,x2,y2,min_x,max_x,min_y,max_y,tlx,tly,trx,try_)||C3.segmentsIntersectPreCalc(x1,y1,x2,y2,min_x,max_x,min_y,max_y,trx,try_,brx,bry)||C3.segmentsIntersectPreCalc(x1,
y1,x2,y2,min_x,max_x,min_y,max_y,brx,bry,blx,bly)||C3.segmentsIntersectPreCalc(x1,y1,x2,y2,min_x,max_x,min_y,max_y,blx,bly,tlx,tly)};
C3.segmentIntersectsAnyN=function segmentIntersectsAnyN(x1,y1,x2,y2,points){const min_x=Math.min(x1,x2);const max_x=Math.max(x1,x2);const min_y=Math.min(y1,y2);const max_y=Math.max(y1,y2);let i=0;for(let last=points.length-4;i<=last;i+=2)if(C3.segmentsIntersectPreCalc(x1,y1,x2,y2,min_x,max_x,min_y,max_y,points[i],points[i+1],points[i+2],points[i+3]))return true;return C3.segmentsIntersectPreCalc(x1,y1,x2,y2,min_x,max_x,min_y,max_y,points[i],points[i+1],points[0],points[1])};const NO_HIT=2;
const PADDING=1E-6;C3.rayIntersect=function rayIntersect(rx1,ry1,rx2,ry2,sx1,sy1,sx2,sy2){const rdx=rx2-rx1;const rdy=ry2-ry1;const sdx=sx2-sx1;const sdy=sy2-sy1;const det=rdx*sdy-rdy*sdx;if(det===0)return NO_HIT;const gamma=((ry1-ry2)*(sx2-rx1)+rdx*(sy2-ry1))/det;if(0<gamma&&gamma<1+PADDING)return(sdy*(sx2-rx1)+(sx1-sx2)*(sy2-ry1))/det;return NO_HIT};
C3.rayIntersectExtended=function rayIntersect(rx1,ry1,rx2,ry2,sx1,sy1,sx2,sy2,f){const dx=(sx2-sx1)*f;const dy=(sy2-sy1)*f;return C3.rayIntersect(rx1,ry1,rx2,ry2,sx1-dx,sy1-dy,sx2+dx,sy2+dy)};
C3.isPointInTriangleInclusive=function isPointInTriangleInclusive(px,py,tx1,ty1,tx2,ty2,tx3,ty3){const v0x=tx2-tx1;const v0y=ty2-ty1;const v1x=tx3-tx1;const v1y=ty3-ty1;const v2x=px-tx1;const v2y=py-ty1;const dot00=v0x*v0x+v0y*v0y;const dot01=v0x*v1x+v0y*v1y;const dot02=v0x*v2x+v0y*v2y;const dot11=v1x*v1x+v1y*v1y;const dot12=v1x*v2x+v1y*v2y;const invDenom=1/(dot00*dot11-dot01*dot01);const u=(dot11*dot02-dot01*dot12)*invDenom;const v=(dot00*dot12-dot01*dot02)*invDenom;return u>=0&&v>=0&&u+v<=1};
C3.triangleCartesianToBarycentric=function triangleCartesianToBarycentric(px,py,tx1,ty1,tx2,ty2,tx3,ty3){const v0x=tx2-tx1;const v0y=ty2-ty1;const v1x=tx3-tx1;const v1y=ty3-ty1;const v2x=px-tx1;const v2y=py-ty1;const dot00=v0x*v0x+v0y*v0y;const dot01=v0x*v1x+v0y*v1y;const dot11=v1x*v1x+v1y*v1y;const dot20=v2x*v0x+v2y*v0y;const dot21=v2x*v1x+v2y*v1y;const denom=dot00*dot11-dot01*dot01;const v=(dot11*dot20-dot01*dot21)/denom;const w=(dot00*dot21-dot01*dot20)/denom;const u=1-v-w;return[u,v,w]};
C3.triangleBarycentricToCartesian=function triangleBarycentricToCartesian(u,v,w,tx1,ty1,tx2,ty2,tx3,ty3){return[u*tx1+v*tx2+w*tx3,u*ty1+v*ty2+w*ty3]};

}

// ../lib/misc/miscutil.js
{
'use strict';const C3=self.C3;let mainDocument=null;let baseHref="";if(typeof document!=="undefined"){mainDocument=document;const baseElem=document.querySelector("base");baseHref=baseElem&&baseElem.hasAttribute("href")?baseElem.getAttribute("href"):"";if(baseHref){if(baseHref.startsWith("/"))baseHref=baseHref.substr(1);if(!baseHref.endsWith("/"))baseHref+="/"}}C3.GetBaseHref=function GetBaseHref(){return baseHref};
C3.GetBaseURL=function GetBaseURL(){if(!mainDocument)return"";const loc=mainDocument.location;return C3.GetPathFromURL(loc.origin+loc.pathname)+baseHref};C3.GetPathFromURL=function GetPathFromURL(url){if(!url.length)return url;if(url.endsWith("/")||url.endsWith("\\"))return url;const lastSlash=Math.max(url.lastIndexOf("/"),url.lastIndexOf("\\"));if(lastSlash===-1)return"";return url.substr(0,lastSlash+1)};
C3.GetFilenameFromURL=function GetFilenameFromURL(url){if(!url.length)return url;if(url.endsWith("/")||url.endsWith("\\"))return"";const lastSlash=Math.max(url.lastIndexOf("/"),url.lastIndexOf("\\"));if(lastSlash===-1)return url;return url.substr(lastSlash+1)};C3.GetFileExtension=function GetFileExtension(filename){let i=filename.lastIndexOf(".");if(i<1)return"";else return filename.substr(i)};
C3.GetFileNamePart=function GetFileNamePart(filename){let i=filename.lastIndexOf(".");if(i<1)return filename;else return filename.substr(0,i)};C3.NormalizeFileSeparator=function NormalizeFileSeparator(path){return path.replace(/\\/g,"/")};C3.IsFileExtension=function IsFileExtension(filename,extension){const ext=filename?C3.GetFileExtension(filename).slice(1):"";return extension===ext};
C3.FileNameEquals=function FileNameEquals(file_or_filename,other_file_or_filename){let firstName;let secondName;if(C3.IsFileLike(file_or_filename))firstName=C3.GetFileNamePart(file_or_filename["name"]);if(C3.IsString(file_or_filename))firstName=C3.GetFileNamePart(file_or_filename);if(C3.IsFileLike(other_file_or_filename))secondName=C3.GetFileNamePart(other_file_or_filename["name"]);if(C3.IsString(other_file_or_filename))secondName=C3.GetFileNamePart(other_file_or_filename);return firstName===secondName};
C3.ParseFilePath=function ParseFilePath(path){path=C3.NormalizeFileSeparator(path);let root=/^\w:\//.exec(path);if(root){root=root[0];path=path.slice(3);if(path[0]!=="/")path="/"+path}else root="";path=path.replace(/\/{2,}/g,"/");if(path.length>1&&path.slice(-1)==="/")path=path.slice(0,-1);const start=path.lastIndexOf("/")+1;let dir="",base=path,name,ext="";if(start>0){dir=path.slice(0,start);base=path.slice(start)}name=base;const end=base.lastIndexOf(".");if(end>0){ext=base.slice(end);name=base.slice(0,
-ext.length)}const full=root+dir+base;return{dir,base,name,root,ext,full}};C3.Wait=function Wait(delay,argument){return new Promise((resolve,reject)=>{self.setTimeout(resolve,delay,argument)})};C3.swallowException=function swallowException(f){try{f()}catch(e){if(C3.isDebug)console.warn("Swallowed exception: ",e)}};C3.noop=function noop(){};C3.equalsNoCase=function equalsNoCase(a,b){if(typeof a!=="string"||typeof b!=="string")return false;return a===b||a.normalize().toLowerCase()===b.normalize().toLowerCase()};
C3.equalsCase=function equalsCase(a,b){if(typeof a!=="string"||typeof b!=="string")return false;if(a===b)return true;return a.normalize()===b.normalize()};C3.typedArraySet16=function typedArraySet16(dest,src,i){dest[i++]=src[0];dest[i++]=src[1];dest[i++]=src[2];dest[i++]=src[3];dest[i++]=src[4];dest[i++]=src[5];dest[i++]=src[6];dest[i++]=src[7];dest[i++]=src[8];dest[i++]=src[9];dest[i++]=src[10];dest[i++]=src[11];dest[i++]=src[12];dest[i++]=src[13];dest[i++]=src[14];dest[i]=src[15]};
C3.truncateArray=function truncateArray(arr,index){arr.length=index};C3.clearArray=function clearArray(arr){if(!arr)return;if(arr.length===0)return;C3.truncateArray(arr,0)};C3.clear2DArray=function clear2DArray(arr){if(!arr)return;for(let i=0;i<arr.length;i++){let a=arr[i];C3.truncateArray(a,0)}C3.truncateArray(arr,0)};C3.extendArray=function extendArray(arr,len,filler){len=len|0;const arrayLength=arr.length;if(len<=arrayLength)return;for(let i=arrayLength;i<len;++i)arr.push(filler)};
C3.resizeArray=function resizeArray(arr,len,filler){len=len|0;const arrayLength=arr.length;if(len<arrayLength)C3.truncateArray(arr,len);else if(len>arrayLength)C3.extendArray(arr,len,filler)};C3.shallowAssignArray=function shallowAssignArray(dest,src){C3.clearArray(dest);C3.appendArray(dest,src)};C3.appendArray=function appendArray(a,b){if(b.length<1E4)a.push(...b);else for(let i=0,len=b.length;i<len;++i)a.push(b[i])};
C3.arrayRemove=function(arr,index){index=Math.floor(index);if(index<0||index>=arr.length)return;let len=arr.length-1;for(let i=index;i<len;++i)arr[i]=arr[i+1];C3.truncateArray(arr,len)};C3.arrayFindRemove=function arrayFindRemove(a,o){let i=a.indexOf(o);if(i>=0)a.splice(i,1)};C3.arraysEqual=function arraysEqual(a,b){let len=a.length;if(b.length!==len)return false;for(let i=0;i<len;++i)if(a[i]!==b[i])return false;return true};
C3.arrayFilterOut=function arrayFilterOut(arr,callback){let ret=[];let j=0;for(let i=0,len=arr.length;i<len;++i){let item=arr[i];if(callback(item))ret.push(item);else{arr[j]=item;++j}}C3.truncateArray(arr,j);return ret};C3.arrayRemoveAllInSet=function arrayRemoveAllInSet(arr,s){const oldLen=arr.length;let j=0;for(let i=0,len=arr.length;i<len;++i){let item=arr[i];if(!s.has(item))arr[j++]=item}C3.truncateArray(arr,j);return oldLen-j};
C3.isArrayIndexInBounds=function isArrayIndexInBounds(index,array){if(index!==Math.floor(index))return false;return index>=0&&index<array.length};C3.validateArrayIndex=function validateArrayIndex(index,array){if(!C3.isArrayIndexInBounds(index,array))throw new RangeError("array index out of bounds");};C3.cloneArray=function cloneArray(array){return array.slice()};
C3.deepCloneArray=function deepCloneArray(array,f){let ret=[];for(let e of array)if(C3.IsObject(e)){let clone=f(e);if(!clone)throw new Error("missing clone");if(clone.constructor!==e.constructor)throw new Error("object is not a clone");ret.push(clone)}else if(C3.IsArray(e))ret.push(C3.deepCloneArray(e,f));else ret.push(e);return ret};C3.clone2DArray=function cloneArray(array){let ret=[];for(let arr of array)ret.push(arr.slice());return ret};
C3.mergeSets=function mergeSets(set1,set2){return new Set([...set1,...set2])};C3.mergeSetsInPlace=function mergeSetsInPlace(set1,set2){for(const item of set2)set1.add(item);return set1};C3.first=function first(iterable){for(let i of iterable)return i;return null};C3.xor=function(x,y){return!x!==!y};C3.compare=function compare(x,cmp,y){switch(cmp){case 0:return x===y;case 1:return x!==y;case 2:return x<y;case 3:return x<=y;case 4:return x>y;case 5:return x>=y;default:return false}};
C3.hasAnyOwnProperty=function hasAnyOwnProperty(o){for(let p in o)if(o.hasOwnProperty(p))return true;return false};
C3.PromiseAllWithProgress=function PromiseAllWithProgress(arr,progressCallback){if(!arr.length)return Promise.resolve([]);return new Promise((resolve,reject)=>{const results=[];let numberCompleted=0;let cancelled=false;for(let i=0,len=arr.length;i<len;++i){results.push(void 0);arr[i].then(result=>{if(cancelled)return;results[i]=result;++numberCompleted;if(numberCompleted===arr.length)resolve(results);else progressCallback(numberCompleted,arr.length)}).catch(err=>{cancelled=true;reject(err)})}})};
let memoryCallbacks=[];C3.AddLibraryMemoryCallback=function AddLibraryMemoryCallback(f){memoryCallbacks.push(f)};C3.GetEstimatedLibraryMemoryUsage=function GetEstimatedLibraryMemoryUsage(){let ret=0;for(let f of memoryCallbacks){let m=f();ret+=m}return Math.floor(ret)};let nextTaskId=1;const activeTaskIds=new Map;const taskMessageChannel=new MessageChannel;taskMessageChannel.port2.onmessage=function OnTask(e){const id=e.data;const callback=activeTaskIds.get(id);activeTaskIds.delete(id);if(callback)callback(performance.now())};
C3.RequestUnlimitedAnimationFrame=function RequestUnlimitedAnimationFrame(callback){const id=nextTaskId++;activeTaskIds.set(id,callback);taskMessageChannel.port1.postMessage(id);return id};C3.CancelUnlimitedAnimationFrame=function CancelUnlimitedAnimationFrame(id){activeTaskIds.delete(id)};C3.PostTask=C3.RequestUnlimitedAnimationFrame;C3.WaitForNextTask=function WaitForNextTask(){return new Promise(resolve=>C3.PostTask(resolve))};const activeRPAFids=new Set;
C3.RequestPostAnimationFrame=function RequestPostAnimationFrame(callback){const id=self.requestAnimationFrame(async timestamp=>{await C3.WaitForNextTask();if(!activeRPAFids.has(id))return;activeRPAFids.delete(id);callback(timestamp)});activeRPAFids.add(id);return id};C3.CancelPostAnimationFrame=function CancelPostAnimationFrame(id){if(!activeRPAFids.has(id))return;self.cancelAnimationFrame(id);activeRPAFids.delete(id)};

}

// lib/misc/runtimeutil.js
{
'use strict';const C3=self.C3;C3.IsAbsoluteURL=function IsAbsoluteURL(url){return/^(?:[a-z\-]+:)?\/\//.test(url)||url.substr(0,5)==="data:"||url.substr(0,5)==="blob:"};C3.IsRelativeURL=function IsRelativeURL(url){return!C3.IsAbsoluteURL(url)};C3.ThrowIfNotOk=function ThrowIfNotOk(response){if(!response.ok)throw new Error(`fetch '${response.url}' response returned ${response.status} ${response.statusText}`);};
C3.FetchOk=function FetchOk(url,init){return fetch(url,init).then(response=>{C3.ThrowIfNotOk(response);return response})};C3.FetchText=function FetchText(url){return C3.FetchOk(url).then(response=>response.text())};C3.FetchJson=function FetchJson(url){return C3.FetchOk(url).then(response=>response.json())};C3.FetchBlob=function FetchBlob(url){return C3.FetchOk(url).then(response=>response.blob())};C3.FetchArrayBuffer=function FetchArrayBuffer(url){return C3.FetchOk(url).then(response=>response.arrayBuffer())};
C3.FetchImage=function FetchImage(url){return new Promise((resolve,reject)=>{const img=new Image;img.onload=()=>resolve(img);img.onerror=err=>reject(err);img.src=url})};C3.BlobToArrayBuffer=function BlobToArrayBuffer(blob){if(typeof blob["arrayBuffer"]==="function")return blob["arrayBuffer"]();else return new Promise((resolve,reject)=>{const fileReader=new FileReader;fileReader.onload=()=>resolve(fileReader.result);fileReader.onerror=()=>reject(fileReader.error);fileReader.readAsArrayBuffer(blob)})};
C3.BlobToString=function BlobToString(blob){if(typeof blob["text"]==="function")return blob["text"]();else return new Promise((resolve,reject)=>{const fileReader=new FileReader;fileReader.onload=()=>resolve(fileReader.result);fileReader.onerror=()=>reject(fileReader.error);fileReader.readAsText(blob)})};C3.BlobToJson=function BlobToJson(blob){return C3.BlobToString(blob).then(text=>JSON.parse(text))};
C3.BlobToImage=async function BlobToImage(blob,decodeImage){let blobUrl=URL.createObjectURL(blob);try{const img=await C3.FetchImage(blobUrl);URL.revokeObjectURL(blobUrl);blobUrl="";if(decodeImage&&typeof img["decode"]==="function")await img["decode"]();return img}finally{if(blobUrl)URL.revokeObjectURL(blobUrl)}};
C3.CreateCanvas=function CreateCanvas(width,height){if(typeof document!=="undefined"&&typeof document.createElement==="function"){const canvas=document.createElement("canvas");canvas.width=width;canvas.height=height;return canvas}else return new OffscreenCanvas(width,height)};
C3.CanvasToBlob=function CanvasToBlob(canvas,type,quality){if(typeof quality!=="number")quality=1;type=type||"image/png";quality=C3.clamp(quality,0,1);if(canvas.toBlob)return new Promise(resolve=>canvas.toBlob(resolve,type,quality));else if(canvas["convertToBlob"])return canvas["convertToBlob"]({"type":type,"quality":quality});else return C3.Asyncify(()=>C3.CanvasToBlobSync(canvas,type,quality))};
C3.CanvasToBlobSync=function CanvasToBlobSync(canvas,type,quality){if(typeof quality!=="number")quality=1;type=type||"image/png";quality=C3.clamp(quality,0,1);return C3.DataURIToBinaryBlobSync(canvas.toDataURL(type,quality))};C3.DataURIToBinaryBlobSync=function DataURIToBinaryBlobSync(datauri){const o=C3.ParseDataURI(datauri);return C3.BinaryStringToBlob(o.data,o.mime_type)};
C3.ParseDataURI=function ParseDataURI(datauri){if(datauri.substr(0,5)!=="data:")throw new URIError("expected data: uri");let comma=datauri.indexOf(",");if(comma<0)throw new URIError("expected comma in data: uri");let typepart=datauri.substring(5,comma);let datapart=datauri.substring(comma+1);let typearr=typepart.split(";");let mimetype=typearr[0]||"";let encoding1=typearr[1];let encoding2=typearr[2];let decodeddata;if(encoding1==="base64"||encoding2==="base64")decodeddata=atob(datapart);else decodeddata=
decodeURIComponent(datapart);return{mime_type:mimetype,data:decodeddata}};
C3.BinaryStringToBlob=function BinaryStringToBlob(binstr,mime_type){let len=binstr.length;let len32=len>>2;let a8=new Uint8Array(len);let a32=new Uint32Array(a8.buffer,0,len32);let i,j;for(i=0,j=0;i<len32;++i)a32[i]=binstr.charCodeAt(j++)|binstr.charCodeAt(j++)<<8|binstr.charCodeAt(j++)<<16|binstr.charCodeAt(j++)<<24;let tailLength=len&3;while(tailLength--){a8[j]=binstr.charCodeAt(j);++j}if(mime_type)return new Blob([a8],{"type":mime_type});else return new Blob([a8])};
C3.DrawableToBlob=function DrawableToBlob(drawable,type,quality){const canvas=C3.CreateCanvas(drawable.width,drawable.height);const ctx=canvas.getContext("2d");ctx.drawImage(drawable,0,0);return C3.CanvasToBlob(canvas,type,quality)};C3.ImageDataToBlobSync=function ImageDataToBlobSync(imageData,type,quality){const canvas=C3.CreateCanvas(imageData.width,imageData.height);const ctx=canvas.getContext("2d");ctx.putImageData(imageData,0,0);return C3.CanvasToBlobSync(canvas,type,quality)};
C3.ImageDataToBlob=function ImageDataToBlob(imageData,type,quality){if(C3.Supports.ImageBitmapOptions)return createImageBitmap(imageData,{"premultiplyAlpha":"none"}).then(imageBitmap=>C3.DrawableToBlob(imageBitmap,type,quality));else if(C3.Supports.ImageBitmap)return createImageBitmap(imageData).then(imageBitmap=>C3.DrawableToBlob(imageBitmap,type,quality));else{const canvas=C3.CreateCanvas(imageData.width,imageData.height);const ctx=canvas.getContext("2d");ctx.putImageData(imageData,0,0);return C3.CanvasToBlob(canvas,
type,quality)}};C3.CopySet=function CopySet(dest,src){dest.clear();for(const x of src)dest.add(x)};C3.MapToObject=function MapToObject(map){const ret=Object.create(null);for(const [k,v]of map.entries())ret[k]=v;return ret};C3.ObjectToMap=function ObjectToMap(o,map){map.clear();for(const [k,v]of Object.entries(o))map.set(k,v)};
C3.ToSuperJSON=function ToSuperJSON(v){if(typeof v==="object"&&v!==null)if(v instanceof Set)return{"_c3type_":"set","data":[...v].map(o=>ToSuperJSON(o))};else if(v instanceof Map)return{"_c3type_":"map","data":[...v].map(pair=>[pair[0],ToSuperJSON(pair[1])])};else{const ret=Object.create(null);for(const [key,value]of Object.entries(v))ret[key]=ToSuperJSON(value);return ret}return v};
C3.FromSuperJSON=function FromSuperJSON(v){if(typeof v==="object"&v!==null)if(v["_c3type_"]==="set")return new Set(v["data"].map(o=>FromSuperJSON(o)));else if(v["_c3type_"]==="map")return new Map(v["data"].map(pair=>[pair[0],FromSuperJSON(pair[1])]));else{const ret=Object.create(null);for(const [key,value]of Object.entries(v))ret[key]=FromSuperJSON(value);return ret}return v};
C3.CSSToCamelCase=function(str){let ret="";let isAfterHyphen=false;for(const ch of str)if(ch==="-")isAfterHyphen=true;else if(isAfterHyphen){ret+=ch.toUpperCase();isAfterHyphen=false}else ret+=ch;return ret};C3.IsIterator=function(o){return typeof o==="object"&&typeof o.next==="function"};C3.MakeFilledArray=function MakeFilledArray(len,data){const ret=[];if(typeof data==="function")for(let i=0;i<len;++i)ret.push(data());else for(let i=0;i<len;++i)ret.push(data);return ret};

}

// ../lib/misc/color.js
{
'use strict';const C3=self.C3;const HSL_TEST=/([0-9.]+),([0-9.]+)%?,([0-9.]+)%?/i;const HSLA_TEST=/([0-9.]+),([0-9.]+)%?,([0-9.]+)%?,([0-9.])/i;function padTwoDigits(str){if(str.length===0)return"00";else if(str.length===1)return"0"+str;else return str}function hueToRGB(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*(2/3-t)*6;return p}
C3.Color=class Color{constructor(r,g,b,a){this._r=NaN;this._g=NaN;this._b=NaN;this._a=NaN;this._r=0;this._g=0;this._b=0;this._a=0;if(r instanceof C3.Color)this.set(r);else this.setRgba(r||0,g||0,b||0,a||0)}setRgb(r,g,b){this._r=+r;this._g=+g;this._b=+b;this.clamp();return this}setRgba(r,g,b,a){this._r=+r;this._g=+g;this._b=+b;this._a=+a;this.clamp();return this}set(c){this._r=c._r;this._g=c._g;this._b=c._b;this._a=c._a;return this}copy(c){return this.set(c)}add(c){this._r+=c._r;this._g+=c._g;this._b+=
c._b;this._a+=c._a;this.clamp()}addRgb(r,g,b,a=0){this._r+=+r;this._g+=+g;this._b+=+b;this._a+=+a;this.clamp()}diff(c){this.setR(Math.max(this._r,c._r)-Math.min(this._r,c._r));this.setG(Math.max(this._g,c._g)-Math.min(this._g,c._g));this.setB(Math.max(this._b,c._b)-Math.min(this._b,c._b));this.setA(Math.max(this._a,c._a)-Math.min(this._a,c._a));this.clamp()}copyRgb(c){this._r=c._r;this._g=c._g;this._b=c._b}setR(r){this._r=C3.clamp(+r,0,1)}getR(){return this._r}setG(g){this._g=C3.clamp(+g,0,1)}getG(){return this._g}setB(b){this._b=
C3.clamp(+b,0,1)}getB(){return this._b}setA(a){this._a=C3.clamp(+a,0,1)}getA(){return this._a}clone(){return C3.New(C3.Color,this._r,this._g,this._b,this._a)}toArray(){return[this._r,this._g,this._b,this._a]}toTypedArray(){return new Float64Array(this.toArray())}writeToTypedArray(ta,i){ta[i++]=this._r;ta[i++]=this._g;ta[i++]=this._b;ta[i]=this._a}equals(c){return this._r===c._r&&this._g===c._g&&this._b===c._b&&this._a===c._a}equalsIgnoringAlpha(c){return this._r===c._r&&this._g===c._g&&this._b===
c._b}equalsRgb(r,g,b){return this._r===r&&this._g===g&&this._b===b}equalsRgba(r,g,b,a){return this._r===r&&this._g===g&&this._b===b&&this._a===a}multiply(c){this._r*=c._r;this._g*=c._g;this._b*=c._b;this._a*=c._a}multiplyAlpha(a){this._r*=a;this._g*=a;this._b*=a;this._a*=a}premultiply(){this._r*=this._a;this._g*=this._a;this._b*=this._a;return this}unpremultiply(){this._r/=this._a;this._g/=this._a;this._b/=this._a;return this}clamp(){this._r=C3.clamp(this._r,0,1);this._g=C3.clamp(this._g,0,1);this._b=
C3.clamp(this._b,0,1);this._a=C3.clamp(this._a,0,1);return this}setFromRgbValue(rgb){this._r=C3.GetRValue(rgb);this._g=C3.GetGValue(rgb);this._b=C3.GetBValue(rgb);this._a=C3.GetAValue(rgb)}getCssRgb(_r,_g,_b){const r=C3.IsFiniteNumber(_r)?_r:this.getR();const g=C3.IsFiniteNumber(_g)?_g:this.getG();const b=C3.IsFiniteNumber(_b)?_b:this.getB();return`rgb(${r*100}%, ${g*100}%, ${b*100}%)`}getCssRgba(_r,_g,_b,_a){const r=C3.IsFiniteNumber(_r)?_r:this.getR();const g=C3.IsFiniteNumber(_g)?_g:this.getG();
const b=C3.IsFiniteNumber(_b)?_b:this.getB();const a=C3.IsFiniteNumber(_a)?_a:this.getA();return`rgba(${r*100}%, ${g*100}%, ${b*100}%, ${a})`}toHexString(){const rh=Math.round(this.getR()*255);const gh=Math.round(this.getG()*255);const bh=Math.round(this.getB()*255);return"#"+padTwoDigits(rh.toString(16))+padTwoDigits(gh.toString(16))+padTwoDigits(bh.toString(16))}parseHexString(str){if(typeof str!=="string")return false;str=str.trim();if(str.charAt(0)==="#")str=str.substr(1);let rv;let gv;let bv;
if(str.length===3){rv=parseInt(str[0],16)/15;gv=parseInt(str[1],16)/15;bv=parseInt(str[2],16)/15}else if(str.length===6){rv=parseInt(str.substr(0,2),16)/255;gv=parseInt(str.substr(2,2),16)/255;bv=parseInt(str.substr(4,2),16)/255}else return false;if(isFinite(rv))this.setR(rv);if(isFinite(gv))this.setG(gv);if(isFinite(bv))this.setB(bv);this.setA(1);return true}toCommaSeparatedRgb(){const rv=Math.round(this.getR()*255);const gv=Math.round(this.getG()*255);const bv=Math.round(this.getB()*255);return`${rv}, ${gv}, ${bv}`}toRgbArray(){const rv=
Math.round(this.getR()*255);const gv=Math.round(this.getG()*255);const bv=Math.round(this.getB()*255);return[rv,gv,bv]}parseCommaSeparatedRgb(str){if(typeof str!=="string")return false;str=str.replace(/^rgb\(|\)|%/,"");const arr=str.split(",");if(arr.length<3)return false;const rv=parseInt(arr[0].trim(),10)/255;const gv=parseInt(arr[1].trim(),10)/255;const bv=parseInt(arr[2].trim(),10)/255;if(isFinite(rv))this.setR(rv);if(isFinite(gv))this.setG(gv);if(isFinite(bv))this.setB(bv);this.setA(1);return true}parseCommaSeparatedPercentageRgb(str){if(typeof str!==
"string")return false;str=str.replace(/^rgb\(|\)|%/,"");const arr=str.split(",");if(arr.length<3)return false;const rv=parseInt(arr[0].trim(),10)/100;const gv=parseInt(arr[1].trim(),10)/100;const bv=parseInt(arr[2].trim(),10)/100;if(isFinite(rv))this.setR(rv);if(isFinite(gv))this.setG(gv);if(isFinite(bv))this.setB(bv);this.setA(1);return true}parseCommaSeparatedRgba(str){if(typeof str!=="string")return false;str=str.replace(/^rgba\(|\)|%/,"");const arr=str.split(",");if(arr.length<4)return false;
const rv=parseInt(arr[0].trim(),10)/255;const gv=parseInt(arr[1].trim(),10)/255;const bv=parseInt(arr[2].trim(),10)/255;const av=parseFloat(arr[3].trim());if(isFinite(rv))this.setR(rv);if(isFinite(gv))this.setG(gv);if(isFinite(bv))this.setB(bv);if(isFinite(av))this.setA(av);return true}parseCommaSeparatedPercentageRgba(str){if(typeof str!=="string")return false;str=str.replace(/^rgba\(|\)|%/,"");const arr=str.split(",");if(arr.length<4)return false;const rv=parseInt(arr[0].trim(),10)/100;const gv=
parseInt(arr[1].trim(),10)/100;const bv=parseInt(arr[2].trim(),10)/100;const av=parseFloat(arr[3].trim());if(isFinite(rv))this.setR(rv);if(isFinite(gv))this.setG(gv);if(isFinite(bv))this.setB(bv);if(isFinite(av))this.setA(av);return true}parseString(str){if(typeof str!=="string")return false;str=str.replace(/\s+/,"");if(str.includes(","))if(str.startsWith("rgb("))if(str.includes("%"))return this.parseCommaSeparatedPercentageRgb(str);else return this.parseCommaSeparatedRgb(str);else if(str.startsWith("rgba("))if(str.includes("%"))return this.parseCommaSeparatedPercentageRgba(str);
else return this.parseCommaSeparatedRgba(str);else if(str.startsWith("hsl(")||str.startsWith("hsla("))return this.parseHSLString(str);else{const components=str.split(",");if(str.includes("%")){if(components.length===3)return this.parseCommaSeparatedPercentageRgb(str);else if(components.length===4)return this.parseCommaSeparatedPercentageRgba(str);return false}else{if(components.length===3)return this.parseCommaSeparatedRgb(str);else if(components.length===4)return this.parseCommaSeparatedRgba(str);
return false}}else return this.parseHexString(str)}toJSON(){return[this._r,this._g,this._b,this._a]}setFromHSLA(h,s,l,a){let r;let g;let b;h%=360;s=C3.clamp(s,0,100);l=C3.clamp(l,0,100);a=C3.clamp(a,0,1);h/=360;s/=100;l/=100;if(s===0)r=g=b=l;else{const q=l<.5?l*(1+s):l+s-l*s;const p=2*l-q;r=hueToRGB(p,q,h+1/3);g=hueToRGB(p,q,h);b=hueToRGB(p,q,h-1/3)}this.setR(r);this.setG(g);this.setB(b);this.setA(a);return this}parseHSLString(str){const cleanString=str.replace(/ |hsl|hsla|\(|\)|;/gi,"");const hsl=
HSL_TEST.exec(cleanString);const hsla=HSLA_TEST.exec(cleanString);if(hsl&&hsl.length===4){this.setFromHSLA(+hsl[1],+hsl[2],+hsl[3],1);return true}else if(hsla&&hsla.length===5){this.setFromHSLA(+hsl[1],+hsl[2],+hsl[3],+hsl[4]);return true}return false}toHSLAString(){const r=this._r;const g=this._g;const b=this._b;const a=this._a;const h=C3.Color.GetHue(r,g,b);const s=C3.Color.GetSaturation(r,g,b);const l=C3.Color.GetLuminosity(r,g,b);return`hsla(${h}, ${s}%, ${l}%, ${a})`}toHSLAArray(){const r=this._r;
const g=this._g;const b=this._b;return[C3.Color.GetHue(r,g,b),C3.Color.GetSaturation(r,g,b),C3.Color.GetLuminosity(r,g,b),this._a]}setFromJSON(arr){if(!Array.isArray(arr))return;if(arr.length<3)return;this._r=arr[0];this._g=arr[1];this._b=arr[2];if(arr.length>=4)this._a=arr[3];else this._a=1}set r(r){this.setR(r)}get r(){return this.getR()}set g(g){this.setG(g)}get g(){return this.getG()}set b(b){this.setB(b)}get b(){return this.getB()}set a(a){this.setA(a)}get a(){return this.getA()}setAtIndex(i,
v){switch(i){case 0:this.setR(v);break;case 1:this.setG(v);break;case 2:this.setB(v);break;case 3:this.setA(v);break;default:throw new RangeError("invalid color index");}}getAtIndex(i){switch(i){case 0:return this.getR();case 1:return this.getG();case 2:return this.getB();case 3:return this.getA();default:throw new RangeError("invalid color index");}}static Equals(color_or_json_1,color_or_json_2){let c1;let c2;if(Array.isArray(color_or_json_1)){c1=new C3.Color;c1.setFromJSON(color_or_json_1)}else if(color_or_json_1 instanceof
C3.Color)c1=color_or_json_1;else throw new Error("unexpected type");if(Array.isArray(color_or_json_2)){c2=new C3.Color;c2.setFromJSON(color_or_json_2)}else if(color_or_json_2 instanceof C3.Color)c2=color_or_json_2;else throw new Error("unexpected type");return c1.equals(c2)}static DiffChannel(channel1,channel2){return C3.clamp(Math.max(channel1,channel2)-Math.min(channel1,channel2),0,1)}static Diff(c1,c2){const ret=new C3.Color;ret.setR(Math.max(c1._r,c2._r)-Math.min(c1._r,c2._r));ret.setG(Math.max(c1._g,
c2._g)-Math.min(c1._g,c2._g));ret.setB(Math.max(c1._b,c2._b)-Math.min(c1._b,c2._b));ret.setA(Math.max(c1._a,c2._a)-Math.min(c1._a,c2._a));return ret}static DiffNoAlpha(c1,c2){const ret=new C3.Color(0,0,0,1);ret.setR(Math.max(c1._r,c2._r)-Math.min(c1._r,c2._r));ret.setG(Math.max(c1._g,c2._g)-Math.min(c1._g,c2._g));ret.setB(Math.max(c1._b,c2._b)-Math.min(c1._b,c2._b));return ret}static GetHue(r,g,b){const max=Math.max(r,g,b);const min=Math.min(r,g,b);if(max===min)return 0;let h=0;switch(max){case r:h=
(g-b)/(max-min)+(g<b?6:0);break;case g:h=(b-r)/(max-min)+2;break;case b:h=(r-g)/(max-min)+4;break}return Math.round(h/6*360)}static GetSaturation(r,g,b){const max=Math.max(r,g,b);const min=Math.min(r,g,b);if(max===min)return 0;const l=(max+min)/2;const d=max-min;const s=l>.5?d/(2-max-min):d/(max+min);return Math.round(s*100)}static GetLuminosity(r,g,b){const max=Math.max(r,g,b);const min=Math.min(r,g,b);const l=(max+min)/2;if(!max)return 0;return Math.round(l*100)}};
C3.Color.White=Object.freeze(C3.New(C3.Color,1,1,1,1));C3.Color.Black=Object.freeze(C3.New(C3.Color,0,0,0,1));C3.Color.TransparentBlack=Object.freeze(C3.New(C3.Color,0,0,0,0));

}

// ../lib/misc/vector2.js
{
'use strict';const C3=self.C3;
C3.Vector2=class Vector2{constructor(x,y){this._x=0;this._y=0;if(x instanceof C3.Vector2)this.copy(x);else this.set(x||0,y||0)}set(x,y){this._x=+x;this._y=+y}copy(v){this._x=v._x;this._y=v._y}equals(v){return this._x===v._x&&this._y===v._y}equalsValues(x,y){return this._x===x&&this._y===y}setX(x){this._x=+x}getX(){return this._x}setY(y){this._y=+y}getY(){return this._y}toArray(){return[this._x,this._y]}toTypedArray(){return new Float64Array(this.toArray())}writeToTypedArray(ta,i){ta[i++]=this._x;
ta[i]=this._y}offset(x,y){this._x+=+x;this._y+=+y}scale(x,y){this._x*=x;this._y*=y}divide(x,y){this._x/=x;this._y/=y}round(){this._x=Math.round(this._x);this._y=Math.round(this._y)}floor(){this._x=Math.floor(this._x);this._y=Math.floor(this._y)}ceil(){this._x=Math.ceil(this._x);this._y=Math.ceil(this._y)}angle(){return C3.angleTo(0,0,this._x,this._y)}lengthSquared(){return this._x*this._x+this._y*this._y}length(){return Math.sqrt(this.lengthSquared())}rotatePrecalc(sin_a,cos_a){const temp=this._x*
cos_a-this._y*sin_a;this._y=this._y*cos_a+this._x*sin_a;this._x=temp}rotate(a){if(a===0)return;this.rotatePrecalc(Math.sin(a),Math.cos(a))}rotateAbout(a,x,y){if(a===0||x===this._x&&y===this._y)return;this._x-=x;this._y-=y;this.rotatePrecalc(Math.sin(a),Math.cos(a));this._x+=+x;this._y+=+y}move(a,dist){if(dist===0)return;this._x+=Math.cos(a)*dist;this._y+=Math.sin(a)*dist}normalize(){const m=this.length();if(m!==0&&m!==1){this._x/=m;this._y/=m}}clamp(lower,upper){this._x=C3.clamp(this._x,lower,upper);
this._y=C3.clamp(this._y,lower,upper)}};

}

// ../lib/misc/rect.js
{
'use strict';const C3=self.C3;
C3.Rect=class Rect{constructor(left,top,right,bottom){this._left=NaN;this._top=NaN;this._right=NaN;this._bottom=NaN;this._left=0;this._top=0;this._right=0;this._bottom=0;if(left instanceof C3.Rect)this.copy(left);else this.set(left||0,top||0,right||0,bottom||0)}set(left,top,right,bottom){this._left=+left;this._top=+top;this._right=+right;this._bottom=+bottom}setWH(left,top,width,height){left=+left;top=+top;this._left=left;this._top=top;this._right=left+ +width;this._bottom=top+ +height}copy(rect){this._left=
+rect._left;this._top=+rect._top;this._right=+rect._right;this._bottom=+rect._bottom}clone(){return new C3.Rect(this._left,this._top,this._right,this._bottom)}static Merge(first,second){const ret=new C3.Rect;ret.setLeft(Math.min(first._left,second._left));ret.setTop(Math.min(first._top,second._top));ret.setRight(Math.max(first._right,second._right));ret.setBottom(Math.max(first._bottom,second._bottom));return ret}static FromObject(o){return new C3.Rect(o.left,o.top,o.right,o.bottom)}equals(rect){return this._left===
rect._left&&this._top===rect._top&&this._right===rect._right&&this._bottom===rect._bottom}equalsWH(x,y,w,h){return this._left===x&&this._top===y&&this.width()===w&&this.height()===h}setLeft(l){this._left=+l}getLeft(){return this._left}setTop(t){this._top=+t}getTop(){return this._top}setRight(r){this._right=+r}getRight(){return this._right}setBottom(b){this._bottom=+b}getBottom(){return this._bottom}toArray(){return[this._left,this._top,this._right,this._bottom]}toTypedArray(){return new Float64Array(this.toArray())}toDOMRect(){return new DOMRect(this._left,
this._top,this.width(),this.height())}writeToTypedArray(ta,i){ta[i++]=this._left;ta[i++]=this._top;ta[i++]=this._right;ta[i]=this._bottom}writeAsQuadToTypedArray(ta,i){ta[i++]=this._left;ta[i++]=this._top;ta[i++]=this._right;ta[i++]=this._top;ta[i++]=this._right;ta[i++]=this._bottom;ta[i++]=this._left;ta[i]=this._bottom}writeAsQuadToTypedArray3D(ta,i,z){ta[i++]=this._left;ta[i++]=this._top;ta[i++]=z;ta[i++]=this._right;ta[i++]=this._top;ta[i++]=z;ta[i++]=this._right;ta[i++]=this._bottom;ta[i++]=z;
ta[i++]=this._left;ta[i++]=this._bottom;ta[i]=z}width(){return this._right-this._left}height(){return this._bottom-this._top}midX(){return(this._left+this._right)/2}midY(){return(this._top+this._bottom)/2}offset(x,y){x=+x;y=+y;this._left+=x;this._top+=y;this._right+=x;this._bottom+=y}offsetLeft(x){this._left+=+x}offsetTop(y){this._top+=+y}offsetRight(x){this._right+=+x}offsetBottom(y){this._bottom+=+y}toSquare(axis){if(axis!=="x")throw new Error("invalid axis, only 'x' supported");if(this._top<this._bottom)if(this._left<
this._right)this._bottom=this._top+this.width();else this._bottom=this._top-this.width();else if(this._left<this._right)this._bottom=this._top-this.width();else this._bottom=this._top+this.width()}inflate(x,y){x=+x;y=+y;this._left-=x;this._top-=y;this._right+=x;this._bottom+=y}deflate(x,y){x=+x;y=+y;this._left+=x;this._top+=y;this._right-=x;this._bottom-=y}multiply(x,y){this._left*=x;this._top*=y;this._right*=x;this._bottom*=y}divide(x,y){this._left/=x;this._top/=y;this._right/=x;this._bottom/=y}mirrorAround(origin){this._left=
+origin-this._left;this._right=+origin-this._right}flipAround(origin){this._top=+origin-this._top;this._bottom=+origin-this._bottom}swapLeftRight(){const temp=this._left;this._left=this._right;this._right=temp}swapTopBottom(){const temp=this._top;this._top=this._bottom;this._bottom=temp}shuntY(h){const top=this._top;this._top=+h-this._bottom;this._bottom=+h-top}round(){this._left=Math.round(this._left);this._top=Math.round(this._top);this._right=Math.round(this._right);this._bottom=Math.round(this._bottom)}roundInner(){this._left=
Math.ceil(this._left);this._top=Math.ceil(this._top);this._right=Math.floor(this._right);this._bottom=Math.floor(this._bottom)}roundOuter(){this._left=Math.floor(this._left);this._top=Math.floor(this._top);this._right=Math.ceil(this._right);this._bottom=Math.ceil(this._bottom)}floor(){this._left=Math.floor(this._left);this._top=Math.floor(this._top);this._right=Math.floor(this._right);this._bottom=Math.floor(this._bottom)}ceil(){this._left=Math.ceil(this._left);this._top=Math.ceil(this._top);this._right=
Math.ceil(this._right);this._bottom=Math.ceil(this._bottom)}clamp(l,t,r,b){if(this._left<l)this._left=+l;if(this._top<t)this._top=+t;if(this._right>r)this._right=+r;if(this._bottom>b)this._bottom=+b}clampFlipped(l,t,r,b){if(this._left<l)this._left=+l;if(this._top>t)this._top=+t;if(this._right>r)this._right=+r;if(this._bottom<b)this._bottom=+b}normalize(){if(this._left>this._right)this.swapLeftRight();if(this._top>this._bottom)this.swapTopBottom()}intersectsRect(rect){return!(rect._right<this._left||
rect._bottom<this._top||rect._left>this._right||rect._top>this._bottom)}intersectsRectOffset(rect,x,y){return!(rect._right+x<this._left||rect._bottom+y<this._top||rect._left+x>this._right||rect._top+y>this._bottom)}containsPoint(x,y){return x>=this._left&&x<=this._right&&y>=this._top&&y<=this._bottom}containsRect(rect){return rect._left>=this._left&&rect._top>=this._top&&rect._right<=this._right&&rect._bottom<=this._bottom}expandToContain(rect){if(rect._left<this._left)this._left=+rect._left;if(rect._top<
this._top)this._top=+rect._top;if(rect._right>this._right)this._right=+rect._right;if(rect._bottom>this._bottom)this._bottom=+rect._bottom}lerpInto(rect){this._left=C3.lerp(rect._left,rect._right,this._left);this._top=C3.lerp(rect._top,rect._bottom,this._top);this._right=C3.lerp(rect._left,rect._right,this._right);this._bottom=C3.lerp(rect._top,rect._bottom,this._bottom)}};

}

// ../lib/misc/quad.js
{
'use strict';const C3=self.C3;
C3.Quad=class Quad{constructor(tlx,tly,trx,try_,brx,bry,blx,bly){this._tlx=NaN;this._tly=NaN;this._trx=NaN;this._try=NaN;this._brx=NaN;this._bry=NaN;this._blx=NaN;this._bly=NaN;this._tlx=0;this._tly=0;this._trx=0;this._try=0;this._brx=0;this._bry=0;this._blx=0;this._bly=0;if(tlx instanceof C3.Quad)this.copy(tlx);else this.set(tlx||0,tly||0,trx||0,try_||0,brx||0,bry||0,blx||0,bly||0)}set(tlx,tly,trx,try_,brx,bry,blx,bly){this._tlx=+tlx;this._tly=+tly;this._trx=+trx;this._try=+try_;this._brx=+brx;this._bry=
+bry;this._blx=+blx;this._bly=+bly}setRect(left,top,right,bottom){this.set(left,top,right,top,right,bottom,left,bottom)}copy(q){this._tlx=q._tlx;this._tly=q._tly;this._trx=q._trx;this._try=q._try;this._brx=q._brx;this._bry=q._bry;this._blx=q._blx;this._bly=q._bly}equals(q){return this._tlx===q._tlx&&this._tly===q._tly&&this._trx===q._trx&&this._try===q._try&&this._brx===q._brx&&this._bry===q._bry&&this._blx===q._blx&&this._bly===q._bly}setTlx(v){this._tlx=+v}getTlx(){return this._tlx}setTly(v){this._tly=
+v}getTly(){return this._tly}setTrx(v){this._trx=+v}getTrx(){return this._trx}setTry(v){this._try=+v}getTry(){return this._try}setBrx(v){this._brx=+v}getBrx(){return this._brx}setBry(v){this._bry=+v}getBry(){return this._bry}setBlx(v){this._blx=+v}getBlx(){return this._blx}setBly(v){this._bly=+v}getBly(){return this._bly}toDOMQuad(){return new DOMQuad(new DOMPoint(this._tlx,this._tly),new DOMPoint(this._trx,this._try),new DOMPoint(this._brx,this._bry),new DOMPoint(this._blx,this._bly))}toArray(){return[this._tlx,
this._tly,this._trx,this._try,this._brx,this._bry,this._blx,this._bly]}toTypedArray(){return new Float64Array(this.toArray())}writeToTypedArray(ta,i){ta[i++]=this._tlx;ta[i++]=this._tly;ta[i++]=this._trx;ta[i++]=this._try;ta[i++]=this._brx;ta[i++]=this._bry;ta[i++]=this._blx;ta[i]=this._bly}writeToTypedArray3D(ta,i,z){ta[i++]=this._tlx;ta[i++]=this._tly;ta[i++]=z;ta[i++]=this._trx;ta[i++]=this._try;ta[i++]=z;ta[i++]=this._brx;ta[i++]=this._bry;ta[i++]=z;ta[i++]=this._blx;ta[i++]=this._bly;ta[i]=z}offset(x,
y){x=+x;y=+y;this._tlx+=x;this._tly+=y;this._trx+=x;this._try+=y;this._brx+=x;this._bry+=y;this._blx+=x;this._bly+=y}round(){this._tlx=Math.round(this._tlx);this._tly=Math.round(this._tly);this._trx=Math.round(this._trx);this._try=Math.round(this._try);this._brx=Math.round(this._brx);this._bry=Math.round(this._bry);this._blx=Math.round(this._blx);this._bly=Math.round(this._bly)}floor(){this._tlx=Math.floor(this._tlx);this._tly=Math.floor(this._tly);this._trx=Math.floor(this._trx);this._try=Math.floor(this._try);
this._brx=Math.floor(this._brx);this._bry=Math.floor(this._bry);this._blx=Math.floor(this._blx);this._bly=Math.floor(this._bly)}ceil(){this._tlx=Math.ceil(this._tlx);this._tly=Math.ceil(this._tly);this._trx=Math.ceil(this._trx);this._try=Math.ceil(this._try);this._brx=Math.ceil(this._brx);this._bry=Math.ceil(this._bry);this._blx=Math.ceil(this._blx);this._bly=Math.ceil(this._bly)}setFromRect(rect){this._tlx=rect._left;this._tly=rect._top;this._trx=rect._right;this._try=rect._top;this._brx=rect._right;
this._bry=rect._bottom;this._blx=rect._left;this._bly=rect._bottom}setFromRotatedRect(rect,a){if(a===0)this.setFromRect(rect);else this.setFromRotatedRectPrecalc(rect,Math.sin(a),Math.cos(a))}setFromRotatedRectPrecalc(rect,sin_a,cos_a){const left_sin_a=rect._left*sin_a;const top_sin_a=rect._top*sin_a;const right_sin_a=rect._right*sin_a;const bottom_sin_a=rect._bottom*sin_a;const left_cos_a=rect._left*cos_a;const top_cos_a=rect._top*cos_a;const right_cos_a=rect._right*cos_a;const bottom_cos_a=rect._bottom*
cos_a;this._tlx=left_cos_a-top_sin_a;this._tly=top_cos_a+left_sin_a;this._trx=right_cos_a-top_sin_a;this._try=top_cos_a+right_sin_a;this._brx=right_cos_a-bottom_sin_a;this._bry=bottom_cos_a+right_sin_a;this._blx=left_cos_a-bottom_sin_a;this._bly=bottom_cos_a+left_sin_a}getBoundingBox(rect){rect.set(Math.min(this._tlx,this._trx,this._brx,this._blx),Math.min(this._tly,this._try,this._bry,this._bly),Math.max(this._tlx,this._trx,this._brx,this._blx),Math.max(this._tly,this._try,this._bry,this._bly))}containsPoint(x,
y){let v0x=this._trx-this._tlx;let v0y=this._try-this._tly;const v1x=this._brx-this._tlx;const v1y=this._bry-this._tly;const v2x=x-this._tlx;const v2y=y-this._tly;let dot00=v0x*v0x+v0y*v0y;let dot01=v0x*v1x+v0y*v1y;let dot02=v0x*v2x+v0y*v2y;const dot11=v1x*v1x+v1y*v1y;const dot12=v1x*v2x+v1y*v2y;let invDenom=1/(dot00*dot11-dot01*dot01);let u=(dot11*dot02-dot01*dot12)*invDenom;let v=(dot00*dot12-dot01*dot02)*invDenom;if(u>=0&&v>0&&u+v<1)return true;v0x=this._blx-this._tlx;v0y=this._bly-this._tly;dot00=
v0x*v0x+v0y*v0y;dot01=v0x*v1x+v0y*v1y;dot02=v0x*v2x+v0y*v2y;invDenom=1/(dot00*dot11-dot01*dot01);u=(dot11*dot02-dot01*dot12)*invDenom;v=(dot00*dot12-dot01*dot02)*invDenom;return u>=0&&v>0&&u+v<1}midX(){return(this._tlx+this._trx+this._brx+this._blx)/4}midY(){return(this._tly+this._try+this._bry+this._bly)/4}intersectsSegment(x1,y1,x2,y2){if(this.containsPoint(x1,y1)||this.containsPoint(x2,y2))return true;return C3.segmentIntersectsQuad(x1,y1,x2,y2,this)}intersectsQuad(rhs){let midX=rhs.midX();let midY=
rhs.midY();if(this.containsPoint(midX,midY))return true;midX=this.midX();midY=this.midY();if(rhs.containsPoint(midX,midY))return true;const tlx=this._tlx,tly=this._tly,trx=this._trx,try_=this._try,brx=this._brx,bry=this._bry,blx=this._blx,bly=this._bly;return C3.segmentIntersectsQuad(tlx,tly,trx,try_,rhs)||C3.segmentIntersectsQuad(trx,try_,brx,bry,rhs)||C3.segmentIntersectsQuad(brx,bry,blx,bly,rhs)||C3.segmentIntersectsQuad(blx,bly,tlx,tly,rhs)}rotatePointsAnticlockwise(){const tlx=this._tlx;const tly=
this._tly;this._tlx=this._trx;this._tly=this._try;this._trx=this._brx;this._try=this._bry;this._brx=this._blx;this._bry=this._bly;this._blx=tlx;this._bly=tly}mirror(){this._swap(0,2);this._swap(1,3);this._swap(6,4);this._swap(7,5)}flip(){this._swap(0,6);this._swap(1,7);this._swap(2,4);this._swap(3,5)}diag(){this._swap(2,6);this._swap(3,7)}_swap(i,j){const tmp=this._getAtIndex(i);this._setAtIndex(i,this._getAtIndex(j));this._setAtIndex(j,tmp)}_getAtIndex(i){switch(i){case 0:return this._tlx;case 1:return this._tly;
case 2:return this._trx;case 3:return this._try;case 4:return this._brx;case 5:return this._bry;case 6:return this._blx;case 7:return this._bly;default:throw new RangeError("invalid quad point index");}}_setAtIndex(i,v){v=+v;switch(i){case 0:this._tlx=v;break;case 1:this._tly=v;break;case 2:this._trx=v;break;case 3:this._try=v;break;case 4:this._brx=v;break;case 5:this._bry=v;break;case 6:this._blx=v;break;case 7:this._bly=v;break;default:throw new RangeError("invalid quad point index");}}};

}

// lib/misc/collisionPoly.js
{
'use strict';const C3=self.C3;const assert=self.assert;const DEFAULT_POLY_POINTS=[0,0,1,0,1,1,0,1];const tempQuad=C3.New(C3.Quad);
C3.CollisionPoly=class CollisionPoly extends C3.DefendedBase{constructor(pointsArr,enabled=true){super();if(!pointsArr)pointsArr=DEFAULT_POLY_POINTS;this._ptsArr=Float64Array.from(pointsArr);this._bbox=new C3.Rect;this._isBboxChanged=true;this._enabled=enabled}Release(){}pointsArr(){return this._ptsArr}pointCount(){return this._ptsArr.length/2}setPoints(pointsArr){if(this._ptsArr.length===pointsArr.length)this._ptsArr.set(pointsArr);else this._ptsArr=Float64Array.from(pointsArr);this._isBboxChanged=
true}setDefaultPoints(){this.setPoints(DEFAULT_POLY_POINTS)}copy(poly){this.setPoints(poly._ptsArr)}setBboxChanged(){this._isBboxChanged=true}_updateBbox(){if(!this._isBboxChanged)return;const ptsArr=this._ptsArr;let left=ptsArr[0];let top=ptsArr[1];let right=left;let bottom=top;for(let i=0,len=ptsArr.length;i<len;i+=2){const x=ptsArr[i];const y=ptsArr[i+1];if(x<left)left=x;if(x>right)right=x;if(y<top)top=y;if(y>bottom)bottom=y}this._bbox.set(left,top,right,bottom);this._isBboxChanged=false}setFromRect(rc,
offX,offY){let ptsArr=this._ptsArr;if(ptsArr.length!==8){ptsArr=new Float64Array(8);this._ptsArr=ptsArr}ptsArr[0]=rc.getLeft()-offX;ptsArr[1]=rc.getTop()-offY;ptsArr[2]=rc.getRight()-offX;ptsArr[3]=rc.getTop()-offY;ptsArr[4]=rc.getRight()-offX;ptsArr[5]=rc.getBottom()-offY;ptsArr[6]=rc.getLeft()-offX;ptsArr[7]=rc.getBottom()-offY;this._bbox.copy(rc);if(offX!==0||offY!==0)this._bbox.offset(-offX,-offY);this._isBboxChanged=false}setFromQuad(q,offX,offY){tempQuad.copy(q);tempQuad.offset(offX,offY);this.setPoints(tempQuad.toArray());
this._isBboxChanged=true}transform(w,h,a){let sina=0;let cosa=1;if(a!==0){sina=Math.sin(a);cosa=Math.cos(a)}this.transformPrecalc(w,h,sina,cosa)}transformPrecalc(w,h,sina,cosa){const ptsArr=this._ptsArr;for(let i=0,len=ptsArr.length;i<len;i+=2){const j=i+1;const x=ptsArr[i]*w;const y=ptsArr[j]*h;ptsArr[i]=x*cosa-y*sina;ptsArr[j]=y*cosa+x*sina}this._isBboxChanged=true}offset(x,y){const ptsArr=this._ptsArr;for(let i=0,len=ptsArr.length;i<len;i+=2){ptsArr[i]+=x;ptsArr[i+1]+=y}}containsPoint(a2x,a2y){const ptsArr=
this._ptsArr;if(a2x===ptsArr[0]&&a2y===ptsArr[1])return true;this._updateBbox();const bbox=this._bbox;const a1x=bbox.getLeft()-110;const a1y=bbox.getTop()-101;const a3x=bbox.getRight()+131;const a3y=bbox.getBottom()+120;let minAx12=0;let minAy12=0;let maxAx12=0;let maxAy12=0;let minAx32=0;let minAy32=0;let maxAx32=0;let maxAy32=0;if(a1x<a2x){minAx12=a1x;maxAx12=a2x}else{minAx12=a2x;maxAx12=a1x}if(a1y<a2y){minAy12=a1y;maxAy12=a2y}else{minAy12=a2y;maxAy12=a1y}if(a3x<a2x){minAx32=a3x;maxAx32=a2x}else{minAx32=
a2x;maxAx32=a3x}if(a3y<a2y){minAy32=a3y;maxAy32=a2y}else{minAy32=a2y;maxAy32=a3y}let count1=0;let count2=0;for(let i=0,len=ptsArr.length;i<len;i+=2){const j=(i+2)%len;const b1x=ptsArr[i];const b1y=ptsArr[i+1];const b2x=ptsArr[j];const b2y=ptsArr[j+1];if(C3.segmentsIntersectPreCalc(a1x,a1y,a2x,a2y,minAx12,maxAx12,minAy12,maxAy12,b1x,b1y,b2x,b2y))++count1;if(C3.segmentsIntersectPreCalc(a3x,a3y,a2x,a2y,minAx32,maxAx32,minAy32,maxAy32,b1x,b1y,b2x,b2y))++count2}return count1%2===1||count2%2===1}intersectsPoly(poly,
offX,offY){const rPts=poly._ptsArr;const lPts=this._ptsArr;if(this.containsPoint(rPts[0]+offX,rPts[1]+offY))return true;if(poly.containsPoint(lPts[0]-offX,lPts[1]-offY))return true;for(let i=0,leni=lPts.length;i<leni;i+=2){const j=(i+2)%leni;const a1x=lPts[i];const a1y=lPts[i+1];const a2x=lPts[j];const a2y=lPts[j+1];let minAx=0;let minAy=0;let maxAx=0;let maxAy=0;if(a1x<a2x){minAx=a1x;maxAx=a2x}else{minAx=a2x;maxAx=a1x}if(a1y<a2y){minAy=a1y;maxAy=a2y}else{minAy=a2y;maxAy=a1y}for(let k=0,lenk=rPts.length;k<
lenk;k+=2){const l=(k+2)%lenk;const b1x=rPts[k]+offX;const b1y=rPts[k+1]+offY;const b2x=rPts[l]+offX;const b2y=rPts[l+1]+offY;if(C3.segmentsIntersectPreCalc(a1x,a1y,a2x,a2y,minAx,maxAx,minAy,maxAy,b1x,b1y,b2x,b2y))return true}}return false}intersectsSegment(offX,offY,a1x,a1y,a2x,a2y){if(this.containsPoint(a1x-offX,a1y-offY))return true;if(this.containsPoint(a2x-offX,a2y-offY))return true;let minAx=0;let minAy=0;let maxAx=0;let maxAy=0;if(a1x<a2x){minAx=a1x;maxAx=a2x}else{minAx=a2x;maxAx=a1x}if(a1y<
a2y){minAy=a1y;maxAy=a2y}else{minAy=a2y;maxAy=a1y}const ptsArr=this._ptsArr;for(let i=0,len=ptsArr.length;i<len;i+=2){const j=(i+2)%len;const b1x=ptsArr[i]+offX;const b1y=ptsArr[i+1]+offY;const b2x=ptsArr[j]+offX;const b2y=ptsArr[j+1]+offY;if(C3.segmentsIntersectPreCalc(a1x,a1y,a2x,a2y,minAx,maxAx,minAy,maxAy,b1x,b1y,b2x,b2y))return true}return false}mirror(px){const ptsArr=this._ptsArr;for(let i=0,len=ptsArr.length;i<len;i+=2)ptsArr[i]=px*2-ptsArr[i];this._isBboxChanged=true}flip(py){const ptsArr=
this._ptsArr;for(let i=0,len=ptsArr.length;i<len;i+=2){const j=i+1;ptsArr[j]=py*2-ptsArr[j]}this._isBboxChanged=true}diag(){const ptsArr=this._ptsArr;for(let i=0,len=ptsArr.length;i<len;i+=2){const j=i+1;const temp=ptsArr[i];ptsArr[i]=ptsArr[j];ptsArr[j]=temp}this._isBboxChanged=true}GetMidX(){const ptsArr=this._ptsArr;let ret=0;for(let i=0,len=ptsArr.length;i<len;i+=2)ret+=ptsArr[i];return ret/this.pointCount()}GetMidY(){const ptsArr=this._ptsArr;let ret=0;for(let i=0,len=ptsArr.length;i<len;i+=
2)ret+=ptsArr[i+1];return ret/this.pointCount()}GetPointsArray(){return this._ptsArr}GetPointCount(){return this.pointCount()}IsEnabled(){return this._enabled}};

}

// lib/misc/pairMap.js
{
'use strict';const C3=self.C3;
C3.PairMap=class PairMap extends C3.DefendedBase{constructor(iterable){super();this._firstMap=new Map;if(iterable)for(const [x,y,value]of iterable)this.Set(x,y,value)}Release(){this.Clear();this._firstMap=null}Clear(){const firstMap=this._firstMap;for(const secondMap of firstMap.values())secondMap.clear();firstMap.clear()}Set(x,y,value){const firstMap=this._firstMap;let secondMap=firstMap.get(x);if(!secondMap){secondMap=new Map;firstMap.set(x,secondMap)}secondMap.set(y,value)}Get(x,y){const secondMap=
this._firstMap.get(x);if(!secondMap)return secondMap;return secondMap.get(y)}Has(x,y){const secondMap=this._firstMap.get(x);if(!secondMap)return false;return secondMap.has(y)}Delete(x,y){const firstMap=this._firstMap;const secondMap=firstMap.get(x);if(!secondMap)return false;const ret=secondMap.delete(y);if(ret&&secondMap.size===0)firstMap.delete(x);return ret}DeleteEither(k){const firstMap=this._firstMap;const secondMap=firstMap.get(k);if(secondMap){secondMap.clear();firstMap.delete(k)}for(const [x,
secondMap]of firstMap.entries())if(secondMap.delete(k)&&secondMap.size===0)firstMap.delete(x)}GetSize(){let ret=0;for(const secondMap of this._firstMap.values())ret+=secondMap.size;return ret}*values(){for(const secondMap of this._firstMap.values())yield*secondMap.values()}*keyPairs(){for(const [x,secondMap]of this._firstMap.entries())for(const y of secondMap.keys())yield[x,y]}*entries(){for(const [x,secondMap]of this._firstMap.entries())for(const [y,value]of secondMap.entries())yield[x,y,value]}};

}

// lib/misc/arraySet.js
{
'use strict';const C3=self.C3;
C3.ArraySet=class ArraySet extends C3.DefendedBase{constructor(){super();this._set=new Set;this._arr=[];this._needToRebuildArray=false}Release(){this.Clear()}Clear(){this._set.clear();C3.clearArray(this._arr);this._needToRebuildArray=false}Add(v){if(this._set.has(v))return;this._set.add(v);if(!this._needToRebuildArray)this._arr.push(v)}Has(v){return this._set.has(v)}Delete(v){if(this._set.delete(v))this._needToRebuildArray=true}GetSize(){return this._set.size}IsEmpty(){return this._set.size===0}GetArray(){if(this._needToRebuildArray){this._RebuildArray();
this._needToRebuildArray=false}return this._arr}_RebuildArray(){const arr=this._arr;C3.clearArray(arr);for(const v of this._set)arr.push(v)}};

}

// ../lib/misc/ease.js
{
'use strict';const C3=self.C3;const EASE_MAP=new Map;const PREDEFINED_EASE_MAP=new Map;const CUSTOM_EASE_EDITOR_MAP=new Map;const CUSTOM_EASE_RUNTIME_MAP=new Map;const PRIVATE_EASE_MAP=new Map;const ALIAS_MAP=new Map;ALIAS_MAP.set("linear","noease");ALIAS_MAP.set("default","noease");
self.Ease=class Ease{constructor(){}static InheritEase(){return"default"}static DefaultEase(){return"noease"}static GetEditorEaseNames(project,...filter){this._CreateEaseMap();if(!CUSTOM_EASE_EDITOR_MAP.has(project))CUSTOM_EASE_EDITOR_MAP.set(project,new Map);const customEaseMap=CUSTOM_EASE_EDITOR_MAP.get(project);const sortedCustomEases=[...customEaseMap.keys()];sortedCustomEases.sort();return[...PREDEFINED_EASE_MAP.keys()].concat(sortedCustomEases).filter(ease=>!filter.includes(ease))}static GetRuntimeEaseNames(){this._CreateEaseMap();
const sortedCustomEases=[...CUSTOM_EASE_RUNTIME_MAP.keys()];sortedCustomEases.sort();return[...PREDEFINED_EASE_MAP.keys()].concat(sortedCustomEases)}static IsNamePredefined(easeName){this._CreateEaseMap();return[...PREDEFINED_EASE_MAP.keys()].includes(easeName)}static _GetEase(easeName){const realEaseName=ALIAS_MAP.get(easeName);if(realEaseName)return EASE_MAP.get(realEaseName);if(Ease.IsNamePredefined(easeName))return EASE_MAP.get(easeName);if(PRIVATE_EASE_MAP.has(easeName))return PRIVATE_EASE_MAP.get(easeName)}static GetEditorEase(easeName,
project){this._CreateEaseMap();const ease=Ease._GetEase(easeName);if(ease)return ease;return CUSTOM_EASE_EDITOR_MAP.get(project).get(easeName)}static GetRuntimeEase(easeName){this._CreateEaseMap();const ease=Ease._GetEase(easeName);if(ease)return ease;return CUSTOM_EASE_RUNTIME_MAP.get(easeName)}static GetEaseFromIndex(index){this._CreateEaseMap();const names=this.GetRuntimeEaseNames();return names[index]}static GetIndexForEase(name,project){this._CreateEaseMap();const names=this.GetEditorEaseNames(project);
return names.indexOf(name)}static _CreateEaseMap(){if(EASE_MAP.size!==0)return;this._AddPredifinedEase("default",()=>{});this._AddPredifinedEase("noease",this.NoEase);this._AddPredifinedEase("easeinsine",this.EaseInSine);this._AddPredifinedEase("easeoutsine",this.EaseOutSine);this._AddPredifinedEase("easeinoutsine",this.EaseInOutSine);this._AddPredifinedEase("easeinelastic",this.EaseInElastic);this._AddPredifinedEase("easeoutelastic",this.EaseOutElastic);this._AddPredifinedEase("easeinoutelastic",
this.EaseInOutElastic);this._AddPredifinedEase("easeinback",this.EaseInBack);this._AddPredifinedEase("easeoutback",this.EaseOutBack);this._AddPredifinedEase("easeinoutback",this.EaseInOutBack);this._AddPredifinedEase("easeinbounce",this.EaseInBounce);this._AddPredifinedEase("easeoutbounce",this.EaseOutBounce);this._AddPredifinedEase("easeinoutbounce",this.EaseInOutBounce);this._AddPredifinedEase("easeincubic",this.EaseInCubic);this._AddPredifinedEase("easeoutcubic",this.EaseOutCubic);this._AddPredifinedEase("easeinoutcubic",
this.EaseInOutCubic);this._AddPredifinedEase("easeinquad",this.EaseInQuad);this._AddPredifinedEase("easeoutquad",this.EaseOutQuad);this._AddPredifinedEase("easeinoutquad",this.EaseInOutQuad);this._AddPredifinedEase("easeinquart",this.EaseInQuart);this._AddPredifinedEase("easeoutquart",this.EaseOutQuart);this._AddPredifinedEase("easeinoutquart",this.EaseInOutQuart);this._AddPredifinedEase("easeinquint",this.EaseInQuint);this._AddPredifinedEase("easeoutquint",this.EaseOutQuint);this._AddPredifinedEase("easeinoutquint",
this.EaseInOutQuint);this._AddPredifinedEase("easeincirc",this.EaseInCirc);this._AddPredifinedEase("easeoutcirc",this.EaseOutCirc);this._AddPredifinedEase("easeinoutcirc",this.EaseInOutCirc);this._AddPredifinedEase("easeinexpo",this.EaseInExpo);this._AddPredifinedEase("easeoutexpo",this.EaseOutExpo);this._AddPredifinedEase("easeinoutexpo",this.EaseInOutExpo);this._AddPrivateCustomEase("cubicbezier",this.EaseCubicBezier);this._AddPrivateCustomEase("spline",this.EaseSpline)}static _AddPredifinedEase(name,
func){Ease._AddEase(name,func,"predefined")}static _AddPrivateCustomEase(name,func){Ease._AddEase(name,func,"private")}static AddCustomEase(name,func,project){this._CreateEaseMap();Ease._AddEase(name,func,"custom",project)}static RemoveCustomEase(name,project){if(this.IsNamePredefined(name))return;if([...PRIVATE_EASE_MAP.keys()].includes(name))return;const customEaseMap=CUSTOM_EASE_EDITOR_MAP.get(project);if(customEaseMap)customEaseMap.delete(name)}static _AddEase(name,func,mode,project){switch(mode){case "predefined":EASE_MAP.set(name,
func);PREDEFINED_EASE_MAP.set(name,func);break;case "custom":if(project){if(!CUSTOM_EASE_EDITOR_MAP.has(project))CUSTOM_EASE_EDITOR_MAP.set(project,new Map);const customEaseMap=CUSTOM_EASE_EDITOR_MAP.get(project);customEaseMap.set(name,func)}else CUSTOM_EASE_RUNTIME_MAP.set(name,func);break;case "private":EASE_MAP.set(name,func);PRIVATE_EASE_MAP.set(name,func);break;default:throw new Error("unexpected ease mode");}}static NoEase(t,b,c,d){return c*t/d+b}static EaseInQuad(t,b,c,d){return c*(t/=d)*t+
b}static EaseOutQuad(t,b,c,d){return-c*(t/=d)*(t-2)+b}static EaseInOutQuad(t,b,c,d){if((t/=d/2)<1)return c/2*t*t+b;return-c/2*(--t*(t-2)-1)+b}static EaseInCubic(t,b,c,d){return c*(t/=d)*t*t+b}static EaseOutCubic(t,b,c,d){return c*((t=t/d-1)*t*t+1)+b}static EaseInOutCubic(t,b,c,d){if((t/=d/2)<1)return c/2*t*t*t+b;return c/2*((t-=2)*t*t+2)+b}static EaseInQuart(t,b,c,d){return c*(t/=d)*t*t*t+b}static EaseOutQuart(t,b,c,d){return-c*((t=t/d-1)*t*t*t-1)+b}static EaseInOutQuart(t,b,c,d){if((t/=d/2)<1)return c/
2*t*t*t*t+b;return-c/2*((t-=2)*t*t*t-2)+b}static EaseInQuint(t,b,c,d){return c*(t/=d)*t*t*t*t+b}static EaseOutQuint(t,b,c,d){return c*((t=t/d-1)*t*t*t*t+1)+b}static EaseInOutQuint(t,b,c,d){if((t/=d/2)<1)return c/2*t*t*t*t*t+b;return c/2*((t-=2)*t*t*t*t+2)+b}static EaseInSine(t,b,c,d){return-c*Math.cos(t/d*(Math.PI/2))+c+b}static EaseOutSine(t,b,c,d){return c*Math.sin(t/d*(Math.PI/2))+b}static EaseInOutSine(t,b,c,d){return-c/2*(Math.cos(Math.PI*t/d)-1)+b}static EaseInExpo(t,b,c,d){return t===0?b:c*
Math.pow(2,10*(t/d-1))+b}static EaseOutExpo(t,b,c,d){return t===d?b+c:c*(-Math.pow(2,-10*t/d)+1)+b}static EaseInOutExpo(t,b,c,d){if(t===0)return b;if(t===d)return b+c;if((t/=d/2)<1)return c/2*Math.pow(2,10*(t-1))+b;return c/2*(-Math.pow(2,-10*--t)+2)+b}static EaseInCirc(t,b,c,d){return-c*(Math.sqrt(1-(t/=d)*t)-1)+b}static EaseOutCirc(t,b,c,d){return c*Math.sqrt(1-(t=t/d-1)*t)+b}static EaseInOutCirc(t,b,c,d){if((t/=d/2)<1)return-c/2*(Math.sqrt(1-t*t)-1)+b;return c/2*(Math.sqrt(1-(t-=2)*t)+1)+b}static EaseInElastic(t,
b,c,d){let s=1.70158;let p=0;let a=c;if(t===0)return b;if((t/=d)===1)return b+c;if(!p)p=d*.3;if(a<Math.abs(c)){a=c;s=p/4}else s=p/(2*Math.PI)*Math.asin(c/a);return-(a*Math.pow(2,10*(t-=1))*Math.sin((t*d-s)*(2*Math.PI)/p))+b}static EaseOutElastic(t,b,c,d){let s=1.70158;let p=0;let a=c;if(t===0)return b;if((t/=d)===1)return b+c;if(!p)p=d*.3;if(a<Math.abs(c)){a=c;s=p/4}else s=p/(2*Math.PI)*Math.asin(c/a);return a*Math.pow(2,-10*t)*Math.sin((t*d-s)*(2*Math.PI)/p)+c+b}static EaseInOutElastic(t,b,c,d){let s=
1.70158;let p=0;let a=c;if(t===0)return b;if((t/=d/2)===2)return b+c;if(!p)p=d*(.3*1.5);if(a<Math.abs(c)){a=c;s=p/4}else s=p/(2*Math.PI)*Math.asin(c/a);if(t<1)return-.5*(a*Math.pow(2,10*(t-=1))*Math.sin((t*d-s)*(2*Math.PI)/p))+b;return a*Math.pow(2,-10*(t-=1))*Math.sin((t*d-s)*(2*Math.PI)/p)*.5+c+b}static EaseInBack(t,b,c,d,s){if(s===undefined)s=1.70158;return c*(t/=d)*t*((s+1)*t-s)+b}static EaseOutBack(t,b,c,d,s){if(s===undefined)s=1.70158;return c*((t=t/d-1)*t*((s+1)*t+s)+1)+b}static EaseInOutBack(t,
b,c,d,s){if(s===undefined)s=1.70158;if((t/=d/2)<1)return c/2*(t*t*(((s*=1.525)+1)*t-s))+b;return c/2*((t-=2)*t*(((s*=1.525)+1)*t+s)+2)+b}static EaseInBounce(t,b,c,d){return c-Ease.EaseOutBounce(d-t,0,c,d)+b}static EaseOutBounce(t,b,c,d){if((t/=d)<1/2.75)return c*(7.5625*t*t)+b;else if(t<2/2.75)return c*(7.5625*(t-=1.5/2.75)*t+.75)+b;else if(t<2.5/2.75)return c*(7.5625*(t-=2.25/2.75)*t+.9375)+b;else return c*(7.5625*(t-=2.625/2.75)*t+.984375)+b}static EaseInOutBounce(t,b,c,d){if(t<d/2)return Ease.EaseInBounce(t*
2,0,c,d)*.5+b;return Ease.EaseOutBounce(t*2-d,0,c,d)*.5+c*.5+b}static EaseCubicBezier(t,p0,p1,p2,p3){const _0=p0;const _1=3*t*(p1-p0);const _2=3*t**2*(p0+p2-2*p1);const _3=t**3*(p3-p0+3*p1-3*p2);return _0+_1+_2+_3}static EaseSpline(t,sx,sy,x1,y1,x2,y2,ex,ey,samples){if(x1===y1&&x2===y2)return t;const tx=get_t_for_x(t,sx,x1,x2,ex,samples);const va=a(sy,y1,y2,ey);const vb=b(sy,y1,y2,ey);const vc=c(sy,y1,y2,ey);return calc_bezier(tx,va,vb,vc)}static GetBezierSamples(startx,a1x,a2x,endx){const ret=[];
const va=a(startx,a1x,a2x,endx);const vb=b(startx,a1x,a2x,endx);const vc=c(startx,a1x,a2x,endx);for(let i=0;i<SAMPLE_COUNT;++i){const sample=calc_bezier(i*SAMPLE_STEP,va,vb,vc);ret.push(sample)}return ret}};const SAMPLE_COUNT=11;const SAMPLE_STEP=1/(SAMPLE_COUNT-1);const NEWTON_RAPHSON_ITERATIONS=4;const NEWTON_RAPHSON_MIN_SLOPE=.02;const SUBDIVISION_PRECISION=1E-7;const SUBDIVISION_MAX_ITERATIONS=10;const a=(p0,p1,p2,p3)=>{return p3-3*p2+3*p1-p0};const b=(p0,p1,p2,p3)=>{return 3*p2-6*p1+3*p0};
const c=(p0,p1,p2,p3)=>{return 3*(p1-p0)};const calc_bezier=(aT,a,b,c)=>{return((a*aT+b)*aT+c)*aT};const get_slope=(aT,a,b,c)=>{return 3*a*aT*aT+2*b*aT+c};
const get_t_for_x=(aX,p0,p1,p2,p3,samples)=>{if(aX==1)return 1;let intervalStart=0;let currentSampleIndex=1;let currentSampleValue=samples[currentSampleIndex];let lastSampleIndex=SAMPLE_COUNT-1;let lastSampleValue=samples[SAMPLE_COUNT-1];while(currentSampleIndex!=lastSampleIndex&&currentSampleValue<=aX){currentSampleIndex++;currentSampleValue=samples[currentSampleIndex];intervalStart+=SAMPLE_STEP}currentSampleIndex--;currentSampleValue=samples[currentSampleIndex];const dist=(aX-currentSampleValue)/
(samples[currentSampleIndex+1]-currentSampleValue);let guess=intervalStart+dist*SAMPLE_STEP;const va=a(p0,p1,p2,p3);const vb=b(p0,p1,p2,p3);const vc=c(p0,p1,p2,p3);const initSlope=get_slope(guess,va,vb,vc);if(initSlope===0)return guess;else if(initSlope>=NEWTON_RAPHSON_MIN_SLOPE){for(let i=0;i<NEWTON_RAPHSON_ITERATIONS;++i){const x=calc_bezier(guess,va,vb,vc)-aX;const slope=get_slope(guess,va,vb,vc);guess-=x/slope}return guess}else{let aA=intervalStart;let aB=intervalStart+SAMPLE_STEP;let i=0;let precissionLimit;
let maxIterations;do{guess=aA+(aB-aA)/2;let x=calc_bezier(guess,va,vb,vc)-aX;if(x>0)aB=guess;else aA=guess;precissionLimit=Math.abs(x)>SUBDIVISION_PRECISION;maxIterations=++i<SUBDIVISION_MAX_ITERATIONS}while(precissionLimit&&maxIterations);return guess}};

}

// ../lib/misc/probability.js
{
'use strict';const C3=self.C3;function RequireStringOrNumber(value){if(!C3.IsString(value));}
C3.ProbabilityTable=class ProbabilityTable{constructor(){this._items=[];this._totalWeight=0}Release(){this.Clear();this._items=null}Clear(){C3.clear2DArray(this._items);this._totalWeight=0}GetTotalWeight(){return this._totalWeight}Sample(t=Math.random()*this.GetTotalWeight()){let sumWeight=0;for(const [weight,value]of this._items){sumWeight+=weight;if(t<sumWeight)return value}return 0}AddItem(weight,value){RequireStringOrNumber(value);this._totalWeight+=weight;this._items.push([weight,value])}RemoveItem(weight,
value){RequireStringOrNumber(value);const ignoreWeight=weight===0;for(let i=0;i<this._items.length;i++){const item=this._items[i];const doesWeightMatch=ignoreWeight||item[0]===weight;const doesValueMatch=item[1]===value;if(doesWeightMatch&&doesValueMatch){this._items.splice(i,1);this._totalWeight-=item[0];break}}}asJSON(){return JSON.stringify(this._items)}static fromJSON(str){const table=new C3.ProbabilityTable;const items=JSON.parse(str);for(const item of items){const weight=item[0];const value=
item[1];table.AddItem(weight,value)}return table}};

}

// ../lib/events/event.js
{
'use strict';const C3=self.C3;
C3.Event=class Event{constructor(type,cancelable){this.type=type;this.cancelable=!!cancelable;this.defaultPrevented=false;this.propagationStopped=false;this.isAsync=false}preventDefault(){if(!this.cancelable)throw new Error(`event '${this.type}' is not cancelable`);this.defaultPrevented=true}stopPropagation(){if(!this.cancelable)throw new Error(`event '${this.type}' cannot be stopped`);if(this.isAsync)throw new Error(`cannot stop async event '${this.type}' propagation`);this.propagationStopped=true}};

}

// ../lib/events/handler.js
{
'use strict';const C3=self.C3;const assert=self.assert;
C3.Event.Handler=class EventHandler extends C3.DefendedBase{constructor(type){super();this._type=type;this._captureListeners=[];this._captureListenersSet=new Set;this._listeners=[];this._listenersSet=new Set;this._fireDepth=0;this._queueModifyListeners=[]}Release(){if(this._fireDepth>0)return;C3.clearArray(this._captureListeners);this._captureListenersSet.clear();C3.clearArray(this._listeners);this._listenersSet.clear();C3.clearArray(this._queueModifyListeners);C3.Release(this)}_AddListener(func,
capture){if(this._IsFiring()){this._queueModifyListeners.push({op:"add",func,capture});return}if(capture){if(this._captureListenersSet.has(func))return;this._captureListeners.push(func);this._captureListenersSet.add(func)}else{if(this._listenersSet.has(func))return;this._listeners.push(func);this._listenersSet.add(func)}}_RemoveListener(func,capture){if(this._IsFiring()){this._queueModifyListeners.push({op:"remove",func,capture});return}if(capture){if(this._captureListenersSet.has(func)){this._captureListenersSet.delete(func);
C3.arrayFindRemove(this._captureListeners,func)}}else if(this._listenersSet.has(func)){this._listenersSet.delete(func);C3.arrayFindRemove(this._listeners,func)}}_IsEmpty(){return!this._captureListeners.length&&!this._listeners.length}_IsFiring(){return this._fireDepth>0}_ProcessQueuedListeners(){const removeListenersSet=new Set;const removeCaptureListenersSet=new Set;for(const q of this._queueModifyListeners)if(q.op==="add"){this._AddListener(q.func,q.capture);if(q.capture)removeCaptureListenersSet.delete(q.func);
else removeListenersSet.delete(q.func)}else if(q.op==="remove")if(q.capture){this._captureListenersSet.delete(q.func);removeCaptureListenersSet.add(q.func)}else{this._listenersSet.delete(q.func);removeListenersSet.add(q.func)}else throw new Error("invalid op");C3.arrayRemoveAllInSet(this._listeners,removeListenersSet);C3.arrayRemoveAllInSet(this._captureListeners,removeCaptureListenersSet);C3.clearArray(this._queueModifyListeners)}_FireCancellable(event){this._IncreaseFireDepth();let isStopped=false;
for(let i=0,len=this._captureListeners.length;i<len;++i){this._captureListeners[i](event);if(event.propagationStopped){isStopped=true;break}}if(!isStopped)for(let i=0,len=this._listeners.length;i<len;++i){this._listeners[i](event);if(event.propagationStopped)break}this._DecreaseFireDepth();return!event.defaultPrevented}_FireNonCancellable(event){this._IncreaseFireDepth();for(let i=0,len=this._captureListeners.length;i<len;++i)this._captureListeners[i](event);for(let i=0,len=this._listeners.length;i<
len;++i)this._listeners[i](event);this._DecreaseFireDepth();return true}_IncreaseFireDepth(){this._fireDepth++}_DecreaseFireDepth(){this._fireDepth--;if(this._fireDepth===0&&this._queueModifyListeners.length>0)this._ProcessQueuedListeners()}SetDelayRemoveEventsEnabled(e){if(e)this._IncreaseFireDepth();else this._DecreaseFireDepth()}_FireAsync(event){let callbackPromises=[];for(let i=0,len=this._captureListeners.length;i<len;++i){let func=this._captureListeners[i];callbackPromises.push(C3.Asyncify(()=>
func(event)))}for(let i=0,len=this._listeners.length;i<len;++i){let func=this._listeners[i];callbackPromises.push(C3.Asyncify(()=>func(event)))}return Promise.all(callbackPromises).then(()=>!event.defaultPrevented)}_FireAndWait_AsyncOptional(event){const results=[];this._IncreaseFireDepth();for(let i=0,len=this._captureListeners.length;i<len;++i){const ret=this._captureListeners[i](event);if(ret instanceof Promise)results.push(ret)}for(let i=0,len=this._listeners.length;i<len;++i){const ret=this._listeners[i](event);
if(ret instanceof Promise)results.push(ret)}this._DecreaseFireDepth();if(results.length)return Promise.all(results).then(()=>!event.defaultPrevented);else return!event.defaultPrevented}async _FireAndWaitAsync(event){return await this._FireAndWait_AsyncOptional(event)}async _FireAndWaitAsyncSequential(event){this._IncreaseFireDepth();for(let i=0,len=this._captureListeners.length;i<len;++i){const ret=this._captureListeners[i](event);if(ret instanceof Promise)await ret}for(let i=0,len=this._listeners.length;i<
len;++i){const ret=this._listeners[i](event);if(ret instanceof Promise)await ret}this._DecreaseFireDepth();return!event.defaultPrevented}*_FireAsGenerator(event){this._IncreaseFireDepth();for(let i=0,len=this._captureListeners.length;i<len;++i){const ret=this._captureListeners[i](event);if(C3.IsIterator(ret))yield*ret}for(let i=0,len=this._listeners.length;i<len;++i){const ret=this._listeners[i](event);if(C3.IsIterator(ret))yield*ret}this._DecreaseFireDepth()}};

}

// ../lib/events/dispatcher.js
{
'use strict';const C3=self.C3;
C3.Event.Dispatcher=class EventDispatcher extends C3.DefendedBase{constructor(){super();this._eventHandlers=new Map;this._dispatcherWasReleased=false}Release(){if(this._dispatcherWasReleased)throw new Error("already released");this.ClearEvents();this._dispatcherWasReleased=true;C3.Release(this)}WasReleased(){return this._dispatcherWasReleased}ClearEvents(){for(let handler of this._eventHandlers.values())handler.Release();this._eventHandlers.clear()}_GetHandlerByType(type,create_if_missing){let handler=
this._eventHandlers.get(type);if(handler)return handler;if(create_if_missing){handler=C3.New(C3.Event.Handler,type);this._eventHandlers.set(type,handler);return handler}return null}HasAnyHandlerFor(type){return this._eventHandlers.has(type)}addEventListener(type,func,capture){let handler=this._GetHandlerByType(type,true);handler._AddListener(func,!!capture)}removeEventListener(type,func,capture){let handler=this._GetHandlerByType(type,false);if(!handler)return;handler._RemoveListener(func,!!capture);
if(handler._IsEmpty())this._eventHandlers.delete(type)}dispatchEvent(event){const handler=this._GetHandlerByType(event.type,false);if(!handler)return true;if(event.cancelable)return handler._FireCancellable(event);else return handler._FireNonCancellable(event)}dispatchEventAsync(event){const handler=this._GetHandlerByType(event.type,false);if(!handler)return Promise.resolve(true);event.isAsync=true;return handler._FireAsync(event)}async dispatchEventAndClearAsync(event){const handler=this._GetHandlerByType(event.type,
false);if(!handler)return true;this._eventHandlers.delete(event.type);event.isAsync=true;const ret=await handler._FireAsync(event);handler.Release();return ret}async dispatchEventAndWaitAsync(event){const handler=this._GetHandlerByType(event.type,false);if(!handler)return true;return await handler._FireAndWaitAsync(event)}dispatchEventAndWait_AsyncOptional(event){const handler=this._GetHandlerByType(event.type,false);if(!handler)return true;return handler._FireAndWait_AsyncOptional(event)}async dispatchEventAndWaitAsyncSequential(event){const handler=
this._GetHandlerByType(event.type,false);if(!handler)return true;return await handler._FireAndWaitAsyncSequential(event)}dispatchGeneratorEvent(event){const handler=this._GetHandlerByType(event.type,false);if(!handler)return null;if(event.cancelable)throw new Error("not supported");else return handler._FireAsGenerator(event)}SetDelayRemoveEventsEnabled(e){for(const handler of this._eventHandlers.values())handler.SetDelayRemoveEventsEnabled(e)}};

}

// ../lib/util/asyncify.js
{
'use strict';const C3=self.C3;const SETTIMEOUT_WORK_DURATION=12;const SETTIMEOUT_INTERVAL=16;const IDLECALLBACK_TIMEOUT=35;const SUPPORTS_RIC=typeof requestIdleCallback!=="undefined";let workQueue=[];let callbackId=-1;let highThroughputMode=0;function SetNewCallback(timerTimeout){if(SUPPORTS_RIC&&highThroughputMode===0)callbackId=requestIdleCallback(DoAsyncifiedWork,{timeout:IDLECALLBACK_TIMEOUT});else callbackId=setTimeout(DoAsyncifiedWork,highThroughputMode>0?1:timerTimeout)}
function DoAsyncifiedWork(deadline){callbackId=-1;if(!workQueue.length)return;let startTime=performance.now();let curTime=startTime;let jobCount=0;let estimatedNextJobDuration=0;do{DoNextAsyncifiedJob(workQueue.shift());curTime=performance.now();++jobCount;estimatedNextJobDuration=(curTime-startTime)/jobCount*1.1}while(workQueue.length&&(SUPPORTS_RIC&&highThroughputMode===0&&typeof deadline!=="undefined"?estimatedNextJobDuration<deadline["timeRemaining"]():curTime-startTime+estimatedNextJobDuration<
SETTIMEOUT_WORK_DURATION));if(callbackId===-1&&workQueue.length){let workDuration=curTime-startTime;let timeout=Math.max(SETTIMEOUT_INTERVAL-workDuration,4);SetNewCallback(timeout)}}function DoNextAsyncifiedJob(w){let ret;try{ret=w.func()}catch(e){w.reject(e);return}w.resolve(ret)}let asyncifyDisabled=C3.QueryString.Has("disable-asyncify");if(asyncifyDisabled)console.warn("[Asyncify] Asyncify has been disabled due to disable-asyncify in the query string. Some work will now be done synchronously.");
C3.Asyncify=function Asyncify(func){let stack=null;if(C3.isDebug)stack=C3.GetCallStack();return new Promise((resolve,reject)=>{workQueue.push({func:func,resolve:resolve,reject:reject,stack:stack});if(asyncifyDisabled){DoNextAsyncifiedJob(workQueue.pop());return}if(callbackId===-1)SetNewCallback(SETTIMEOUT_INTERVAL)})};
C3.Asyncify.SetHighThroughputMode=function SetHighThroughputMode(m){if(m)++highThroughputMode;else{--highThroughputMode;if(highThroughputMode<0)throw new Error("already turned off high throughput mode");}};

}

// ../lib/util/idleTimeout.js
{
'use strict';const C3=self.C3;const IDLE_CHECK_MIN_INTERVAL=1E3;const IDLE_CHECK_TIMER_OVERSHOOT=100;let cachedNowTime=-1;function ClearTimeCache(){cachedNowTime=-1}C3.FastGetDateNow=function FastGetDateNow(){if(cachedNowTime===-1){cachedNowTime=Date.now();self.setTimeout(ClearTimeCache,16)}return cachedNowTime};let timerId=-1;let nextDeadline=-1;let activeIdleTimeouts=new Set;
function CheckActiveIdleTimeouts(){timerId=-1;nextDeadline=-1;let nowTime=Date.now();for(let i of activeIdleTimeouts)if(i._CheckTimeout(nowTime)){let deadline=i._GetDeadline();if(nextDeadline===-1||deadline<nextDeadline)nextDeadline=deadline}else activeIdleTimeouts.delete(i);if(nextDeadline!==-1){let duration=Math.max(nextDeadline-nowTime+IDLE_CHECK_TIMER_OVERSHOOT,IDLE_CHECK_MIN_INTERVAL);timerId=self.setTimeout(CheckActiveIdleTimeouts,duration)}}
C3.IdleTimeout=class IdleTimeout{constructor(callback,timeoutInSeconds){this._callback=callback;this._timeout=timeoutInSeconds*1E3;this._deadline=0;this._isActive=false}Reset(){let nowTime=C3.FastGetDateNow();this._deadline=nowTime+this._timeout;if(!this._isActive){activeIdleTimeouts.add(this);this._isActive=true}if(timerId===-1){nextDeadline=this._deadline;timerId=self.setTimeout(CheckActiveIdleTimeouts,this._timeout+IDLE_CHECK_TIMER_OVERSHOOT)}else if(this._deadline<nextDeadline&&nextDeadline>nowTime+
IDLE_CHECK_MIN_INTERVAL){self.clearTimeout(timerId);nextDeadline=this._deadline;timerId=self.setTimeout(CheckActiveIdleTimeouts,this._timeout+IDLE_CHECK_TIMER_OVERSHOOT)}}_CheckTimeout(nowTime){if(nowTime>=this._deadline){if(this._callback()){this._deadline=nowTime+this._timeout;return true}this._isActive=false;return false}return true}_GetDeadline(){return this._deadline}Cancel(){if(this._isActive){activeIdleTimeouts.delete(this);this._isActive=false;if(activeIdleTimeouts.size===0&&timerId!==-1){self.clearTimeout(timerId);
timerId=-1;nextDeadline=-1}}}Release(){this.Cancel();this._callback=null}};

}

// ../lib/util/disposable.js
{
'use strict';const C3=self.C3;
C3.Disposable=class Disposable{constructor(disposeAction){this._disposed=false;this._disposeAction=disposeAction}Dispose(){if(this._disposed)return;this._disposed=true;if(this._disposeAction){this._disposeAction();this._disposeAction=null}}IsDisposed(){return this._disposed}Release(){this.Dispose()}static Release(instance){return new Disposable(()=>instance.Release())}static From(eventDispatcher,eventNames,eventHandler,opts,scope){if(typeof opts==="undefined"||opts===null)opts=false;else if(typeof opts!==
"boolean"&&typeof opts!=="object")throw new TypeError("invalid event listener options");if(scope)eventHandler=eventHandler.bind(scope);if(eventNames.includes(" ")){eventNames=eventNames.split(" ");const disposable=new C3.CompositeDisposable;for(let eventName of eventNames){eventDispatcher.addEventListener(eventName,eventHandler,opts);disposable.Add(C3.New(C3.Disposable,()=>eventDispatcher.removeEventListener(eventName,eventHandler,opts)))}return disposable}else{eventDispatcher.addEventListener(eventNames,
eventHandler,opts);return C3.New(C3.Disposable,()=>eventDispatcher.removeEventListener(eventNames,eventHandler,opts))}}};C3.StubDisposable=class StubDisposable extends C3.Disposable{SetAction(disposeAction){this._disposeAction=disposeAction}};
C3.CompositeDisposable=class CompositeDisposable extends C3.Disposable{constructor(...disposables){super();this._disposables=new Set;for(let disposable of disposables)this.Add(disposable)}Add(...disposables){if(this._disposed)throw new Error("already disposed");for(let disposable of disposables)this._disposables.add(disposable)}Remove(disposable){if(this._disposed)throw new Error("already disposed");this._disposables.delete(disposable)}RemoveAll(){if(this._disposed)throw new Error("already disposed");
if(!this._disposables)return;for(let disposable of this._disposables)disposable.Dispose();this._disposables.clear()}IsDisposed(){return this._disposed}Dispose(){if(this._disposed)throw new Error("already disposed");this._disposed=true;for(let disposable of this._disposables)disposable.Dispose();this._disposables.clear();this._disposables=null}Release(){this.Dispose()}};

}

// lib/util/kahanSum.js
{
'use strict';const C3=self.C3;C3.KahanSum=class KahanSum extends C3.DefendedBase{constructor(){super();this._c=0;this._y=0;this._t=0;this._sum=0}Add(v){v=+v;this._y=v-this._c;this._t=this._sum+this._y;this._c=this._t-this._sum-this._y;this._sum=this._t}Subtract(v){this._sum-=+v}Get(){return this._sum}Reset(){this._c=0;this._y=0;this._t=0;this._sum=0}Set(s){this._c=0;this._y=0;this._t=0;this._sum=+s}Release(){}};

}

// lib/util/redblackset.js
{
'use strict';const C3=self.C3;const js_cols={};const RED=true;const BLACK=false;js_cols.RBnode=function(tree){this.tree=tree;this.right=this.tree.sentinel;this.left=this.tree.sentinel;this.parent=null;this.color=false;this.key=null};js_cols.RedBlackSet=function(compare_func){this.size=0;this.sentinel=new js_cols.RBnode(this);this.sentinel.color=BLACK;this.root=this.sentinel;this.root.parent=this.sentinel;this.compare=compare_func||this.default_compare};
js_cols.RedBlackSet.prototype.default_compare=function(a,b){if(a<b)return-1;else if(b<a)return 1;else return 0};js_cols.RedBlackSet.prototype.clone=function(){var rv=new js_cols.RedBlackSet(this.compare);rv.insertAll(this);return rv};js_cols.RedBlackSet.prototype.clear=function(){this.size=0;this.sentinel=new js_cols.RBnode(this);this.sentinel.color=BLACK;this.root=this.sentinel;this.root.parent=this.sentinel};
js_cols.RedBlackSet.prototype.leftRotate=function(x){var y=x.right;x.right=y.left;if(y.left!=this.sentinel)y.left.parent=x;y.parent=x.parent;if(x.parent==this.sentinel)this.root=y;else if(x==x.parent.left)x.parent.left=y;else x.parent.right=y;y.left=x;x.parent=y};
js_cols.RedBlackSet.prototype.rightRotate=function(x){var y=x.left;x.left=y.right;if(y.right!=this.sentinel)y.right.parent=x;y.parent=x.parent;if(x.parent==this.sentinel)this.root=y;else if(x==x.parent.right)x.parent.right=y;else x.parent.left=y;y.right=x;x.parent=y};
js_cols.RedBlackSet.prototype.insert=function(key){if(!this.contains(key)){var z=new js_cols.RBnode(this);z.key=key;var y=this.sentinel;var x=this.root;while(x!=this.sentinel){y=x;if(this.compare(z.key,x.key)<0)x=x.left;else x=x.right}z.parent=y;if(y==this.sentinel)this.root=z;else if(this.compare(z.key,y.key)<0)y.left=z;else y.right=z;z.left=this.sentinel;z.right=this.sentinel;z.color=RED;this.insertFixup(z);this.size++}else{var node=this.get_(key);node.key=key}};
js_cols.RedBlackSet.prototype.insertFixup=function(z){while(z!=this.sentinel&&z!=this.root&&z.parent.color==RED)if(z.parent==z.parent.parent.left){var y=z.parent.parent.right;if(y.color==RED){z.parent.color=BLACK;y.color=BLACK;z.parent.parent.color=RED;z=z.parent.parent}else{if(z==z.parent.right){z=z.parent;this.leftRotate(z)}z.parent.color=BLACK;z.parent.parent.color=RED;if(z.parent.parent!=this.sentinel)this.rightRotate(z.parent.parent)}}else{var y=z.parent.parent.left;if(y.color==RED){z.parent.color=
BLACK;y.color=BLACK;z.parent.parent.color=RED;z=z.parent.parent}else{if(z==z.parent.left){z=z.parent;this.rightRotate(z)}z.parent.color=BLACK;z.parent.parent.color=RED;if(z.parent.parent!=this.sentinel)this.leftRotate(z.parent.parent)}}this.root.color=BLACK};
js_cols.RedBlackSet.prototype.delete_=function(z){var y;var x;if(z.left==this.sentinel||z.right==this.sentinel)y=z;else y=this.successor_(z);if(y.left!=this.sentinel)x=y.left;else x=y.right;x.parent=y.parent;if(y.parent==this.sentinel)this.root=x;else if(y==y.parent.left)y.parent.left=x;else y.parent.right=x;if(y!=z)z.key=y.key;if(y.color==BLACK)this.deleteFixup(x);this.size--};
js_cols.RedBlackSet.prototype.deleteFixup=function(x){while(x!=this.root&&x.color==BLACK)if(x==x.parent.left){var w=x.parent.right;if(w.color==RED){w.color=BLACK;x.parent.color=RED;this.leftRotate(x.parent);w=x.parent.right}if(w.left.color==BLACK&&w.right.color==BLACK){w.color=RED;x=x.parent}else{if(w.right.color==BLACK){w.left.color=BLACK;w.color=RED;this.rightRotate(w);w=x.parent.right}w.color=x.parent.color;x.parent.color=BLACK;w.right.color=BLACK;this.leftRotate(x.parent);x=this.root}}else{var w=
x.parent.left;if(w.color==RED){w.color=BLACK;x.parent.color=RED;this.rightRotate(x.parent);w=x.parent.left}if(w.right.color==BLACK&&w.left.color==BLACK){w.color=RED;x=x.parent}else{if(w.left.color==BLACK){w.right.color=BLACK;w.color=RED;this.leftRotate(w);w=x.parent.left}w.color=x.parent.color;x.parent.color=BLACK;w.left.color=BLACK;this.rightRotate(x.parent);x=this.root}}x.color=BLACK};
js_cols.RedBlackSet.prototype.remove=function(key){var x=this.get_(key);if(x!=this.sentinel){var retval=x.key;this.delete_(x);return retval}else return null};js_cols.RedBlackSet.prototype.removeSwapped=function(value,key){this.remove(key)};js_cols.RedBlackSet.prototype.min=function(x){while(x.left!=this.sentinel)x=x.left;return x};js_cols.RedBlackSet.prototype.max=function(x){while(x.right!=this.sentinel)x=x.right;return x};
js_cols.RedBlackSet.prototype.successor_=function(x){if(x.right!=this.sentinel)return this.min(x.right);var y=x.parent;while(y!=this.sentinel&&x==y.right){x=y;y=y.parent}return y};js_cols.RedBlackSet.prototype.predeccessor_=function(x){if(x.left!=this.sentinel)return this.max(x.left);var y=x.parent;while(y!=this.sentinel&&x==y.left){x=y;y=y.parent}return y};
js_cols.RedBlackSet.prototype.successor=function(key){if(this.size>0){var x=this.get_(key);if(x==this.sentinel)return null;if(x.right!=this.sentinel)return this.min(x.right).key;var y=x.parent;while(y!=this.sentinel&&x==y.right){x=y;y=y.parent}if(y!=this.sentinel)return y.key;else return null}else return null};
js_cols.RedBlackSet.prototype.predecessor=function(key){if(this.size>0){var x=this.get_(key);if(x==this.sentinel)return null;if(x.left!=this.sentinel)return this.max(x.left).key;var y=x.parent;while(y!=this.sentinel&&x==y.left){x=y;y=y.parent}if(y!=this.sentinel)return y.key;else return null}else return null};js_cols.RedBlackSet.prototype.getMin=function(){return this.min(this.root).key};js_cols.RedBlackSet.prototype.getMax=function(){return this.max(this.root).key};
js_cols.RedBlackSet.prototype.get_=function(key){var x=this.root;while(x!=this.sentinel&&this.compare(x.key,key)!=0)if(this.compare(key,x.key)<0)x=x.left;else x=x.right;return x};js_cols.RedBlackSet.prototype.contains=function(key){return this.get_(key).key!=null};js_cols.RedBlackSet.prototype.getValues=function(){var ret=[];this.forEach(function(x){ret.push(x)});return ret};
js_cols.RedBlackSet.prototype.insertAll=function(col){if(js_cols.typeOf(col)=="array")for(var i=0;i<col.length;i++)this.insert(col[i]);else if(js_cols.typeOf(col.forEach)=="function")col.forEach(this.insert,this);else if(js_cols.typeOf(col.getValues)=="function"){var arr=col.getValues();for(var i=0;i<arr.length;i++)this.insert(arr[i])}else if(js_cols.typeOf(col)=="object")for(var key in col)this.insert(col[key])};
js_cols.RedBlackSet.prototype.removeAll=function(col){if(js_cols.typeOf(col)=="array")for(var i=0;i<col.length;i++)this.remove(col[i]);else if(js_cols.typeOf(col.forEach)=="function")col.forEach(this.removeSwapped,this);else if(js_cols.typeOf(col.getValues)=="function"){var arr=col.getValues();for(var i=0;i<arr.length;i++)this.remove(arr[i])}else if(js_cols.typeOf(col)=="object")for(var key in col)this.remove(col[key])};
js_cols.RedBlackSet.prototype.containsAll=function(col){if(js_cols.typeOf(col)=="array"){for(var i=0;i<col.length;i++)if(!this.contains(col[i]))return false;return true}else if(js_cols.typeOf(col.forEach)=="function")return col.every(this.contains,this);else if(js_cols.typeOf(col.getValues)=="function"){var arr=col.getValues();for(var i=0;i<arr.length;i++)if(!this.contains(arr[i]))return false;return true}else if(js_cols.typeOf(col)=="object"){for(var key in col)if(!this.contains(col[key]))return false;
return true}};js_cols.RedBlackSet.prototype.range=function(from,to){var retArray=[];this.traverseFromTo(function(x){retArray.push(x)},from,to);return retArray};js_cols.RedBlackSet.prototype.traverse=function(f,opt_obj){if(this.isEmpty())return;var node=this.min(this.root);while(node!=this.sentinel){if(f.call(opt_obj,node.key,this))return;node=this.successor_(node)}};
js_cols.RedBlackSet.prototype.traverseFrom=function(f,fromKey,opt_obj){if(this.isEmpty())return;var node=this.get_(fromKey);while(node!=this.sentinel){if(f.call(opt_obj,node.key,this))return;node=this.successor_(node)}};js_cols.RedBlackSet.prototype.traverseTo=function(f,toKey,opt_obj){if(this.isEmpty())return;var node=this.min(this.root);var toNode=this.get_(toKey);while(node!=toNode){if(f.call(opt_obj,node.key,this))return;node=this.successor_(node)}};
js_cols.RedBlackSet.prototype.traverseFromTo=function(f,fromKey,toKey,opt_obj){if(this.isEmpty())return;var node=this.get_(fromKey);var toNode=this.get_(toKey);while(node!=toNode){if(f.call(opt_obj,node.key,this))return;node=this.successor_(node)}};js_cols.RedBlackSet.prototype.traverseBackwards=function(f,opt_obj){if(this.isEmpty())return;var node=this.max(this.root);while(node!=this.sentinel){if(f.call(opt_obj,node.key,this))return;node=this.predeccessor_(node)}};
js_cols.RedBlackSet.prototype.forEach=function(f,opt_obj){if(this.isEmpty())return;for(var n=this.min(this.root);n!=this.sentinel;n=this.successor_(n))f.call(opt_obj,n.key,n.key,this)};js_cols.RedBlackSet.prototype.some=function(f,opt_obj){if(this.isEmpty())return false;for(var n=this.min(this.root);n!=this.sentinel;n=this.successor_(n))if(f.call(opt_obj,n.key,n.key,this))return true;return false};
js_cols.RedBlackSet.prototype.every=function(f,opt_obj){if(this.isEmpty())return false;for(var n=this.min(this.root);n!=this.sentinel;n=this.successor_(n))if(!f.call(opt_obj,n.key,n.key,this))return false;return true};js_cols.RedBlackSet.prototype.map=function(f,opt_obj){var rv=[];if(this.isEmpty())return rv;for(var n=this.min(this.root);n!=this.sentinel;n=this.successor_(n))rv.push(f.call(opt_obj,n.key,n.key,this));return rv};
js_cols.RedBlackSet.prototype.filter=function(f,opt_obj){var rv=[];if(this.isEmpty())return rv;for(var n=this.min(this.root);n!=this.sentinel;n=this.successor_(n))if(f.call(opt_obj,n.key,n.key,this))rv.push(n.key);return rv};js_cols.RedBlackSet.prototype.getCount=function(){return this.size};js_cols.RedBlackSet.prototype.isEmpty=function(){return this.size==0};
js_cols.RedBlackSet.prototype.isSubsetOf=function(col){var colCount=js_cols.getCount(col);if(this.getCount()>colCount)return false;var i=0;if(this.isEmpty())return true;for(var n=this.min(this.root);n!=this.sentinel;n=this.successor_(n))if(js_cols.contains.call(col,col,n.key))i++;return i==this.getCount()};
js_cols.RedBlackSet.prototype.intersection=function(col){var result=new js_cols.RedBlackSet(this.compare);if(this.isEmpty())return result;for(var n=this.min(this.root);n!=this.sentinel;n=this.successor_(n))if(col.contains.call(col,n.key,n.key,this))result.insert(n.key);return result};
C3.RedBlackSet=class RedBlackSet extends C3.DefendedBase{constructor(sortFunc){super();this._rbSet=new js_cols.RedBlackSet(sortFunc);this._enableQueue=false;this._queueInsert=new Set;this._queueRemove=new Set}Add(item){if(this._enableQueue)if(this._rbSet.contains(item))this._queueRemove.delete(item);else this._queueInsert.add(item);else this._rbSet.insert(item)}Remove(item){if(this._enableQueue)if(this._rbSet.contains(item))this._queueRemove.add(item);else this._queueInsert.delete(item);else this._rbSet.remove(item)}Has(item){if(this._enableQueue){if(this._queueInsert.has(item))return true;
return!this._queueRemove.has(item)&&this._rbSet.contains(item)}else return this._rbSet.contains(item)}Clear(){this._rbSet.clear();this._queueInsert.clear();this._queueRemove.clear()}toArray(){if(this._enableQueue)throw new Error("cannot be used in queueing mode");return this._rbSet.getValues()}GetSize(){return this._rbSet.getCount()+this._queueInsert.size-this._queueRemove.size}IsEmpty(){return this.GetSize()===0}Front(){if(this.IsEmpty())throw new Error("empty set");if(this._enableQueue)throw new Error("cannot be used in queueing mode");
const rbSet=this._rbSet;const n=rbSet.min(rbSet.root);return n.key}Shift(){if(this.IsEmpty())throw new Error("empty set");if(this._enableQueue)throw new Error("cannot be used in queueing mode");const item=this.Front();this.Remove(item);return item}SetQueueingEnabled(q){q=!!q;if(this._enableQueue===q)return;this._enableQueue=q;if(!q){for(const item of this._queueRemove)this._rbSet.remove(item);this._queueRemove.clear();for(const item of this._queueInsert)this._rbSet.insert(item);this._queueInsert.clear()}}ForEach(func){this._rbSet.forEach(func)}*values(){if(this.IsEmpty())return;
const rbSet=this._rbSet;for(let n=rbSet.min(rbSet.root);n!=rbSet.sentinel;n=rbSet.successor_(n))yield n.key}[Symbol.iterator](){return this.values()}};

}

// ../lib/util/promiseThrottle.js
{
'use strict';const C3=self.C3;
C3.PromiseThrottle=class PromiseThrottle{constructor(maxParallel=C3.hardwareConcurrency){this._maxParallel=maxParallel;this._queue=[];this._activeCount=0}Add(func){return new Promise((resolve,reject)=>{this._queue.push({func,resolve,reject});this._MaybeStartNext()})}_FindInQueue(func){for(let i=0,len=this._queue.length;i<len;++i)if(this._queue[i].func===func)return i;return-1}RemoveAndResolve(func,value){const i=this._FindInQueue(func);if(i===-1)throw new Error("cannot find promise to resolve");this._queue[i].resolve(value);
this._queue.splice(i,1)}RemoveAndReject(func,value){const i=this._FindInQueue(func);if(i===-1)throw new Error("cannot find promise to reject");this._queue[i].reject(value);this._queue.splice(i,1)}async _MaybeStartNext(){if(!this._queue.length)return;if(this._activeCount>=this._maxParallel)return;this._activeCount++;const job=this._queue.shift();try{const result=await job.func();job.resolve(result)}catch(err){job.reject(err)}this._activeCount--;this._MaybeStartNext()}static async Batch(concurrency,
methods){const results=[];let failed=false;const execute=async _=>{let fn;while(fn=methods.pop()){if(failed)return;try{results.push(await fn())}catch(e){failed=true;throw e;}}};const promises=[];while(concurrency--)promises.push(execute());await Promise.all(promises);return results}};

}

// ../lib/util/rateLimiter.js
{
'use strict';const C3=self.C3;
C3.RateLimiter=class RateLimiter{constructor(callback,interval,intervalOnBattery){this._callback=callback;this._interval=interval;this._intervalOnBattery=intervalOnBattery||interval*2;this._timerId=-1;this._lastCallTime=-Infinity;this._timerCallFunc=()=>this._OnTimer();this._ignoreReset=false;this._canRunImmediate=false;this._callbackArguments=null}SetCanRunImmediate(c){this._canRunImmediate=!!c}_GetInterval(){if(typeof C3.Battery!=="undefined"&&C3.Battery.IsOnBatteryPower())return this._intervalOnBattery;else return this._interval}Call(...args){if(this._timerId!==
-1)return;this._callbackArguments=args;let nowTime=C3.FastGetDateNow();let timeSinceLastCall=nowTime-this._lastCallTime;let interval=this._GetInterval();if(timeSinceLastCall>=interval&&this._canRunImmediate){this._lastCallTime=nowTime;this._RunCallback()}else this._timerId=self.setTimeout(this._timerCallFunc,Math.max(interval-timeSinceLastCall,4))}_RunCallback(){this._ignoreReset=true;const args=this._callbackArguments;this._callbackArguments=null;if(args)this._callback(...args);else this._callback();
this._ignoreReset=false}Reset(){if(this._ignoreReset)return;this._CancelTimer();this._callbackArguments=null;this._lastCallTime=C3.FastGetDateNow()}_OnTimer(){this._timerId=-1;this._lastCallTime=C3.FastGetDateNow();this._RunCallback()}_CancelTimer(){if(this._timerId!==-1){self.clearTimeout(this._timerId);this._timerId=-1}}Release(){this._CancelTimer();this._callback=null;this._callbackArguments=null;this._timerCallFunc=null}};

}

// ../lib/util/svgRaster/svgRasterManager.js
{
'use strict';const C3=self.C3;
C3.SVGRasterManager=class SVGRasterManager{constructor(){this._images=new Map;this._allowNpotSurfaces=false;this._getBaseSizeCallback=null;this._rasterAtSizeCallback=null;this._releaseResultCallback=null;this._redrawCallback=null}SetNpotSurfaceAllowed(a){this._allowNpotSurfaces=!!a}IsNpotSurfaceAllowed(){return this._allowNpotSurfaces}SetGetBaseSizeCallback(f){this._getBaseSizeCallback=f}GetBaseSize(dataSource){if(!this._getBaseSizeCallback)throw new Error("no get base size callback set");return this._getBaseSizeCallback(dataSource)}SetRasterAtSizeCallback(f){this._rasterAtSizeCallback=
f}RasterAtSize(dataSource,context,surfaceWidth,surfaceHeight,imageWidth,imageHeight){if(!this._rasterAtSizeCallback)throw new Error("no raster at size callback set");return this._rasterAtSizeCallback(dataSource,context,surfaceWidth,surfaceHeight,imageWidth,imageHeight)}SetReleaseResultCallback(f){this._releaseResultCallback=f}ReleaseResult(rasterizedResult){if(!this._releaseResultCallback)throw new Error("no release result callback set");this._releaseResultCallback(rasterizedResult)}SetRedrawCallback(f){this._redrawCallback=
f}Redraw(){if(!this._redrawCallback)throw new Error("no redraw callback set");this._redrawCallback()}AddImage(dataSource){let ret=this._images.get(dataSource);if(!ret){ret=C3.New(C3.SVGRasterImage,this,dataSource);this._images.set(dataSource,ret)}ret.IncReference();return ret}_RemoveImage(ri){this._images.delete(ri.GetDataSource())}OnTexturesChanged(){for(const ri of this._images.values()){ri.ReleaseRasterizedResult();ri.ForceRasterAgain()}}};

}

// ../lib/util/svgRaster/svgRasterImage.js
{
'use strict';const C3=self.C3;const MAX_SURFACE_SIZE=2048;
C3.SVGRasterImage=class SVGRasterImage{constructor(manager,dataSource){this._manager=manager;this._dataSource=dataSource;this._refCount=0;this._baseWidth=0;this._baseHeight=0;this._getBaseSizePromise=this._manager.GetBaseSize(dataSource).then(baseSize=>{this._baseWidth=baseSize[0];this._baseHeight=baseSize[1];this._manager.Redraw()}).catch(err=>{console.error("[SVG] Error loading SVG: ",err);this._hadError=true;this._manager.Redraw()});this._rasterSurfaceWidth=0;this._rasterSurfaceHeight=0;this._rasterImageWidth=
0;this._rasterImageHeight=0;this._isRasterizing=false;this._rasterizedResult=null;this._forceRaster=false;this._hadError=false}Release(){if(this._refCount<=0)throw new Error("already released");this._refCount--;if(this._refCount===0)this._Release()}ReleaseRasterizedResult(){if(this._rasterizedResult){this._manager.ReleaseResult(this._rasterizedResult);this._rasterizedResult=null}}_Release(){this.ReleaseRasterizedResult();this._manager._RemoveImage(this);this._manager=null}GetDataSource(){return this._dataSource}IncReference(){this._refCount++}HasReferences(){return this._refCount>
0}GetRasterizedResult(){return this._rasterizedResult}ForceRasterAgain(){this._forceRaster=true}async StartRasterForSize(context,width,height){if(width===0||height===0||this._hadError)return;if(this._isRasterizing)return;let rasterSurfaceWidth=C3.nextHighestPowerOfTwo(Math.ceil(width));let rasterSurfaceHeight=C3.nextHighestPowerOfTwo(Math.ceil(height));const maxDim=Math.max(rasterSurfaceWidth,rasterSurfaceHeight);if(maxDim>MAX_SURFACE_SIZE){const scale=MAX_SURFACE_SIZE/maxDim;width*=scale;height*=
scale;rasterSurfaceWidth=Math.min(Math.ceil(rasterSurfaceWidth*scale),MAX_SURFACE_SIZE);rasterSurfaceHeight=Math.min(Math.ceil(rasterSurfaceHeight*scale),MAX_SURFACE_SIZE)}if(width<rasterSurfaceWidth&&height<rasterSurfaceHeight){const imageAspectRatio=width/height;const surfaceAspectRatio=rasterSurfaceWidth/rasterSurfaceHeight;if(surfaceAspectRatio>imageAspectRatio){width=rasterSurfaceHeight*imageAspectRatio;height=rasterSurfaceHeight}else{width=rasterSurfaceWidth;height=rasterSurfaceWidth/imageAspectRatio}}if(this._manager.IsNpotSurfaceAllowed()){rasterSurfaceWidth=
Math.ceil(width);rasterSurfaceHeight=Math.ceil(height)}if(rasterSurfaceWidth<=this._rasterSurfaceWidth&&rasterSurfaceHeight<=this._rasterSurfaceHeight&&!this._forceRaster)return;this._isRasterizing=true;this._rasterSurfaceWidth=rasterSurfaceWidth;this._rasterSurfaceHeight=rasterSurfaceHeight;const newRasterizedResult=await this._manager.RasterAtSize(this._dataSource,context,this._rasterSurfaceWidth,this._rasterSurfaceHeight,width,height);if(!this._manager)return;this.ReleaseRasterizedResult();this._rasterizedResult=
newRasterizedResult;this._rasterImageWidth=width;this._rasterImageHeight=height;this._isRasterizing=false;this._forceRaster=false;this._manager.Redraw()}WhenBaseSizeReady(){return this._getBaseSizePromise}GetBaseWidth(){return this._baseWidth}GetBaseHeight(){return this._baseHeight}GetRasterWidth(){return this._rasterImageWidth}GetRasterHeight(){return this._rasterImageHeight}HadError(){return this._hadError}};

}

// ../lib/str/str.js
{
'use strict';const C3=self.C3;C3.UTF8_BOM="\ufeff";const NUMERIC_CHARS=new Set([..."0123456789"]);C3.IsNumericChar=function IsNumericChar(c){return NUMERIC_CHARS.has(c)};const WHITESPACE_CHARS=new Set([..." \t\n\r\u00a0\u0085\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u200b\u2028\u2029\u202f\u205f\u3000"]);C3.IsWhitespaceChar=function IsWhitespaceChar(c){return WHITESPACE_CHARS.has(c)};C3.FilterWhitespace=function FilterWhitespace(str){return[...str].filter(ch=>!C3.IsWhitespaceChar(ch)).join("")};
C3.IsStringAllWhitespace=function IsStringAllWhitespace(str){for(const ch of str)if(!C3.IsWhitespaceChar(ch))return false;return true};C3.IsUnprintableChar=function IsUnprintableChar(c){return c.length===1&&c.charCodeAt(0)<32};C3.FilterUnprintableChars=function FilterUnprintableChars(str){return[...str].filter(ch=>!C3.IsUnprintableChar(ch)).join("")};const NUMERIC_STRING_CHARS=new Set([..."0123456789.+-e"]);
C3.IsStringNumber=function IsStringNumber(str){str=str.trim();if(!str.length)return false;let firstChar=str.charAt(0);if(firstChar!=="-"&&!NUMERIC_CHARS.has(firstChar))return false;for(let ch of str)if(!NUMERIC_STRING_CHARS.has(ch))return false;return true};C3.RemoveTrailingDigits=function RemoveTrailingDigits(str){let i=str.length;while(i>0){let prev_ch=str.charAt(i-1);if(!C3.IsNumericChar(prev_ch))break;--i}return str.substr(0,i)};
C3.IncrementNumberAtEndOf=function IncrementNumberAtEndOf(str){let baseStr=C3.RemoveTrailingDigits(str);let numberStr=str.substr(baseStr.length);if(numberStr)numberStr=(parseInt(numberStr,10)+1).toString();else numberStr="2";return baseStr+numberStr};const HTML_ENTITY_MAP=new Map([["&","&amp;"],["<","&lt;"],[">","&gt;"],['"',"&quot;"],["'","&#39;"]]);function lookupHtmlEntity(s){return HTML_ENTITY_MAP.get(s)}const HTML_ENTITY_REGEX=/[&<>"']/g;
C3.EscapeHTML=function EscapeHTML(str){return str.replace(HTML_ENTITY_REGEX,lookupHtmlEntity)};C3.EscapeJS=function EscapeJS(str){let ret=C3.ReplaceAll(str,"\\","\\\\");ret=C3.ReplaceAll(ret,'"','\\"');ret=C3.ReplaceAll(ret,"\t","\\t");ret=C3.ReplaceAll(ret,"\r","");return C3.ReplaceAll(ret,"\n","\\n")};C3.EscapeXML=function EscapeXML(str){let ret=C3.ReplaceAll(str,"&","&amp;");ret=C3.ReplaceAll(ret,"<","&lt;");ret=C3.ReplaceAll(ret,">","&gt;");return C3.ReplaceAll(ret,'"',"&quot;")};
const ESCAPE_REGEX=/[-[\]{}()*+?.,\\^$|#\s]/g;C3.EscapeRegex=function EscapeRegex(str){return str.replace(ESCAPE_REGEX,"\\$&")};C3.FindAll=function FindAll(str,find,matchCase=false){if(!find)return[];if(!matchCase){str=str.toLowerCase();find=find.toLowerCase()}const findLen=find.length;let startIndex=0;let index=0;let ret=[];while((index=str.indexOf(find,startIndex))>-1){ret.push(index);startIndex=index+findLen}return ret};
C3.ReplaceAll=function ReplaceAll(str,find,replace){return str.replaceAll(find,()=>replace)};C3.ReplaceAllCaseInsensitive=function ReplaceAll(str,find,replace){return str.replace(new RegExp(C3.EscapeRegex(find),"gi"),()=>replace)};C3.SetElementContent=function SetElementContent(elem,stringlike){if(typeof stringlike==="string")elem.textContent=stringlike;else if(stringlike.isPlainText())elem.textContent=stringlike.toString();else{elem.innerHTML=stringlike.toHTML();if(stringlike instanceof C3.BBString)stringlike.attachLinkHandlers(elem)}};
C3.StringLikeEquals=function StringLikeEquals(a,b){if(a instanceof C3.HtmlString||a instanceof C3.BBString)return a.equals(b);else if(b instanceof C3.HtmlString||b instanceof C3.BBString)return b.equals(a);else return a===b};C3.StringSubstitute=function StringSubstitute(str,...arr){let ret=str;for(let i=0,len=arr.length;i<len;++i){const sub=`{${i}}`;if(!str.includes(sub))throw new Error(`missing placeholder '${sub}' in string substitution`);ret=ret.replace(sub,arr[i].toString())}return ret};
C3.StringSubstituteAllowMissing=function StringSubstituteAllowMissing(str,...arr){let ret=str;let lowestMissingIndex=-1;let highestUsedIndex=-1;for(let i=0,len=arr.length;i<len;++i){const sub=`{${i}}`;if(str.includes(sub)){highestUsedIndex=i;ret=ret.replace(sub,arr[i].toString())}else if(lowestMissingIndex===-1)lowestMissingIndex=i}if(lowestMissingIndex>=0&&highestUsedIndex>=0&&lowestMissingIndex<highestUsedIndex)throw new Error(`missing placeholder '${lowestMissingIndex}' in string substitution`);
return ret};C3.StringSubstituteMap=function StringSubstituteMap(str,o){let ret=str;for(let [placeholder,substitution]of Object.entries(o))ret=ret.replaceAll(placeholder,substitution.toString());return ret};C3.SortAZCaseInsensitive=function SortAZCaseInsensitive(a,b){let lowerA=a.toLowerCase();let lowerB=b.toLowerCase();if(lowerA>lowerB)return 1;else if(lowerA<lowerB)return-1;else return 0};const KILOBYTE=1024;const MEGABYTE=KILOBYTE*1024;const GIGABYTE=MEGABYTE*1024;const TERABYTE=GIGABYTE*1024;
C3.FormatDataSize=function FormatDataSize(sizeInBytes,asRate){let rootKey="common."+(asRate?"dataRates":"dataSizes")+".";const langSub=self.langSub;if(sizeInBytes<KILOBYTE)return langSub(rootKey+"bytes",sizeInBytes);else if(sizeInBytes<MEGABYTE){let kb=sizeInBytes/KILOBYTE;if(kb<10)kb=Math.round(kb*10)/10;else kb=Math.round(kb);return langSub(rootKey+"kilobytes",kb)}else if(sizeInBytes<GIGABYTE){let mb=sizeInBytes/MEGABYTE;if(mb<10)mb=Math.round(mb*10)/10;else mb=Math.round(mb);return langSub(rootKey+
"megabytes",mb)}else if(sizeInBytes<TERABYTE){let gb=sizeInBytes/GIGABYTE;if(gb<10)gb=Math.round(gb*10)/10;else gb=Math.round(gb);return langSub(rootKey+"gigabytes",gb)}else{let tb=sizeInBytes/TERABYTE;if(tb<10)tb=Math.round(tb*10)/10;else tb=Math.round(tb);return langSub(rootKey+"terabytes",tb)}};const DEFAULT_FORMATTIME_OPTS={approximate:false,days:true,hours:true,minutes:true,seconds:true};
C3.FormatTime=function FormatTime(secondsTotal,opts){opts=Object.assign({},DEFAULT_FORMATTIME_OPTS,opts);C3.Lang.PushContext("common.time");const parts=[];const lang=self.lang;const langPluralSub=self.langPluralSub;if(opts.days){const days=Math.floor(secondsTotal/(24*3600));if(days>0){secondsTotal-=days*24*3600;parts.push(langPluralSub(".days",null,days))}}if(opts.hours){const hours=Math.floor(secondsTotal/3600);if(hours>0||parts.length){secondsTotal-=hours*3600;parts.push(langPluralSub(".hours",
null,hours))}}if(opts.minutes){const minutes=Math.floor(secondsTotal/60);if(minutes>0||parts.length||!opts.seconds){secondsTotal-=minutes*60;parts.push(langPluralSub(".minutes",null,minutes))}}if(opts.seconds){const seconds=Math.floor(secondsTotal%60);parts.push(langPluralSub(".seconds",null,seconds))}const ret=(opts.approximate?lang(".approx-prefix"):"")+parts.join(lang(".separator"));C3.Lang.PopContext();return ret};
C3.ZeroPad=function(n,d){let s=n<0?"-":"";n=Math.abs(n);let nStr=n.toString();let zeroes=d-nStr.length;for(let i=0;i<zeroes;++i)s+="0";return s+nStr};C3.StringToTitleCase=function StringToTitleCase(str){return str.toLowerCase().replace(/\b\w/g,t=>t.toUpperCase())};
C3.CompareVersionStrings=function CompareVersionStrings(v1,v2){let a1=v1.split(".").map(s=>s.trim());let a2=v2.split(".").map(s=>s.trim());C3.resizeArray(a1,4,"0");C3.resizeArray(a2,4,"0");a1=a1.map(s=>parseInt(s,10));a2=a2.map(s=>parseInt(s,10));for(let i=0;i<4;++i){const diff=a1[i]-a2[i];if(diff!==0)return diff<0?-1:1}return 0};C3.CreateGUID=function CreateGUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,c=>{const r=Math.floor(Math.random()*16);const v=c==="x"?r:r&3|8;return v.toString(16)})};
C3.StringHammingDistance=function StringHammingDistance(a,b){if(a.length!==b.length)throw new Error("strings must be same length");let ret=0;for(let i=0,len=a.length;i<len;++i)if(a.charAt(i)!==b.charAt(i))++ret;return ret};
C3.StringLevenshteinDistance=function StringLevenshteinDistance(a,b){if(a.length===0)return b.length;if(b.length===0)return a.length;let tmp,i,j,prev,val,row;if(a.length>b.length){tmp=a;a=b;b=tmp}row=Array(a.length+1);for(i=0;i<=a.length;i++)row[i]=i;for(i=1;i<=b.length;i++){prev=i;for(j=1;j<=a.length;j++){if(b[i-1]===a[j-1])val=row[j-1];else val=Math.min(row[j-1]+1,Math.min(prev+1,row[j]+1));row[j-1]=prev;prev=val}row[a.length]=prev}return row[a.length]};

}

// ../lib/str/bbstring.js
{
'use strict';const C3=self.C3;const assert=self.assert;
const BB_CODE_MAP=new Map([["b","strong"],["i","em"],["s","s"],["u","u"],["sub","sub"],["sup","sup"],["small","small"],["mark","mark"],["a1","a"],["a2","a"],["a3","a"],["a4","a"],["a5","a"],["a6","a"],["a7","a"],["a8","a"],["a9","a"],["bad",["span","bbCodeBad"]],["good",["span","bbCodeGood"]],["info",["span","bbCodeInfo"]],["h1",["span","bbCodeH1"]],["h2",["span","bbCodeH2"]],["h3",["span","bbCodeH3"]],["h4",["span","bbCodeH4"]],["item",["span","bbCodeItem"]]]);const BBREGEX=/\[(\/?)([a-zA-Z0-9]+)\]/g;
const CUSTOM_BBREGEX=/\[(\/?)([^\[]*?)\]/g;let linkActions=null;let classIndex=0;
function bbToHtmlReplacerFunc(match,closeSlash,tagName){const entry=BB_CODE_MAP.get(tagName);if(entry)if(typeof entry==="string")if(entry==="a"&&!closeSlash){const index=parseInt(tagName.substring(1),10)-1;if(index<0||index>=linkActions.length)throw new Error("invalid bbcode link substitution");const linkAction=linkActions[index];if(typeof linkAction==="string")return`<a href="${linkActions[index]}">`;else if(typeof linkAction==="function")return`<a class="bblink${index}">`;else throw new TypeError("invalid bbcode link action");
}else return"<"+closeSlash+entry+">";else if(Array.isArray(entry)){let tag=entry[0];let className=entry[1];if(closeSlash)return"</"+tag+">";else return`<${tag} class="${className}">`}else;else if(tagName==="class")if(closeSlash)return"</span>";else return`<span class="bbclass${classIndex++}">`;else return match}const LINEBREAK_REGEX=/\n/g;
C3.BBString=class BBString{constructor(str,opts){this._bbstr=opts&&opts.noEscape?str:C3.EscapeHTML(str);this._htmlstr="";this._convertLineBreaks=false;this._linkActions=[];if(opts){this._convertLineBreaks=!!opts.convertLineBreaks;if(opts.links){if(opts.links.length>9)throw new Error("too many links");this._linkActions=opts.links}}this._hasAnyBBtags=this._bbstr.includes("[");this._needsLineBreakConversion=this._convertLineBreaks&&this._bbstr.includes("\n");this._isPlain=!this._hasAnyBBtags&&!this._needsLineBreakConversion&&
!this._bbstr.includes("&");this._hasParsedFragments=false;this._fragments=[]}toString(){return this._bbstr}valueOf(){return this._bbstr}isPlainText(){return this._isPlain}toPlainText(){if(this._hasAnyBBtags)return this._bbstr.replace(BBREGEX,"");else return this._bbstr}toHTML(){if(this._isPlain)return this._bbstr;if(!this._htmlstr&&this._bbstr){let str=this._bbstr;if(this._hasAnyBBtags){classIndex=0;linkActions=this._linkActions;str=str.replace(BBREGEX,bbToHtmlReplacerFunc);linkActions=null}if(this._needsLineBreakConversion)str=
str.replace(LINEBREAK_REGEX,"<br>");this._htmlstr=str}return this._htmlstr}attachLinkHandlers(parentElem){if(!this._linkActions.length)return;for(let i=0,len=this._linkActions.length;i<len;++i){const linkAction=this._linkActions[i];if(typeof linkAction!=="function")continue;const linkElem=parentElem.querySelector(".bblink"+i);if(!linkElem)throw new Error("unable to attach BBString link handler");linkElem.onclick=linkAction}}equals(s){if(s instanceof C3.HtmlString)return this.toHTML()===s.toHTML();
else if(s instanceof C3.BBString)return this._bbstr===s._bbstr;else return this._bbstr===s}toFragmentList(){if(this._hasParsedFragments)return this._fragments;const bbStr=this._bbstr;const styleStack=[];CUSTOM_BBREGEX.lastIndex=0;let prevIndex=0;let result=null;while((result=CUSTOM_BBREGEX.exec(bbStr))!==null){const index=result.index;if(index>0&&bbStr.charAt(index-1)==="\\")continue;const matchStr=result[0];const closeSlash=result[1];const tagName=result[2];const strFrag=bbStr.substring(prevIndex,
index);prevIndex=index+matchStr.length;if(strFrag)this._fragments.push({text:strFrag,styles:styleStack.slice(0)});if(!tagName)continue;if(closeSlash){const lowerTagName=tagName.toLowerCase();for(let i=styleStack.length-1;i>=0;--i)if(styleStack[i].tag===lowerTagName){styleStack.splice(i,1);break}}else{let tag=tagName;let param=null;const eq=tagName.indexOf("=");if(eq!==-1){tag=tagName.substring(0,eq).toLowerCase();param=tagName.substring(eq+1)}else tag=tag.toLowerCase();styleStack.push({tag,param})}}if(prevIndex<
bbStr.length)this._fragments.push({text:bbStr.substring(prevIndex),styles:styleStack.slice(0)});for(const frag of this._fragments)frag.text=this._ProcessBBCodeEscapeSequences(frag.text);this._hasParsedFragments=true;return this._fragments}_ProcessBBCodeEscapeSequences(text){text=C3.ReplaceAll(text,"\\[","[");return C3.ReplaceAll(text,"\\\\","\\")}static StripTags(str){return C3.New(C3.BBString,str,{noEscape:true}).toPlainText()}static StripAnyTags(str){return str.replace(CUSTOM_BBREGEX,"")}};

}

// ../lib/str/wordWrap.js
{
'use strict';const C3=self.C3;
C3.WordWrap=class WordWrap{constructor(){this._lines=[]}GetLines(){return this._lines}GetLineCount(){return this._lines.length}_MeasureLine(line,measureFunc){let width=0;let height=0;let fbbAscent=0;let fbbDescent=0;let topToAlphabeticDistance=0;for(const frag of line){if(frag.width===-1){const m=measureFunc(frag.text,frag.styles);frag.width=m.width;frag.height=m.height;frag.fontBoundingBoxAscent=m.fontBoundingBoxAscent||0;frag.fontBoundingBoxDescent=m.fontBoundingBoxDescent||0;frag.topToAlphabeticDistance=
m.topToAlphabeticDistance||0}width+=frag.width;height=Math.max(height,frag.height);fbbAscent=Math.max(fbbAscent,frag.fontBoundingBoxAscent);fbbDescent=Math.max(fbbDescent,frag.fontBoundingBoxDescent);topToAlphabeticDistance=Math.max(topToAlphabeticDistance,frag.topToAlphabeticDistance)}return{width,height,fontBoundingBoxAscent:fbbAscent,fontBoundingBoxDescent:fbbDescent,topToAlphabeticDistance}}_AddLine(fragments,width,height,fbbAscent,fbbDescent,topToAlphabeticDistance){this._lines.push({fragments,
width,height,fontBoundingBoxAscent:fbbAscent,fontBoundingBoxDescent:fbbDescent,topToAlphabeticDistance})}WordWrap(fragmentArr,measureFunc,wrapWidth,wrapMode,endOfLineMargin){if(typeof fragmentArr==="string")fragmentArr=[{text:fragmentArr,styles:[]}];C3.clearArray(this._lines);if(!fragmentArr.length||fragmentArr.length===1&&!fragmentArr[0].text.length||wrapWidth<2)return;if(fragmentArr.length===1){const frag=fragmentArr[0];const text=frag.text;const styles=frag.styles;if(text.length<=100&&!text.includes("\n")){let {width,
height,fontBoundingBoxAscent,fontBoundingBoxDescent,topToAlphabeticDistance}=measureFunc(text,styles);width+=endOfLineMargin;fontBoundingBoxAscent=fontBoundingBoxAscent||0;fontBoundingBoxDescent=fontBoundingBoxDescent||0;topToAlphabeticDistance=topToAlphabeticDistance||0;if(width<=wrapWidth){this._AddLine([{text,styles,width,height,fontBoundingBoxAscent,fontBoundingBoxDescent,topToAlphabeticDistance}],width,height,fontBoundingBoxAscent,fontBoundingBoxDescent,topToAlphabeticDistance);return}}}let tokenisedFragments;
if(wrapMode==="word")tokenisedFragments=this._TokeniseWords(fragmentArr);else{tokenisedFragments=[];for(const frag of fragmentArr)C3.appendArray(tokenisedFragments,[...frag.text].map(ch=>[{text:ch,styles:frag.styles}]))}this._WrapText(tokenisedFragments,measureFunc,wrapWidth,endOfLineMargin)}_TokeniseWords(fragmentArr){const ret=[];let curWord=[];let isCurWhitespace=false;for(const frag of fragmentArr){const text=frag.text;const styles=frag.styles;for(const ch of text)if(ch==="\n"){if(curWord.length>
0)ret.push(curWord);ret.push([{text:"\n",styles}]);curWord=[]}else if(curWord.length===0){curWord.push({text:ch,styles});isCurWhitespace=C3.IsWhitespaceChar(ch)}else{const isWhitespace=C3.IsWhitespaceChar(ch);if(isWhitespace===isCurWhitespace){const curFrag=curWord.at(-1);if(curFrag.styles===styles)curFrag.text+=ch;else curWord.push({text:ch,styles})}else{ret.push(curWord);curWord=[];curWord.push({text:ch,styles});isCurWhitespace=isWhitespace}}}if(curWord.length>0)ret.push(curWord);return ret}_CopyLine(line){return line.map(f=>
({text:f.text,styles:f.styles,width:f.width,height:f.height,fontBoundingBoxAscent:f.fontBoundingBoxAscent,fontBoundingBoxDescent:f.fontBoundingBoxDescent,topToAlphabeticDistance:f.topToAlphabeticDistance}))}_AddWordToLine(currentLine,curWord){const lastFrag=currentLine.length?currentLine.at(-1):null;let i=0;if(lastFrag&&curWord[0].styles===lastFrag.styles){lastFrag.text+=curWord[0].text;lastFrag.width=-1;lastFrag.height=-1;lastFrag.fontBoundingBoxAscent=-1;lastFrag.fontBoundingBoxDescent=-1;lastFrag.topToAlphabeticDistance=
-1;i=1}for(let len=curWord.length;i<len;++i){const f=curWord[i];currentLine.push({text:f.text,styles:f.styles,width:-1,height:-1,fontBoundingBoxAscent:-1,fontBoundingBoxDescent:-1,topToAlphabeticDistance:-1})}}_WrapText(tokenisedFragments,measureFunc,wrapWidth,endOfLineMargin){let currentLine=[];let currentLineWidth=0;let currentLineHeight=0;let currentLineFbbAscent=0;let currentLineFbbDescent=0;let currentLineTopToAlphabetic=0;for(const curWord of tokenisedFragments){if(curWord.length===1&&curWord[0].text===
"\n"){if(currentLineHeight===0){const m=measureFunc(" ",curWord[0].styles);currentLineHeight=m.height;currentLineFbbAscent=m.fontBoundingBoxAscent||0;currentLineFbbDescent=m.fontBoundingBoxDescent||0;currentLineTopToAlphabetic=m.topToAlphabeticDistance||0}this._AddLine(currentLine,currentLineWidth,currentLineHeight,currentLineFbbAscent,currentLineFbbDescent,currentLineTopToAlphabetic);currentLine=[];currentLineWidth=0;currentLineHeight=0;currentLineFbbAscent=0;currentLineFbbDescent=0;currentLineTopToAlphabetic=
0;continue}const tryLine=this._CopyLine(currentLine);this._AddWordToLine(tryLine,curWord);const tryMetrics=this._MeasureLine(tryLine,measureFunc);const tryLineWidth=tryMetrics.width;if(tryLineWidth>=wrapWidth){if(currentLine.length>0)this._AddLine(currentLine,currentLineWidth,currentLineHeight,currentLineFbbAscent,currentLineFbbDescent,currentLineTopToAlphabetic);currentLine=[];if(C3.IsStringAllWhitespace(curWord[0].text)){currentLineWidth=0;currentLineHeight=0;currentLineFbbAscent=0;currentLineFbbDescent=
0;currentLineTopToAlphabetic=0}else{this._AddWordToLine(currentLine,curWord);const metrics=this._MeasureLine(currentLine,measureFunc);currentLineWidth=metrics.width;currentLineHeight=metrics.height;currentLineFbbAscent=metrics.fontBoundingBoxAscent;currentLineFbbDescent=metrics.fontBoundingBoxDescent;currentLineTopToAlphabetic=metrics.topToAlphabeticDistance}}else{currentLine=tryLine;currentLineWidth=tryLineWidth;currentLineHeight=tryMetrics.height;currentLineFbbAscent=tryMetrics.fontBoundingBoxAscent;
currentLineFbbDescent=tryMetrics.fontBoundingBoxDescent;currentLineTopToAlphabetic=tryMetrics.topToAlphabeticDistance}}if(currentLine.length>0)this._AddLine(currentLine,currentLineWidth,currentLineHeight,currentLineFbbAscent,currentLineFbbDescent,currentLineTopToAlphabetic);this._TrimLinesTrailingWhitespace(measureFunc,endOfLineMargin)}_TrimLinesTrailingWhitespace(measureFunc,endOfLineMargin){for(const line of this._lines){const fragments=line.fragments;if(!fragments.length)continue;let lastFrag=
fragments.at(-1);const text=lastFrag.text;const trimmedText=text.trimEnd();if(!trimmedText){line.width-=lastFrag.width;fragments.pop()}else if(trimmedText.length<text.length){const trimmedWidth=measureFunc(trimmedText,lastFrag.styles).width;const diff=lastFrag.width-trimmedWidth;lastFrag.width=trimmedWidth;lastFrag.text=trimmedText;line.width-=diff}if(endOfLineMargin!==0&&fragments.length>0){lastFrag=fragments.at(-1);lastFrag.width+=endOfLineMargin;line.width+=endOfLineMargin}}}Clear(){C3.clearArray(this._lines)}GetMaxLineWidth(){return this._lines.reduce((a,
v)=>Math.max(a,v.width),0)}GetTotalLineHeight(){return this._lines.reduce((a,v)=>a+v.height,0)}};

}

// ../lib/gfx/gfx.js
{
'use strict';const C3=self.C3;const glMatrix=self.glMatrix;const vec3=glMatrix.vec3;const vec4=glMatrix.vec4;const mat4=glMatrix.mat4;const tempVec3a=vec3.create();const tempVec3b=vec3.create();const tempVec3c=vec3.create();const tempVec4=vec4.create();const tempMat4=mat4.create();const neartl=vec3.create();const neartr=vec3.create();const nearbl=vec3.create();const nearbr=vec3.create();const fartl=vec3.create();const fartr=vec3.create();const farbl=vec3.create();const farbr=vec3.create();
const unitViewport=vec4.fromValues(0,0,1,1);
C3.Gfx={Project(objx,objy,objz,mv,proj,viewport,windowCoordinate){const fTemp0=mv[0]*objx+mv[4]*objy+mv[8]*objz+mv[12];const fTemp1=mv[1]*objx+mv[5]*objy+mv[9]*objz+mv[13];const fTemp2=mv[2]*objx+mv[6]*objy+mv[10]*objz+mv[14];const fTemp3=mv[3]*objx+mv[7]*objy+mv[11]*objz+mv[15];let fTemp4=proj[0]*fTemp0+proj[4]*fTemp1+proj[8]*fTemp2+proj[12]*fTemp3;let fTemp5=proj[1]*fTemp0+proj[5]*fTemp1+proj[9]*fTemp2+proj[13]*fTemp3;let fTemp6=proj[2]*fTemp0+proj[6]*fTemp1+proj[10]*fTemp2+proj[14]*fTemp3;let fTemp7=
proj[3]*fTemp0+proj[7]*fTemp1+proj[11]*fTemp2+proj[15]*fTemp3;if(fTemp7===0)return false;fTemp7=1/fTemp7;fTemp4*=fTemp7;fTemp5*=fTemp7;fTemp6*=fTemp7;windowCoordinate[0]=(fTemp4*.5+.5)*viewport[2]+viewport[0];windowCoordinate[1]=(fTemp5*.5+.5)*viewport[3]+viewport[1];windowCoordinate[2]=(1+fTemp6)*.5;return true},Unproject(winx,winy,winz,mv,proj,viewport,objectCoordinate){const A=tempMat4;const vec=tempVec4;mat4.multiply(A,proj,mv);if(mat4.invert(A,A)===null)return false;vec[0]=(winx-viewport[0])/
viewport[2]*2-1;vec[1]=(winy-viewport[1])/viewport[3]*2-1;vec[2]=2*winz-1;vec[3]=1;vec4.transformMat4(vec,vec,A);if(vec[3]===0)return false;vec[3]=1/vec[3];objectCoordinate[0]=vec[0]*vec[3];objectCoordinate[1]=vec[1]*vec[3];objectCoordinate[2]=vec[2]*vec[3];return true},UnprojectScreenToWorldZ(winx,winy,worldZ,mv,proj,viewport,objectCoordinate){const nearPt=tempVec3a;const farPt=tempVec3b;if(!C3.Gfx.Unproject(winx,winy,0,mv,proj,viewport,nearPt))return false;if(!C3.Gfx.Unproject(winx,winy,1,mv,proj,
viewport,farPt))return false;const dirVec=tempVec3b;vec3.subtract(dirVec,farPt,nearPt);const planeNormal=tempVec3c;vec3.set(planeNormal,0,0,1);const planeConstant=-worldZ;const denominator=vec3.dot(planeNormal,dirVec);let distance=0;if(denominator===0){const planeDistToPt=vec3.dot(planeNormal,nearPt)+planeConstant;if(planeDistToPt!==0)return false}else{distance=-(vec3.dot(nearPt,planeNormal)+planeConstant)/denominator;if(distance<0)return false}vec3.scaleAndAdd(objectCoordinate,nearPt,dirVec,distance);
return true}};function PlaneFromPoints(ptA,ptB,ptC,plane){const normal=tempVec3c;vec3.subtract(tempVec3a,ptC,ptB);vec3.subtract(tempVec3b,ptA,ptB);vec3.cross(normal,tempVec3a,tempVec3b);vec3.normalize(normal,normal);plane.set(normal[0],normal[1],normal[2],vec3.dot(ptA,normal))}
function IsInFrontOfPlane(minX,minY,minZ,maxX,maxY,maxZ,plane){const nx=plane.x;const ny=plane.y;const nz=plane.z;const d=plane.w;const nxT=plane.xF;const nyT=plane.yF;const nzT=plane.zF;const nxF=1-nxT;const nyF=1-nyT;const nzF=1-nzT;const minD=nx*minX*nxT+nx*maxX*nxF+ny*minY*nyT+ny*maxY*nyF+nz*minZ*nzT+nz*maxZ*nzF;if(minD>=d)return true;const maxD=nx*maxX*nxT+nx*minX*nxF+ny*maxY*nyT+ny*minY*nyF+nz*maxZ*nzT+nz*minZ*nzF;return maxD>d}
class Plane{constructor(){this.x=NaN;this.y=NaN;this.z=NaN;this.w=NaN;this.xF=NaN;this.yF=NaN;this.zF=NaN}set(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;this.xF=x>0?1:0;this.yF=y>0?1:0;this.zF=z>0?1:0}}
C3.Gfx.ViewFrustum=class ViewFrustum{constructor(){this._leftP=new Plane;this._topP=new Plane;this._rightP=new Plane;this._bottomP=new Plane;this._nearP=new Plane;this._farP=new Plane}CalculatePlanes(mv,proj){const vp=unitViewport;C3.Gfx.Unproject(0,1,0,mv,proj,vp,neartl);C3.Gfx.Unproject(1,1,0,mv,proj,vp,neartr);C3.Gfx.Unproject(0,0,0,mv,proj,vp,nearbl);C3.Gfx.Unproject(1,0,0,mv,proj,vp,nearbr);C3.Gfx.Unproject(0,1,1,mv,proj,vp,fartl);C3.Gfx.Unproject(1,1,1,mv,proj,vp,fartr);C3.Gfx.Unproject(0,0,
1,mv,proj,vp,farbl);C3.Gfx.Unproject(1,0,1,mv,proj,vp,farbr);PlaneFromPoints(nearbl,neartl,fartl,this._leftP);PlaneFromPoints(neartl,neartr,fartr,this._topP);PlaneFromPoints(neartr,nearbr,farbr,this._rightP);PlaneFromPoints(nearbr,nearbl,farbl,this._bottomP);PlaneFromPoints(farbl,fartl,fartr,this._farP);PlaneFromPoints(nearbr,neartr,neartl,this._nearP)}ContainsAABB(minX,minY,minZ,maxX,maxY,maxZ){return IsInFrontOfPlane(minX,minY,minZ,maxX,maxY,maxZ,this._leftP)&&IsInFrontOfPlane(minX,minY,minZ,maxX,
maxY,maxZ,this._topP)&&IsInFrontOfPlane(minX,minY,minZ,maxX,maxY,maxZ,this._rightP)&&IsInFrontOfPlane(minX,minY,minZ,maxX,maxY,maxZ,this._bottomP)&&IsInFrontOfPlane(minX,minY,minZ,maxX,maxY,maxZ,this._nearP)&&IsInFrontOfPlane(minX,minY,minZ,maxX,maxY,maxZ,this._farP)}};

}

// ../lib/gfx/rendererBase.js
{
'use strict';const C3=self.C3;const glMatrix=self.glMatrix;const vec3=glMatrix.vec3;const vec4=glMatrix.vec4;const mat4=glMatrix.mat4;const tempMat4=mat4.create();const tmpVec3a=vec3.fromValues(0,0,0);const tmpVec3b=vec3.fromValues(0,0,0);const tmpVec3c=vec3.fromValues(0,0,0);const defaultUpVector=vec3.fromValues(0,1,0);const tmpVec4=vec4.fromValues(0,0,0,0);const tmpQuad=new C3.Quad;const tmpRect=new C3.Rect;const defaultTexCoordsQuad=new C3.Quad(0,0,1,0,1,1,0,1);
C3.Gfx.RendererBase=class RendererBase{constructor(){this._width=0;this._height=0;this._fovY=C3.toRadians(45);this._tan_fovY_2=Math.tan(this._fovY/2);this._matP=mat4.create();this._matMV=mat4.create();this._allShaderPrograms=[];this._shaderProgramsByName=new Map;this._spTextureFill=null;this._spPoints=null;this._spTilemapFill=null;this._spColorFill=null;this._spLinearGradientFill=null;this._spHardEllipseFill=null;this._spHardEllipseOutline=null;this._spSmoothEllipseFill=null;this._spSmoothEllipseOutline=
null;this._spSmoothLineFill=null;this._stateGroups=new Map;this._currentStateGroup=null;this._blendModeTable=[];this._namedBlendModeMap=new Map;this._baseZ=0;this._currentZ=0;this._lineWidth=1;this._lineWidthStack=[this._lineWidth];this._lineCap=1;this._lineCapStack=[this._lineCap];this._lineOffset=.5;this._lineOffsetStack=[this._lineOffset];this._frameNumber=0;this._enableMipmaps=true;this._hasMajorPerformanceCaveat=false}FillIndexBufferData(indexData){let i=0,len=indexData.length,fv=0;while(i<len){indexData[i++]=
fv;indexData[i++]=fv+1;indexData[i++]=fv+2;indexData[i++]=fv;indexData[i++]=fv+2;indexData[i++]=fv+3;fv+=4}}_ClearState(){this._baseZ=0;this._currentZ=0;this._spTextureFill=null;this._spPoints=null;this._spTilemapFill=null;this._spColorFill=null;this._spLinearGradientFill=null;this._spHardEllipseFill=null;this._spHardEllipseOutline=null;this._spSmoothEllipseFill=null;this._spSmoothEllipseOutline=null;this._spSmoothLineFill=null;this._ClearAllShaderPrograms()}InitState(){this._ClearState();this._currentStateGroup=
null}OnDeviceOrContextLost(){for(const s of this._allShaderPrograms)s.Release();this._ClearState()}GetWidth(){return this._width}GetHeight(){return this._height}GetDefaultCameraZ(){return 100}GetNearZ(){return 1}GetFarZ(){return 1E4}GetFovY(){return this._fovY}_GetTanFovYDiv2(){return this._tan_fovY_2}CalculatePerspectiveMatrix(outMat,aspect,vpX=.5,vpY=.5){const zNear=this.GetNearZ();const zFar=this.GetFarZ();vpX=1-vpX;const fLeft=vpX*2-2;const fRight=vpX*2;const fBottom=vpY*2-2;const fTop=vpY*2;
const fH=this._GetTanFovYDiv2()*zNear;const fW=fH*aspect;mat4.frustum(outMat,fLeft*fW,fRight*fW,fBottom*fH,fTop*fH,zNear,zFar)}CalculateOrthographicMatrix(outMat,width,height,scale=1){const dpr=self.devicePixelRatio;const worldScale=this.GetDefaultCameraZ()*2*dpr*this._GetTanFovYDiv2()/height;const hScaleX=width*worldScale/(2*dpr*scale);const hScaleY=height*worldScale/(2*dpr*scale);const left=-hScaleX;const right=hScaleX;const bottom=-hScaleY;const top=hScaleY;mat4.ortho(outMat,left,right,bottom,
top,this.GetNearZ(),this.GetFarZ())}CalculateLookAtModelView(outMat,cam,look,up,viewH=this.GetScissoredViewportHeight()){const worldScale=this.GetDefaultCameraZ()*2*self.devicePixelRatio*this._GetTanFovYDiv2()/viewH;const worldScaleVec3=tmpVec3c;vec3.set(worldScaleVec3,worldScale,-worldScale,1);const tmpCam=tmpVec3a;const tmpLook=tmpVec3b;vec3.multiply(tmpCam,cam,worldScaleVec3);vec3.multiply(tmpLook,look,worldScaleVec3);mat4.lookAt(outMat,tmpCam,tmpLook,up||defaultUpVector);mat4.scale(outMat,outMat,
worldScaleVec3)}CalculateLookAtModelView2(camX,camY,camZ,lookX,lookY,lookZ,viewH){vec3.set(tmpVec3a,camX,camY,camZ);vec3.set(tmpVec3b,lookX,lookY,lookZ);this.CalculateLookAtModelView(tempMat4,tmpVec3a,tmpVec3b,defaultUpVector,viewH);return tempMat4}_AddShaderProgram(sp){this._allShaderPrograms.push(sp);this._shaderProgramsByName.set(sp.GetName(),sp)}_RemoveShaderProgram(sp){const i=this._allShaderPrograms.indexOf(sp);if(i!==-1)this._allShaderPrograms.splice(i,1);this._shaderProgramsByName.delete(sp.GetName())}_ClearAllShaderPrograms(){C3.clearArray(this._allShaderPrograms);
this._shaderProgramsByName.clear()}GetShaderProgramByName(name){return this._shaderProgramsByName.get(name)||null}GetTextureFillShaderProgram(){return this._spTextureFill}SetTextureFillMode(){this.SetProgram(this._spTextureFill)}GetPointsRenderingProgram(){return this._spPoints}SetPointsRenderingProgram(){this.SetProgram(this._spPoints)}SetTilemapFillMode(){this.SetProgram(this._spTilemapFill)}SetColorFillMode(){this.SetProgram(this._spColorFill)}SetLinearGradientFillMode(){this.SetProgram(this._spLinearGradientFill)}SetHardEllipseFillMode(){this.SetProgram(this._spHardEllipseFill)}SetHardEllipseOutlineMode(){this.SetProgram(this._spHardEllipseOutline)}SetSmoothEllipseFillMode(){this.SetProgram(this._spSmoothEllipseFill)}SetSmoothEllipseOutlineMode(){this.SetProgram(this._spSmoothEllipseOutline)}SetSmoothLineFillMode(){this.SetProgram(this._spSmoothLineFill)}_SetCurrentStateGroup(sg){this._currentStateGroup=
sg}GetCurrentStateGroup(){return this._currentStateGroup}AcquireStateGroup(shaderProgram_or_name,blendMode,color,zElevation){const key=C3.Gfx.StateGroup.MakeKey(shaderProgram_or_name,blendMode,color,zElevation);let stateGroup=this._stateGroups.get(key);if(!stateGroup){stateGroup=C3.New(C3.Gfx.StateGroup,this,shaderProgram_or_name,blendMode,color,zElevation);this._stateGroups.set(key,stateGroup)}stateGroup.AddRef();return stateGroup}ReleaseStateGroup(stateGroup){stateGroup.DecRef();if(stateGroup._GetRefCount()===
0){if(this._currentStateGroup===stateGroup)this._currentStateGroup=null;this._stateGroups.delete(stateGroup.GetKey());stateGroup.Release()}}_InitBlendModeData(blendModeData){C3.clearArray(this._blendModeTable);this._namedBlendModeMap.clear();for(const bmd of blendModeData){const name=bmd[0];const srcBlend=bmd[1];const destBlend=bmd[2];this._blendModeTable.push([srcBlend,destBlend]);this._namedBlendModeMap.set(name,{srcBlend,destBlend})}}_GetBlendByIndex(blendIndex){return this._blendModeTable[blendIndex]}GetSrcBlendByIndex(blendIndex){return this._GetBlendByIndex(blendIndex)[0]}GetDestBlendByIndex(blendIndex){return this._GetBlendByIndex(blendIndex)[1]}GetNamedBlend(blendName){const ret=
this._namedBlendModeMap.get(blendName);if(typeof ret==="undefined")throw new Error("invalid blend name");return ret}SetBaseZ(z){this._baseZ=z}GetBaseZ(){return this._baseZ}SetCurrentZ(z){this._currentZ=z;this._currentStateGroup=null}GetCurrentZ(){return this._currentZ}Line(x1,y1,x2,y2){const a=C3.angleTo(x1,y1,x2,y2);const sin_a=Math.sin(a);const cos_a=Math.cos(a);const halfLineWidth=this._lineWidth*.5;const sin_a_hlw=sin_a*halfLineWidth;const cos_a_hlw=cos_a*halfLineWidth;const lineCap=this._lineCap;
if(lineCap===2)this.LinePreCalc_LineCap2(x1,y1,0,x2,y2,0,sin_a_hlw,cos_a_hlw);else if(lineCap===1)this.LinePreCalc_LineCap1(x1,y1,0,x2,y2,0,sin_a_hlw,cos_a_hlw);else this.LinePreCalc_LineCap0(x1,y1,0,x2,y2,0,sin_a_hlw,cos_a_hlw)}Line3D(x1,y1,z1,x2,y2,z2){const a=C3.angleTo(x1,y1,x2,y2);const sin_a=Math.sin(a);const cos_a=Math.cos(a);const halfLineWidth=this._lineWidth*.5;const sin_a_hlw=sin_a*halfLineWidth;const cos_a_hlw=cos_a*halfLineWidth;const lineCap=this._lineCap;if(lineCap===2)this.LinePreCalc_LineCap2(x1,
y1,z1,x2,y2,z2,sin_a_hlw,cos_a_hlw);else if(lineCap===1)this.LinePreCalc_LineCap1(x1,y1,z1,x2,y2,z2,sin_a_hlw,cos_a_hlw);else this.LinePreCalc_LineCap0(x1,y1,z1,x2,y2,z2,sin_a_hlw,cos_a_hlw)}LinePreCalc_LineCap2(x1,y1,z1,x2,y2,z2,sin_a_hlw,cos_a_hlw){const lineOffset=this._lineOffset;const startX=x1+lineOffset-cos_a_hlw;const startY=y1+lineOffset-sin_a_hlw;const endX=x2+lineOffset+cos_a_hlw;const endY=y2+lineOffset+sin_a_hlw;const cos_a_lw=cos_a_hlw*2;const sin_a_lw=sin_a_hlw*2;const tlx=startX+sin_a_hlw;
const tly=startY-cos_a_hlw;const blx=startX-sin_a_hlw+cos_a_lw;const bly=startY+cos_a_hlw+sin_a_lw;const trx=endX+sin_a_hlw;const try_=endY-cos_a_hlw;const brx=endX-sin_a_hlw-cos_a_lw;const bry=endY+cos_a_hlw-sin_a_lw;this.Quad3D2(tlx,tly,z1,trx,try_,z2,brx,bry,z2,blx,bly,z1,defaultTexCoordsQuad)}LinePreCalc_LineCap1(x1,y1,z1,x2,y2,z2,sin_a_hlw,cos_a_hlw){const lineOffset=this._lineOffset;const startX=x1+lineOffset-cos_a_hlw;const startY=y1+lineOffset-sin_a_hlw;const endX=x2+lineOffset+cos_a_hlw;
const endY=y2+lineOffset+sin_a_hlw;const tlx=startX+sin_a_hlw;const tly=startY-cos_a_hlw;const blx=startX-sin_a_hlw;const bly=startY+cos_a_hlw;const trx=endX+sin_a_hlw;const try_=endY-cos_a_hlw;const brx=endX-sin_a_hlw;const bry=endY+cos_a_hlw;this.Quad3D2(tlx,tly,z1,trx,try_,z2,brx,bry,z2,blx,bly,z1,defaultTexCoordsQuad)}LinePreCalc_LineCap0(x1,y1,z1,x2,y2,z2,sin_a_hlw,cos_a_hlw){const lineOffset=this._lineOffset;const startX=x1+lineOffset;const startY=y1+lineOffset;const endX=x2+lineOffset;const endY=
y2+lineOffset;const tlx=startX+sin_a_hlw;const tly=startY-cos_a_hlw;const blx=startX-sin_a_hlw;const bly=startY+cos_a_hlw;const trx=endX+sin_a_hlw;const try_=endY-cos_a_hlw;const brx=endX-sin_a_hlw;const bry=endY+cos_a_hlw;this.Quad3D2(tlx,tly,z1,trx,try_,z2,brx,bry,z2,blx,bly,z1,defaultTexCoordsQuad)}TexturedLine(x1,y1,x2,y2,u,v){const a=C3.angleTo(x1,y1,x2,y2);const sin_a=Math.sin(a);const cos_a=Math.cos(a);const halfLineWidth=this._lineWidth*.5;const sin_a_hlw=sin_a*halfLineWidth;const cos_a_hlw=
cos_a*halfLineWidth;const lineCap=this._lineCap;if(lineCap===2)this.TexturedLinePreCalc_LineCap2(x1,y1,x2,y2,sin_a_hlw,cos_a_hlw,u,v);else if(lineCap===1)this.TexturedLinePreCalc_LineCap1(x1,y1,x2,y2,sin_a_hlw,cos_a_hlw,u,v);else this.TexturedLinePreCalc_LineCap0(x1,y1,x2,y2,sin_a_hlw,cos_a_hlw,u,v)}TexturedLinePreCalc_LineCap2(x1,y1,x2,y2,sin_a_hlw,cos_a_hlw,u,v){const lineOffset=this._lineOffset;const startX=x1+lineOffset-cos_a_hlw;const startY=y1+lineOffset-sin_a_hlw;const endX=x2+lineOffset+cos_a_hlw;
const endY=y2+lineOffset+sin_a_hlw;const cos_a_lw=cos_a_hlw*2;const sin_a_lw=sin_a_hlw*2;const tlx=startX+sin_a_hlw;const tly=startY-cos_a_hlw;const blx=startX-sin_a_hlw+cos_a_lw;const bly=startY+cos_a_hlw+sin_a_lw;const trx=endX+sin_a_hlw;const try_=endY-cos_a_hlw;const brx=endX-sin_a_hlw-cos_a_lw;const bry=endY+cos_a_hlw-sin_a_lw;tmpQuad.set(tlx,tly,trx,try_,brx,bry,blx,bly);tmpRect.set(u,0,v,0);this.Quad3(tmpQuad,tmpRect)}TexturedLinePreCalc_LineCap1(x1,y1,x2,y2,sin_a_hlw,cos_a_hlw,u,v){const lineOffset=
this._lineOffset;const startX=x1+lineOffset-cos_a_hlw;const startY=y1+lineOffset-sin_a_hlw;const endX=x2+lineOffset+cos_a_hlw;const endY=y2+lineOffset+sin_a_hlw;const tlx=startX+sin_a_hlw;const tly=startY-cos_a_hlw;const blx=startX-sin_a_hlw;const bly=startY+cos_a_hlw;const trx=endX+sin_a_hlw;const try_=endY-cos_a_hlw;const brx=endX-sin_a_hlw;const bry=endY+cos_a_hlw;tmpQuad.set(tlx,tly,trx,try_,brx,bry,blx,bly);tmpRect.set(u,0,v,0);this.Quad3(tmpQuad,tmpRect)}TexturedLinePreCalc_LineCap0(x1,y1,x2,
y2,sin_a_hlw,cos_a_hlw,u,v){const lineOffset=this._lineOffset;const startX=x1+lineOffset;const startY=y1+lineOffset;const endX=x2+lineOffset;const endY=y2+lineOffset;const tlx=startX+sin_a_hlw;const tly=startY-cos_a_hlw;const blx=startX-sin_a_hlw;const bly=startY+cos_a_hlw;const trx=endX+sin_a_hlw;const try_=endY-cos_a_hlw;const brx=endX-sin_a_hlw;const bry=endY+cos_a_hlw;tmpQuad.set(tlx,tly,trx,try_,brx,bry,blx,bly);tmpRect.set(u,0,v,0);this.Quad3(tmpQuad,tmpRect)}LineRect(left,top,right,bottom){const halfLineWidth=
this._lineWidth*.5;const lineCap=this._lineCap;if(lineCap===2)this._LineRectPreCalc_LineCap2(left,top,right,bottom,halfLineWidth);else if(lineCap===1)this._LineRectPreCalc_LineCap1(left,top,right,bottom,halfLineWidth);else this._LineRectPreCalc_LineCap0(left,top,right,bottom,halfLineWidth)}_LineRectPreCalc_LineCap2(left,top,right,bottom,halfLineWidth){this.LinePreCalc_LineCap2(left,top,0,right,top,0,0,halfLineWidth);this.LinePreCalc_LineCap2(right,top,0,right,bottom,0,halfLineWidth,0);this.LinePreCalc_LineCap2(right,
bottom,0,left,bottom,0,0,-halfLineWidth);this.LinePreCalc_LineCap2(left,bottom,0,left,top,0,-halfLineWidth,0)}_LineRectPreCalc_LineCap1(left,top,right,bottom,halfLineWidth){this.LinePreCalc_LineCap1(left,top,0,right,top,0,0,halfLineWidth);this.LinePreCalc_LineCap1(right,top,0,right,bottom,0,halfLineWidth,0);this.LinePreCalc_LineCap1(right,bottom,0,left,bottom,0,0,-halfLineWidth);this.LinePreCalc_LineCap1(left,bottom,0,left,top,0,-halfLineWidth,0)}_LineRectPreCalc_LineCap0(left,top,right,bottom,halfLineWidth){this.LinePreCalc_LineCap0(left,
top,0,right,top,0,0,halfLineWidth);this.LinePreCalc_LineCap0(right,top,0,right,bottom,0,halfLineWidth,0);this.LinePreCalc_LineCap0(right,bottom,0,left,bottom,0,0,-halfLineWidth);this.LinePreCalc_LineCap0(left,bottom,0,left,top,0,-halfLineWidth,0)}LineRect2(r){this.LineRect(r.getLeft(),r.getTop(),r.getRight(),r.getBottom())}LineQuad(q){const a=C3.angleTo(q.getTlx(),q.getTly(),q.getTrx(),q.getTry());const sin_a=Math.sin(a);const cos_a=Math.cos(a);const halfLineWidth=this._lineWidth*.5;const sin_a_hlw=
sin_a*halfLineWidth;const cos_a_hlw=cos_a*halfLineWidth;const lineCap=this._lineCap;if(lineCap===2)this._LineQuadPreCalc_LineCap2(q,sin_a_hlw,cos_a_hlw);else if(lineCap===1)this._LineQuadPreCalc_LineCap1(q,sin_a_hlw,cos_a_hlw);else this._LineQuadPreCalc_LineCap0(q,sin_a_hlw,cos_a_hlw)}_LineQuadPreCalc_LineCap2(q,sin_a_hlw,cos_a_hlw){this.LinePreCalc_LineCap2(q.getTlx(),q.getTly(),0,q.getTrx(),q.getTry(),0,sin_a_hlw,cos_a_hlw);this.LinePreCalc_LineCap2(q.getTrx(),q.getTry(),0,q.getBrx(),q.getBry(),
0,cos_a_hlw,-sin_a_hlw);this.LinePreCalc_LineCap2(q.getBrx(),q.getBry(),0,q.getBlx(),q.getBly(),0,-sin_a_hlw,-cos_a_hlw);this.LinePreCalc_LineCap2(q.getBlx(),q.getBly(),0,q.getTlx(),q.getTly(),0,-cos_a_hlw,sin_a_hlw)}_LineQuadPreCalc_LineCap1(q,sin_a_hlw,cos_a_hlw){this.LinePreCalc_LineCap1(q.getTlx(),q.getTly(),0,q.getTrx(),q.getTry(),0,sin_a_hlw,cos_a_hlw);this.LinePreCalc_LineCap1(q.getTrx(),q.getTry(),0,q.getBrx(),q.getBry(),0,cos_a_hlw,-sin_a_hlw);this.LinePreCalc_LineCap1(q.getBrx(),q.getBry(),
0,q.getBlx(),q.getBly(),0,-sin_a_hlw,-cos_a_hlw);this.LinePreCalc_LineCap1(q.getBlx(),q.getBly(),0,q.getTlx(),q.getTly(),0,-cos_a_hlw,sin_a_hlw)}_LineQuadPreCalc_LineCap0(q,sin_a_hlw,cos_a_hlw){this.LinePreCalc_LineCap0(q.getTlx(),q.getTly(),0,q.getTrx(),q.getTry(),0,sin_a_hlw,cos_a_hlw);this.LinePreCalc_LineCap0(q.getTrx(),q.getTry(),0,q.getBrx(),q.getBry(),0,cos_a_hlw,-sin_a_hlw);this.LinePreCalc_LineCap0(q.getBrx(),q.getBry(),0,q.getBlx(),q.getBly(),0,-sin_a_hlw,-cos_a_hlw);this.LinePreCalc_LineCap0(q.getBlx(),
q.getBly(),0,q.getTlx(),q.getTly(),0,-cos_a_hlw,sin_a_hlw)}SetLineWidth(n){this._lineWidth=n;this._lineWidthStack[this._lineWidthStack.length-1]=n}GetLineWidth(){return this._lineWidth}PushLineWidth(n){if(this._lineWidthStack.length>=100)throw new Error("pushed too many line widths - check push/pop pairs");this._lineWidthStack.push(n);this._lineWidth=n}PopLineWidth(){if(this._lineWidthStack.length<=1)throw new Error("cannot pop last line width - check push/pop pairs");this._lineWidthStack.pop();this._lineWidth=
this._lineWidthStack.at(-1)}SetLineCapButt(){this._lineCap=0;this._lineCapStack[this._lineCapStack.length-1]=0}SetLineCapSquare(){this._lineCap=1;this._lineCapStack[this._lineCapStack.length-1]=0}SetLineCapZag(){this._lineCap=2;this._lineCapStack[this._lineCapStack.length-1]=0}PushLineCap(type){if(type==="butt")this.PushLineCapButt();else if(type==="square")this.PushLineCapSquare();else if(type==="zag")this.PushLineCapZag();else throw new Error("invalid line cap");}PushLineCapButt(){if(this._lineCapStack.length>=
100)throw new Error("pushed too many line caps - check push/pop pairs");this._lineCapStack.push(0);this._lineCap=0}PushLineCapSquare(){if(this._lineCapStack.length>=100)throw new Error("pushed too many line caps - check push/pop pairs");this._lineCapStack.push(1);this._lineCap=1}PushLineCapZag(){if(this._lineCapStack.length>=100)throw new Error("pushed too many line caps - check push/pop pairs");this._lineCapStack.push(2);this._lineCap=2}PopLineCap(){if(this._lineCapStack.length<=1)throw new Error("cannot pop last line cap - check push/pop pairs");
this._lineCapStack.pop();this._lineCap=this._lineCapStack.at(-1)}SetLineOffset(n){this._lineOffset=n;this._lineOffsetStack[this._lineOffsetStack.length-1]=n}GetLineOffset(){return this._lineOffset}PushLineOffset(n){if(this._lineOffsetStack.length>=100)throw new Error("pushed too many line offsets - check push/pop pairs");this._lineOffsetStack.push(n);this._lineOffset=n}PopLineOffset(){if(this._lineOffsetStack.length<=1)throw new Error("cannot pop last line offset - check push/pop pairs");this._lineOffsetStack.pop();
this._lineOffset=this._lineOffsetStack.at(-1)}ConvexPoly(pts){const pts_count=pts.length/2;if(pts_count<3)throw new Error("need at least 3 points");const tris=pts_count-2;const last_tri=tris-1;const p0x=pts[0];const p0y=pts[1];for(let i=0;i<tris;i+=2){const i2=i*2;const p1x=pts[i2+2];const p1y=pts[i2+3];const p2x=pts[i2+4];const p2y=pts[i2+5];if(i===last_tri)this.Quad2(p0x,p0y,p1x,p1y,p2x,p2y,p2x,p2y);else{const p3x=pts[i2+6];const p3y=pts[i2+7];this.Quad2(p0x,p0y,p1x,p1y,p2x,p2y,p3x,p3y)}}}GetNumVertexComponents(){return 3}Finish(){this.EndBatch(true);
this._frameNumber++}GetFrameNumber(){return this._frameNumber}IncrementFrameNumber(){this._frameNumber++}SetMipmapsEnabled(e){this._enableMipmaps=!!e}AreMipmapsEnabled(){return this._enableMipmaps}SetHasMajorPerformanceCaveat(c){this._hasMajorPerformanceCaveat=!!c}HasMajorPerformanceCaveat(){return this._hasMajorPerformanceCaveat}IsWebGL(){return false}IsWebGPU(){return false}};

}

// ../lib/gfx/stateGroup.js
{
'use strict';const C3=self.C3;
C3.Gfx.StateGroup=class StateGroup{constructor(renderer,shaderProgram_or_name,blendMode,color,zElevation){this._renderer=renderer;this._refCount=0;this._shaderProgram=null;this._shaderProgramName="";this._blendMode=blendMode;this._color=C3.New(C3.Color);this._color.set(color);this._zElevation=zElevation;if(typeof shaderProgram_or_name==="string")this._shaderProgramName=shaderProgram_or_name;else{this._shaderProgram=shaderProgram_or_name;this._shaderProgramName=this._shaderProgram.GetName()}}Release(){if(this._refCount>0)throw new Error("releasing state group still in use");
this._renderer=null;this._shaderProgram=null;this._shaderProgramName=""}Apply(){const renderer=this._renderer;renderer.SetProgram(this._shaderProgram);renderer.SetBlendMode(this._blendMode);renderer.SetColor(this._color);renderer.SetCurrentZ(this._zElevation);renderer._SetCurrentStateGroup(this)}GetKey(){return C3.Gfx.StateGroup.MakeKey(this._shaderProgramName,this._blendMode,this._color,this._zElevation)}AddRef(){++this._refCount}DecRef(){--this._refCount}_GetRefCount(){return this._refCount}OnContextLost(){this._shaderProgram=
null}OnContextRestored(renderer){this._shaderProgram=renderer.GetShaderProgramByName(this._shaderProgramName);if(!this._shaderProgram)throw new Error("failed to restore shader program");}static MakeKey(shaderProgram_or_name,blendMode,c,zElevation){const shaderProgramName=typeof shaderProgram_or_name==="string"?shaderProgram_or_name:shaderProgram_or_name.GetName();return shaderProgramName+","+blendMode+","+c.getR()+","+c.getG()+","+c.getB()+","+c.getA()+","+zElevation}};

}

// ../lib/gfx/mesh.js
{
'use strict';const C3=self.C3;const tempQuadTex=C3.New(C3.Quad);function interpolateQuad(srcX,srcY,quad){const qtlx=quad.getTlx();const qtly=quad.getTly();const qtrx=quad.getTrx()-qtlx;const qtry=quad.getTry()-qtly;const qblx=quad.getBlx()-qtlx;const qbly=quad.getBly()-qtly;const xix=qtrx*srcX;const xiy=qtry*srcX;const yix=qblx*srcY;const yiy=qbly*srcY;return[qtlx+xix+yix,qtly+xiy+yiy]}
C3.Gfx.MeshPoint=class MeshPoint{constructor(mesh,col,row){this._mesh=mesh;this._col=col;this._row=row;this._x=NaN;this._y=NaN;this._zElevation=NaN;this._u=NaN;this._v=NaN;this._x=0;this._y=0;this._zElevation=0;this._u=0;this._v=0}_Init(x,y,u,v){this._x=x;this._y=y;this._u=u;this._v=v}GetX(){return this._x}SetX(x){if(this._x===x)return;this._x=x;this._mesh._SetPointsChanged()}GetY(){return this._y}SetY(y){if(this._y===y)return;this._y=y;this._mesh._SetPointsChanged()}GetZElevation(){return this._zElevation}SetZElevation(z){if(this._zElevation===
z)return;this._zElevation=Math.max(z,0);this._mesh._SetPointsChanged()}GetU(){return this._u}SetU(u){this._u=u}GetV(){return this._v}SetV(v){this._v=v}_Interpolate_TexRect(srcPoint,quadPos,rcTex){[this._x,this._y]=interpolateQuad(srcPoint._x,srcPoint._y,quadPos);this._zElevation=srcPoint._zElevation;this._u=C3.lerp(rcTex.getLeft(),rcTex.getRight(),srcPoint._u);this._v=C3.lerp(rcTex.getTop(),rcTex.getBottom(),srcPoint._v)}_Interpolate_TexQuad(srcPoint,quadPos,quadTex){[this._x,this._y]=interpolateQuad(srcPoint._x,
srcPoint._y,quadPos);this._zElevation=srcPoint._zElevation;[this._u,this._v]=interpolateQuad(srcPoint._u,srcPoint._v,quadTex)}SaveToJson(){return{"x":this.GetX(),"y":this.GetY(),"z":this.GetZElevation(),"u":this.GetU(),"v":this.GetV()}}LoadFromJson(o){this.SetX(o["x"]);this.SetY(o["y"]);if(o.hasOwnProperty("z"))this.SetZElevation(o["z"]);this.SetU(o["u"]);this.SetV(o["v"])}GetMesh(){return this._mesh}GetColumn(){return this._col}GetRow(){return this._row}};
C3.Gfx.Mesh=class Mesh{constructor(hsize,vsize,owner){if(hsize<2||vsize<2)throw new Error("invalid mesh size");this._hsize=hsize;this._vsize=vsize;this._owner=owner||null;this._pts=[];this._minX=0;this._minY=0;this._maxX=1;this._maxY=1;this._maxZ=0;this._pointsChanged=false;const lastX=hsize-1;const lastY=vsize-1;for(let y=0;y<vsize;++y){const row=[];for(let x=0;x<hsize;++x){const meshPoint=C3.New(C3.Gfx.MeshPoint,this,x,y);const xf=x/lastX;const yf=y/lastY;meshPoint._Init(xf,yf,xf,yf);row.push(meshPoint)}this._pts.push(row)}}Release(){C3.clearArray(this._pts)}GetHSize(){return this._hsize}GetVSize(){return this._vsize}GetOwner(){return this._owner}_GetPoints(){return this._pts}_SetPointsChanged(){this._pointsChanged=
true}_MaybeComputeBounds(){if(!this._pointsChanged)return;let minX=Infinity;let minY=Infinity;let maxX=-Infinity;let maxY=-Infinity;let maxZ=0;for(const row of this._pts)for(const meshPoint of row){const x=meshPoint.GetX();const y=meshPoint.GetY();minX=Math.min(minX,x);minY=Math.min(minY,y);maxX=Math.max(maxX,x);maxY=Math.max(maxY,y);maxZ=Math.max(maxZ,meshPoint.GetZElevation())}this._minX=minX;this._minY=minY;this._maxX=maxX;this._maxY=maxY;this._maxZ=maxZ;this._pointsChanged=false}GetMinX(){this._MaybeComputeBounds();
return this._minX}GetMinY(){this._MaybeComputeBounds();return this._minY}GetMaxX(){this._MaybeComputeBounds();return this._maxX}GetMaxY(){this._MaybeComputeBounds();return this._maxY}GetMaxZ(){this._MaybeComputeBounds();return this._maxZ}HasAnyZElevation(){return this.GetMaxZ()>0}GetMeshPointAt(x,y){x=Math.floor(x);y=Math.floor(y);if(x<0||x>=this._hsize||y<0||y>=this._vsize)return null;return this._pts[y][x]}CalculateTransformedMesh(srcMesh,quadPos,rcTex_or_quad){const isTexRect=rcTex_or_quad instanceof
C3.Rect;if(srcMesh.GetHSize()!==this.GetHSize()||srcMesh.GetVSize()!==this.GetVSize())throw new Error("source mesh wrong size");const srcPts=srcMesh._pts;const destPts=this._pts;for(let y=0,lenY=destPts.length;y<lenY;++y){const srcRow=srcPts[y];const destRow=destPts[y];for(let x=0,lenX=destRow.length;x<lenX;++x){const srcPoint=srcRow[x];const destPoint=destRow[x];if(isTexRect)destPoint._Interpolate_TexRect(srcPoint,quadPos,rcTex_or_quad);else destPoint._Interpolate_TexQuad(srcPoint,quadPos,rcTex_or_quad)}}}Draw(renderer){const pts=
this._pts;let prevRow=pts[0];for(let y=1,lenY=pts.length;y<lenY;++y){const row=pts[y];let tl=prevRow[0];let bl=row[0];for(let x=1,lenX=row.length;x<lenX;++x){const tr=prevRow[x];const br=row[x];tempQuadTex.set(tl.GetU(),tl.GetV(),tr.GetU(),tr.GetV(),br.GetU(),br.GetV(),bl.GetU(),bl.GetV());renderer.Quad3D2(tl.GetX(),tl.GetY(),tl.GetZElevation(),tr.GetX(),tr.GetY(),tr.GetZElevation(),br.GetX(),br.GetY(),br.GetZElevation(),bl.GetX(),bl.GetY(),bl.GetZElevation(),tempQuadTex);tl=tr;bl=br}prevRow=row}}Outline(renderer,
transformFunc){if(!transformFunc)transformFunc=(x,y,z)=>[x,y,z];const pts=this._pts;let prevRow=pts[0];for(let y=1,lenY=pts.length;y<lenY;++y){const row=pts[y];let tl=prevRow[0];let bl=row[0];for(let x=1,lenX=row.length;x<lenX;++x){const tr=prevRow[x];const br=row[x];const [tlx,tly,tlz]=transformFunc(tl.GetX(),tl.GetY(),tl.GetZElevation());const [trx,try_,trz]=transformFunc(tr.GetX(),tr.GetY(),tr.GetZElevation());const [brx,bry,brz]=transformFunc(br.GetX(),br.GetY(),br.GetZElevation());const [blx,
bly,blz]=transformFunc(bl.GetX(),bl.GetY(),bl.GetZElevation());renderer.Line3D(tlx,tly,tlz,trx,try_,trz);renderer.Line3D(tlx,tly,tlz,brx,bry,brz);renderer.Line3D(tlx,tly,tlz,blx,bly,blz);if(x===lenX-1)renderer.Line3D(trx,try_,trz,brx,bry,brz);if(y===lenY-1)renderer.Line3D(blx,bly,blz,brx,bry,brz);tl=tr;bl=br}prevRow=row}}InsertPolyMeshVertices(srcPoly){const RAY_EXT_DIST=.001;const MIN_RAY_DIST=0;const MAX_RAY_DIST=.99999999;const inPts=srcPoly.pointsArr();const outPts=[];const colCount=this.GetHSize()-
1;const rowCount=this.GetVSize()-1;const colWidthNorm=1/colCount;const rowHeightNorm=1/rowCount;const lastCol=colCount-1;const lastRow=rowCount-1;let curX=inPts[0];let curY=inPts[1];let curCol=C3.clamp(Math.floor(curX*colCount),0,lastCol);let curRow=C3.clamp(Math.floor(curY*rowCount),0,lastRow);let isUpper=true;let nextX=0;let nextY=0;let rayHit=0;const NOTHING_DISABLED=-1;const DISABLE_DIAGONAL=0;const DISABLE_LEFT_EDGE=1;const DISABLE_TOP_EDGE=2;const DISABLE_RIGHT_EDGE=3;const DISABLE_BOTTOM_EDGE=
4;let disableCheck=NOTHING_DISABLED;const addVertexAtRayHit=()=>{curX=C3.clamp(C3.lerp(curX,nextX,rayHit),0,1);curY=C3.clamp(C3.lerp(curY,nextY,rayHit),0,1);outPts.push(curX,curY)};for(let i=0,len=inPts.length;i<len;i+=2){curX=inPts[i];curY=inPts[i+1];outPts.push(curX,curY);curCol=C3.clamp(Math.floor(curX*colCount),0,lastCol);curRow=C3.clamp(Math.floor(curY*rowCount),0,lastRow);const j=(i+2)%len;nextX=inPts[j];nextY=inPts[j+1];disableCheck=NOTHING_DISABLED;while(true){if(outPts.length>1E6)throw new Error("Too many mesh poly points");
const srcTlx=curCol*colWidthNorm;const srcTly=curRow*rowHeightNorm;const srcBrx=(curCol+1)*colWidthNorm;const srcBry=(curRow+1)*rowHeightNorm;isUpper=C3.isPointInTriangleInclusive(curX,curY,srcTlx,srcTly,srcBrx,srcTly,srcBrx,srcBry);if(disableCheck!==DISABLE_DIAGONAL){rayHit=C3.rayIntersectExtended(curX,curY,nextX,nextY,srcTlx,srcTly,srcBrx,srcBry,-RAY_EXT_DIST);if(rayHit>=MIN_RAY_DIST&&rayHit<=MAX_RAY_DIST){addVertexAtRayHit();isUpper=!isUpper;disableCheck=DISABLE_DIAGONAL;continue}}if(curRow>0&&
disableCheck!==DISABLE_TOP_EDGE){rayHit=C3.rayIntersectExtended(curX,curY,nextX,nextY,srcTlx,srcTly,srcBrx,srcTly,RAY_EXT_DIST);if(rayHit>=MIN_RAY_DIST&&rayHit<=MAX_RAY_DIST){addVertexAtRayHit();curRow--;isUpper=false;disableCheck=DISABLE_BOTTOM_EDGE;continue}}if(curCol<lastCol&&disableCheck!==DISABLE_RIGHT_EDGE){rayHit=C3.rayIntersectExtended(curX,curY,nextX,nextY,srcBrx,srcTly,srcBrx,srcBry,RAY_EXT_DIST);if(rayHit>=MIN_RAY_DIST&&rayHit<=MAX_RAY_DIST){addVertexAtRayHit();curCol++;isUpper=false;disableCheck=
DISABLE_LEFT_EDGE;continue}}if(curCol>0&&disableCheck!==DISABLE_LEFT_EDGE){rayHit=C3.rayIntersectExtended(curX,curY,nextX,nextY,srcTlx,srcTly,srcTlx,srcBry,RAY_EXT_DIST);if(rayHit>=MIN_RAY_DIST&&rayHit<=MAX_RAY_DIST){addVertexAtRayHit();curCol--;isUpper=true;disableCheck=DISABLE_RIGHT_EDGE;continue}}if(curRow<lastRow&&disableCheck!==DISABLE_BOTTOM_EDGE){rayHit=C3.rayIntersectExtended(curX,curY,nextX,nextY,srcTlx,srcBry,srcBrx,srcBry,RAY_EXT_DIST);if(rayHit>=MIN_RAY_DIST&&rayHit<=MAX_RAY_DIST){addVertexAtRayHit();
curRow++;isUpper=true;disableCheck=DISABLE_TOP_EDGE;continue}}break}}return C3.New(C3.CollisionPoly,outPts)}TransformCollisionPoly(srcPoly,destPoly){const ptsArr=this._TransformPolyPoints(srcPoly);this._SimplifyPoly(ptsArr);destPoly.setPoints(ptsArr)}_TransformPolyPoints(srcPoly){const outPts=[];const ptsArr=srcPoly.pointsArr();for(let i=0,len=ptsArr.length;i<len;i+=2){const srcX=ptsArr[i];const srcY=ptsArr[i+1];const [destX,destY]=this.TransformPoint(srcX,srcY);outPts.push(destX,destY)}return outPts}TransformPoint(srcX,
srcY){const lastCol=this.GetHSize()-1;const lastRow=this.GetVSize()-1;const colWidthNorm=1/lastCol;const rowHeightNorm=1/lastRow;const srcCol=C3.clamp(Math.floor(srcX*lastCol),0,lastCol-1);const srcRow=C3.clamp(Math.floor(srcY*lastRow),0,lastRow-1);const srcTlx=srcCol*colWidthNorm;const srcTly=srcRow*rowHeightNorm;const srcBrx=(srcCol+1)*colWidthNorm;const srcBry=(srcRow+1)*rowHeightNorm;const destTl=this.GetMeshPointAt(srcCol,srcRow);const destBr=this.GetMeshPointAt(srcCol+1,srcRow+1);const isUpper=
C3.isPointInTriangleInclusive(srcX,srcY,srcTlx,srcTly,srcBrx,srcTly,srcBrx,srcBry);const srcAltX=isUpper?srcTlx+colWidthNorm:srcTlx;const srcAltY=isUpper?srcTly:srcTly+rowHeightNorm;const destAlt=this.GetMeshPointAt(srcCol+(isUpper?1:0),srcRow+(isUpper?0:1));const [u,v,w]=C3.triangleCartesianToBarycentric(srcX,srcY,srcTlx,srcTly,srcAltX,srcAltY,srcBrx,srcBry);return C3.triangleBarycentricToCartesian(u,v,w,destTl.GetX(),destTl.GetY(),destAlt.GetX(),destAlt.GetY(),destBr.GetX(),destBr.GetY())}_SimplifyPoly(ptsArr){const outPts=
[];const EPSILON=1E-7;let curX=ptsArr[0];let curY=ptsArr[1];let lastDx=curX-ptsArr.at(-2);let lastDy=curY-ptsArr.at(-1);for(let i=0,len=ptsArr.length;i<len;i+=2){const j=(i+2)%len;const nextX=ptsArr[j];const nextY=ptsArr[j+1];const dx=nextX-curX;const dy=nextY-curY;const bothXNearZero=Math.abs(dx)<EPSILON&&Math.abs(lastDx)<EPSILON&&Math.sign(dy)===Math.sign(lastDy);const bothYNearZero=Math.abs(dy)<EPSILON&&Math.abs(lastDy)<EPSILON&&Math.sign(dx)===Math.sign(lastDx);if(!bothXNearZero&&!bothYNearZero&&
Math.abs(dx/lastDx-dy/lastDy)>EPSILON||dx==0&&dy===0)outPts.push(curX,curY);curX=nextX;curY=nextY;lastDx=dx;lastDy=dy}if(outPts.length>=6&&outPts.length<ptsArr.length)C3.shallowAssignArray(ptsArr,outPts)}SaveToJson(){return{"cols":this.GetHSize(),"rows":this.GetVSize(),"points":this._pts.map(row=>row.map(pt=>pt.SaveToJson()))}}LoadFromJson(o){const cols=this.GetHSize();const rows=this.GetVSize();if(o["cols"]!==cols||o["rows"]!==rows)throw new Error("mesh data wrong size");const meshRows=o["points"];
for(let y=0;y<rows;++y){const rowData=meshRows[y];for(let x=0;x<cols;++x){const pt=this.GetMeshPointAt(x,y);pt.LoadFromJson(rowData[x])}}}};

}

// ../lib/gfx/webgl/texture.js
{
'use strict';const C3=self.C3;const VALID_PIXEL_FORMATS=new Set(["rgba8","rgb8","rgba4","rgb5_a1","rgb565"]);const VALID_SAMPLINGS=new Set(["nearest","bilinear","trilinear"]);const VALID_MIPMAP_QUALITIES=new Set(["default","low","high"]);const VALID_WRAP_MODES=new Set(["clamp-to-edge","repeat","mirror-repeat"]);
function GetFormatSpecifiers(pixelFormat,gl){let sizedinternalformat;let internalformat;let format;let type;switch(pixelFormat){case "rgba8":sizedinternalformat=gl.RGBA8;internalformat=gl.RGBA;format=gl.RGBA;type=gl.UNSIGNED_BYTE;break;case "rgb8":sizedinternalformat=gl.RGB8;internalformat=gl.RGB;format=gl.RGB;type=gl.UNSIGNED_BYTE;break;case "rgba4":sizedinternalformat=gl.RGBA4;internalformat=gl.RGBA;format=gl.RGBA;type=gl.UNSIGNED_SHORT_4_4_4_4;break;case "rgb5_a1":sizedinternalformat=gl.RGB5_A1;
internalformat=gl.RGBA;format=gl.RGBA;type=gl.UNSIGNED_SHORT_5_5_5_1;break;case "rgb565":sizedinternalformat=gl.RGB565;internalformat=gl.RGB;format=gl.RGB;type=gl.UNSIGNED_SHORT_5_6_5;break;default:throw new Error("invalid pixel format");}return{sizedinternalformat,internalformat,format,type}}
const CREATEFROM_DEFAULT_OPTIONS={wrapX:"clamp-to-edge",wrapY:"clamp-to-edge",sampling:"trilinear",anisotropy:0,pixelFormat:"rgba8",mipMap:true,mipMapQuality:"default",premultiplyAlpha:true,isSvg:false,width:-1,height:-1};const UPDATE_DEFAULT_OPTIONS={premultiplyAlpha:true,flipY:false};const allTextures=new Set;
C3.Gfx.WebGLRendererTexture=class WebGLRendererTexture{constructor(renderer){this._renderer=renderer;this._texture=null;this._width=0;this._height=0;this._isStatic=true;this._wrapX="clamp-to-edge";this._wrapY="clamp-to-edge";this._sampling="trilinear";this._anisotropy=0;this._pixelFormat="rgba8";this._isMipMapped=false;this._mipMapQuality="default";this._refCount=0}_CreateStatic(data,opts){if((typeof HTMLImageElement==="undefined"||!(data instanceof HTMLImageElement))&&(typeof HTMLCanvasElement===
"undefined"||!(data instanceof HTMLCanvasElement))&&(typeof ImageBitmap==="undefined"||!(data instanceof ImageBitmap))&&(typeof OffscreenCanvas==="undefined"||!(data instanceof OffscreenCanvas))&&!(data instanceof ImageData)&&!(data instanceof ArrayBuffer)&&data!==null)throw new Error("invalid texture source");opts=Object.assign({},CREATEFROM_DEFAULT_OPTIONS,opts);if(this._texture)throw new Error("already created texture");this._wrapX=opts.wrapX;this._wrapY=opts.wrapY;this._sampling=opts.sampling;
this._anisotropy=opts.anisotropy;this._pixelFormat=opts.pixelFormat;this._isMipMapped=!!opts.mipMap&&this._renderer.AreMipmapsEnabled();this._mipMapQuality=opts.mipMapQuality;if(!VALID_WRAP_MODES.has(this._wrapX)||!VALID_WRAP_MODES.has(this._wrapY))throw new Error("invalid wrap mode");if(!VALID_SAMPLINGS.has(this._sampling))throw new Error("invalid sampling");if(!VALID_PIXEL_FORMATS.has(this._pixelFormat))throw new Error("invalid pixel format");if(!VALID_MIPMAP_QUALITIES.has(this._mipMapQuality))throw new Error("invalid mipmap quality");
this._isStatic=true;if(data instanceof ArrayBuffer||data===null||opts.isSvg){this._width=opts.width;this._height=opts.height;if(data instanceof ArrayBuffer&&data.byteLength!==this._width*this._height*4)throw new Error("ArrayBuffer wrong size");}else{this._width=data.width;this._height=data.height}if(this._width<=0||this._height<=0)throw new Error("invalid texture data size");if(opts.isSvg){const canvas=C3.CreateCanvas(this._width,this._height);const ctx=canvas.getContext("2d");ctx.drawImage(data,
0,0,this._width,this._height);data=canvas}const isPOT=C3.isPOT(this._width)&&C3.isPOT(this._height);const maxTextureSize=this._renderer.GetMaxTextureSize();if(this._width>maxTextureSize||this._height>maxTextureSize)throw new Error("texture data exceeds maximum texture size");const gl=this._renderer.GetContext();const webglVersion=this._renderer.GetWebGLVersionNumber();this._texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,this._texture);gl.pixelStorei(gl["UNPACK_PREMULTIPLY_ALPHA_WEBGL"],opts.premultiplyAlpha);
gl.pixelStorei(gl["UNPACK_FLIP_Y_WEBGL"],false);const formatspec=GetFormatSpecifiers(this._pixelFormat,gl);if(!this._renderer.SupportsNPOTTextures()&&!isPOT&&this._IsTiled()){if(data===null)throw new Error("cannot pass null data when creating a NPOT tiled texture without NPOT support");if(data instanceof ArrayBuffer)data=new ImageData(new Uint8ClampedArray(data),this._width,this._height);if(data instanceof ImageData){const tmpCanvas=C3.CreateCanvas(this._width,this._height);const tmpCtx=tmpCanvas.getContext("2d");
tmpCtx.putImageData(data,0,0);data=tmpCanvas}const canvas=C3.CreateCanvas(C3.nextHighestPowerOfTwo(this._width),C3.nextHighestPowerOfTwo(this._height));const ctx=canvas.getContext("2d");ctx.imageSmoothingEnabled=this._sampling!=="nearest";ctx.drawImage(data,0,0,this._width,this._height,0,0,canvas.width,canvas.height);gl.texImage2D(gl.TEXTURE_2D,0,formatspec.internalformat,formatspec.format,formatspec.type,canvas)}else if(webglVersion>=2){let levels;if(this._isMipMapped)levels=Math.floor(Math.log2(Math.max(this._width,
this._height))+1);else levels=1;gl.texStorage2D(gl.TEXTURE_2D,levels,formatspec.sizedinternalformat,this._width,this._height);if(data instanceof ArrayBuffer)gl.texSubImage2D(gl.TEXTURE_2D,0,0,0,this._width,this._height,formatspec.format,formatspec.type,new Uint8Array(data));else if(data!==null)gl.texSubImage2D(gl.TEXTURE_2D,0,0,0,formatspec.format,formatspec.type,data)}else if(data instanceof ArrayBuffer)gl.texImage2D(gl.TEXTURE_2D,0,formatspec.internalformat,this._width,this._height,0,formatspec.format,
formatspec.type,new Uint8Array(data));else if(data===null)gl.texImage2D(gl.TEXTURE_2D,0,formatspec.internalformat,this._width,this._height,0,formatspec.format,formatspec.type,null);else gl.texImage2D(gl.TEXTURE_2D,0,formatspec.internalformat,formatspec.format,formatspec.type,data);if(data!==null)this._SetTextureParameters(gl);gl.bindTexture(gl.TEXTURE_2D,null);this._renderer._ResetLastTexture();this._refCount=1;allTextures.add(this)}_CreateDynamic(width,height,opts){opts=Object.assign({},CREATEFROM_DEFAULT_OPTIONS,
opts);if(this._texture)throw new Error("already created texture");this._wrapX=opts.wrapX;this._wrapY=opts.wrapY;this._sampling=opts.sampling;this._pixelFormat=opts.pixelFormat;this._isMipMapped=!!opts.mipMap&&this._renderer.AreMipmapsEnabled();this._mipMapQuality=opts.mipMapQuality;if(!VALID_WRAP_MODES.has(this._wrapX)||!VALID_WRAP_MODES.has(this._wrapY))throw new Error("invalid wrap mode");if(!VALID_SAMPLINGS.has(this._sampling))throw new Error("invalid sampling");if(!VALID_PIXEL_FORMATS.has(this._pixelFormat))throw new Error("invalid pixel format");
if(!VALID_MIPMAP_QUALITIES.has(this._mipMapQuality))throw new Error("invalid mipmap quality");this._isStatic=false;this._width=Math.floor(width);this._height=Math.floor(height);const isPOT=C3.isPOT(this._width)&&C3.isPOT(this._height);const maxTextureSize=this._renderer.GetMaxTextureSize();if(this._width<=0||this._height<=0)throw new Error("invalid texture size");if(this._width>maxTextureSize||this._height>maxTextureSize)throw new Error("texture exceeds maximum texture size");if(!this._renderer.SupportsNPOTTextures()&&
this._IsTiled()&&!isPOT)throw new Error("non-power-of-two tiled textures not supported");const gl=this._renderer.GetContext();const webglVersion=this._renderer.GetWebGLVersionNumber();this._texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,this._texture);gl.pixelStorei(gl["UNPACK_PREMULTIPLY_ALPHA_WEBGL"],opts.premultiplyAlpha);gl.pixelStorei(gl["UNPACK_FLIP_Y_WEBGL"],false);const formatspec=GetFormatSpecifiers(this._pixelFormat,gl);const internalformat=webglVersion>=2?formatspec.sizedinternalformat:
formatspec.internalformat;gl.texImage2D(gl.TEXTURE_2D,0,internalformat,this._width,this._height,0,formatspec.format,formatspec.type,null);this._SetTextureParameters(gl);gl.bindTexture(gl.TEXTURE_2D,null);this._renderer._ResetLastTexture();this._refCount=1;allTextures.add(this)}_GetMipMapHint(gl){if(this._mipMapQuality==="default")return this._isStatic?gl.NICEST:gl.FASTEST;else if(this._mipMapQuality==="low")return gl.FASTEST;else if(this._mipMapQuality==="high")return gl.NICEST;else throw new Error("invalid mipmap quality");
}_IsTiled(){return this._wrapX!=="clamp-to-edge"||this._wrapY!=="clamp-to-edge"}_GetTextureWrapMode(gl,wrapMode){if(wrapMode==="clamp-to-edge")return gl.CLAMP_TO_EDGE;else if(wrapMode==="repeat")return gl.REPEAT;else if(wrapMode==="mirror-repeat")return gl.MIRRORED_REPEAT;else throw new Error("invalid wrap mode");}_SetTextureParameters(gl){const isPOT=C3.isPOT(this._width)&&C3.isPOT(this._height);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,this._GetTextureWrapMode(gl,this._wrapX));gl.texParameteri(gl.TEXTURE_2D,
gl.TEXTURE_WRAP_T,this._GetTextureWrapMode(gl,this._wrapY));if(this._sampling==="nearest"){gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);this._isMipMapped=false}else{gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);if((isPOT||this._renderer.SupportsNPOTTextures())&&this._isMipMapped){gl.hint(gl.GENERATE_MIPMAP_HINT,this._GetMipMapHint(gl));gl.generateMipmap(gl.TEXTURE_2D);const useTrilinear=this._sampling===
"trilinear"&&!this._renderer.HasMajorPerformanceCaveat();gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,useTrilinear?gl.LINEAR_MIPMAP_LINEAR:gl.LINEAR_MIPMAP_NEAREST)}else{gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);this._isMipMapped=false}}const anisotropicExt=this._renderer._GetAnisotropicExtension();if(anisotropicExt&&this._anisotropy>0&&this._sampling!=="nearest")gl.texParameterf(gl.TEXTURE_2D,anisotropicExt["TEXTURE_MAX_ANISOTROPY_EXT"],Math.min(this._anisotropy,this._renderer._GetMaxAnisotropy()))}_Update(data,
opts){if((typeof HTMLImageElement==="undefined"||!(data instanceof HTMLImageElement))&&(typeof HTMLVideoElement==="undefined"||!(data instanceof HTMLVideoElement))&&(typeof HTMLCanvasElement==="undefined"||!(data instanceof HTMLCanvasElement))&&(typeof ImageBitmap==="undefined"||!(data instanceof ImageBitmap))&&(typeof OffscreenCanvas==="undefined"||!(data instanceof OffscreenCanvas))&&!(data instanceof ImageData))throw new Error("invalid texture source");if(!this._texture||this._refCount<=0)throw new Error("texture not created");
if(this._isStatic)throw new Error("cannot update static texture");opts=Object.assign({},UPDATE_DEFAULT_OPTIONS,opts);const dataWidth=data.width||data.videoWidth;const dataHeight=data.height||data.videoHeight;const webglVersion=this._renderer.GetWebGLVersionNumber();const gl=this._renderer.GetContext();gl.bindTexture(gl.TEXTURE_2D,this._texture);gl.pixelStorei(gl["UNPACK_PREMULTIPLY_ALPHA_WEBGL"],opts.premultiplyAlpha);gl.pixelStorei(gl["UNPACK_FLIP_Y_WEBGL"],!!opts.flipY);const formatspec=GetFormatSpecifiers(this._pixelFormat,
gl);const internalformat=webglVersion>=2?formatspec.sizedinternalformat:formatspec.internalformat;try{if(this._width===dataWidth&&this._height===dataHeight){const isPOT=C3.isPOT(this._width)&&C3.isPOT(this._height);gl.texSubImage2D(gl.TEXTURE_2D,0,0,0,formatspec.format,formatspec.type,data);if((isPOT||this._renderer.SupportsNPOTTextures())&&this._isMipMapped){gl.hint(gl.GENERATE_MIPMAP_HINT,this._GetMipMapHint(gl));gl.generateMipmap(gl.TEXTURE_2D)}}else{this._width=dataWidth;this._height=dataHeight;
const isPOT=C3.isPOT(this._width)&&C3.isPOT(this._height);if(!this._renderer.SupportsNPOTTextures()&&this._IsTiled()&&!isPOT)throw new Error("non-power-of-two tiled textures not supported");gl.texImage2D(gl.TEXTURE_2D,0,internalformat,formatspec.format,formatspec.type,data);if((isPOT||this._renderer.SupportsNPOTTextures())&&this._isMipMapped){gl.hint(gl.GENERATE_MIPMAP_HINT,this._GetMipMapHint(gl));gl.generateMipmap(gl.TEXTURE_2D)}}}catch(e){console.error("Error updating WebGL texture: ",e)}gl.bindTexture(gl.TEXTURE_2D,
null);this._renderer._ResetLastTexture()}_Delete(){if(this._refCount>0)throw new Error("texture still has references");if(!this._texture)throw new Error("already deleted texture");allTextures.delete(this);const gl=this._renderer.GetContext();gl.deleteTexture(this._texture);this._texture=null}IsValid(){return!!this._texture}_GetTexture(){return this._texture}GetRenderer(){return this._renderer}AddReference(){this._refCount++}SubtractReference(){if(this._refCount<=0)throw new Error("no more references");
this._refCount--}GetReferenceCount(){return this._refCount}GetWidth(){return this._width}GetHeight(){return this._height}IsStatic(){return this._isStatic}GetEstimatedMemoryUsage(){let size=this._width*this._height;switch(this._pixelFormat){case "rgba8":size*=4;break;case "rgb8":size*=3;break;case "rgba4":case "rgb5_a1":case "rgb565":size*=2;break}if(this._isMipMapped)size+=Math.floor(size/3);return size}static OnContextLost(){allTextures.clear()}static allTextures(){return allTextures.values()}};

}

// ../lib/gfx/webgl/renderTarget.js
{
'use strict';const C3=self.C3;const assert=self.assert;const glMatrix=self.glMatrix;const vec3=glMatrix.vec3;const mat4=glMatrix.mat4;const VALID_SAMPLINGS=new Set(["nearest","bilinear","trilinear"]);const DEFAULT_RENDERTARGET_OPTIONS={sampling:"trilinear",alpha:true,depth:false,isSampled:true,isDefaultSize:true,multisampling:0};const allRenderTargets=new Set;
C3.Gfx.WebGLRenderTarget=class WebGLRenderTarget{constructor(renderer){this._renderer=renderer;this._frameBuffer=null;this._texture=null;this._renderBuffer=null;this._width=0;this._height=0;this._isDefaultSize=true;this._sampling="trilinear";this._alpha=true;this._depth=false;this._isSampled=true;this._multisampling=0;this._projectionMatrix=mat4.create()}_Create(width,height,opts){opts=Object.assign({},DEFAULT_RENDERTARGET_OPTIONS,opts);const webGLVersion=this._renderer.GetWebGLVersionNumber();if(this._texture||
this._renderBuffer)throw new Error("already created render target");this._sampling=opts.sampling;this._alpha=!!opts.alpha;this._depth=!!opts.depth;this._isSampled=!!opts.isSampled;this._isDefaultSize=!!opts.isDefaultSize;this._multisampling=opts.multisampling;if(!VALID_SAMPLINGS.has(this._sampling))throw new Error("invalid sampling");if(this._multisampling>0&&(webGLVersion<2||this._isSampled))throw new Error("invalid use of multisampling");if(webGLVersion<2)this._isSampled=true;this._width=width;
this._height=height;if(this._width<=0||this._height<=0)throw new Error("invalid render target size");this._CalculateProjection();const gl=this._renderer.GetContext();this._frameBuffer=gl.createFramebuffer();gl.bindFramebuffer(gl.FRAMEBUFFER,this._frameBuffer);if(this._isSampled){this._texture=this._renderer.CreateDynamicTexture(this._width,this._height,{sampling:this._sampling,pixelFormat:this._alpha?"rgba8":"rgb8",mipMap:false});const tex=this._texture._GetTexture();gl.framebufferTexture2D(gl.FRAMEBUFFER,
gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,tex,0)}else{this._renderBuffer=gl.createRenderbuffer();gl.bindRenderbuffer(gl.RENDERBUFFER,this._renderBuffer);const internalFormat=this._alpha?gl.RGBA8:gl.RGB8;if(this._multisampling>0){const formatSamples=gl.getInternalformatParameter(gl.RENDERBUFFER,internalFormat,gl.SAMPLES);if(formatSamples&&formatSamples[0]){const maxSamples=formatSamples[0];if(this._multisampling>maxSamples)this._multisampling=maxSamples}else this._multisampling=0}if(this._multisampling===
0)gl.renderbufferStorage(gl.RENDERBUFFER,internalFormat,this._width,this._height);else gl.renderbufferStorageMultisample(gl.RENDERBUFFER,this._multisampling,internalFormat,this._width,this._height);gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.RENDERBUFFER,this._renderBuffer);gl.bindRenderbuffer(gl.RENDERBUFFER,null)}const rendererDepthBuffer=this._renderer._GetDepthBuffer();if(this._depth&&rendererDepthBuffer)gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.DEPTH_STENCIL_ATTACHMENT,
gl.RENDERBUFFER,rendererDepthBuffer);gl.bindFramebuffer(gl.FRAMEBUFFER,null);allRenderTargets.add(this)}_Resize(width,height){if(this._width===width&&this._height===height)return;this._width=width;this._height=height;this._CalculateProjection();const gl=this._renderer.GetContext();gl.bindFramebuffer(gl.FRAMEBUFFER,this._frameBuffer);if(this._texture)this._texture._Update(new ImageData(this._width,this._height));else{gl.bindRenderbuffer(gl.RENDERBUFFER,this._renderBuffer);gl.renderbufferStorage(gl.RENDERBUFFER,
this._alpha?gl.RGBA8:gl.RGB8,this._width,this._height);gl.bindRenderbuffer(gl.RENDERBUFFER,null)}const rendererDepthBuffer=this._renderer._GetDepthBuffer();if(this._depth&&rendererDepthBuffer)gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.DEPTH_STENCIL_ATTACHMENT,gl.RENDERBUFFER,rendererDepthBuffer);gl.bindFramebuffer(gl.FRAMEBUFFER,null)}_Delete(){if(!this._texture&&!this._renderBuffer)throw new Error("already deleted render target");allRenderTargets.delete(this);const gl=this._renderer.GetContext();
gl.bindFramebuffer(gl.FRAMEBUFFER,this._frameBuffer);if(this._texture){gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,null,0);this._renderer.DeleteTexture(this._texture);this._texture=null}else if(this._renderBuffer){gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.RENDERBUFFER,null);gl.deleteRenderbuffer(this._renderBuffer);this._renderBuffer=null}gl.bindFramebuffer(gl.FRAMEBUFFER,null);if(this._renderer.GetWebGLVersionNumber()>=2){gl.bindFramebuffer(gl.READ_FRAMEBUFFER,
null);gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER,null)}gl.deleteFramebuffer(this._frameBuffer);this._renderer.GetBatchState().currentFramebuffer=null;this._frameBuffer=null}_CalculateProjection(){this._renderer.CalculatePerspectiveMatrix(this._projectionMatrix,this._width/this._height)}_GetFramebuffer(){return this._frameBuffer}GetRenderer(){return this._renderer}GetTexture(){return this._texture}GetProjectionMatrix(){return this._projectionMatrix}IsLinearSampling(){return this._sampling!=="nearest"}HasAlpha(){return this._alpha}IsSampled(){return this._isSampled}HasDepthBuffer(){return this._depth}GetWidth(){return this._width}GetHeight(){return this._height}IsDefaultSize(){return this._isDefaultSize}GetMultisampling(){return this._multisampling}GetOptions(){const ret=
{sampling:this._sampling,alpha:this._alpha,isSampled:this._isSampled};if(!this._isDefaultSize){ret.width=this._width;ret.height=this._height}return ret}IsCompatibleWithOptions(opts){opts=Object.assign({},DEFAULT_RENDERTARGET_OPTIONS,opts);if(opts.sampling!=="nearest"!==this.IsLinearSampling())return false;if(!!opts.alpha!==this.HasAlpha())return false;if(!!opts.depth!==this.HasDepthBuffer())return false;if(this._renderer.GetWebGLVersionNumber()>=2)if(!!opts.isSampled!==this.IsSampled())return false;
if(typeof opts.width==="number"||typeof opts.height==="number")return!this.IsDefaultSize()&&this.GetWidth()===opts.width&&this.GetHeight()===opts.height;else return this.IsDefaultSize()}_GetWebGLTexture(){if(!this._texture)return null;return this._texture._GetTexture()}GetEstimatedMemoryUsage(){if(this._texture)return this._texture.GetEstimatedMemoryUsage();return this._width*this._height*(this._alpha?4:3)}static async DebugReadPixelsToBlob(renderer,renderTarget){const imageData=await renderer.ReadBackRenderTargetToImageData(renderTarget,
true);return await C3.ImageDataToBlob(imageData)}static OnContextLost(){allRenderTargets.clear()}static allRenderTargets(){return allRenderTargets.values()}static ResizeAll(width,height){for(const rt of allRenderTargets)if(rt.IsDefaultSize())rt._Resize(width,height)}};

}

// ../lib/gfx/webgl/shaderProgram.js
{
'use strict';const C3=self.C3;const glMatrix=self.glMatrix;const vec3=glMatrix.vec3;const mat4=glMatrix.mat4;const RESERVED_UNIFORM_NAMES=new Set(["aPos","aTex","aPoints","matP","matMV","samplerFront","samplerBack","destStart","destEnd","srcStart","srcEnd","srcOriginStart","srcOriginEnd","pixelSize","seconds","layerScale","layerAngle","layoutStart","layoutEnd","color","color2_","pointTexStart","pointTexEnd","zElevation","tileSize","tileSpacing","outlineThickness"]);
C3.Gfx.WebGLShaderProgram=class WebGLShaderProgram{static async Compile(renderer,fragSrc,vsSource,name){const gl=renderer.GetContext();const fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fragmentShader,fragSrc);gl.compileShader(fragmentShader);const vertexShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vertexShader,vsSource);gl.compileShader(vertexShader);const shaderProgram=gl.createProgram();gl.attachShader(shaderProgram,fragmentShader);gl.attachShader(shaderProgram,
vertexShader);gl.bindAttribLocation(shaderProgram,0,"aPos");gl.bindAttribLocation(shaderProgram,1,"aTex");gl.bindAttribLocation(shaderProgram,2,"aPoints");gl.linkProgram(shaderProgram);const parallelShaderCompileExt=renderer._GetParallelShaderCompileExtension();if(parallelShaderCompileExt)await renderer._WaitForObjectReady(()=>gl.getProgramParameter(shaderProgram,parallelShaderCompileExt["COMPLETION_STATUS_KHR"]));else await C3.Wait(5);if(!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)){const log=
gl.getShaderInfoLog(fragmentShader);gl.deleteShader(fragmentShader);gl.deleteShader(vertexShader);gl.deleteProgram(shaderProgram);throw new Error("Error compiling fragment shader: "+log);}if(!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)){const log=gl.getShaderInfoLog(vertexShader);gl.deleteShader(fragmentShader);gl.deleteShader(vertexShader);gl.deleteProgram(shaderProgram);throw new Error("Error compiling vertex shader: "+log);}if(!gl.getProgramParameter(shaderProgram,gl.LINK_STATUS)){const log=
gl.getProgramInfoLog(shaderProgram);gl.deleteShader(fragmentShader);gl.deleteShader(vertexShader);gl.deleteProgram(shaderProgram);throw new Error("Error linking shader program: "+log);}const infoLog=C3.FilterUnprintableChars(gl.getProgramInfoLog(shaderProgram)||"").trim();if(infoLog&&!C3.IsStringAllWhitespace(infoLog))console.info(`[WebGL] Shader program '${name}' compilation log: `,infoLog);gl.deleteShader(fragmentShader);gl.deleteShader(vertexShader);return shaderProgram}static async Create(renderer,
shaderInfo,vsSource,name){const shaderProgram=await C3.Gfx.WebGLShaderProgram.Compile(renderer,shaderInfo.src,vsSource,name);return new C3.Gfx.WebGLShaderProgram(renderer,shaderProgram,shaderInfo,name)}constructor(renderer,shaderProgram,shaderInfo,name){const gl=renderer.GetContext();const batchState=renderer.GetBatchState();renderer.EndBatch();gl.useProgram(shaderProgram);this._gl=gl;this._renderer=renderer;this._name=name;this._shaderProgram=shaderProgram;this._isDeviceTransform=name==="<default-device-transform>";
const locAPos=gl.getAttribLocation(shaderProgram,"aPos");const locATex=gl.getAttribLocation(shaderProgram,"aTex");this._locAPoints=gl.getAttribLocation(shaderProgram,"aPoints");if(locAPos!==-1){gl.bindBuffer(gl.ARRAY_BUFFER,renderer._vertexBuffer);gl.vertexAttribPointer(locAPos,renderer.GetNumVertexComponents(),gl.FLOAT,false,0,0);gl.enableVertexAttribArray(locAPos)}if(locATex!==-1){gl.bindBuffer(gl.ARRAY_BUFFER,renderer._texcoordBuffer);gl.vertexAttribPointer(locATex,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(locATex)}if(this._locAPoints!==
-1){gl.bindBuffer(gl.ARRAY_BUFFER,renderer._pointBuffer);gl.vertexAttribPointer(this._locAPoints,4,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(this._locAPoints)}gl.bindBuffer(gl.ARRAY_BUFFER,null);this._uMatP=new C3.Gfx.WebGLShaderUniform(this,"matP","mat4");this._uMatMV=new C3.Gfx.WebGLShaderUniform(this,"matMV","mat4");this._uColor=new C3.Gfx.WebGLShaderUniform(this,"color","vec4");this._uSamplerFront=new C3.Gfx.WebGLShaderUniform(this,"samplerFront","sampler");this._uPointTexStart=new C3.Gfx.WebGLShaderUniform(this,
"pointTexStart","vec2");this._uPointTexEnd=new C3.Gfx.WebGLShaderUniform(this,"pointTexEnd","vec2");this._uZElevation=new C3.Gfx.WebGLShaderUniform(this,"zElevation","float");this._uTileSize=new C3.Gfx.WebGLShaderUniform(this,"tileSize","vec2");this._uTileSpacing=new C3.Gfx.WebGLShaderUniform(this,"tileSpacing","vec2");this._uColor2=new C3.Gfx.WebGLShaderUniform(this,"color2_","vec4");this._uOutlineThickness=new C3.Gfx.WebGLShaderUniform(this,"outlineThickness","float");this._uSamplerBack=new C3.Gfx.WebGLShaderUniform(this,
"samplerBack","sampler");this._uDestStart=new C3.Gfx.WebGLShaderUniform(this,"destStart","vec2");this._uDestEnd=new C3.Gfx.WebGLShaderUniform(this,"destEnd","vec2");this._uSrcStart=new C3.Gfx.WebGLShaderUniform(this,"srcStart","vec2");this._uSrcEnd=new C3.Gfx.WebGLShaderUniform(this,"srcEnd","vec2");this._uSrcOriginStart=new C3.Gfx.WebGLShaderUniform(this,"srcOriginStart","vec2");this._uSrcOriginEnd=new C3.Gfx.WebGLShaderUniform(this,"srcOriginEnd","vec2");this._uPixelSize=new C3.Gfx.WebGLShaderUniform(this,
"pixelSize","vec2");this._uSeconds=new C3.Gfx.WebGLShaderUniform(this,"seconds","float");this._uLayerScale=new C3.Gfx.WebGLShaderUniform(this,"layerScale","float");this._uLayerAngle=new C3.Gfx.WebGLShaderUniform(this,"layerAngle","float");this._uLayoutStart=new C3.Gfx.WebGLShaderUniform(this,"layoutStart","vec2");this._uLayoutEnd=new C3.Gfx.WebGLShaderUniform(this,"layoutEnd","vec2");this._hasAnyOptionalUniforms=!!(this._uPixelSize.IsUsed()||this._uSeconds.IsUsed()||this._uSamplerBack.IsUsed()||this._uDestStart.IsUsed()||
this._uDestEnd.IsUsed()||this._uSrcStart.IsUsed()||this._uSrcEnd.IsUsed()||this._uSrcOriginStart.IsUsed()||this._uSrcOriginEnd.IsUsed()||this._uLayerScale.IsUsed()||this._uLayerAngle.IsUsed()||this._uLayoutStart.IsUsed()||this._uLayoutEnd.IsUsed());this._extendBoxHorizontal=shaderInfo.extendBoxHorizontal||0;this._extendBoxVertical=shaderInfo.extendBoxVertical||0;this._crossSampling=!!shaderInfo.crossSampling;this._mustPreDraw=!!shaderInfo.mustPreDraw;this._preservesOpaqueness=!!shaderInfo.preservesOpaqueness;
this._animated=!!shaderInfo.animated;const customParameterDefs=shaderInfo.parameters||[];this._uCustomParameters=[];this._usesDest=this._uDestStart.IsUsed()||this._uDestEnd.IsUsed();this._usesAnySrcRectOrPixelSize=this._uPixelSize.IsUsed()||this._uSrcStart.IsUsed()||this._uSrcEnd.IsUsed()||this._uSrcOriginStart.IsUsed()||this._uSrcOriginEnd.IsUsed();this._needsPostDrawOrExtendBox=this._crossSampling||this._usesDest||this._extendBoxHorizontal!==0||this._extendBoxVertical!==0;this._hasCurrentMatP=false;
this._hasCurrentMatMV=false;this._uColor.Init4f(1,1,1,1);this._uColor2.Init4f(1,1,1,1);this._uSamplerFront.Init1i(0);this._uSamplerBack.Init1i(1);this._uPointTexStart.Init2f(0,0);this._uPointTexEnd.Init2f(1,1);this._uZElevation.Init1f(0);this._uTileSize.Init2f(0,0);this._uTileSpacing.Init2f(0,0);this._uDestStart.Init2f(0,0);this._uDestEnd.Init2f(1,1);this._uSrcStart.Init2f(0,0);this._uSrcEnd.Init2f(0,0);this._uSrcOriginStart.Init2f(0,0);this._uSrcOriginEnd.Init2f(0,0);this._uPixelSize.Init2f(0,0);
this._uLayerScale.Init1f(1);this._uLayerAngle.Init1f(0);this._uSeconds.Init1f(0);this._uLayoutStart.Init2f(0,0);this._uLayoutEnd.Init2f(0,0);this._uOutlineThickness.Init1f(1);for(const p of customParameterDefs){const uniformName=p[0];const paramType=p[2];const shaderUniform=new C3.Gfx.WebGLShaderUniform(this,uniformName,paramType);if(paramType==="color")shaderUniform.Init3f(0,0,0);else shaderUniform.Init1f(0);this._uCustomParameters.push(shaderUniform)}if(this._isDeviceTransform)this._UpdateDeviceTransformUniforms(batchState.currentMatP);
else{this.UpdateMatP(batchState.currentMatP,true);this.UpdateMatMV(batchState.currentMV,true)}const currentShader=batchState.currentShader;gl.useProgram(currentShader?currentShader._shaderProgram:null)}Release(){this._gl.deleteProgram(this._shaderProgram);this._shaderProgram=null;this._renderer._RemoveShaderProgram(this);this._gl=null;this._renderer=null}GetName(){return this._name}GetWebGLContext(){return this._gl}GetShaderProgram(){return this._shaderProgram}UsesDest(){return this._usesDest}UsesCrossSampling(){return this._crossSampling}MustPreDraw(){return this._mustPreDraw}PreservesOpaqueness(){return this._preservesOpaqueness}ExtendsBox(){return this._extendBoxHorizontal!==
0||this._extendBoxVertical!==0}GetBoxExtendHorizontal(){return this._extendBoxHorizontal}GetBoxExtendVertical(){return this._extendBoxVertical}UsesAnySrcRectOrPixelSize(){return this._usesAnySrcRectOrPixelSize}NeedsPostDrawOrExtendsBox(){return this._needsPostDrawOrExtendBox}GetParameterCount(){return this._uCustomParameters.length}GetParameterType(paramIndex){return this._uCustomParameters[paramIndex].GetType()}AreCustomParametersAlreadySetInBatch(params){for(let i=0,len=params.length;i<len;++i)if(!this._uCustomParameters[i].IsSetToCustomInBatch(params[i]))return false;
return true}SetCustomParametersInBatch(params){for(let i=0,len=params.length;i<len;++i)this._uCustomParameters[i].SetBatchValueCustom(params[i])}AreOptionalUniformsAlreadySetInBatch(destRect,srcRect,srcOriginRect,layoutRect,pixelWidth,pixelHeight,layerScale,layerAngle,time){if(this._uSamplerBack.IsUsed())return false;if(this._uPixelSize.IsUsed()&&!this._uPixelSize.IsSetTo2InBatch(pixelWidth,pixelHeight))return false;if(this._uDestStart.IsUsed()&&!this._uDestStart.IsSetTo2InBatch(destRect.getLeft(),
destRect.getTop()))return false;if(this._uDestEnd.IsUsed()&&!this._uDestEnd.IsSetTo2InBatch(destRect.getRight(),destRect.getBottom()))return false;if(this._uLayerScale.IsUsed()&&!this._uLayerScale.IsSetTo1InBatch(layerScale))return false;if(this._uLayerAngle.IsUsed()&&!this._uLayerAngle.IsSetTo1InBatch(layerAngle))return false;if(this._uSrcStart.IsUsed()&&!this._uSrcStart.IsSetTo2InBatch(srcRect.getLeft(),srcRect.getTop()))return false;if(this._uSrcEnd.IsUsed()&&!this._uSrcEnd.IsSetTo2InBatch(srcRect.getRight(),
srcRect.getBottom()))return false;if(this._uSrcOriginStart.IsUsed()&&!this._uSrcOriginStart.IsSetTo2InBatch(srcOriginRect.getLeft(),srcOriginRect.getTop()))return false;if(this._uSrcOriginEnd.IsUsed()&&!this._uSrcOriginEnd.IsSetTo2InBatch(srcOriginRect.getRight(),srcOriginRect.getBottom()))return false;if(this._uLayoutStart.IsUsed()&&!this._uLayoutStart.IsSetTo2InBatch(layoutRect.getLeft(),layoutRect.getTop()))return false;if(this._uLayoutEnd.IsUsed()&&!this._uLayoutEnd.IsSetTo2InBatch(layoutRect.getTop(),
layoutRect.getBottom()))return false;if(this._uSeconds.IsUsed()&&!this._uSeconds.IsSetTo1InBatch(time))return false;return true}SetOptionalUniformsInBatch(destRect,srcRect,srcOriginRect,layoutRect,pixelWidth,pixelHeight,layerScale,layerAngle,time){if(this._uSamplerBack.IsUsed())return;if(this._uPixelSize.IsUsed())this._uPixelSize.SetBatch2(pixelWidth,pixelHeight);if(this._uDestStart.IsUsed())this._uDestStart.SetBatch2(destRect.getLeft(),destRect.getTop());if(this._uDestEnd.IsUsed())this._uDestEnd.SetBatch2(destRect.getRight(),
destRect.getBottom());if(this._uLayerScale.IsUsed())this._uLayerScale.SetBatch1(layerScale);if(this._uLayerAngle.IsUsed())this._uLayerAngle.SetBatch1(layerAngle);if(this._uSrcStart.IsUsed())this._uSrcStart.SetBatch2(srcRect.getLeft(),srcRect.getTop());if(this._uSrcEnd.IsUsed())this._uSrcEnd.SetBatch2(srcRect.getRight(),srcRect.getBottom());if(this._uSrcOriginStart.IsUsed())this._uSrcOriginStart.SetBatch2(srcOriginRect.getLeft(),srcOriginRect.getTop());if(this._uSrcOriginEnd.IsUsed())this._uSrcOriginEnd.SetBatch2(srcOriginRect.getRight(),
srcOriginRect.getBottom());if(this._uLayoutStart.IsUsed())this._uLayoutStart.SetBatch2(layoutRect.getLeft(),layoutRect.getTop());if(this._uLayoutEnd.IsUsed())this._uLayoutEnd.SetBatch2(layoutRect.getTop(),layoutRect.getBottom());if(this._uSeconds.IsUsed())this._uSeconds.SetBatch1(time)}IsAnimated(){return this._animated}UpdateMatP(matP,force){if(this._hasCurrentMatP&&!force)return;if(this._isDeviceTransform)return;if(this._uMatP.IsUsed())this._uMatP.UpdateMatrix4fv(matP);this._hasCurrentMatP=true}SetMatPStale(){this._hasCurrentMatP=
false}UpdateMatMV(matMV,force){if(this._hasCurrentMatMV&&!force)return;if(this._isDeviceTransform)return;if(this._uMatMV.IsUsed())this._uMatMV.UpdateMatrix4fv(matMV);this._hasCurrentMatMV=true}SetMatMVStale(){this._hasCurrentMatMV=false}_UpdateDeviceTransformUniforms(matP){if(!this._isDeviceTransform)throw new Error("not device transform shader");this._uMatP.UpdateMatrix4fv(matP);const renderer=this._renderer;const scrollX=renderer.GetWidth()/2;const scrollY=renderer.GetHeight()/2;const tempMat4=
renderer.CalculateLookAtModelView2(scrollX,scrollY,renderer.GetDefaultCameraZ()*self.devicePixelRatio,scrollX,scrollY,0);this._uMatMV.UpdateMatrix4fv(tempMat4)}UpdateColor(c){if(this._uColor.IsUsed())this._uColor.Update4f(c[0],c[1],c[2],c[3])}static GetReservedUniformNames(){return RESERVED_UNIFORM_NAMES}static GetDefaultVertexShaderSource(useHighP){const texPrecision=useHighP?"highmedp":"mediump";return[`#ifdef GL_FRAGMENT_PRECISION_HIGH`,`#define highmedp highp`,`#else`,`#define highmedp mediump`,
`#endif`,`attribute highp vec3 aPos;`,`attribute ${texPrecision} vec2 aTex;`,`varying ${texPrecision} vec2 vTex;`,`uniform highp mat4 matP;`,`uniform highp mat4 matMV;`,`void main(void) {`,`	gl_Position = matP * matMV * vec4(aPos, 1.0);`,`	vTex = aTex;`,`}`].join("\n")}static GetTextureFillFragmentShaderSource(){return["varying mediump vec2 vTex;","uniform lowp vec4 color;","uniform lowp sampler2D samplerFront;","void main(void) {","\tgl_FragColor = texture2D(samplerFront, vTex) * color;","}"].join("\n")}static GetTilemapFragmentShaderSource(){return["#ifdef GL_FRAGMENT_PRECISION_HIGH",
"#define highmedp highp","#else","#define highmedp mediump","#endif","varying highmedp vec2 vTex;","uniform lowp vec4 color;","uniform lowp sampler2D samplerFront;","uniform highmedp vec2 srcStart;","uniform highmedp vec2 pixelSize;","uniform highmedp vec2 tileSize;","uniform highmedp vec2 tileSpacing;","void main(void) {","\thighmedp vec2 tile = floor(vTex);","\thighmedp vec2 tex = fract(vTex);","\thighmedp vec2 tileOrigin = srcStart + tile * (tileSize + tileSpacing);","\thighmedp vec2 lowerBound = tileOrigin + pixelSize / 2.0;",
"\thighmedp vec2 upperBound = tileOrigin + tileSize - pixelSize / 2.0;","\tgl_FragColor = texture2D(samplerFront, clamp(tex, lowerBound, upperBound), -16.0) * color;","}"].join("\n")}static GetPointVertexShaderSource(webglVersion){return C3.Gfx.WebGLShaderProgram.GetPointVertexShaderSource_WebGL1()}static GetPointFragmentShaderSource(webglVersion){return C3.Gfx.WebGLShaderProgram.GetPointFragmentShaderSource_WebGL1()}static GetPointVertexShaderSource_WebGL1(){return["attribute vec4 aPoints;","varying float pointOpacity;",
"uniform float zElevation;","uniform mat4 matP;","uniform mat4 matMV;","void main(void) {","\tgl_Position = matP * matMV * vec4(aPoints.xy, zElevation, 1.0);","\tgl_PointSize = aPoints.z;","\tpointOpacity = aPoints.w;","}"].join("\n")}static GetPointFragmentShaderSource_WebGL1(){return["uniform lowp sampler2D samplerFront;","varying lowp float pointOpacity;","uniform mediump vec2 pointTexStart;","uniform mediump vec2 pointTexEnd;","uniform lowp vec4 color;","void main(void) {","\tgl_FragColor = texture2D(samplerFront, mix(pointTexStart, pointTexEnd, gl_PointCoord)) * color * pointOpacity;",
"}"].join("\n")}static GetColorFillFragmentShaderSource(){return["uniform lowp vec4 color;","void main(void) {","\tgl_FragColor = color;","}"].join("\n")}static GetLinearGradientFillFragmentShaderSource(){return["precision lowp float;","varying mediump vec2 vTex;","uniform vec4 color;","uniform vec4 color2_;","vec3 fromLinear(vec3 linearRGB)","{","\tbvec3 cutoff = lessThan(linearRGB, vec3(0.0031308));","\tvec3 higher = vec3(1.055) * pow(abs(linearRGB), vec3(1.0/2.4)) - vec3(0.055);","\tvec3 lower = linearRGB * vec3(12.92);",
"\treturn mix(higher, lower, vec3(cutoff));","}","vec3 toLinear(vec3 sRGB)","{","\tbvec3 cutoff = lessThan(sRGB, vec3(0.04045));","\tvec3 higher = pow(abs((sRGB + vec3(0.055))/vec3(1.055)), vec3(2.4));","\tvec3 lower = sRGB/vec3(12.92);","\treturn mix(higher, lower, vec3(cutoff));","}","void main(void) {","\tvec3 linearGrad = mix(toLinear(color.rgb), toLinear(color2_.rgb), vTex.x);","\tfloat a = mix(color.a, color2_.a, vTex.x);","\tgl_FragColor = vec4(fromLinear(linearGrad) * a, a);","}"].join("\n")}static GetSmoothLineFillFragmentShaderSource(){return["varying mediump vec2 vTex;",
"uniform lowp vec4 color;","void main(void) {","\tlowp float f = 1.0 - abs(vTex.y - 0.5) * 2.0;","\tgl_FragColor = color * f;","}"].join("\n")}static GetHardEllipseFillFragmentShaderSource(){return["varying mediump vec2 vTex;","uniform lowp vec4 color;","void main(void) {","\tmediump vec2 diff = vTex - vec2(0.5, 0.5);","\tmediump vec2 diffSq = diff * diff;","\tmediump float f = step(diffSq.x + diffSq.y, 0.25);","\tgl_FragColor = color * f;","}"].join("\n")}static GetHardEllipseOutlineFragmentShaderSource(){return["varying mediump vec2 vTex;",
"uniform lowp vec4 color;","uniform mediump vec2 pixelSize;","uniform mediump float outlineThickness;","void main(void) {","\tmediump vec2 diff = vTex - vec2(0.5, 0.5);","\tmediump vec2 diffSq = diff * diff;","\tmediump float distSq = diffSq.x + diffSq.y;","\tmediump vec2 norm = normalize(diff);","\tmediump vec2 halfNorm = norm * 0.5;","\tmediump float innerF = step(distSq, 0.25);","\tmediump vec2 innerEdge = halfNorm - pixelSize * norm * outlineThickness;","\tmediump vec2 innerEdgeSq = innerEdge * innerEdge;",
"\tmediump float outerF = step(innerEdgeSq.x + innerEdgeSq.y, distSq);","\tgl_FragColor = color * innerF * outerF;","}"].join("\n")}static GetSmoothEllipseFillFragmentShaderSource(){return["varying mediump vec2 vTex;","uniform lowp vec4 color;","uniform mediump vec2 pixelSize;","void main(void) {","\tmediump vec2 diff = vTex - vec2(0.5, 0.5);","\tmediump vec2 diffSq = diff * diff;","\tmediump vec2 norm = normalize(diff);","\tmediump vec2 halfNorm = norm * 0.5;","\tmediump vec2 halfNormSq = halfNorm * halfNorm;",
"\tmediump vec2 innerEdge = halfNorm - pixelSize * norm;","\tmediump vec2 innerEdgeSq = innerEdge * innerEdge;","\tmediump float f = smoothstep(halfNormSq.x + halfNormSq.y, innerEdgeSq.x + innerEdgeSq.y, diffSq.x + diffSq.y);","\tgl_FragColor = color * f;","}"].join("\n")}static GetSmoothEllipseOutlineFragmentShaderSource(){return["varying mediump vec2 vTex;","uniform lowp vec4 color;","uniform mediump vec2 pixelSize;","uniform mediump float outlineThickness;","void main(void) {","\tmediump vec2 diff = vTex - vec2(0.5, 0.5);",
"\tmediump vec2 diffSq = diff * diff;","\tmediump float distSq = diffSq.x + diffSq.y;","\tmediump vec2 norm = normalize(diff);","\tmediump vec2 halfNorm = norm * 0.5;","\tmediump vec2 halfNormSq = halfNorm * halfNorm;","\tmediump vec2 pxNorm = pixelSize * norm;","\tmediump vec2 innerEdge1 = halfNorm - pxNorm;","\tmediump vec2 innerEdge1Sq = innerEdge1 * innerEdge1;","\tmediump float innerF = smoothstep(halfNormSq.x + halfNormSq.y, innerEdge1Sq.x + innerEdge1Sq.y, distSq);","\tmediump vec2 innerEdge2 = halfNorm - pxNorm * outlineThickness;",
"\tmediump vec2 innerEdge2Sq = innerEdge2 * innerEdge2;","\tmediump vec2 innerEdge3 = halfNorm - pxNorm * (outlineThickness + 1.0);","\tmediump vec2 innerEdge3Sq = innerEdge3 * innerEdge3;","\tmediump float outerF = smoothstep(innerEdge3Sq.x + innerEdge3Sq.y, innerEdge2Sq.x + innerEdge2Sq.y, distSq);","\tgl_FragColor = color * innerF * outerF;","}"].join("\n")}};

}

// ../lib/gfx/webgl/shaderUniform.js
{
'use strict';const C3=self.C3;const glMatrix=self.glMatrix;const mat4=glMatrix.mat4;const TYPE_SIZES=new Map([["float",1],["percent",1],["sampler",1],["vec2",2],["vec3",3],["color",3],["vec4",4],["mat4",16]]);
C3.Gfx.WebGLShaderUniform=class WebGLShaderUniform{constructor(owner,name,type){if(!TYPE_SIZES.has(type))throw new Error("invalid uniform type");this._owner=owner;this._gl=this._owner.GetWebGLContext();this._name=name;this._type=type;this._isColorType=this._type==="color";this._location=this._gl.getUniformLocation(this._owner.GetShaderProgram(),name);this._isUsed=!!this._location;const typeSize=TYPE_SIZES.get(type);this._lastValue=new Float32Array(typeSize);this._lastBatchValue=new Float32Array(typeSize)}Release(){this._owner=
null;this._gl=null;this._location=null}IsUsed(){return this._isUsed}GetType(){return this._type}IsColorType(){return this._isColorType}Init1f(v0){if(!this.IsUsed())return;this._lastValue[0]=v0;this._lastBatchValue.set(this._lastValue);this._gl.uniform1f(this._location,v0)}Init1i(v0){if(!this.IsUsed())return;this._lastValue[0]=v0;this._lastBatchValue.set(this._lastValue);this._gl.uniform1i(this._location,v0)}Init2f(v0,v1){if(!this.IsUsed())return;this._lastValue[0]=v0;this._lastValue[1]=v1;this._lastBatchValue.set(this._lastValue);
this._gl.uniform2f(this._location,v0,v1)}Init3f(v0,v1,v2){if(!this.IsUsed())return;this._lastValue[0]=v0;this._lastValue[1]=v1;this._lastValue[2]=v2;this._lastBatchValue.set(this._lastValue);this._gl.uniform3f(this._location,v0,v1,v2)}Init4f(v0,v1,v2,v3){if(!this.IsUsed())return;this._lastValue[0]=v0;this._lastValue[1]=v1;this._lastValue[2]=v2;this._lastValue[3]=v3;this._lastBatchValue.set(this._lastValue);this._gl.uniform4f(this._location,v0,v1,v2,v3)}Update1f(v0){v0=Math.fround(v0);const lastValue=
this._lastValue;if(lastValue[0]===v0)return;lastValue[0]=v0;this._gl.uniform1f(this._location,v0)}Update1i(v0){const lastValue=this._lastValue;if(lastValue[0]===v0)return;lastValue[0]=v0;this._gl.uniform1i(this._location,v0)}Update2f(v0,v1){v0=Math.fround(v0);v1=Math.fround(v1);const lastValue=this._lastValue;if(lastValue[0]===v0&&lastValue[1]===v1)return;lastValue[0]=v0;lastValue[1]=v1;this._gl.uniform2f(this._location,v0,v1)}Update3f(v0,v1,v2){v0=Math.fround(v0);v1=Math.fround(v1);v2=Math.fround(v2);
const lastValue=this._lastValue;if(lastValue[0]===v0&&lastValue[1]===v1&&lastValue[2]===v2)return;lastValue[0]=v0;lastValue[1]=v1;lastValue[2]=v2;this._gl.uniform3f(this._location,v0,v1,v2)}Update4f(v0,v1,v2,v3){v0=Math.fround(v0);v1=Math.fround(v1);v2=Math.fround(v2);v3=Math.fround(v3);const lastValue=this._lastValue;if(lastValue[0]===v0&&lastValue[1]===v1&&lastValue[2]===v2&&lastValue[3]===v3)return;lastValue[0]=v0;lastValue[1]=v1;lastValue[2]=v2;lastValue[3]=v3;this._gl.uniform4f(this._location,
v0,v1,v2,v3)}UpdateMatrix4fv(m){const lastValue=this._lastValue;if(mat4.exactEquals(lastValue,m))return;C3.typedArraySet16(lastValue,m,0);this._gl.uniformMatrix4fv(this._location,false,m)}IsSetToCustomInBatch(p){const batchValue=this._lastBatchValue;if(this.IsColorType())return batchValue[0]===Math.fround(p.getR())&&batchValue[1]===Math.fround(p.getG())&&batchValue[2]===Math.fround(p.getB());else return batchValue[0]===Math.fround(p)}SetBatchValueCustom(p){const batchValue=this._lastBatchValue;if(this.IsColorType()){batchValue[0]=
p.getR();batchValue[1]=p.getG();batchValue[2]=p.getB()}else batchValue[0]=p}IsSetTo1InBatch(x){return this._lastBatchValue[0]===Math.fround(x)}IsSetTo2InBatch(x,y){const batchValue=this._lastBatchValue;return batchValue[0]===Math.fround(x)&&batchValue[1]===Math.fround(y)}SetBatch1(x){this._lastBatchValue[0]=x}SetBatch2(x,y){const batchValue=this._lastBatchValue;batchValue[0]=x;batchValue[1]=y}};

}

// ../lib/gfx/webgl/batchJob.js
{
'use strict';const C3=self.C3;const glMatrix=self.glMatrix;const vec4=glMatrix.vec4;const mat4=glMatrix.mat4;const BATCH_NULL=0;const BATCH_QUAD=1;const BATCH_SETTEXTURE=2;const BATCH_SETCOLOR=3;const BATCH_SETBLEND=4;const BATCH_SETVIEWPORT=5;const BATCH_SETPROJECTION=6;const BATCH_SETMODELVIEW=7;const BATCH_SETRENDERTARGET=8;const BATCH_CLEARSURFACE=9;const BATCH_CLEARRECT=10;const BATCH_POINTS=11;const BATCH_SETPROGRAM=12;const BATCH_SETPROGRAMPARAMETERS=13;const BATCH_INVALIDATEFRAMEBUFFER=14;
const BATCH_SETPOINTTEXCOORDS=15;const BATCH_SETTILEMAPINFO=16;const BATCH_BLITFRAMEBUFFER=17;const BATCH_STARTQUERY=18;const BATCH_ENDQUERY=19;const BATCH_SETELLIPSEPARAMS=20;const BATCH_SETGRADIENTCOLOR=21;const BATCH_CLEARDEPTH=22;const BATCH_SETDEPTHENABLED=23;const BATCH_COPLANAR_STARTSTENCILPASS=24;const BATCH_COPLANAR_STARTCOLORPASS=25;const BATCH_COPLANAR_RESTORE=26;
C3.Gfx.BatchState=class BatchState{constructor(renderer){this.renderer=renderer;this.currentMV=mat4.create();this.currentMatP=mat4.create();this.currentFramebuffer=null;this.currentColor=vec4.fromValues(1,1,1,1);this.currentShader=null;this.pointTexCoords=new C3.Rect;this.clearColor=C3.New(C3.Color,0,0,0,0)}};
C3.Gfx.WebGLBatchJob=class WebGLBatchJob{constructor(batchState){const arrayBuffer=new ArrayBuffer(96);this._type=0;this._batchState=batchState;this._gl=batchState.renderer.GetContext();this._startIndex=0;this._indexCount=0;this._texParam=null;this._mat4param=new Float32Array(arrayBuffer,0,16);this._colorParam=new Float32Array(arrayBuffer,64,4);this._srcOriginRect=new Float32Array(arrayBuffer,80,4);this._shaderParams=[]}InitQuad(startIndex,indexCount){this._type=BATCH_QUAD;this._startIndex=startIndex;
this._indexCount=indexCount}DoQuad(){const gl=this._gl;gl.drawElements(gl.TRIANGLES,this._indexCount,gl.UNSIGNED_SHORT,this._startIndex)}InitSetTexture(rendererTex){this._type=BATCH_SETTEXTURE;this._texParam=rendererTex}DoSetTexture(){const gl=this._gl;const texParam=this._texParam;gl.bindTexture(gl.TEXTURE_2D,texParam?texParam._GetTexture():null)}InitSetColor(c){this._type=BATCH_SETCOLOR;c.writeToTypedArray(this._colorParam,0)}DoSetColor(){const c=this._colorParam;const batchState=this._batchState;
vec4.copy(batchState.currentColor,c);batchState.currentShader.UpdateColor(c)}InitSetGradientColor(c){this._type=BATCH_SETGRADIENTCOLOR;c.writeToTypedArray(this._colorParam,0)}DoSetGradientColor(){const c=this._colorParam;const s=this._batchState.currentShader;if(s._uColor2.IsUsed())s._uColor2.Update4f(c[0],c[1],c[2],c[3])}InitSetBlend(s,d){this._type=BATCH_SETBLEND;this._startIndex=s;this._indexCount=d}DoSetBlend(){this._gl.blendFunc(this._startIndex,this._indexCount)}InitSetViewport(x,y,w,h){this._type=
BATCH_SETVIEWPORT;const colorParam=this._colorParam;colorParam[0]=x;colorParam[1]=y;colorParam[2]=w;colorParam[3]=h}DoSetViewport(){const colorParam=this._colorParam;this._gl.viewport(colorParam[0],colorParam[1],colorParam[2],colorParam[3])}InitSetProjection(m){this._type=BATCH_SETPROJECTION;mat4.copy(this._mat4param,m)}DoSetProjection(){const batchState=this._batchState;const allShaderPrograms=batchState.renderer._allShaderPrograms;const currentShader=batchState.currentShader;const mat4param=this._mat4param;
for(let i=0,len=allShaderPrograms.length;i<len;++i){const s=allShaderPrograms[i];if(s===currentShader)s.UpdateMatP(mat4param,true);else s.SetMatPStale()}mat4.copy(batchState.currentMatP,mat4param)}InitSetModelView(m){this._type=BATCH_SETMODELVIEW;mat4.copy(this._mat4param,m)}DoSetModelView(){const batchState=this._batchState;const allShaderPrograms=batchState.renderer._allShaderPrograms;const currentShader=batchState.currentShader;const mat4param=this._mat4param;for(let i=0,len=allShaderPrograms.length;i<
len;++i){const s=allShaderPrograms[i];if(s===currentShader)s.UpdateMatMV(mat4param,true);else s.SetMatMVStale()}mat4.copy(batchState.currentMV,mat4param)}InitSetRenderTarget(renderTarget){this._type=BATCH_SETRENDERTARGET;this._texParam=renderTarget}DoSetRenderTarget(){const gl=this._gl;const renderTarget=this._texParam;const batchState=this._batchState;if(renderTarget){const fbo=renderTarget._GetFramebuffer();batchState.currentFramebuffer=fbo;gl.bindFramebuffer(gl.FRAMEBUFFER,fbo)}else{batchState.currentFramebuffer=
null;gl.bindFramebuffer(gl.FRAMEBUFFER,null)}}InitClearSurface(c){this._type=BATCH_CLEARSURFACE;c.writeToTypedArray(this._mat4param,0)}InitClearSurface2(r,g,b,a){this._type=BATCH_CLEARSURFACE;const c=this._mat4param;c[0]=r;c[1]=g;c[2]=b;c[3]=a}DoClearSurface(){const gl=this._gl;const mat4param=this._mat4param;const batchState=this._batchState;const renderer=batchState.renderer;const lastClearColor=batchState.clearColor;const debugSkipScissor=renderer._isScissorViewport&&C3.isDebug;if(debugSkipScissor)gl.disable(gl.SCISSOR_TEST);
const r=mat4param[0];const g=mat4param[1];const b=mat4param[2];const a=mat4param[3];if(!lastClearColor.equalsRgba(r,g,b,a)){gl.clearColor(r,g,b,a);lastClearColor.setRgba(r,g,b,a)}gl.clear(gl.COLOR_BUFFER_BIT);if(debugSkipScissor)gl.enable(gl.SCISSOR_TEST)}InitClearRect(x,y,w,h,r,g,b,a){this._type=BATCH_CLEARRECT;const m=this._mat4param;m[0]=x;m[1]=y;m[2]=w;m[3]=h;m[4]=r;m[5]=g;m[6]=b;m[7]=a}DoClearRectangle(){const gl=this._gl;const mat4param=this._mat4param;const batchState=this._batchState;const renderer=
batchState.renderer;const lastClearColor=batchState.clearColor;if(!renderer._isScissorViewport)gl.enable(gl.SCISSOR_TEST);gl.scissor(mat4param[0],mat4param[1],mat4param[2],mat4param[3]);const r=mat4param[4];const g=mat4param[5];const b=mat4param[6];const a=mat4param[7];if(!lastClearColor.equalsRgba(r,g,b,a)){gl.clearColor(r,g,b,a);lastClearColor.setRgba(r,g,b,a)}gl.clear(gl.COLOR_BUFFER_BIT);if(!renderer._isScissorViewport)gl.disable(gl.SCISSOR_TEST);else gl.scissor(0,0,renderer._viewportScissorWidth,
renderer._viewportScissorHeight)}InitSetPointTexCoords(rect){this._type=BATCH_SETPOINTTEXCOORDS;rect.writeToTypedArray(this._mat4param,0)}DoSetPointTextureCoords(){const mat4param=this._mat4param;this._batchState.pointTexCoords.set(mat4param[0],mat4param[1],mat4param[2],mat4param[3])}InitPoints(startIndex,z){this._type=BATCH_POINTS;this._startIndex=startIndex;this._indexCount=1;this._mat4param[0]=z}DoPoints(){const gl=this._gl;const batchState=this._batchState;const renderer=batchState.renderer;const s=
renderer._spPoints;gl.useProgram(s._shaderProgram);s.UpdateMatP(batchState.currentMatP,false);s.UpdateMatMV(batchState.currentMV,false);const ptc=batchState.pointTexCoords;if(s._uPointTexStart.IsUsed())s._uPointTexStart.Update2f(ptc.getLeft(),ptc.getTop());if(s._uPointTexEnd.IsUsed())s._uPointTexEnd.Update2f(ptc.getRight(),ptc.getBottom());const z=this._mat4param[0];if(s._uZElevation.IsUsed())s._uZElevation.Update1f(z);if(s._uColor.IsUsed()){const c=batchState.currentColor;s._uColor.Update4f(c[0],
c[1],c[2],c[3])}gl.drawArrays(gl.POINTS,this._startIndex/4,this._indexCount);gl.useProgram(batchState.currentShader._shaderProgram)}InitSetProgram(program){this._type=BATCH_SETPROGRAM;this._texParam=program}DoSetProgram(){const gl=this._gl;const batchState=this._batchState;const s=this._texParam;batchState.currentShader=s;gl.useProgram(s._shaderProgram);s.UpdateMatP(batchState.currentMatP,false);s.UpdateMatMV(batchState.currentMV,false);if(s._uColor.IsUsed()){const c=batchState.currentColor;s._uColor.Update4f(c[0],
c[1],c[2],c[3])}}InitSetProgramParameters(){this._type=BATCH_SETPROGRAMPARAMETERS}DoSetProgramParameters(){const s=this._batchState.currentShader;if(s._hasAnyOptionalUniforms)this._DoSetOptionalUniformProgramParameters(s);if(s._uCustomParameters.length)this._DoUpdateCustomProgramParameters(s)}_DoSetOptionalUniformProgramParameters(s){const gl=this._gl;const mat4param=this._mat4param;const colorParam=this._colorParam;const srcOriginRect=this._srcOriginRect;if(s._uSamplerBack.IsUsed()){const renderer=
this._batchState.renderer;const texParam=this._texParam;if(renderer._lastTexture1!==texParam){gl.activeTexture(gl.TEXTURE1);gl.bindTexture(gl.TEXTURE_2D,texParam?texParam._GetTexture():null);renderer._lastTexture1=texParam;gl.activeTexture(gl.TEXTURE0)}}if(s._uPixelSize.IsUsed())s._uPixelSize.Update2f(mat4param[0],mat4param[1]);if(s._uDestStart.IsUsed())s._uDestStart.Update2f(mat4param[2],mat4param[3]);if(s._uDestEnd.IsUsed())s._uDestEnd.Update2f(mat4param[4],mat4param[5]);if(s._uLayerScale.IsUsed())s._uLayerScale.Update1f(mat4param[6]);
if(s._uLayerAngle.IsUsed())s._uLayerAngle.Update1f(mat4param[7]);if(s._uSrcStart.IsUsed())s._uSrcStart.Update2f(mat4param[12],mat4param[13]);if(s._uSrcEnd.IsUsed())s._uSrcEnd.Update2f(mat4param[14],mat4param[15]);if(s._uSrcOriginStart.IsUsed())s._uSrcOriginStart.Update2f(srcOriginRect[0],srcOriginRect[1]);if(s._uSrcOriginEnd.IsUsed())s._uSrcOriginEnd.Update2f(srcOriginRect[2],srcOriginRect[3]);if(s._uLayoutStart.IsUsed())s._uLayoutStart.Update2f(colorParam[0],colorParam[1]);if(s._uLayoutEnd.IsUsed())s._uLayoutEnd.Update2f(colorParam[2],
colorParam[3]);if(s._uSeconds.IsUsed())s._uSeconds.Update1f(this._startIndex)}_DoUpdateCustomProgramParameters(s){const uCustomParameters=s._uCustomParameters;const shaderParams=this._shaderParams;for(let i=0,len=uCustomParameters.length;i<len;++i){const shaderUniform=uCustomParameters[i];const paramValue=shaderParams[i];if(shaderUniform.IsColorType())shaderUniform.Update3f(paramValue.getR(),paramValue.getG(),paramValue.getB());else shaderUniform.Update1f(paramValue)}}InitInvalidateFramebuffer(fbo){this._type=
BATCH_INVALIDATEFRAMEBUFFER;this._texParam=fbo}DoInvalidateFramebuffer(){const gl=this._gl;const fbo=this._texParam;const lastBoundFbo=this._batchState.currentFramebuffer;if(fbo!==lastBoundFbo)gl.bindFramebuffer(gl.FRAMEBUFFER,fbo);gl.invalidateFramebuffer(gl.FRAMEBUFFER,[gl.COLOR_ATTACHMENT0]);if(fbo!==lastBoundFbo)gl.bindFramebuffer(gl.FRAMEBUFFER,lastBoundFbo)}InitBlitFramebuffer(sourceRenderTarget,destRenderTarget,mode){this._type=BATCH_BLITFRAMEBUFFER;const mat4param=this._mat4param;const renderer=
this._batchState.renderer;mat4param[0]=sourceRenderTarget.GetWidth();mat4param[1]=sourceRenderTarget.GetHeight();mat4param[2]=destRenderTarget?destRenderTarget.GetWidth():renderer.GetWidth();mat4param[3]=destRenderTarget?destRenderTarget.GetHeight():renderer.GetHeight();mat4param[4]=sourceRenderTarget.IsLinearSampling()?1:0;mat4param[5]=mode==="stretch";const shaderParams=this._shaderParams;C3.clearArray(shaderParams);shaderParams.push(sourceRenderTarget._GetFramebuffer());shaderParams.push(destRenderTarget?
destRenderTarget._GetFramebuffer():null)}DoBlitFramebuffer(){const mat4param=this._mat4param;const shaderParams=this._shaderParams;const gl=this._gl;const srcWidth=mat4param[0];const srcHeight=mat4param[1];const destWidth=mat4param[2];const destHeight=mat4param[3];const isLinearSampling=mat4param[4]!==0;const isStretch=mat4param[5]!==0;const srcFbo=shaderParams[0];const destFbo=shaderParams[1];gl.bindFramebuffer(gl.READ_FRAMEBUFFER,srcFbo);gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER,destFbo);if(isStretch)gl.blitFramebuffer(0,
0,srcWidth,srcHeight,0,0,destWidth,destHeight,gl.COLOR_BUFFER_BIT,isLinearSampling?gl.LINEAR:gl.NEAREST);else{const w=Math.min(srcWidth,destWidth);const h=Math.min(srcHeight,destHeight);const srcOffY=Math.max(srcHeight-destHeight,0);const destOffY=Math.max(destHeight-srcHeight,0);gl.blitFramebuffer(0,srcOffY,w,h+srcOffY,0,destOffY,w,h+destOffY,gl.COLOR_BUFFER_BIT,gl.NEAREST)}}InitStartQuery(query){this._type=BATCH_STARTQUERY;this._texParam=query}DoStartQuery(){this._texParam.BeginTimeElapsed();this._texParam=
null}InitEndQuery(query){this._type=BATCH_ENDQUERY;this._texParam=query}DoEndQuery(){this._texParam.EndTimeElapsed();this._texParam=null}InitSetEllipseParams(pixelW,pixelH,outlineThickness){this._type=BATCH_SETELLIPSEPARAMS;const mat4param=this._mat4param;mat4param[0]=pixelW;mat4param[1]=pixelH;mat4param[2]=outlineThickness}DoSetEllipseParams(){const s=this._batchState.currentShader;const mat4param=this._mat4param;if(s._uPixelSize.IsUsed())s._uPixelSize.Update2f(mat4param[0],mat4param[1]);if(s._uOutlineThickness.IsUsed())s._uOutlineThickness.Update1f(mat4param[2])}InitSetTilemapInfo(srcRect,
textureWidth,textureHeight,tileWidth,tileHeight,tileSpacingX,tileSpacingY){this._type=BATCH_SETTILEMAPINFO;const mat4param=this._mat4param;srcRect.writeToTypedArray(mat4param,0);mat4param[4]=1/textureWidth;mat4param[5]=1/textureHeight;mat4param[6]=tileWidth/textureWidth;mat4param[7]=tileHeight/textureHeight;mat4param[8]=tileSpacingX/textureWidth;mat4param[9]=tileSpacingY/textureHeight}DoSetTilemapInfo(){const s=this._batchState.currentShader;const mat4param=this._mat4param;if(s._uSrcStart.IsUsed())s._uSrcStart.Update2f(mat4param[0],
mat4param[1]);if(s._uPixelSize.IsUsed())s._uPixelSize.Update2f(mat4param[4],mat4param[5]);if(s._uTileSize.IsUsed())s._uTileSize.Update2f(mat4param[6],mat4param[7]);if(s._uTileSpacing.IsUsed())s._uTileSpacing.Update2f(mat4param[8],mat4param[9])}InitClearDepth(){this._type=BATCH_CLEARDEPTH}DoClearDepth(){const gl=this._gl;gl.clear(gl.DEPTH_BUFFER_BIT)}InitSetDepthEnabled(e){this._type=BATCH_SETDEPTHENABLED;this._startIndex=e?1:0}DoSetDepthEnabled(){const gl=this._gl;if(this._startIndex===0){gl.disable(gl.DEPTH_TEST);
gl.depthMask(false)}else{gl.enable(gl.DEPTH_TEST);gl.depthMask(true)}}InitCoplanarStartStencilPass(){this._type=BATCH_COPLANAR_STARTSTENCILPASS}DoCoplanarStartStencilPass(){const gl=this._gl;gl.clear(gl.STENCIL_BUFFER_BIT);gl.enable(gl.STENCIL_TEST);gl.stencilFunc(gl.ALWAYS,1,1);gl.stencilOp(gl.KEEP,gl.KEEP,gl.REPLACE);gl.colorMask(false,false,false,false)}InitCoplanarStartColorPass(){this._type=BATCH_COPLANAR_STARTCOLORPASS}DoCoplanarStartColorPass(){const gl=this._gl;gl.colorMask(true,true,true,
true);gl.stencilFunc(gl.EQUAL,1,1);gl.stencilOp(gl.KEEP,gl.KEEP,gl.KEEP)}InitCoplanarRestore(){this._type=BATCH_COPLANAR_RESTORE}DoCoplanarRestore(){const gl=this._gl;gl.disable(gl.STENCIL_TEST)}Run(){switch(this._type){case 1:this.DoQuad();return;case 2:this.DoSetTexture();return;case 3:this.DoSetColor();return;case 4:this.DoSetBlend();return;case 5:this.DoSetViewport();return;case 6:this.DoSetProjection();return;case 7:this.DoSetModelView();return;case 8:this.DoSetRenderTarget();return;case 9:this.DoClearSurface();
return;case 10:this.DoClearRectangle();return;case 11:this.DoPoints();return;case 12:this.DoSetProgram();return;case 13:this.DoSetProgramParameters();return;case 14:this.DoInvalidateFramebuffer();return;case 15:this.DoSetPointTextureCoords();return;case 16:this.DoSetTilemapInfo();return;case 17:this.DoBlitFramebuffer();return;case 18:this.DoStartQuery();return;case 19:this.DoEndQuery();return;case 20:this.DoSetEllipseParams();return;case 21:this.DoSetGradientColor();return;case 22:this.DoClearDepth();
return;case 23:this.DoSetDepthEnabled();return;case 24:this.DoCoplanarStartStencilPass();return;case 25:this.DoCoplanarStartColorPass();return;case 26:this.DoCoplanarRestore();return}}};

}

// ../lib/gfx/text.js
{
'use strict';const C3=self.C3;const MAX_TEXTURE_SIZE=2048;const EXTRA_LINE_HEIGHT=4;const DEFAULT_OPTS={timeout:60};const tempColor=new C3.Color(0,0,0,1);const VALID_HORIZ_ALIGNMENTS=new Set(["left","center","right"]);const VALID_VERT_ALIGNMENTS=new Set(["top","center","bottom"]);const VALID_WORD_WRAP_MODES=new Set(["word","character"]);const allRendererTexts=new Set;
if(C3.FontManager)C3.FontManager.addEventListener("fontload",e=>{const fontName=e.font.GetName();for(const f of allRendererTexts)if(f.IsBBCodeEnabled()||C3.equalsNoCase(f.GetFontName(),fontName))f._SetTextChanged()});function fillOrStrokeText(ctx,isStroke,text,x,y,maxWidth){if(isStroke)if(C3.Platform.BrowserEngine==="Gecko")ctx.strokeText(text,x,y,maxWidth);else ctx.strokeText(text,x,y);else if(C3.Platform.BrowserEngine==="Gecko")ctx.fillText(text,x,y,maxWidth);else ctx.fillText(text,x,y)}
function fillOrStrokeRect(ctx,isStroke,x,y,w,h){if(isStroke)ctx.strokeRect(x,y,w,h);else ctx.fillRect(x,y,w,h)}function ptToPx(pt){return pt*(4/3)}let didCheckFoundBoundingBoxSupport=false;let supportsFontBoundingBoxMeasurements=false;
C3.Gfx.RendererText=class RendererText{constructor(renderer,opts){opts=Object.assign({},DEFAULT_OPTS,opts);this._renderer=renderer;this._fontName="Arial";this._fontSize=16;this._fontSizeScale=1;this._lineHeight=0;this._isBold=false;this._isItalic=false;this._colorStr="black";this._isBBcodeEnabled=false;this.onloadfont=null;this._alreadyLoadedFonts=new Set;this._horizontalAlign="left";this._verticalAlign="top";this._text="";this._bbString=null;this._wrappedText=C3.New(C3.WordWrap);this._wrapMode="word";
this._textChanged=false;this._isUpdating=false;this._isAsync=true;this._drawMaxCharCount=-1;this._drawCharCount=0;this._cssWidth=0;this._cssHeight=0;this._width=0;this._height=0;this._zoom=1;this._changed=false;this._textCanvas=null;this._textContext=null;this._measureContext=null;this._measureContextTop=null;this._lastCanvasWidth=-1;this._lastCanvasHeight=-1;this._lastTextCanvasFont="";this._lastMeasureCanvasFont="";this._lastTextCanvasFillStyle="";this._lastTextCanvasOpacity=1;this._lastTextCanvasLineWidth=
1;this._measureTextCallback=(text,styles)=>this._MeasureText(text,styles);this._texture=null;this._textureWidth=0;this._textureHeight=0;this._rcTex=new C3.Rect;this._scaleFactor=1;this._needToRecreateTexture=false;this._textureTimeout=new C3.IdleTimeout(()=>{this.ReleaseTexture();this._SetTextCanvasSize(8,8)},opts.timeout);this.ontextureupdate=null;this._wasReleased=false;allRendererTexts.add(this)}Release(){this.onloadfont=null;this._alreadyLoadedFonts.clear();this._bbString=null;this._textCanvas=
null;this._textContext=null;this._measureContext=null;this._measureContextTop=null;this._measureTextCallback=null;this._textureTimeout.Release();this.ontextureupdate=null;this.ReleaseTexture();this._wrappedText.Clear();this._wrappedText=null;this._renderer=null;this._wasReleased=true;allRendererTexts.delete(this)}_SetChanged(){this._changed=true}_SetTextChanged(){this._SetChanged();this._wrappedText.Clear();this._textChanged=true}SetIsAsync(a){this._isAsync=!!a}IsAsync(){return this._isAsync}SetBBCodeEnabled(e){e=
!!e;if(this._isBBcodeEnabled===e)return;this._isBBcodeEnabled=e;const textBaseline=this._isBBcodeEnabled?"alphabetic":"top";if(this._textContext)this._textContext.textBaseline=textBaseline;if(this._measureContext)this._measureContext.textBaseline=textBaseline;this._SetTextChanged()}IsBBCodeEnabled(){return this._isBBcodeEnabled}SetFontName(fontName){if(!fontName)fontName="serif";if(this._fontName===fontName)return;this._fontName=fontName;this._SetTextChanged()}GetFontName(){return this._fontName}SetFontSize(fontSize){if(fontSize<
.1)fontSize=.1;if(this._fontSize===fontSize)return;this._fontSize=fontSize;this._SetTextChanged()}SetFontSizeScale(s){if(this._fontSizeScale===s)return;this._fontSizeScale=s;this._SetTextChanged()}SetLineHeight(h){if(this._lineHeight===h)return;this._lineHeight=h;this._SetChanged()}SetBold(bold){bold=!!bold;if(this._isBold===bold)return;this._isBold=bold;this._SetTextChanged()}SetItalic(italic){italic=!!italic;if(this._isItalic===italic)return;this._isItalic=italic;this._SetTextChanged()}SetDrawMaxCharacterCount(n){n=
Math.floor(n);if(this._drawMaxCharCount===n)return;this._drawMaxCharCount=n;this._SetChanged()}GetDrawMaxCharacterCount(){return this._drawMaxCharCount}_GetStyleTag(styles,tag){for(let i=styles.length-1;i>=0;--i){const s=styles[i];if(s.tag===tag)return s}return null}_HasStyleTag(styles,tag){return!!this._GetStyleTag(styles,tag)}_GetFontString(useCssUnits,styles){let ret=[];if(this._isBold||this._HasStyleTag(styles,"b"))ret.push("bold");if(this._isItalic||this._HasStyleTag(styles,"i"))ret.push("italic");
const sizeStyle=this._GetStyleTag(styles,"size");const fontSize=(sizeStyle?parseFloat(sizeStyle.param):this._fontSize)*this._fontSizeScale;if(useCssUnits)ret.push(fontSize+"pt");else ret.push(fontSize*this._scaleFactor*this._zoom*self.devicePixelRatio+"pt");let fontName=this._fontName;const fontStyle=this._GetStyleTag(styles,"font");if(fontStyle&&fontStyle.param){fontName=fontStyle.param;if(this.onloadfont&&!this._alreadyLoadedFonts.has(fontName)){this.onloadfont(fontName);this._alreadyLoadedFonts.add(fontName)}}if(fontName)ret.push('"'+
fontName+'"');return ret.join(" ")}SetColor(c){if(c instanceof C3.Color)c=c.getCssRgb();if(this._colorStr===c)return;this._colorStr=c;this._SetChanged()}SetColorRgb(r,g,b){tempColor.setRgb(r,g,b);this.SetColor(tempColor)}SetHorizontalAlignment(h){if(!VALID_HORIZ_ALIGNMENTS.has(h))throw new Error("invalid horizontal alignment");if(this._horizontalAlign===h)return;this._horizontalAlign=h;this._SetChanged()}SetVerticalAlignment(v){if(!VALID_VERT_ALIGNMENTS.has(v))throw new Error("invalid vertical alignment");
if(this._verticalAlign===v)return;this._verticalAlign=v;this._SetChanged()}SetWordWrapMode(m){if(!VALID_WORD_WRAP_MODES.has(m))throw new Error("invalid word wrap mode");if(this._wrapMode===m)return;this._wrapMode=m;this._SetTextChanged()}SetText(text){if(this._text===text)return;this._text=text;this._SetTextChanged()}SetSize(cssWidth,cssHeight,zoom){if(typeof zoom==="undefined")zoom=1;if(cssWidth<=0||cssWidth<=0)return;if(this._cssWidth===cssWidth&&this._cssHeight===cssHeight&&this._zoom===zoom)return;
if(this._zoom===1!==(zoom===1))this._needToRecreateTexture=true;const oldCssWidth=this._cssWidth;const oldZoom=this._zoom;this._cssWidth=cssWidth;this._cssHeight=cssHeight;this._zoom=zoom;const dpr=self.devicePixelRatio;this._width=this._cssWidth*this._zoom*dpr;this._height=this._cssHeight*this._zoom*dpr;const maxDim=Math.max(this._width,this._height);const maxTextureSize=Math.min(this._renderer.GetMaxTextureSize(),MAX_TEXTURE_SIZE);let scale=1;if(maxDim>maxTextureSize){scale=maxTextureSize/maxDim;
this._width=Math.min(this._width*scale,maxTextureSize);this._height=Math.min(this._height*scale,maxTextureSize)}this._scaleFactor=scale;if(this._textureWidth>0&&this._textureHeight>0&&this._zoom===oldZoom)this._rcTex.set(0,0,this._width/this._textureWidth,this._height/this._textureHeight);if(this._cssWidth!==oldCssWidth)this._SetTextChanged();else this._SetChanged()}GetWidth(){return this._width}GetHeight(){return this._height}GetTextWidth(){this._MaybeWrapText();return this._wrappedText.GetMaxLineWidth()}GetTextHeight(){this._MaybeWrapText();
return this._wrappedText.GetTotalLineHeight()+this._wrappedText.GetLineCount()*(this._lineHeight+EXTRA_LINE_HEIGHT)-this._lineHeight}GetTexture(){this._textureTimeout.Reset();this._MaybeUpdate();return this._texture}_MaybeUpdate(){if(this._texture&&!this._changed&&!this._textChanged)return;if(this._isUpdating)return;if(this._width<=0||this._height<=0)return;this._changed=false;this._isUpdating=true;if(this._isAsync)C3.Asyncify(()=>this._DoUpdate());else this._DoUpdate()}_DoUpdate(){if(this._wasReleased)return;
this._SetTextCanvasSize(Math.ceil(this._width),Math.ceil(this._height));this._MaybeWrapText();this._DrawTextToCanvas();this._UpdateTexture();this._textureTimeout.Reset();this._isUpdating=false}_SetTextCanvasSize(w,h){if(!this._textCanvas)this._textCanvas=C3.CreateCanvas(16,16);let wasReset=false;if(this._lastCanvasWidth!==w||this._lastCanvasHeight!==h){this._lastCanvasWidth=w;this._lastCanvasHeight=h;this._textCanvas.width=w;this._textCanvas.height=h;wasReset=true}if(!this._textContext){this._textContext=
this._textCanvas.getContext("2d");wasReset=true}if(wasReset){this._textContext.textBaseline=this._isBBcodeEnabled?"alphabetic":"top";this._textContext.font=this._lastTextCanvasFont;this._textContext.fillStyle=this._lastTextCanvasFillStyle;this._textContext.strokeStyle=this._lastTextCanvasFillStyle;this._textContext.globalAlpha=this._lastTextCanvasOpacity;this._textContext.lineWidth=this._lastTextCanvasLineWidth}else this._textContext.clearRect(0,0,w,h)}_MaybeCreateMeasureContext(){if(this._measureContext)return;
this._measureContext=C3.CreateCanvas(16,16).getContext("2d");this._measureContextTop=C3.CreateCanvas(16,16).getContext("2d");this._measureContext.textBaseline=this._isBBcodeEnabled?"alphabetic":"top";this._measureContextTop.textBaseline="top"}_SetMeasureFontString(fontString){if(this._lastMeasureCanvasFont===fontString)return;this._lastMeasureCanvasFont=fontString;this._measureContext.font=fontString;this._measureContextTop.font=fontString}_SupportsFontBoundingBoxMeasurements(){if(!didCheckFoundBoundingBoxSupport){didCheckFoundBoundingBoxSupport=
true;this._MaybeCreateMeasureContext();const textMetrics=this._measureContext.measureText("test");supportsFontBoundingBoxMeasurements=typeof textMetrics["fontBoundingBoxAscent"]==="number"&&typeof textMetrics["fontBoundingBoxDescent"]==="number"}return supportsFontBoundingBoxMeasurements}_MaybeWrapText(){if(!this._textChanged)return;this._MaybeCreateMeasureContext();if(this._isBBcodeEnabled&&(!this._bbString||this._bbString.toString()!==this._text))this._bbString=new C3.BBString(this._text,{noEscape:true});
this._wrappedText.WordWrap(this._isBBcodeEnabled?this._bbString.toFragmentList():this._text,this._measureTextCallback,this._cssWidth,this._wrapMode,0);this._textChanged=false}_MeasureText(text,styles){this._SetMeasureFontString(this._GetFontString(true,styles));const sizeStyle=this._GetStyleTag(styles,"size");const fontSize=(sizeStyle?parseFloat(sizeStyle.param):this._fontSize)*this._fontSizeScale;const textMetrics=this._measureContext.measureText(text);let topToAlphabeticDistance=0;if(this._isBBcodeEnabled&&
this._SupportsFontBoundingBoxMeasurements()){const textMetricsTop=this._measureContextTop.measureText(text);topToAlphabeticDistance=textMetrics["fontBoundingBoxAscent"]-textMetricsTop["fontBoundingBoxAscent"]}return{width:textMetrics.width,height:ptToPx(fontSize),fontBoundingBoxAscent:textMetrics["fontBoundingBoxAscent"]||0,fontBoundingBoxDescent:textMetrics["fontBoundingBoxDescent"]||0,topToAlphabeticDistance}}_SetDrawFontString(fontString){if(this._lastTextCanvasFont===fontString)return;this._lastTextCanvasFont=
fontString;this._textContext.font=fontString}_SetDrawCanvasColor(styleStr){if(this._lastTextCanvasFillStyle===styleStr)return;this._lastTextCanvasFillStyle=styleStr;this._textContext.fillStyle=styleStr;this._textContext.strokeStyle=styleStr}_SetDrawCanvasOpacity(o){if(this._lastTextCanvasOpacity===o)return;this._lastTextCanvasOpacity=o;this._textContext.globalAlpha=o}_SetDrawCanvasLineWith(w){if(this._lastTextCanvasLineWidth===w)return;this._lastTextCanvasLineWidth=w;this._textContext.lineWidth=w}_DrawTextToCanvas(){this._drawCharCount=
0;const scale=this._scaleFactor*this._zoom*self.devicePixelRatio;const lineSpaceHeight=(EXTRA_LINE_HEIGHT+this._lineHeight)*scale;let penY=0;const lines=this._wrappedText.GetLines();if(lines.length===0)return;const useFontBoundingBoxMeasurements=this._isBBcodeEnabled&&this._SupportsFontBoundingBoxMeasurements();let firstLineTextHeight=lines[0].height*scale;if(this._verticalAlign==="center"){const linesTotalHeight=lines.reduce((a,v)=>a+v.height*scale+lineSpaceHeight,0)-lineSpaceHeight;penY=Math.max(this._height/
2-linesTotalHeight/2,0);if(useFontBoundingBoxMeasurements)firstLineTextHeight=lines[0].topToAlphabeticDistance*scale}else if(this._verticalAlign==="bottom"){const linesTotalHeight=lines.reduce((a,v)=>a+v.height*scale+lineSpaceHeight,0)-this._lineHeight*scale;const lastLineDescentHeight=useFontBoundingBoxMeasurements?lines.at(-1).fontBoundingBoxDescent*scale:0;penY=this._height-linesTotalHeight-lastLineDescentHeight-2}for(let i=0,len=lines.length;i<len;++i){const line=lines[i];const curLineTextHeight=
line.height*scale;const startPenY=penY;if(this._isBBcodeEnabled){penY+=i===0?firstLineTextHeight:curLineTextHeight;if(i>0&&penY>this._height-EXTRA_LINE_HEIGHT*scale)break}else if(i>0&&penY>=this._height-curLineTextHeight)break;if(startPenY>=0)this._DrawTextLine(line,penY,scale);if(!this._isBBcodeEnabled)penY+=curLineTextHeight;penY+=lineSpaceHeight}}_DrawTextLine(line,penY,scale){let penX=0;if(this._horizontalAlign==="center")penX=(this._width-line.width*scale)/2;else if(this._horizontalAlign==="right")penX=
this._width-line.width*scale;for(const frag of line.fragments){this._DrawTextFragment(frag,penX,penY,scale,line.height);penX+=frag.width*scale}}_DrawTextFragment(frag,penX,penY,scale,lineHeight){const textContext=this._textContext;const lineFontScale=lineHeight/16;let fragWidth=frag.width*scale;const fragHeight=frag.height*scale;const fragFontScale=frag.height/16;const lineSpaceHeight=(EXTRA_LINE_HEIGHT+this._lineHeight)*scale;const styles=frag.styles;let text=frag.text;if(this._drawMaxCharCount!==
-1){if(this._drawCharCount>=this._drawMaxCharCount)return;if(this._drawCharCount+text.length>this._drawMaxCharCount){text=text.substr(0,this._drawMaxCharCount-this._drawCharCount);fragWidth=this._MeasureText(text,styles).width*scale}this._drawCharCount+=text.length}const backgroundStyle=this._GetStyleTag(styles,"background");const hasUnderline=this._HasStyleTag(styles,"u");const hasStrikethrough=this._HasStyleTag(styles,"s");if(C3.IsStringAllWhitespace(text)&&!backgroundStyle&&!hasUnderline&&!hasStrikethrough||
this._HasStyleTag(styles,"hide"))return;const offsetXStyle=this._GetStyleTag(styles,"offsetx");penX+=offsetXStyle?parseFloat(offsetXStyle.param)*scale:0;const offsetYStyle=this._GetStyleTag(styles,"offsety");penY+=offsetYStyle?parseFloat(offsetYStyle.param)*scale:0;if(backgroundStyle){this._SetDrawCanvasColor(backgroundStyle.param);textContext.fillRect(penX,penY-fragHeight,fragWidth,fragHeight+lineSpaceHeight)}const colorStyle=this._GetStyleTag(styles,"color");this._SetDrawCanvasColor(colorStyle?
colorStyle.param:this._colorStr);const opacityStyle=this._GetStyleTag(styles,"opacity");this._SetDrawCanvasOpacity(opacityStyle?parseFloat(opacityStyle.param)/100:1);const lineThicknessStyle=this._GetStyleTag(styles,"linethickness");const lineThicknessScale=lineThicknessStyle?parseFloat(lineThicknessStyle.param):1;const isStroke=this._HasStyleTag(styles,"stroke");if(isStroke)this._SetDrawCanvasLineWith(fragFontScale*.5*lineThicknessScale*this._scaleFactor*this._zoom*self.devicePixelRatio);this._SetDrawFontString(this._GetFontString(false,
styles));fillOrStrokeText(textContext,isStroke,text,penX,penY,fragWidth);if(!isStroke){this._SetDrawCanvasLineWith(fragFontScale*.5*lineThicknessScale*this._scaleFactor*this._zoom*self.devicePixelRatio);const outlineStyle=this._GetStyleTag(styles,"outline");if(outlineStyle){this._SetDrawCanvasColor(outlineStyle.param);fillOrStrokeText(textContext,true,text,penX,penY,fragWidth)}}this._SetDrawCanvasColor(colorStyle?colorStyle.param:this._colorStr);if(hasUnderline)fillOrStrokeRect(textContext,isStroke,
penX,penY+scale*lineFontScale,fragWidth,scale*lineFontScale*lineThicknessScale);if(hasStrikethrough){const defaultStrikeY=penY-fragHeight/4;const defaultStrikeHeight=scale*fragFontScale;const strikeYMid=defaultStrikeY+defaultStrikeHeight/2;textContext.fillRect(penX,strikeYMid-defaultStrikeHeight*lineThicknessScale/2,fragWidth,defaultStrikeHeight*lineThicknessScale)}}_UpdateTexture(){if(this._renderer.IsContextLost())return;this._textureWidth=Math.ceil(this._width);this._textureHeight=Math.ceil(this._height);
this._rcTex.set(0,0,this._width/this._textureWidth,this._height/this._textureHeight);if(this._needToRecreateTexture){this.ReleaseTexture();this._needToRecreateTexture=false}if(!this._texture)this._texture=this._renderer.CreateDynamicTexture(this._textureWidth,this._textureHeight,{mipMap:this._zoom===1,mipMapQuality:"high"});this._renderer.UpdateTexture(this._textCanvas,this._texture);if(this.ontextureupdate)this.ontextureupdate()}GetTexRect(){return this._rcTex}ReleaseTexture(){if(this._texture){if(!this._renderer.IsContextLost())this._renderer.DeleteTexture(this._texture);
this._texture=null}}static OnContextLost(){for(const rendererText of allRendererTexts)rendererText.ReleaseTexture()}static GetAll(){return allRendererTexts.values()}};

}

// ../lib/gfx/webgl/query.js
{
'use strict';const C3=self.C3;
class WebGLRealTimeElapsedQuery{constructor(renderer){this._gl=renderer.GetContext();this._version=renderer.GetWebGLVersionNumber();this._timerExt=renderer._GetDisjointTimerQueryExtension();this._query=null;this._isActive=false;this._hasResult=false;this._result=0;if(this._version===1)this._query=this._timerExt["createQueryEXT"]();else this._query=this._gl["createQuery"]()}Release(){this._DeleteQueryObject();this._gl=null;this._timerExt=null;this._hasResult=false}_DeleteQueryObject(){if(!this._query)return;if(this._version===
1)this._timerExt["deleteQueryEXT"](this._query);else this._gl["deleteQuery"](this._query);this._query=null}BeginTimeElapsed(){if(this._isActive)throw new Error("query already active");if(this._version===1)this._timerExt["beginQueryEXT"](this._timerExt["TIME_ELAPSED_EXT"],this._query);else this._gl["beginQuery"](this._timerExt["TIME_ELAPSED_EXT"],this._query);this._isActive=true}EndTimeElapsed(){if(!this._isActive)throw new Error("query not active");if(this._version===1)this._timerExt["endQueryEXT"](this._timerExt["TIME_ELAPSED_EXT"]);
else this._gl["endQuery"](this._timerExt["TIME_ELAPSED_EXT"]);this._isActive=false}CheckForResult(){if(!this._query||this._hasResult||this._isActive)return;let available=false;if(this._version===1)available=this._timerExt["getQueryObjectEXT"](this._query,this._timerExt["QUERY_RESULT_AVAILABLE_EXT"]);else available=this._gl["getQueryParameter"](this._query,this._gl["QUERY_RESULT_AVAILABLE"]);const disjoint=this._gl.getParameter(this._timerExt["GPU_DISJOINT_EXT"]);if(available&&!disjoint){if(this._version===
1)this._result=this._timerExt["getQueryObjectEXT"](this._query,this._timerExt["QUERY_RESULT_EXT"]);else this._result=this._gl["getQueryParameter"](this._query,this._gl["QUERY_RESULT"]);this._result/=1E9;this._hasResult=true}if(available||disjoint)this._DeleteQueryObject()}HasResult(){return this._hasResult}GetResult(){if(!this._hasResult)throw new Error("no result available");return this._result}}
C3.Gfx.WebGLTimeElapsedQuery=class WebGLTimeElapsedQuery{constructor(renderer){this._renderer=renderer;this._frameNumber=renderer.GetFrameNumber();this._isActive=false;this._parentQuery=null;this._isNested=false;this._realQuery=null;this._queries=[]}Release(){for(const q of this._queries)if(q instanceof WebGLRealTimeElapsedQuery)q.Release();C3.clearArray(this._queries);this._parentQuery=null;this._realQuery=null;this._renderer=null}BeginTimeElapsed(){if(this._isActive)throw new Error("query already active");
const stack=this._renderer._GetTimeQueryStack();if(stack.length>0){this._isNested=true;this._parentQuery=stack.at(-1);this._parentQuery._EndReal();this._parentQuery._queries.push(this)}else{this._isNested=false;this._parentQuery=null}this._isActive=true;stack.push(this);this._StartReal()}EndTimeElapsed(){if(!this._isActive)throw new Error("query not active");const top=this._renderer._GetTimeQueryStack().pop();if(top!==this)throw new Error("can only end most nested query");this._isActive=false;this._EndReal();
if(this._parentQuery){this._parentQuery._StartReal();this._parentQuery=null}}_StartReal(){this._realQuery=C3.New(WebGLRealTimeElapsedQuery,this._renderer);this._queries.push(this._realQuery);this._realQuery.BeginTimeElapsed()}_EndReal(){this._realQuery.EndTimeElapsed();this._realQuery=null}CheckForResult(){for(const q of this._queries)q.CheckForResult()}IsNested(){return this._isNested}HasResult(){return this._queries.every(q=>q.HasResult())}GetResult(){return this._queries.reduce((a,v)=>a+v.GetResult(),
0)}GetFrameNumber(){return this._frameNumber}};

}

// ../lib/gfx/webgl/queryResultBuffer.js
{
'use strict';const C3=self.C3;
C3.Gfx.WebGLQueryResultBuffer=class WebGLQueryResultBuffer{constructor(renderer,maxQueries=1E3){this._renderer=renderer;this._maxQueries=maxQueries;this._buffer=[];this._renderer._AddQueryResultBuffer(this)}Release(){this.Clear();this._renderer._RemoveQueryResultBuffer(this);this._renderer=null}Clear(){for(const q of this._buffer)q.Release();C3.clearArray(this._buffer)}AddTimeElapsedQuery(){const ret=new C3.Gfx.WebGLTimeElapsedQuery(this._renderer);this._buffer.push(ret);if(this._buffer.length>this._maxQueries){const oldest=
this._buffer.shift();oldest.Release()}return ret}CheckForResults(toFrameNumber){for(const q of this._buffer){if(q.GetFrameNumber()>=toFrameNumber)return;if(q.IsNested())return;q.CheckForResult()}}GetFrameRangeResultSum(startFrame,endFrame){if(endFrame<=startFrame)return NaN;let sum=0;for(const q of this._buffer){if(q.GetFrameNumber()>=endFrame)break;if(q.GetFrameNumber()<startFrame)continue;if(q.HasResult())sum+=q.GetResult();else return NaN}return sum}DeleteAllBeforeFrameNumber(frameNumber){for(let i=
0,len=this._buffer.length;i<len;++i){const q=this._buffer[i];if(q.GetFrameNumber()<frameNumber)q.Release();else{if(i>0)this._buffer.splice(0,i);return}}}};

}

// ../lib/gfx/webgl/webglRenderer.js
{
'use strict';const C3=self.C3;const assert=self.assert;const glMatrix=self.glMatrix;const vec3=glMatrix.vec3;const vec4=glMatrix.vec4;const mat4=glMatrix.mat4;const DEFAULT_WEBGLRENDERER_OPTS={powerPreference:"default",enableGpuProfiling:true,alpha:false,lowLatency:false,depth:false,maxWebGLVersion:2,failIfMajorPerformanceCaveat:false};const VALID_POWER_PREFERENCES=new Set(["default","low-power","high-performance"]);const MAX_VERTICES=8E3;const MAX_INDICES=MAX_VERTICES/2*3;const MAX_POINTS=8E3;
const LAST_POINT=MAX_POINTS-4;const PARTIAL_TEXTURE_UPLOAD_CHUNK_SIZE=256*1024;const defaultTexCoordsQuad=new C3.Quad(0,0,1,0,1,1,0,1);const tmpProjection=mat4.create();const tmpModelView=mat4.create();const tmpQuad=new C3.Quad;const tmpRect=new C3.Rect;let loseContextExtension=null;
if(C3.isDebug){self.debug_lose_context=function(){if(!loseContextExtension){console.warn("WEBGL_lose_context not supported");return}loseContextExtension.loseContext()};self.debug_restore_context=function(){if(!loseContextExtension){console.warn("WEBGL_lose_context not supported");return}loseContextExtension.restoreContext()}}const pendingPolls=new Set;let pollRafId=-1;
function CheckPendingPolls(){pollRafId=-1;for(const info of pendingPolls)if(info.checkFunc()){info.resolve();pendingPolls.delete(info)}if(pendingPolls.size>0)pollRafId=self.requestAnimationFrame(CheckPendingPolls)}
C3.Gfx.WebGLRenderer=class WebGLRenderer extends C3.Gfx.RendererBase{constructor(canvas,opts){super();opts=Object.assign({},DEFAULT_WEBGLRENDERER_OPTS,opts);if(!VALID_POWER_PREFERENCES.has(opts.powerPreference))throw new Error("invalid power preference");const attribs={"alpha":!!opts.alpha,"depth":false,"antialias":false,"powerPreference":opts.powerPreference,"failIfMajorPerformanceCaveat":!!opts.failIfMajorPerformanceCaveat};if(opts.lowLatency){attribs["desynchronized"]=true;attribs["preserveDrawingBuffer"]=
true}let gl=null;let version=0;if(opts.maxWebGLVersion>=2){gl=canvas.getContext("webgl2",attribs);version=2}if(!gl){gl=canvas.getContext("webgl",attribs);version=1}if(!gl)throw new Error("failed to initialise WebGL context");this._gl=gl;this._attribs=gl.getContextAttributes();if(opts.lowLatency&&!this._attribs["desynchronized"])console.info("[WebGLRenderer] Low-latency mode specified but is not supported here");this._versionString=gl.getParameter(gl.VERSION);this._version=version;this._viewport=vec4.create();
this._bbProjectionMatrix=mat4.create();this._usesDepthBuffer=!!opts.depth;this._isDepthEnabled=this._usesDepthBuffer;this._depthBuffer=null;this._isAutoSizeDepthBuffer=true;this._depthBufferWidth=0;this._depthBufferHeight=0;this._vertexBuffer=null;this._texcoordBuffer=null;this._indexBuffer=null;this._pointBuffer=null;this._vertexData=new Float32Array(MAX_VERTICES*this.GetNumVertexComponents());this._indexData=new Uint16Array(MAX_INDICES);this._texcoordData=new Float32Array(MAX_VERTICES*2);this._pointData=
new Float32Array(MAX_POINTS*4);this._vertexPtr=0;this._texPtr=0;this._pointPtr=0;this._lastVertexPtr=0;this._lastProgram=null;this._spDeviceTransformTextureFill=null;this._batch=[];this._batchPtr=0;this._topOfBatch=0;this._currentRenderTarget=null;this._lastPointZ=0;this._batchState=C3.New(C3.Gfx.BatchState,this);this._lastColor=C3.New(C3.Color,1,1,1,1);this._lastTexture0=null;this._lastTexture1=null;this._lastSrcBlend=0;this._lastDestBlend=0;this._isScissorViewport=false;this._viewportScissorWidth=
-1;this._viewportScissorHeight=-1;this._lastPointTexCoords=new C3.Rect;this._maxTextureSize=-1;this._minPointSize=0;this._maxPointSize=0;this._highpPrecision=0;this._unmaskedVendor="(unavailable)";this._unmaskedRenderer="(unavailable)";this._extensions=[];this._isInitialisingAfterContextRestored=false;this._parallelShaderCompileExt=null;this._anisotropicExt=null;this._maxAnisotropy=0;this._isGpuProfilingEnabled=!!opts.enableGpuProfiling;this._timerExt=null;this._allQueryResultBuffers=new Set;this._timeQueryStack=
[];this.FillIndexBufferData(this._indexData)}IsWebGL(){return true}async InitState(){super.InitState();const gl=this._gl;const numVertexComponents=this.GetNumVertexComponents();this._lastColor.setRgba(1,1,1,1);this._lastTexture0=null;this._lastTexture1=null;this._vertexPtr=0;this._pointPtr=0;this._lastVertexPtr=MAX_VERTICES*numVertexComponents-4*numVertexComponents;C3.clearArray(this._batch);this._batchPtr=0;this._topOfBatch=0;this._lastProgram=null;this._currentRenderTarget=null;this._lastPointTexCoords.set(0,
0,1,1);this._lastPointZ=0;const batchState=this._batchState;batchState.currentShader=null;batchState.currentFramebuffer=null;vec4.set(batchState.currentColor,1,1,1,1);batchState.clearColor.setRgba(0,0,0,0);batchState.pointTexCoords.set(0,0,1,1);gl.clearColor(0,0,0,0);gl.clear(gl.COLOR_BUFFER_BIT);gl.enable(gl.BLEND);gl.blendFunc(gl.ONE,gl.ONE_MINUS_SRC_ALPHA);this._lastSrcBlend=gl.ONE;this._lastDestBlend=gl.ONE_MINUS_SRC_ALPHA;this._InitBlendModes(gl);gl.disable(gl.CULL_FACE);gl.disable(gl.STENCIL_TEST);
gl.disable(gl.DITHER);if(this._usesDepthBuffer){gl.enable(gl.DEPTH_TEST);gl.depthMask(true);gl.depthFunc(gl.LEQUAL)}else{gl.disable(gl.DEPTH_TEST);gl.depthMask(false)}this._isDepthEnabled=this._usesDepthBuffer;this._pointBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,this._pointBuffer);gl.bufferData(gl.ARRAY_BUFFER,this._pointData.byteLength,gl.DYNAMIC_DRAW);this._vertexBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,this._vertexBuffer);gl.bufferData(gl.ARRAY_BUFFER,this._vertexData.byteLength,
gl.DYNAMIC_DRAW);this._texcoordBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,this._texcoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,this._texcoordData.byteLength,gl.DYNAMIC_DRAW);this._indexBuffer=gl.createBuffer();gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this._indexBuffer);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,this._indexData,gl.STATIC_DRAW);gl.activeTexture(gl.TEXTURE0);gl.bindTexture(gl.TEXTURE_2D,null);this._maxTextureSize=gl.getParameter(gl.MAX_TEXTURE_SIZE);const pointsizes=gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);
this._minPointSize=pointsizes[0];this._maxPointSize=pointsizes[1];const highpVertex=gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.HIGH_FLOAT);const highpFrag=gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_FLOAT);if(highpVertex&&highpFrag)this._highpPrecision=Math.min(highpVertex["precision"],highpFrag["precision"]);else this._highpPrecision=0;if(this._maxPointSize>2048)this._maxPointSize=2048;this._extensions=gl.getSupportedExtensions();const debug_ext=gl.getExtension("WEBGL_debug_renderer_info");
if(debug_ext){this._unmaskedVendor=gl.getParameter(debug_ext["UNMASKED_VENDOR_WEBGL"]);this._unmaskedRenderer=gl.getParameter(debug_ext["UNMASKED_RENDERER_WEBGL"])}this._parallelShaderCompileExt=gl.getExtension("KHR_parallel_shader_compile");if(C3.isDebug)loseContextExtension=gl.getExtension("WEBGL_lose_context");if(this._isGpuProfilingEnabled)if(this.GetWebGLVersionNumber()===1){if(C3.Platform.BrowserEngine!=="Chromium"||C3.Platform.BrowserVersionNumber>=81||typeof document!=="undefined")this._timerExt=
gl.getExtension("EXT_disjoint_timer_query")}else this._timerExt=gl.getExtension("EXT_disjoint_timer_query_webgl2")||gl.getExtension("EXT_disjoint_timer_query");this._anisotropicExt=gl.getExtension("EXT_texture_filter_anisotropic");if(this._anisotropicExt)this._maxAnisotropy=gl.getParameter(this._anisotropicExt["MAX_TEXTURE_MAX_ANISOTROPY_EXT"]);else this._maxAnisotropy=0;const WebGLShaderProgram=C3.Gfx.WebGLShaderProgram;const vsSource=WebGLShaderProgram.GetDefaultVertexShaderSource(false);const DEFAULT_SHADER_PROGRAMS=
[[WebGLShaderProgram.GetTextureFillFragmentShaderSource(),vsSource,"<default>"],[WebGLShaderProgram.GetTextureFillFragmentShaderSource(),vsSource,"<default-device-transform>"],[WebGLShaderProgram.GetPointFragmentShaderSource(this._version),WebGLShaderProgram.GetPointVertexShaderSource(this._version),"<point>"],[WebGLShaderProgram.GetColorFillFragmentShaderSource(),vsSource,"<fill>"],[WebGLShaderProgram.GetLinearGradientFillFragmentShaderSource(),vsSource,"<lineargradient>"],[WebGLShaderProgram.GetHardEllipseFillFragmentShaderSource(),
vsSource,"<hardellipse>"],[WebGLShaderProgram.GetHardEllipseOutlineFragmentShaderSource(),vsSource,"<hardellipseoutline>"],[WebGLShaderProgram.GetSmoothEllipseFillFragmentShaderSource(),vsSource,"<smoothellipse>"],[WebGLShaderProgram.GetSmoothEllipseOutlineFragmentShaderSource(),vsSource,"<smoothellipseoutline>"],[WebGLShaderProgram.GetSmoothLineFillFragmentShaderSource(),vsSource,"<smoothline>"],[WebGLShaderProgram.GetTilemapFragmentShaderSource(),WebGLShaderProgram.GetDefaultVertexShaderSource(true),
"<tilemap>"]];const defaultShaders=await Promise.all(DEFAULT_SHADER_PROGRAMS.map(i=>this.CreateShaderProgram({src:i[0]},i[1],i[2])));this._spTextureFill=defaultShaders[0];this._spDeviceTransformTextureFill=defaultShaders[1];this._spPoints=defaultShaders[2];this._spColorFill=defaultShaders[3];this._spLinearGradientFill=defaultShaders[4];this._spHardEllipseFill=defaultShaders[5];this._spHardEllipseOutline=defaultShaders[6];this._spSmoothEllipseFill=defaultShaders[7];this._spSmoothEllipseOutline=defaultShaders[8];
this._spSmoothLineFill=defaultShaders[9];this._spTilemapFill=defaultShaders[10];this.SetTextureFillMode()}async CreateShaderProgram(shaderInfo,vsSource,name){const ret=await C3.Gfx.WebGLShaderProgram.Create(this,shaderInfo,vsSource,name);this._AddShaderProgram(ret);return ret}ResetLastProgram(){this._lastProgram=null}SetSize(w,h,force){if(this._width===w&&this._height===h&&!force)return;this.EndBatch();const gl=this._gl;const batchState=this._batchState;this._width=w;this._height=h;const viewW=this.GetScissoredViewportWidth();
const viewH=this.GetScissoredViewportHeight();this._SetViewport(0,0,viewW,viewH);this.CalculatePerspectiveMatrix(this._bbProjectionMatrix,viewW/viewH);this.SetProjectionMatrix(this._bbProjectionMatrix);if(this._spDeviceTransformTextureFill){gl.useProgram(this._spDeviceTransformTextureFill.GetShaderProgram());this._spDeviceTransformTextureFill._UpdateDeviceTransformUniforms(this._matP);this._lastProgram=this._spDeviceTransformTextureFill;this._batchState.currentShader=this._spDeviceTransformTextureFill}gl.bindTexture(gl.TEXTURE_2D,
null);gl.activeTexture(gl.TEXTURE1);gl.bindTexture(gl.TEXTURE_2D,null);gl.activeTexture(gl.TEXTURE0);this._lastTexture0=null;this._lastTexture1=null;if(this._usesDepthBuffer&&this._isAutoSizeDepthBuffer)this._SetDepthBufferSize(this._width,this._height);if(this._currentRenderTarget)this._currentRenderTarget._Resize(this._width,this._height);gl.bindFramebuffer(gl.FRAMEBUFFER,null);this._currentRenderTarget=null;batchState.currentFramebuffer=null}_SetDepthBufferSize(width,height){const gl=this._gl;
if(this._depthBuffer){if(this._depthBufferWidth===width&&this._depthBufferHeight===height)return;gl.deleteRenderbuffer(this._depthBuffer)}this._depthBuffer=gl.createRenderbuffer();gl.bindRenderbuffer(gl.RENDERBUFFER,this._depthBuffer);gl.renderbufferStorage(gl.RENDERBUFFER,this._version>=2?gl.DEPTH24_STENCIL8:gl.DEPTH_STENCIL,width,height);gl.bindRenderbuffer(gl.RENDERBUFFER,null);this._depthBufferWidth=width;this._depthBufferHeight=height}SetFixedSizeDepthBuffer(width,height){if(!this._usesDepthBuffer)return;
this._isAutoSizeDepthBuffer=false;this._SetDepthBufferSize(width,height)}SetAutoSizeDepthBuffer(){if(!this._usesDepthBuffer)return;this._isAutoSizeDepthBuffer=true;this._SetDepthBufferSize(this._width,this._height)}SetViewportScissor(w,h){const gl=this._gl;if(this._width===w&&this._height===h){if(this._isScissorViewport){this.EndBatch();gl.disable(gl.SCISSOR_TEST);this._isScissorViewport=false;this._viewportScissorWidth=-1;this._viewportScissorHeight=-1;this.SetSize(this._width,this._height,true)}return}if(!this._isScissorViewport){this.EndBatch();
gl.enable(gl.SCISSOR_TEST);this._isScissorViewport=true}if(this._viewportScissorWidth!==w||this._viewportScissorHeight!==h){this.EndBatch();gl.scissor(0,0,w,h);this._viewportScissorWidth=w;this._viewportScissorHeight=h;this.SetSize(this._width,this._height,true)}}RemoveViewportScissor(){const gl=this._gl;if(this._isScissorViewport){this.EndBatch();gl.disable(gl.SCISSOR_TEST);this._isScissorViewport=false}this._viewportScissorWidth=-1;this._viewportScissorHeight=-1}GetScissoredViewportWidth(){if(this._isScissorViewport)return this._viewportScissorWidth;
else return this.GetWidth()}GetScissoredViewportHeight(){if(this._isScissorViewport)return this._viewportScissorHeight;else return this.GetHeight()}_SetViewport(x,y,w,h){const viewport=this._viewport;if(viewport[0]===x&&viewport[1]===y&&viewport[2]===w&&viewport[3]===h)return;const b=this.PushBatch();b.InitSetViewport(x,y,w,h);vec4.set(viewport,x,y,w,h);this._topOfBatch=0}SetProjectionMatrix(matP){if(mat4.exactEquals(this._matP,matP))return;const b=this.PushBatch();b.InitSetProjection(matP);mat4.copy(this._matP,
matP);this._topOfBatch=0}SetDefaultRenderTargetProjectionState(){let projectionMatrix;let viewportWidth,viewportHeight;const currentRenderTarget=this._currentRenderTarget;if(currentRenderTarget===null||currentRenderTarget.IsDefaultSize()&&this._isScissorViewport){projectionMatrix=this._bbProjectionMatrix;viewportWidth=this.GetScissoredViewportWidth();viewportHeight=this.GetScissoredViewportHeight()}else{projectionMatrix=currentRenderTarget.GetProjectionMatrix();viewportWidth=currentRenderTarget.GetWidth();
viewportHeight=currentRenderTarget.GetHeight()}this.SetProjectionMatrix(projectionMatrix);this._SetViewport(0,0,viewportWidth,viewportHeight)}SetModelViewMatrix(matMV){if(mat4.exactEquals(this._matMV,matMV))return;const b=this.PushBatch();b.InitSetModelView(matMV);mat4.copy(this._matMV,matMV);this._topOfBatch=0}GetBatchState(){return this._batchState}PushBatch(){const batch=this._batch;if(this._batchPtr===batch.length)batch.push(new C3.Gfx.WebGLBatchJob(this._batchState));return batch[this._batchPtr++]}EndBatch(){if(this._batchPtr===
0)return;if(this.IsContextLost())return;this._WriteBuffers();this._ExecuteBatch();this._batchPtr=0;this._vertexPtr=0;this._texPtr=0;this._pointPtr=0;this._topOfBatch=0}_WriteBuffers(){const gl=this._gl;if(this._pointPtr>0){gl.bindBuffer(gl.ARRAY_BUFFER,this._pointBuffer);gl.bufferSubData(gl.ARRAY_BUFFER,0,this._pointData.subarray(0,this._pointPtr))}if(this._vertexPtr>0){gl.bindBuffer(gl.ARRAY_BUFFER,this._vertexBuffer);gl.bufferSubData(gl.ARRAY_BUFFER,0,this._vertexData.subarray(0,this._vertexPtr));
gl.bindBuffer(gl.ARRAY_BUFFER,this._texcoordBuffer);gl.bufferSubData(gl.ARRAY_BUFFER,0,this._texcoordData.subarray(0,this._texPtr))}}_ExecuteBatch(){const batch=this._batch;for(let i=0,len=this._batchPtr;i<len;++i)batch[i].Run()}GetOpacity(){return this._lastColor.getA()}SetColorRgba(r,g,b,a){const lastColor=this._lastColor;if(lastColor.equalsRgba(r,g,b,a))return;lastColor.setRgba(r,g,b,a);const batch=this.PushBatch();batch.InitSetColor(lastColor);this._topOfBatch=0;this._currentStateGroup=null}SetOpacity(a){const lastColor=
this._lastColor;if(lastColor.getA()===a)return;lastColor.setA(a);const batch=this.PushBatch();batch.InitSetColor(lastColor);this._topOfBatch=0;this._currentStateGroup=null}SetColor(c){const lastColor=this._lastColor;if(lastColor.equals(c))return;lastColor.set(c);const batch=this.PushBatch();batch.InitSetColor(lastColor);this._topOfBatch=0;this._currentStateGroup=null}ResetColor(){this.SetColorRgba(1,1,1,1)}GetColor(){return this._lastColor}SetTexture(rendererTex){if(rendererTex===this._lastTexture0)return;
const b=this.PushBatch();b.InitSetTexture(rendererTex);this._lastTexture0=rendererTex;this._topOfBatch=0}_ResetLastTexture(){this._lastTexture0=null}SetBlendMode(bm){const arr=this._GetBlendByIndex(bm);this._SetBlend(arr[0],arr[1])}SetNamedBlendMode(bm){const o=this.GetNamedBlend(bm);this._SetBlend(o.srcBlend,o.destBlend)}_SetBlend(s,d){if(s===this._lastSrcBlend&&d===this._lastDestBlend)return;const b=this.PushBatch();b.InitSetBlend(s,d);this._lastSrcBlend=s;this._lastDestBlend=d;this._topOfBatch=
0;this._currentStateGroup=null}IsPremultipliedAlphaBlend(){return this._lastSrcBlend===this._gl.ONE&&this._lastDestBlend===this._gl.ONE_MINUS_SRC_ALPHA}SetAlphaBlend(){this._SetBlend(this._gl.ONE,this._gl.ONE_MINUS_SRC_ALPHA)}SetNoPremultiplyAlphaBlend(){this._SetBlend(this._gl.SRC_ALPHA,this._gl.ONE_MINUS_SRC_ALPHA)}SetCopyBlend(){this._SetBlend(this._gl.ONE,this._gl.ZERO)}Rect(r){this.Rect2(r.getLeft(),r.getTop(),r.getRight(),r.getBottom())}Rect2(left,top,right,bottom){this.Quad2(left,top,right,
top,right,bottom,left,bottom)}_ExtendQuadBatch(){let v=this._vertexPtr;if(v>=this._lastVertexPtr){this.EndBatch();v=0}if(this._topOfBatch===1)this._batch[this._batchPtr-1]._indexCount+=6;else{const b=this.PushBatch();b.InitQuad(v,6);this._topOfBatch=1}}_WriteQuadToVertexBuffer(quad){quad.writeToTypedArray3D(this._vertexData,this._vertexPtr,this._baseZ+this._currentZ);this._vertexPtr+=12}Quad(quad){this._ExtendQuadBatch();this._WriteQuadToVertexBuffer(quad);defaultTexCoordsQuad.writeToTypedArray(this._texcoordData,
this._texPtr);this._texPtr+=8}Quad2(tlx,tly,trx,try_,brx,bry,blx,bly){this._ExtendQuadBatch();const vd=this._vertexData;let v=this._vertexPtr;const z=this._baseZ+this._currentZ;vd[v++]=tlx;vd[v++]=tly;vd[v++]=z;vd[v++]=trx;vd[v++]=try_;vd[v++]=z;vd[v++]=brx;vd[v++]=bry;vd[v++]=z;vd[v++]=blx;vd[v++]=bly;vd[v++]=z;this._vertexPtr=v;defaultTexCoordsQuad.writeToTypedArray(this._texcoordData,this._texPtr);this._texPtr+=8}Quad3(quad,rcTex){this._ExtendQuadBatch();this._WriteQuadToVertexBuffer(quad);rcTex.writeAsQuadToTypedArray(this._texcoordData,
this._texPtr);this._texPtr+=8}Quad4(quad,uv){this._ExtendQuadBatch();this._WriteQuadToVertexBuffer(quad);uv.writeToTypedArray(this._texcoordData,this._texPtr);this._texPtr+=8}Quad3D(tlx,tly,tlz,trx,try_,trz,brx,bry,brz,blx,bly,blz,rcTex){this._ExtendQuadBatch();const vd=this._vertexData;let v=this._vertexPtr;const z=this._baseZ+this._currentZ;vd[v++]=tlx;vd[v++]=tly;vd[v++]=z+tlz;vd[v++]=trx;vd[v++]=try_;vd[v++]=z+trz;vd[v++]=brx;vd[v++]=bry;vd[v++]=z+brz;vd[v++]=blx;vd[v++]=bly;vd[v++]=z+blz;this._vertexPtr=
v;rcTex.writeAsQuadToTypedArray(this._texcoordData,this._texPtr);this._texPtr+=8}Quad3D2(tlx,tly,tlz,trx,try_,trz,brx,bry,brz,blx,bly,blz,uv){this._ExtendQuadBatch();const vd=this._vertexData;let v=this._vertexPtr;const z=this._baseZ+this._currentZ;vd[v++]=tlx;vd[v++]=tly;vd[v++]=z+tlz;vd[v++]=trx;vd[v++]=try_;vd[v++]=z+trz;vd[v++]=brx;vd[v++]=bry;vd[v++]=z+brz;vd[v++]=blx;vd[v++]=bly;vd[v++]=z+blz;this._vertexPtr=v;uv.writeToTypedArray(this._texcoordData,this._texPtr);this._texPtr+=8}FullscreenQuad(mode,
curTex){mat4.copy(tmpProjection,this._matP);mat4.copy(tmpModelView,this._matMV);this.SetDefaultRenderTargetProjectionState();if(this._isScissorViewport){const tempMat4b=this.CalculateLookAtModelView2(0,0,this.GetDefaultCameraZ()*self.devicePixelRatio,0,0,0);this.SetModelViewMatrix(tempMat4b);const left=this._viewportScissorWidth/2;const top=this._viewportScissorHeight/2;tmpRect.set(-left,top,-left+this._viewportScissorWidth,top-this._viewportScissorHeight);tmpQuad.setFromRect(tmpRect);tmpRect.set(0,
0,this._viewportScissorWidth/this._width,this._viewportScissorHeight/this._height);this.Quad3(tmpQuad,tmpRect)}else{const [width,height]=this.GetRenderTargetSize(this._currentRenderTarget);const tempMat4b=this.CalculateLookAtModelView2(0,0,this.GetDefaultCameraZ()*self.devicePixelRatio,0,0,0,height);this.SetModelViewMatrix(tempMat4b);if(mode==="crop"&&this._currentRenderTarget&&curTex){const left=this._width/2;const top=this._height/2;const srcW=curTex.GetWidth();const srcH=curTex.GetHeight();const destW=
this._currentRenderTarget.GetWidth();const destH=this._currentRenderTarget.GetHeight();const copyW=Math.min(destW,srcW);const copyH=Math.min(destH,srcH);const srcOffY=Math.max(srcH-destH,0);const destOffY=Math.max(destH-srcH,0);tmpRect.set(-left,top-destOffY,-left+copyW,top-copyH-destOffY);tmpQuad.setFromRect(tmpRect);tmpRect.set(0,srcOffY,copyW,copyH+srcOffY);tmpRect.divide(srcW,srcH);this.Quad3(tmpQuad,tmpRect)}else{const halfW=width/2;const halfH=height/2;this.Rect2(-halfW,halfH,halfW,-halfH)}}this.SetProjectionMatrix(tmpProjection);
this.SetModelViewMatrix(tmpModelView)}StartRenderingPoints(rect){if(this._lastPointTexCoords.equals(rect))return;this._lastPointTexCoords.copy(rect);const b=this.PushBatch();b.InitSetPointTexCoords(rect);this._topOfBatch=0}FinishRenderingPoints(){}Point(x_,y_,size_,opacity_){if(this._pointPtr>=LAST_POINT)this.EndBatch();let p=this._pointPtr;const z=this._baseZ+this._currentZ;if(this._topOfBatch===2&&this._lastPointZ===z)this._batch[this._batchPtr-1]._indexCount++;else{const b=this.PushBatch();b.InitPoints(p,
z);this._topOfBatch=2;this._lastPointZ=z}const pd=this._pointData;pd[p++]=x_;pd[p++]=y_;pd[p++]=size_;pd[p++]=opacity_;this._pointPtr=p}SetProgram(program){if(this._lastProgram===program)return;const b=this.PushBatch();b.InitSetProgram(program);this._lastProgram=program;this._topOfBatch=0;this._currentStateGroup=null}SetDeviceTransformTextureFillMode(){this.SetProgram(this._spDeviceTransformTextureFill)}SetGradientColor(c){const b=this.PushBatch();b.InitSetGradientColor(c);this._topOfBatch=0}SetEllipseParams(pixelW,
pixelH,outlineThickness=1){const b=this.PushBatch();b.InitSetEllipseParams(pixelW,pixelH,outlineThickness);this._topOfBatch=0}SetTilemapInfo(srcRect,textureWidth,textureHeight,tileWidth,tileHeight,tileSpacingX,tileSpacingY){if(this._lastProgram!==this._spTilemapFill)throw new Error("must set tilemap fill mode first");const b=this.PushBatch();b.InitSetTilemapInfo(srcRect,textureWidth,textureHeight,tileWidth,tileHeight,tileSpacingX,tileSpacingY);this._topOfBatch=0}SetProgramParameters(backTex,destRect,
srcRect,srcOriginRect,layoutRect,pixelWidth,pixelHeight,layerScale,layerAngle,time,params){const s=this._lastProgram;const hasAnyOptionalUniforms=s._hasAnyOptionalUniforms;const hasAnyCustomParams=!!params.length;if((!hasAnyOptionalUniforms||s.AreOptionalUniformsAlreadySetInBatch(destRect,srcRect,srcOriginRect,layoutRect,pixelWidth,pixelHeight,layerScale,layerAngle,time))&&(!hasAnyCustomParams||s.AreCustomParametersAlreadySetInBatch(params)))return;const b=this.PushBatch();b.InitSetProgramParameters();
if(hasAnyOptionalUniforms){s.SetOptionalUniformsInBatch(destRect,srcRect,srcOriginRect,layoutRect,pixelWidth,pixelHeight,layerScale,layerAngle,time);const mat4param=b._mat4param;mat4param[0]=pixelWidth;mat4param[1]=pixelHeight;destRect.writeToTypedArray(mat4param,2);mat4param[6]=layerScale;mat4param[7]=layerAngle;srcRect.writeToTypedArray(mat4param,12);const colorParam=b._colorParam;layoutRect.writeToTypedArray(colorParam,0);const tmp=colorParam[1];colorParam[1]=colorParam[3];colorParam[3]=tmp;srcOriginRect.writeToTypedArray(b._srcOriginRect,
0);b._startIndex=time;if(s._uSamplerBack.IsUsed())b._texParam=backTex?backTex.GetTexture():null;else b._texParam=null}if(hasAnyCustomParams){s.SetCustomParametersInBatch(params);C3.shallowAssignArray(b._shaderParams,params)}this._topOfBatch=0}ClearRgba(r,g,b_,a){const b=this.PushBatch();b.InitClearSurface2(r,g,b_,a);this._topOfBatch=0}Clear(c){const b=this.PushBatch();b.InitClearSurface(c);this._topOfBatch=0}ClearRect(x,y,w,h){this.ClearRect4(x,y,w,h,0,0,0,0)}ClearRect2(rc){this.ClearRect4(rc.getLeft(),
rc.getTop(),rc.width(),rc.height(),0,0,0,0)}ClearRect3(rc,c){this.ClearRect4(rc.getLeft(),rc.getTop(),rc.width(),rc.height(),c.getR(),c.getG(),c.getB(),c.getA())}ClearRect4(x,y,w,h,r,g,b,a){if(w<0||h<0)return;const batch=this.PushBatch();batch.InitClearRect(x,y,w,h,r,g,b,a);this._topOfBatch=0}Start(){}Finish(){super.Finish();this._gl.flush()}ClearDepth(){if(!this._usesDepthBuffer||!this._currentRenderTarget||!this._currentRenderTarget.HasDepthBuffer())return;const batch=this.PushBatch();batch.InitClearDepth();
this._topOfBatch=0}SetDepthEnabled(e){e=!!e;if(this._isDepthEnabled===e)return;if(!this._usesDepthBuffer)return;this._isDepthEnabled=e;const batch=this.PushBatch();batch.InitSetDepthEnabled(e);this._topOfBatch=0}_GetDepthBuffer(){return this._depthBuffer}CheckForQueryResults(){for(const qrb of this._allQueryResultBuffers)qrb.CheckForResults(this._frameNumber)}IsContextLost(){return!this._gl||this._gl.isContextLost()||this._isInitialisingAfterContextRestored}OnContextLost(){super.OnDeviceOrContextLost();
C3.Gfx.WebGLRendererTexture.OnContextLost();C3.Gfx.WebGLRenderTarget.OnContextLost();C3.Gfx.RendererText.OnContextLost();for(const qrb of this._allQueryResultBuffers)qrb.Clear();this._extensions=[];this._timerExt=null;this._parallelShaderCompileExt=null;this._anisotropicExt=null;this._maxAnisotropy=0;this._unmaskedVendor="(unavailable)";this._unmaskedRenderer="(unavailable)";this._lastProgram=null;this._spDeviceTransformTextureFill=null;this._depthBuffer=null;for(const stateGroup of this._stateGroups.values())stateGroup.OnContextLost()}async OnContextRestored(){this._isInitialisingAfterContextRestored=
true;await this.InitState();this._isInitialisingAfterContextRestored=false;for(const stateGroup of this._stateGroups.values())stateGroup.OnContextRestored(this);this.SetSize(this._width,this._height,true)}CreateStaticTexture(data,opts){if(this.IsContextLost())throw new Error("context lost");this.EndBatch();const rendererTex=C3.New(C3.Gfx.WebGLRendererTexture,this);rendererTex._CreateStatic(data,opts);return rendererTex}CreateStaticTextureAsync(data,opts){if(this.IsContextLost())return Promise.reject("context lost");
opts=Object.assign({},opts);const isTiled=opts.wrapX&&opts.wrapX!=="clamp-to-edge"||opts.wrapY&&opts.wrapY!=="clamp-to-edge";if(C3.Supports.ImageBitmapOptions&&(this.SupportsNPOTTextures()||!isTiled)){opts.premultiplyAlpha=false;return createImageBitmap(data,{"premultiplyAlpha":"premultiply"}).then(imageBitmap=>C3.Asyncify(()=>this.CreateStaticTexture(imageBitmap,opts)))}else if(C3.Supports.ImageBitmap)return createImageBitmap(data).then(imageBitmap=>C3.Asyncify(()=>this.CreateStaticTexture(imageBitmap,
opts)));else if(data instanceof Blob)return C3.BlobToImage(data,true).then(img=>this.CreateStaticTextureAsync(img,opts));else if(typeof HTMLImageElement!=="undefined"&&data instanceof HTMLImageElement&&typeof data["decode"]==="function")return data["decode"]().then(()=>C3.Asyncify(()=>this.CreateStaticTexture(data,opts)));else return C3.Asyncify(()=>this.CreateStaticTexture(data,opts))}CreateDynamicTexture(width,height,opts){this.EndBatch();const rendererTex=C3.New(C3.Gfx.WebGLRendererTexture,this);
rendererTex._CreateDynamic(width,height,opts);return rendererTex}UpdateTexture(data,rendererTex,opts){this.EndBatch();rendererTex._Update(data,opts)}DeleteTexture(rendererTex){if(!rendererTex)return;rendererTex.SubtractReference();if(rendererTex.GetReferenceCount()>0)return;this.EndBatch();if(rendererTex===this._lastTexture0){this._gl.bindTexture(this._gl.TEXTURE_2D,null);this._lastTexture0=null}if(rendererTex===this._lastTexture1){this._gl.activeTexture(this._gl.TEXTURE1);this._gl.bindTexture(this._gl.TEXTURE_2D,
null);this._gl.activeTexture(this._gl.TEXTURE0);this._lastTexture1=null}rendererTex._Delete()}CreateRenderTarget(opts){let width=this._width;let height=this._height;let isDefaultSize=true;if(opts){if(typeof opts.width==="number"){width=opts.width;isDefaultSize=false}if(typeof opts.height==="number"){height=opts.height;isDefaultSize=false}}if(width<=0||height<=0)throw new Error("invalid size");this.EndBatch();const renderTarget=C3.New(C3.Gfx.WebGLRenderTarget,this);renderTarget._Create(width,height,
Object.assign({isDefaultSize},opts));this._currentRenderTarget=null;this._batchState.currentFramebuffer=null;return renderTarget}SetRenderTarget(renderTarget){if(renderTarget===this._currentRenderTarget)return;if(renderTarget&&renderTarget.IsDefaultSize())renderTarget._Resize(this._width,this._height);const b=this.PushBatch();b.InitSetRenderTarget(renderTarget);this._currentRenderTarget=renderTarget;this._topOfBatch=0;this.SetDefaultRenderTargetProjectionState()}GetRenderTarget(){return this._currentRenderTarget}GetRenderTargetSize(renderTarget){if(renderTarget)return[renderTarget.GetWidth(),
renderTarget.GetHeight()];else return[this._width,this._height]}CopyRenderTarget(renderTarget,mode="stretch"){if(this._version<2||this._currentRenderTarget&&this._currentRenderTarget.GetMultisampling()>0){this.SetCopyBlend();this.ResetColor();this.DrawRenderTarget(renderTarget,mode)}else{const b=this.PushBatch();b.InitBlitFramebuffer(renderTarget,this._currentRenderTarget,mode);this._topOfBatch=0}}DrawRenderTarget(renderTarget,mode="stretch"){const tex=renderTarget.GetTexture();if(!tex)throw new Error("not a texture-backed render target");
this.SetTexture(tex);this.FullscreenQuad(mode,tex)}InvalidateRenderTarget(renderTarget){if(this._version<2)return;const b=this.PushBatch();b.InitInvalidateFramebuffer(renderTarget._GetFramebuffer());this._topOfBatch=0}DeleteRenderTarget(renderTarget){this.SetRenderTarget(null);this.EndBatch();const renderTex=renderTarget.GetTexture();if(renderTex===this._lastTexture0){this._gl.bindTexture(this._gl.TEXTURE_2D,null);this._lastTexture0=null}if(renderTex===this._lastTexture1){this._gl.activeTexture(this._gl.TEXTURE1);
this._gl.bindTexture(this._gl.TEXTURE_2D,null);this._gl.activeTexture(this._gl.TEXTURE0);this._lastTexture1=null}renderTarget._Delete()}async ReadBackRenderTargetToImageData(renderTarget,forceSynchronous,areaRect){this.EndBatch();const oldRenderTarget=this._currentRenderTarget;let width,height,framebuffer;if(renderTarget){width=renderTarget.GetWidth();height=renderTarget.GetHeight();framebuffer=renderTarget._GetFramebuffer()}else{width=this.GetWidth();height=this.GetHeight();framebuffer=null}let x=
0;let y=0;let areaWidth=width;let areaHeight=height;if(areaRect){x=C3.clamp(Math.floor(areaRect.getLeft()),0,width-1);y=C3.clamp(Math.floor(areaRect.getTop()),0,height-1);let w=areaRect.width();if(w===0)w=width-x;else w=C3.clamp(Math.floor(w),0,width-x);let h=areaRect.height();if(h===0)h=height-y;else h=C3.clamp(Math.floor(h),0,height-y);areaWidth=w;areaHeight=h;y=height-(y+areaHeight)}const gl=this._gl;gl.bindFramebuffer(gl.FRAMEBUFFER,framebuffer);const restorePreviousRenderTarget=()=>{gl.bindFramebuffer(gl.FRAMEBUFFER,
null);this._currentRenderTarget=null;this._batchState.currentFramebuffer=null;this.SetRenderTarget(oldRenderTarget)};let imageData;if(!forceSynchronous&&this.GetWebGLVersionNumber()>=2){gl.bindFramebuffer(gl.READ_FRAMEBUFFER,framebuffer);const pixelBuffer=gl.createBuffer();const bufferSize=areaWidth*areaHeight*4;const PIXEL_PACK_BUFFER=gl["PIXEL_PACK_BUFFER"];gl.bindBuffer(PIXEL_PACK_BUFFER,pixelBuffer);gl.bufferData(PIXEL_PACK_BUFFER,bufferSize,gl["STREAM_READ"]);gl.readPixels(x,y,areaWidth,areaHeight,
gl.RGBA,gl.UNSIGNED_BYTE,0);gl.bindFramebuffer(gl.READ_FRAMEBUFFER,null);gl.bindBuffer(PIXEL_PACK_BUFFER,null);restorePreviousRenderTarget();const sync=gl["fenceSync"](gl["SYNC_GPU_COMMANDS_COMPLETE"],0);await this._WaitForObjectReady(()=>gl["getSyncParameter"](sync,gl["SYNC_STATUS"])===gl["SIGNALED"]);gl["deleteSync"](sync);imageData=new ImageData(areaWidth,areaHeight);gl.bindBuffer(PIXEL_PACK_BUFFER,pixelBuffer);gl["getBufferSubData"](PIXEL_PACK_BUFFER,0,new Uint8Array(imageData.data.buffer),0,
bufferSize);gl.bindBuffer(PIXEL_PACK_BUFFER,null);gl.deleteBuffer(pixelBuffer)}else{imageData=new ImageData(areaWidth,areaHeight);gl.readPixels(x,y,areaWidth,areaHeight,gl.RGBA,gl.UNSIGNED_BYTE,new Uint8Array(imageData.data.buffer));restorePreviousRenderTarget()}return imageData}CoplanarStartStencilPass(){this.SetDepthEnabled(true);const batch=this.PushBatch();batch.InitCoplanarStartStencilPass();this._topOfBatch=0}CoplanarStartColorPass(){this.SetDepthEnabled(false);const batch=this.PushBatch();
batch.InitCoplanarStartColorPass();this._topOfBatch=0}CoplanarRestoreStandardRendering(){this.SetDepthEnabled(true);const batch=this.PushBatch();batch.InitCoplanarRestore();this._topOfBatch=0}StartQuery(query){if(!this.SupportsGPUProfiling())return;const b=this.PushBatch();b.InitStartQuery(query);this._topOfBatch=0}EndQuery(query){if(!this.SupportsGPUProfiling())return;const b=this.PushBatch();b.InitEndQuery(query);this._topOfBatch=0}_WaitForObjectReady(checkFunc){const ret=new Promise(resolve=>pendingPolls.add({resolve,
checkFunc}));if(pollRafId===-1)pollRafId=self.requestAnimationFrame(CheckPendingPolls);return ret}IsDesynchronized(){return!!this._attribs["desynchronized"]}GetEstimatedBackBufferMemoryUsage(){return this._width*this._height*(this._attribs["alpha"]?4:3)}GetEstimatedRenderBufferMemoryUsage(){let ret=0;for(const t of C3.Gfx.WebGLRenderTarget.allRenderTargets()){if(t.GetTexture())continue;ret+=t.GetEstimatedMemoryUsage()}return ret}GetEstimatedTextureMemoryUsage(){let ret=0;for(const t of C3.Gfx.WebGLRendererTexture.allTextures())ret+=
t.GetEstimatedMemoryUsage();return ret}GetEstimatedTotalMemoryUsage(){return this.GetEstimatedBackBufferMemoryUsage()+this.GetEstimatedRenderBufferMemoryUsage()+this.GetEstimatedTextureMemoryUsage()}GetWebGLVersionString(){return this._versionString}GetWebGLVersionNumber(){return this._version}GetDisplayName(){return"webgl"+this.GetWebGLVersionNumber()}SupportsNPOTTextures(){return this.GetWebGLVersionNumber()>=2}GetMaxTextureSize(){return this._maxTextureSize}GetMinPointSize(){return this._minPointSize}GetMaxPointSize(){return this._maxPointSize}SupportsHighP(){return this._highpPrecision!==
0}GetHighPPrecision(){return this._highpPrecision}GetUnmaskedVendor(){return this._unmaskedVendor}GetUnmaskedRenderer(){return this._unmaskedRenderer}GetExtensions(){return this._extensions}SupportsGPUProfiling(){return!!this._timerExt}_GetDisjointTimerQueryExtension(){return this._timerExt}_GetParallelShaderCompileExtension(){return this._parallelShaderCompileExt}_GetAnisotropicExtension(){return this._anisotropicExt}_GetMaxAnisotropy(){return this._maxAnisotropy}_AddQueryResultBuffer(qrb){this._allQueryResultBuffers.add(qrb)}_RemoveQueryResultBuffer(qrb){this._allQueryResultBuffers.delete(qrb)}_GetTimeQueryStack(){return this._timeQueryStack}GetContext(){return this._gl}_InitBlendModes(gl){this._InitBlendModeData([["normal",
gl.ONE,gl.ONE_MINUS_SRC_ALPHA],["additive",gl.ONE,gl.ONE],["xor",gl.ONE,gl.ONE_MINUS_SRC_ALPHA],["copy",gl.ONE,gl.ZERO],["destination-over",gl.ONE_MINUS_DST_ALPHA,gl.ONE],["source-in",gl.DST_ALPHA,gl.ZERO],["destination-in",gl.ZERO,gl.SRC_ALPHA],["source-out",gl.ONE_MINUS_DST_ALPHA,gl.ZERO],["destination-out",gl.ZERO,gl.ONE_MINUS_SRC_ALPHA],["source-atop",gl.DST_ALPHA,gl.ONE_MINUS_SRC_ALPHA],["destination-atop",gl.ONE_MINUS_DST_ALPHA,gl.SRC_ALPHA]])}CreateRendererText(){return C3.New(C3.Gfx.RendererText,
this)}CreateWebGLText(){return this.CreateRendererText()}};

}

// interfaces/IRuntime.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;let runtime=null;const keysDownByKey=new Set;function SortZOrderList(a,b){const layerA=a[0];const layerB=b[0];const diff=layerA-layerB;if(diff!==0)return diff;const indexA=a[1];const indexB=b[1];return indexA-indexB}const tempZOrderList=[];const tempInstances=[];let didWarnInAlertPolyfill=false;
self.IRuntime=class IRuntime{constructor(runtime_,objects){runtime=runtime_;Object.defineProperties(this,{assets:{value:runtime.GetAssetManager().GetIAssetManager(),writable:false},objects:{value:objects,writable:false},globalVars:{value:{},writable:false},projectName:{value:runtime.GetProjectName(),writable:false},projectVersion:{value:runtime.GetProjectVersion(),writable:false},storage:{value:new self.IStorage(runtime),writable:false},isInWorker:{value:runtime.IsInWorker(),writable:false}});runtime.UserScriptDispatcher().addEventListener("keydown",
e=>{if(keysDownByKey.has(e["key"])){e.stopPropagation();return}keysDownByKey.add(e["key"])});runtime.UserScriptDispatcher().addEventListener("keyup",e=>keysDownByKey.delete(e["key"]));runtime.Dispatcher().addEventListener("window-blur",()=>keysDownByKey.clear());if(runtime.IsInWorker())self["alert"]=message=>{if(!didWarnInAlertPolyfill){didWarnInAlertPolyfill=true;console.warn("[Construct 3] alert() was called from a Web Worker, because the project 'Use worker' setting is enabled. This method is not normally available in a Web Worker. Construct has implemented the alert for you, but note that other features may be missing in worker mode. You may wish to disable 'Use worker', or use a more convenient function like console.log(). For more information please refer to the scripting section of the manual.")}return this.alert(message)}}_InitGlobalVars(globalVarDescriptors){Object.defineProperties(this.globalVars,
globalVarDescriptors)}addEventListener(name,func){runtime.UserScriptDispatcher().addEventListener(name,func)}removeEventListener(name,func){runtime.UserScriptDispatcher().removeEventListener(name,func)}callFunction(name,...params){C3X.RequireString(name);const eventSheetManager=runtime.GetEventSheetManager();const functionBlock=eventSheetManager.GetFunctionBlockByName(name);if(!functionBlock)throw new Error(`cannot find function name '${name}'`);if(!functionBlock.IsEnabled())return functionBlock.GetDefaultReturnValue();
if(params.length<functionBlock.GetFunctionParameterCount())throw new Error(`not enough function parameters passed for '${name}' (${params.length} passed, ${functionBlock.GetFunctionParameterCount()} expected)`);const callEventBlock=functionBlock.GetEventBlock();let solModifiers=null;const currentEvent=eventSheetManager.GetCurrentEvent();if(currentEvent){const sm=currentEvent.GetSolModifiersIncludingParents();if(sm.length>0){solModifiers=sm;eventSheetManager.PushCleanSol(sm)}}const ret=callEventBlock.RunAsExpressionFunctionCall(callEventBlock.GetSolModifiersIncludingParents(),
functionBlock.GetReturnType(),functionBlock.GetDefaultReturnValue(),...params);if(solModifiers)eventSheetManager.PopSol(solModifiers);return ret}setReturnValue(v){const frame=runtime.GetEventStack().GetCurrentExpFuncStackFrame();if(!frame)throw new Error("not in a function which returns a value");switch(frame.GetFunctionReturnType()){case 1:if(typeof v==="number")frame.SetFunctionReturnValue(v);break;case 2:if(typeof v==="string")frame.SetFunctionReturnValue(v);break;case 3:if(typeof v==="number"||
typeof v==="string")frame.SetFunctionReturnValue(v);break}}get dt(){return runtime.GetDt()}get gameTime(){return runtime.GetGameTime()}get wallTime(){return runtime.GetWallTime()}random(){return runtime.Random()}get layout(){return runtime.GetMainRunningLayout().GetILayout()}getLayout(nameOrIndex){const layoutManager=runtime.GetLayoutManager();let layout=null;if(typeof nameOrIndex==="number"||typeof nameOrIndex==="string")layout=layoutManager.GetLayout(nameOrIndex);else throw new TypeError("expected string or number");
if(!layout)throw new Error("invalid layout");return layout.GetILayout()}getAllLayouts(){return runtime.GetLayoutManager().GetAllLayouts().map(layout=>layout.GetILayout())}goToLayout(nameOrIndex){const layoutManager=runtime.GetLayoutManager();let layout=null;if(typeof nameOrIndex==="number"||typeof nameOrIndex==="string")layout=layoutManager.GetLayout(nameOrIndex);else throw new TypeError("expected string or number");if(!layout)throw new Error("invalid layout");if(layoutManager.IsPendingChangeMainLayout())return;
layoutManager.ChangeMainLayout(layout)}get keyboard(){const ret=runtime._GetCommonScriptInterfaces().keyboard;if(!ret)throw new Error("runtime.keyboard used but Keyboard object missing - add it to your project first");return ret}get mouse(){const ret=runtime._GetCommonScriptInterfaces().mouse;if(!ret)throw new Error("runtime.mouse used but Mouse object missing - add it to your project first");return ret}get touch(){const ret=runtime._GetCommonScriptInterfaces().touch;if(!ret)throw new Error("runtime.touch used but Touch object missing - add it to your project first");
return ret}invokeDownload(url,filename){C3X.RequireString(url);C3X.RequireString(filename);runtime.InvokeDownload(url,filename)}getInstanceByUid(uid){C3X.RequireFiniteNumber(uid);const ret=runtime.GetInstanceByUID(uid);return ret?ret.GetInterfaceClass():null}sortZOrder(iterable,callback){C3X.RequireFunction(callback);const layout=runtime.GetCurrentLayout();for(const iinst of iterable){const inst=runtime._UnwrapIWorldInstance(iinst);const wi=inst.GetWorldInfo();tempZOrderList.push([wi.GetLayer().GetIndex(),
wi.GetZIndex()]);tempInstances.push(inst)}if(tempZOrderList.length===0)return;tempZOrderList.sort(SortZOrderList);tempInstances.sort((a,b)=>callback(a.GetInterfaceClass(),b.GetInterfaceClass()));let anyChanged=false;for(let i=0,len=tempZOrderList.length;i<len;++i){const inst=tempInstances[i];const layer=layout.GetLayerByIndex(tempZOrderList[i][0]);const toZ=tempZOrderList[i][1];const layerInstances=layer._GetInstances();if(layerInstances[toZ]!==inst){layerInstances[toZ]=inst;inst.GetWorldInfo()._SetLayer(layer);
layer.SetZIndicesChanged();anyChanged=true}}if(anyChanged)runtime.UpdateRender();C3.clearArray(tempZOrderList);C3.clearArray(tempInstances)}alert(message){return runtime.PostComponentMessageToDOMAsync("runtime","alert",{"message":message+(runtime.IsInWorker()?" [via Web Worker]":"")})}};

}

// interfaces/IAssetManager.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;let assetManager=null;
self.IAssetManager=class IAssetManager{constructor(assetManager_){assetManager=assetManager_;Object.defineProperties(this,{isWebMOpusSupported:{value:assetManager.IsAudioFormatSupported("audio/webm; codecs=opus"),writable:false}})}fetchText(url){return assetManager.FetchText(url)}fetchJson(url){return assetManager.FetchJson(url)}fetchBlob(url){return assetManager.FetchBlob(url)}fetchArrayBuffer(url){return assetManager.FetchArrayBuffer(url)}getProjectFileUrl(url){return assetManager.GetProjectFileUrl(url)}getMediaFileUrl(url){if(C3.IsRelativeURL(url))url=url.toLowerCase();
return assetManager.GetMediaFileUrl(url,assetManager.GetMediaSubfolder())}get mediaFolder(){return assetManager.GetMediaSubfolder()}async decodeWebMOpus(audioContext,arrayBuffer){if(this.isWebMOpusSupported)throw new Error("decodeWebMOpus(): not supported because WebM Opus is supported by the platform");const decodedArrayBuffer=await assetManager.GetRuntime()._WasmDecodeWebMOpus(arrayBuffer);const decodedFloats=new Float32Array(decodedArrayBuffer);const audioBuffer=audioContext["createBuffer"](1,
decodedFloats.length,48E3);const channelBuffer=audioBuffer["getChannelData"](0);channelBuffer.set(decodedFloats);return audioBuffer}loadScripts(...urls){return assetManager.LoadScripts(...urls)}compileWebAssembly(url){return assetManager.CompileWebAssembly(url)}loadStyleSheet(url){return assetManager.LoadStyleSheet(url)}};

}

// interfaces/IStorage.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;self.IStorage=class IStorage{constructor(runtime){this._storage=runtime._GetProjectStorage()}getItem(key){C3X.RequireString(key);return this._storage.getItem(key)}setItem(key,value){C3X.RequireString(key);return this._storage.setItem(key,value)}removeItem(key){C3X.RequireString(key);return this._storage.removeItem(key)}clear(){return this._storage.clear()}keys(){return this._storage.keys()}};

}

// interfaces/IObjectClass.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;const map=new WeakMap;
self.IObjectClass=class IObjectClass{constructor(objectClass){map.set(this,objectClass);Object.defineProperties(this,{name:{value:objectClass.GetName(),writable:false}});objectClass.GetRuntime()._MapScriptInterface(this,objectClass)}addEventListener(type,func){C3X.RequireString(type);C3X.RequireFunction(func);map.get(this).UserScriptDispatcher().addEventListener(type,func)}removeEventListener(type,func){C3X.RequireString(type);C3X.RequireFunction(func);map.get(this).UserScriptDispatcher().removeEventListener(type,
func)}getAllInstances(){return map.get(this).GetInstances().map(inst=>inst.GetInterfaceClass())}getFirstInstance(){const instances=map.get(this).GetInstances();if(instances.length>0)return instances[0].GetInterfaceClass();else return null}getPickedInstances(){return map.get(this).GetCurrentSol().GetInstances().map(inst=>inst.GetInterfaceClass())}getFirstPickedInstance(){const pickedInstances=map.get(this).GetCurrentSol().GetInstances();if(pickedInstances.length>0)return pickedInstances[0].GetInterfaceClass();
else return null}*instances(){for(const inst of map.get(this).GetInstances())yield inst.GetInterfaceClass()}*pickedInstances(){for(const inst of map.get(this).GetCurrentSol().GetInstances())yield inst.GetInterfaceClass()}setInstanceClass(Class){C3X.RequireFunction(Class);const objectClass=map.get(this);if(objectClass.GetInstanceCount()>0)throw new Error("setInstanceClass() called too late, because instances have already been created - call in runOnStartup");map.get(this)._SetUserScriptInstanceClass(Class)}createInstance(layerNameOrIndex,
x,y,createHierarchy){C3X.RequireNumber(x);C3X.RequireNumber(y);if(typeof layerNameOrIndex!=="number"&&typeof layerNameOrIndex!=="string")throw new TypeError("invalid layer parameter");const objectClass=map.get(this);const runtime=objectClass.GetRuntime();const layer=runtime.GetMainRunningLayout().GetLayer(layerNameOrIndex);if(!layer)throw new Error("invalid layer");const inst=runtime.CreateInstance(objectClass,layer,x,y,createHierarchy);if(createHierarchy)layer.SortAndAddInstancesByZIndex(inst);const eventSheetManager=
runtime.GetEventSheetManager();eventSheetManager.BlockFlushingInstances(true);inst._TriggerOnCreatedOnSelfAndRelated();eventSheetManager.BlockFlushingInstances(false);return inst.GetInterfaceClass()}};

}

// interfaces/ILayout.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;const map=new WeakMap;
self.ILayout=class ILayout{constructor(layout){map.set(this,layout);const effectInstanceArr=[];const effectList=layout.GetEffectList();const effectCount=effectList.GetAllEffectTypes().length;for(let i=0;i<effectCount;++i)effectInstanceArr.push(new self.IEffectInstance(effectList,i));Object.defineProperties(this,{name:{value:layout.GetName(),writable:false},index:{value:layout.GetIndex(),writable:false},effects:{value:effectInstanceArr,writable:false}})}addEventListener(type,func){C3X.RequireString(type);
C3X.RequireFunction(func);map.get(this).UserScriptDispatcher().addEventListener(type,func)}removeEventListener(type,func){C3X.RequireString(type);C3X.RequireFunction(func);map.get(this).UserScriptDispatcher().removeEventListener(type,func)}get width(){return map.get(this).GetWidth()}set width(w){map.get(this).SetWidth(w)}get height(){return map.get(this).GetHeight()}set height(h){map.get(this).SetHeight(h)}set scale(s){C3X.RequireFiniteNumber(s);map.get(this).SetScale(s)}get scale(){return map.get(this).GetScale()}set angle(a){C3X.RequireFiniteNumber(a);
map.get(this).SetAngle(a)}get angle(){return map.get(this).GetAngle()}set scrollX(x){C3X.RequireNumber(x);map.get(this).SetScrollX(x)}get scrollX(){return map.get(this).GetScrollX()}set scrollY(y){C3X.RequireNumber(y);map.get(this).SetScrollY(y)}get scrollY(){return map.get(this).GetScrollY()}scrollTo(x,y){C3X.RequireNumber(x);C3X.RequireNumber(y);const layout=map.get(this);layout.SetScrollX(x);layout.SetScrollY(y)}getLayer(nameOrIndex){const layout=map.get(this);let layer=null;if(typeof nameOrIndex===
"number"||typeof nameOrIndex==="string")layer=layout.GetLayer(nameOrIndex);else throw new TypeError("expected string or number");if(!layer)return null;return layer.GetILayer()}getAllLayers(){return map.get(this).GetLayers().map(layer=>layer.GetILayer())}setVanishingPoint(vpX,vpY){C3X.RequireFiniteNumber(vpX);C3X.RequireFiniteNumber(vpY);map.get(this).SetVanishingPointXY(vpX,vpY)}getVanishingPoint(){return map.get(this)._GetVanishingPoint()}set projection(p){C3X.RequireString(p);const layout=map.get(this);
if(p==="perspective")layout.SetPerspectiveProjection();else if(p==="orthographic")layout.SetOrthographicProjection();else throw new Error("invalid projection");}get projection(){if(map.get(this).IsOrthographicProjection())return"orthographic";else return"perspective"}};

}

// interfaces/ILayer.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;const map=new WeakMap;const BLEND_MODE_TO_INDEX=new Map([["normal",0],["additive",1],["copy",3],["destination-over",4],["source-in",5],["destination-in",6],["source-out",7],["destination-out",8],["source-atop",9],["destination-atop",10]]);const INDEX_TO_BLEND_MODE=new Map([...BLEND_MODE_TO_INDEX.entries()].map(a=>[a[1],a[0]]));const tempColor=C3.New(C3.Color);
self.ILayer=class ILayer{constructor(layer){map.set(this,layer);const effectInstanceArr=[];const effectList=layer.GetEffectList();const effectCount=effectList.GetAllEffectTypes().length;for(let i=0;i<effectCount;++i)effectInstanceArr.push(new self.IEffectInstance(effectList,i));Object.defineProperties(this,{name:{value:layer.GetName(),writable:false},index:{value:layer.GetIndex(),writable:false},layout:{value:layer.GetLayout().GetILayout(),writable:false},effects:{value:effectInstanceArr,writable:false}})}static _Unwrap(ilayer){return map.get(ilayer)}get isVisible(){return map.get(this).IsVisible()}set isVisible(v){map.get(this).SetVisible(v)}get opacity(){return map.get(this).GetOpacity()}set opacity(o){o=
C3.clamp(+o,0,1);if(isNaN(o))return;map.get(this).SetOpacity(o)}set scale(s){C3X.RequireFiniteNumber(s);map.get(this).SetOwnScale(s)}get scale(){return map.get(this).GetOwnScale()}set scaleRate(r){C3X.RequireFiniteNumber(r);map.get(this).SetScaleRate(r)}get scaleRate(){return map.get(this).GetScaleRate()}set angle(a){C3X.RequireFiniteNumber(a);map.get(this).SetAngle(a)}get angle(){return map.get(this).GetOwnAngle()}set parallaxX(p){C3X.RequireFiniteNumber(p);map.get(this).SetParallaxX(p)}get parallaxX(){return map.get(this).GetParallaxX()}set parallaxY(p){C3X.RequireFiniteNumber(p);
map.get(this).SetParallaxY(p)}get parallaxY(){return map.get(this).GetParallaxY()}set zElevation(z){C3X.RequireFiniteNumber(z);map.get(this).SetZElevation(z)}get zElevation(){return map.get(this).GetZElevation()}set isTransparent(t){map.get(this).SetTransparent(t)}get isTransparent(){return map.get(this).IsTransparent()}set isForceOwnTexture(f){map.get(this).SetForceOwnTexture(f)}get isForceOwnTexture(){return map.get(this).IsForceOwnTexture()}set blendMode(bm){C3X.RequireString(bm);const index=BLEND_MODE_TO_INDEX.get(bm);
if(typeof index!=="number")throw new Error("invalid blend mode");map.get(this).SetBlendMode(index)}get blendMode(){return INDEX_TO_BLEND_MODE.get(map.get(this).GetBlendMode())}set backgroundColor(arr){C3X.RequireArray(arr);if(arr.length<3)throw new Error("expected 3 elements");tempColor.setRgb(arr[0],arr[1],arr[2]);const layer=map.get(this);const bgColor=layer.GetBackgroundColor();if(bgColor.equalsIgnoringAlpha(tempColor))return;bgColor.copyRgb(tempColor);layer.GetRuntime().UpdateRender()}get backgroundColor(){const c=
map.get(this).GetBackgroundColor();return[c.getR(),c.getG(),c.getB()]}set scrollX(x){C3X.RequireNumber(x);const layer=map.get(this);layer.SetOwnScrollPositionEnabled(true);layer.SetScrollX(x)}get scrollX(){return map.get(this).GetScrollX()}set scrollY(y){C3X.RequireNumber(y);const layer=map.get(this);layer.SetOwnScrollPositionEnabled(true);layer.SetScrollY(y)}get scrollY(){return map.get(this).GetScrollY()}scrollTo(x,y){C3X.RequireNumber(x);C3X.RequireNumber(y);const layer=map.get(this);layer.SetOwnScrollPositionEnabled(true);
layer.SetScrollX(x);layer.SetScrollY(y)}restoreScrollPosition(){map.get(this).SetOwnScrollPositionEnabled(false)}getViewport(){return map.get(this).GetViewport().toDOMRect()}cssPxToLayer(clientX,clientY,z=0){C3X.RequireNumber(clientX);C3X.RequireNumber(clientY);C3X.RequireNumber(z);const layer=map.get(this);const runtime=layer.GetRuntime();return layer.CanvasCssToLayer(clientX-runtime.GetCanvasClientX(),clientY-runtime.GetCanvasClientY(),z)}layerToCssPx(layerX,layerY,z=0){C3X.RequireNumber(layerX);
C3X.RequireNumber(layerY);C3X.RequireNumber(z);const layer=map.get(this);const runtime=layer.GetRuntime();const [clientX,clientY]=layer.LayerToCanvasCss(layerX,layerY,z);return[clientX+runtime.GetCanvasClientX(),clientY+runtime.GetCanvasClientY()]}};

}

// interfaces/IInstance.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;const map=new WeakMap;const dispatchers=new WeakMap;function GetDispatcher(iinst){let dispatcher=dispatchers.get(iinst);if(dispatcher)return dispatcher;dispatcher=C3.New(C3.Event.Dispatcher);dispatchers.set(iinst,dispatcher);return dispatcher}let initInst=null;
self.IInstance=class IInstance{constructor(){map.set(this,initInst);const descriptors={runtime:{value:initInst.GetRuntime().GetIRuntime(),writable:false},objectType:{value:initInst.GetObjectClass().GetIObjectClass(),writable:false},uid:{value:initInst.GetUID(),writable:false}};initInst._GetInstVarsScriptDescriptor(descriptors);initInst._GetBehaviorsScriptDescriptor(descriptors);Object.defineProperties(this,descriptors);initInst.GetRuntime()._MapScriptInterface(this,initInst)}static _Init(inst){initInst=
inst}static _GetInitInst(){return initInst}_Release(){const dispatcher=dispatchers.get(this);if(dispatcher){dispatcher.Release();dispatchers.delete(this)}map.delete(this)}addEventListener(type,func,capture){C3X.RequireString(type);C3X.RequireFunction(func);GetDispatcher(this).addEventListener(type,func,capture)}removeEventListener(type,func,capture){C3X.RequireString(type);C3X.RequireFunction(func);GetDispatcher(this).removeEventListener(type,func,capture)}dispatchEvent(e){GetDispatcher(this).dispatchEvent(e)}destroy(){const inst=
map.get(this);inst.GetRuntime().DestroyInstance(inst)}};

}

// interfaces/IWorldInstance.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;const IInstance=self.IInstance;const ILayer=self.ILayer;const map=new WeakMap;const BLEND_MODE_TO_INDEX=new Map([["normal",0],["additive",1],["copy",3],["destination-over",4],["source-in",5],["destination-in",6],["source-out",7],["destination-out",8],["source-atop",9],["destination-atop",10]]);const INDEX_TO_BLEND_MODE=new Map([...BLEND_MODE_TO_INDEX.entries()].map(a=>[a[1],a[0]]));const tempColor=C3.New(C3.Color);
self.IWorldInstance=class IWorldInstance extends IInstance{constructor(){super();const inst=IInstance._GetInitInst();map.set(this,inst);const effectInstanceArr=[];const wi=inst.GetWorldInfo();const instanceEffectList=wi.GetInstanceEffectList();if(instanceEffectList){const effectCount=wi.GetObjectClass().GetEffectList().GetAllEffectTypes().length;for(let i=0;i<effectCount;++i)effectInstanceArr.push(new self.IEffectInstance(instanceEffectList,i))}const descriptors={effects:{value:effectInstanceArr,
writable:false}};Object.defineProperties(this,descriptors)}get layout(){return map.get(this).GetWorldInfo().GetLayout().GetILayout()}get layer(){return map.get(this).GetWorldInfo().GetLayer().GetILayer()}get x(){return map.get(this).GetWorldInfo().GetX()}set x(v){v=+v;const wi=map.get(this).GetWorldInfo();if(isNaN(v)||wi.GetX()===v)return;wi.SetX(v);wi.SetBboxChanged()}get y(){return map.get(this).GetWorldInfo().GetY()}set y(v){v=+v;const wi=map.get(this).GetWorldInfo();if(isNaN(v)||wi.GetY()===v)return;
wi.SetY(v);wi.SetBboxChanged()}get zElevation(){return map.get(this).GetWorldInfo().GetZElevation()}set zElevation(z){z=+z;const inst=map.get(this);const wi=inst.GetWorldInfo();if(isNaN(z)||wi.GetZElevation()===z)return;wi.SetZElevation(z);inst.GetRuntime().UpdateRender()}get totalZElevation(){return map.get(this).GetWorldInfo().GetTotalZElevation()}get width(){return map.get(this).GetWorldInfo().GetWidth()}set width(w){w=+w;const wi=map.get(this).GetWorldInfo();if(isNaN(w)||wi.GetWidth()===w)return;
wi.SetWidth(w);wi.SetBboxChanged()}get height(){return map.get(this).GetWorldInfo().GetHeight()}set height(h){h=+h;const wi=map.get(this).GetWorldInfo();if(isNaN(h)||wi.GetHeight()===h)return;wi.SetHeight(h);wi.SetBboxChanged()}get angle(){return map.get(this).GetWorldInfo().GetAngle()}set angle(a){a=C3.clampAngle(+a);const wi=map.get(this).GetWorldInfo();if(isNaN(a)||wi.GetAngle()===a)return;wi.SetAngle(a);wi.SetBboxChanged()}get angleDegrees(){return C3.toDegrees(this.angle)}set angleDegrees(a){this.angle=
C3.toRadians(a)}getBoundingBox(){return map.get(this).GetWorldInfo().GetBoundingBox().toDOMRect()}getBoundingQuad(){return map.get(this).GetWorldInfo().GetBoundingQuad().toDOMQuad()}get isVisible(){return map.get(this).GetWorldInfo().IsVisible()}set isVisible(v){v=!!v;const inst=map.get(this);const wi=inst.GetWorldInfo();if(wi.IsVisible()===v)return;wi.SetVisible(v);inst.GetRuntime().UpdateRender()}get opacity(){return map.get(this).GetWorldInfo().GetOpacity()}set opacity(o){o=C3.clamp(+o,0,1);const inst=
map.get(this);const wi=inst.GetWorldInfo();if(isNaN(o)||wi.GetOpacity()===o)return;wi.SetOpacity(o);inst.GetRuntime().UpdateRender()}set colorRgb(arr){C3X.RequireArray(arr);if(arr.length<3)throw new Error("expected 3 elements");tempColor.setRgb(arr[0],arr[1],arr[2]);const inst=map.get(this);const wi=inst.GetWorldInfo();if(wi.GetUnpremultipliedColor().equalsIgnoringAlpha(tempColor))return;wi.SetUnpremultipliedColor(tempColor);inst.GetRuntime().UpdateRender()}get colorRgb(){const c=map.get(this).GetWorldInfo().GetUnpremultipliedColor();
return[c.getR(),c.getG(),c.getB()]}set blendMode(bm){C3X.RequireString(bm);const index=BLEND_MODE_TO_INDEX.get(bm);if(typeof index!=="number")throw new Error("invalid blend mode");const inst=map.get(this);const wi=inst.GetWorldInfo();wi.SetBlendMode(index);inst.GetRuntime().UpdateRender()}get blendMode(){return INDEX_TO_BLEND_MODE.get(map.get(this).GetWorldInfo().GetBlendMode())}moveToTop(){map.get(this).GetWorldInfo().ZOrderMoveToTop()}moveToBottom(){map.get(this).GetWorldInfo().ZOrderMoveToBottom()}moveToLayer(ilayer){C3X.RequireInstanceOf(ilayer,
ILayer);const layer=ILayer._Unwrap(ilayer);if(!layer)throw new Error("invalid layer");map.get(this).GetWorldInfo().ZOrderMoveToLayer(layer)}moveAdjacentToInstance(other,isAfter){C3X.RequireInstanceOf(other,IWorldInstance);map.get(this).GetWorldInfo().ZOrderMoveAdjacentToInstance(map.get(other),isAfter)}get zIndex(){return map.get(this).GetWorldInfo().GetZIndex()}containsPoint(x,y){C3X.RequireNumber(x);C3X.RequireNumber(y);return map.get(this).GetWorldInfo().ContainsPoint(+x,+y)}testOverlap(worldInstance){C3X.RequireInstanceOf(worldInstance,
IWorldInstance);const a=map.get(this);const b=map.get(worldInstance);return a.GetRuntime().GetCollisionEngine().TestOverlap(a,b)}testOverlapSolid(){const inst=map.get(this);const overlapInst=inst.GetRuntime().GetCollisionEngine().TestOverlapSolid(inst);return overlapInst?overlapInst.GetInterfaceClass():null}getParent(){const parent=map.get(this).GetParent();return parent?parent.GetInterfaceClass():null}getTopParent(){const parent=map.get(this).GetTopParent();return parent?parent.GetInterfaceClass():
null}*parents(){for(const parent of map.get(this).parents())yield parent.GetInterfaceClass()}getChildCount(){return map.get(this).GetChildCount()}getChildAt(index){const child=map.get(this).GetChildAt(index);return child?child.GetInterfaceClass():null}*children(){for(const child of map.get(this).children())yield child.GetInterfaceClass()}*allChildren(){for(const child of map.get(this).allChildren())yield child.GetInterfaceClass()}addChild(ichild,opts){C3X.RequireInstanceOf(ichild,IWorldInstance);
C3X.RequireOptionalObject(opts);if(!opts)opts={};const inst=map.get(this);const child=map.get(ichild);inst.AddChild(child,opts)}removeChild(ichild){C3X.RequireInstanceOf(ichild,IWorldInstance);const inst=map.get(this);const child=map.get(ichild);inst.RemoveChild(child)}removeFromParent(){const inst=map.get(this);if(!inst.HasParent())return;const parent=inst.GetParent();parent.RemoveChild(inst)}createMesh(hsize,vsize){C3X.RequireFiniteNumber(hsize);C3X.RequireFiniteNumber(vsize);map.get(this).GetWorldInfo().CreateMesh(hsize,
vsize)}releaseMesh(){const wi=map.get(this).GetWorldInfo();wi.ReleaseMesh();wi.SetBboxChanged()}setMeshPoint(col,row,opts){C3X.RequireFiniteNumber(col);C3X.RequireFiniteNumber(row);C3X.RequireObject(opts);const wi=map.get(this).GetWorldInfo();if(wi.SetMeshPoint(col,row,opts))wi.SetBboxChanged()}getMeshSize(){const wi=map.get(this).GetWorldInfo();if(!wi.HasMesh())return[0,0];const sourceMesh=wi.GetSourceMesh();return[sourceMesh.GetHSize(),sourceMesh.GetVSize()]}};

}

// interfaces/IDOMInstance.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;const map=new WeakMap;self.IDOMInstance=class IDOMInstance extends self.IWorldInstance{constructor(){super();map.set(this,self.IInstance._GetInitInst())}getElement(){return map.get(this).GetSdkInstance()._GetElementInDOMMode()}focus(){map.get(this).GetSdkInstance().FocusElement()}blur(){map.get(this).GetSdkInstance().BlurElement()}setCssStyle(prop,val){C3X.RequireString(prop);map.get(this).GetSdkInstance().SetElementCSSStyle(prop,val)}};

}

// interfaces/IBehaviorInstance.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;const map=new WeakMap;const dispatchers=new WeakMap;function GetDispatcher(ibehinst){let dispatcher=dispatchers.get(ibehinst);if(dispatcher)return dispatcher;dispatcher=C3.New(C3.Event.Dispatcher);dispatchers.set(ibehinst,dispatcher);return dispatcher}let initBehInst=null;
self.IBehaviorInstance=class IBehaviorInstance{constructor(){map.set(this,initBehInst);const descriptors={runtime:{value:initBehInst.GetRuntime().GetIRuntime(),writable:false},behavior:{value:initBehInst.GetBehavior().GetIBehavior(),writable:false}};Object.defineProperties(this,descriptors)}static _Init(behInst){initBehInst=behInst}static _GetInitInst(){return initBehInst}get instance(){return map.get(this).GetObjectInstance().GetInterfaceClass()}_Release(){const dispatcher=dispatchers.get(this);
if(dispatcher){dispatcher.Release();dispatchers.delete(this)}map.delete(this)}addEventListener(type,func,capture){C3X.RequireString(type);C3X.RequireFunction(func);GetDispatcher(this).addEventListener(type,func,capture)}removeEventListener(type,func,capture){C3X.RequireString(type);C3X.RequireFunction(func);GetDispatcher(this).removeEventListener(type,func,capture)}dispatchEvent(e){GetDispatcher(this).dispatchEvent(e)}};

}

// interfaces/IBehavior.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;const map=new WeakMap;self.IBehavior=class IBehavior{constructor(behavior){map.set(this,behavior);const descriptors={runtime:{value:behavior.GetRuntime().GetIRuntime(),writable:false}};Object.defineProperties(this,descriptors)}getAllInstances(){return map.get(this).GetInstances().map(inst=>inst.GetInterfaceClass())}};

}

// interfaces/IEffectInstance.js
{
'use strict';const C3=self.C3;const C3X=self.C3X;const map=new WeakMap;
self.IEffectInstance=class IEffectInstance{constructor(effectList,index){map.set(this,effectList);const descriptors={index:{value:index,writable:false}};Object.defineProperties(this,descriptors)}get name(){const effectTypes=map.get(this).GetAllEffectTypes();return effectTypes[this.index].GetName()}get isActive(){return map.get(this).IsEffectIndexActive(this.index)}set isActive(a){a=!!a;const fxList=map.get(this);if(fxList.IsEffectIndexActive(this.index)===a)return;fxList.SetEffectIndexActive(this.index,
a);fxList.UpdateActiveEffects();fxList.GetRuntime().UpdateRender()}setParameter(i,v){C3X.RequireFiniteNumber(i);i=Math.floor(+i);const fxList=map.get(this);const paramsArr=fxList.GetEffectParametersForIndex(this.index);if(i<0||i>=paramsArr.length)throw new RangeError("invalid effect parameter index");const oldValue=paramsArr[i];if(oldValue instanceof C3.Color){if(!Array.isArray(v)||v.length<3)throw new TypeError("expected array with 3 elements");const r=v[0];const g=v[1];const b=v[2];if(oldValue.equalsRgb(r,
g,b))return;oldValue.setRgb(r,g,b)}else{if(typeof v!=="number")throw new TypeError("expected number");if(oldValue===v)return;paramsArr[i]=v}if(fxList.IsEffectIndexActive(this.index))fxList.GetRuntime().UpdateRender()}getParameter(i){C3X.RequireFiniteNumber(i);i=Math.floor(+i);const fxList=map.get(this);const paramsArr=fxList.GetEffectParametersForIndex(this.index);if(i<0||i>=paramsArr.length)throw new RangeError("invalid effect parameter index");const ret=paramsArr[i];if(ret instanceof C3.Color)return[ret.getR(),
ret.getG(),ret.getB()];else return ret}};

}

// assets/assetManager.js
{
'use strict';const C3=self.C3;const VALID_LOAD_POLICIES=new Set(["local","remote"]);const EXT_TO_TYPE=new Map([["mp4","video/mp4"],["webm","video/webm"],["m4a","audio/mp4"],["mp3","audio/mpeg"],["js","application/javascript"],["wasm","application/wasm"],["svg","image/svg+xml"],["html","text/html"]]);function GetTypeFromFileExtension(filename){if(!filename)return"";const parts=filename.split(".");if(parts.length<2)return"";const ext=parts.at(-1).toLowerCase();return EXT_TO_TYPE.get(ext)||""}
function AddScript(url){return new Promise((resolve,reject)=>{const elem=document.createElement("script");elem.onload=resolve;elem.onerror=reject;elem.async=false;elem.type="module";elem.src=url;document.head.appendChild(elem)})}
C3.AssetManager=class AssetManager extends C3.DefendedBase{constructor(runtime,opts){super();const exportType=opts["exportType"];this._runtime=runtime;this._localUrlBlobs=new Map;this._localBlobUrlCache=new Map;this._localBlobSWUrls=new Map;this._isCordova=exportType==="cordova";this._isiOSCordova=!!opts["isiOSCordova"];this._isFileProtocol=!!opts["isFileProtocol"];this._swClientId=opts["swClientId"];this._supportedAudioFormats=opts["supportedAudioFormats"]||{};this._audioFiles=new Map;this._preloadSounds=
false;this._mediaSubfolder="";this._fontsSubfolder="";this._iconsSubfolder="";const isRemoteLoadPolicy=exportType==="html5"||exportType==="scirra-arcade"||exportType==="instant-games";this._defaultLoadPolicy=isRemoteLoadPolicy?"remote":"local";this._allAssets=[];this._assetsByUrl=new Map;this._webFonts=[];this._loadPromises=[];this._hasFinishedInitialLoad=false;this._totalAssetSizeToLoad=0;this._assetSizeLoaded=0;this._lastLoadProgress=0;this._hasHadErrorLoading=false;this._loadingRateLimiter=C3.New(C3.RateLimiter,
()=>this._FireLoadingProgressEvent(),50);this._promiseThrottle=new C3.PromiseThrottle(Math.max(C3.hardwareConcurrency,8));const localUrlBlobs=opts["previewImageBlobs"];if(localUrlBlobs){const projectFileBlobs=opts["previewProjectFileBlobs"];if(projectFileBlobs)Object.assign(localUrlBlobs,projectFileBlobs);const projectData=opts["projectData"];if(projectData)localUrlBlobs["data.json"]=projectData;for(const [url,blob]of Object.entries(localUrlBlobs))this._localUrlBlobs.set(url.toLowerCase(),blob)}const localSWUrlMap=
opts["previewProjectFileSWUrls"];if(localSWUrlMap)for(const [srcUrl,destUrl]of Object.entries(localSWUrlMap))this._localBlobSWUrls.set(srcUrl,destUrl);this._iAssetManager=new self.IAssetManager(this)}Release(){this._localUrlBlobs.clear();for(const url of this._localBlobUrlCache.values())if(url.startsWith("blob:"))URL.revokeObjectURL(url);this._localBlobUrlCache.clear();for(const asset of this._allAssets)asset.Release();C3.clearArray(this._allAssets);this._assetsByUrl.clear();C3.clearArray(this._loadPromises);
this._runtime=null}GetRuntime(){return this._runtime}_SetMediaSubfolder(folder){this._mediaSubfolder=folder}GetMediaSubfolder(){return this._mediaSubfolder}_SetFontsSubfolder(folder){this._fontsSubfolder=folder}GetFontsSubfolder(){return this._fontsSubfolder}_SetIconsSubfolder(folder){this._iconsSubfolder=folder}GetIconsSubfolder(){return this._iconsSubfolder}IsFileProtocol(){return this._isFileProtocol}_HasLocalUrlBlob(url){return this._localUrlBlobs.has(url.toLowerCase())}_GetLocalUrlBlob(url){return this._localUrlBlobs.get(url.toLowerCase())||
null}GetLocalUrlAsBlobUrl(url){if(!this._HasLocalUrlBlob(url))return url;const lowerUrl=url.toLowerCase();let ret=this._localBlobUrlCache.get(lowerUrl);if(!ret){const blob=this._GetLocalUrlBlob(lowerUrl);ret=URL.createObjectURL(blob);this._localBlobUrlCache.set(lowerUrl,ret)}return ret}FetchBlob(url,loadPolicy){loadPolicy=loadPolicy||this._defaultLoadPolicy;const localBlob=this._GetLocalUrlBlob(url);if(localBlob)return Promise.resolve(localBlob);else if(C3.IsRelativeURL(url)){const lowerUrl=url.toLowerCase();
if(this._isCordova&&this._isFileProtocol)return this.CordovaFetchLocalFileAsBlob(lowerUrl);else if(loadPolicy==="local")return this._promiseThrottle.Add(()=>C3.FetchBlob(lowerUrl));else return C3.FetchBlob(lowerUrl)}else return C3.FetchBlob(url)}FetchArrayBuffer(url){const localBlob=this._GetLocalUrlBlob(url);if(localBlob)return C3.BlobToArrayBuffer(localBlob);else if(C3.IsRelativeURL(url)){const lowerUrl=url.toLowerCase();if(this._isCordova&&this._isFileProtocol)return this.CordovaFetchLocalFileAsArrayBuffer(lowerUrl);
else if(this._defaultLoadPolicy==="local")return this._promiseThrottle.Add(()=>C3.FetchArrayBuffer(lowerUrl));else return C3.FetchArrayBuffer(lowerUrl)}else return C3.FetchArrayBuffer(url)}FetchText(url){const localBlob=this._GetLocalUrlBlob(url);if(localBlob)return C3.BlobToString(localBlob);else if(C3.IsRelativeURL(url)){const lowerUrl=url.toLowerCase();if(this._isCordova&&this._isFileProtocol)return this.CordovaFetchLocalFileAsText(lowerUrl);else if(this._defaultLoadPolicy==="local")return this._promiseThrottle.Add(()=>
C3.FetchText(lowerUrl));else return C3.FetchText(lowerUrl)}else return C3.FetchText(url)}async FetchJson(url){const text=await this.FetchText(url);return JSON.parse(text)}_CordovaFetchLocalFileAs(filename,as_){return this._runtime.PostComponentMessageToDOMAsync("runtime","cordova-fetch-local-file",{"filename":filename,"as":as_})}CordovaFetchLocalFileAsText(filename){return this._CordovaFetchLocalFileAs(filename,"text")}async CordovaFetchLocalFileAsBlob(filename){const buffer=await this._CordovaFetchLocalFileAs(filename,
"buffer");const type=GetTypeFromFileExtension(filename);return new Blob([buffer],{"type":type})}async CordovaFetchLocalFileAsBlobURL(filename){filename=filename.toLowerCase();let blobUrl=this._localBlobUrlCache.get(filename);if(blobUrl)return blobUrl;const blob=await this.CordovaFetchLocalFileAsBlob(filename);blobUrl=URL.createObjectURL(blob);this._localBlobUrlCache.set(filename,blobUrl);return blobUrl}CordovaFetchLocalFileAsArrayBuffer(filename){return this._CordovaFetchLocalFileAs(filename,"buffer")}GetMediaFileUrl(filename){if(this._HasLocalUrlBlob(filename))return this.GetLocalUrlAsBlobUrl(filename);
else return this._mediaSubfolder+filename.toLowerCase()}GetProjectFileUrl(url,subfolder=""){if(C3.IsAbsoluteURL(url)){if(subfolder)throw new Error("cannot specify subfolder with remote URL");return Promise.resolve(url)}else if(this._HasLocalUrlBlob(url))return Promise.resolve(this.GetLocalUrlAsBlobUrl(url));else if(this._isCordova&&this._isFileProtocol)return this.CordovaFetchLocalFileAsBlobURL(subfolder+url);else return Promise.resolve(subfolder+url.toLowerCase())}GetProjectFileIframeUrl(url){if(C3.IsAbsoluteURL(url))return Promise.resolve(url);
else{const queryIndex=url.indexOf("?");const queryStr=queryIndex===-1?"":url.substr(queryIndex);const urlNoSearch=queryIndex===-1?url:url.substr(0,queryIndex);if(this._HasLocalUrlBlob(urlNoSearch)){let localUrl=this._localBlobSWUrls.get(urlNoSearch)||this.GetLocalUrlAsBlobUrl(urlNoSearch);if(!localUrl.startsWith("blob:")&&this._swClientId){const asUrl=new URL(localUrl);const params=new URLSearchParams(queryStr);params.set("__c3_client_id",this._swClientId);asUrl.search=params.toString();localUrl=
asUrl.toString()}return Promise.resolve(localUrl)}else if(this._isCordova&&this._isFileProtocol)return this.CordovaFetchLocalFileAsBlobURL(urlNoSearch);else return Promise.resolve(url.toLowerCase())}}LoadProjectFileUrl(url){return this.GetProjectFileUrl(url)}LoadImage(opts){if(opts.loadPolicy&&!VALID_LOAD_POLICIES.has(opts.loadPolicy))throw new Error("invalid load policy");let asset=this._assetsByUrl.get(opts.url);if(asset)return asset;asset=C3.New(C3.ImageAsset,this,{url:opts.url,size:opts.size||
0,loadPolicy:opts.loadPolicy||this._defaultLoadPolicy});this._allAssets.push(asset);this._assetsByUrl.set(asset.GetURL(),asset);if(!this._hasFinishedInitialLoad){this._totalAssetSizeToLoad+=asset.GetSize();this._loadPromises.push(asset.Load().then(()=>this._AddLoadedSize(asset.GetSize())))}return asset}async WaitForAllToLoad(){try{await Promise.all(this._loadPromises);this._lastLoadProgress=1}catch(err){console.error("Error loading: ",err);this._hasHadErrorLoading=true;this._FireLoadingProgressEvent()}}SetInitialLoadFinished(){this._hasFinishedInitialLoad=
true}HasHadErrorLoading(){return this._hasHadErrorLoading}_AddLoadedSize(s){this._assetSizeLoaded+=s;this._loadingRateLimiter.Call()}_FireLoadingProgressEvent(){const event=C3.New(C3.Event,"loadingprogress");this._lastLoadProgress=C3.clamp(this._assetSizeLoaded/this._totalAssetSizeToLoad,0,1);event.progress=this._lastLoadProgress;this._runtime.Dispatcher().dispatchEvent(event)}GetLoadProgress(){return this._lastLoadProgress}_SetWebFonts(arr){C3.shallowAssignArray(this._webFonts,arr);if(this._webFonts.length)this._loadPromises.push(this._LoadWebFonts())}_LoadWebFonts(){if(typeof FontFace===
"undefined")return Promise.resolve();const promises=[];for(const [name,filename,size]of this._webFonts){this._totalAssetSizeToLoad+=size;promises.push(this._LoadWebFont(name,filename).then(()=>this._AddLoadedSize(size)))}return Promise.all(promises)}async _LoadWebFont(name,filename){try{const url=await this.GetProjectFileUrl(filename,this._fontsSubfolder);const fontFace=new FontFace(name,`url('${url}')`);if(this._runtime.IsInWorker())self.fonts.add(fontFace);else document.fonts.add(fontFace);await fontFace.load()}catch(err){console.warn(`[C3 runtime] Failed to load web font '${name}': `,
err)}}IsAudioFormatSupported(type){return!!this._supportedAudioFormats[type]}_SetAudioFiles(arr,preloadSounds){this._preloadSounds=!!preloadSounds;for(const [fileName,projectFilesInfo,isMusic]of arr)this._audioFiles.set(fileName,{fileName,formats:projectFilesInfo.map(si=>({type:si[0],fileExtension:si[1],fullName:fileName+si[1],fileSize:si[2]})),isMusic})}GetPreferredAudioFile(namePart){const info=this._audioFiles.get(namePart.toLowerCase());if(!info)return null;let webMOpusFile=null;for(const formatInfo of info.formats){if(!webMOpusFile&&
formatInfo.type==="audio/webm; codecs=opus")webMOpusFile=formatInfo;if(this.IsAudioFormatSupported(formatInfo.type))return formatInfo}return webMOpusFile}GetProjectAudioFileUrl(namePart){const formatInfo=this.GetPreferredAudioFile(namePart);if(!formatInfo)return null;return{url:this.GetMediaFileUrl(formatInfo.fullName),type:formatInfo.type}}GetAudioToPreload(){if(this._preloadSounds){const ret=[];for(const info of this._audioFiles.values()){if(info.isMusic)continue;const formatInfo=this.GetPreferredAudioFile(info.fileName);
if(!formatInfo)continue;ret.push({originalUrl:info.fileName,url:this.GetMediaFileUrl(formatInfo.fullName),type:formatInfo.type,fileSize:formatInfo.fileSize})}return ret}else return[]}GetIAssetManager(){return this._iAssetManager}async LoadScripts(...urls){const scriptUrls=await Promise.all(urls.map(url=>this.GetProjectFileUrl(url)));if(this._runtime.IsInWorker())if(urls.length===1){const url=urls[0];await self.c3_import((C3.IsRelativeURL(url)?"./":"")+url)}else{const scriptStr=urls.map(url=>`import "${C3.IsRelativeURL(url)?
"./":""}${url}";`).join("\n");const blobUrl=URL.createObjectURL(new Blob([scriptStr],{type:"application/javascript"}));await self.c3_import(blobUrl)}else await Promise.all(scriptUrls.map(url=>AddScript(url)))}async CompileWebAssembly(url){if(WebAssembly.compileStreaming){const fetchUrl=await this.GetProjectFileUrl(url);return await WebAssembly.compileStreaming(fetch(fetchUrl))}else{const arrayBuffer=await C3.FetchArrayBuffer(url);return await WebAssembly.compile(arrayBuffer)}}async LoadStyleSheet(url){const fetchUrl=
await this.GetProjectFileUrl(url);return await this._runtime.PostComponentMessageToDOMAsync("runtime","add-stylesheet",{"url":fetchUrl})}};

}

// assets/asset.js
{
'use strict';const C3=self.C3;
C3.Asset=class Asset extends C3.DefendedBase{constructor(assetManager,opts){super();this._assetManager=assetManager;this._runtime=assetManager.GetRuntime();this._url=opts.url;this._size=opts.size;this._loadPolicy=opts.loadPolicy;this._blob=null;this._isLoaded=false;this._loadPromise=null}Release(){this._loadPromise=null;this._assetManager=null;this._runtime=null;this._blob=null}GetURL(){return this._url}GetSize(){return this._size}Load(){if(this._loadPolicy==="local"||this._blob){this._isLoaded=true;
return Promise.resolve()}if(this._loadPromise)return this._loadPromise;this._loadPromise=this._assetManager.FetchBlob(this._url,this._loadPolicy).then(blob=>{this._isLoaded=true;this._loadPromise=null;this._blob=blob;return blob}).catch(err=>console.error("Error loading resource: ",err));return this._loadPromise}IsLoaded(){return this._isLoaded}GetBlob(){if(this._blob)return Promise.resolve(this._blob);if(this._loadPromise)return this._loadPromise;return this._assetManager.FetchBlob(this._url,this._loadPolicy)}};

}

// assets/imageAsset.js
{
'use strict';const C3=self.C3;const promiseThrottle=new C3.PromiseThrottle;const allImageAssets=new Set;
C3.ImageAsset=class ImageAsset extends C3.Asset{constructor(assetManager,opts){super(assetManager,opts);this._texturePromise=null;this._webglTexture=null;this._refCount=0;this._imageWidth=-1;this._imageHeight=-1;allImageAssets.add(this)}Release(){this.ReleaseTexture();if(this._refCount!==0)throw new Error("released image asset which still has texture references");this._texturePromise=null;allImageAssets.delete(this);super.Release()}static OnWebGLContextLost(){for(const imageAsset of allImageAssets){imageAsset._texturePromise=
null;imageAsset._webglTexture=null;imageAsset._refCount=0}}LoadStaticTexture(renderer,opts){opts=opts||{};this._refCount++;if(this._webglTexture)return Promise.resolve(this._webglTexture);if(this._texturePromise)return this._texturePromise;opts.anisotropy=this._runtime.GetCanvasManager().GetTextureAnisotropy();this._texturePromise=this.GetBlob().then(blob=>promiseThrottle.Add(()=>renderer.CreateStaticTextureAsync(blob,opts).then(texture=>{this._texturePromise=null;if(this._refCount===0){renderer.DeleteTexture(texture);
return null}this._webglTexture=texture;this._imageWidth=texture.GetWidth();this._imageHeight=texture.GetHeight();return this._webglTexture}))).catch(err=>{console.error("Failed to load texture: ",err);throw err;});return this._texturePromise}ReleaseTexture(){if(this._refCount<=0)throw new Error("texture released too many times");this._refCount--;if(this._refCount===0&&this._webglTexture){const renderer=this._webglTexture.GetRenderer();renderer.DeleteTexture(this._webglTexture);this._webglTexture=
null}}GetTexture(){return this._webglTexture}GetWidth(){return this._imageWidth}GetHeight(){return this._imageHeight}async LoadToDrawable(){const blob=await this.GetBlob();if(C3.Supports.ImageBitmapOptions)return await createImageBitmap(blob,{"premultiplyAlpha":"none"});else if(C3.Supports.ImageBitmap)return await createImageBitmap(blob);else return await C3.BlobToImage(blob)}};

}

// layouts/renderCell.js
{
'use strict';const C3=self.C3;const assert=self.assert;function SortByInstLastCachedZIndex(a,b){return a.GetWorldInfo()._GetLastCachedZIndex()-b.GetWorldInfo()._GetLastCachedZIndex()}
C3.RenderCell=class RenderCell extends C3.DefendedBase{constructor(grid,x,y){super();this._grid=grid;this._x=x;this._y=y;this._instances=[];this._isSorted=true;this._pendingRemoval=new Set;this._isAnyPendingRemoval=false}Release(){C3.clearArray(this._instances);this._pendingRemoval.clear();this._grid=null}Reset(){C3.clearArray(this._instances);this._isSorted=true;this._pendingRemoval.clear();this._isAnyPendingRemoval=false}SetChanged(){this._isSorted=false}IsEmpty(){if(!this._instances.length)return true;
if(this._instances.length>this._pendingRemoval.size)return false;this._FlushPending();return true}Insert(inst){if(this._pendingRemoval.has(inst)){this._pendingRemoval.delete(inst);if(this._pendingRemoval.size===0)this._isAnyPendingRemoval=false;return}this._instances.push(inst);this._isSorted=this._instances.length===1}Remove(inst){this._pendingRemoval.add(inst);this._isAnyPendingRemoval=true;if(this._pendingRemoval.size>=50)this._FlushPending()}_FlushPending(){if(!this._isAnyPendingRemoval)return;
if(this._instances.length===this._pendingRemoval.size){this.Reset();return}C3.arrayRemoveAllInSet(this._instances,this._pendingRemoval);this._pendingRemoval.clear();this._isAnyPendingRemoval=false}_EnsureSorted(){if(this._isSorted)return;this._instances.sort(SortByInstLastCachedZIndex);this._isSorted=true}Dump(result){this._FlushPending();this._EnsureSorted();if(this._instances.length)result.push(this._instances)}};

}

// layouts/renderGrid.js
{
'use strict';const C3=self.C3;
C3.RenderGrid=class RenderGrid extends C3.DefendedBase{constructor(cellWidth,cellHeight){super();this._cellWidth=cellWidth;this._cellHeight=cellHeight;this._cells=C3.New(C3.PairMap)}Release(){this._cells.Release();this._cells=null}GetCell(x,y,createIfMissing){let ret=this._cells.Get(x,y);if(ret)return ret;else if(createIfMissing){ret=C3.New(C3.RenderCell,this,x,y);this._cells.Set(x,y,ret);return ret}else return null}XToCell(x){return Math.floor(x/this._cellWidth)}YToCell(y){return Math.floor(y/this._cellHeight)}Update(inst,
oldRange,newRange){if(oldRange)for(let x=oldRange.getLeft(),lenx=oldRange.getRight();x<=lenx;++x)for(let y=oldRange.getTop(),leny=oldRange.getBottom();y<=leny;++y){if(newRange&&newRange.containsPoint(x,y))continue;const cell=this.GetCell(x,y,false);if(!cell)continue;cell.Remove(inst);if(cell.IsEmpty())this._cells.Delete(x,y)}if(newRange)for(let x=newRange.getLeft(),lenx=newRange.getRight();x<=lenx;++x)for(let y=newRange.getTop(),leny=newRange.getBottom();y<=leny;++y){if(oldRange&&oldRange.containsPoint(x,
y))continue;this.GetCell(x,y,true).Insert(inst)}}QueryRange(rc,result){let x=this.XToCell(rc.getLeft());const ystart=this.YToCell(rc.getTop());const lenx=this.XToCell(rc.getRight());const leny=this.YToCell(rc.getBottom());for(;x<=lenx;++x)for(let y=ystart;y<=leny;++y){const cell=this.GetCell(x,y,false);if(!cell)continue;cell.Dump(result)}}MarkRangeChanged(rc){let x=rc.getLeft();const ystart=rc.getTop();const lenx=rc.getRight();const leny=rc.getBottom();for(;x<=lenx;++x)for(let y=ystart;y<=leny;++y){const cell=
this.GetCell(x,y,false);if(!cell)continue;cell.SetChanged()}}};

}

// layouts/layer.js
{
'use strict';const C3=self.C3;const tmpRect=new C3.Rect;const tmpQuad=new C3.Quad;const renderCellArr=[];const tmpDestRect=new C3.Rect;const tmpSrcRect=new C3.Rect;const glMatrix=self.glMatrix;const vec3=glMatrix.vec3;const vec4=glMatrix.vec4;const mat4=glMatrix.mat4;const tempMat4=mat4.create();const tempVec3=vec3.create();const tempVec4=vec4.create();const camVector=vec3.create();const lookVector=vec3.create();const upVector=vec3.create();const tempVec2=C3.New(C3.Vector2);
function SortByInstLastCachedZIndex(a,b){return a.GetWorldInfo()._GetLastCachedZIndex()-b.GetWorldInfo()._GetLastCachedZIndex()}function SortByInstZElevation(a,b){return a.GetWorldInfo().GetZElevation()-b.GetWorldInfo().GetZElevation()}const tempInstanceList1=[];const tempInstanceList2=[];const tempInstancesByCameraDist=[];
C3.Layer=class Layer extends C3.DefendedBase{constructor(layout,index,data){super();this._layout=layout;this._runtime=layout.GetRuntime();this._name=data[0];this._index=index;this._sid=data[2];this._isVisible=!!data[3];this._backgroundColor=C3.New(C3.Color);this._backgroundColor.setFromJSON(data[4].map(x=>x/255));this._isTransparent=!!data[5];this._parallaxX=data[6];this._parallaxY=data[7];this._color=C3.New(C3.Color,1,1,1,data[8]);this._premultipliedColor=C3.New(C3.Color);this._isForceOwnTexture=
data[9];this._renderAs3d=data[17];this._useCameraDistanceDrawOrder=data[18];this._useRenderCells=data[10];this._scaleRate=data[11];this._blendMode=data[12];this._curRenderTarget=null;this._scale=1;this._zElevation=data[16];this._angle=0;this._scrollX=0;this._scrollY=0;this._hasOwnScrollPosition=false;this._viewport=C3.New(C3.Rect);this._viewportZ0=C3.New(C3.Rect);this._viewport3D=C3.New(C3.Rect);this._projectionMatrix=mat4.create();this._isProjectionMatrixChanged=true;this._modelViewMatrix=mat4.create();
this._isMVMatrixChanged=true;this._viewFrustum=C3.New(C3.Gfx.ViewFrustum);this._isViewFrustumChanged=true;this._startupInitialInstances=[];this._initialInstances=[];this._createdGlobalUids=[];this._initialUIDsToInstanceData=new Map;this._instances=[];this._zIndicesUpToDate=false;this._anyInstanceZElevated=false;this._effectList=C3.New(C3.EffectList,this,data[15]);this._renderGrid=null;this._lastRenderList=[];this._isRenderListUpToDate=false;this._lastRenderCells=C3.New(C3.Rect,0,0,-1,-1);this._curRenderCells=
C3.New(C3.Rect,0,0,-1,-1);this._iLayer=new self.ILayer(this);this._UpdatePremultipliedColor();if(this.UsesRenderCells())this._renderGrid=C3.New(C3.RenderGrid,this._runtime.GetOriginalViewportWidth(),this._runtime.GetOriginalViewportHeight());for(const instData of data[14]){const objectClass=this._runtime.GetObjectClassByIndex(instData[1]);this._layout._AddInitialObjectClass(objectClass);if(!objectClass.GetDefaultInstanceData()){objectClass.SetDefaultInstanceData(instData);objectClass._SetDefaultLayerIndex(this._index)}this._initialInstances.push(instData);
this._initialUIDsToInstanceData.set(instData[2],instData)}C3.shallowAssignArray(this._startupInitialInstances,this._initialInstances)}static Create(layout,index,data){return C3.New(C3.Layer,layout,index,data)}Release(){this._layout=null;this._runtime=null}GetInitialInstanceData(uid){return this._initialUIDsToInstanceData.get(uid)}CreateInitialInstances(createdInstances){const isFirstVisit=this._layout.IsFirstVisit();let k=0;const initialInstances=this._initialInstances;for(let i=0,len=initialInstances.length;i<
len;++i){const instData=initialInstances[i];const objectClass=this._runtime.GetObjectClassByIndex(instData[1]);let keep=true;if(!objectClass.HasPersistBehavior()||isFirstVisit){const inst=this._runtime.CreateInstanceFromData(instData,this,true);createdInstances.push(inst);if(objectClass.IsGlobal()){keep=false;this._createdGlobalUids.push(inst.GetUID())}}if(keep){initialInstances[k]=initialInstances[i];++k}}C3.truncateArray(initialInstances,k);this._runtime.FlushPendingInstances();this.SetZIndicesChanged()}_AddInstance(inst,
addToGrid){const wi=inst.GetWorldInfo();if(wi.GetLayer()!==this)throw new Error("instance added to wrong layer");this._instances.push(inst);if(wi.GetZElevation()!==0)this._anyInstanceZElevated=true;if(addToGrid&&this.UsesRenderCells())inst.GetWorldInfo().SetBboxChanged();this.SetZIndicesChanged()}_MaybeAddInstance(inst){if(this._instances.includes(inst))return;this._instances.push(inst);if(inst.GetWorldInfo().GetZElevation()!==0)this._anyInstanceZElevated=true;this.SetZIndicesChanged()}_PrependInstance(inst,
addToGrid){const wi=inst.GetWorldInfo();if(wi.GetLayer()!==this)throw new Error("instance added to wrong layer");this._instances.unshift(inst);if(wi.GetZElevation()!==0)this._anyInstanceZElevated=true;this.SetZIndicesChanged();if(addToGrid&&this.UsesRenderCells())inst.GetWorldInfo().SetBboxChanged()}_RemoveInstance(inst,removeFromGrid){const index=this._instances.indexOf(inst);if(index<0)return;if(removeFromGrid&&this.UsesRenderCells())inst.GetWorldInfo()._RemoveFromRenderCells();this._instances.splice(index,
1);this.SetZIndicesChanged();this._MaybeResetAnyInstanceZElevatedFlag()}_SetAnyInstanceZElevated(){this._anyInstanceZElevated=true}_MaybeResetAnyInstanceZElevatedFlag(){if(this._instances.length===0)this._anyInstanceZElevated=false}_SortInstancesByLastCachedZIndex(isPersistMode){if(isPersistMode){const assignedZIndices=new Set;for(const inst of this._instances){const cachedZIndex=inst.GetWorldInfo()._GetLastCachedZIndex();if(cachedZIndex>=0)assignedZIndices.add(cachedZIndex)}let index=-1;for(const inst of this._instances){const wi=
inst.GetWorldInfo();if(wi._GetLastCachedZIndex()>=0)continue;++index;while(assignedZIndices.has(index))++index;wi._SetZIndex(index)}}this._instances.sort(SortByInstLastCachedZIndex)}_Start(){}_End(){for(const inst of this._instances)if(!inst.GetObjectClass().IsGlobal())this._runtime.DestroyInstance(inst);this._runtime.FlushPendingInstances();C3.clearArray(this._instances);this._anyInstanceZElevated=false;this.SetZIndicesChanged()}RecreateInitialObjects(objectClass,rc,offsetX,offsetY,createHierarchy){const eventSheetManager=
this._runtime.GetEventSheetManager();const allObjectClasses=this._runtime.GetAllObjectClasses();const isFamily=objectClass.IsFamily();const ret=[];for(const instData of this._initialInstances){const worldData=instData[0];const x=worldData[0];const y=worldData[1];if(!rc.containsPoint(x,y))continue;const objectType=allObjectClasses[instData[1]];if(objectType!==objectClass)if(isFamily){if(!objectClass.FamilyHasMember(objectType))continue}else continue;let createOnLayer=this;const runningLayout=this._runtime.GetCurrentLayout();
if(this.GetLayout()!==runningLayout){createOnLayer=runningLayout.GetLayerByName(this.GetName());if(!createOnLayer)createOnLayer=runningLayout.GetLayerByIndex(this.GetIndex())}const inst=this._runtime.CreateInstanceFromData(instData,createOnLayer,false,undefined,undefined,false,createHierarchy);createOnLayer.SortAndAddInstancesByZIndex(inst);const wi=inst.GetWorldInfo();wi.OffsetXY(offsetX,offsetY);wi.SetBboxChanged();eventSheetManager.BlockFlushingInstances(true);inst._TriggerOnCreatedOnSelfAndRelated();
eventSheetManager.BlockFlushingInstances(false);ret.push(inst)}return ret}GetInstanceCount(){return this._instances.length}GetLayout(){return this._layout}GetName(){return this._name}GetIndex(){return this._index}GetSID(){return this._sid}GetRuntime(){return this._runtime}GetDevicePixelRatio(){return this._runtime.GetDevicePixelRatio()}GetEffectList(){return this._effectList}UsesRenderCells(){return this._useRenderCells&&!this._useCameraDistanceDrawOrder}GetRenderGrid(){return this._renderGrid}SetRenderListStale(){this._isRenderListUpToDate=
false}IsVisible(){return this._isVisible}SetVisible(v){v=!!v;if(this._isVisible===v)return;this._isVisible=v;this._runtime.UpdateRender()}SetOwnScrollPositionEnabled(e){e=!!e;if(this._hasOwnScrollPosition===e)return;this._hasOwnScrollPosition=e;if(e){const layout=this.GetLayout();this._scrollX=layout.GetScrollX();this._scrollY=layout.GetScrollY()}this._SetMVMatrixChanged();this._runtime.UpdateRender()}IsOwnScrollPositionEnabled(){return this._hasOwnScrollPosition}SetScrollX(x){const layout=this.GetLayout();
const lbound=layout.GetScrollLeftBound();const rbound=layout.GetScrollRightBound();if(x>rbound)x=rbound;if(x<lbound)x=lbound;if(this._scrollX!==x){this._scrollX=x;if(this.IsOwnScrollPositionEnabled()){this._SetMVMatrixChanged();this._runtime.UpdateRender()}}}SetScrollY(y){const layout=this.GetLayout();const ubound=layout.GetScrollTopBound();const bbound=layout.GetScrollBottomBound();if(y>bbound)y=bbound;if(y<ubound)y=ubound;if(this._scrollY!==y){this._scrollY=y;if(this.IsOwnScrollPositionEnabled()){this._SetMVMatrixChanged();
this._runtime.UpdateRender()}}}GetScrollX(){if(this.IsOwnScrollPositionEnabled())return this._scrollX;else return this.GetLayout().GetScrollX()}GetScrollY(){if(this.IsOwnScrollPositionEnabled())return this._scrollY;else return this.GetLayout().GetScrollY()}GetViewport(){return this._viewport}GetViewport3D(){return this._viewport3D}_GetVanishingPoint(){const layout=this.GetLayout();return[layout.GetVanishingPointX(),layout.GetVanishingPointY()]}GetViewportForZ(z,outRect){const viewportZ0=this._viewportZ0;
if(z===0)outRect.copy(viewportZ0);else{let midX=viewportZ0.midX();let midY=viewportZ0.midY();const scaleFactor=this.Get2DScaleFactorToZ(z);const viewW=viewportZ0.width()/scaleFactor;const viewH=viewportZ0.height()/scaleFactor;const [vpX,vpY]=this._GetVanishingPoint();if(vpX!==.5||vpY!==.5){const cameraZ=this.GetCameraZ();const runtime=this._runtime;const zf=100/cameraZ;let camOffX=(vpX-.5)*runtime.GetViewportWidth()/zf;let camOffY=(vpY-.5)*runtime.GetViewportHeight()/zf;const a=this.GetAngle();if(a!==
0){tempVec2.set(camOffX,camOffY);tempVec2.rotate(a);camOffX=tempVec2.getX();camOffY=tempVec2.getY()}const zProg=C3.unlerp(cameraZ,0,z);midX+=C3.lerp(camOffX,0,zProg);midY+=C3.lerp(camOffY,0,zProg)}outRect.set(midX-viewW/2,midY-viewH/2,midX+viewW/2,midY+viewH/2)}}GetOpacity(){return this._color.getA()}SetOpacity(o){o=C3.clamp(o,0,1);if(this._color.getA()===o)return;this._color.setA(o);this._UpdatePremultipliedColor();this._runtime.UpdateRender()}_UpdatePremultipliedColor(){this._premultipliedColor.copy(this._color);
this._premultipliedColor.premultiply()}GetPremultipliedColor(){return this._premultipliedColor}HasDefaultColor(){return this._color.equalsRgba(1,1,1,1)}GetScaleRate(){return this._scaleRate}SetScaleRate(r){if(this._scaleRate===r)return;this._scaleRate=r;this._SetMVMatrixChanged();this._runtime.UpdateRender()}GetParallaxX(){return this._parallaxX}GetParallaxY(){return this._parallaxY}SetParallax(px,py){if(this._parallaxX===px&&this._parallaxY===py)return;this._parallaxX=px;this._parallaxY=py;this._SetMVMatrixChanged();
this._runtime.UpdateRender();if(this._parallaxX!==1||this._parallaxY!==1)for(const inst of this._instances)inst.GetObjectClass()._SetAnyInstanceParallaxed(true)}SetParallaxX(px){this.SetParallax(px,this.GetParallaxY())}SetParallaxY(py){this.SetParallax(this.GetParallaxX(),py)}SetZElevation(z){if(this._zElevation===z)return;this._zElevation=z;this._runtime.UpdateRender()}GetZElevation(){return this._zElevation}SetAngle(a){a=C3.clampAngle(a);if(this._angle===a)return;this._angle=a;this._SetMVMatrixChanged();
this._runtime.UpdateRender()}GetAngle(){return C3.clampAngle(this._layout.GetAngle()+this._angle)}GetOwnAngle(){return this._angle}HasInstances(){return this._instances.length>0}_GetInstances(){return this._instances}_GetInstancesInDrawOrder(){if(this.RendersIn3DMode()&&this._useCameraDistanceDrawOrder){C3.shallowAssignArray(tempInstancesByCameraDist,this._GetInstances());tempInstancesByCameraDist.sort((a,b)=>this._SortInstancesByCameraDistance(a,b));return tempInstancesByCameraDist}else return this._GetInstances()}_SortInstancesByCameraDistance(a,
b){const camVec=this.GetLayout().Get3DCameraPosition();const camX=camVec[0];const camY=camVec[1];const camZ=camVec[2];const wiA=a.GetWorldInfo();const wiB=b.GetWorldInfo();const dxA=wiA.GetX()-camX;const dyA=wiA.GetY()-camY;const dzA=wiA.GetZElevation()-camZ;const dxB=wiB.GetX()-camX;const dyB=wiB.GetY()-camY;const dzB=wiB.GetZElevation()-camZ;return dxB*dxB+dyB*dyB+dzB*dzB-(dxA*dxA+dyA*dyA+dzA*dzA)}GetBackgroundColor(){return this._backgroundColor}IsTransparent(){return this._isTransparent}SetTransparent(t){t=
!!t;if(this._isTransparent===t)return;this._isTransparent=t;this._runtime.UpdateRender()}IsForceOwnTexture(){return this._isForceOwnTexture}SetForceOwnTexture(f){f=!!f;if(this._isForceOwnTexture===f)return;this._isForceOwnTexture=f;this._runtime.UpdateRender()}RendersIn2DMode(){return!this.GetRuntime().Uses3DFeatures()||!this._renderAs3d}RendersIn3DMode(){return!this.RendersIn2DMode()}Has3DCamera(){return this.RendersIn3DMode()&&this.GetLayout().Is3DCameraEnabled()}SetBlendMode(bm){if(this._blendMode===
bm)return;this._blendMode=bm;this._runtime.UpdateRender()}GetBlendMode(){return this._blendMode}IsTransformCompatibleWith(otherLayer){return this===otherLayer||this._parallaxX===otherLayer._parallaxX&&this._parallaxY===otherLayer._parallaxY&&this._scale===otherLayer._scale&&this._scaleRate===otherLayer._scaleRate&&this._angle===otherLayer._angle&&this.GetScrollX()===otherLayer.GetScrollX()&&this.GetScrollY()===otherLayer.GetScrollY()}SaveTransform(){return{"parallaxX":this.GetParallaxX(),"parallaxY":this.GetParallaxY(),
"scale":this.GetOwnScale(),"scaleRate":this.GetScaleRate(),"angle":this.GetOwnAngle(),"hasOwnScroll":this.IsOwnScrollPositionEnabled(),"scrollX":this.GetScrollX(),"scrollY":this.GetScrollY()}}RestoreTransform(t){this.SetParallax(t["parallaxX"],t["parallaxY"]);this.SetOwnScale(t["scale"]);this.SetScaleRate(t["scaleRate"]);this.SetAngle(t["angle"]);this.SetOwnScrollPositionEnabled(t["hasOwnScroll"]);this.SetScrollX(t["scrollX"]);this.SetScrollY(t["scrollY"])}_RemoveAllInstancesInSet(s){if(s.size===
0)return;const numRemoved=C3.arrayRemoveAllInSet(this._instances,s);if(numRemoved>0){this._MaybeResetAnyInstanceZElevatedFlag();this.SetZIndicesChanged()}}SetZIndicesChanged(){this._zIndicesUpToDate=false;this._isRenderListUpToDate=false}_UpdateZIndices(){if(this._zIndicesUpToDate)return;this._instances.sort(SortByInstZElevation);if(this.UsesRenderCells())for(let i=0,len=this._instances.length;i<len;++i){const wi=this._instances[i].GetWorldInfo();wi._SetZIndex(i);this._renderGrid.MarkRangeChanged(wi.GetRenderCellRange())}else for(let i=
0,len=this._instances.length;i<len;++i)this._instances[i].GetWorldInfo()._SetZIndex(i);this._zIndicesUpToDate=true}MoveInstanceAdjacent(inst,other,isAfter){const instWi=inst.GetWorldInfo();const otherWi=other.GetWorldInfo();if(instWi.GetLayer()!==this||otherWi.GetLayer()!==this)throw new Error("can't arrange Z order unless both objects on this layer");const myZ=instWi.GetZIndex();let insertZ=otherWi.GetZIndex();if(myZ===insertZ+(isAfter?1:-1))return false;C3.arrayRemove(this._instances,myZ);if(myZ<
insertZ)insertZ--;if(isAfter)insertZ++;if(insertZ===this._instances.length)this._instances.push(inst);else this._instances.splice(insertZ,0,inst);this.SetZIndicesChanged();return true}_MergeSortedZArrays(a,b){const ret=[];let i=0,j=0,lena=a.length,lenb=b.length;while(i<lena&&j<lenb){const ai=a[i];const bj=b[j];if(ai.GetWorldInfo()._GetLastCachedZIndex()<bj.GetWorldInfo()._GetLastCachedZIndex()){ret.push(ai);++i}else{ret.push(bj);++j}}for(;i<lena;++i)ret.push(a[i]);for(;j<lenb;++j)ret.push(b[j]);return ret}_MergeAllSortedZArrays_pass(arr){const ret=
[];const len=arr.length;for(let i=0;i<len-1;i+=2){const arr1=arr[i];const arr2=arr[i+1];ret.push(this._MergeSortedZArrays(arr1,arr2))}if(len%2===1)ret.push(arr[len-1]);return ret}_MergeAllSortedZArrays(arr){while(arr.length>1)arr=this._MergeAllSortedZArrays_pass(arr);return arr[0]}_GetRenderCellInstancesToDraw(){this._UpdateZIndices();C3.clearArray(renderCellArr);this._renderGrid.QueryRange(this._viewport,renderCellArr);if(!renderCellArr.length)return[];if(renderCellArr.length===1)return renderCellArr[0];
return this._MergeAllSortedZArrays(renderCellArr)}_IsOpaque(){return!this.UsesOwnTexture()&&!this.IsTransparent()}ShouldDraw(){return this.IsVisible()&&this.GetOpacity()>0&&(this.HasInstances()||!this.IsTransparent())}UsesOwnTexture(){return this.IsForceOwnTexture()||!this.HasDefaultColor()||this.GetBlendMode()!==0||this._effectList.HasAnyActiveEffect()}GetRenderTarget(){return this._curRenderTarget}_CanFastPathDrawLayer(activeEffectTypes){if(activeEffectTypes.length===0)return true;if(activeEffectTypes.length>=
2)return false;const effectType=activeEffectTypes[0];const shaderProgram=effectType.GetShaderProgram();return!shaderProgram.MustPreDraw()&&!shaderProgram.UsesDest()&&!shaderProgram.UsesCrossSampling()&&this.HasDefaultColor()}Get2DScaleFactorToZ(z){if(this._layout.IsOrthographicProjection())return 1;else{const camZ=this.GetCameraZ();return camZ/(camZ-z)}}GetCameraZ(){return 100/this.GetNormalScale()}_SetMVMatrixChanged(){this._isMVMatrixChanged=true;this._isViewFrustumChanged=true}_GetModelViewMatrix(renderer){if(this._isMVMatrixChanged){this._CalculateModelViewMatrix(renderer,
this._modelViewMatrix,0,0,null);this._isMVMatrixChanged=false}return this._modelViewMatrix}_CalculateModelViewMatrix(renderer,outMat,offX,offY,viewH){const runtime=this._runtime;const layout=this.GetLayout();const renderScale=runtime.GetRenderScale();const parallaxOriginX=runtime.GetParallaxXOrigin();const parallaxOriginY=runtime.GetParallaxYOrigin();let scrollOriginX=(this.GetScrollX()-parallaxOriginX)*this._parallaxX+parallaxOriginX;let scrollOriginY=(this.GetScrollY()-parallaxOriginY)*this._parallaxY+
parallaxOriginY;if(this._runtime.IsPixelRoundingEnabled()){scrollOriginX=Math.round(scrollOriginX);scrollOriginY=Math.round(scrollOriginY)}if(this.Has3DCamera()){vec3.copy(camVector,layout.Get3DCameraPosition());vec3.copy(lookVector,layout.Get3DCameraLookAt());vec3.copy(upVector,layout.Get3DCameraUpVector());const lookDx=lookVector[0]-camVector[0];const lookDy=lookVector[1]-camVector[1];const lookDz=lookVector[2]-camVector[2];camVector[0]=(camVector[0]-parallaxOriginX)*this._parallaxX+parallaxOriginX;
camVector[1]=(camVector[1]-parallaxOriginY)*this._parallaxY+parallaxOriginY;camVector[2]*=Math.max(this._parallaxX,this._parallaxY);lookVector[0]=camVector[0]+lookDx;lookVector[1]=camVector[1]+lookDy;lookVector[2]=camVector[2]+lookDz;vec3.set(tempVec3,renderScale,renderScale,1);vec3.multiply(camVector,camVector,tempVec3);vec3.multiply(lookVector,lookVector,tempVec3)}else{let camX=(scrollOriginX+offX)*renderScale;let camY=(scrollOriginY+offY)*renderScale;const camZ=layout.IsOrthographicProjection()?
100:this.GetCameraZ();const a=this.GetAngle();const [vpX,vpY]=this._GetVanishingPoint();if(vpX!==.5||vpY!==.5){const zf=100/camZ;let camOffX=(vpX-.5)*runtime.GetViewportWidth()*renderScale/zf;let camOffY=(vpY-.5)*runtime.GetViewportHeight()*renderScale/zf;if(a!==0){tempVec2.set(camOffX,camOffY);tempVec2.rotate(a);camOffX=tempVec2.getX();camOffY=tempVec2.getY()}camX+=camOffX;camY+=camOffY}vec3.set(camVector,camX,camY,camZ);vec3.set(lookVector,camX,camY,camZ-100);if(a===0)vec3.set(upVector,0,1,0);else vec3.set(upVector,
Math.sin(a),Math.cos(a),0)}renderer.CalculateLookAtModelView(outMat,camVector,lookVector,upVector,viewH||runtime.GetCanvasManager().GetDrawHeight());if(renderScale!==1){vec3.set(tempVec3,renderScale,renderScale,1);mat4.scale(outMat,outMat,tempVec3)}}_SetProjectionMatrixChanged(){this._isProjectionMatrixChanged=true;this._isViewFrustumChanged=true}_GetProjectionMatrix(renderer){if(this._isProjectionMatrixChanged){this._CalculateProjectionMatrix(renderer);this._isProjectionMatrixChanged=false}return this._projectionMatrix}_CalculateProjectionMatrix(renderer){const canvasManager=
this._runtime.GetCanvasManager();const [vpX,vpY]=this._GetVanishingPoint();if(this._layout.IsOrthographicProjection())renderer.CalculateOrthographicMatrix(this._projectionMatrix,canvasManager.GetDrawWidth(),canvasManager.GetDrawHeight());else if(vpX===.5&&vpY===.5)mat4.copy(this._projectionMatrix,canvasManager.GetDefaultProjectionMatrix());else{const drawW=canvasManager.GetDrawWidth();const drawH=canvasManager.GetDrawHeight();renderer.CalculatePerspectiveMatrix(this._projectionMatrix,drawW/drawH,
vpX,vpY)}}_SetTransform(renderer,updateProjection=true,offX=0,offY=0,viewH=0){if(updateProjection)renderer.SetProjectionMatrix(this._GetProjectionMatrix(renderer));let modelViewMatrix=null;if(offX===0&&offY===0&&viewH===0)modelViewMatrix=this._GetModelViewMatrix(renderer);else{this._CalculateModelViewMatrix(renderer,tempMat4,offX,offY,viewH);modelViewMatrix=tempMat4}renderer.SetModelViewMatrix(modelViewMatrix)}PrepareForDraw(renderer){this._SetTransform(renderer);renderer.SetBaseZ(this.GetZElevation())}Draw(renderer,
destinationRenderTarget,isFirstDrawnLayer){const canvasManager=this._runtime.GetCanvasManager();const useOwnTexture=this.UsesOwnTexture();let ownRenderTarget=null;let layerQuery=null;if(this._runtime.IsGPUProfiling())if(renderer.IsWebGL()){const timingsBuffer=canvasManager.GetLayerTimingsBuffer(this);if(timingsBuffer){layerQuery=timingsBuffer.AddTimeElapsedQuery();renderer.StartQuery(layerQuery)}}else if(renderer.IsWebGPU())renderer.WriteTimestamp((this.GetIndex()+1)*2);if(useOwnTexture){const rtOpts=
{sampling:this._runtime.GetSampling()};if(canvasManager.GetCurrentFullscreenScalingQuality()==="low"){rtOpts.width=canvasManager.GetDrawWidth();rtOpts.height=canvasManager.GetDrawHeight()}ownRenderTarget=this._runtime.GetAdditionalRenderTarget(rtOpts);renderer.SetRenderTarget(ownRenderTarget);if(this.IsTransparent())renderer.ClearRgba(0,0,0,0);else renderer.Clear(this._backgroundColor)}else{renderer.SetRenderTarget(destinationRenderTarget);if(!this.IsTransparent()&&!isFirstDrawnLayer)renderer.Clear(this._backgroundColor)}this._curRenderTarget=
ownRenderTarget||destinationRenderTarget;this._SetTransform(renderer);renderer.SetBaseZ(this.GetZElevation());renderer.SetDepthEnabled(this.RendersIn3DMode());if(this.GetNormalScale()>Number.EPSILON){this._UpdateZIndices();const useRenderCells=this.UsesRenderCells()&&this.GetZElevation()===0&&!this._anyInstanceZElevated;if(this.Has3DCamera())this._DrawInstances_3DCamera(renderer);else if(useRenderCells)this._DrawInstances_RenderCells(renderer);else this._DrawInstances(renderer,this._GetInstancesInDrawOrder())}renderer.SetBaseZ(0);
renderer.SetCurrentZ(0);if(useOwnTexture){renderer.SetDepthEnabled(false);this._DrawLayerOwnTextureToRenderTarget(renderer,ownRenderTarget,destinationRenderTarget,isFirstDrawnLayer)}if(layerQuery)renderer.EndQuery(layerQuery);if(this._runtime.IsGPUProfiling()&&renderer.IsWebGPU())renderer.WriteTimestamp((this.GetIndex()+1)*2+1);this._curRenderTarget=null}_DrawInstances(renderer,instances){const viewport=this._viewport;const renderTarget=this._curRenderTarget;const isOrthographic=this.GetLayout().IsOrthographicProjection();
const hasVanishingPointOutsideViewport=this.GetLayout().HasVanishingPointOutsideViewport();let lastInst=null;for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];if(inst===lastInst)continue;lastInst=inst;const wi=inst.GetWorldInfo();if(wi.IsVisible()&&wi.IsInViewport(viewport,hasVanishingPointOutsideViewport,isOrthographic))this._DrawInstanceMaybeWithEffects(inst,wi,renderer,renderTarget)}}_DrawInstances_3DCamera(renderer){const renderTarget=this._curRenderTarget;const viewFrustum=
this._GetViewFrustum();const coplanarInstances=tempInstanceList1;const postRenderInstances=tempInstanceList2;const instances=this._GetInstancesInDrawOrder();for(let i=0,len=instances.length;i<len;){const inst=instances[i];const wi=inst.GetWorldInfo();if(!wi.IsVisible()||!wi.IsInViewport3D(viewFrustum)){++i;continue}if(!inst.RendersToOwnZPlane()||wi.GetDepth()>0)postRenderInstances.push(inst);const startZ=inst.GetWorldInfo().GetTotalZElevation();coplanarInstances.push(inst);let endIndex=i+1;for(;endIndex<
len;++endIndex){const nextInst=instances[endIndex];const nextWi=nextInst.GetWorldInfo();if(!nextWi.IsVisible()||!nextWi.IsInViewport3D(viewFrustum))continue;if(nextWi.GetTotalZElevation()!==startZ)break;if(!nextInst.RendersToOwnZPlane()){postRenderInstances.push(nextInst);continue}if(nextWi.GetDepth()>0)postRenderInstances.push(nextInst);coplanarInstances.push(nextInst)}if(coplanarInstances.length===1&&!coplanarInstances[0].MustMitigateZFighting()){this._DrawInstanceMaybeWithEffects(inst,wi,renderer,
renderTarget);for(let j=0,lenj=postRenderInstances.length;j<lenj;++j){const postInst=postRenderInstances[j];if(postInst===inst)continue;const postWi=postInst.GetWorldInfo();const postWiLayer=postWi.GetLayer();postWiLayer._DrawInstanceMaybeWithEffects(postInst,postWi,renderer,renderTarget)}}else{this._DrawCoplanarInstances_3DCamera(renderer,coplanarInstances);for(let j=0,lenj=postRenderInstances.length;j<lenj;++j){const postInst=postRenderInstances[j];const postWi=postInst.GetWorldInfo();postWi._SetDrawNonBackFacesOnly(true);
this._DrawInstanceMaybeWithEffects(postInst,postWi,renderer,renderTarget);postWi._SetDrawNonBackFacesOnly(false)}}i=endIndex;C3.clearArray(coplanarInstances);C3.clearArray(postRenderInstances)}}_DrawCoplanarInstances_3DCamera(renderer,instances){const renderTarget=this._curRenderTarget;renderer.CoplanarStartStencilPass();for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];const wi=inst.GetWorldInfo();wi._SetDrawBackFaceOnly(true);this._DrawInstance(inst,wi,renderer)}renderer.CoplanarStartColorPass();
for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];const wi=inst.GetWorldInfo();this._DrawInstanceMaybeWithEffects(inst,wi,renderer,renderTarget);wi._SetDrawBackFaceOnly(false)}renderer.CoplanarRestoreStandardRendering()}_DrawInstances_RenderCells(renderer){const renderGrid=this._renderGrid;const curRenderCells=this._curRenderCells;const lastRenderCells=this._lastRenderCells;const viewport=this._viewport;let instancesToDraw;curRenderCells.set(renderGrid.XToCell(viewport.getLeft()),
renderGrid.YToCell(viewport.getTop()),renderGrid.XToCell(viewport.getRight()),renderGrid.YToCell(viewport.getBottom()));if(!this._isRenderListUpToDate||!curRenderCells.equals(lastRenderCells)){instancesToDraw=this._GetRenderCellInstancesToDraw();this._isRenderListUpToDate=true;lastRenderCells.copy(curRenderCells)}else instancesToDraw=this._lastRenderList;this._DrawInstances(renderer,instancesToDraw);if(instancesToDraw!==this._lastRenderList)C3.shallowAssignArray(this._lastRenderList,instancesToDraw)}_DrawInstanceMaybeWithEffects(inst,
wi,renderer,renderTarget){if(wi.HasAnyActiveEffect())this._DrawInstanceWithEffectsAndRestore(inst,wi,renderer,renderTarget);else this._DrawInstance(inst,wi,renderer)}_DrawInstance(inst,wi,renderer){const wiStateGroup=wi.GetRendererStateGroup();if(renderer.GetCurrentStateGroup()!==wiStateGroup)wiStateGroup.Apply();inst.Draw(renderer)}_DrawInstanceWithEffectsAndRestore(inst,wi,renderer,renderTarget){if(this._DrawInstanceWithEffects(inst,wi,renderer,renderTarget,null))this._SetTransform(renderer)}_DrawInstanceWithEffects(inst,
wi,renderer,renderTarget,opts){const activeEffectTypes=wi.GetInstanceEffectList().GetActiveEffectTypes();if(activeEffectTypes.length===1){const effectType=activeEffectTypes[0];const shaderProgram=effectType.GetShaderProgram();if(!shaderProgram.NeedsPostDrawOrExtendsBox()&&wi.HasDefaultColor()&&!inst.MustPreDraw()){this._DrawInstanceWithEffects_FastPath(inst,wi,effectType,shaderProgram,renderer);return false}}const ret=C3.RenderEffectChain(renderer,this._runtime,inst,renderTarget,activeEffectTypes,
opts);renderer.SetBaseZ(this.GetZElevation());return ret}_DrawInstanceWithEffects_FastPath(inst,wi,effectType,shaderProgram,renderer){renderer.SetProgram(shaderProgram);renderer.SetBlendMode(wi.GetBlendMode());if(shaderProgram.IsAnimated())this._runtime.UpdateRender();let pixelWidth=0,pixelHeight=0;if(shaderProgram.UsesAnySrcRectOrPixelSize()){const [sheetWidth,sheetHeight]=inst.GetCurrentSurfaceSize();pixelWidth=1/sheetWidth;pixelHeight=1/sheetHeight;const instTexRect=inst.GetCurrentTexRect();if(instTexRect)tmpSrcRect.copy(instTexRect);
else tmpSrcRect.set(0,0,0,0)}const paramArr=wi.GetInstanceEffectList().GetEffectParametersForIndex(effectType.GetIndex());renderer.SetCurrentZ(wi.GetZElevation());renderer.SetProgramParameters(null,tmpDestRect,tmpSrcRect,tmpSrcRect,wi.GetBoundingBox(),pixelWidth,pixelHeight,this.GetOwnScale(),this.GetAngle(),this._runtime.GetGameTime(),paramArr);inst.Draw(renderer)}_DrawLayerOwnTextureToRenderTarget(renderer,ownRenderTarget,destinationRenderTarget,isFirstDrawnLayer){const activeEffectTypes=this._effectList.GetActiveEffectTypes();
const runtime=this._runtime;if(this._CanFastPathDrawLayer(activeEffectTypes)){renderer.SetRenderTarget(destinationRenderTarget);if(activeEffectTypes.length===1){const effectType=activeEffectTypes[0];const shaderProgram=effectType.GetShaderProgram();renderer.SetProgram(shaderProgram);tmpSrcRect.set(0,0,1,1);const paramArr=this._effectList.GetEffectParametersForIndex(effectType.GetIndex());renderer.SetProgramParameters(null,tmpDestRect,tmpSrcRect,tmpSrcRect,this._viewport,1/runtime.GetDrawWidth(),1/
runtime.GetDrawHeight(),this.GetNormalScale(),this.GetAngle(),runtime.GetGameTime(),paramArr);if(shaderProgram.IsAnimated())runtime.UpdateRender()}else renderer.SetTextureFillMode();if(isFirstDrawnLayer&&this._blendMode===0&&this.HasDefaultColor()&&activeEffectTypes.length===0)renderer.CopyRenderTarget(ownRenderTarget);else{renderer.SetBlendMode(this._blendMode);renderer.SetColor(this._premultipliedColor);renderer.DrawRenderTarget(ownRenderTarget)}renderer.InvalidateRenderTarget(ownRenderTarget);
runtime.ReleaseAdditionalRenderTarget(ownRenderTarget)}else C3.RenderEffectChain(renderer,runtime,this,destinationRenderTarget,activeEffectTypes)}GetOwnScale(){return this._scale}SetOwnScale(s){if(this._scale===s)return;this._scale=s;this._layout.BoundScrolling();this._SetMVMatrixChanged();this._runtime.UpdateRender()}GetRenderScale(){return this.GetNormalScale()*this._runtime.GetRenderScale()}GetDisplayScale(){return this.GetNormalScale()*this._runtime.GetDisplayScale()}GetNormalScale(){return(this._scale*
this._layout.GetScale()-1)*this._scaleRate+1}UpdateViewport(){const parallaxOriginX=this._runtime.GetParallaxXOrigin();const parallaxOriginY=this._runtime.GetParallaxYOrigin();const scrollOriginX=(this.GetScrollX()-parallaxOriginX)*this._parallaxX+parallaxOriginX;const scrollOriginY=(this.GetScrollY()-parallaxOriginY)*this._parallaxY+parallaxOriginY;const normalScale=this.GetNormalScale();const scaledViewportWidth=this._runtime.GetViewportWidth()/normalScale;const scaledViewportHeight=this._runtime.GetViewportHeight()/
normalScale;let px=scrollOriginX-scaledViewportWidth/2;let py=scrollOriginY-scaledViewportHeight/2;if(this._runtime.IsPixelRoundingEnabled()){px=Math.round(px);py=Math.round(py)}const viewportZ0=this._viewportZ0;viewportZ0.set(px,py,px+scaledViewportWidth,py+scaledViewportHeight);const myAngle=this.GetAngle();if(myAngle!==0){tmpRect.copy(viewportZ0);tmpRect.offset(-viewportZ0.midX(),-viewportZ0.midY());tmpQuad.setFromRotatedRect(tmpRect,myAngle);tmpQuad.getBoundingBox(tmpRect);tmpRect.offset(viewportZ0.midX(),
viewportZ0.midY());viewportZ0.copy(tmpRect)}const layerZ=this._zElevation;this.GetViewportForZ(layerZ,this._viewport);if(this.Has3DCamera())this.CalculateViewport3D(layerZ,this._viewport3D);else this._viewport3D.copy(this._viewport)}CalculateViewport3D(z,outRect){const canvasManager=this._runtime.GetCanvasManager();const canvasWidth=canvasManager.GetCssWidth();const canvasHeight=canvasManager.GetCssHeight();const [tlx,tly]=this.CanvasCssToLayer(0,0,z);const [trx,try_]=this.CanvasCssToLayer(canvasWidth,
0,z);const [brx,bry]=this.CanvasCssToLayer(canvasWidth,canvasHeight,z);const [blx,bly]=this.CanvasCssToLayer(0,canvasHeight,z);let left=Math.min(tlx,trx,brx,blx);let top=Math.min(tly,try_,bry,bly);let right=Math.max(tlx,trx,brx,blx);let bottom=Math.max(tly,try_,bry,bly);if(!isFinite(left))left=-Infinity;if(!isFinite(top))top=-Infinity;if(!isFinite(right))right=Infinity;if(!isFinite(bottom))bottom=Infinity;outRect.set(left,top,right,bottom)}CanvasCssToLayer(ptx,pty,z=0){return this._CanvasToLayer(ptx,
pty,z,this.GetDisplayScale())}DrawSurfaceToLayer(ptx,pty,z=0){return this._CanvasToLayer(ptx,pty,z,this.GetRenderScale()*this.GetDevicePixelRatio())}_CanvasToLayer(canvasX,canvasY,zElevation,displayScale){const runtime=this._runtime;const renderer=runtime.GetRenderer();const normalScale=this.GetNormalScale();const scaledViewportWidth=runtime.GetViewportWidth()/normalScale;const scaledViewportHeight=runtime.GetViewportHeight()/normalScale;const viewport=tempVec4;vec4.set(viewport,0,0,scaledViewportWidth,
scaledViewportHeight);canvasX=canvasX/displayScale;canvasY=viewport[3]-canvasY/displayScale;const matP=this._GetProjectionMatrix(renderer);const matMV=this._GetModelViewMatrix(renderer);const objectCoord=tempVec3;const result=C3.Gfx.UnprojectScreenToWorldZ(canvasX,canvasY,zElevation,matMV,matP,viewport,objectCoord);if(result)return[objectCoord[0],objectCoord[1]];else return[NaN,NaN]}CanvasCssToLayer_DefaultTransform(ptx,pty){const scale=this._scale;const scaleRate=this._scaleRate;const parallaxX=
this._parallaxX;const parallaxY=this._parallaxY;const angle=this._angle;this._scale=1;this._scaleRate=1;this._parallaxX=1;this._parallaxY=1;this._angle=0;this._SetMVMatrixChanged();const ret=this.CanvasCssToLayer(ptx,pty);this._scale=scale;this._scaleRate=scaleRate;this._parallaxX=parallaxX;this._parallaxY=parallaxY;this._angle=angle;this._SetMVMatrixChanged();return ret}LayerToCanvasCss(ptx,pty,z=0){return this._LayerToCanvas(ptx,pty,z,this.GetDisplayScale())}LayerToDrawSurface(ptx,pty,z=0){return this._LayerToCanvas(ptx,
pty,z,this.GetRenderScale()*this.GetDevicePixelRatio())}_LayerToCanvas(layerX,layerY,zElevation,displayScale){const runtime=this._runtime;const renderer=runtime.GetRenderer();const normalScale=this.GetNormalScale();const scaledViewportWidth=runtime.GetViewportWidth()/normalScale;const scaledViewportHeight=runtime.GetViewportHeight()/normalScale;const viewport=tempVec4;vec4.set(viewport,0,0,scaledViewportWidth,scaledViewportHeight);const matP=this._GetProjectionMatrix(renderer);const matMV=this._GetModelViewMatrix(renderer);
const windowCoord=tempVec3;const result=C3.Gfx.Project(layerX,layerY,zElevation,matMV,matP,viewport,windowCoord);if(result)return[windowCoord[0]*displayScale,(viewport[3]-windowCoord[1])*displayScale];else return[NaN,NaN]}_GetLayerToDrawSurfaceScale(size,zElevation){size*=this.GetRenderScale()*this.GetDevicePixelRatio();if(zElevation!==0)size*=this.Get2DScaleFactorToZ(zElevation);return size}_GetViewFrustum(){if(this._isViewFrustumChanged){this._UpdateViewFrustum();this._isViewFrustumChanged=false}return this._viewFrustum}_UpdateViewFrustum(){const renderer=
this._runtime.GetRenderer();const matP=this._GetProjectionMatrix(renderer);const matMV=this._GetModelViewMatrix(renderer);this._viewFrustum.CalculatePlanes(matMV,matP)}_SaveToJson(){const o={"s":this.GetOwnScale(),"a":this.GetOwnAngle(),"vl":this._viewport.getLeft(),"vt":this._viewport.getTop(),"vr":this._viewport.getRight(),"vb":this._viewport.getBottom(),"v":this.IsVisible(),"bc":this._backgroundColor.toJSON(),"t":this.IsTransparent(),"sx":this._scrollX,"sy":this._scrollY,"hosp":this._hasOwnScrollPosition,
"px":this.GetParallaxX(),"py":this.GetParallaxY(),"c":this._color.toJSON(),"sr":this.GetScaleRate(),"fx":this._effectList.SaveToJson(),"cg":this._createdGlobalUids};return o}_LoadFromJson(o){this._scale=o["s"];this._angle=o["a"];this._viewport.set(o["vl"],o["vt"],o["vr"],o["vb"]);this._isVisible=!!o["v"];this._backgroundColor.setFromJSON(o["bc"]);this._isTransparent=!!o["t"];if(o.hasOwnProperty("sx"))this._scrollX=o["sx"];if(o.hasOwnProperty("sy"))this._scrollY=o["sy"];if(o.hasOwnProperty("hosp"))this._hasOwnScrollPosition=
!!o["hosp"];this._parallaxX=o["px"];this._parallaxY=o["py"];this._color.setFromJSON(o["c"]);this._scaleRate=o["sr"];C3.shallowAssignArray(this._createdGlobalUids,o["cg"]);C3.shallowAssignArray(this._initialInstances,this._startupInitialInstances);const tempSet=new Set(this._createdGlobalUids);let j=0;for(let i=0,len=this._initialInstances.length;i<len;++i)if(!tempSet.has(this._initialInstances[i][2])){this._initialInstances[j]=this._initialInstances[i];++j}C3.truncateArray(this._initialInstances,
j);this._effectList.LoadFromJson(o["fx"]);this._SortInstancesByLastCachedZIndex(false);this.SetZIndicesChanged()}GetILayer(){return this._iLayer}SortAndAddInstancesByZIndex(inst){const wi=inst.GetWorldInfo();if(this._instances.includes(inst))return;if(inst.HasChildren()){const instances=[...inst.allChildren()];instances.push(inst);instances.sort((f,s)=>{const firstZIndex=f.GetWorldInfo().GetSceneGraphZIndex();const secondZIndex=s.GetWorldInfo().GetSceneGraphZIndex();return firstZIndex-secondZIndex});
for(const instanceToAdd of instances){if(!instanceToAdd.IsInContainer())continue;for(const instanceToAddSibling of instanceToAdd.siblings()){if(instances.includes(instanceToAddSibling))continue;const siblingAndChildren=[...instanceToAddSibling.allChildren()];siblingAndChildren.push(instanceToAddSibling);siblingAndChildren.sort((f,s)=>{const firstZIndex=f.GetWorldInfo().GetSceneGraphZIndex();const secondZIndex=s.GetWorldInfo().GetSceneGraphZIndex();return firstZIndex-secondZIndex});if(!siblingAndChildren||
!siblingAndChildren.length)continue;instances.splice(instances.length,0,...siblingAndChildren)}}for(const instance of instances)this._AddInstance(instance,true)}else{this._AddInstance(inst,true);if(!inst.IsInContainer())return;for(const sibling of inst.siblings()){const siblingAndChildren=[...sibling.allChildren()];siblingAndChildren.push(sibling);siblingAndChildren.sort((f,s)=>{const firstZIndex=f.GetWorldInfo().GetSceneGraphZIndex();const secondZIndex=s.GetWorldInfo().GetSceneGraphZIndex();return firstZIndex-
secondZIndex});if(!siblingAndChildren||!siblingAndChildren.length)continue;for(const instance of siblingAndChildren)this._AddInstance(instance,true)}}}};

}

// layouts/layout.js
{
'use strict';const C3=self.C3;const C3Debugger=self.C3Debugger;const assert=self.assert;const tempDestRect=C3.New(C3.Rect);const tempSrcRect=C3.New(C3.Rect);const tempLayoutRect=C3.New(C3.Rect);const tempColor=C3.New(C3.Color);const glMatrix=self.glMatrix;const vec3=glMatrix.vec3;const tempLayerList=[];const tempRender3dList=[];const tempInstanceList1=[];const tempInstanceList2=[];const tempInstanceList3=[];
function vec3EqualsXYZ(v,x,y,z){return v[0]===Math.fround(x)&&v[1]===Math.fround(y)&&v[2]===Math.fround(z)}let lastLayerPreparedForDrawing=null;function MaybePrepareLayerDraw(layer,renderer){if(lastLayerPreparedForDrawing===layer)return;layer.PrepareForDraw(renderer);lastLayerPreparedForDrawing=layer}
C3.Layout=class Layout extends C3.DefendedBase{constructor(layoutManager,index,data){super();this._layoutManager=layoutManager;this._runtime=layoutManager.GetRuntime();this._name=data[0];this._originalWidth=data[1];this._originalHeight=data[2];this._width=data[1];this._height=data[2];this._isUnboundedScrolling=!!data[3];this._isOrthographicProjection=!!data[4];this._vanishingPointX=data[5];this._vanishingPointY=data[6];this._eventSheetName=data[7];this._eventSheet=null;this._sid=data[8];this._index=
index;this._scrollX=0;this._scrollY=0;this._scale=1;this._angle=0;this._initialObjectClasses=new Set;this._textureLoadedTypes=new Set;this._textureLoadPendingPromises=new Set;this._createdInstances=[];this._initialNonWorld=[];this._is3dCameraEnabled=false;this._cam3dposition=vec3.create();this._cam3dlook=vec3.create();this._cam3dup=vec3.create();this._layers=[];this._layersByName=new Map;this._layersBySid=new Map;this._effectList=C3.New(C3.EffectList,this,data[11]);this._curRenderTarget=null;this._persistData=
{};this._isFirstVisit=true;this._iLayout=new self.ILayout(this);this._userScriptDispatcher=C3.New(C3.Event.Dispatcher);for(const layerData of data[9]){const layer=C3.Layer.Create(this,this._layers.length,layerData);this._layers.push(layer);this._layersByName.set(layer.GetName().toLowerCase(),layer);this._layersBySid.set(layer.GetSID(),layer)}for(const instData of data[10]){const objectClass=this._runtime.GetObjectClassByIndex(instData[1]);if(!objectClass)throw new Error("missing nonworld object class");
if(!objectClass.GetDefaultInstanceData())objectClass.SetDefaultInstanceData(instData);this._initialNonWorld.push(instData);this._AddInitialObjectClass(objectClass)}}Release(){for(const l of this._layers)l.Release();C3.clearArray(this._layers);this._textureLoadPendingPromises.clear();this._eventSheet=null;this._layoutManager=null;this._runtime=null}GetRuntime(){return this._runtime}GetName(){return this._name}GetSID(){return this._sid}GetIndex(){return this._index}GetEffectList(){return this._effectList}GetMinLayerScale(){let m=
this._layers[0].GetNormalScale();for(let i=1,len=this._layers.length;i<len;++i){const layer=this._layers[i];if(layer.GetParallaxX()===0&&layer.GetParallaxY()===0)continue;m=Math.min(m,layer.GetNormalScale())}return m}_GetScrollBoundMarginHorizontal(){return.5*this._runtime.GetViewportWidth()/this.GetMinLayerScale()}_GetScrollBoundMarginVertical(){return.5*this._runtime.GetViewportHeight()/this.GetMinLayerScale()}GetScrollLeftBound(){if(this.IsUnboundedScrolling())return-Infinity;else return this._GetScrollBoundMarginHorizontal()}GetScrollRightBound(){if(this.IsUnboundedScrolling())return Infinity;
else return this.GetWidth()-this._GetScrollBoundMarginHorizontal()}GetScrollTopBound(){if(this.IsUnboundedScrolling())return-Infinity;else return this._GetScrollBoundMarginVertical()}GetScrollBottomBound(){if(this.IsUnboundedScrolling())return Infinity;else return this.GetHeight()-this._GetScrollBoundMarginVertical()}SetScrollX(x){const lbound=this.GetScrollLeftBound();const rbound=this.GetScrollRightBound();if(x>rbound)x=rbound;if(x<lbound)x=lbound;if(this._scrollX!==x){this._scrollX=x;this._SetAllLayersMVChanged();
this._runtime.UpdateRender()}}GetScrollX(){return this._scrollX}SetScrollY(y){const ubound=this.GetScrollTopBound();const bbound=this.GetScrollBottomBound();if(y>bbound)y=bbound;if(y<ubound)y=ubound;if(this._scrollY!==y){this._scrollY=y;this._SetAllLayersMVChanged();this._runtime.UpdateRender()}}GetScrollY(){return this._scrollY}IsUnboundedScrolling(){return this._isUnboundedScrolling}BoundScrolling(){this.SetScrollX(this.GetScrollX());this.SetScrollY(this.GetScrollY());for(const layer of this._layers)if(layer.IsOwnScrollPositionEnabled()){layer.SetScrollX(layer.GetScrollX());
layer.SetScrollY(layer.GetScrollY())}}SetVanishingPointXY(vpX,vpY){if(this._vanishingPointX===vpX&&this._vanishingPointY===vpY)return;this._vanishingPointX=vpX;this._vanishingPointY=vpY;if(this.IsPerspectiveProjection()){this._SetAllLayersProjectionChanged();this._SetAllLayersMVChanged();this._runtime.UpdateRender()}}GetVanishingPointX(){if(this.IsOrthographicProjection())return.5;else return this._vanishingPointX}GetVanishingPointY(){if(this.IsOrthographicProjection())return.5;else return this._vanishingPointY}HasVanishingPointOutsideViewport(){const vpX=
this.GetVanishingPointX();const vpY=this.GetVanishingPointY();return vpX<0||vpX>1||vpY<0||vpY>1}SetPerspectiveProjection(){if(!this._isOrthographicProjection)return;this._isOrthographicProjection=false;this._SetAllLayersProjectionChanged();this._SetAllLayersMVChanged();this._runtime.UpdateRender()}SetOrthographicProjection(){if(this._isOrthographicProjection)return;this._isOrthographicProjection=true;this._SetAllLayersProjectionChanged();this._SetAllLayersMVChanged();this._runtime.UpdateRender()}IsOrthographicProjection(){return this._isOrthographicProjection}IsPerspectiveProjection(){return!this.IsOrthographicProjection()}Set3DCameraEnabled(e){e=
!!e;if(this._is3dCameraEnabled===e)return;this._is3dCameraEnabled=e;this._SetAllLayersMVChanged();this._runtime.UpdateRender()}Is3DCameraEnabled(){return this._is3dCameraEnabled}Set3DCameraOrientation(camX,camY,camZ,lookX,lookY,lookZ,upX,upY,upZ){if(vec3EqualsXYZ(this._cam3dposition,camX,camY,camZ)&&vec3EqualsXYZ(this._cam3dlook,lookX,lookY,lookZ)&&vec3EqualsXYZ(this._cam3dup,upX,upY,upZ))return;vec3.set(this._cam3dposition,camX,camY,camZ);vec3.set(this._cam3dlook,lookX,lookY,lookZ);vec3.set(this._cam3dup,
upX,upY,upZ);this.Set3DCameraChanged()}Set3DCameraChanged(){this._SetAllLayersMVChanged();this._runtime.UpdateRender()}Get3DCameraPosition(){return this._cam3dposition}Get3DCameraLookAt(){return this._cam3dlook}Get3DCameraUpVector(){return this._cam3dup}GetScale(){return this._scale}SetScale(s){if(this._scale===s)return;this._scale=s;this._SetAllLayersMVChanged();this.BoundScrolling();this._runtime.UpdateRender()}SetAngle(a){a=C3.clampAngle(a);if(this._angle===a)return;this._angle=a;this._SetAllLayersMVChanged();
this._runtime.UpdateRender()}GetAngle(){return this._angle}GetWidth(){return this._width}SetWidth(w){if(!isFinite(w)||w<1)return;this._width=w}GetHeight(){return this._height}SetHeight(h){if(!isFinite(h)||h<1)return;this._height=h}GetEventSheet(){return this._eventSheet}GetLayers(){return this._layers}GetLayerCount(){return this._layers.length}GetLayer(p){if(typeof p==="number")return this.GetLayerByIndex(p);else return this.GetLayerByName(p.toString())}GetLayerByIndex(i){i=C3.clamp(Math.floor(i),
0,this._layers.length-1);return this._layers[i]}GetLayerByName(name){return this._layersByName.get(name.toLowerCase())||null}GetLayerBySID(sid){return this._layersBySid.get(sid)||null}_SetAllLayersProjectionChanged(){for(const layer of this._layers)layer._SetProjectionMatrixChanged()}_SetAllLayersMVChanged(){for(const layer of this._layers)layer._SetMVMatrixChanged()}SaveTransform(){return{"scrollX":this.GetScrollX(),"scrollY":this.GetScrollY(),"scale":this.GetScale(),"angle":this.GetAngle(),"vpX":this.GetVanishingPointX(),
"vpY":this.GetVanishingPointY()}}RestoreTransform(t){this.SetScrollX(t["scrollX"]);this.SetScrollY(t["scrollY"]);this.SetScale(t["scale"]);this.SetAngle(t["angle"]);this.SetVanishingPointXY(t["vpX"],t["vpY"])}HasOpaqueBottomLayer(){for(const layer of this._layers)if(layer.ShouldDraw())return layer._IsOpaque();return false}GetLayoutBackgroundColor(){for(const layer of this._layers)if(layer.ShouldDraw()&&layer._IsOpaque()){tempColor.copyRgb(layer.GetBackgroundColor());tempColor.setA(1);return tempColor}tempColor.setRgba(0,
0,0,0);return tempColor}IsFirstVisit(){return this._isFirstVisit}_GetInitialObjectClasses(){return[...this._initialObjectClasses]}_AddInitialObjectClass(objectClass){if(objectClass.IsInContainer())for(const containerType of objectClass.GetContainer().GetObjectTypes())this._initialObjectClasses.add(containerType);else this._initialObjectClasses.add(objectClass)}_GetTextureLoadedObjectTypes(){return[...this._textureLoadedTypes]}_Load(previousLayout,renderer){if(previousLayout===this||!renderer)return Promise.resolve();
if(previousLayout){C3.CopySet(this._textureLoadedTypes,previousLayout._textureLoadedTypes);previousLayout._textureLoadedTypes.clear()}const promises=[];for(const oc of this._initialObjectClasses)if(!this._textureLoadedTypes.has(oc)){promises.push(oc.LoadTextures(renderer));this._textureLoadedTypes.add(oc)}return Promise.all(promises)}async MaybeLoadTexturesFor(objectClass){if(objectClass.IsFamily())throw new Error("cannot load textures for family");const renderer=this._runtime.GetRenderer();if(!renderer||
renderer.IsContextLost()||this._textureLoadedTypes.has(objectClass))return;this._textureLoadedTypes.add(objectClass);const loadPromise=objectClass.LoadTextures(renderer);this._AddPendingTextureLoadPromise(loadPromise);await loadPromise;objectClass.OnDynamicTextureLoadComplete();this._runtime.UpdateRender()}_AddPendingTextureLoadPromise(promise){this._textureLoadPendingPromises.add(promise);promise.then(()=>this._textureLoadPendingPromises.delete(promise)).catch(()=>this._textureLoadPendingPromises.delete(promise))}WaitForPendingTextureLoadsToComplete(){return Promise.all([...this._textureLoadPendingPromises])}MaybeUnloadTexturesFor(objectClass){if(objectClass.IsFamily()||
objectClass.GetInstanceCount()>0)throw new Error("cannot unload textures");const renderer=this._runtime.GetRenderer();if(!renderer||!this._textureLoadedTypes.has(objectClass))return;this._textureLoadedTypes.delete(objectClass);objectClass.ReleaseTextures(renderer)}_Unload(nextLayout,renderer){if(nextLayout===this||!renderer)return;for(const oc of this._textureLoadedTypes)if(!oc.IsGlobal()&&!nextLayout._initialObjectClasses.has(oc)){oc.ReleaseTextures();this._textureLoadedTypes.delete(oc)}}_OnWebGLContextLost(){this._textureLoadedTypes.clear()}async _StartRunning(isFirstLayout){const runtime=
this._runtime;const layoutManager=this._layoutManager;const eventSheetManager=runtime.GetEventSheetManager();if(this._eventSheetName){this._eventSheet=eventSheetManager.GetEventSheetByName(this._eventSheetName);this._eventSheet._UpdateDeepIncludes()}layoutManager._SetMainRunningLayout(this);this._width=this._originalWidth;this._height=this._originalHeight;this._scrollX=runtime.GetOriginalViewportWidth()/2;this._scrollY=runtime.GetOriginalViewportHeight()/2;this.BoundScrolling();this._MoveGlobalObjectsToThisLayout(isFirstLayout);
this._runtime.SetUsingCreatePromises(true);this._CreateInitialInstances();if(!this._isFirstVisit)this._CreatePersistedInstances();this._CreateAndLinkContainerInstances(this._createdInstances);this._CreateInitialNonWorldInstances();layoutManager.ClearPendingChangeLayout();runtime.FlushPendingInstances();this._runtime.SetUsingCreatePromises(false);const createPromises=this._runtime.GetCreatePromises();await Promise.all(createPromises);C3.clearArray(createPromises);if(!runtime.IsLoadingState()){for(const inst of this._createdInstances)inst.SetupInitialSceneGraphConnections();
for(const inst of this._createdInstances)inst._TriggerOnCreated()}C3.clearArray(this._createdInstances);await Promise.all([...this._initialObjectClasses].map(oc=>oc.PreloadTexturesWithInstances(this._runtime.GetRenderer())));if(isFirstLayout){runtime.Dispatcher().dispatchEvent(new C3.Event("beforefirstlayoutstart"));await runtime.DispatchUserScriptEventAsyncWait(new C3.Event("beforeprojectstart"))}await this.DispatchUserScriptEventAsyncWait(new C3.Event("beforelayoutstart"));if(!runtime.IsLoadingState())await runtime.TriggerAsync(C3.Plugins.System.Cnds.OnLayoutStart,
null,null);await this.DispatchUserScriptEventAsyncWait(new C3.Event("afterlayoutstart"));if(isFirstLayout){runtime.Dispatcher().dispatchEvent(new C3.Event("afterfirstlayoutstart"));await runtime.DispatchUserScriptEventAsyncWait(new C3.Event("afterprojectstart"))}eventSheetManager._RunQueuedTriggers(layoutManager);await this.WaitForPendingTextureLoadsToComplete();this._SetAllLayersProjectionChanged();this._SetAllLayersMVChanged();this._isFirstVisit=false}_MoveGlobalObjectsToThisLayout(isFirstLayout){for(const objectClass of this._runtime.GetAllObjectClasses()){if(objectClass.IsFamily()||
!objectClass.IsWorldType())continue;for(const inst of objectClass.GetInstances()){const wi=inst.GetWorldInfo();const oldLayer=wi.GetLayer();const layerIndex=C3.clamp(oldLayer.GetIndex(),0,this._layers.length-1);const newLayer=this._layers[layerIndex];wi._SetLayer(newLayer);newLayer._MaybeAddInstance(inst)}}if(!isFirstLayout)for(const layer of this._layers)layer._SortInstancesByLastCachedZIndex(false)}_CreateInitialInstances(){for(const layer of this._layers){layer.CreateInitialInstances(this._createdInstances);
layer.UpdateViewport();layer._Start()}}_CreatePersistedInstances(){let uidsChanged=false;for(const [sidStr,typeData]of Object.entries(this._persistData)){const objectClass=this._runtime.GetObjectClassBySID(parseInt(sidStr,10));if(!objectClass||objectClass.IsFamily()||!objectClass.HasPersistBehavior())continue;for(const instData of typeData){let layer=null;if(objectClass.IsWorldType()){layer=this.GetLayerBySID(instData["w"]["l"]);if(!layer)continue}const inst=this._runtime.CreateInstanceFromData(objectClass,
layer,false,0,0,true);inst.LoadFromJson(instData);uidsChanged=true;this._createdInstances.push(inst)}C3.clearArray(typeData)}for(const layer of this._layers){layer._SortInstancesByLastCachedZIndex(true);layer.SetZIndicesChanged()}if(uidsChanged){this._runtime.FlushPendingInstances();this._runtime._RefreshUidMap()}}_CreateAndLinkContainerInstances(createdInstances){for(const inst of createdInstances){if(!inst.IsInContainer())continue;const wi=inst.GetWorldInfo();const iid=inst.GetIID();for(const containerType of inst.GetObjectClass().GetContainer().objectTypes()){if(containerType===
inst.GetObjectClass())continue;const instances=containerType.GetInstances();if(instances.length>iid)inst._AddSibling(instances[iid]);else{let s;if(wi)s=this._runtime.CreateInstanceFromData(containerType,wi.GetLayer(),true,wi.GetX(),wi.GetY(),true);else s=this._runtime.CreateInstanceFromData(containerType,null,true,0,0,true);this._runtime.FlushPendingInstances();containerType._UpdateIIDs();inst._AddSibling(s);createdInstances.push(s)}}}}_CreateInitialNonWorldInstances(){for(const instData of this._initialNonWorld){const objectClass=
this._runtime.GetObjectClassByIndex(instData[1]);if(!objectClass.IsInContainer())this._runtime.CreateInstanceFromData(instData,null,true)}}_CreateGlobalNonWorlds(){const createdInstances=[];const initialNonWorld=this._initialNonWorld;let k=0;for(let i=0,len=initialNonWorld.length;i<len;++i){const instData=initialNonWorld[i];const objectClass=this._runtime.GetObjectClassByIndex(instData[1]);if(objectClass.IsGlobal()){if(!objectClass.IsInContainer()||!objectClass.GetContainer().HasAnyWorldType())createdInstances.push(this._runtime.CreateInstanceFromData(instData,
null,true))}else{initialNonWorld[k]=instData;++k}}C3.truncateArray(initialNonWorld,k);this._runtime.FlushPendingInstances();this._CreateAndLinkContainerInstances(createdInstances)}RecreateInitialObjects(objectClass,rc,srcLayer,offsetX,offsetY,createHierarchy){if(srcLayer)return srcLayer.RecreateInitialObjects(objectClass,rc,offsetX,offsetY,createHierarchy);else{const ret=[];for(const layer of this._layers)ret.push(layer.RecreateInitialObjects(objectClass,rc,offsetX,offsetY,createHierarchy));return ret.flat()}}async _StopRunning(){const layoutManager=
this._layoutManager;if(!this._runtime.IsLoadingState())await this._runtime.TriggerAsync(C3.Plugins.System.Cnds.OnLayoutEnd,null,null);layoutManager.SetIsEndingLayout(true);this._runtime.GetEventSheetManager().ClearAllScheduledWaits();if(!this._isFirstVisit)this._SavePersistData();for(const layer of this._layers)layer._End();for(const objectClass of this._runtime.GetAllObjectClasses()){if(objectClass.IsGlobal()||objectClass.IsWorldType()||objectClass.GetPlugin().IsSingleGlobal()||objectClass.IsFamily())continue;
for(const inst of objectClass.GetInstances())this._runtime.DestroyInstance(inst);this._runtime.FlushPendingInstances()}layoutManager.SetIsEndingLayout(false);if(layoutManager.GetMainRunningLayout()===this)layoutManager._SetMainRunningLayout(null)}_SaveInstanceToPersist(inst){const sidStr=inst.GetObjectClass().GetSID().toString();if(!this._persistData.hasOwnProperty(sidStr))this._persistData[sidStr]=[];const typePersist=this._persistData[sidStr];typePersist.push(inst.SaveToJson())}_SavePersistData(){for(const layer of this._layers){layer._UpdateZIndices();
for(const inst of layer._GetInstances()){const objectClass=inst.GetObjectClass();if(!objectClass.IsGlobal()&&objectClass.HasPersistBehavior())this._SaveInstanceToPersist(inst)}}}ResetPersistData(){this._persistData={};this._isFirstVisit=true}GetRenderTarget(){return this._curRenderTarget}UsesOwnTexture(){return this._runtime.GetCanvasManager().GetCurrentFullscreenScalingQuality()==="low"||this._runtime.UsesAnyBackgroundBlending()||this._runtime.GetCompositingMode()==="low-latency"||this._effectList.HasAnyActiveEffect()||
this._runtime.GetRenderer().IsWebGL()&&this._runtime.Uses3DFeatures()}_CanFastPathDrawLayout(activeEffectTypes){if(activeEffectTypes.length===0)return true;if(activeEffectTypes.length>=2)return false;const effectType=activeEffectTypes[0];const shaderProgram=effectType.GetShaderProgram();return!shaderProgram.MustPreDraw()}Draw(renderer){const canvasManager=this._runtime.GetCanvasManager();const useOwnTexture=this.UsesOwnTexture();let ownRenderTarget=null;if(useOwnTexture){if(this._runtime.GetCompositingMode()!==
"low-latency"){renderer.SetRenderTarget(null);renderer.ClearRgba(0,0,0,0)}const rtOpts={sampling:this._runtime.GetSampling(),isSampled:renderer.IsWebGPU()||this._runtime.UsesAnyBackgroundBlending()||this._effectList.HasAnyActiveEffect()};if(canvasManager.GetCurrentFullscreenScalingQuality()==="low"){rtOpts.width=canvasManager.GetDrawWidth();rtOpts.height=canvasManager.GetDrawHeight()}ownRenderTarget=this._runtime.GetAdditionalRenderTarget(rtOpts);renderer.SetRenderTarget(ownRenderTarget)}else renderer.SetRenderTarget(null);
renderer.Clear(this.GetLayoutBackgroundColor());if(this._runtime.Uses3DFeatures())renderer.ClearDepth();this._curRenderTarget=ownRenderTarget;for(const layer of this._layers){layer.UpdateViewport();if(layer.ShouldDraw())tempLayerList.push(layer)}for(let i=0,len=tempLayerList.length;i<len;){const layer=tempLayerList[i];if(layer.Has3DCamera()&&!layer.UsesOwnTexture()){tempRender3dList.push(layer);for(let j=i+1;j<len;++j){const nextLayer=tempLayerList[j];if(nextLayer.Has3DCamera()&&!nextLayer.UsesOwnTexture())tempRender3dList.push(tempLayerList[j]);
else break}if(tempRender3dList.length>=2){this._Draw3DLayers(renderer,ownRenderTarget,tempRender3dList);i+=tempRender3dList.length;C3.clearArray(tempRender3dList);continue}C3.clearArray(tempRender3dList)}layer.Draw(renderer,ownRenderTarget,i===0);++i}C3.clearArray(tempLayerList);if(useOwnTexture){renderer.SetDepthEnabled(false);this._DrawLayoutOwnTextureToRenderTarget(renderer,ownRenderTarget)}this._curRenderTarget=null}_DrawLayoutOwnTextureToRenderTarget(renderer,ownRenderTarget){const activeEffectTypes=
this._effectList.GetActiveEffectTypes();const runtime=this._runtime;if(this._CanFastPathDrawLayout(activeEffectTypes)){renderer.SetRenderTarget(null);if(activeEffectTypes.length===1){const effectType=activeEffectTypes[0];const shaderProgram=effectType.GetShaderProgram();renderer.SetProgram(shaderProgram);tempSrcRect.set(0,0,1,1);tempLayoutRect.set(0,0,runtime.GetViewportWidth(),runtime.GetViewportHeight());const paramArr=this._effectList.GetEffectParametersForIndex(effectType.GetIndex());renderer.SetProgramParameters(null,
tempDestRect,tempSrcRect,tempSrcRect,tempLayoutRect,1/runtime.GetDrawWidth(),1/runtime.GetDrawHeight(),this.GetScale(),this.GetAngle(),runtime.GetGameTime(),paramArr);if(shaderProgram.IsAnimated())runtime.UpdateRender()}else renderer.SetTextureFillMode();if(activeEffectTypes.length===0)renderer.CopyRenderTarget(ownRenderTarget);else{renderer.SetAlphaBlend();renderer.ResetColor();renderer.DrawRenderTarget(ownRenderTarget)}renderer.InvalidateRenderTarget(ownRenderTarget);runtime.ReleaseAdditionalRenderTarget(ownRenderTarget)}else C3.RenderEffectChain(renderer,
runtime,this,null,activeEffectTypes)}_Draw3DLayers(renderer,renderTarget,layerList){const canvasManager=this._runtime.GetCanvasManager();renderer.SetDepthEnabled(true);const fullInstanceList=tempInstanceList1;const coplanarInstances=tempInstanceList2;const postRenderInstances=tempInstanceList3;for(const layer of layerList){layer._UpdateZIndices();C3.appendArray(fullInstanceList,layer._GetInstancesInDrawOrder())}const firstLayer=layerList[0];let layerQuery=null;if(this._runtime.IsGPUProfiling())if(renderer.IsWebGL()){const timingsBuffer=
canvasManager.GetLayerTimingsBuffer(firstLayer);if(timingsBuffer){layerQuery=timingsBuffer.AddTimeElapsedQuery();renderer.StartQuery(layerQuery)}}else if(renderer.IsWebGPU())renderer.WriteTimestamp((firstLayer.GetIndex()+1)*2);for(let i=0,len=fullInstanceList.length;i<len;){const inst=fullInstanceList[i];const wi=inst.GetWorldInfo();const wiLayer=wi.GetLayer();if(!wi.IsVisible()||!wi.IsInViewport3D(wiLayer._GetViewFrustum())){++i;continue}if(!inst.RendersToOwnZPlane()||wi.GetDepth()>0)postRenderInstances.push(inst);
const startZ=inst.GetWorldInfo().GetTotalZElevation();coplanarInstances.push(inst);let endIndex=i+1;for(;endIndex<len;++endIndex){const nextInst=fullInstanceList[endIndex];const nextWi=nextInst.GetWorldInfo();if(!nextWi.IsVisible()||!nextWi.IsInViewport3D(nextWi.GetLayer()._GetViewFrustum()))continue;if(nextWi.GetTotalZElevation()!==startZ)break;if(!nextInst.RendersToOwnZPlane()){postRenderInstances.push(nextInst);continue}if(nextWi.GetDepth()>0)postRenderInstances.push(nextInst);coplanarInstances.push(nextInst)}if(coplanarInstances.length===
1&&!coplanarInstances[0].MustMitigateZFighting()){MaybePrepareLayerDraw(wiLayer,renderer);wiLayer._DrawInstanceMaybeWithEffects(inst,wi,renderer,renderTarget);for(let j=0,lenj=postRenderInstances.length;j<lenj;++j){const postInst=postRenderInstances[j];if(postInst===inst)continue;const postWi=postInst.GetWorldInfo();const postWiLayer=postWi.GetLayer();MaybePrepareLayerDraw(postWiLayer,renderer);postWiLayer._DrawInstanceMaybeWithEffects(postInst,postWi,renderer,renderTarget)}}else{this._Draw3DLayersCoplanarInstances(renderer,
renderTarget,coplanarInstances);for(let j=0,lenj=postRenderInstances.length;j<lenj;++j){const postInst=postRenderInstances[j];const postWi=postInst.GetWorldInfo();const postWiLayer=postWi.GetLayer();postWi._SetDrawNonBackFacesOnly(true);MaybePrepareLayerDraw(postWiLayer,renderer);postWiLayer._DrawInstanceMaybeWithEffects(postInst,postWi,renderer,renderTarget);postWi._SetDrawNonBackFacesOnly(false)}}i=endIndex;C3.clearArray(coplanarInstances);C3.clearArray(postRenderInstances)}if(layerQuery)renderer.EndQuery(layerQuery);
if(this._runtime.IsGPUProfiling()&&renderer.IsWebGPU())renderer.WriteTimestamp((firstLayer.GetIndex()+1)*2+1);C3.clearArray(fullInstanceList);lastLayerPreparedForDrawing=null}_Draw3DLayersCoplanarInstances(renderer,renderTarget,instances){renderer.CoplanarStartStencilPass();for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];const wi=inst.GetWorldInfo();const layer=wi.GetLayer();wi._SetDrawBackFaceOnly(true);MaybePrepareLayerDraw(layer,renderer);layer._DrawInstance(inst,wi,renderer)}renderer.CoplanarStartColorPass();
for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];const wi=inst.GetWorldInfo();const layer=wi.GetLayer();MaybePrepareLayerDraw(layer,renderer);layer._DrawInstanceMaybeWithEffects(inst,wi,renderer,renderTarget);wi._SetDrawBackFaceOnly(false)}renderer.CoplanarRestoreStandardRendering()}_SaveToJson(){const o={"sx":this.GetScrollX(),"sy":this.GetScrollY(),"s":this.GetScale(),"a":this.GetAngle(),"w":this.GetWidth(),"h":this.GetHeight(),"ortho":this.IsOrthographicProjection(),"vpX":this.GetVanishingPointX(),
"vpY":this.GetVanishingPointY(),"fv":this._isFirstVisit,"persist":this._persistData,"fx":this._effectList.SaveToJson(),"layers":{}};for(const layer of this._layers)o["layers"][layer.GetSID().toString()]=layer._SaveToJson();return o}_LoadFromJson(o){this._scrollX=o["sx"];this._scrollY=o["sy"];this._scale=o["s"];this._angle=o["a"];this._width=o["w"];this._height=o["h"];this._isOrthographicProjection=!!o["ortho"];if(o.hasOwnProperty("vpX"))this._vanishingPointX=o["vpX"];if(o.hasOwnProperty("vpY"))this._vanishingPointY=
o["vpY"];this._isFirstVisit=!!o["fv"];this._persistData=o["persist"];this._effectList.LoadFromJson(o["fx"]);for(const [sidStr,data]of Object.entries(o["layers"])){const sid=parseInt(sidStr,10);const layer=this.GetLayerBySID(sid);if(!layer)continue;layer._LoadFromJson(data)}this._SetAllLayersProjectionChanged();this._SetAllLayersMVChanged()}GetILayout(){return this._iLayout}UserScriptDispatcher(){return this._userScriptDispatcher}DispatchUserScriptEvent(e){e.layout=this.GetILayout();const runtime=
this._runtime;const shouldTime=runtime.IsDebug()&&!runtime.GetEventSheetManager().IsInEventEngine();if(shouldTime)C3Debugger.StartMeasuringScriptTime();this._userScriptDispatcher.dispatchEvent(e);if(shouldTime)C3Debugger.AddScriptTime()}DispatchUserScriptEventAsyncWait(e){e.layout=this.GetILayout();return this._userScriptDispatcher.dispatchEventAndWaitAsync(e)}};

}

// layouts/layoutManager.js
{
'use strict';const C3=self.C3;
C3.LayoutManager=class LayoutManager extends C3.DefendedBase{constructor(runtime){super();this._runtime=runtime;this._allLayouts=[];this._layoutsByName=new Map;this._layoutsBySid=new Map;this._mainRunningLayout=null;this._runningSubLayouts=[];this._firstLayout=null;this._isEndingLayout=0;this._pendingChangeLayout=null}Release(){this._runtime=null;this._mainRunningLayout=null;this._firstLayout=null;this._pendingChangeLayout=null;C3.clearArray(this._allLayouts);this._layoutsByName.clear();this._layoutsBySid.clear();
C3.clearArray(this._runningSubLayouts)}Create(layoutData){const layout=C3.New(C3.Layout,this,this._allLayouts.length,layoutData);this._allLayouts.push(layout);this._layoutsByName.set(layout.GetName().toLowerCase(),layout);this._layoutsBySid.set(layout.GetSID(),layout)}GetRuntime(){return this._runtime}SetFirstLayout(layout){this._firstLayout=layout}GetFirstLayout(){if(this._firstLayout)return this._firstLayout;if(this._allLayouts.length)return this._allLayouts[0];throw new Error("no first layout");
}GetLayoutByName(name){return this._layoutsByName.get(name.toLowerCase())||null}GetLayoutBySID(sid){return this._layoutsBySid.get(sid)||null}GetLayoutByIndex(index){index=C3.clamp(Math.floor(index),0,this._allLayouts.length-1);return this._allLayouts[index]}GetLayout(p){if(typeof p==="number")return this.GetLayoutByIndex(p);else return this.GetLayoutByName(p.toString())}GetAllLayouts(){return this._allLayouts}_SetMainRunningLayout(layout){this._mainRunningLayout=layout}GetMainRunningLayout(){return this._mainRunningLayout}_AddRunningSubLayout(layout){if(this._runningSubLayouts.includes(layout))throw new Error("layout already running");
this._runningSubLayouts.push(layout)}_RemoveRunningSubLayout(layout){const i=this._runningSubLayouts.indexOf(layout);if(i===-1)throw new Error("layout not running");this._runningSubLayouts.splice(i,1)}*runningLayouts(){if(this._mainRunningLayout)yield this._mainRunningLayout;if(this._runningSubLayouts.length)yield*this._runningSubLayouts}IsLayoutRunning(layout){return this._mainRunningLayout===layout||this._runningSubLayouts.includes(layout)}SetIsEndingLayout(e){if(e)this._isEndingLayout++;else{if(this._isEndingLayout<=
0)throw new Error("already unset");this._isEndingLayout--}}IsEndingLayout(){return this._isEndingLayout>0}ChangeMainLayout(layout){this._pendingChangeLayout=layout}ClearPendingChangeLayout(){this._pendingChangeLayout=null}IsPendingChangeMainLayout(){return!!this._pendingChangeLayout}GetPendingChangeMainLayout(){return this._pendingChangeLayout}SetAllLayerProjectionChanged(){const runningLayout=this.GetMainRunningLayout();if(!runningLayout)return;runningLayout._SetAllLayersProjectionChanged()}SetAllLayerMVChanged(){const runningLayout=
this.GetMainRunningLayout();if(!runningLayout)return;runningLayout._SetAllLayersMVChanged()}};

}

// layouts/renderEffectChain.js
{
'use strict';const C3=self.C3;
class RenderEffectChainState{constructor(){this.renderer=null;this.runtime=null;this.drawWidth=0;this.drawHeight=0;this.surfaceWidth=0;this.surfaceHeight=0;this.layoutRect=new C3.Rect;this.rcTexBounce=new C3.Rect;this.rcTexDest=new C3.Rect;this.rcTexOrigin=new C3.Rect;this.screenRect=new C3.Rect;this.clearRect=new C3.Rect;this.srcRect=new C3.Rect;this.fxTex=[null,null];this.fxIndex=0;this.otherFxIndex=1;this.boxExtendHorizontal=0;this.boxExtendVertical=0;this.layerScale=0;this.layerAngle=0;this.layout=
null;this.layer=null;this.inst=null;this.wi=null;this.renderTarget=null;this.preDraw=false;this.postDraw=false;this.didChangeTransform=false;this.opts=null}Clear(){this.renderer=null;this.runtime=null;this.layout=null;this.layer=null;this.inst=null;this.wi=null;this.renderTarget=null;this.opts=null}ShouldPreDraw(firstEffectType){const shaderProgram=firstEffectType.GetShaderProgram();if(shaderProgram.MustPreDraw())return true;if(this.inst)return shaderProgram.UsesDest()&&(this.wi.GetAngle()!==0||this.wi.GetWidth()<
0||this.wi.GetHeight()<0)||this.boxExtendHorizontal!==0||this.boxExtendVertical!==0||!this.wi.HasDefaultColor()||this.inst.MustPreDraw();else if(this.layer)return!this.layer.HasDefaultColor()}ShouldPostDraw(lastEffectType){const shaderProgram=lastEffectType.GetShaderProgram();return shaderProgram.UsesDest()||shaderProgram.UsesCrossSampling()||this.layout&&this.runtime.GetCanvasManager().GetCurrentFullscreenScalingQuality()==="low"}GetEffectRenderTarget(i){if(i!==0&&i!==1)throw new Error("invalid effect target");
const fxTex=this.fxTex;if(!fxTex[i]){const runtime=this.runtime;const canvasManager=runtime.GetCanvasManager();const opts={sampling:runtime.GetSampling()};if(canvasManager.GetCurrentFullscreenScalingQuality()==="low"){opts.width=canvasManager.GetDrawWidth();opts.height=canvasManager.GetDrawHeight()}fxTex[i]=canvasManager.GetAdditionalRenderTarget(opts)}return fxTex[i]}ReleaseEffectRenderTargets(){const fxTex=this.fxTex;const canvasManager=this.runtime.GetCanvasManager();if(fxTex[0]){canvasManager.ReleaseAdditionalRenderTarget(fxTex[0]);
fxTex[0]=null}if(fxTex[1]){canvasManager.ReleaseAdditionalRenderTarget(fxTex[1]);fxTex[1]=null}}}const ctxStack=[];let ctxPtr=0;function AllocRenderEffectChainState(){if(ctxPtr===ctxStack.length)ctxStack.push(new RenderEffectChainState);return ctxStack[ctxPtr++]}function ReleaseRenderEffectChainState(ctx){ctx.ReleaseEffectRenderTargets();ctx.Clear();ctxPtr--}const tempQuad=new C3.Quad;let isDebug=false;let isDebugFrame=false;
async function DebugLogRenderTargetContents(msg,renderer,renderTarget){const blob=await C3.Gfx.WebGLRenderTarget.DebugReadPixelsToBlob(renderer,renderTarget);const blobUrl=URL.createObjectURL(blob);console.log("[FX] "+msg+" "+(renderTarget?"":" [to display]")+": ",blobUrl)}
C3.RenderEffectChain=function RenderEffectChain(renderer,runtime,effectsObject,renderTarget_,activeEffectTypes,opts_){const ctx=AllocRenderEffectChainState();ctx.renderer=renderer;ctx.runtime=runtime;if(effectsObject instanceof C3.Instance){ctx.inst=effectsObject;ctx.wi=ctx.inst.GetWorldInfo()}else if(effectsObject instanceof C3.Layer)ctx.layer=effectsObject;else if(effectsObject instanceof C3.Layout)ctx.layout=effectsObject;else throw new Error("invalid effects object");const canvasManager=runtime.GetCanvasManager();
ctx.renderTarget=renderTarget_;ctx.drawWidth=canvasManager.GetDrawWidth();ctx.drawHeight=canvasManager.GetDrawHeight();ctx.surfaceWidth=ctx.drawWidth;ctx.surfaceHeight=ctx.drawHeight;ctx.fxIndex=0;ctx.otherFxIndex=1;ctx.boxExtendHorizontal=0;ctx.boxExtendVertical=0;ctx.screenRect.set(0,0,ctx.drawWidth,ctx.drawHeight);ctx.clearRect.set(0,0,ctx.drawWidth,ctx.drawHeight);ctx.didChangeTransform=false;ctx.opts=opts_;if(ctx.inst){const wi=ctx.wi;ctx.layerScale=wi.GetLayer().GetRenderScale();ctx.layerAngle=
wi.GetLayer().GetAngle();ctx.layoutRect.copy(wi.GetBoundingBox())}else if(ctx.layer){const layer=ctx.layer;ctx.layerScale=layer.GetRenderScale();ctx.layerAngle=layer.GetAngle();ctx.layoutRect.copy(layer.GetViewport())}else{const layout=ctx.layout;ctx.layerScale=layout.GetScale();ctx.layerAngle=layout.GetAngle();ctx.layoutRect.set(0,0,ctx.drawWidth,ctx.drawHeight)}if(ctx.inst)GetInstanceBox(ctx,activeEffectTypes);else{ctx.rcTexBounce.set(0,0,ctx.drawWidth/ctx.surfaceWidth,ctx.drawHeight/ctx.surfaceHeight);
ctx.rcTexDest.copy(ctx.rcTexBounce);ctx.rcTexOrigin.copy(ctx.rcTexBounce);ctx.rcTexBounce.swapTopBottom();ctx.rcTexDest.swapTopBottom();ctx.rcTexOrigin.swapTopBottom()}renderer.SetAlphaBlend();renderer.ResetColor();renderer.SetBaseZ(0);renderer.SetCurrentZ(0);ctx.preDraw=ctx.ShouldPreDraw(activeEffectTypes[0]);if(ctx.preDraw)PreDraw(ctx);renderer.ResetColor();const lastEffectTypeIndex=activeEffectTypes.length-1;ctx.postDraw=ctx.ShouldPostDraw(activeEffectTypes[lastEffectTypeIndex]);for(let i=0,len=
activeEffectTypes.length;i<len;++i){const effectType=activeEffectTypes[i];const shaderProgram=effectType.GetShaderProgram();renderer.SetProgram(shaderProgram);if(shaderProgram.IsAnimated())runtime.UpdateRender();if(i===0&&!ctx.preDraw)RenderFirstBounce(ctx,effectType);else{renderer.SetCopyBlend();const isLast=i===lastEffectTypeIndex&&!ctx.postDraw;RenderBounce(ctx,effectType,isLast,i)}if(ctx.fxIndex===0){ctx.fxIndex=1;ctx.otherFxIndex=0}else{ctx.fxIndex=0;ctx.otherFxIndex=1}}if(ctx.postDraw)PostDraw(ctx,
activeEffectTypes);const ret=ctx.didChangeTransform;ReleaseRenderEffectChainState(ctx);isDebugFrame=false;return ret};
function GetInstanceBox(ctx,activeEffectTypes){for(let i=0,len=activeEffectTypes.length;i<len;++i){const shaderProgram=activeEffectTypes[i].GetShaderProgram();ctx.boxExtendHorizontal+=shaderProgram.GetBoxExtendHorizontal();ctx.boxExtendVertical+=shaderProgram.GetBoxExtendVertical()}const wi=ctx.wi;const layer=wi.GetLayer();const layerAngle=layer.GetAngle();const bbox=wi.GetBoundingBox();const z=wi.GetTotalZElevation();const depth=wi.GetDepth();let [stlx,stly]=layer.LayerToDrawSurface(bbox.getLeft(),
bbox.getTop(),z);let [sbrx,sbry]=layer.LayerToDrawSurface(bbox.getRight(),bbox.getBottom(),z);if(layerAngle!==0||depth>0){const [strx,stry]=layer.LayerToDrawSurface(bbox.getRight(),bbox.getTop(),z);const [sblx,sbly]=layer.LayerToDrawSurface(bbox.getLeft(),bbox.getBottom(),z);if(depth>0){const topZ=z+depth;const [stlxTop,stlyTop]=layer.LayerToDrawSurface(bbox.getLeft(),bbox.getTop(),topZ);const [strxTop,stryTop]=layer.LayerToDrawSurface(bbox.getRight(),bbox.getTop(),topZ);const [sbrxTop,sbryTop]=layer.LayerToDrawSurface(bbox.getRight(),
bbox.getBottom(),topZ);const [sblxTop,sblyTop]=layer.LayerToDrawSurface(bbox.getLeft(),bbox.getBottom(),topZ);let temp=Math.min(stlx,sbrx,strx,sblx,stlxTop,strxTop,sbrxTop,sblxTop);sbrx=Math.max(stlx,sbrx,strx,sblx,stlxTop,strxTop,sbrxTop,sblxTop);stlx=temp;temp=Math.min(stly,sbry,stry,sbly,stlyTop,stryTop,sbryTop,sblyTop);sbry=Math.max(stly,sbry,stry,sbly,stlyTop,stryTop,sbryTop,sblyTop);stly=temp}else{let temp=Math.min(stlx,sbrx,strx,sblx);sbrx=Math.max(stlx,sbrx,strx,sblx);stlx=temp;temp=Math.min(stly,
sbry,stry,sbly);sbry=Math.max(stly,sbry,stry,sbly);stly=temp}}const screenRect=ctx.screenRect;const rcTexOrigin=ctx.rcTexOrigin;const rcTexDest=ctx.rcTexDest;const clearRect=ctx.clearRect;const rcTexBounce=ctx.rcTexBounce;screenRect.set(stlx,stly,sbrx,sbry);screenRect.shuntY(ctx.drawHeight);rcTexOrigin.copy(screenRect);rcTexOrigin.divide(ctx.surfaceWidth,ctx.surfaceHeight);rcTexOrigin.swapTopBottom();screenRect.inflate(ctx.boxExtendHorizontal,ctx.boxExtendVertical);rcTexDest.copy(screenRect);rcTexDest.divide(ctx.surfaceWidth,
ctx.surfaceHeight);rcTexDest.swapTopBottom();clearRect.copy(screenRect);clearRect.roundOuter();clearRect.inflate(ctx.boxExtendHorizontal+1,ctx.boxExtendVertical+1);screenRect.clamp(0,0,ctx.drawWidth,ctx.drawHeight);clearRect.clamp(0,0,ctx.drawWidth,ctx.drawHeight);rcTexBounce.copy(screenRect);rcTexBounce.divide(ctx.surfaceWidth,ctx.surfaceHeight);rcTexBounce.swapTopBottom()}
function PreDraw(ctx){const renderer=ctx.renderer;renderer.SetTextureFillMode();const fxTarget=ctx.GetEffectRenderTarget(ctx.fxIndex);renderer.SetRenderTarget(fxTarget);const opts=ctx.opts;if(opts&&opts.preTransform)opts.preTransform();if(isDebug)renderer.ClearRgba(1,0,0,1);renderer.ClearRect2(ctx.clearRect);if(ctx.inst){renderer.SetColor(ctx.wi.GetPremultipliedColor());renderer.SetCurrentZ(ctx.wi.GetTotalZElevation());ctx.inst.Draw(renderer);renderer.SetCurrentZ(0)}else{const renderSurface=(ctx.layer||
ctx.layout).GetRenderTarget();if(ctx.layer)renderer.SetColor(ctx.layer.GetPremultipliedColor());else renderer.ResetColor();renderer.DrawRenderTarget(renderSurface);renderer.InvalidateRenderTarget(renderSurface);ctx.runtime.GetCanvasManager().ReleaseAdditionalRenderTarget(renderSurface)}ctx.rcTexDest.clampFlipped(0,1,1,0);ctx.fxIndex=1;ctx.otherFxIndex=0;if(isDebugFrame)DebugLogRenderTargetContents("Pre-draw",renderer,fxTarget)}
function RenderFirstBounce(ctx,effectType){const renderer=ctx.renderer;const runtime=ctx.runtime;const fxTarget=ctx.GetEffectRenderTarget(ctx.fxIndex);renderer.SetRenderTarget(fxTarget);const opts=ctx.opts;if(opts&&opts.preTransform)opts.preTransform();if(isDebug)renderer.ClearRgba(1,0,0,1);renderer.ClearRect2(ctx.clearRect);if(ctx.inst){const [sheetWidth,sheetHeight]=ctx.inst.GetCurrentSurfaceSize();const instTexRect=ctx.inst.GetCurrentTexRect();if(instTexRect)ctx.srcRect.copy(instTexRect);else ctx.srcRect.set(0,
0,0,0);const paramArr=ctx.wi.GetInstanceEffectList().GetEffectParametersForIndex(effectType.GetIndex());renderer.SetProgramParameters(ctx.renderTarget,ctx.rcTexDest,ctx.srcRect,ctx.srcRect,ctx.layoutRect,1/sheetWidth,1/sheetHeight,ctx.layerScale,ctx.layerAngle,runtime.GetGameTime(),paramArr);renderer.SetCurrentZ(ctx.wi.GetTotalZElevation());ctx.inst.Draw(renderer);renderer.SetCurrentZ(0);ctx.rcTexDest.clampFlipped(0,1,1,0);ctx.screenRect.shuntY(ctx.drawHeight);if(isDebugFrame)DebugLogRenderTargetContents("First bounce",
renderer,fxTarget)}else{const paramArr=(ctx.layer||ctx.layout).GetEffectList().GetEffectParametersForIndex(effectType.GetIndex());renderer.SetProgramParameters(ctx.renderTarget,ctx.rcTexDest,ctx.rcTexBounce,ctx.rcTexOrigin,ctx.layoutRect,1/ctx.drawWidth,1/ctx.drawHeight,ctx.layerScale,ctx.layerAngle,runtime.GetGameTime(),paramArr);const renderSurface=(ctx.layer||ctx.layout).GetRenderTarget();if(isDebugFrame)DebugLogRenderTargetContents("Layer target",renderer,renderSurface);renderer.DrawRenderTarget(renderSurface);
renderer.InvalidateRenderTarget(renderSurface);runtime.GetCanvasManager().ReleaseAdditionalRenderTarget(renderSurface);if(isDebugFrame)DebugLogRenderTargetContents("First bounce",renderer,fxTarget)}}
function RenderBounce(ctx,effectType,isLast,i){const renderer=ctx.renderer;const runtime=ctx.runtime;let fxTarget;let paramArr;if(i===0&&ctx.preDraw&&ctx.inst)ctx.screenRect.shuntY(ctx.drawHeight);if(isLast){if(ctx.inst)renderer.SetBlendMode(ctx.wi.GetBlendMode());else if(ctx.layer)renderer.SetBlendMode(ctx.layer.GetBlendMode());fxTarget=ctx.renderTarget;renderer.SetRenderTarget(fxTarget)}else{fxTarget=ctx.GetEffectRenderTarget(ctx.fxIndex);renderer.SetRenderTarget(fxTarget);if(isDebug)renderer.ClearRgba(1,
0,0,1);renderer.ClearRect2(ctx.clearRect)}if(ctx.inst)paramArr=ctx.wi.GetInstanceEffectList().GetEffectParametersForIndex(effectType.GetIndex());else paramArr=(ctx.layer||ctx.layout).GetEffectList().GetEffectParametersForIndex(effectType.GetIndex());renderer.SetProgramParameters(ctx.renderTarget,ctx.rcTexDest,ctx.rcTexBounce,ctx.rcTexOrigin,ctx.layoutRect,1/ctx.surfaceWidth,1/ctx.surfaceHeight,ctx.layerScale,ctx.layerAngle,runtime.GetGameTime(),paramArr);const srcTarget=ctx.GetEffectRenderTarget(ctx.otherFxIndex);
renderer.SetTexture(srcTarget.GetTexture());runtime.GetCanvasManager().SetDeviceTransform(renderer);ctx.didChangeTransform=true;tempQuad.setFromRect(ctx.screenRect);renderer.Quad3(tempQuad,ctx.rcTexBounce);if(!ctx.inst)renderer.InvalidateRenderTarget(srcTarget);if(isDebugFrame)DebugLogRenderTargetContents("Bounce "+i,renderer,fxTarget)}
function PostDraw(ctx,activeEffectTypes){const renderer=ctx.renderer;if(ctx.layout){renderer.SetTextureFillMode();renderer.SetRenderTarget(ctx.renderTarget);const srcTarget=ctx.GetEffectRenderTarget(ctx.otherFxIndex);renderer.CopyRenderTarget(srcTarget);renderer.InvalidateRenderTarget(srcTarget);return}const canvasManager=ctx.runtime.GetCanvasManager();if(canvasManager.GetCurrentFullscreenScalingQuality()==="low"){renderer.SetTextureFillMode();canvasManager.SetDeviceTransform(renderer,canvasManager.GetDrawWidth(),
canvasManager.GetDrawHeight());ctx.didChangeTransform=true}else renderer.SetDeviceTransformTextureFillMode();if(ctx.inst)renderer.SetBlendMode(ctx.wi.GetBlendMode());else if(ctx.layer)renderer.SetBlendMode(ctx.layer.GetBlendMode());renderer.SetRenderTarget(ctx.renderTarget);const srcTarget=ctx.GetEffectRenderTarget(ctx.otherFxIndex);renderer.SetTexture(srcTarget.GetTexture());tempQuad.setFromRect(ctx.screenRect);renderer.Quad3(tempQuad,ctx.rcTexBounce);if(!ctx.inst)renderer.InvalidateRenderTarget(srcTarget);
if(isDebugFrame)DebugLogRenderTargetContents("Post-draw",renderer,ctx.renderTarget)};

}

// timelines/timelineManager.js
{
'use strict';const C3=self.C3;const NAMES_REGEXP=new RegExp("<(.+?)>","g");
C3.TimelineManager=class TimelineManager extends C3.DefendedBase{constructor(runtime){super();this._runtime=runtime;this._timelineDataManager=C3.New(C3.TimelineDataManager);this._pluginInstance=null;this._timelines=[];this._timelinesByName=new Map;this._objectClassToTimelineMap=new Map;this._timelinesCreatedByTemplate=new Map;this._scheduledTimelines=[];this._playingTimelines=[];this._hasRuntimeListeners=false;this._changingLayout=false;this._isTickingTimelines=false;this._tickFunc=()=>this._OnTick();
this._tick2Func=()=>this._OnTick2();this._beforeLayoutChange=()=>this._OnBeforeChangeLayout();this._layoutChange=()=>this._OnAfterChangeLayout();this._instanceDestroy=e=>this._OnInstanceDestroy(e.instance);this._afterLoad=e=>this._OnAfterLoad();this._destroyedWhileLoadingState=[]}Release(){this.RemoveRuntimeListeners();this._tickFunc=null;this._tick2Func=null;this._beforeLayoutChange=null;this._layoutChange=null;this._instanceDestroy=null;this._afterLoad=null;for(const timeline of this._timelines){timeline.Stop();
timeline.Release()}C3.clearArray(this._timelines);this._timelines=null;this._timelineDataManager.Release();this._timelineDataManager=null;C3.clearArray(this._scheduledTimelines);this._scheduledTimelines=null;C3.clearArray(this._playingTimelines);this._playingTimelines=null;this._timelinesByName.clear();this._timelinesByName=null;this._objectClassToTimelineMap.clear();this._objectClassToTimelineMap=null;this._timelinesCreatedByTemplate.clear();this._timelinesCreatedByTemplate=null;C3.clearArray(this._destroyedWhileLoadingState);
this._destroyedWhileLoadingState=null;this._runtime=null}AddRuntimeListeners(){const dispatcher=this._runtime.Dispatcher();dispatcher.addEventListener("pretick",this._tickFunc);dispatcher.addEventListener("tick2",this._tick2Func);dispatcher.addEventListener("beforelayoutchange",this._beforeLayoutChange);dispatcher.addEventListener("layoutchange",this._layoutChange);dispatcher.addEventListener("instancedestroy",this._instanceDestroy);dispatcher.addEventListener("afterload",this._afterLoad)}RemoveRuntimeListeners(){const dispatcher=
this._runtime.Dispatcher();dispatcher.removeEventListener("pretick",this._tickFunc);dispatcher.removeEventListener("tick2",this._tick2Func);dispatcher.removeEventListener("beforelayoutchange",this._beforeLayoutChange);dispatcher.removeEventListener("layoutchange",this._layoutChange);dispatcher.removeEventListener("instancedestroy",this._instanceDestroy);dispatcher.removeEventListener("afterload",this._afterLoad)}Create(timelineData){this._timelineDataManager.Add(timelineData);const timeline=C3.TimelineState.CreateInitial(timelineData,
this);this.Add(timeline);this.SetTimelineObjectClassesToMap(timeline);this._timelinesCreatedByTemplate.set(timeline.GetName(),0)}CreateFromTemplate(template){const timelineDataManager=this.GetTimelineDataManager();const templateName=template.GetTemplateName();const timelineDataItem=timelineDataManager.Get(templateName);const timeline=C3.TimelineState.CreateFromTemplate(`${templateName}:${this._timelinesCreatedByTemplate.get(templateName)}`,timelineDataItem,this);this._IncreaseTemplateTimelinesCount(templateName);
this.Add(timeline);return timeline}_IncreaseTemplateTimelinesCount(templateName){this._timelinesCreatedByTemplate.set(templateName,this._timelinesCreatedByTemplate.get(templateName)+1)}_SetCreatedTemplateTimelinesCount(){for(const timeline of this._timelines){if(timeline.IsTemplate())continue;const templateName=timeline.GetTemplateName();this._IncreaseTemplateTimelinesCount(templateName)}}_ClearCreatedTemplateTimelinesCount(){for(const templateName of this._timelinesCreatedByTemplate.keys())this._timelinesCreatedByTemplate.set(templateName,
0)}Add(timeline){this._timelines.push(timeline);this._timelinesByName.set(timeline.GetName().toLowerCase(),timeline)}Remove(timeline){if(timeline.IsTemplate())return;C3.arrayFindRemove(this._timelines,timeline);C3.arrayFindRemove(this._scheduledTimelines,timeline);C3.arrayFindRemove(this._playingTimelines,timeline);this._timelinesByName.delete(timeline.GetName().toLowerCase());this.RemoveTimelineFromObjectClassMap(timeline);if(!timeline.IsReleased())timeline.Release()}Trigger(method){this._runtime.Trigger(method,
this._pluginInstance,null)}GetRuntime(){return this._runtime}GetTimelineDataManager(){return this._timelineDataManager}SetPluginInstance(inst){this._pluginInstance=inst}GetPluginInstance(){return this._pluginInstance}*GetTimelines(){for(const timeline of this._timelines)yield timeline}SetTimelineObjectClassToMap(objectClass,timeline){if(!this._objectClassToTimelineMap.has(objectClass))this._objectClassToTimelineMap.set(objectClass,new Set);this._objectClassToTimelineMap.get(objectClass).add(timeline)}SetTimelineObjectClassesToMap(timeline){for(const objectClass of timeline.GetObjectClasses())this.SetTimelineObjectClassToMap(objectClass,
timeline)}RemoveTimelineFromObjectClassMap(timeline){for(const [objectClass,timelines]of this._objectClassToTimelineMap.entries())if(timelines.has(timeline)){timelines.delete(timeline);if(timelines.size===0)this._objectClassToTimelineMap.delete(objectClass)}}GetTimelinesForObjectClass(objectClass){if(!this._objectClassToTimelineMap.has(objectClass))return;return this._objectClassToTimelineMap.get(objectClass)}GetTimelineOfTemplateForInstances(templateTimeline,instancesObject){if(!instancesObject)return;
for(const timeline of this._timelines){const found=instancesObject.every(io=>{return timeline.HasTrackInstance(io.instance,io.trackId)});if(found)if(timeline.GetName().includes(templateTimeline.GetName()))return timeline}}GetTimelineByName(name){return this._timelinesByName.get(name.toLowerCase())||null}GetScheduledOrPlayingTimelineByName(name){for(const timeline of this._scheduledTimelines)if(timeline.GetName()===name)return timeline;for(const timeline of this._playingTimelines)if(timeline.GetName()===
name)return timeline;return null}*GetTimelinesByName(name){if(NAMES_REGEXP.test(name)){NAMES_REGEXP.lastIndex=0;let match;const uniqueNames=new Set;do{match=NAMES_REGEXP.exec(name);if(match){const names=match[1].split(",");for(const name of names)uniqueNames.add(name)}}while(match);for(const name of uniqueNames.values()){const timeline=this.GetTimelineByName(name);if(timeline)yield timeline}uniqueNames.clear()}else{const timeline=this.GetTimelineByName(name);if(timeline)yield timeline}}*GetTimelinesByTags(tags){for(const timeline of this._timelines)if(timeline.HasTags(tags))yield timeline}AddScheduledTimeline(timeline){if(!this._scheduledTimelines.includes(timeline))this._scheduledTimelines.push(timeline);
this._MaybeEnableRuntimeListeners()}RemovePlayingTimeline(timeline){C3.arrayFindRemove(this._playingTimelines,timeline);this._MaybeDisableRuntimeListeners()}ScheduleTimeline(timeline){if(this._playingTimelines.includes(timeline)){timeline.SetPlaying(true);timeline.SetScheduled(false);timeline.SetMarkedForRemoval(false)}else{timeline.SetPlaying(false);timeline.SetScheduled(true);timeline.SetMarkedForRemoval(false);if(!this._scheduledTimelines.includes(timeline))this._scheduledTimelines.push(timeline)}this._MaybeEnableRuntimeListeners()}DeScheduleTimeline(timeline){timeline.SetPlaying(false);
timeline.SetScheduled(false);timeline.ResolvePlayPromise();C3.arrayFindRemove(this._scheduledTimelines,timeline);this._MaybeDisableRuntimeListeners()}CompleteTimeline(timeline){timeline.SetPlaying(false);timeline.SetScheduled(false);timeline.SetMarkedForRemoval(true)}CompleteTimelineAndResolve(timeline){this.CompleteTimeline(timeline);timeline.ResolvePlayPromise()}_OnTick(){if(this.GetRuntime().IsLoadingState())return;if(!this._hasRuntimeListeners)return;if(this._changingLayout)return;let renderChange=
false;this._isTickingTimelines=true;while(this._scheduledTimelines.length){const timeline=this._scheduledTimelines.pop();timeline.SetInitialState();this._playingTimelines.push(timeline)}const dt=this._runtime.GetDt();const ts=this._runtime.GetTimeScale();for(const t of this._playingTimelines){if(t.IsMarkedForRemoval())continue;const change=t.Tick(dt,ts);if(!renderChange&&change)renderChange=true}this._isTickingTimelines=false;if(renderChange)this.GetRuntime().UpdateRender()}_OnTick2(){if(this.GetRuntime().IsLoadingState())return;
if(!this._hasRuntimeListeners)return;if(this._changingLayout)return;let timelinesToRemove;for(const t of this._playingTimelines){if(!t.IsMarkedForRemoval())continue;if(!timelinesToRemove)timelinesToRemove=new Set;this._MaybeExecuteTimelineFinishTriggers(t);timelinesToRemove.add(t)}if(timelinesToRemove)C3.arrayRemoveAllInSet(this._playingTimelines,timelinesToRemove);this._MaybeDisableRuntimeListeners()}_MaybeExecuteTimelineFinishTriggers(timeline){if(timeline.IsReleased())return;if(!timeline.HasValidTracks())return;
if(timeline.IsComplete()&&timeline.InitialStateSet())timeline.FinishTriggers()}_MaybeEnableRuntimeListeners(){if(this._hasRuntimeListeners)return;this._hasRuntimeListeners=true}_MaybeDisableRuntimeListeners(){if(this._playingTimelines.length)return;if(this._scheduledTimelines.length)return;if(this._isTickingTimelines)return;this._hasRuntimeListeners=false}_OnBeforeChangeLayout(){this._changingLayout=true;while(this._scheduledTimelines.length)this.DeScheduleTimeline(this._scheduledTimelines.pop());
const timelinesToRemove=new Set;for(const t of this._playingTimelines){const remove=t._OnBeforeChangeLayout();if(remove)timelinesToRemove.add(t)}C3.arrayRemoveAllInSet(this._playingTimelines,timelinesToRemove);this._MaybeDisableRuntimeListeners();for(const timeline of this._timelines)timeline.CleanCaches()}_OnAfterChangeLayout(){this._changingLayout=false}_OnInstanceDestroy(instance){const objectClass=instance.GetObjectClass();const timelines=this.GetTimelinesForObjectClass(objectClass);if(!timelines)return;
if(this._runtime.IsLoadingState())this._destroyedWhileLoadingState.push(instance);else for(const timeline of timelines){if(timeline.IsTemplate())continue;if(timeline.IsReleased()){this.Remove(timeline);continue}if(!timeline.HasValidTracks()){this._MaybeExecuteTimelineFinishTriggers(timeline);this.Remove(timeline)}}}_OnAfterLoad(){for(const destroyedInstance of this._destroyedWhileLoadingState)this._OnInstanceDestroy(destroyedInstance);C3.clearArray(this._destroyedWhileLoadingState)}_SaveToJson(){return{"timelinesJson":this._SaveTimelinesToJson(),
"scheduledTimelinesJson":this._SaveScheduledTimelinesToJson(),"playingTimelinesJson":this._SavePlayingTimelinesToJson(),"hasRuntimeListeners":this._hasRuntimeListeners,"changingLayout":this._changingLayout,"isTickingTimelines":this._isTickingTimelines}}_LoadFromJson(o){if(!o)return;this._ClearCreatedTemplateTimelinesCount();this._LoadTimelinesFromJson(o["timelinesJson"]);this._LoadScheduledTimelinesFromJson(o["scheduledTimelinesJson"]);this._LoadPlayingTimelinesFromJson(o["playingTimelinesJson"]);
this._hasRuntimeListeners=!o["hasRuntimeListeners"];this._changingLayout=!!o["changingLayout"];this._isTickingTimelines=!!o["isTickingTimelines"];this._SetCreatedTemplateTimelinesCount();this._MaybeEnableRuntimeListeners();this._MaybeDisableRuntimeListeners()}_SaveTimelinesToJson(){return this._timelines.map(timelineState=>timelineState._SaveToJson())}_LoadTimelinesFromJson(timelinesJson){for(const timelineJson of timelinesJson){let timeline=this.GetTimelineByName(timelineJson["name"]);if(timeline)timeline._LoadFromJson(timelineJson);
else{const templateName=this._GetTemplateNameFromJson(timelineJson);if(!templateName)continue;const templateTimeline=this.GetTimelineByName(templateName);timeline=this.CreateFromTemplate(templateTimeline);timeline._LoadFromJson(timelineJson)}if(!timeline.HasTracks())this.Remove(timeline)}}_GetTemplateNameFromJson(timelineJson){const name=timelineJson["name"];const nameParts=name.split(":");if(!nameParts||nameParts.length!==2)return null;return nameParts[0]}_SaveScheduledTimelinesToJson(){return this._SaveTimelines(this._scheduledTimelines)}_LoadScheduledTimelinesFromJson(scheduledTimelinesJson){this._LoadTimelines(scheduledTimelinesJson,
this._scheduledTimelines)}_SavePlayingTimelinesToJson(){return this._SaveTimelines(this._playingTimelines)}_LoadPlayingTimelinesFromJson(playingTimelinesJson){this._LoadTimelines(playingTimelinesJson,this._playingTimelines)}_IsTimelineInJson(timeline,json){for(const name of json)if(name===timeline.GetName())return true;return false}_SaveTimelines(collection){return collection.map(t=>t.GetName())}_LoadTimelines(timelinesJson,collection){const timelinesToRemove=new Set;for(const timeline of collection)if(!this._IsTimelineInJson(timeline,
timelinesJson))timelinesToRemove.add(timeline);C3.arrayRemoveAllInSet(collection,timelinesToRemove);const ff=tn=>t=>t.GetName()===tn;for(const name of timelinesJson){const timeline=this.GetTimelineByName(name);if(timeline){const t=collection.find(ff(name));if(!t)collection.push(timeline)}}}};

}

// timelines/state/timelineState.js
{
'use strict';const C3=self.C3;const PING_PONG_BEGIN=0;const PING_PONG_END=1;
C3.TimelineState=class Timeline extends C3.DefendedBase{constructor(name,timelineDataItem,timelineManager){super();this._runtime=timelineManager.GetRuntime();this._timelineManager=timelineManager;this._timelineDataItem=timelineDataItem;this._name=name;this._tracks=[];for(const trackDataItem of this._timelineDataItem.GetTrackData().trackDataItems())this._tracks.push(C3.TrackState.Create(this,trackDataItem));this._playPromise=null;this._playResolve=null;this._playheadTime=C3.New(C3.KahanSum);this._playheadTime.Set(0);
this._playbackRate=1;this._pingPongState=PING_PONG_BEGIN;this._currentRepeatCount=1;this._isPlaying=false;this._isScheduled=false;this._initialStateSet=false;this._complete=true;this._released=false;this._markedForRemoval=false;this._completedTick=-1;this._implicitPause=false;this._isTemplate=false;this._finishedTriggers=false;this._firstTick=false;this._lastDelta=NaN;this._tags=[""];this._stringTags="";this._tagsChanged=false}static CreateInitial(timelineDataJson,timelineManager){const timelineDataManager=
timelineManager.GetTimelineDataManager();const nameId=timelineDataManager.GetNameId();const timelineDataItem=timelineDataManager.Get(timelineDataJson[nameId]);const timeline=C3.New(C3.TimelineState,timelineDataJson[nameId],timelineDataItem,timelineManager);timeline.SetIsTemplate(true);return timeline}static CreateFromTemplate(name,timelineDataItem,timelineManager){return C3.New(C3.TimelineState,name,timelineDataItem,timelineManager)}static get WORLD_INSTANCE_BOX_CHANGE(){return 1}static get LAYOUT_RENDER_CHANGE(){return C3.nextHighestPowerOfTwo(1)}Release(){if(this.IsReleased())return;
this._timelineManager.DeScheduleTimeline(this);this._timelineManager.CompleteTimelineAndResolve(this);for(const track of this._tracks)track.Release();C3.clearArray(this._tracks);this._tracks=null;this._playheadTime.Release();this._playheadTime=null;this._runtime=null;this._timelineManager=null;this._timelineDataItem=null;this._released=true;this._playPromise=null;this._playResolve=null}GetTimelineManager(){return this._timelineManager}GetRuntime(){return this._runtime}GetTracks(){return this._tracks}GetSimilarPropertyTracks(instance,
sourceAdapter,propertyName){const ret=[];for(const track of this._tracks){if(instance!==track.GetInstance())continue;const propertyTrack=track.GetPropertyTrack(propertyName);if(!propertyTrack)continue;if(sourceAdapter.constructor!==propertyTrack.GetSourceAdapter().constructor)continue;ret.push(propertyTrack)}return ret}HasTracks(){return!!this._tracks.length}GetTrackById(trackId){for(const track of this._tracks)if(C3.equalsNoCase(track.GetId(),trackId))return track;return null}GetTrackByName(name){for(const track of this._tracks){if(track.IsInstanceTrack())continue;
if(C3.equalsNoCase(track.GetName(),name))return track}return null}SetName(name){this._name=name}GetName(){return this._name}GetTimelineDataItem(){return this._timelineDataItem}GetTemplateName(){return this._timelineDataItem.GetName()}GetTotalTime(){return this._timelineDataItem.GetTotalTime()}SetTotalTime(tt){this._timelineDataItem.SetTotalTime(tt)}GetStep(){return this._timelineDataItem.GetStep()}SetStep(s){this._timelineDataItem.SetStep(s)}GetInterpolationMode(){return this._timelineDataItem.GetInterpolationMode()}SetInterpolationMode(im){this._timelineDataItem.SetInterpolationMode(im)}GetResultMode(){return this._timelineDataItem.GetResultMode()}SetResultMode(rm){this._timelineDataItem.GetResultMode(rm)}SetEase(e){for(const track of this.GetTracks())track.SetEase(e)}GetLoop(){return this._timelineDataItem.GetLoop()}SetLoop(l){return this._timelineDataItem.SetLoop(l)}GetPingPong(){return this._timelineDataItem.GetPingPong()}SetPingPong(p){return this._timelineDataItem.SetPingPong(p)}GetRepeatCount(){return this._timelineDataItem.GetRepeatCount()}SetPlaybackRate(r){return this._playbackRate=
r}GetPlaybackRate(){return this._playbackRate}IsForwardPlayBack(){if(!this.IsPlaying())return true;return this._playbackRate>0}GetPlayPromise(){if(this._playPromise)return this._playPromise;this._playPromise=new Promise(resolve=>{this._playResolve=resolve});return this._playPromise}ResolvePlayPromise(){if(!this._playPromise)return;this._playResolve();this._playPromise=null;this._playResolve=null}SetTags(tags){this._tags=C3.TimelineState._GetTagArray(tags);this._tagsChanged=true}GetTags(){return this._tags}GetStringTags(){if(this._tagsChanged)this._stringTags=
this._tags.join(" ");this._tagsChanged=false;return this._stringTags}HasTags(tags){if(!this._tags)return false;if(!this._tags.length)return false;const t=C3.TimelineState._GetTagArray(tags);if(!t)return false;if(!t.length)return false;return t.every(C3.TimelineState._HasTag,this)}OnStarted(){C3.Plugins.Timeline.Cnds.SetTriggerTimeline(this);this._timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnTimelineStarted);this._timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnTimelineStartedByName);this._timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnTimelineStartedByTags);
this._timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnAnyTimelineStarted);C3.Plugins.Timeline.Cnds.SetTriggerTimeline(null)}OnCompleted(){this._completedTick=this._runtime.GetTickCount()}FinishTriggers(){if(this._finishedTriggers)return;this._finishedTriggers=true;C3.Plugins.Timeline.Cnds.SetTriggerTimeline(this);this._timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnTimelineFinished);this._timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnTimelineFinishedByName);this._timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnTimelineFinishedByTags);
this._timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnAnyTimelineFinished);C3.Plugins.Timeline.Cnds.SetTriggerTimeline(null)}SetPlaying(p){this._isPlaying=p}IsCompletedTick(){return this._completedTick===this._runtime.GetTickCount()}IsPlaying(playingOnly=false){if(this.IsCompletedTick())return true;if(this.IsScheduled()&&!playingOnly)return true;return this._isPlaying}_IsPlaying(){return this.IsPlaying(true)}IsPaused(){return this._IsPaused()}_IsPaused(){if(this.IsReleased())return false;if(this.IsScheduled())return false;
if(this._IsPlaying())return false;if(this.IsComplete())return false;return true}SetScheduled(s){this._isScheduled=s}IsScheduled(){return this._isScheduled}SetComplete(c){this._complete=c;const t=this.GetTime();if(t<=0||t>=this.GetTotalTime())this._complete=true}IsComplete(){return this._complete}IsReleased(){return this._released}SetMarkedForRemoval(mfr){this._markedForRemoval=mfr}IsMarkedForRemoval(){return this._markedForRemoval}SetImplicitPause(ip){this._implicitPause=ip}IsImplicitPause(){return this._implicitPause}SetIsTemplate(it){this._isTemplate=
!!it}IsTemplate(){return this._isTemplate}InitialStateSet(){return this._initialStateSet}GetTime(){return this._playheadTime.Get()}SetTime(time){const lastGlobalTime=this.GetTime();this._SetTime(time);this.SetComplete(false);if(!this.IsComplete())this.SetImplicitPause(true);if(!this._IsPlaying()&&!this.IsScheduled()&&this._initialStateSet);else if(!this._IsPlaying()&&!this.IsScheduled()&&!this._initialStateSet)this.SetInitialStateFromSetTime();else if(this._IsPlaying())this.Stop();else if(this.IsScheduled()){this._timelineManager.DeScheduleTimeline(this);
this.SetInitialStateFromSetTime()}const renderChange=this._Interpolate(time,false,true,true,lastGlobalTime);if(renderChange)this.GetRuntime().UpdateRender();this._OnSetTime()}_SetTime(time){if(time<0)this._playheadTime.Set(0);else if(time>=this.GetTotalTime())this._playheadTime.Set(this.GetTotalTime());else this._playheadTime.Set(time)}_OnSetTime(){if(!C3.Plugins.Timeline||this.constructor!==C3.TimelineState)return;C3.Plugins.Timeline.Cnds.SetTriggerTimeline(this);this._timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnTimeSet);
this._timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnTimeSetByName);this._timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnTimeSetByTags);C3.Plugins.Timeline.Cnds.SetTriggerTimeline(null)}_CanResume(){if(this.GetLoop())return true;else if(this.GetPingPong()&&this._pingPongState===PING_PONG_END)if(this.IsForwardPlayBack()){if(this.GetTime()>=this.GetTotalTime())return false}else{if(this.GetTime()<=0)return false}else if(!this.GetLoop()&&!this.GetPingPong())if(this.IsForwardPlayBack()){if(this.GetTime()>=
this.GetTotalTime())return false}else if(this.GetTime()<=0)return false;return true}Resume(){if(this.IsReleased())return;if(this._CanResume())this.Play(true)}Play(resume=false){if(this.IsReleased())return false;if(this.IsScheduled())return false;if(this._IsPlaying()&&this.IsCompletedTick())return this._SchedulePlayingTimeline();if(this._IsPlaying())return false;if(!this.IsComplete()&&!resume&&!this.IsImplicitPause())return false;return this._ScheduleStoppedTimeline()}_SchedulePlayingTimeline(){this.SetImplicitPause(false);
this._timelineManager.RemovePlayingTimeline(this);this._timelineManager.ScheduleTimeline(this);this.GetPlayPromise();return true}_ScheduleStoppedTimeline(){this.SetImplicitPause(false);this._timelineManager.ScheduleTimeline(this);this.GetPlayPromise();return true}Stop(completed=false){if(this.IsReleased())return;this.SetComplete(completed);this._timelineManager.CompleteTimeline(this);if(this.IsComplete())this.ResolvePlayPromise()}Reset(render=true,beforeChangeLayout=false){if(this.IsReleased())return;
if(!this._IsPlaying()&&this.IsScheduled())return this._timelineManager.DeScheduleTimeline(this);if(this.IsComplete())return;this.Stop(true);if(this.IsForwardPlayBack())this._SetTime(0);else this._SetTime(this.GetTotalTime());let renderChange;const time=this.GetTime();if(beforeChangeLayout)renderChange=this._InterpolateBeforeChangeLayout(time);else renderChange=this._Interpolate(time,false,false,true);if(render)this._OnSetTime();if(renderChange&&render)this.GetRuntime().UpdateRender()}ResetBeforeChangeLayout(){this.Reset(false,
true)}_InterpolateBeforeChangeLayout(time){this._Interpolate(time,false,false,true,NaN,false,true)}_OnBeforeChangeLayout(){if(this.IsReleased())return true;if(this.HasValidGlobalTracks())return false;this._timelineManager.CompleteTimeline(this);this.ResetBeforeChangeLayout();return true}SetInitialStateFromSetTime(){this.SetInitialState(true)}SetInitialState(fromSetTime){if(this.IsMarkedForRemoval())return;if(fromSetTime){this._initialStateSet=true;this._firstTick=true;for(const track of this._tracks)track.SetInitialState()}else{this.SetPlaying(true);
this.SetScheduled(false);this.OnStarted();if(this.IsComplete()){this._completedTick=-1;this._pingPongState=PING_PONG_BEGIN;this._currentRepeatCount=1;this._complete=false;this._finishedTriggers=false;this._initialStateSet=true;this._firstTick=true;if(this.IsForwardPlayBack())this._SetTime(0);else this._SetTime(this.GetTotalTime());for(const track of this._tracks)track.SetInitialState()}else{this._firstTick=true;for(const track of this._tracks)track.SetResumeState()}}}Tick(deltaTime,timeScale){if(deltaTime===
0&&this._lastDelta===0)return;this._lastDelta=deltaTime;const lastTime=this.GetTime();const newDeltaTime=deltaTime*timeScale*this._playbackRate;this._SetTime(lastTime+newDeltaTime);let complete;if(!this.GetLoop()&&!this.GetPingPong())complete=this._SimpleCompleteCheck();else if(this.GetLoop()&&!this.GetPingPong())complete=this._LoopCompleteCheck();else if(!this.GetLoop()&&this.GetPingPong())complete=this._PingPongCompleteCheck();else if(this.GetLoop()&&this.GetPingPong())complete=this._LoopPingPongCompleteCheck();
if(complete){for(const track of this._tracks)track.SetEndState();this.Stop(true);this.OnCompleted();return true}else return this._Interpolate(this.GetTime(),true,false,false,lastTime,true)}_Interpolate(time,isTicking=false,setTime=false,ensureValue=false,lastTime=NaN,onTickCall=false,ignoreGlobals=false){let renderChange=false;for(const track of this._tracks)track.BeforeInterpolate();for(const track of this._tracks){let t=time;if(typeof lastTime==="number"){const globalTime=this.GetTime();const localTime=
globalTime-track.GetStartOffset();const lastLocalTime=lastTime-track.GetStartOffset();if(localTime<0&&lastLocalTime>0){t=track.GetStartOffset();this._SetTime(t)}}const change=track.Interpolate(t,isTicking,setTime,ensureValue,this._firstTick,ignoreGlobals);if(!renderChange&&change)renderChange=true}for(const track of this._tracks)track.AfterInterpolate();if(this._firstTick&&onTickCall)this._firstTick=false;return renderChange}_SimpleCompleteCheck(){if(this.IsForwardPlayBack()){if(this.GetTime()>=this.GetTotalTime())if(this._currentRepeatCount<
this.GetRepeatCount()){this._currentRepeatCount++;this._SetTime(0)}else{this._SetTime(this.GetTotalTime());return true}}else if(this.GetTime()<=0)if(this._currentRepeatCount<this.GetRepeatCount()){this._currentRepeatCount++;this._SetTime(this.GetTotalTime())}else{this._SetTime(0);return true}return false}_LoopCompleteCheck(){if(this.IsForwardPlayBack()){if(this.GetTime()>=this.GetTotalTime())this._SetTime(0)}else if(this.GetTime()<=0)this._SetTime(this.GetTotalTime());return false}_PingPongCompleteCheck(){if(this.IsForwardPlayBack()){if(this.GetTime()>=
this.GetTotalTime()){this._SetTime(this.GetTotalTime());this.SetPlaybackRate(this.GetPlaybackRate()*-1);if(this._pingPongState===PING_PONG_END)if(this._currentRepeatCount<this.GetRepeatCount()){this._currentRepeatCount++;this._pingPongState=PING_PONG_BEGIN}else return true;else if(this._pingPongState===PING_PONG_BEGIN)this._pingPongState=PING_PONG_END}}else if(this.GetTime()<=0){this._SetTime(0);this.SetPlaybackRate(this.GetPlaybackRate()*-1);if(this._pingPongState===PING_PONG_END)if(this._currentRepeatCount<
this.GetRepeatCount()){this._currentRepeatCount++;this._pingPongState=PING_PONG_BEGIN}else return true;else if(this._pingPongState===PING_PONG_BEGIN)this._pingPongState=PING_PONG_END}return false}_LoopPingPongCompleteCheck(){if(this.IsForwardPlayBack()){if(this.GetTime()>=this.GetTotalTime()){this._SetTime(this.GetTotalTime());this.SetPlaybackRate(this.GetPlaybackRate()*-1)}}else if(this.GetTime()<=0){this._SetTime(0);this.SetPlaybackRate(this.GetPlaybackRate()*-1)}return false}AddTrack(){const trackDataItem=
this._timelineDataItem.GetTrackData().AddEmptyTrackDataItem();const track=C3.TrackState.Create(this,trackDataItem);this._tracks.push(track);return track}CleanCaches(){for(const track of this._tracks)track.CleanCaches()}ClearTrackInstances(){for(const track of this._tracks)track.ClearInstance()}SetTrackInstance(trackId,instance){if(!instance)return;for(const track of this._tracks){if(!track.IsInstanceTrack())continue;if(trackId){if(track.GetId()!==trackId)continue;track.SetInstance(instance);this._timelineManager.SetTimelineObjectClassToMap(instance.GetObjectClass(),
this);break}else{if(track.HasInstance())continue;track.SetInstance(instance);this._timelineManager.SetTimelineObjectClassToMap(instance.GetObjectClass(),this);break}}}HasTrackInstance(instance,trackId){for(const track of this._tracks){if(!track.IsInstanceTrack())continue;if(trackId){if(trackId===track.GetId()&&instance===track.GetInstance())return true}else if(instance===track.GetInstance())return true}return false}HasValidTracks(){return this._tracks.some(t=>{if(t.IsInstanceTrack())return t.CanInstanceBeValid();
else return true})}HasValidGlobalTracks(){return this._tracks.some(t=>{if(t.IsInstanceTrack()){if(!t.CanInstanceBeValid())return false;const objectClass=t.GetObjectClass();if(!objectClass)return false;return objectClass.IsGlobal()}else return false})}GetPropertyTrack(propertyName){for(const track of this.GetTracks())for(const propertyTrack of track.GetPropertyTracks())if(propertyTrack.GetPropertyName()===propertyName)return propertyTrack}GetTrackFromInstance(instance){for(const track of this._tracks)if(instance===
track.GetInstance())return track;return null}GetKeyframeWithTags(tags){let tagsArray=tags?tags.split(" "):[];const tagsSet=new Set(tagsArray.map(t=>t.toLowerCase().trim()));tagsArray=[...tagsSet.values()];for(const track of this.GetTracks())for(const keyframeDataItem of track.GetKeyframeDataItems()){const hasAllTags=tagsArray.every(t=>keyframeDataItem.HasTag(t));if(hasAllTags)return keyframeDataItem}}GetObjectClasses(){const ret=[];for(const track of this.GetTracks())ret.push(track.GetObjectClass());
return ret.filter(oc=>oc)}_SaveToJson(){return{"tracksJson":this._SaveTracksToJson(),"name":this._name,"playheadTime":this.GetTime(),"playbackRate":this._playbackRate,"pingPongState":this._pingPongState,"currentRepeatCount":this._currentRepeatCount,"isPlaying":this._isPlaying,"isScheduled":this._isScheduled,"initialStateSet":this._initialStateSet,"finishedTriggers":this._finishedTriggers,"complete":this._complete,"released":this._released,"markedForRemoval":this._markedForRemoval,"completedTick":this._completedTick,
"implicitPause":this._implicitPause,"isTemplate":this._isTemplate,"tags":this._tags.join(" "),"stringTags":this._stringTags,"tagsChanged":this._tagsChanged,"firstTick":this._firstTick}}_LoadFromJson(o){if(!o)return;this._LoadTracksFromJson(o["tracksJson"]);this._name=o["name"];this._playheadTime.Set(o["playheadTime"]);this._playbackRate=o["playbackRate"];this._pingPongState=o["pingPongState"];this._currentRepeatCount=o["currentRepeatCount"];this._isPlaying=!!o["isPlaying"];this._isScheduled=!!o["isScheduled"];
this._initialStateSet=!!o["initialStateSet"];this._finishedTriggers=o.hasOwnProperty("finishedTriggers")?!!o["finishedTriggers"]:false;this._complete=!!o["complete"];this._released=!!o["released"];this._markedForRemoval=!!o["markedForRemoval"];this._completedTick=o["completedTick"];this._implicitPause=!!o["implicitPause"];this._isTemplate=!!o["isTemplate"];this._tags=o["tags"].split(" ");this._stringTags=o["stringTags"];this._tagsChanged=!!o["tagsChanged"];this._firstTick=!!o["firstTick"]}_SaveTracksToJson(){return this._tracks.map(trackState=>
trackState._SaveToJson())}_LoadTracksFromJson(tracksJson){tracksJson.forEach((trackJson,i)=>{const track=this._tracks[i];track._LoadFromJson(trackJson)});this._tracks.filter(track=>track.CanInstanceBeValid())}static _HasTag(tag){const tags=this.GetTags();if(tag==="")return tags.length===1&&tags[0]==="";return tags.includes(tag)}static _GetTagArray(tags){if(C3.IsArray(tags))return tags.slice(0);if(C3.IsString(tags))return tags.split(" ")}};

}

// timelines/state/trackState.js
{
'use strict';const C3=self.C3;const INSTANCE_TRACK=0;const VALUE_TRACK=1;
C3.TrackState=class Track extends C3.DefendedBase{constructor(timeline,trackDataItem){super();this._timeline=timeline;this._trackDataItem=trackDataItem;this._trackData=trackDataItem.GetTrackData();this._instanceUid=NaN;this._objectClassIndex=NaN;this._instance=null;this._worldInfo=null;this._isNested=trackDataItem.GetStartOffset()>0;this._initialStateOfNestedSet=false;this._endStateOfNestedSet=false;this._lastKeyframeDataItem=null;this._keyframeDataItems=this._trackDataItem.GetKeyframeData().GetKeyframeDataItemArray();
this._propertyTracks=[];for(const propertyTrackDataItem of this._trackDataItem.GetPropertyTrackData().propertyTrackDataItems())this._propertyTracks.push(C3.PropertyTrackState.Create(this,propertyTrackDataItem))}static Create(timeline,trackDataItem){return C3.New(C3.TrackState,timeline,trackDataItem)}Release(){this._keyframeDataItems=null;for(const propertyTrack of this._propertyTracks)propertyTrack.Release();C3.clearArray(this._propertyTracks);this._propertyTracks=null;this._timeline=null;this._instance=
null;this._worldInfo=null;this._trackDataItem=null;this._lastKeyframeDataItem=null}CleanCaches(){for(const propertyTrack of this._propertyTracks)propertyTrack.CleanCaches();this._instance=null;this._worldInfo=null}GetTimeline(){return this._timeline}GetRuntime(){return this._timeline.GetRuntime()}GetKeyframeDataItems(){if(this._keyframeDataItems)return this._keyframeDataItems;this._keyframeDataItems=this._trackDataItem.GetKeyframeData().GetKeyframeDataItemArray();return this._keyframeDataItems}GetPropertyTracks(){return this._propertyTracks}GetPropertyTrack(propertyName){for(const propertyTrack of this._propertyTracks)if(propertyTrack.GetPropertyName()===
propertyName)return propertyTrack}MaybeGetInstance(){if(!this._instance)this.GetInstance()}IsInstanceValid(){if(!this._instance)return false;return!this._instance.IsDestroyed()}CanInstanceBeValid(){if(!this.IsInstanceTrack())return false;const uid=this.GetInstanceUID();const instance=this.GetRuntime().GetInstanceByUID(uid);if(!instance)return false;return!instance.IsDestroyed()}GetObjectClass(){if(!this.IsInstanceTrack())return;const index=this.GetObjectClassIndex();if(index===-1)return;return this.GetRuntime().GetObjectClassByIndex(index)}ClearInstance(){this._instance=
null;this._instanceUid=-1;this._worldInfo=null;this._objectClassIndex=-1}HasInstance(){return!!this._instance}GetInstance(){if(this._instance&&this.IsInstanceValid())return this._instance;const uid=this.GetInstanceUID();this._instance=this.GetRuntime().GetInstanceByUID(uid);return this._instance}SetInstance(instance){if(this._instance===instance)return;this.CleanCaches();this._instance=instance;this._objectClassIndex=instance.GetObjectClass().GetIndex();this._instanceUid=instance.GetUID();this._worldInfo=
instance.GetWorldInfo();for(const item of this.propertyTrackItems()){const propertyTrack=item.propertyTrack;const sourceAdapter=item.sourceAdapter;const id=propertyTrack.GetSourceAdapterId();switch(id){case "instance-variable":{const index=sourceAdapter.GetEditorIndex();const objectClass=instance.GetObjectClass();const i=objectClass.GetInstanceVariableIndexByName(item.name);const name=objectClass.GetInstanceVariableName(i);const type=objectClass.GetInstanceVariableType(i);if(name===item.name&&type===
item.type)sourceAdapter.UpdateInstanceVariableIndex(i);break}case "behavior":{const timelineBehaviorType=item.behaviorType;const trackObjectClass=this.GetObjectClass();const objectClass=instance.GetObjectClass();const instanceBehaviorType=sourceAdapter.GetBehaviorType(objectClass);if(timelineBehaviorType&&instanceBehaviorType){const name=timelineBehaviorType.GetName();const templateBehaviorIndex=trackObjectClass.GetBehaviorIndexByName(name);const instanceBehaviorIndex=objectClass.GetBehaviorIndexByName(name);
const propertyIndex=sourceAdapter.GetEditorIndex();sourceAdapter.UpdateBehaviorTypeSid(instanceBehaviorType.GetSID())}break}}}}*propertyTrackItems(){for(const propertyTrack of this._propertyTracks){const sourceAdapter=propertyTrack.GetSourceAdapter();const objectClass=this.GetObjectClass();const ret={propertyTrack:propertyTrack,sourceAdapter:sourceAdapter};switch(propertyTrack.GetSourceAdapterId()){case "world-instance":{ret.property=propertyTrack.GetPropertyName();break}case "instance-variable":{const index=
sourceAdapter.GetEditorIndex();ret.name=objectClass.GetInstanceVariableName(index);ret.type=objectClass.GetInstanceVariableType(index);break}case "effect":{const effectList=objectClass.GetEffectList();const effectType=sourceAdapter.GetEffectType(effectList);ret.effectType=effectType;break}case "behavior":{const behaviorType=sourceAdapter.GetBehaviorType(objectClass);ret.behaviorType=behaviorType;break}case "plugin":{ret.plugin=objectClass.GetPlugin();break}case "value":{break}}yield ret}}GetWorldInfo(){if(this._worldInfo&&
this.IsInstanceValid())return this._worldInfo;const instance=this.GetInstance();if(instance)this._worldInfo=instance.GetWorldInfo();return this._worldInfo}GetTrackDataItem(){return this._trackDataItem}GetInstanceUID(){if(this._instanceUid)return this._instanceUid;return this._trackDataItem.GetInstanceUID()}SetInstanceUID(uid){this._trackDataItem.SetInstanceUID(uid)}GetInterpolationMode(){return this._trackDataItem.GetInterpolationMode()}SetInterpolationMode(im){this._trackDataItem.SetInterpolationMode(im)}GetResultMode(){return this._trackDataItem.GetResultMode()}GetId(){return this._trackDataItem.GetId()}GetStartOffset(){return this._trackDataItem.GetStartOffset()}GetLocalTotalTime(){return this._trackDataItem.GetLocalTotalTime()}SetLocalTotalTime(t){this._trackDataItem.SetLocalTotalTime(t)}SetResultMode(rm){this._trackDataItem.SetResultMode(rm)}SetEase(e){for(const keyframeDataItem of this.GetKeyframeDataItems())keyframeDataItem.SetEase(e);
for(const propertyTrack of this.GetPropertyTracks())propertyTrack.SetEase(e)}GetEnable(){return this._trackDataItem.GetEnable()}SetEnable(e){this._trackDataItem.SetEnable(e)}GetObjectClassIndex(){if(!isNaN(this._objectClassIndex))return this._objectClassIndex;return this._trackDataItem.GetObjectClassIndex()}SetObjectClassIndex(objectClassIndex){this._trackDataItem.SetObjectClassIndex(objectClassIndex)}SetOriginalWidth(w){this._trackDataItem.SetOriginalWidth(w)}GetOriginalWidth(){const instance=this.GetInstance();
if(instance){const sdkIntance=instance.GetSdkInstance();if(sdkIntance.IsOriginalSizeKnown())return instance.GetSdkInstance().GetOriginalWidth()}return this._trackDataItem.GetOriginalWidth()}SetOriginalHeight(h){this._trackDataItem.SetOriginalHeight(h)}GetOriginalHeight(){const instance=this.GetInstance();if(instance){const sdkIntance=instance.GetSdkInstance();if(sdkIntance.IsOriginalSizeKnown())return instance.GetSdkInstance().GetOriginalHeight()}return this._trackDataItem.GetOriginalHeight()}GetType(){return this._trackDataItem.GetType()}GetName(){return this._trackDataItem.GetName()}IsInstanceTrack(){return this.GetType()===
INSTANCE_TRACK}IsValueTrack(){return this.GetType()===VALUE_TRACK}SetInitialState(){this.MaybeGetInstance();if(!this.IsInstanceValid()&&this.IsInstanceTrack())return;for(const propertyTrack of this._propertyTracks)propertyTrack.SetInitialState();const timeline=this.GetTimeline();const isForwardPlayBack=timeline.IsForwardPlayBack();const time=isForwardPlayBack?0:this.GetLocalTotalTime();this._lastKeyframeDataItem=this.GetLastKeyFrameBeforeTime(time);this._initialStateOfNestedSet=false;this._endStateOfNestedSet=
false;this.Interpolate(time)}SetResumeState(){this.MaybeGetInstance();if(!this.IsInstanceValid()&&this.IsInstanceTrack())return;const playbackDirection=this._timeline.IsForwardPlayBack();const time=this._timeline.GetTime()-this.GetStartOffset();this._lastKeyframeDataItem=this.GetLastKeyFrameBeforeTime(time);for(const propertyTrack of this._propertyTracks)propertyTrack.SetResumeState()}SetEndState(){if(this.GetTimeline().IsComplete())return;this.MaybeGetInstance();if(!this.IsInstanceValid()&&this.IsInstanceTrack())return;
if(!this._isNested){const time=this._timeline.GetTime();const totalTime=this.GetStartOffset()+this.GetLocalTotalTime();if(time>=totalTime)this.Interpolate(this.GetLocalTotalTime(),true,false,true);else if(time<=0)this.Interpolate(0,true,false,true)}}BeforeInterpolate(){for(const propertyTrack of this._propertyTracks)propertyTrack.BeforeInterpolate()}Interpolate(time,isTicking=false,setTime=false,ensureValue=false,firstTick=false,ignoreGlobals=false){this.MaybeGetInstance();if(!this.IsInstanceValid()&&
this.IsInstanceTrack())return false;if(ignoreGlobals&&this.IsInstanceTrack()&&this.GetObjectClass().IsGlobal())return false;time=time-this.GetStartOffset();if(time<0)return false;this.MaybeSetInitialStateOfNestedTrack(time,isTicking);this.MaybeTriggerKeyframeReachedConditions(time,isTicking,firstTick);let boxChange=false;let renderChange=false;for(const propertyTrack of this._propertyTracks){const change=propertyTrack.Interpolate(time,setTime,false,ensureValue);if(!boxChange&&(change&C3.TimelineState.WORLD_INSTANCE_BOX_CHANGE)!==
0)boxChange=true;if(!renderChange&&(change&C3.TimelineState.LAYOUT_RENDER_CHANGE)!==0)renderChange=true}this.MaybeSetEndStateOfNestedTrack(time,isTicking);if(boxChange){const worldInfo=this.GetWorldInfo();if(worldInfo)worldInfo.SetBboxChanged()}return renderChange}AfterInterpolate(){for(const propertyTrack of this._propertyTracks)propertyTrack.AfterInterpolate()}MaybeSetInitialStateOfNestedTrack(time,isTicking){if(!isTicking)return;if(!this._isNested)return;if(this._initialStateOfNestedSet)return;
const timeline=this.GetTimeline();if(timeline.IsForwardPlayBack()){if(time<0)return;for(const propertyTrack of this._propertyTracks)propertyTrack.Interpolate(0,false,false,true)}else{if(time>this.GetLocalTotalTime())return;for(const propertyTrack of this._propertyTracks)propertyTrack.Interpolate(this.GetLocalTotalTime(),false,false,true)}for(const propertyTrack of this._propertyTracks)propertyTrack.SetInitialState();this._initialStateOfNestedSet=true}MaybeSetEndStateOfNestedTrack(time,isTicking){if(!isTicking)return;
if(!this._isNested)return;if(this._endStateOfNestedSet)return;const timeline=this.GetTimeline();if(timeline.IsForwardPlayBack()){if(time>=this.GetLocalTotalTime()){for(const propertyTrack of this._propertyTracks)propertyTrack.Interpolate(this.GetLocalTotalTime(),false,false,true);this._endStateOfNestedSet=true}}else if(time<=0){for(const propertyTrack of this._propertyTracks)propertyTrack.Interpolate(0,false,false,true);this._endStateOfNestedSet=true}}MaybeTriggerKeyframeReachedConditions(time,isTicking,
firstTick){if(firstTick)return;if(!isTicking)return;let keyframeDataItem=this.GetLastKeyFrameBeforeTime(time);if(keyframeDataItem!==this._lastKeyframeDataItem)this.OnKeyframeReached(keyframeDataItem);this._lastKeyframeDataItem=keyframeDataItem;return keyframeDataItem}GetLastKeyFrameBeforeTime(time){const timeline=this.GetTimeline();let keyframeDataItem=this._trackData.GetKeyFrameDataItemAtTime(time,this._trackDataItem);if(keyframeDataItem)return keyframeDataItem;else if(timeline.IsForwardPlayBack())return this._trackData.GetFirstKeyFrameDataItemLowerOrEqualThan(time,
this._trackDataItem);else return this._trackData.GetFirstKeyFrameDataItemHigherOrEqualThan(time,this._trackDataItem)}OnKeyframeReached(keyframeDataItem){if(!C3.Plugins.Timeline||this.GetTimeline().constructor!==C3.TimelineState)return;const timeline=this.GetTimeline();C3.Plugins.Timeline.Cnds.SetTriggerTimeline(timeline);C3.Plugins.Timeline.Cnds.SetTriggerKeyframe(keyframeDataItem);const timelineManager=timeline.GetTimelineManager();timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnAnyKeyframeReached);
timelineManager.Trigger(C3.Plugins.Timeline.Cnds.OnKeyframeReached);C3.Plugins.Timeline.Cnds.SetTriggerTimeline(null);C3.Plugins.Timeline.Cnds.SetTriggerKeyframe(null)}AddKeyframe(){const keyframeData=this._trackDataItem.GetKeyframeData();const keyframeDataItem=keyframeData.AddEmptyKeyframeDataItem();return keyframeDataItem}AddPropertyTrack(){const propertyTrackData=this._trackDataItem.GetPropertyTrackData();const propertyTrackDataItem=propertyTrackData.AddEmptyPropertyTrackDataItem();const propertyTrack=
C3.PropertyTrackState.Create(this,propertyTrackDataItem);this._propertyTracks.push(propertyTrack);return propertyTrack}DeleteKeyframes(match){const keyframeData=this._trackDataItem.GetKeyframeData();keyframeData.DeleteKeyframeDataItems(match)}DeletePropertyKeyframes(match){for(const propertyTrack of this._propertyTracks)propertyTrack.DeletePropertyKeyframes(match)}SaveState(){for(const propertyTrack of this._propertyTracks)propertyTrack.SaveState()}CompareInitialStateWithCurrent(){this.MaybeGetInstance();
if(!this.IsInstanceValid()&&this.IsInstanceTrack())return;for(const propertyTrack of this._propertyTracks)propertyTrack.CompareInitialStateWithCurrent()}CompareSaveStateWithCurrent(){this.MaybeGetInstance();if(!this.IsInstanceValid()&&this.IsInstanceTrack())return;let difference=false;for(const propertyTrack of this._propertyTracks){const diff=propertyTrack.CompareSaveStateWithCurrent();if(!difference&&diff)difference=true}if(difference){const keyframeDataItem=this.AddKeyframe();keyframeDataItem.SetTime(this.GetTimeline().GetTime());
keyframeDataItem.SetEase("noease");keyframeDataItem.SetEnable(true);keyframeDataItem.SetTags("")}}_SaveToJson(){const instance=this.GetInstance();const uid=instance?instance.GetUID():this.GetInstanceUID();return{"propertyTracksJson":this._SavePropertyTracksToJson(),"lastKeyframeDataItemJson":this._SaveLastKeyframeDataItemToJson(),"initialStateOfNestedSet":this._initialStateOfNestedSet,"endStateOfNestedSet":this._endStateOfNestedSet,"instanceUid":uid}}_LoadFromJson(o){if(!o)return;this._LoadPropertyTracksFromJson(o["propertyTracksJson"]);
this._LoadLastKeyframeDataItemFromJson(o["lastKeyframeDataItemJson"]);this._LoadInstanceFromJson(o["instanceUid"]);this._initialStateOfNestedSet=false;if(o.hasOwnProperty["initialStateOfNestedSet"])this._initialStateOfNestedSet=o["initialStateOfNestedSet"];this._endStateOfNestedSet=false;if(o.hasOwnProperty["endStateOfNestedSet"])this._endStateOfNestedSet=o["endStateOfNestedSet"]}_SaveLastKeyframeDataItemToJson(){const keyframeData=this._trackDataItem.GetKeyframeData();return keyframeData.GetKeyframeDataItemIndex(this._lastKeyframeDataItem)}_SavePropertyTracksToJson(){return this._propertyTracks.map(propertyTrackState=>
propertyTrackState._SaveToJson())}_LoadPropertyTracksFromJson(propertyTracksJson){propertyTracksJson.forEach((propertyTrackJson,i)=>{const propertyTrack=this._propertyTracks[i];propertyTrack._LoadFromJson(propertyTrackJson)})}_LoadInstanceFromJson(uid){if(!C3.IsFiniteNumber(uid))return;const instance=this.GetRuntime().GetInstanceByUID(uid);if(!instance)return;const timeline=this.GetTimeline();timeline.ClearTrackInstances();timeline.SetTrackInstance(this._trackDataItem.GetId(),instance)}_LoadLastKeyframeDataItemFromJson(lastKeyframeDataItemIndex){const keyframeData=
this._trackDataItem.GetKeyframeData();this._lastKeyframeDataItem=keyframeData.GetKeyframeDataItemFromIndex(lastKeyframeDataItemIndex)}};

}

// timelines/state/propertyTrackState.js
{
'use strict';const C3=self.C3;
C3.PropertyTrackState=class PropertyTrack extends C3.DefendedBase{constructor(track,propertyTrackDataItem){super();this._track=track;this._propertyTrackDataItem=propertyTrackDataItem;this._propertyTrackData=propertyTrackDataItem.GetPropertyTrackData();this._sourceAdapter=this.GetSourceAdapter();this._propertyKeyframeDataItems=this._propertyTrackDataItem.GetPropertyKeyframeData().GetPropertyKeyframeDataItemArray()}static Create(track,propertyTrackDataItem){return C3.New(C3.PropertyTrackState,track,
propertyTrackDataItem)}Release(){this._track=null;if(this._sourceAdapter){this._sourceAdapter.Release();this._sourceAdapter=null}this._propertyKeyframeDataItems=null;this._propertyTrackDataItem=null;this._propertyTrackData=null}GetTrack(){return this._track}GetPropertyTrackDataItem(){return this._propertyTrackDataItem}GetPropertyTrackData(){return this._propertyTrackData}GetTimeline(){return this._track.GetTimeline()}GetRuntime(){return this._track.GetRuntime()}GetInstance(){return this._track.GetInstance()}GetSourceAdapter(){if(this._sourceAdapter)return this._sourceAdapter;
const id=this._propertyTrackDataItem.GetSourceAdapterId();let ret;switch(id){case "behavior":ret=new C3.PropertyTrackState.BehaviorSourceAdapter(this);break;case "effect":ret=new C3.PropertyTrackState.EffectSourceAdapter(this);break;case "instance-variable":ret=new C3.PropertyTrackState.InstanceVariableSourceAdapter(this);break;case "plugin":ret=new C3.PropertyTrackState.PluginSourceAdapter(this);break;case "world-instance":ret=new C3.PropertyTrackState.WorldInstanceSourceAdapter(this);break;case "value":ret=
new C3.PropertyTrackState.ValueSourceAdapter(this);break}this._sourceAdapter=ret;return this._sourceAdapter}GetSourceAdapterId(){return this._propertyTrackDataItem.GetSourceAdapterId()}SetSourceAdapterId(said){this._propertyTrackDataItem.SetSourceAdapterId(said)}GetSourceAdapterArgs(){return this._propertyTrackDataItem.GetSourceAdapterArguments()}SetSourceAdapterArgs(sargs){this._propertyTrackDataItem.SetSourceAdapterArguments(sargs)}GetSourceAdapterValue(){return this.GetSourceAdapter().GetValue()}GetPropertyName(){return this._propertyTrackDataItem.GetProperty()}SetPropertyName(pn){this._propertyTrackDataItem.SetProperty(pn)}GetPropertyType(){return this._propertyTrackDataItem.GetType()}SetPropertyType(pt){this._propertyTrackDataItem.SetType(pt)}GetPropertyKeyframeType(){return this.GetPropertyTrackData().GetFirstPropertyKeyframeDataItem(this._propertyTrackDataItem).GetType()}GetMin(){return this._propertyTrackDataItem.GetMin()}SetMin(min){this._propertyTrackDataItem.SetMin(min)}GetMax(){return this._propertyTrackDataItem.GetMax()}SetMax(max){this._propertyTrackDataItem.SetMax(max)}GetEnable(){return this._propertyTrackDataItem.GetEnable()}SetEnable(e){this._propertyTrackDataItem.SetEnable(e)}GetInterpolationMode(){return this._propertyTrackDataItem.GetInterpolationMode()}SetInterpolationMode(im){this._propertyTrackDataItem.SetInterpolationMode(im)}GetResultMode(){return this._propertyTrackDataItem.GetResultMode()}SetResultMode(rm){this._propertyTrackDataItem.SetResultMode(rm)}SetEase(e){for(const propertyKeyframeDataItem of this.GetPropertyKeyframeDataItems())propertyKeyframeDataItem.SetEase(e)}GetPropertyKeyframeDataItems(){if(this._propertyKeyframeDataItems)return this._propertyKeyframeDataItems;
this._propertyKeyframeDataItems=this._propertyTrackDataItem.GetPropertyKeyframeData().GetPropertyKeyframeDataItemArray();return this._propertyKeyframeDataItems}*GetPropertyKeyframeValues(){for(const propertyKeyframeDataItem of this.GetPropertyKeyframeDataItems())yield propertyKeyframeDataItem.GetValueWithResultMode()}CleanCaches(){this.GetSourceAdapter().CleanCaches()}GetCurrentState(){return this.GetSourceAdapter().GetCurrentState()}SetInitialState(){this.GetSourceAdapter().SetInitialState()}SetResumeState(){this.GetSourceAdapter().SetResumeState()}BeforeInterpolate(){this.GetSourceAdapter().BeforeInterpolate()}Interpolate(time,
setTime=false,noChange=false,ensureValue=false){const propertyTrackDataItem=this._propertyTrackDataItem;let start=this._propertyTrackData.GetPropertyKeyFrameDataItemAtTime(time,propertyTrackDataItem);let end;if(start)end=this._propertyTrackData.GetFirstPropertyKeyFrameDataItemHigherThan(time,propertyTrackDataItem);else{start=this._propertyTrackData.GetFirstPropertyKeyFrameDataItemLowerOrEqualThan(time,propertyTrackDataItem);end=this._propertyTrackData.GetFirstPropertyKeyFrameDataItemHigherOrEqualThan(time,
propertyTrackDataItem)}return this.GetSourceAdapter().Interpolate(time,start,end,setTime,noChange,ensureValue)}AfterInterpolate(){this.GetSourceAdapter().AfterInterpolate()}static GetStartPropertyKeyframeForTime(time,propertyTrack){const propertyTrackDataItem=propertyTrack.GetPropertyTrackDataItem();const propertyTrackData=propertyTrack._propertyTrackData;let start=propertyTrackData.GetPropertyKeyFrameDataItemAtTime(time,propertyTrackDataItem);if(!start)start=propertyTrackData.GetFirstPropertyKeyFrameDataItemLowerOrEqualThan(time,
propertyTrackDataItem);return start}static GetEndPropertyKeyframeForTime(time,propertyTrack){const propertyTrackDataItem=propertyTrack.GetPropertyTrackDataItem();const propertyTrackData=propertyTrack._propertyTrackData;let end=propertyTrackData.GetPropertyKeyFrameDataItemAtTime(time,propertyTrackDataItem);if(end)return propertyTrackData.GetFirstPropertyKeyFrameDataItemHigherThan(time,propertyTrackDataItem);else return propertyTrackData.GetFirstPropertyKeyFrameDataItemHigherOrEqualThan(time,propertyTrackDataItem)}AddPropertyKeyframe(){const propertyKeyframeData=
this._propertyTrackDataItem.GetPropertyKeyframeData();const propertyKeyframeDataItem=propertyKeyframeData.AddEmptyPropertyKeyframeDataItem();return propertyKeyframeDataItem}DeletePropertyKeyframes(match){const propertyKeyframeData=this._propertyTrackDataItem.GetPropertyKeyframeData();propertyKeyframeData.DeletePropertyKeyframeDataItems(match)}SaveState(){this.GetSourceAdapter().SaveState()}CompareInitialStateWithCurrent(){const difference=this.GetSourceAdapter().CompareInitialStateWithCurrent();if(difference){const propertyKeyframeDataItem=
this._propertyTrackData.GetFirstPropertyKeyframeDataItem(this._propertyTrackDataItem);const currentState=this.GetSourceAdapter().GetCurrentState();propertyKeyframeDataItem.SetAbsoluteValue(currentState)}}CompareSaveStateWithCurrent(){const difference=this.GetSourceAdapter().CompareSaveStateWithCurrent();if(difference)this.AddPropertyKeyframeAtCurrentTime();this.GetSourceAdapter().ClearSaveState();return difference}AddPropertyKeyframeAtCurrentTime(){const time=this.GetTimeline().GetTime();const sourceAdapter=
this.GetSourceAdapter();const startPropertyKeyframe=C3.PropertyTrackState.GetStartPropertyKeyframeForTime(time,this);const propertyKeyframeDataItem=this.AddPropertyKeyframe();propertyKeyframeDataItem.SetType(startPropertyKeyframe.GetType());propertyKeyframeDataItem.SetTime(time);propertyKeyframeDataItem.SetEase(startPropertyKeyframe.GetEase());propertyKeyframeDataItem.SetEnable(true);propertyKeyframeDataItem.SetValue(sourceAdapter.GetValueAtTime());propertyKeyframeDataItem.SetAbsoluteValue(sourceAdapter.GetCurrentState())}_SaveToJson(){return{"sourceAdapterJson":this.GetSourceAdapter()._SaveToJson()}}_LoadFromJson(o){if(!o)return;
this.GetSourceAdapter()._LoadFromJson(o["sourceAdapterJson"])}};

}

// timelines/state/propertySourceAdapters/propertySourceAdapter.js
{
'use strict';const C3=self.C3;const NS=C3.PropertyTrackState;
NS.PropertySourceAdapter=class PropertySourceAdapter{constructor(propertyTrack){this._propertyTrack=propertyTrack;this._propertyAdapter=null}Release(){if(this._propertyAdapter){this._propertyAdapter.Release();this._propertyAdapter=null}this._propertyTrack=null}GetPropertyTrack(){return this._propertyTrack}CleanCaches(){if(this._propertyAdapter)this._propertyAdapter.CleanCaches()}GetPropertyAdapter(){if(this._propertyAdapter)return this._propertyAdapter;this._propertyAdapter=this._CreatePropertyAdapter();
return this._propertyAdapter}GetEditorIndex(){}GetIndex(){return this.GetEditorIndex()}GetTarget(){}SetInitialState(){this.GetPropertyAdapter().SetInitialState()}SetResumeState(){this.GetPropertyAdapter().SetResumeState()}BeforeInterpolate(){this.GetPropertyAdapter().BeforeChangeProperty()}Interpolate(time,start,end,setTime,noChange,ensureValue){const interpolateFunc=NS.PropertySourceAdapter.GetInterpolateFunc(this._propertyTrack);const value=interpolateFunc(time,start,end,this._propertyTrack);if(noChange)return value;
return this.GetPropertyAdapter().ChangeProperty(time,value,start,end,setTime,ensureValue)}AfterInterpolate(){this.GetPropertyAdapter().AfterChangeProperty()}SaveState(){this.GetPropertyAdapter().SetSaveState()}ClearSaveState(){this.GetPropertyAdapter().ClearSaveState()}GetCurrentState(){return this.GetPropertyAdapter().GetCurrentState()}CompareInitialStateWithCurrent(){return this.GetPropertyAdapter().CompareInitialStateWithCurrent()}CompareSaveStateWithCurrent(){return this.GetPropertyAdapter().CompareSaveStateWithCurrent()}GetValueAtTime(){return NS.PropertySourceAdapter.GetValueAtTime(this._propertyTrack)}_CreatePropertyAdapter(){const propertyType=
this._propertyTrack.GetPropertyType();const keyframePropertyType=this._propertyTrack.GetPropertyKeyframeType();switch(keyframePropertyType){case "combo":case "boolean":case "text":case "string":{return new NS.PropertyInterpolationAdapter.NoInterpolationAdapter(this)}case "numeric":case "number":case "angle":{if(propertyType==="combo")return new NS.PropertyInterpolationAdapter.NoInterpolationAdapter(this);return new NS.PropertyInterpolationAdapter.NumericInterpolationAdapter(this)}case "color":case "offsetColor":{return new NS.PropertyInterpolationAdapter.ColorInterpolationAdapter(this)}}}_SaveToJson(){return{"propertyAdapterJson":this.GetPropertyAdapter()._SaveToJson()}}_LoadFromJson(o){if(!o)return;
this.GetPropertyAdapter()._LoadFromJson(o["propertyAdapterJson"])}static GetValueAtTime(propertyTrack){const track=propertyTrack.GetTrack();const time=track.GetTimeline().GetTime();const start=NS.GetStartPropertyKeyframeForTime(time,propertyTrack);const end=NS.GetEndPropertyKeyframeForTime(time,propertyTrack);const interpolateFunc=NS.PropertySourceAdapter.GetInterpolateFunc(propertyTrack);return interpolateFunc(time,start,end,propertyTrack)}static GetValue(propertyTrack,initialValue,value){let resultMode=
propertyTrack.GetResultMode();if(propertyTrack.GetPropertyType()==="combo")resultMode="absolute";switch(resultMode){case "relative":return initialValue+value;case "absolute":return value}}static GetInterpolateFunc(propertyTrack){const type=propertyTrack.GetPropertyKeyframeType();switch(type){case "numeric":return NS.NumericTypeAdapter.Interpolate;case "angle":return NS.AngleTypeAdapter.Interpolate;case "boolean":return NS.BooleanTypeAdapter.Interpolate;case "color":return NS.ColorTypeAdapter.Interpolate;
case "text":return NS.TextTypeAdapter.Interpolate}}static GetWillChangeFunc(propertyTrack){const type=propertyTrack.GetPropertyKeyframeType();switch(type){case "numeric":return NS.NumericTypeAdapter.WillChange;case "angle":return NS.AngleTypeAdapter.WillChange;case "boolean":return NS.BooleanTypeAdapter.WillChange;case "color":return NS.ColorTypeAdapter.WillChange;case "text":return NS.TextTypeAdapter.WillChange}}};

}

// timelines/state/propertySourceAdapters/worldInstanceSourceAdapter.js
{
'use strict';const C3=self.C3;class WorldInstanceSourceAdapter extends C3.PropertyTrackState.PropertySourceAdapter{constructor(propertyTrack){super(propertyTrack)}}C3.PropertyTrackState.WorldInstanceSourceAdapter=WorldInstanceSourceAdapter;

}

// timelines/state/propertySourceAdapters/instanceVariableSourceAdapter.js
{
'use strict';const C3=self.C3;const INDEX=0;
class InstanceVariableSourceAdapter extends C3.PropertyTrackState.PropertySourceAdapter{constructor(propertyTrack){super(propertyTrack);this._updatedIndex=NaN}GetEditorIndex(){return this._propertyTrack.GetPropertyTrackDataItem().GetSourceAdapterArguments()[INDEX]}GetIndex(){if(this._updatedIndex)return this._updatedIndex;return super.GetIndex()}GetTarget(){return this._propertyTrack.GetTrack().GetInstance()}UpdateInstanceVariableIndex(index){const i=this._propertyTrack.GetPropertyTrackDataItem().GetSourceAdapterArguments()[INDEX];if(i===
index)return;this._updatedIndex=index}Interpolate(time,start,end,setTime,noChange,ensureValue){if(!this.GetPropertyAdapter().CanChange(start.GetValue()))return;return super.Interpolate(time,start,end,setTime,noChange,ensureValue)}_SaveToJson(){return Object.assign(super._SaveToJson(),{"index":this._updatedIndex})}_LoadFromJson(o){if(!o)return;super._LoadFromJson(o);this._updatedIndex=o["index"]}}C3.PropertyTrackState.InstanceVariableSourceAdapter=InstanceVariableSourceAdapter;

}

// timelines/state/propertySourceAdapters/behaviorSourceAdapter.js
{
'use strict';const C3=self.C3;const SID=0;const INDEX=1;const NAME=2;
class BehaviorSourceAdapter extends C3.PropertyTrackState.PropertySourceAdapter{constructor(propertyTrack){super(propertyTrack);this._sid=NaN}GetEditorIndex(){const dataItem=this._propertyTrack.GetPropertyTrackDataItem();return dataItem.GetSourceAdapterArguments()[INDEX]}GetTarget(){const dataItem=this._propertyTrack.GetPropertyTrackDataItem();const track=this._propertyTrack.GetTrack();const sid=this._sid?this._sid:dataItem.GetSourceAdapterArguments()[SID];const instance=track.GetInstance();const index=
instance.GetBehaviorIndexBySID(sid);const behaviorInstance=instance.GetBehaviorInstances()[index];return behaviorInstance.GetSdkInstance()}GetBehaviorType(objectClass){const dataItem=this._propertyTrack.GetPropertyTrackDataItem();const name=dataItem.GetSourceAdapterArguments()[NAME];return objectClass.GetBehaviorTypeByName(name)}UpdateBehaviorTypeSid(sid){const dataItem=this._propertyTrack.GetPropertyTrackDataItem();if(dataItem.GetSourceAdapterArguments()[SID]===sid)return;this._sid=sid}Interpolate(time,
start,end,setTime,noChange,ensureValue){const track=this._propertyTrack.GetTrack();const instance=track.GetInstance();if(!this.GetBehaviorType(instance.GetObjectClass()))return;return super.Interpolate(time,start,end,setTime,noChange,ensureValue)}_SaveToJson(){return Object.assign(super._SaveToJson(),{"sid":this._sid})}_LoadFromJson(o){if(!o)return;super._LoadFromJson(o);this._sid=o["sid"]}}C3.PropertyTrackState.BehaviorSourceAdapter=BehaviorSourceAdapter;

}

// timelines/state/propertySourceAdapters/effectSourceAdapter.js
{
'use strict';const C3=self.C3;const NAME=0;const INDEX=1;
class EffectSourceAdapter extends C3.PropertyTrackState.PropertySourceAdapter{constructor(propertyTrack){super(propertyTrack)}GetEditorIndex(){return this._propertyTrack.GetPropertyTrackDataItem().GetSourceAdapterArguments()[INDEX]}GetTarget(){const pTrack=this._propertyTrack;const track=pTrack.GetTrack();const worldInfo=track.GetWorldInfo();const instanceEffectList=worldInfo.GetInstanceEffectList();const effectList=instanceEffectList.GetEffectList();const effectType=this.GetEffectType(effectList);
const effectIndex=effectType.GetIndex();if(instanceEffectList.IsEffectIndexActive(effectIndex))return instanceEffectList.GetEffectParametersForIndex(effectIndex);return null}GetEffectType(effectList){const pTrack=this._propertyTrack;const name=pTrack.GetPropertyTrackDataItem().GetSourceAdapterArguments()[NAME];return effectList.GetEffectTypeByName(name)}Interpolate(time,start,end,setTime,noChange,ensureValue){if(!this._IsEffectActive())return;return super.Interpolate(time,start,end,setTime,noChange,
ensureValue)}_IsEffectActive(){const pTrack=this._propertyTrack;const track=pTrack.GetTrack();const worldInfo=track.GetWorldInfo();const instanceEffectList=worldInfo.GetInstanceEffectList();const effectList=instanceEffectList.GetEffectList();const effectType=this.GetEffectType(effectList);if(!effectType)return;const effectIndex=effectType.GetIndex();return instanceEffectList.IsEffectIndexActive(effectIndex)}}C3.PropertyTrackState.EffectSourceAdapter=EffectSourceAdapter;

}

// timelines/state/propertySourceAdapters/pluginSourceAdapter.js
{
'use strict';const C3=self.C3;const INDEX=0;
class PluginSourceAdapter extends C3.PropertyTrackState.PropertySourceAdapter{constructor(propertyTrack){super(propertyTrack)}GetEditorIndex(){return this._propertyTrack.GetPropertyTrackDataItem().GetSourceAdapterArguments()[INDEX]}GetTarget(){return this._propertyTrack.GetTrack().GetInstance().GetSdkInstance()}Interpolate(time,start,end,setTime,noChange,ensureValue){const track=this._propertyTrack.GetTrack();const templatePlugin=track.GetObjectClass().GetPlugin();const currentPlugin=track.GetInstance().GetObjectClass().GetPlugin();
if(templatePlugin!==currentPlugin)return;return super.Interpolate(time,start,end,setTime,noChange,ensureValue)}}C3.PropertyTrackState.PluginSourceAdapter=PluginSourceAdapter;

}

// timelines/state/propertySourceAdapters/valueSourceAdapter.js
{
'use strict';const C3=self.C3;
class ValueSourceAdapter extends C3.PropertyTrackState.PropertySourceAdapter{constructor(propertyTrack){super(propertyTrack);this._value=0;this._init=false}SetInitialState(){const propertyTrackData=this._propertyTrack.GetPropertyTrackData();let propertyTrackDataItem=this._propertyTrack.GetPropertyTrackDataItem();propertyTrackDataItem=propertyTrackData.GetFirstPropertyKeyframeDataItem(propertyTrackDataItem);this._value=propertyTrackDataItem.GetValueWithResultMode()}SetResumeState(){}GetValue(){if(!this._init)this._propertyTrack.Interpolate(0);return this._value}Interpolate(time,
start,end,setTime,noChange,ensureValue){const interpolateFunc=C3.PropertyTrackState.NumericTypeAdapter.Interpolate;this._value=interpolateFunc(time,start,end,this._propertyTrack);this._init=true}SaveState(){}ClearSaveState(){}GetCurrentState(){return this._value}CompareInitialStateWithCurrent(){return false}CompareSaveStateWithCurrent(){return false}_SaveToJson(){return{"value":this._value,"init":this._init}}_LoadFromJson(o){if(!o)return;this._value=o["value"];this._init=o.hasOwnProperty("init")?
o["init"]:true}}C3.PropertyTrackState.ValueSourceAdapter=ValueSourceAdapter;

}

// timelines/state/propertyInterpolationAdapters/propertyInterpolationAdapter.js
{
'use strict';const C3=self.C3;
C3.PropertyTrackState.PropertyInterpolationAdapter=class PropertyInterpolationAdapter{constructor(sourceAdapter){this._sourceAdapter=sourceAdapter;this._propertyTrack=sourceAdapter.GetPropertyTrack();this._worldInfo=this._propertyTrack.GetTrack().GetWorldInfo();this._property=this._propertyTrack.GetPropertyName();this._firstAbsoluteUpdate=false;this._saveState=null;this._target=null}Release(){this._sourceAdapter=null;this._propertyTrack=null;this._worldInfo=null;this._saveState=null;this._target=
null}CleanCaches(){this._worldInfo=null;this._saveState=null;this._target=null}GetPropertyTrack(){return this._propertyTrack}GetWorldInfo(){if(this._worldInfo)return this._worldInfo;this._worldInfo=this._propertyTrack.GetTrack().GetWorldInfo();return this._worldInfo}SetFirstAbsoluteUpdate(f){this._firstAbsoluteUpdate=!!f}GetFirstAbsoluteUpdate(){return this._firstAbsoluteUpdate}SetInitialState(){}SetResumeState(){}SetSaveState(){this._saveState=this.GetCurrentState()}ClearSaveState(){this._saveState=
null}GetCurrentState(){}CompareInitialStateWithCurrent(){}CompareSaveStateWithCurrent(){}CanChange(value){const targetType=typeof this._Getter();const newType=typeof value;return targetType===newType}BeforeChangeProperty(){}ChangeProperty(time,value,start,end,setTime){}AfterChangeProperty(){}_FirstKeyframeGetter(){const propertyKeyframeDataItem=this._PickTimelinePlaybackMode(()=>{const propertyTrackDataItem=this._propertyTrack.GetPropertyTrackDataItem();const propertyTrackData=this._propertyTrack.GetPropertyTrackData();
return propertyTrackData.GetFirstPropertyKeyframeDataItem(propertyTrackDataItem)},()=>{const propertyTrackDataItem=this._propertyTrack.GetPropertyTrackDataItem();const propertyTrackData=this._propertyTrack.GetPropertyTrackData();return propertyTrackData.GetLastPropertyKeyframeDataItem(propertyTrackDataItem)});return propertyKeyframeDataItem.GetAbsoluteValue()}_CurrentKeyframeGetter(){const timeline=this._propertyTrack.GetTimeline();const time=timeline.GetTime()-this._propertyTrack.GetTrack().GetStartOffset();
const propertyKeyframe=this._PickTimelinePlaybackMode(()=>{const propertyTrackDataItem=this._propertyTrack.GetPropertyTrackDataItem();const propertyTrackData=this._propertyTrack.GetPropertyTrackData();return propertyTrackData.GetFirstPropertyKeyFrameDataItemLowerOrEqualThan(time,propertyTrackDataItem)},()=>{const propertyTrackDataItem=this._propertyTrack.GetPropertyTrackDataItem();const propertyTrackData=this._propertyTrack.GetPropertyTrackData();const ret=propertyTrackData.GetFirstPropertyKeyFrameDataItemHigherOrEqualThan(time,
propertyTrackDataItem);if(!ret)return propertyTrackData.GetLastPropertyKeyframeDataItem(propertyTrackDataItem);return ret});return propertyKeyframe.GetAbsoluteValue()}_PickTimelinePlaybackMode(forwardFunc,backwardFunc){const timeline=this._propertyTrack.GetTimeline();return timeline.IsForwardPlayBack()?forwardFunc():backwardFunc()}_PickResultMode(relativeFunc,absoluteFunc){const resultMode=this._propertyTrack.GetResultMode();return resultMode==="relative"?relativeFunc():absoluteFunc()}_PickFirstAbsoluteUpdate(firstFunc,
otherFunc){if(this.GetFirstAbsoluteUpdate()){this.SetFirstAbsoluteUpdate(false);return firstFunc()}else return otherFunc()}_GetAbsoluteInitialValue(keyframeValue){}_GetIndex(){return this._sourceAdapter.GetIndex()}_GetTarget(){if(this._target)return this._target;this._target=this._sourceAdapter.GetTarget();return this._target}_PickSource(bFunc,eFunc,ivFunc,pFunc,wiFunc){const id=this._propertyTrack.GetSourceAdapterId();switch(id){case "behavior":return bFunc();case "effect":return eFunc();case "instance-variable":return ivFunc();
case "plugin":return pFunc();case "world-instance":return wiFunc()}}_SaveToJson(){return{"firstAbsoluteUpdate":this._firstAbsoluteUpdate,"saveState":this._saveState}}_LoadFromJson(o){if(!o)return;this._firstAbsoluteUpdate=o["firstAbsoluteUpdate"];this._saveState=o["saveState"]}_GetPropertyKeyframeStubs(propertyTracks,firstOnly=false){const ret=[];for(const propertyTrack of propertyTracks){const startOffset=propertyTrack.GetTrack().GetStartOffset();for(const propertyKeyframeDataItem of propertyTrack.GetPropertyKeyframeDataItems())if(firstOnly&&
propertyKeyframeDataItem.GetTime()===0)ret.push({time:startOffset+propertyKeyframeDataItem.GetTime(),value:propertyKeyframeDataItem.GetAbsoluteValue()});else if(!firstOnly)ret.push({time:startOffset+propertyKeyframeDataItem.GetTime(),value:propertyKeyframeDataItem.GetAbsoluteValue()})}return ret.sort((f,s)=>f.time-s.time)}_GetLastPropertyKeyframeStub(timeline,time,propertyKeyframeStubs){return this._GetPropertyKeyframeStubLowerThanPlayhead(time,propertyKeyframeStubs)}_GetPropertyKeyframeStubLowerThanPlayhead(time,
propertyKeyframeStubs){for(let i=propertyKeyframeStubs.length-1;i>=0;i--){const stubTime=propertyKeyframeStubs[i].time;if(stubTime<=time)return propertyKeyframeStubs[i]}return null}};

}

// timelines/state/propertyInterpolationAdapters/colorInterpolationAdapter.js
{
'use strict';const C3=self.C3;const TMP_COLORS_MAP=new Map;const TMP_COLOR=[0,0,0];
class ColorInterpolationAdapter extends C3.PropertyTrackState.PropertyInterpolationAdapter{constructor(sourceAdapter){super(sourceAdapter)}SetInitialState(){}SetResumeState(){}GetCurrentState(){const id=this._propertyTrack.GetSourceAdapterId();const target=this._GetTarget();const index=this._GetIndex();switch(id){case "behavior":return this._ToColorArray(target.GetPropertyValueByIndex(index));case "effect":return this._ToColorArray(target[index]);case "plugin":return this._ToColorArray(target.GetPropertyValueByIndex(index));
case "world-instance":return this._ToColorArray(this._Getter())}}CompareInitialStateWithCurrent(){const firstKeyframeColor=this._FirstKeyframeGetter();return!this._CompareColors(firstKeyframeColor,this._Getter())}CompareSaveStateWithCurrent(){if(C3.IsNullOrUndefined(this._saveState))return false;return!this._CompareColors(this._saveState,this._Getter())}_CompareColors(fColor,sColor){return fColor.equalsIgnoringAlpha(sColor)}_FirstKeyframeGetter(){const color=super._FirstKeyframeGetter();return this._GetColorFromArray(color)}_CurrentKeyframeGetter(){const color=
super._CurrentKeyframeGetter();return this._GetColorFromArray(color)}_GetAbsoluteInitialValue(value){}_ToColorArray(color){if(C3.IsInstanceOf(color,C3.Color))return color.toArray().slice(0,3);return color.slice(0,3)}_GetColorFromArray(color){if(C3.IsInstanceOf(color,C3.Color))return color;return new C3.Color(color[0],color[1],color[2],1)}CanChange(value){return true}BeforeChangeProperty(){const instance=this._propertyTrack.GetInstance();if(!TMP_COLORS_MAP.has(instance))TMP_COLORS_MAP.set(instance,
new Map);const instanceMap=TMP_COLORS_MAP.get(instance);const id=this._propertyTrack.GetSourceAdapterId();if(!instanceMap.has(id))instanceMap.set(id,new Map);const sourceMap=instanceMap.get(id);if(!sourceMap.has(this._property))sourceMap.set(this._property,{used:false,color:new C3.Color(0,0,0,1)})}_GetTmpColor(instance,sourceId,propertyName){const tmpColorObj=TMP_COLORS_MAP.get(instance).get(sourceId).get(propertyName);tmpColorObj.used=true;return tmpColorObj.color}ChangeProperty(time,value,start,
end,setTime){const timeline=this._propertyTrack.GetTimeline();const track=this._propertyTrack.GetTrack();const instance=this._propertyTrack.GetInstance();const sourceAdapter=this._propertyTrack.GetSourceAdapter();const sourceAdapterId=this._propertyTrack.GetSourceAdapterId();const property=this._property;const propertyTracks=timeline.GetSimilarPropertyTracks(instance,sourceAdapter,property);if(propertyTracks.length>1){const propertyKeyframeStubs=this._GetPropertyKeyframeStubs(propertyTracks,true);
const stub=this._GetLastPropertyKeyframeStub(timeline,timeline.GetTime(),propertyKeyframeStubs);if(stub){const startOffset=track.GetStartOffset();const t=stub.time-startOffset;if(t===0)this._GetTmpColor(instance,sourceAdapterId,this._property).addRgb(value[0],value[1],value[2]);else{if(t<0)return;const r=value[0];const g=value[1];const b=value[2];const v=this._propertyTrack.Interpolate(t,false,true);const dr=C3.Color.DiffChannel(r,v[0]);const dg=C3.Color.DiffChannel(g,v[1]);const db=C3.Color.DiffChannel(b,
v[2]);this._GetTmpColor(instance,sourceAdapterId,this._property).addRgb(dr,dg,db)}}}else this._Setter(value[0],value[1],value[2]);return C3.TimelineState.LAYOUT_RENDER_CHANGE}AfterChangeProperty(){const instance=this._propertyTrack.GetInstance();if(!TMP_COLORS_MAP.has(instance))return;const instanceMap=TMP_COLORS_MAP.get(instance);const id=this._propertyTrack.GetSourceAdapterId();if(!instanceMap.has(id))return;const sourceMap=instanceMap.get(id);if(!sourceMap.has(this._property))return;const tmpColorObj=
sourceMap.get(this._property);const used=tmpColorObj.used;const color=tmpColorObj.color;if(used)this._Setter(color.getR(),color.getG(),color.getB());if(sourceMap.size===0)instanceMap.delete(id);if(instanceMap.size===0)TMP_COLORS_MAP.delete(instance)}_Getter(){const id=this._propertyTrack.GetSourceAdapterId();const target=this._GetTarget();const index=this._GetIndex();switch(id){case "behavior":return this._GetColorFromArray(target.GetPropertyValueByIndex(index));case "effect":return target[index].clone();
case "plugin":return this._GetColorFromArray(target.GetPropertyValueByIndex(index));case "world-instance":return this.GetWorldInfo().GetUnpremultipliedColor().clone()}}_Setter(r,g,b){const id=this._propertyTrack.GetSourceAdapterId();const target=this._GetTarget();const index=this._GetIndex();switch(id){case "behavior":TMP_COLOR[0]=r;TMP_COLOR[1]=g;TMP_COLOR[2]=b;target.SetPropertyValueByIndex(index,TMP_COLOR);break;case "effect":target[index].setRgb(r,g,b);break;case "plugin":TMP_COLOR[0]=r;TMP_COLOR[1]=
g;TMP_COLOR[2]=b;target.SetPropertyValueByIndex(index,TMP_COLOR);break;case "world-instance":this.GetWorldInfo().SetUnpremultipliedColorRGB(r,g,b);break}}_SaveToJson(){}_LoadFromJson(o){}}C3.PropertyTrackState.PropertyInterpolationAdapter.ColorInterpolationAdapter=ColorInterpolationAdapter;

}

// timelines/state/propertyInterpolationAdapters/noInterpolationAdapter.js
{
'use strict';const C3=self.C3;
class NoInterpolationAdapter extends C3.PropertyTrackState.PropertyInterpolationAdapter{constructor(sourceAdapter){super(sourceAdapter)}SetInitialState(){}SetResumeState(){}GetCurrentState(){return this._Getter()}CompareInitialStateWithCurrent(){const firstKeyframeValue=this._FirstKeyframeGetter();return firstKeyframeValue!==this.GetCurrentState()}CompareSaveStateWithCurrent(){if(C3.IsNullOrUndefined(this._saveState))return false;return this._saveState!==this.GetCurrentState()}ChangeProperty(time,value,
start,end,setTime){const willChangeFunc=C3.PropertyTrackState.PropertySourceAdapter.GetWillChangeFunc(this._propertyTrack);const propertyTrack=this._propertyTrack;const track=propertyTrack.GetTrack();const id=propertyTrack.GetSourceAdapterId();const timeline=propertyTrack.GetTimeline();const instance=track.GetInstance();const sourceAdapter=propertyTrack.GetSourceAdapter();const property=this._property;const propertyTracks=timeline.GetSimilarPropertyTracks(instance,sourceAdapter,property);if(propertyTracks.length>
1){const propertyKeyframeStubs=this._GetPropertyKeyframeStubs(propertyTracks);const t=time+track.GetStartOffset();const stub=this._GetLastPropertyKeyframeStub(timeline,t,propertyKeyframeStubs);if(stub)value=stub.value}const change=willChangeFunc(this._GetIndex(),this._GetTarget(),value,id);if(!change)return;this._Setter(value);switch(id){case "behavior":return;case "effect":return;case "instance-variable":return;case "plugin":return C3.TimelineState.LAYOUT_RENDER_CHANGE}}_Getter(){const id=this._propertyTrack.GetSourceAdapterId();
const target=this._GetTarget();const index=this._GetIndex();switch(id){case "behavior":return target.GetPropertyValueByIndex(index);case "effect":return target[index];case "instance-variable":return target.GetInstanceVariableValue(index);case "plugin":return target.GetPropertyValueByIndex(index)}}_Setter(value){const id=this._propertyTrack.GetSourceAdapterId();const target=this._GetTarget();const index=this._GetIndex();switch(id){case "behavior":target.SetPropertyValueByIndex(index,value);break;case "effect":target[index]=
value;break;case "instance-variable":target.SetInstanceVariableValue(index,value);break;case "plugin":target.SetPropertyValueByIndex(index,value);break}}}C3.PropertyTrackState.PropertyInterpolationAdapter.NoInterpolationAdapter=NoInterpolationAdapter;

}

// timelines/state/propertyInterpolationAdapters/numericInterpolationAdapter.js
{
'use strict';const C3=self.C3;const NS=C3.PropertyTrackState.PropertyInterpolationAdapter;const INSTANCE_FUNC_MAP=new Map;const add=(prop,setter,absolute_setter,getter,round)=>INSTANCE_FUNC_MAP.set(prop,{setter,absolute_setter,getter,round});add("offsetX",(wi,v)=>wi.OffsetX(v),(wi,v)=>wi.SetX(v),wi=>wi.GetX(),true);add("offsetY",(wi,v)=>wi.OffsetY(v),(wi,v)=>wi.SetY(v),wi=>wi.GetY(),true);add("offsetWidth",(wi,v)=>wi.OffsetWidth(v),(wi,v)=>wi.SetWidth(v),wi=>wi.GetWidth(),true);
add("offsetHeight",(wi,v)=>wi.OffsetHeight(v),(wi,v)=>wi.SetHeight(v),wi=>wi.GetHeight(),true);add("offsetAngle",(wi,v)=>wi.OffsetAngle(v),(wi,v)=>wi.SetAngle(v),wi=>wi.GetAngle(),false);
add("offsetOpacity",(wi,v,t,a)=>{const o=wi.GetOpacity();const nv=o+v;const min=0;const max=1;if(a._clampAccumulator===0){if(nv>max)a._clampAccumulator+=nv-max;else if(nv<min)a._clampAccumulator+=nv;wi.OffsetOpacity(v)}else{const nv=wi.GetOpacity()+v;if(v>0&&a._clampAccumulator>0){if(nv>max)a._clampAccumulator+=nv-max}else if(v>0&&a._clampAccumulator<0){a._clampAccumulator+=v;if(a._clampAccumulator>0)a._clampAccumulator=0}else if(v<0&&a._clampAccumulator>0){a._clampAccumulator+=v;if(a._clampAccumulator<
0)a._clampAccumulator=0}else if(v<0&&a._clampAccumulator<0)if(nv<min)a._clampAccumulator+=nv}},(wi,v)=>{wi.SetOpacity(v)},wi=>{return wi.GetOpacity()},false);add("offsetOriginX",(wi,v)=>wi.OffsetOriginX(v),(wi,v)=>wi.SetOriginX(v),wi=>wi.GetOriginX(),false);add("offsetOriginY",(wi,v)=>wi.OffsetOriginY(v),(wi,v)=>wi.SetOriginY(v),wi=>wi.GetOriginY(),false);add("offsetZElevation",(wi,v)=>wi.OffsetZElevation(v),(wi,v)=>wi.SetZElevation(v),wi=>wi.GetZElevation(),true);
add("offsetScaleX",(wi,v,t,a)=>{const mirrorFactor=wi.GetWidth()<0?-1:1;if(wi.GetTransformWithParentWidth())wi.OffsetWidth(t.GetOriginalWidth()*mirrorFactor*v);else wi.OffsetWidth(t.GetOriginalWidth()*mirrorFactor*v)},(wi,v,t)=>{wi.SetWidth(t.GetOriginalWidth()*v)},(wi,t)=>{const mirrorFactor=wi.GetWidth()<0?-1:1;if(wi.GetTransformWithParentWidth()){const parentWi=wi.GetParent();const parentTrack=t.GetTimeline().GetTrackFromInstance(parentWi.GetInstance());let parentScale=NaN;if(parentTrack)parentScale=
parentWi.GetWidth()/parentTrack.GetOriginalWidth();else{const sdki=parentWi.GetInstance().GetSdkInstance();if(sdki.IsOriginalSizeKnown())parentScale=parentWi.GetWidth()/sdki.GetOriginalWidth();else parentScale=1}return wi.GetWidth()*mirrorFactor/(t.GetOriginalWidth()*parentScale)}else return wi.GetWidth()*mirrorFactor/t.GetOriginalWidth()},false);
add("offsetScaleY",(wi,v,t,a)=>{const flipFactor=wi.GetHeight()<0?-1:1;if(wi.GetTransformWithParentHeight())wi.OffsetHeight(t.GetOriginalHeight()*flipFactor*v);else wi.OffsetHeight(t.GetOriginalHeight()*flipFactor*v)},(wi,v,t)=>{wi.SetHeight(t.GetOriginalHeight()*v)},(wi,t)=>{const flipFactor=wi.GetHeight()<0?-1:1;if(wi.GetTransformWithParentHeight()){const parentWi=wi.GetParent();const parentTrack=t.GetTimeline().GetTrackFromInstance(parentWi.GetInstance());let parentScale=NaN;if(parentTrack)parentScale=
parentWi.GetHeight()/parentTrack.GetOriginalHeight();else{const sdki=parentWi.GetInstance().GetSdkInstance();if(sdki.IsOriginalSizeKnown())parentScale=parentWi.GetHeight()/sdki.GetOriginalHeight();else parentScale=1}return wi.GetHeight()*flipFactor/(t.GetOriginalHeight()*parentScale)}else return wi.GetHeight()*flipFactor/t.GetOriginalHeight()},false);
class NumericInterpolationAdapter extends C3.PropertyTrackState.PropertyInterpolationAdapter{constructor(sourceAdapter){super(sourceAdapter);this._lastValue=0;this._clampAccumulator=0;this._instance_getter=null;this._instance_setter=null;this._instance_absolute_setter=null;this._round=false;if(C3.IsInstanceOf(this._propertyTrack.GetTimeline(),C3.Tween))this._typeAdapter=new C3.PropertyTrackState.PropertyInterpolationAdapter.NumericInterpolationAdapterForTween(this);else this._typeAdapter=new C3.PropertyTrackState.PropertyInterpolationAdapter.NumericInterpolationAdapterForTimeline(this);
const property=this._propertyTrack.GetPropertyName();if(this._propertyTrack.GetSourceAdapterId()==="world-instance"){const p=INSTANCE_FUNC_MAP.get(property);this._instance_getter=p.getter;this._instance_setter=p.setter;this._instance_absolute_setter=p.absolute_setter;this._round=p.round}}Release(){this._typeAdapter=null;this._instance_getter=null;this._instance_setter=null;this._instance_absolute_setter=null;super.Release()}GetLastValue(){return this._lastValue}SetLastValue(v){this._lastValue=v}SetInitialState(){const initValue=
this._typeAdapter.SetInitialState();if(typeof initValue==="number")this._lastValue=initValue;this._clampAccumulator=0}SetResumeState(){const resumeValue=this._typeAdapter.SetResumeState();if(typeof resumeValue==="number")this._lastValue=resumeValue}GetCurrentState(){return this._Getter()}CompareInitialStateWithCurrent(){const firstKeyframeValue=this._FirstKeyframeGetter();return firstKeyframeValue!==this.GetCurrentState()}CompareSaveStateWithCurrent(){if(C3.IsNullOrUndefined(this._saveState))return false;
return this._saveState!==this.GetCurrentState()}BeforeChangeProperty(){this._typeAdapter.BeforeChangeProperty()}ChangeProperty(time,value,start,end,setTime,ensureValue,normalizedValue){return this._typeAdapter.ChangeProperty(time,value,start,end,setTime,ensureValue,normalizedValue)}AfterChangeProperty(){this._typeAdapter.AfterChangeProperty()}_Getter(){const target=this._GetTarget();const index=this._GetIndex();const track=this._propertyTrack.GetTrack();const wi=this.GetWorldInfo();return this._PickSource(()=>
target.GetPropertyValueByIndex(index),()=>target[index],()=>target.GetInstanceVariableValue(index),()=>target.GetPropertyValueByIndex(index),()=>this._instance_getter(wi,track))}_Setter(value,start,end){const target=this._GetTarget();const index=this._GetIndex();const track=this._propertyTrack.GetTrack();const wi=this.GetWorldInfo();this._PickSource(()=>target.OffsetPropertyValueByIndex(index,value),()=>target[index]+=value,()=>target.SetInstanceVariableOffset(index,value),()=>target.OffsetPropertyValueByIndex(index,
value),()=>this._instance_setter(wi,value,track,this))}_SetterAbsolute(value,start,end){const target=this._GetTarget();const index=this._GetIndex();const track=this._propertyTrack.GetTrack();const wi=this.GetWorldInfo();this._PickSource(()=>target.SetPropertyValueByIndex(index,value),()=>target[index]=value,()=>target.SetInstanceVariableValue(index,value),()=>target.SetPropertyValueByIndex(index,value),()=>this._instance_absolute_setter(wi,value,track))}_MaybeEnsureValue(time,start,end,setTime,lastValue,
currentValue){this._typeAdapter._MaybeEnsureValue(time,start,end,setTime,lastValue,currentValue)}_AddDelta(value,start,end){const stringValue=value.toString();const decimalsString=stringValue.split(".")[1]||"";const decimalPlaces=decimalsString.length;const v=this._Getter();let rv;if(decimalPlaces===0)rv=this._round?Math.round(v):v;else rv=C3.toFixed(v,decimalPlaces);this._Setter(rv-v,start,end)}_SaveToJson(){return Object.assign(super._SaveToJson(),{"v":this._lastValue,"a":this._clampAccumulator})}_LoadFromJson(o){if(!o)return;
super._LoadFromJson(o);this._lastValue=o["v"];this._clampAccumulator=o["a"]}}C3.PropertyTrackState.PropertyInterpolationAdapter.NumericInterpolationAdapter=NumericInterpolationAdapter;

}

// timelines/state/propertyInterpolationAdapters/numericInterpolationAdapterForTimeline.js
{
'use strict';const C3=self.C3;const TMP_ABSOLUTE_VALUES_MAP=new Map;
class NumericInterpolationAdapterForTimeline{constructor(numericInterpolationAdapter){this._numericInterpolationAdapter=numericInterpolationAdapter}Release(){this._numericInterpolationAdapter=null}SetInitialState(){const adapter=this._numericInterpolationAdapter;const propertyTrack=this._numericInterpolationAdapter.GetPropertyTrack();return adapter._PickResultMode(()=>{return adapter._PickTimelinePlaybackMode(()=>0,()=>C3.PropertyTrackState.PropertySourceAdapter.GetValueAtTime(propertyTrack))},()=>
{})}SetResumeState(){}BeforeChangeProperty(){const adapter=this._numericInterpolationAdapter;const propertyTrack=this._numericInterpolationAdapter.GetPropertyTrack();const property=propertyTrack.GetPropertyName();adapter._PickResultMode(()=>{},()=>{const instance=propertyTrack.GetInstance();if(!TMP_ABSOLUTE_VALUES_MAP.has(instance))TMP_ABSOLUTE_VALUES_MAP.set(instance,new Map);const instanceMap=TMP_ABSOLUTE_VALUES_MAP.get(instance);const id=propertyTrack.GetSourceAdapterId();if(!instanceMap.has(id))instanceMap.set(id,
new Map);const sourceMap=instanceMap.get(id);if(!sourceMap.has(property))sourceMap.set(property,{used:false,value:0})})}_GetTmpAbsoluteValueObject(instance,sourceId,propertyName){const tmpAbsoluteValueObj=TMP_ABSOLUTE_VALUES_MAP.get(instance).get(sourceId).get(propertyName);tmpAbsoluteValueObj.used=true;return tmpAbsoluteValueObj}ChangeProperty(time,value,start,end,setTime,ensureValue){const adapter=this._numericInterpolationAdapter;const propertyTrack=this._numericInterpolationAdapter.GetPropertyTrack();
const property=propertyTrack.GetPropertyName();adapter._PickResultMode(()=>{const lastValue=adapter.GetLastValue();adapter._Setter(value-lastValue,start,end);if(ensureValue)this._MaybeEnsureValue(time,start,end,setTime,lastValue,value);adapter.SetLastValue(value)},()=>{const timeline=propertyTrack.GetTimeline();const track=propertyTrack.GetTrack();const instance=propertyTrack.GetInstance();const sourceAdapter=propertyTrack.GetSourceAdapter();const sourceAdapterId=propertyTrack.GetSourceAdapterId();
const propertyTracks=timeline.GetSimilarPropertyTracks(instance,sourceAdapter,property);if(propertyTracks.length>1){const propertyKeyframeStubs=adapter._GetPropertyKeyframeStubs(propertyTracks,true);const stub=adapter._GetLastPropertyKeyframeStub(timeline,timeline.GetTime(),propertyKeyframeStubs);if(stub){const startOffset=track.GetStartOffset();const t=stub.time-startOffset;if(t===0){const valueObj=this._GetTmpAbsoluteValueObject(instance,sourceAdapterId,property);valueObj.value+=value}else{if(t<
0)return;const v=propertyTrack.Interpolate(t,false,true);const valueObj=this._GetTmpAbsoluteValueObject(instance,sourceAdapterId,property);valueObj.value+=value-v}}}else adapter._SetterAbsolute(value)});return adapter._PickSource(()=>{},()=>C3.TimelineState.LAYOUT_RENDER_CHANGE,()=>{},()=>C3.TimelineState.LAYOUT_RENDER_CHANGE,()=>C3.TimelineState.LAYOUT_RENDER_CHANGE)}AfterChangeProperty(){const adapter=this._numericInterpolationAdapter;const propertyTrack=this._numericInterpolationAdapter.GetPropertyTrack();
const property=propertyTrack.GetPropertyName();adapter._PickResultMode(()=>{},()=>{const instance=propertyTrack.GetInstance();if(!TMP_ABSOLUTE_VALUES_MAP.has(instance))return;const instanceMap=TMP_ABSOLUTE_VALUES_MAP.get(instance);const id=propertyTrack.GetSourceAdapterId();if(!instanceMap.has(id))return;const sourceMap=instanceMap.get(id);if(!sourceMap.has(property))return;const tmpValueObj=sourceMap.get(property);const used=tmpValueObj.used;const value=tmpValueObj.value;if(used)adapter._SetterAbsolute(value);
sourceMap.delete(property);if(sourceMap.size===0)instanceMap.delete(id);if(instanceMap.size===0)TMP_ABSOLUTE_VALUES_MAP.delete(instance)})}_MaybeEnsureValue(time,start,end,setTime,lastValue,currentValue){const adapter=this._numericInterpolationAdapter;if(setTime)return;if(start&&time===start.GetTime())adapter._AddDelta(start.GetValueWithResultMode(),start,end);else if(end&&time===end.GetTime())adapter._AddDelta(end.GetValueWithResultMode(),start,end);else if(currentValue-lastValue===0)adapter._AddDelta(start.GetValueWithResultMode(),
start,end)}}C3.PropertyTrackState.PropertyInterpolationAdapter.NumericInterpolationAdapterForTimeline=NumericInterpolationAdapterForTimeline;

}

// timelines/state/propertyInterpolationAdapters/numericInterpolationAdapterForTween.js
{
'use strict';const C3=self.C3;const TMP_ABSOLUTE_VALUES_MAP=new Map;
class NumericInterpolationAdapterForTween{constructor(numericInterpolationAdapter){this._numericInterpolationAdapter=numericInterpolationAdapter}Release(){this._numericInterpolationAdapter=null}SetInitialState(){const adapter=this._numericInterpolationAdapter;adapter.SetFirstAbsoluteUpdate(true);return this._GetAbsoluteInitialValue(adapter._FirstKeyframeGetter())}SetResumeState(){const adapter=this._numericInterpolationAdapter;if(adapter._FirstKeyframeGetter()===adapter._CurrentKeyframeGetter())return;
adapter.SetFirstAbsoluteUpdate(true);return this._GetAbsoluteInitialValue(adapter._CurrentKeyframeGetter())}BeforeChangeProperty(){}ChangeProperty(time,value,start,end,setTime,ensureValue){const adapter=this._numericInterpolationAdapter;const lastValue=adapter.GetLastValue();adapter._PickResultMode(()=>{adapter._Setter(value-lastValue,start,end);if(ensureValue)this._MaybeEnsureValue(time,start,end,setTime,lastValue,value)},()=>{adapter._PickFirstAbsoluteUpdate(()=>{adapter._Setter(lastValue,start,
end)},()=>{adapter._Setter(value-lastValue,start,end);if(ensureValue)this._MaybeEnsureValue(time,start,end,setTime,lastValue,value)})});adapter.SetLastValue(value);return adapter._PickSource(()=>{},()=>C3.TimelineState.LAYOUT_RENDER_CHANGE,()=>{},()=>C3.TimelineState.LAYOUT_RENDER_CHANGE,()=>C3.TimelineState.LAYOUT_RENDER_CHANGE)}AfterChangeProperty(){}_GetAbsoluteInitialValue(keyframeValue){const adapter=this._numericInterpolationAdapter;return keyframeValue-adapter.GetCurrentState()}_MaybeEnsureValue(time,
start,end,setTime,lastValue,currentValue){const adapter=this._numericInterpolationAdapter;if(setTime)if(start&&time===start.GetTime())adapter._AddDelta(start.GetValueWithResultMode(),start,end);else if(end&&time===end.GetTime())adapter._AddDelta(end.GetValueWithResultMode(),start,end);else{if(!end)adapter._AddDelta(start.GetValueWithResultMode(),start,end)}else if(start&&time===start.GetTime())adapter._AddDelta(start.GetValueWithResultMode(),start,end);else if(end&&time===end.GetTime())adapter._AddDelta(end.GetValueWithResultMode(),
start,end);else if(currentValue-lastValue===0)adapter._AddDelta(start.GetValueWithResultMode(),start,end)}}C3.PropertyTrackState.PropertyInterpolationAdapter.NumericInterpolationAdapterForTween=NumericInterpolationAdapterForTween;

}

// timelines/state/propertyTypeAdapters/numericTypeAdapter.js
{
'use strict';const C3=self.C3;const Ease=self.Ease;
C3.PropertyTrackState.NumericTypeAdapter=class NumericTypeAdapter{constructor(){}static WillChange(index,source,newValue,type){let oldValue;switch(type){case "behavior":oldValue=source.GetPropertyValueByIndex(index);break;case "effect":oldValue=source[index];break;case "instance-variable":oldValue=source.GetInstanceVariableValue(index);break;case "plugin":oldValue=source.GetPropertyValueByIndex(index);break}if(oldValue===newValue)return false;return true}static Interpolate(time,start,end,propertyTrack){if(!end){let propertyTrackDataItem=
propertyTrack.GetPropertyTrackDataItem();const propertyTrackData=propertyTrack.GetPropertyTrackData();propertyTrackDataItem=propertyTrackData.GetLastPropertyKeyframeDataItem(propertyTrackDataItem);return propertyTrackDataItem.GetValueWithResultMode()}let mode=propertyTrack.GetInterpolationMode();if(mode==="default")mode="continuous";if(propertyTrack.GetPropertyType()==="combo")mode="discrete";if(mode==="discrete")return start.GetValueWithResultMode();else if(mode==="continuous"||mode==="step"){if(mode===
"step"){const step=propertyTrack.GetTimeline().GetStep();if(step!==0){const s=1/step;time=Math.floor(time*s)/s}}const st=start.GetTime();const et=end.GetTime();const sv=start.GetValueWithResultMode();const ev=end.GetValueWithResultMode();if(sv===ev)return sv;const n=C3.normalize(time,st,et);const e=start.GetEase();let ret;const startAddon=start.GetAddOn("cubic-bezier");const endAddon=end.GetAddOn("cubic-bezier");if(startAddon&&startAddon.GetStartEnable()&&endAddon&&endAddon.GetEndEnable()){const dt=
et-st;ret=Ease.GetRuntimeEase(e)(dt*n,0,1,dt);ret=Ease.GetRuntimeEase("cubicbezier")(ret,sv,sv+startAddon.GetStartAnchor(),ev+endAddon.GetEndAnchor(),ev)}else ret=Ease.GetRuntimeEase(e)((et-st)*n,sv,ev-sv,et-st);if(propertyTrack.GetPropertyType()==="integer")return Math.floor(ret);return ret}}};

}

// timelines/state/propertyTypeAdapters/angleTypeAdapter.js
{
'use strict';const C3=self.C3;
C3.PropertyTrackState.AngleTypeAdapter=class AngleTypeAdapter{constructor(){}static WillChange(index,source,newValue,type){let oldValue;switch(type){case "behavior":oldValue=source.GetPropertyValueByIndex(index);break;case "effect":oldValue=source[index];break;case "instance-variable":oldValue=source.GetInstanceVariableValue(index);break;case "plugin":oldValue=source.GetPropertyValueByIndex(index);break}if(oldValue===newValue)return false;return true}static Interpolate(time,start,end,propertyTrack){if(!end){let propertyTrackDataItem=
propertyTrack.GetPropertyTrackDataItem();const propertyTrackData=propertyTrack.GetPropertyTrackData();propertyTrackDataItem=propertyTrackData.GetLastPropertyKeyframeDataItem(propertyTrackDataItem);return propertyTrackDataItem.GetValueWithResultMode()}let mode=propertyTrack.GetInterpolationMode();if(mode==="default")mode="continuous";if(propertyTrack.GetPropertyType()==="combo")mode="discrete";if(mode==="discrete")return start.GetValueWithResultMode();else if(mode==="continuous"||mode==="step"){if(mode===
"step"){const step=propertyTrack.GetTimeline().GetStep();if(step!==0){const s=1/step;time=Math.floor(time*s)/s}}const st=start.GetTime();const et=end.GetTime();const sv=start.GetValueWithResultMode();const ev=end.GetValueWithResultMode();const angleAddon=start.GetAddOn("angle");if(angleAddon){const revolutions=angleAddon.GetRevolutions();if(sv===ev&&revolutions===0)return sv;const n=C3.normalize(time,st,et);const easeFunc=self.Ease.GetRuntimeEase(start.GetEase());const easeRes=easeFunc(n,0,1,1);switch(angleAddon.GetDirection()){case "closest":return C3.angleLerp(sv,
ev,easeRes,revolutions);case "clockwise":return C3.angleLerpClockwise(sv,ev,easeRes,revolutions);case "anti-clockwise":return C3.angleLerpAntiClockwise(sv,ev,easeRes,revolutions)}}else{if(sv===ev)return sv;const n=C3.normalize(time,st,et);const easeFunc=self.Ease.GetRuntimeEase(start.GetEase());return C3.angleLerp(sv,ev,easeFunc(n,0,1,1))}}}};

}

// timelines/state/propertyTypeAdapters/booleanTypeAdapter.js
{
'use strict';const C3=self.C3;
C3.PropertyTrackState.BooleanTypeAdapter=class BooleanTypeAdapter{constructor(){}static WillChange(index,source,newValue,type){let oldValue;switch(type){case "behavior":oldValue=source.GetPropertyValueByIndex(index);break;case "effect":oldValue=source[index];break;case "instance-variable":oldValue=source.GetInstanceVariableValue(index);break;case "plugin":oldValue=source.GetPropertyValueByIndex(index);break}if(!!oldValue===!!newValue)return false;return true}static Interpolate(time,start,end,propertyTrack){if(!end){let propertyTrackDataItem=
propertyTrack.GetPropertyTrackDataItem();const propertyTrackData=propertyTrack.GetPropertyTrackData();propertyTrackDataItem=propertyTrackData.GetLastPropertyKeyframeDataItem(propertyTrackDataItem);return propertyTrackDataItem.GetValueWithResultMode()?1:0}return start.GetValueWithResultMode()?1:0}};

}

// timelines/state/propertyTypeAdapters/colorTypeAdapter.js
{
'use strict';const C3=self.C3;const TEMP_COLOR_ARRAY=[0,0,0];const TEMP_COLOR_ARRAY_2=[0,0,0];const TEMP_COLOR_ARRAY_3=[0,0,0];
C3.PropertyTrackState.ColorTypeAdapter=class ColorTypeAdapter{constructor(){}static WillChange(index,source,newValue,type){let oldValue;switch(type){case "behavior":oldValue=source.GetPropertyValueByIndex(index);break;case "effect":oldValue=source[index];break;case "instance-variable":oldValue=source.GetInstanceVariableValue(index);break;case "plugin":oldValue=source.GetPropertyValueByIndex(index);break}if(Array.isArray(newValue)){TEMP_COLOR_ARRAY[0]=newValue[0];TEMP_COLOR_ARRAY[1]=newValue[1];TEMP_COLOR_ARRAY[2]=
newValue[2]}else{TEMP_COLOR_ARRAY_3.parseCommaSeparatedRgb(newValue);TEMP_COLOR_ARRAY[0]=Math.floor(TEMP_COLOR_ARRAY_3.getR()*255);TEMP_COLOR_ARRAY[1]=Math.floor(TEMP_COLOR_ARRAY_3.getG()*255);TEMP_COLOR_ARRAY[2]=Math.floor(TEMP_COLOR_ARRAY_3.getB()*255)}if(Array.isArray(oldValue)){TEMP_COLOR_ARRAY_2[0]=oldValue[0];TEMP_COLOR_ARRAY_2[1]=oldValue[1];TEMP_COLOR_ARRAY_2[2]=oldValue[2]}else{TEMP_COLOR_ARRAY_3.parseCommaSeparatedRgb(oldValue);TEMP_COLOR_ARRAY_2[0]=Math.floor(TEMP_COLOR_ARRAY_3.getR()*
255);TEMP_COLOR_ARRAY_2[1]=Math.floor(TEMP_COLOR_ARRAY_3.getG()*255);TEMP_COLOR_ARRAY_2[2]=Math.floor(TEMP_COLOR_ARRAY_3.getB()*255)}if(TEMP_COLOR_ARRAY[0]!==TEMP_COLOR_ARRAY_2[0])return true;if(TEMP_COLOR_ARRAY[1]!==TEMP_COLOR_ARRAY_2[1])return true;if(TEMP_COLOR_ARRAY[2]!==TEMP_COLOR_ARRAY_2[2])return true;return false}static Interpolate(time,start,end,propertyTrack){if(!end){let propertyTrackDataItem=propertyTrack.GetPropertyTrackDataItem();const propertyTrackData=propertyTrack.GetPropertyTrackData();
propertyTrackDataItem=propertyTrackData.GetLastPropertyKeyframeDataItem(propertyTrackDataItem);const color=propertyTrackDataItem.GetValueWithResultMode();TEMP_COLOR_ARRAY[0]=color[0];TEMP_COLOR_ARRAY[1]=color[1];TEMP_COLOR_ARRAY[2]=color[2];return TEMP_COLOR_ARRAY}let mode=propertyTrack.GetInterpolationMode();if(mode==="default")mode="continuous";if(mode==="discrete"){const color=start.GetValueWithResultMode();TEMP_COLOR_ARRAY[0]=color[0];TEMP_COLOR_ARRAY[1]=color[1];TEMP_COLOR_ARRAY[2]=color[2];
return TEMP_COLOR_ARRAY}else if(mode==="continuous"||mode==="step"){if(mode==="step"){const step=propertyTrack.GetTimeline().GetStep();if(step!==0){const s=1/step;time=Math.floor(time*s)/s}}const st=start.GetTime();const et=end.GetTime();const sv=start.GetValueWithResultMode();const ev=end.GetValueWithResultMode();const n=C3.normalize(time,st,et);const e=start.GetEase();const sr=sv[0];const sg=sv[1];const sb=sv[2];const er=ev[0];const eg=ev[1];const eb=ev[2];const easeFunc=self.Ease.GetRuntimeEase(e);
const d=et-st;const dn=d*n;if(sr===er)TEMP_COLOR_ARRAY[0]=sr;else TEMP_COLOR_ARRAY[0]=easeFunc(dn,sr,er-sr,d);if(sg===eg)TEMP_COLOR_ARRAY[1]=sg;else TEMP_COLOR_ARRAY[1]=easeFunc(dn,sg,eg-sg,d);if(sb===eb)TEMP_COLOR_ARRAY[2]=sb;else TEMP_COLOR_ARRAY[2]=easeFunc(dn,sb,eb-sb,d);return TEMP_COLOR_ARRAY}}};

}

// timelines/state/propertyTypeAdapters/textTypeAdapter.js
{
'use strict';const C3=self.C3;
C3.PropertyTrackState.TextTypeAdapter=class TextTypeAdapter{constructor(){}static WillChange(index,source,newValue,type){let oldValue;switch(type){case "behavior":oldValue=source.GetPropertyValueByIndex(index);break;case "effect":oldValue=source[index];break;case "instance-variable":oldValue=source.GetInstanceVariableValue(index);break;case "plugin":oldValue=source.GetPropertyValueByIndex(index);break}if(oldValue===newValue)return false;return true}static Interpolate(time,start,end,propertyTrack){if(!end){let propertyTrackDataItem=
propertyTrack.GetPropertyTrackDataItem();const propertyTrackData=propertyTrack.GetPropertyTrackData();propertyTrackDataItem=propertyTrackData.GetLastPropertyKeyframeDataItem(propertyTrackDataItem);return propertyTrackDataItem.GetValueWithResultMode()}return start.GetValueWithResultMode()}};

}

// timelines/data/timelineDataManager.js
{
'use strict';const C3=self.C3;
C3.TimelineDataManager=class TimelineDataManager{constructor(){this._timelineDataItems=new Map}Release(){for(const timelineDataItem of this._timelineDataItems.values())timelineDataItem.Release();this._timelineDataItems.clear();this._timelineDataItems=null}Add(data){const timelineDataItem=new C3.TimelineDataItem(data);const name=timelineDataItem.GetName();this._timelineDataItems.set(name,timelineDataItem)}Get(name){return this._timelineDataItems.get(name)}GetNameId(){return 0}static _CreateDataItems(items,jsonItems,
dataItemConstructor,dataContainer){if(!jsonItems)return;for(const jsonItem of jsonItems)C3.TimelineDataManager._CreateDataItem("create",jsonItem,items,dataItemConstructor,dataContainer)}static _LoadDataItemsFromJson(items,jsonItems,dataItemConstructor,dataContainer){if(items.length)jsonItems.forEach((jsonItem,index)=>{items[index]._LoadFromJson(jsonItem)});else jsonItems.forEach(jsonItem=>{C3.TimelineDataManager._CreateDataItem("load",jsonItem,items,dataItemConstructor,dataContainer)})}static _CreateDataItem(mode,
json,items,dataItemConstructor,dataContainer){let dataItem;if(typeof dataItemConstructor==="function")switch(mode){case "load":dataItem=new dataItemConstructor(null,dataContainer);break;case "create":dataItem=new dataItemConstructor(json,dataContainer);break}else if(typeof dataItemConstructor==="object"){const prop=dataItemConstructor.prop;const value=json[prop];const cnstrctr=dataItemConstructor.map.get(value);switch(mode){case "load":dataItem=new cnstrctr(null,dataContainer);break;case "create":dataItem=
new cnstrctr(json,dataContainer);break}}switch(mode){case "load":dataItem._LoadFromJson(json);items.push(dataItem);break;case "create":if(typeof dataItem.GetEnable==="function"&&!dataItem.GetEnable())return dataItem.Release();items.push(dataItem);break}}};

}

// timelines/data/timelineData.js
{
'use strict';const C3=self.C3;const NAME=0;const TOTAL_TIME=1;const STEP=2;const INTERPOLATION_MODE=3;const RESULT_MODE=4;const TRACKS=5;const LOOP=6;const PING_PONG=7;const REPEAT_COUNT=8;
C3.TimelineDataItem=class TimelineDataItem{constructor(timelineDataJson){this._name="";this._totalTime=NaN;this._step=0;this._interpolationMode="default";this._resultMode="default";this._loop=false;this._pingPong=false;this._repeatCount=1;this._trackData=null;if(!timelineDataJson)return;this._name=timelineDataJson[NAME];this._totalTime=timelineDataJson[TOTAL_TIME];this._step=timelineDataJson[STEP];this._interpolationMode=timelineDataJson[INTERPOLATION_MODE];this._resultMode=timelineDataJson[RESULT_MODE];
this._loop=!!timelineDataJson[LOOP];this._pingPong=!!timelineDataJson[PING_PONG];this._repeatCount=timelineDataJson[REPEAT_COUNT];this._trackData=new C3.TrackData(timelineDataJson[TRACKS],this)}Release(){this._trackData.Release();this._trackData=null}GetTrackData(){if(!this._trackData)this._trackData=new C3.TrackData(null,this);return this._trackData}GetName(){return this._name}SetName(n){this._name=n}GetTotalTime(){return this._totalTime}SetTotalTime(tt){this._totalTime=tt}GetStep(){return this._step}SetStep(s){this._step=
s}GetInterpolationMode(){return this._interpolationMode}SetInterpolationMode(im){this._interpolationMode=im}GetResultMode(){return this._resultMode}SetResultMode(rm){this._resultMode=rm}GetLoop(){return this._loop}SetLoop(l){this._loop=l}GetPingPong(){return this._pingPong}SetPingPong(p){this._pingPong=p}GetRepeatCount(){return this._repeatCount}_SaveToJson(){return{"trackDataJson":this._trackData._SaveToJson(),"name":this._name,"totalTime":this._totalTime,"step":this._step,"interpolationMode":this._interpolationMode,
"resultMode":this._resultMode,"loop":this._loop,"pingPong":this._pingPong,"repeatCount":this._repeatCount}}_LoadFromJson(o){if(!o)return;this.GetTrackData()._LoadFromJson(o["trackDataJson"]);this._name=o["name"];this._totalTime=o["totalTime"];this._step=o["step"];this._interpolationMode=o["interpolationMode"];this._resultMode=o["resultMode"];this._loop=o["loop"];this._pingPong=o["pingPong"];this._repeatCount=o["repeatCount"]}};

}

// timelines/data/trackData.js
{
'use strict';const C3=self.C3;const WI_DATA=0;const OC_INDEX=1;const WI_UID=2;const INTERPOLATION_MODE=1;const RESULT_MODE=2;const ENABLED=3;const KEYFRAMES=4;const PROPERTY_TRACKS=5;const ID=6;const NESTED_DATA=7;const START_OFFSET=0;const LOCAL_TOTAL_TIME=1;const WI_ADDITIONAL_DATA=8;const ORIGINAL_WIDTH=0;const ORIGINAL_HEIGHT=1;const TRACK_TYPE=9;const TRACK_NAME=10;
class TrackDataItem{constructor(trackDataJson,trackData){this._trackData=trackData;this._instanceData=null;this._additionalInstanceData=null;this._instanceUid=NaN;this._objectClassIndex=NaN;this._interpolationMode="default";this._resultMode="default";this._enabled=false;this._keyframeData=null;this._propertyTrackData=null;this._id="";this._nestedData=null;this._startOffset=0;this._localTotalTime=this._trackData.GetTimelineDataItem().GetTotalTime();this._type=0;this._name="";if(!trackDataJson)return;
if(trackDataJson[WI_DATA]){this._instanceData=trackDataJson[WI_DATA];this._instanceUid=trackDataJson[WI_DATA][WI_UID];this._objectClassIndex=trackDataJson[WI_DATA][OC_INDEX]}this._interpolationMode=trackDataJson[INTERPOLATION_MODE];this._resultMode=trackDataJson[RESULT_MODE];this._enabled=!!trackDataJson[ENABLED];if(trackDataJson[ID])this._id=trackDataJson[ID];if(trackDataJson[NESTED_DATA]){this._nestedData=trackDataJson[NESTED_DATA];this._startOffset=trackDataJson[NESTED_DATA][START_OFFSET];this._localTotalTime=
trackDataJson[NESTED_DATA][LOCAL_TOTAL_TIME]}if(trackDataJson[WI_ADDITIONAL_DATA])this._additionalInstanceData=trackDataJson[WI_ADDITIONAL_DATA];if(trackDataJson[WI_ADDITIONAL_DATA])this._additionalInstanceData=trackDataJson[WI_ADDITIONAL_DATA];if(trackDataJson[TRACK_TYPE])this._type=trackDataJson[TRACK_TYPE];if(trackDataJson[TRACK_NAME])this._name=trackDataJson[TRACK_NAME];this._keyframeData=new C3.KeyframeData(trackDataJson[KEYFRAMES],this);this._propertyTrackData=new C3.PropertyTrackData(trackDataJson[PROPERTY_TRACKS],
this)}Release(){this._instanceData=null;this._trackData=null;if(this._keyframeData){this._keyframeData.Release();this._keyframeData=null}if(this._propertyTrackData){this._propertyTrackData.Release();this._propertyTrackData=null}this._nestedData=null}GetTrackData(){return this._trackData}GetKeyframeData(){if(!this._keyframeData)this._keyframeData=new C3.KeyframeData(null,this);return this._keyframeData}GetPropertyTrackData(){if(!this._propertyTrackData)this._propertyTrackData=new C3.PropertyTrackData(null,
this);return this._propertyTrackData}GetInstanceData(){return this._instanceData}GetObjectClassIndex(){return this._objectClassIndex}SetObjectClassIndex(index){this._objectClassIndex=index}GetInstanceUID(){return this._instanceUid}SetInstanceUID(uid){this._instanceUid=uid}GetInterpolationMode(){return this._interpolationMode}SetInterpolationMode(im){this._interpolationMode=im}GetResultMode(){return this._resultMode}SetResultMode(rm){this._resultMode=rm}GetEnable(){return this._enabled}SetEnable(e){this._enabled=
!!e}GetId(){return this._id}GetStartOffset(){return this._startOffset}GetLocalTotalTime(){return this._localTotalTime}SetLocalTotalTime(t){this._localTotalTime=t}GetOriginalWidth(){return this._additionalInstanceData[ORIGINAL_WIDTH]}SetOriginalWidth(w){if(!this._additionalInstanceData)this._additionalInstanceData=[];this._additionalInstanceData[ORIGINAL_WIDTH]=w}GetOriginalHeight(){if(!this._additionalInstanceData)this._additionalInstanceData=[];return this._additionalInstanceData[ORIGINAL_HEIGHT]}SetOriginalHeight(h){if(!this._additionalInstanceData)this._additionalInstanceData=
[];this._additionalInstanceData[ORIGINAL_HEIGHT]=h}GetType(){return this._type}GetName(){return this._name}_SaveToJson(){return{"keyframeDataJson":this._keyframeData._SaveToJson(),"propertyTrackDataJson":this._propertyTrackData._SaveToJson(),"instanceData":this._instanceData,"additionalInstanceData":this._additionalInstanceData,"instanceUid":this._instanceUid,"objectClassIndex":this._objectClassIndex,"interpolationMode":this._interpolationMode,"resultMode":this._resultMode,"enabled":this._enabled,
"id":this._id,"nestedData":this._nestedData,"type":this._type,"name":this._name}}_LoadFromJson(o){if(!o)return;this._instanceData=o["instanceData"];this._instanceUid=o["instanceUid"];this._objectClassIndex=o["objectClassIndex"];this._interpolationMode=o["interpolationMode"];this._resultMode=o["resultMode"];this._enabled=o["enabled"];this._id=o["id"];this._type=o["type"]?o["type"]:0;this._type=o["name"]?o["name"]:"";this._localTotalTime=this._trackData.GetTimelineDataItem().GetTotalTime();if(o["nestedData"]){this._nestedData=
o["nestedData"];this._startOffset=this._nestedData[START_OFFSET];this._localTotalTime=this._nestedData[LOCAL_TOTAL_TIME]}if(o["additionalInstanceData"])this._additionalInstanceData=o["additionalInstanceData"];this.GetKeyframeData()._LoadFromJson(o["keyframeDataJson"]);this.GetPropertyTrackData()._LoadFromJson(o["propertyTrackDataJson"])}}
C3.TrackData=class TrackData{constructor(tracksDataJson,timelineDataItem){this._timelineDataItem=timelineDataItem;this._trackDataItems=[];this._keyframeTimeMap=new Map;C3.TimelineDataManager._CreateDataItems(this._trackDataItems,tracksDataJson,TrackDataItem,this)}Release(){this._timelineDataItem=null;for(const trackDataItem of this._trackDataItems)trackDataItem.Release();C3.clearArray(this._trackDataItems);this._trackDataItems=null;this._keyframeTimeMap.clear();this._keyframeTimeMap=null}GetTimelineDataItem(){return this._timelineDataItem}AddEmptyTrackDataItem(){const trackDataItem=
new TrackDataItem(null,this);this._trackDataItems.push(trackDataItem);return trackDataItem}GetFirstKeyframeDataItem(trackDataItem){return trackDataItem.GetKeyframeData().GetKeyframeDataItemArray()[0]}GetLastKeyframeDataItem(trackDataItem){const keyframeDataItems=trackDataItem.GetKeyframeData().GetKeyframeDataItemArray();return keyframeDataItems.at(-1)}GetKeyFrameDataItemAtTime(time,trackDataItem){const keyframeDataItemEntry=this._keyframeTimeMap.get(trackDataItem);if(!!keyframeDataItemEntry&&keyframeDataItemEntry.has(time))return keyframeDataItemEntry.get(time);
for(const keyframeDataItem of trackDataItem.GetKeyframeData().keyframeDataItems())if(keyframeDataItem.GetTime()===time){if(!keyframeDataItemEntry)this._keyframeTimeMap.set(trackDataItem,new Map);this._keyframeTimeMap.get(trackDataItem).set(time,keyframeDataItem);return keyframeDataItem}}GetFirstKeyFrameDataItemHigherThan(time,trackDataItem){for(const keyframeDataItem of trackDataItem.GetKeyframeData().keyframeDataItems())if(keyframeDataItem.GetTime()>time)return keyframeDataItem}GetFirstKeyFrameDataItemHigherOrEqualThan(time,
trackDataItem){for(const keyframeDataItem of trackDataItem.GetKeyframeData().keyframeDataItems())if(keyframeDataItem.GetTime()>=time)return keyframeDataItem}GetFirstKeyFrameDataItemLowerOrEqualThan(time,trackDataItem){for(const keyframeDataItem of trackDataItem.GetKeyframeData().keyframeDataItemsReverse())if(keyframeDataItem.GetTime()<=time)return keyframeDataItem}*trackDataItems(){for(const trackDataItem of this._trackDataItems)yield trackDataItem}_SaveToJson(){return{"trackDataItemsJson":this._trackDataItems.map(trackDataItem=>
trackDataItem._SaveToJson())}}_LoadFromJson(o){if(!o)return;C3.TimelineDataManager._LoadDataItemsFromJson(this._trackDataItems,o["trackDataItemsJson"],TrackDataItem,this)}};

}

// timelines/data/propertyTrackData.js
{
'use strict';const C3=self.C3;const SOURCE_DATA=0;const SOURCE=0;const PROPERTY=1;const TYPE=2;const MIN=3;const MAX=4;const INTERPOLATION_MODE=5;const RESULT_MODE=6;const ENABLED=7;const PROPERTY_KEYFRAMES=8;
class PropertyTrackDataItem{constructor(propertyTrackDataJson,propertyTrackData){this._propertyTrackData=propertyTrackData;this._sourceAdapterId="";this._sourceAdapterArguments=null;this._property=null;this._type=null;this._min=NaN;this._max=NaN;this._interpolationMode="default";this._resultMode="default";this._enabled=false;this._propertyKeyframeData=null;if(!propertyTrackDataJson)return;this._sourceAdapterId=propertyTrackDataJson[SOURCE_DATA][SOURCE];this._sourceAdapterArguments=propertyTrackDataJson[SOURCE_DATA].slice(1);
this._property=propertyTrackDataJson[PROPERTY];this._type=propertyTrackDataJson[TYPE];this._min=propertyTrackDataJson[MIN];this._max=propertyTrackDataJson[MAX];this._interpolationMode=propertyTrackDataJson[INTERPOLATION_MODE];this._resultMode=propertyTrackDataJson[RESULT_MODE];this._enabled=!!propertyTrackDataJson[ENABLED];this._propertyKeyframeData=new C3.PropertyKeyframeData(propertyTrackDataJson[PROPERTY_KEYFRAMES],this)}Release(){this._propertyKeyframeData.Release();this._propertyKeyframeData=
null;this._propertyTrackData=null;this._sourceAdapterArguments=null}GetPropertyTrackData(){return this._propertyTrackData}GetPropertyKeyframeData(){if(!this._propertyKeyframeData)this._propertyKeyframeData=new C3.PropertyKeyframeData(null,this);return this._propertyKeyframeData}GetSourceAdapterId(){return this._sourceAdapterId}SetSourceAdapterId(said){this._sourceAdapterId=said}GetSourceAdapterArguments(){return this._sourceAdapterArguments}SetSourceAdapterArguments(sargs){this._sourceAdapterArguments=
sargs}GetProperty(){return this._property}SetProperty(p){this._property=p}GetType(){return this._type}SetType(t){this._type=t}GetMin(){return this._min}SetMin(min){this._min=min}GetMax(){return this._max}SetMax(max){this._max=max}GetInterpolationMode(){return this._interpolationMode}SetInterpolationMode(im){this._interpolationMode=im}GetResultMode(){return this._resultMode}SetResultMode(rm){this._resultMode=rm}GetEnable(){return this._enabled}SetEnable(e){this._enabled=!!e}_SaveToJson(){return{"propertyKeyframeDataJson":this._propertyKeyframeData._SaveToJson(),
"sourceAdapterId":this._sourceAdapterId,"sourceAdapterArguments":this._sourceAdapterArguments,"property":this._property,"type":this._type,"min":this._min,"max":this._max,"interpolationMode":this._interpolationMode,"resultMode":this._resultMode,"enabled":this._enabled}}_LoadFromJson(o){if(!o)return;this._sourceAdapterId=o["sourceAdapterId"];this._sourceAdapterArguments=o["sourceAdapterArguments"];this._property=o["property"];this._type=o["type"];this._min=o["min"];this._max=o["max"];this._interpolationMode=
o["interpolationMode"];this._resultMode=o["resultMode"];this._enabled=o["enabled"];this.GetPropertyKeyframeData()._LoadFromJson(o["propertyKeyframeDataJson"])}}
C3.PropertyTrackData=class PropertyTrackData{constructor(propertyTracksDataJson,trackDataItem){this._trackDataItem=trackDataItem;this._propertyTrackDataItems=[];this._propertyKeyframeTimeMap=new Map;C3.TimelineDataManager._CreateDataItems(this._propertyTrackDataItems,propertyTracksDataJson,PropertyTrackDataItem,this)}Release(){this._trackDataItem=null;for(const propertyTrackDataItem of this._propertyTrackDataItems)propertyTrackDataItem.Release();C3.clearArray(this._propertyTrackDataItems);this._propertyTrackDataItems=
null;this._propertyKeyframeTimeMap.clear();this._propertyKeyframeTimeMap=null}GetTrackDataItem(){return this._trackDataItem}AddEmptyPropertyTrackDataItem(){const propertyTrackDataItem=new PropertyTrackDataItem(null,this);this._propertyTrackDataItems.push(propertyTrackDataItem);return propertyTrackDataItem}GetFirstPropertyKeyframeDataItem(propertyTrackDataItem){const propertyKeyframeData=propertyTrackDataItem.GetPropertyKeyframeData();return propertyKeyframeData.GetPropertyKeyframeDataItemArray()[0]}GetLastPropertyKeyframeDataItem(propertyTrackDataItem){const propertyKeyframeData=
propertyTrackDataItem.GetPropertyKeyframeData();const propertyKeyframeDataItems=propertyKeyframeData.GetPropertyKeyframeDataItemArray();return propertyKeyframeDataItems.at(-1)}GetPropertyKeyFrameDataItemAtTime(time,propertyTrackDataItem){const propertyKeyframeDataItemEntry=this._propertyKeyframeTimeMap.get(propertyTrackDataItem);if(!!propertyKeyframeDataItemEntry&&propertyKeyframeDataItemEntry.has(time))return propertyKeyframeDataItemEntry.get(time);const propertyKeyframeData=propertyTrackDataItem.GetPropertyKeyframeData();
for(const propertyKeyframeDataItem of propertyKeyframeData.propertyKeyframeDataItems())if(propertyKeyframeDataItem.GetTime()===time){if(!propertyKeyframeDataItemEntry)this._propertyKeyframeTimeMap.set(propertyTrackDataItem,new Map);this._propertyKeyframeTimeMap.get(propertyTrackDataItem).set(time,propertyKeyframeDataItem);return propertyKeyframeDataItem}}GetFirstPropertyKeyFrameDataItemHigherThan(time,propertyTrackDataItem){const propertyKeyframeData=propertyTrackDataItem.GetPropertyKeyframeData();
for(const propertyKeyframeDataItem of propertyKeyframeData.propertyKeyframeDataItems())if(propertyKeyframeDataItem.GetTime()>time)return propertyKeyframeDataItem}GetFirstPropertyKeyFrameDataItemHigherOrEqualThan(time,propertyTrackDataItem){const propertyKeyframeData=propertyTrackDataItem.GetPropertyKeyframeData();for(const propertyKeyframeDataItem of propertyKeyframeData.propertyKeyframeDataItems())if(propertyKeyframeDataItem.GetTime()>=time)return propertyKeyframeDataItem}GetFirstPropertyKeyFrameDataItemLowerOrEqualThan(time,
propertyTrackDataItem){const propertyKeyframeData=propertyTrackDataItem.GetPropertyKeyframeData();for(const propertyKeyframeDataItem of propertyKeyframeData.propertyKeyframeDataItemsReverse())if(propertyKeyframeDataItem.GetTime()<=time)return propertyKeyframeDataItem}*propertyTrackDataItems(){for(const propertyTrackDataItem of this._propertyTrackDataItems)yield propertyTrackDataItem}_SaveToJson(){return{"propertyTrackDataItemsJson":this._propertyTrackDataItems.map(propertyTrackDataItem=>propertyTrackDataItem._SaveToJson())}}_LoadFromJson(o){if(!o)return;
C3.TimelineDataManager._LoadDataItemsFromJson(this._propertyTrackDataItems,o["propertyTrackDataItemsJson"],PropertyTrackDataItem,this)}};

}

// timelines/data/keyframeData.js
{
'use strict';const C3=self.C3;const TIME=0;const EASE=1;const ENABLE=2;const TAGS=3;
class KeyframeDataItem{constructor(keyframeDataJson,keyframeData){this._keyframeData=keyframeData;this._time=-1;this._ease="noease";this._enable=false;this._tags=null;this._lowerTags=null;if(!keyframeDataJson)return;this._time=keyframeDataJson[TIME];this._ease=keyframeDataJson[EASE];this._enable=!!keyframeDataJson[ENABLE];const tagStr=keyframeDataJson[TAGS];this._tags=tagStr?tagStr.split(" "):[];this._lowerTags=new Set(this._tags.map(t=>t.toLowerCase()))}Release(){this._keyframeData=null;C3.clearArray(this._tags);
this._tags=null;this._lowerTags.clear();this._lowerTags=null}GetKeyframeData(){return this._keyframeData}GetTime(){return this._time}SetTime(t){this._time=t}GetEase(){return this._ease}SetEase(e){this._ease=e}GetEnable(){return this._enable}SetEnable(e){this._enable=!!e}GetTags(){return this._tags}SetTags(t){this._tags=t?t.split(" "):[];this._lowerTags=new Set(this._tags.map(t=>t.toLowerCase()))}GetLowerTags(){return this._lowerTags}HasTag(tag){return this._lowerTags.has(tag.toLowerCase())}_SaveToJson(){return{"time":this._time,
"ease":this._ease,"enable":this._enable,"tags":this._tags}}_LoadFromJson(o){if(!o)return;this._time=o["time"];this._ease=o["ease"];this._enable=o["enable"];this._tags=o["tags"];this._lowerTags=new Set(this._tags.map(t=>t.toLowerCase()))}}
C3.KeyframeData=class KeyframeData{constructor(keyframesDataJson,trackDataItem){this._trackDataItem=trackDataItem;this._keyframeDataItems=[];C3.TimelineDataManager._CreateDataItems(this._keyframeDataItems,keyframesDataJson,KeyframeDataItem,this)}Release(){this._trackDataItem=null;for(const keyframeDataItem of this._keyframeDataItems)keyframeDataItem.Release();C3.clearArray(this._keyframeDataItems);this._keyframeDataItems=null}GetTrackDataItem(){return this._trackDataItem}GetKeyframeDataItemCount(){return this._keyframeDataItems.length}GetKeyframeDataItemArray(){return this._keyframeDataItems}AddEmptyKeyframeDataItem(){const keyframeDataItem=
new KeyframeDataItem(null,this);this._keyframeDataItems.push(keyframeDataItem);return keyframeDataItem}DeleteKeyframeDataItems(match){for(const keyframeDataItem of this._keyframeDataItems){if(!match(keyframeDataItem))continue;const index=this._keyframeDataItems.indexOf(keyframeDataItem);if(index===-1)continue;keyframeDataItem.Release();this._keyframeDataItems.splice(index,1)}this.SortKeyframeDataItems()}SortKeyframeDataItems(){this._keyframeDataItems.sort((a,b)=>a.GetTime()-b.GetTime())}GetKeyframeDataItemIndex(keyframeDataItem){return this._keyframeDataItems.indexOf(keyframeDataItem)}GetKeyframeDataItemFromIndex(index){return this._keyframeDataItems[index]}*keyframeDataItems(){for(const keyframeDataItem of this._keyframeDataItems)yield keyframeDataItem}*keyframeDataItemsReverse(){for(let i=
this._keyframeDataItems.length-1;i>=0;i--)yield this._keyframeDataItems[i]}_SaveToJson(){return{"keyframeDataItemsJson":this._keyframeDataItems.map(keyframeDataItem=>keyframeDataItem._SaveToJson())}}_LoadFromJson(o){if(!o)return;C3.TimelineDataManager._LoadDataItemsFromJson(this._keyframeDataItems,o["keyframeDataItemsJson"],KeyframeDataItem,this)}};

}

// timelines/data/propertyKeyframeData.js
{
'use strict';const C3=self.C3;const VALUE_DATA=0;const VALUE_DATA_VALUE=0;const VALUE_DATA_ABSOLUTE_VALUE=1;const VALUE_DATA_TYPE=2;const TIME=1;const EASE=2;const ENABLE=3;const ADDONS=4;
class PropertyKeyframeDataItem{constructor(propertyKeyframeDataJson,propertyKeyframeData){this._propertyKeyframeData=propertyKeyframeData;this._value=null;this._aValue=null;this._type="";this._time=NaN;this._ease="noease";this._enable=false;this._addonData=null;if(!propertyKeyframeDataJson)return;this._value=propertyKeyframeDataJson[VALUE_DATA][VALUE_DATA_VALUE];this._aValue=propertyKeyframeDataJson[VALUE_DATA][VALUE_DATA_ABSOLUTE_VALUE];this._type=propertyKeyframeDataJson[VALUE_DATA][VALUE_DATA_TYPE];
this._time=propertyKeyframeDataJson[TIME];this._ease=propertyKeyframeDataJson[EASE];this._enable=!!propertyKeyframeDataJson[ENABLE];this._addonData=null;if(!!propertyKeyframeDataJson[ADDONS])this._addonData=new C3.AddonData(propertyKeyframeDataJson[ADDONS],this)}Release(){this._propertyKeyframeData=null;if(this._addonData){this._addonData.Release();this._addonData=null}}GetAddonData(){return this._addonData}GetValue(){return this._value}SetValue(value){if(this._type==="color"&&C3.IsFiniteNumber(value)){this._value[0]=
C3.GetRValue(value);this._value[1]=C3.GetGValue(value);this._value[2]=C3.GetBValue(value)}else this._value=value}GetAbsoluteValue(){return this._aValue}SetAbsoluteValue(aValue){if(this._type==="color"&&C3.IsFiniteNumber(aValue)){this._aValue[0]=C3.GetRValue(aValue);this._aValue[1]=C3.GetGValue(aValue);this._aValue[2]=C3.GetBValue(aValue)}else this._aValue=aValue}GetValueWithResultMode(){const rm=this._propertyKeyframeData.GetPropertyTrackDataItem().GetResultMode();if(rm==="relative")return this.GetValue();
else if(rm==="absolute")return this.GetAbsoluteValue()}GetType(){return this._type}SetType(t){this._type=t}GetTime(){return this._time}SetTime(t){this._time=t}GetEase(){return this._ease}SetEase(e){this._ease=e}GetEnable(){return this._enable}SetEnable(e){this._enable=!!e}GetAddOn(id){if(!this.GetAddonData())return;for(const addonDataItem of this.GetAddonData().addonDataItems())if(addonDataItem.GetId()===id)return addonDataItem}_SaveToJson(){const aData=this._addonData;return{"addonDataJson":aData?
aData._SaveToJson():aData,"value":this._value,"aValue":this._aValue,"type":this._type,"time":this._time,"ease":this._ease,"enable":this._enable}}_LoadFromJson(o){if(!o)return;if(o["addonDataJson"])this._addonData._SetFromJson(o["addonDataJson"]);this._value=o["value"];this._aValue=o["aValue"];this._type=o["type"];this._time=o["time"];this._ease=o["ease"];this._enable=o["enable"]}}
C3.PropertyKeyframeData=class PropertyKeyframeData{constructor(propertyKeyframesDataJson,propertyTrackDataItem){this._propertyTrackDataItem=propertyTrackDataItem;this._propertyKeyframeDataItems=[];C3.TimelineDataManager._CreateDataItems(this._propertyKeyframeDataItems,propertyKeyframesDataJson,PropertyKeyframeDataItem,this)}Release(){this._propertyTrackDataItem=null;for(const propertyKeyframeDataItem of this._propertyKeyframeDataItems)propertyKeyframeDataItem.Release();C3.clearArray(this._propertyKeyframeDataItems);
this._propertyKeyframeDataItems=null}AddEmptyPropertyKeyframeDataItem(){const propertyKeyframeDataItem=new PropertyKeyframeDataItem(null,this);this._propertyKeyframeDataItems.push(propertyKeyframeDataItem);return propertyKeyframeDataItem}DeletePropertyKeyframeDataItems(match){for(const propertyKeyframeDataItem of this._propertyKeyframeDataItems){if(!match(propertyKeyframeDataItem))continue;const index=this._propertyKeyframeDataItems.indexOf(propertyKeyframeDataItem);if(index===-1)continue;propertyKeyframeDataItem.Release();
this._propertyKeyframeDataItems.splice(index,1)}this.SortPropertyKeyFrameDataItems()}SortPropertyKeyFrameDataItems(){this._propertyKeyframeDataItems.sort((a,b)=>a.GetTime()-b.GetTime())}GetPropertyTrackDataItem(){return this._propertyTrackDataItem}GetPropertyKeyframeDataItemCount(){return this._propertyKeyframeDataItems.length}GetPropertyKeyframeDataItemArray(){return this._propertyKeyframeDataItems}*propertyKeyframeDataItems(){for(const propertyKeyframeDataItem of this._propertyKeyframeDataItems)yield propertyKeyframeDataItem}*propertyKeyframeDataItemsReverse(){for(let i=
this._propertyKeyframeDataItems.length-1;i>=0;i--)yield this._propertyKeyframeDataItems[i]}_SaveToJson(){return{"propertyKeyframeDataItemsJson":this._propertyKeyframeDataItems.map(propertyTrackDataItem=>propertyTrackDataItem._SaveToJson())}}_LoadFromJson(o){if(!o)return;C3.TimelineDataManager._LoadDataItemsFromJson(this._propertyKeyframeDataItems,o["propertyKeyframeDataItemsJson"],PropertyKeyframeDataItem,this)}};

}

// timelines/data/propertyKeyframeAddonData.js
{
'use strict';const C3=self.C3;const ADDON_ID=0;const ADDON_DATA=1;class AddonDataItem{constructor(addonDataJson,addonData){this._addonData=addonData;this._id=addonDataJson[ADDON_ID];this._data=addonDataJson[ADDON_DATA]}Release(){this._addonData=null;this._data=null}GetAddonData(){return this._addonData}GetId(){return this._id}_SaveToJson(){return{"id":this._id,"data":this._data}}_LoadFromJson(o){if(!o)return;this._id=o["id"];this._data=o["data"]}}const START_ANCHOR=0;const START_ENABLE=1;
const END_ANCHOR=2;const END_ENABLE=3;
class AddonDataCubicBezierItem extends AddonDataItem{constructor(addonDataJson,addonData){super(addonDataJson,addonData);this._startAnchor=this._data[START_ANCHOR];this._startEnable=!!this._data[START_ENABLE];this._endAnchor=this._data[END_ANCHOR];this._endEnable=!!this._data[END_ENABLE]}Release(){super.Release()}GetStartAnchor(){return this._startAnchor}GetStartEnable(){return this._startEnable}GetEndAnchor(){return this._endAnchor}GetEndEnable(){return this._endEnable}_SaveToJson(){return Object.assign(super._SaveToJson(),{"startAnchor":this._startAnchor,
"startEnable":!!this._startEnable,"endAnchor":this._endAnchor,"endEnable":!!this._endEnable})}_LoadFromJson(o){if(!o)return;super._LoadFromJson(o);this._startAnchor=o["startAnchor"];this._startEnable=!!o["startEnable"];this._endAnchor=o["endAnchor"];this._endEnable=!!o["endEnable"]}}const DIRECTION=0;const REVOLUTIONS=1;
class AddonDataAngleItem extends AddonDataItem{constructor(addonDataJson,addonData){super(addonDataJson,addonData);this._direction=this._data[DIRECTION];this._revolutions=this._data[REVOLUTIONS]}Release(){super.Release()}GetDirection(){return this._direction}GetRevolutions(){return this._revolutions}_SaveToJson(){return Object.assign(super._SaveToJson(),{"direction":this._direction,"revolutions":this._revolutions})}_LoadFromJson(o){if(!o)return;super._LoadFromJson(o);this._direction=o["direction"];
this._revolutions=o["revolutions"]}}
C3.AddonData=class AddonData{constructor(addonsDataJson,propertyKeyframeDataItem){this._propertyKeyframeDataItem=propertyKeyframeDataItem;this._addonDataItems=[];C3.TimelineDataManager._CreateDataItems(this._addonDataItems,addonsDataJson,{prop:0,map:new Map([["cubic-bezier",AddonDataCubicBezierItem],["angle",AddonDataAngleItem]])},this)}Release(){this._propertyKeyframeDataItem=null;for(const addonDataItem of this._addonDataItems)addonDataItem.Release();C3.clearArray(this._addonDataItems);this._addonDataItems=
null}GetPropertyKeyframeDataItem(){return this._propertyKeyframeDataItem}*addonDataItems(){for(const addonDataItem of this._addonDataItems)yield addonDataItem}_SaveToJson(){return{"addonDataItemsJson":this._addonDataItems.map(addonDataItem=>addonDataItem._SaveToJson())}}_LoadFromJson(o){if(!o)return;C3.TimelineDataManager._LoadDataItemsFromJson(this._addonDataItems,o["addonDataItemsJson"],{prop:"id",map:new Map([["cubic-bezier",AddonDataCubicBezierItem],["angle",AddonDataAngleItem]])},this)}};

}

// timelines/tweens/tween.js
{
'use strict';const C3=self.C3;const INITIAL_VALUE_MODE_START_VALUE="start-value";const INITIAL_VALUE_MODE_CURRENT_STATE="current-state";let createdTweens=0;
C3.Tween=class Tween extends C3.TimelineState{constructor(tweenDataItem,timelineManager){super(`tween-${createdTweens++}`,tweenDataItem,timelineManager);this._id="";this._destroyInstanceOnComplete=false;this._initialValueMode=INITIAL_VALUE_MODE_START_VALUE;this._on_completed_callbacks=null;this._on_started_callbacks=null}GetInstance(){const tracks=this.GetTracks();if(!tracks||!tracks.length)return;const track=tracks[0];if(!track)return;const instance=track.GetInstance();return track.IsInstanceValid()?
instance:null}AddStartedCallback(c){if(!this._on_started_callbacks)this._on_started_callbacks=[];this._on_started_callbacks.push(c)}AddCompletedCallback(c){if(!this._on_completed_callbacks)this._on_completed_callbacks=[];this._on_completed_callbacks.push(c)}RemoveStartedCallback(c){if(!this._on_started_callbacks)return;const index=this._on_started_callbacks.indexOf(c);if(index!==-1)this._on_started_callbacks.splice(index,1)}RemoveCompletedCallback(c){if(!this._on_completed_callbacks)return;const index=
this._on_completed_callbacks.indexOf(c);if(index!==-1)this._on_completed_callbacks.splice(index,1)}SetStartValue(startValue,propertyName){for(const track of this._tracks)for(const propertyTrack of track._propertyTracks){if(propertyTrack.GetPropertyName()!==propertyName)continue;const propertyTrackData=propertyTrack.GetPropertyTrackData();const propertyTrackDataItem=propertyTrack.GetPropertyTrackDataItem();const propertyKeyframeDataItem=propertyTrackData.GetFirstPropertyKeyframeDataItem(propertyTrackDataItem);
propertyKeyframeDataItem.SetValue(startValue);propertyKeyframeDataItem.SetAbsoluteValue(startValue)}}_GetPropertyTrackState(propertyName){for(const track of this._tracks)for(const propertyTrack of track._propertyTracks)if(propertyTrack.GetPropertyName()===propertyName)return propertyTrack}BeforeSetEndValues(properties){for(const propertyName of properties){const propertyTrackState=this._GetPropertyTrackState(propertyName);this.SetStartValue(propertyTrackState.GetCurrentState(),propertyName)}if(this.IsForwardPlayBack()){const newTotalTime=
this.GetTotalTime()-this.GetTime();this.SetTotalTime(newTotalTime);for(const track of this._tracks)track.SetLocalTotalTime(newTotalTime);this._SetTime(0)}else{const newTotalTime=this.GetTime();this.SetTotalTime(newTotalTime);for(const track of this._tracks)track.SetLocalTotalTime(newTotalTime);this._SetTime(newTotalTime)}this.SetInitialStateFromSetTime()}SetEndValue(endValue,propertyName){const propertyTrackState=this._GetPropertyTrackState(propertyName);const propertyTrackData=propertyTrackState.GetPropertyTrackData();
const propertyTrackDataItem=propertyTrackState.GetPropertyTrackDataItem();const propertyKeyframeDataItem=propertyTrackData.GetLastPropertyKeyframeDataItem(propertyTrackDataItem);propertyKeyframeDataItem.SetTime(this.GetTotalTime());propertyKeyframeDataItem.SetValue(endValue);propertyKeyframeDataItem.SetAbsoluteValue(endValue)}SetId(id){this._id=id}GetId(){return this._id}SetInitialValueMode(initialValueMode){this._initialValueMode=initialValueMode}GetInitialValueMode(){return this._initialValueMode}SetDestroyInstanceOnComplete(releaseOnComplete){this._destroyInstanceOnComplete=
releaseOnComplete}GetDestroyInstanceOnComplete(){return this._destroyInstanceOnComplete}OnStarted(){if(this._on_started_callbacks)for(const c of this._on_started_callbacks)c(this);if(this.IsComplete())return;for(const track of this._tracks)track.CompareSaveStateWithCurrent()}OnCompleted(){this._completedTick=this._runtime.GetTickCount()}FinishTriggers(){if(this._finishedTriggers)return;this._finishedTriggers=true;if(this._on_completed_callbacks)for(const c of this._on_completed_callbacks)c(this)}SetTime(time){this._DeleteIntermediateKeyframes();
super.SetTime(time)}SetInitialState(fromSetTime){if(!this.InitialStateSet()&&this.GetInitialValueMode()===INITIAL_VALUE_MODE_CURRENT_STATE)for(const track of this._tracks)track.CompareInitialStateWithCurrent();super.SetInitialState(fromSetTime)}Stop(completed=false){super.Stop(completed);if(this.IsComplete())return;for(const track of this._tracks)track.SaveState()}Reset(render=true,beforeChangeLayout=false){this._DeleteIntermediateKeyframes();super.Reset(render,beforeChangeLayout)}_DeleteIntermediateKeyframes(){for(const track of this._tracks){const del=
kf=>{const time=kf.GetTime();const totalTime=this.GetTotalTime();return time!==0&&time!==totalTime};track.DeleteKeyframes(del);track.DeletePropertyKeyframes(del)}}_OnBeforeChangeLayout(){if(this.IsReleased())return true;const instance=this.GetInstance();if(instance&&instance.GetObjectClass().IsGlobal())return false;this._timelineManager.CompleteTimeline(this);this.ResetBeforeChangeLayout();return true}MaybeTriggerKeyframeReachedConditions(){}Tick(deltaTime,timeScale){const instance=this.GetInstance();
const dt=this.GetRuntime().GetDt(instance);super.Tick(dt,1)}_SaveToJson(){const ret=super._SaveToJson();const tweenDataItem=this.GetTimelineDataItem();return Object.assign(ret,{"tweenDataItemJson":tweenDataItem._SaveToJson(),"id":this._id,"destroyInstanceOnComplete":this._destroyInstanceOnComplete,"initialValueMode":this._initialValueMode})}_LoadFromJson(o){if(!o)return;const tweenDataItem=this.GetTimelineDataItem();tweenDataItem._LoadFromJson(o["tweenDataItemJson"]);super._LoadFromJson(o);this._id=
o["id"];this._destroyInstanceOnComplete=o["destroyInstanceOnComplete"];this._initialValueMode=o["initialValueMode"]}static IsPlaying(tween){return tween.IsPlaying()}static IsPaused(tween){return tween.IsPaused()}static Build(config){const timelineManager=config.runtime.GetTimelineManager();const tweenDataItem=new C3.TimelineDataItem;if(config.json){tweenDataItem._LoadFromJson(config.json["tweenDataItemJson"]);const tween=new C3.Tween(tweenDataItem,timelineManager);tween._LoadFromJson(config.json);
return tween}else{const tween=new C3.Tween(tweenDataItem,timelineManager);if(!C3.IsArray(config.propertyTracksConfig))config.propertyTracksConfig=[config.propertyTracksConfig];tween.SetId(config.id);tween.SetTags(config.tags);tween.SetInitialValueMode(config.initialValueMode);tween.SetDestroyInstanceOnComplete(config.releaseOnComplete);tween.SetLoop(config.loop);tween.SetPingPong(config.pingPong);tween.SetTotalTime(config.time);tween.SetStep(0);tween.SetInterpolationMode("default");tween.SetResultMode(config.propertyTracksConfig[0].resultMode);
const track=tween.AddTrack();track.SetInstanceUID(config.instance.GetUID());track.SetInterpolationMode("default");track.SetResultMode(config.propertyTracksConfig[0].resultMode);track.SetEnable(true);track.SetObjectClassIndex(config.instance.GetObjectClass().GetIndex());const sdkIntance=config.instance.GetSdkInstance();const w=sdkIntance.IsOriginalSizeKnown()?sdkIntance.GetOriginalWidth():config.instance.GetWorldInfo().GetWidth();const h=sdkIntance.IsOriginalSizeKnown()?sdkIntance.GetOriginalHeight():
config.instance.GetWorldInfo().GetHeight();track.SetOriginalWidth(w);track.SetOriginalHeight(h);const startKeyframeDataItem=track.AddKeyframe();startKeyframeDataItem.SetTime(0);startKeyframeDataItem.SetEase("noease");startKeyframeDataItem.SetEnable(true);startKeyframeDataItem.SetTags("");const endKeyframeDataItem=track.AddKeyframe();endKeyframeDataItem.SetTime(config.time);endKeyframeDataItem.SetEase("noease");endKeyframeDataItem.SetEnable(true);endKeyframeDataItem.SetTags("");for(const propertyTrackConfig of config.propertyTracksConfig){const propertyTrack=
track.AddPropertyTrack();propertyTrack.SetSourceAdapterId(propertyTrackConfig.sourceId);propertyTrack.SetSourceAdapterArgs(propertyTrackConfig.sourceArgs);propertyTrack.SetPropertyName(propertyTrackConfig.property);propertyTrack.SetPropertyType(propertyTrackConfig.type);propertyTrack.SetMin(NaN);propertyTrack.SetMax(NaN);propertyTrack.SetInterpolationMode("default");propertyTrack.SetResultMode(propertyTrackConfig.resultMode);propertyTrack.SetEnable(true);const startPropertyKeyframeDataItem=propertyTrack.AddPropertyKeyframe();
startPropertyKeyframeDataItem.SetType(propertyTrackConfig.valueType);startPropertyKeyframeDataItem.SetTime(0);startPropertyKeyframeDataItem.SetEase(propertyTrackConfig.ease);startPropertyKeyframeDataItem.SetEnable(true);startPropertyKeyframeDataItem.SetValue(propertyTrackConfig.startValue);startPropertyKeyframeDataItem.SetAbsoluteValue(propertyTrackConfig.startValue);const endPropertyKeyframeDataItem=propertyTrack.AddPropertyKeyframe();endPropertyKeyframeDataItem.SetType(propertyTrackConfig.valueType);
endPropertyKeyframeDataItem.SetTime(config.time);endPropertyKeyframeDataItem.SetEase(propertyTrackConfig.ease);endPropertyKeyframeDataItem.SetEnable(true);endPropertyKeyframeDataItem.SetValue(propertyTrackConfig.endValue);endPropertyKeyframeDataItem.SetAbsoluteValue(propertyTrackConfig.endValue)}return tween}}};

}

// timelines/transitions/transition.js
{
'use strict';const C3=self.C3;const Ease=self.Ease;const NAME=0;const TRANSITION_KEYFRAMES=1;
C3.Transition=class Transition extends C3.DefendedBase{constructor(data){super();this._name=data[NAME];this._transitionKeyframes=[];for(const transitionKeyframeData of data[TRANSITION_KEYFRAMES]){const transitionKeyframe=C3.TransitionKeyframe.Create(this,transitionKeyframeData);this._transitionKeyframes.push(transitionKeyframe)}this._precalculatedSamples=new Map;this._transitionKeyframeCache=new Map;this._PreCalcSamples();Ease.AddCustomEase(this._name,(t,sv,dv,tt)=>this.Interpolate(t,sv,dv,tt))}static Create(data){return C3.New(C3.Transition,
data)}Release(){for(const transitionKeyframe of this._transitionKeyframes)transitionKeyframe.Release();C3.clearArray(this._transitionKeyframes);this._transitionKeyframes=null;this._precalculatedSamples.clear();this._precalculatedSamples=null;this._transitionKeyframeCache.clear();this._transitionKeyframeCache=null}GetTransitionKeyFrameAt(x){const transitionKeyframe=this._transitionKeyframeCache.get(x);if(transitionKeyframe)return transitionKeyframe;for(const transitionKeyframe of this._transitionKeyframes)if(transitionKeyframe.GetValueX()===
x){this._transitionKeyframeCache.set(x,transitionKeyframe);return transitionKeyframe}}GetFirstTransitionKeyFrameHigherThan(x){for(const transitionKeyframe of this._transitionKeyframes)if(transitionKeyframe.GetValueX()>x)return transitionKeyframe}GetFirstTransitionKeyFrameHigherOrEqualThan(x){for(const transitionKeyframe of this._transitionKeyframes)if(transitionKeyframe.GetValueX()>=x)return transitionKeyframe}GetFirstTransitionKeyFrameLowerOrEqualThan(x){for(let i=this._transitionKeyframes.length-
1;i>=0;i--){const transitionKeyframe=this._transitionKeyframes[i];if(transitionKeyframe.GetValueX()<=x)return transitionKeyframe}}Interpolate(time,startValue,deltaValue,totalTime){const n=time/totalTime;let start=this.GetTransitionKeyFrameAt(n);let end=null;if(start)end=this.GetFirstTransitionKeyFrameHigherThan(n);else{start=this.GetFirstTransitionKeyFrameLowerOrEqualThan(n);end=this.GetFirstTransitionKeyFrameHigherOrEqualThan(n)}const delta=end.GetValueX()-start.GetValueX();const nn=C3.mapToRange(n,
start.GetValueX(),end.GetValueX(),0,delta);const startX=start.GetValueX();const startY=start.GetValueY();const anchor1X=start.GetValueX()+start.GetStartAnchorX();const anchor1Y=start.GetValueY()+start.GetStartAnchorY();const anchor2X=end.GetValueX()+end.GetEndAnchorX();const anchor2Y=end.GetValueY()+end.GetEndAnchorY();const endX=end.GetValueX();const endY=end.GetValueY();let ret=Ease.GetRuntimeEase("spline")(nn,startX,startY,anchor1X,anchor1Y,anchor2X,anchor2Y,endX,endY,this._precalculatedSamples.get(start));
ret+=start.GetValueY();return(1-ret)*startValue+ret*(startValue+deltaValue)}_PreCalcSamples(){this._precalculatedSamples.clear();for(let i=0;i<this._transitionKeyframes.length-1;i++){const transitionKeyframe=this._transitionKeyframes[i];if(!transitionKeyframe.GetStartEnable())continue;const start=transitionKeyframe;const end=this._transitionKeyframes[i+1];const startValue=start.GetValueX();const anchor1Value=start.GetValueX()+start.GetStartAnchorX();const anchor2Value=end.GetValueX()+end.GetEndAnchorX();
const endValue=end.GetValueX();this._precalculatedSamples.set(start,Ease.GetBezierSamples(startValue,anchor1Value,anchor2Value,endValue))}}};

}

// timelines/transitions/transitionKeyframe.js
{
'use strict';const C3=self.C3;const VALUE_X=0;const VALUE_Y=1;const START_ANCHOR_X=2;const START_ANCHOR_Y=3;const END_ANCHOR_X=4;const END_ANCHOR_Y=5;const START_ENABLE=6;const END_ENABLE=7;
C3.TransitionKeyframe=class TransitionKeyframe extends C3.DefendedBase{constructor(transition,data){super();this._transition=transition;this._valueX=data[VALUE_X];this._valueY=data[VALUE_Y];this._startAnchorX=data[START_ANCHOR_X];this._startAnchorY=data[START_ANCHOR_Y];this._endAnchorX=data[END_ANCHOR_X];this._endAnchorY=data[END_ANCHOR_Y];this._startEnable=data[START_ENABLE];this._endEnable=data[END_ENABLE]}Release(){this._transition=null}static Create(transition,data){return C3.New(C3.TransitionKeyframe,
transition,data)}GetValueX(){return this._valueX}GetValueY(){return this._valueY}GetStartAnchorX(){return this._startAnchorX}GetStartAnchorY(){return this._startAnchorY}GetEndAnchorX(){return this._endAnchorX}GetEndAnchorY(){return this._endAnchorY}GetStartEnable(){return this._startEnable}GetEndEnable(){return this._endEnable}};

}

// timelines/transitions/transitionManager.js
{
'use strict';const C3=self.C3;C3.TransitionManager=class TransitionManager extends C3.DefendedBase{constructor(runtime){super();this._runtime=runtime;this._transitions=[]}Release(){for(const transition of this._transitions)transition.Release();C3.clearArray(this._transitions);this._transitions=null}Create(transitionData){this._transitions.push(C3.Transition.Create(transitionData))}};

}

// events/stacks/solStack.js
{
'use strict';const C3=self.C3;
C3.SolStack=class SolStack extends C3.DefendedBase{constructor(objectClass){super();this._objectClass=objectClass;this._stack=[];this._stack.push(C3.New(C3.Sol,this));this._index=0;this._current=this._stack[0]}Release(){for(const s of this._stack)s.Release();C3.clearArray(this._stack);this._current=null;this._objectClass=null}GetObjectClass(){return this._objectClass}GetCurrentSol(){return this._current}Clear(){this.GetCurrentSol().Clear()}PushClean(){const stack=this._stack;const index=++this._index;
if(index===stack.length){const sol=C3.New(C3.Sol,this);stack.push(sol);this._current=sol}else{const sol=stack[index];sol.Reset();this._current=sol}}PushCopy(){const stack=this._stack;const index=++this._index;if(index===stack.length)stack.push(C3.New(C3.Sol,this));const sol=stack[index];sol.Copy(stack[index-1]);this._current=sol}Pop(){this._current=this._stack[--this._index]}RemoveInstances(s){const stack=this._stack;for(let i=0,len=stack.length;i<len;++i)stack[i].RemoveInstances(s)}};

}

// events/stacks/sol.js
{
'use strict';const C3=self.C3;
C3.Sol=class Sol extends C3.DefendedBase{constructor(stack){super();this._stack=stack;this._objectClass=this._stack.GetObjectClass();this._eventStack=this._objectClass.GetRuntime().GetEventStack();this._selectAll=true;this._instances=[];this._elseInstances=[]}Release(){this.ClearArrays();this._stack=null;this._objectClass=null;this._eventStack=null}ClearArrays(){C3.clearArray(this._instances);C3.clearArray(this._elseInstances)}GetObjectClass(){return this._objectClass}IsSelectAll(){return this._selectAll}HasAnyInstances(){if(this._selectAll)return!!this._objectClass.GetInstanceCount();else return!!this._instances.length}GetInstances(){if(this._selectAll)return this._objectClass.GetInstances();
else return this._instances}HasAnyElseInstances(){return!!this._elseInstances.length}GetElseInstances(){return this._elseInstances}GetExpressionInstances(){const ret=this.GetInstances();if(ret.length)return ret;else return this._elseInstances}Reset(){this._selectAll=true;C3.clearArray(this._elseInstances)}Clear(){this._selectAll=true}Copy(sol){if(sol.IsSelectAll())this.Reset();else{this._selectAll=false;C3.shallowAssignArray(this._instances,sol._instances);C3.clearArray(this._elseInstances)}}_PushInstance(inst){this._instances.push(inst)}_PushElseInstance(inst){this._elseInstances.push(inst)}_SetSelectAll(s){this._selectAll=
!!s}_GetOwnInstances(){return this._instances}_GetOwnElseInstances(){return this._elseInstances}SetSinglePicked(inst){this._selectAll=false;C3.clearArray(this._instances);this._instances.push(inst)}SetArrayPicked(arr){this._selectAll=false;C3.shallowAssignArray(this._instances,arr)}SetSetPicked(set){this._selectAll=false;C3.clearArray(this._instances);for(const item of set)this._instances.push(item)}AddElseInstances(setOfPicked,arrayOfAllPicked){for(const inst of arrayOfAllPicked)if(!setOfPicked.has(inst))this._elseInstances.push(inst)}TransferElseInstancesToOwn(setOfPicked){for(const inst of setOfPicked)this._instances.push(inst);
C3.arrayRemoveAllInSet(this._elseInstances,setOfPicked)}PickOne(inst){if(!inst)return;if(this._eventStack.GetCurrentStackFrame().GetCurrentEvent().IsOrBlock()){if(this.IsSelectAll()){C3.clearArray(this._instances);C3.shallowAssignArray(this._elseInstances,inst.GetObjectClass().GetInstances());this._selectAll=false}const i=this._elseInstances.indexOf(inst);if(i!==-1){this._instances.push(this._elseInstances[i]);this._elseInstances.splice(i,1)}}else this.SetSinglePicked(inst)}RemoveInstances(s){C3.arrayRemoveAllInSet(this._instances,
s);C3.arrayRemoveAllInSet(this._elseInstances,s)}};

}

// events/stacks/eventStack.js
{
'use strict';const C3=self.C3;
C3.EventStack=class EventStack extends C3.DefendedBase{constructor(eventSheetManager){super();this._eventSheetManager=eventSheetManager;this._runtime=this._eventSheetManager.GetRuntime();this._stack=[];this._stack.push(C3.New(C3.EventStackFrame,this,null));this._index=0;this._expFuncStack=[]}Release(){for(const e of this._stack)e.Release();C3.clearArray(this._stack);C3.clearArray(this._expFuncStack);this._eventSheetManager=null;this._runtime=null}GetEventSheetManager(){return this._eventSheetManager}GetRuntime(){return this._runtime}GetCurrentStackFrame(){return this._stack[this._index]}Push(currentEvent){const stack=this._stack;
const index=++this._index;if(index===stack.length){const ret=C3.New(C3.EventStackFrame,this,currentEvent);stack.push(ret);return ret}else{const ret=stack[index];ret.Reset(currentEvent);return ret}}Pop(){--this._index}PushExpFunc(frame){this._expFuncStack.push(frame)}PopExpFunc(){this._expFuncStack.pop()}GetCurrentExpFuncStackFrame(){const expFuncStack=this._expFuncStack;if(expFuncStack.length===0)return null;else return expFuncStack.at(-1)}};

}

// events/stacks/eventStackFrame.js
{
'use strict';const C3=self.C3;
C3.EventStackFrame=class EventStackFrame extends C3.DefendedBase{constructor(stack,currentEvent){super();this._stack=stack;this._runtime=this._stack.GetRuntime();this._currentEvent=currentEvent;this._cndIndex=0;this._actIndex=0;this._lastEventTrue=false;this._elseBranchRan=false;this._expressionObjectClass=null;this._functionReturnType=0;this._functionReturnValue=0}Release(){this.Reset(null);this._stack=null;this._runtime=null}Reset(currentEvent){this._currentEvent=currentEvent;this._cndIndex=0;this._actIndex=
0;this._lastEventTrue=false;this._elseBranchRan=false}_Restore(currentEvent,actIndex){this._currentEvent=currentEvent;this._cndIndex=0;this._actIndex=actIndex}ResetQuick(){this._cndIndex=0;this._actIndex=0}GetCurrentEvent(){return this._currentEvent}SetCurrentEvent(currentEvent){this._currentEvent=currentEvent}GetConditionIndex(){return this._cndIndex}SetConditionIndex(i){this._cndIndex=i}GetActionIndex(){return this._actIndex}SetActionIndex(i){this._actIndex=i}SetLastEventTrue(t){this._lastEventTrue=
!!t}GetLastEventTrue(){return this._lastEventTrue}SetElseBranchRan(r){this._elseBranchRan=!!r}GetElseBranchRan(){return this._elseBranchRan}SetExpressionObjectClass(objectClass){this._expressionObjectClass=objectClass}GetExpressionObjectClass(){return this._expressionObjectClass}InitCallFunctionExpression(returnType,defaultReturnValue){this._functionReturnType=returnType;this._functionReturnValue=defaultReturnValue}GetFunctionReturnType(){return this._functionReturnType}SetFunctionReturnValue(v){this._functionReturnValue=
v}GetFunctionReturnValue(){return this._functionReturnValue}IsSolModifierAfterCnds(){const currentEvent=this._currentEvent;if(currentEvent.IsSolWriterAfterCnds())return true;if(this._cndIndex<currentEvent.GetConditionCount()-1)return!!currentEvent.GetSolModifiers().length;return false}};

}

// events/stacks/localVarStack.js
{
'use strict';const C3=self.C3;
C3.LocalVarStack=class LocalVarStack extends C3.DefendedBase{constructor(eventSheetManager){super();this._eventSheetManager=eventSheetManager;this._runtime=this._eventSheetManager.GetRuntime();this._stack=[];this._index=-1;this._current=null;this._initialValues=[]}Release(){C3.clearArray(this._stack);this._eventSheetManager=null;this._runtime=null}_SetInitialValues(initialValues){this._initialValues=initialValues;const arr=this._initialValues.slice(0);this._stack.push(arr);this._index=0;this._current=
arr}GetEventSheetManager(){return this._eventSheetManager}GetRuntime(){return this._runtime}GetCurrent(){return this._current}Push(){const index=++this._index;const stack=this._stack;if(index===stack.length)stack.push(this._initialValues.slice(0));else C3.shallowAssignArray(stack[index],this._initialValues);this._current=stack[index]}Pop(){this._current=this._stack[--this._index]}};

}

// events/stacks/loopStack.js
{
'use strict';const C3=self.C3;
C3.LoopStack=class LoopStack extends C3.DefendedBase{constructor(eventSheetManager){super();this._eventSheetManager=eventSheetManager;this._runtime=this._eventSheetManager.GetRuntime();this._stack=[];this._index=-1}Release(){C3.clearArray(this._stack);this._eventSheetManager=null;this._runtime=null}GetEventSheetManager(){return this._eventSheetManager}GetRuntime(){return this._runtime}IsInLoop(){return this._index>=0}GetCurrent(){return this._stack[this._index]}Push(){++this._index;if(this._index===
this._stack.length){const ret=C3.New(C3.Loop,this);this._stack.push(ret);return ret}else{const ret=this._stack[this._index];ret.Reset();return ret}}Pop(){--this._index}FindByName(name){const stack=this._stack;for(let i=this._index;i>=0;--i){const loop=stack[i];if(loop.GetName()===name)return loop}return null}_GetStack(){return this._stack.slice(0,this._index+1)}};

}

// events/stacks/loop.js
{
'use strict';const C3=self.C3;C3.Loop=class Loop extends C3.DefendedBase{constructor(loopStack){super();this._loopStack=loopStack;this._name="";this._index=0;this._isStopped=false;this._end=NaN}Reset(){this._name="";this._index=0;this._isStopped=false;this._end=NaN}SetName(name){this._name=name}GetName(){return this._name}SetIndex(i){this._index=i}GetIndex(){return this._index}Stop(){this._isStopped=true}IsStopped(){return this._isStopped}SetEnd(e){this._end=e}GetEnd(){return this._end}};

}

// events/stacks/arrayStack.js
{
'use strict';const C3=self.C3;C3.ArrayStack=class ArrayStack extends C3.DefendedBase{constructor(){super();this._stack=[];this._index=-1}Release(){C3.clearArray(this._stack)}GetCurrent(){return this._stack[this._index]}Push(){++this._index;if(this._index===this._stack.length){const ret=[];this._stack.push(ret);return ret}else return this._stack[this._index]}Pop(){--this._index}};

}

// events/eventSheetManager.js
{
'use strict';const C3=self.C3;const assert=self.assert;function SortSolArray(a,b){return a.GetIndex()-b.GetIndex()}function IsSolArrayIdentical(a,b){for(let i=0,len=a.length;i<len;++i)if(a[i]!==b[i])return false;return true}
C3.EventSheetManager=class EventSheetManager extends C3.DefendedBase{constructor(runtime){super();this._runtime=runtime;this._allSheets=[];this._sheetsByName=new Map;this._allGroups=[];this._groupsByName=new Map;this._blocksBySid=new Map;this._cndsBySid=new Map;this._actsBySid=new Map;this._allUniqueSolModifiers=new Map;this._eventVarsBySid=new Map;this._nextLocalVarIndex=0;this._allGlobalVars=[];this._allLocalVars=[];this._localVarInitialValues=[];this._functionBlocksByName=new Map;this._eventStack=
C3.New(C3.EventStack,this);this._localVarStack=C3.New(C3.LocalVarStack,this);this._loopStack=C3.New(C3.LoopStack,this);this._triggersToPostInit=[];this._queuedTriggers=[];this._queuedDebugTriggers=[];this._runningEventsDepth=0;this._executingTriggerDepth=0;this._blockFlushingDepth=0;this._scheduledWaits=[];this._asyncActionPromises=[];self["c3_callFunction"]=(name,params)=>this._InvokeFunctionFromJS(name,params)}Release(){this.ClearAllScheduledWaits();this._eventStack.Release();this._eventStack=null;
this._localVarStack.Release();this._localVarStack=null;C3.clearArray(this._queuedTriggers);C3.clearArray(this._queuedDebugTriggers);this._runtime=null;C3.clearArray(this._allSheets);this._sheetsByName.clear()}Create(eventSheetData){const eventSheet=C3.New(C3.EventSheet,this,eventSheetData);this._allSheets.push(eventSheet);this._sheetsByName.set(eventSheet.GetName().toLowerCase(),eventSheet)}_AddTriggerToPostInit(trig){this._triggersToPostInit.push(trig)}_PostInit(){for(const functionBlock of this._functionBlocksByName.values())functionBlock._PostInit(false);
for(const sheet of this._allSheets)sheet._PostInit();for(const sheet of this._allSheets)sheet._UpdateDeepIncludes();for(const trig of this._triggersToPostInit)trig._PostInit(false);C3.clearArray(this._triggersToPostInit);this._localVarStack._SetInitialValues(this._localVarInitialValues)}GetRuntime(){return this._runtime}GetEventSheetByName(name){return this._sheetsByName.get(name.toLowerCase())||null}_RegisterGroup(group){this._allGroups.push(group);this._groupsByName.set(group.GetGroupName(),group)}_RegisterEventBlock(eventBlock){this._blocksBySid.set(eventBlock.GetSID(),
eventBlock)}_RegisterCondition(condition){this._cndsBySid.set(condition.GetSID(),condition)}_RegisterAction(action){this._actsBySid.set(action.GetSID(),action)}_RegisterFunctionBlock(functionBlock){this._functionBlocksByName.set(functionBlock.GetFunctionName().toLowerCase(),functionBlock)}_RegisterEventVariable(ev){this._eventVarsBySid.set(ev.GetSID(),ev);if(ev.IsGlobal())this._allGlobalVars.push(ev);else this._allLocalVars.push(ev)}_DeduplicateSolModifierList(arr){if(arr.length>=2)arr.sort(SortSolArray);
let candidateList=this._allUniqueSolModifiers.get(arr.length);if(!candidateList){candidateList=[];this._allUniqueSolModifiers.set(arr.length,candidateList)}for(let i=0,len=candidateList.length;i<len;++i){const candidate=candidateList[i];if(IsSolArrayIdentical(arr,candidate))return candidate}candidateList.push(arr);return arr}_GetNextLocalVarIndex(eventVar){this._localVarInitialValues.push(eventVar.GetInitialValue());return this._nextLocalVarIndex++}GetEventStack(){return this._eventStack}GetCurrentEventStackFrame(){return this.GetEventStack().GetCurrentStackFrame()}GetCurrentEvent(){return this.GetCurrentEventStackFrame().GetCurrentEvent()}GetCurrentCondition(){const frame=
this.GetCurrentEventStackFrame();const event=frame.GetCurrentEvent();return event.GetConditionAt(frame.GetConditionIndex())}GetCurrentAction(){const frame=this.GetCurrentEventStackFrame();const event=frame.GetCurrentEvent();return event.GetActionAt(frame.GetActionIndex())}GetLocalVarStack(){return this._localVarStack}GetLoopStack(){return this._loopStack}GetAllLocalVariablesInScope(fromRow){const ret=[];fromRow=fromRow.GetScopeParent();while(fromRow){C3.appendArray(ret,fromRow._GetAllLocalVariablesInScope());
fromRow=fromRow.GetScopeParent()}return ret}_GetLocalVariablesScriptInterface(fromRow){const localVarDescriptors={};for(const v of this.GetAllLocalVariablesInScope(fromRow))localVarDescriptors[v.GetJsPropName()]=v._GetScriptInterfaceDescriptor();return Object.create(Object.prototype,localVarDescriptors)}GetEventVariableBySID(sid){return this._eventVarsBySid.get(sid)||null}GetEventBlockBySID(sid){return this._blocksBySid.get(sid)||null}GetConditionBySID(sid){return this._cndsBySid.get(sid)||null}GetActionBySID(sid){return this._actsBySid.get(sid)||
null}GetFunctionBlockByName(name){return this._functionBlocksByName.get(name.toLowerCase())||null}GetAllGlobalVariables(){return this._allGlobalVars}GetAllLocalVariables(){return this._allLocalVars}ResetAllGlobalsToInitialValue(){for(const ev of this._allGlobalVars)ev.ResetToInitialValue()}GetEventGroupByName(name){return this._groupsByName.get(name.toLowerCase())||null}GetEventGroupBySID(sid){const group=this._blocksBySid.get(sid);if(group&&group.IsGroup())return group;else return null}GetAllGroups(){return this._allGroups}ResetAllGroupsInitialActivation(){for(const group of this._allGroups)group.ResetInitialActivation()}_ResetAllHasRunFlags(){for(const sheet of this._allSheets)sheet._ResetHasRunFlag()}RunEvents(layoutManager){this._ResetAllHasRunFlags();
this._runningEventsDepth++;for(const layout of layoutManager.runningLayouts()){const eventSheet=layout.GetEventSheet();if(!eventSheet)continue;this._runtime.PushCurrentLayout(layout);eventSheet.Run();this._runtime.PopCurrentLayout()}this._runningEventsDepth--}async DebugRunEvents(layoutManager){this._ResetAllHasRunFlags();this._runningEventsDepth++;for(const breakEventObject of this._DebugRunEventsGen(layoutManager))await this._runtime.DebugBreak(breakEventObject);this._runningEventsDepth--}*_DebugRunEventsGen(layoutManager){for(const layout of layoutManager.runningLayouts()){const eventSheet=
layout.GetEventSheet();if(!eventSheet)continue;this._runtime.PushCurrentLayout(layout);yield*eventSheet.DebugRun();this._runtime.PopCurrentLayout()}}_Trigger(layoutManager,method,inst,behaviorType){let ret=false;if(!layoutManager.GetMainRunningLayout())return this.QueueTrigger(method,inst,behaviorType);this._executingTriggerDepth++;for(const layout of layoutManager.runningLayouts()){const eventSheet=layout.GetEventSheet();if(!eventSheet)continue;this._runtime.PushCurrentLayout(layout);for(const includeSheet of eventSheet.deepIncludes()){const result=
includeSheet._Trigger(method,inst,behaviorType);ret=ret||result}const result2=eventSheet._Trigger(method,inst,behaviorType);ret=ret||result2;this._runtime.PopCurrentLayout()}this._executingTriggerDepth--;return ret}*_DebugTrigger(layoutManager,method,inst,behaviorType){let ret=false;if(!layoutManager.GetMainRunningLayout())return this.QueueTrigger(method,inst,behaviorType);this._executingTriggerDepth++;for(const layout of layoutManager.runningLayouts()){const eventSheet=layout.GetEventSheet();if(!eventSheet)continue;
this._runtime.PushCurrentLayout(layout);for(const includeSheet of eventSheet.deepIncludes()){const result=yield*includeSheet._DebugTrigger(method,inst,behaviorType);ret=ret||result}const result2=yield*eventSheet._DebugTrigger(method,inst,behaviorType);ret=ret||result2;this._runtime.PopCurrentLayout()}this._executingTriggerDepth--;return ret}QueueTrigger(method,inst,behaviorType){this._queuedTriggers.push([method,inst,behaviorType]);return false}QueueDebugTrigger(method,inst,behaviorType){let resolve=
null;const ret=new Promise(r=>resolve=r);this._queuedDebugTriggers.push([method,inst,behaviorType,resolve]);return ret}*_RunQueuedDebugTriggersGen(){if(this._runtime.HitBreakpoint())throw new Error("should not be in breakpoint");const layoutManager=this._runtime.GetLayoutManager();while(this._queuedDebugTriggers.length){const [method,inst,behaviorType,resolve]=this._queuedDebugTriggers.shift();const ret=yield*this._DebugTrigger(layoutManager,method,inst,behaviorType);resolve(ret)}}async RunQueuedDebugTriggersAsync(){for(const breakEventObject of this._RunQueuedDebugTriggersGen())await this._runtime.DebugBreak(breakEventObject)}_FastTrigger(layoutManager,
method,inst,value){let ret=false;const layout=layoutManager.GetMainRunningLayout();const eventSheet=layout.GetEventSheet();if(!eventSheet)return;this._executingTriggerDepth++;this._runtime.PushCurrentLayout(layout);const deepIncludes=eventSheet.deepIncludes();for(let i=0,len=deepIncludes.length;i<len;++i){const result=deepIncludes[i]._FastTrigger(method,inst,value);ret=ret||result}const result2=eventSheet._FastTrigger(method,inst,value);ret=ret||result2;this._runtime.PopCurrentLayout();this._executingTriggerDepth--;
return ret}*_DebugFastTrigger(layoutManager,method,inst,value){let ret=false;const layout=layoutManager.GetMainRunningLayout();const eventSheet=layout.GetEventSheet();if(!eventSheet)return;this._executingTriggerDepth++;this._runtime.PushCurrentLayout(layout);const deepIncludes=eventSheet.deepIncludes();for(let i=0,len=deepIncludes.length;i<len;++i){const result=yield*deepIncludes[i]._DebugFastTrigger(method,inst,value);ret=ret||result}const result2=yield*eventSheet._DebugFastTrigger(method,inst,value);
ret=ret||result2;this._runtime.PopCurrentLayout();this._executingTriggerDepth--;return ret}GetTriggerDepth(){return this._executingTriggerDepth}IsInTrigger(){return this.GetTriggerDepth()>0}_IncTriggerDepth(){return++this._executingTriggerDepth}_DecTriggerDepth(){--this._executingTriggerDepth}IsRunningEvents(){return this._runningEventsDepth>0}IsInEventEngine(){return this.IsRunningEvents()||this.IsInTrigger()}_RunQueuedTriggers(layoutManager){for(const [method,inst,behaviorType]of this._queuedTriggers)this._Trigger(layoutManager,
method,inst,behaviorType);C3.clearArray(this._queuedTriggers)}BlockFlushingInstances(e){if(e)this._blockFlushingDepth++;else this._blockFlushingDepth--}IsFlushingBlocked(){return this._blockFlushingDepth>0}ClearSol(solModifiers){for(let i=0,len=solModifiers.length;i<len;++i)solModifiers[i].GetSolStack().Clear()}PushCleanSol(solModifiers){for(let i=0,len=solModifiers.length;i<len;++i)solModifiers[i].GetSolStack().PushClean()}PushCopySol(solModifiers){for(let i=0,len=solModifiers.length;i<len;++i)solModifiers[i].GetSolStack().PushCopy()}PopSol(solModifiers){for(let i=
0,len=solModifiers.length;i<len;++i)solModifiers[i].GetSolStack().Pop()}AddScheduledWait(){const w=C3.New(C3.ScheduledWait,this);this._scheduledWaits.push(w);return w}scheduledWaits(){return this._scheduledWaits}RunScheduledWaits(){if(!this._scheduledWaits.length)return;const frame=this.GetCurrentEventStackFrame();let didAnyRun=false;this._runningEventsDepth++;for(let i=0,len=this._scheduledWaits.length;i<len;++i){const w=this._scheduledWaits[i];if(w._ShouldRun())w._Run(frame);if(w.ShouldRelease())didAnyRun=
true}if(didAnyRun)this._FilterScheduledWaitsToRelease();this._runningEventsDepth--}async DebugRunScheduledWaits(){if(!this._scheduledWaits.length)return;const frame=this.GetCurrentEventStackFrame();let didAnyRun=false;this._runningEventsDepth++;for(let i=0,len=this._scheduledWaits.length;i<len;++i){const w=this._scheduledWaits[i];if(w._ShouldRun())await w._DebugRun(frame);if(w.ShouldRelease())didAnyRun=true}if(didAnyRun)this._FilterScheduledWaitsToRelease();this._runningEventsDepth--}_FilterScheduledWaitsToRelease(){const toRelease=
C3.arrayFilterOut(this._scheduledWaits,w=>w.ShouldRelease());for(const w of toRelease)w.Release()}ClearAllScheduledWaits(){for(const w of this._scheduledWaits)w.Release();C3.clearArray(this._scheduledWaits)}RemoveInstancesFromScheduledWaits(s){for(const w of this._scheduledWaits)w.RemoveInstances(s)}AddAsyncActionPromise(p){this._asyncActionPromises.push(p)}ClearAsyncActionPromises(){C3.clearArray(this._asyncActionPromises)}GetPromiseForAllAsyncActions(){const ret=Promise.all(this._asyncActionPromises);
this._asyncActionPromises=[];return ret}_SaveToJson(){return{"groups":this._SaveGroupsToJson(),"cnds":this._SaveCndsToJson(),"acts":this._SaveActsToJson(),"vars":this._SaveVarsToJson(),"waits":this._SaveScheduledWaitsToJson()}}_LoadFromJson(o){this._LoadGroupsFromJson(o["groups"]);this._LoadCndsFromJson(o["cnds"]);this._LoadActsFromJson(o["acts"]);this._LoadVarsFromJson(o["vars"]);this._LoadScheduledWaitsFromJson(o["waits"])}_SaveGroupsToJson(){const o={};for(const group of this.GetAllGroups())o[group.GetSID().toString()]=
group.IsGroupActive();return o}_LoadGroupsFromJson(o){for(const [sidStr,data]of Object.entries(o)){const sid=parseInt(sidStr,10);const group=this.GetEventGroupBySID(sid);if(group)group.SetGroupActive(data)}}_SaveCndsToJson(){const o={};for(const [sid,cnd]of this._cndsBySid){const data=cnd._SaveToJson();if(data)o[sid.toString()]=data}return o}_LoadCndsFromJson(o){const map=new Map;for(const [sidStr,data]of Object.entries(o))map.set(parseInt(sidStr,10),data);for(const [sid,cnd]of this._cndsBySid)cnd._LoadFromJson(map.get(sid)||
null)}_SaveActsToJson(){const o={};for(const [sid,act]of this._actsBySid){const data=act._SaveToJson();if(data)o[sid.toString()]=data}return o}_LoadActsFromJson(o){const map=new Map;for(const [sidStr,data]of Object.entries(o))map.set(parseInt(sidStr,10),data);for(const [sid,act]of this._actsBySid)act._LoadFromJson(map.get(sid)||null)}_SaveVarsToJson(){const o={};for(const [sid,eventVar]of this._eventVarsBySid)if(!eventVar.IsConstant()&&(eventVar.IsGlobal()||eventVar.IsStatic()))o[sid.toString()]=
eventVar.GetValue();return o}_LoadVarsFromJson(o){for(const [sidStr,data]of Object.entries(o)){const sid=parseInt(sidStr,10);const eventVar=this.GetEventVariableBySID(sid);if(eventVar)eventVar.SetValue(data)}}_SaveScheduledWaitsToJson(){return this._scheduledWaits.filter(w=>!w.IsPromise()).map(w=>w._SaveToJson())}_LoadScheduledWaitsFromJson(arr){this.ClearAllScheduledWaits();for(const data of arr){const sw=C3.ScheduledWait._CreateFromJson(this,data);if(sw)this._scheduledWaits.push(sw)}}_GetPerfRecords(){return[...this._runtime.GetLayoutManager().runningLayouts()].map(l=>
l.GetEventSheet()).filter(eventSheet=>eventSheet).map(e=>e._GetPerfRecord())}FindFirstFunctionBlockParent(parent){while(parent){const scopeParent=parent.GetScopeParent();if(scopeParent instanceof C3.FunctionBlock)return scopeParent;parent=scopeParent}return null}_InvokeFunctionFromJS(name,params){if(!Array.isArray(params))params=[];const functionBlock=this.GetFunctionBlockByName(name.toLowerCase());if(!functionBlock)return null;if(!functionBlock.IsEnabled())return functionBlock.GetDefaultReturnValue();
const functionParameters=functionBlock.GetFunctionParameters();if(params.length<functionParameters.length){params=params.slice(0);do params.push(functionParameters[params.length].GetInitialValue());while(params.length<functionParameters.length)}const callEventBlock=functionBlock.GetEventBlock();return callEventBlock.RunAsExpressionFunctionCall(callEventBlock.GetSolModifiersIncludingParents(),functionBlock.GetReturnType(),functionBlock.GetDefaultReturnValue(),...params)}};

}

// events/eventSheet.js
{
'use strict';const C3=self.C3;
C3.EventSheet=class EventSheet extends C3.DefendedBase{constructor(eventSheetManager,data){super();this._eventSheetManager=eventSheetManager;this._runtime=eventSheetManager.GetRuntime();this._name=data[0];this._events=[];this._triggers=new Map;this._fastTriggers=new Map;this._eventsByDisplayNumber=new Map;this._hasRun=false;this._shallowIncludes=[];this._deepIncludes=[];this._alreadyIncludedSheets=new Set;for(const eventData of data[1])this._CreateEvent(eventData,null,this._events);this._perfRecord=
this._runtime.IsDebug()?{type:"sheet",name:this._name,totalTimeCounter:0,children:[]}:null}Release(){this._eventSheetManager=null;this._runtime=null}_CreateEvent(eventData,parent,nontriggers){switch(eventData[0]){case 0:case 3:this._CreateEventBlock(eventData,parent,nontriggers);break;case 1:this._CreateEventVariable(eventData,parent,nontriggers);break;case 2:this._CreateInclude(eventData,parent,nontriggers);break;case 4:this._CreateFunctionBlock(eventData,parent);break;case 5:this._CreateScriptBlock(eventData,
parent,nontriggers);break;default:throw new Error("invalid event type");}}_CreateEventBlock(data,parent,nontriggers){const eventBlock=C3.EventBlock.Create(this,parent,data);if(eventBlock.IsOrBlock()){nontriggers.push(eventBlock);const conditions=eventBlock.GetConditions();for(let i=0,len=conditions.length;i<len;++i)if(conditions[i].IsTrigger())this._InitTrigger(eventBlock,i)}else if(eventBlock.IsTrigger())this._InitTrigger(eventBlock,0);else nontriggers.push(eventBlock)}_CreateFunctionBlock(data,
parent){const functionBlock=C3.FunctionBlock.Create(this,parent,data);this._eventSheetManager._RegisterFunctionBlock(functionBlock)}_CreateEventVariable(data,parent,nontriggers){const v=C3.EventVariable.Create(this,parent,data);nontriggers.push(v)}_CreateInclude(data,parent,nontriggers){const include=C3.EventInclude.Create(this,parent,data);nontriggers.push(include)}_CreateScriptBlock(data,parent,nontriggers){const scriptBlock=C3.EventScript.Create(this,parent,data);nontriggers.push(scriptBlock)}_InitTrigger(eventBlock,
i){if(!eventBlock.IsOrBlock())this._eventSheetManager._AddTriggerToPostInit(eventBlock);const cnd=eventBlock.GetConditionAt(i);const func=cnd._GetFunc();const objectClass=cnd.GetObjectClass();if(cnd.IsFastTrigger()){let methodMap=this._fastTriggers.get(objectClass);if(!methodMap){methodMap=new Map;this._fastTriggers.set(objectClass,methodMap)}const value=cnd.GetFastTriggerValue().toLowerCase();let valueMap=methodMap.get(func);if(!valueMap){valueMap=new Map;methodMap.set(func,valueMap)}let triggerArr=
valueMap.get(value);if(!triggerArr){triggerArr=[];valueMap.set(value,triggerArr)}triggerArr.push([eventBlock,i])}else{let ocInfo=this._triggers.get(objectClass);if(!ocInfo){ocInfo={methodMap:new Map,behaviors:new Map};this._triggers.set(objectClass,ocInfo)}const behaviorType=cnd.GetBehaviorType();let methodMap;if(behaviorType){methodMap=ocInfo.behaviors.get(behaviorType);if(!methodMap){methodMap=new Map;ocInfo.behaviors.set(behaviorType,methodMap)}}else methodMap=ocInfo.methodMap;let triggerArr=methodMap.get(func);
if(!triggerArr){triggerArr=[];methodMap.set(func,triggerArr)}triggerArr.push([eventBlock,i])}}_PostInit(){const events=this._events;for(let i=0,len=events.length;i<len;++i){const hasElseBlock=i<len-1&&events[i+1]instanceof C3.EventBlock&&events[i+1].IsElseBlock();events[i]._PostInit(hasElseBlock)}}_AddShallowInclude(include){this._shallowIncludes.push(include)}_UpdateDeepIncludes(){C3.clearArray(this._deepIncludes);this._AddDeepIncludes(this);this._alreadyIncludedSheets.clear()}_AddDeepIncludes(rootSheet){const deepIncludes=
rootSheet._deepIncludes;const alreadyIncludedSheets=rootSheet._alreadyIncludedSheets;for(const include of this._shallowIncludes){const sheet=include.GetIncludeSheet();if(!include.IsActive()||rootSheet===sheet||alreadyIncludedSheets.has(sheet))continue;alreadyIncludedSheets.add(sheet);sheet._AddDeepIncludes(rootSheet);deepIncludes.push(sheet)}}deepIncludes(){return this._deepIncludes}GetEventSheetManager(){return this._eventSheetManager}GetRuntime(){return this._runtime}GetName(){return this._name}_RegisterEventByDisplayNumber(eventBlock,
displayNumber){this._eventsByDisplayNumber.set(displayNumber,eventBlock)}_GetEventByDisplayNumber(displayNumber){return this._eventsByDisplayNumber.get(displayNumber)||null}_ResetHasRunFlag(){this._hasRun=false}Run(){if(this._hasRun)return;const runtime=this._runtime;const profile=runtime.IsCPUProfiling();const startTime=profile?performance.now():0;this._hasRun=true;const eventSheetManager=this.GetEventSheetManager();const frame=eventSheetManager.GetCurrentEventStackFrame();for(const e of this._events){e.Run(frame);
eventSheetManager.ClearSol(e.GetSolModifiers());eventSheetManager.ClearAsyncActionPromises();runtime.FlushPendingInstances()}frame.Reset(null);if(profile)this._perfRecord.totalTimeCounter+=performance.now()-startTime}*DebugRun(){if(this._hasRun)return;this._hasRun=true;const runtime=this._runtime;const eventSheetManager=this.GetEventSheetManager();const frame=eventSheetManager.GetCurrentEventStackFrame();for(const e of this._events){yield*e.DebugRun(frame);eventSheetManager.ClearSol(e.GetSolModifiers());
eventSheetManager.ClearAsyncActionPromises();runtime.FlushPendingInstances()}frame.Reset(null)}_Trigger(method,inst,behaviorType){if(inst){const objectClass=inst.GetObjectClass();let ret=false;let r=this._TriggerForClass(method,inst,objectClass,behaviorType);ret=ret||r;for(const family of objectClass.GetFamilies()){r=this._TriggerForClass(method,inst,family,behaviorType);ret=ret||r}}else return this._TriggerForClass(method,inst,null,null)}_TriggerForClass(method,inst,objectClass,behaviorType){const ocInfo=
this._triggers.get(objectClass);if(!ocInfo)return false;const methodMap=behaviorType?ocInfo.behaviors.get(behaviorType):ocInfo.methodMap;if(!methodMap)return false;const triggerList=methodMap.get(method);if(!triggerList)return false;let ret=false;for(const [trigger,index]of triggerList){const r=this._ExecuteTrigger(inst,trigger,index);ret=ret||r}return ret}*_DebugTrigger(method,inst,behaviorType){if(inst){const objectClass=inst.GetObjectClass();let ret=false;let r=yield*this._DebugTriggerForClass(method,
inst,objectClass,behaviorType);ret=ret||r;for(const family of objectClass.GetFamilies()){r=yield*this._DebugTriggerForClass(method,inst,family,behaviorType);ret=ret||r}}else return yield*this._DebugTriggerForClass(method,inst,null,null)}*_DebugTriggerForClass(method,inst,objectClass,behaviorType){const ocInfo=this._triggers.get(objectClass);if(!ocInfo)return false;const methodMap=behaviorType?ocInfo.behaviors.get(behaviorType):ocInfo.methodMap;if(!methodMap)return false;const triggerList=methodMap.get(method);
if(!triggerList)return false;let ret=false;for(const [trigger,index]of triggerList){let r;if(trigger.DebugCanRunFast())r=this._ExecuteTrigger(inst,trigger,index);else r=yield*this._DebugExecuteTrigger(inst,trigger,index);ret=ret||r}return ret}_FastTrigger(method,inst,value){const objectClass=inst.GetObjectClass();const methodMap=this._fastTriggers.get(objectClass);if(!methodMap)return false;const valueMap=methodMap.get(method);if(!valueMap)return false;const triggerList=valueMap.get(value);if(!triggerList)return false;
let ret=false;for(let i=0,len=triggerList.length;i<len;++i){const t=triggerList[i];const r=this._ExecuteTrigger(null,t[0],t[1]);ret=ret||r}return ret}*_DebugFastTrigger(method,inst,value){const objectClass=inst.GetObjectClass();const methodMap=this._fastTriggers.get(objectClass);if(!methodMap)return false;const valueMap=methodMap.get(method);if(!valueMap)return false;const triggerList=valueMap.get(value);if(!triggerList)return false;let ret=false;for(let i=0,len=triggerList.length;i<len;++i){const t=
triggerList[i];const trigger=t[0];const index=t[1];let r;if(trigger.DebugCanRunFast())r=this._ExecuteTrigger(null,trigger,index);else r=yield*this._DebugExecuteTrigger(null,trigger,index);ret=ret||r}return ret}_ExecuteTrigger(inst,trigger,index){const runtime=this._runtime;const eventSheetManager=this._eventSheetManager;const currentEvent=eventSheetManager.GetCurrentEvent();const eventStack=eventSheetManager.GetEventStack();const triggerDepth=eventSheetManager.GetTriggerDepth();let ret=false;if(currentEvent)eventSheetManager.PushCleanSol(currentEvent.GetSolModifiersIncludingParents());
eventSheetManager.PushCleanSol(trigger.GetSolModifiersIncludingParents());const isRecursive=triggerDepth>1;if(isRecursive)eventSheetManager.GetLocalVarStack().Push();const frame=eventStack.Push(trigger);if(inst){const objectClass=trigger.GetConditions()[index].GetObjectClass();const sol=objectClass.GetCurrentSol();sol.SetSinglePicked(inst);if(inst.IsInContainer())inst.SetSiblingsSinglePicked()}let okToRun=true;if(trigger.GetParent()){const parents=trigger.GetTriggerParents();for(let i=0,len=parents.length;i<
len;++i)if(!parents[i].RunPreTrigger(frame)){okToRun=false;break}}if(okToRun){runtime.IncrementExecCount();if(trigger.IsOrBlock())trigger.RunOrBlockTrigger(frame,index);else trigger.Run(frame);ret=frame.GetLastEventTrue()}eventStack.Pop();if(isRecursive)eventSheetManager.GetLocalVarStack().Pop();eventSheetManager.PopSol(trigger.GetSolModifiersIncludingParents());if(currentEvent)eventSheetManager.PopSol(currentEvent.GetSolModifiersIncludingParents());if(!currentEvent&&triggerDepth===1){eventSheetManager.ClearAsyncActionPromises();
if(!eventSheetManager.IsFlushingBlocked())runtime.FlushPendingInstances()}return ret}*_DebugExecuteTrigger(inst,trigger,index){const runtime=this._runtime;const eventSheetManager=this._eventSheetManager;const currentEvent=eventSheetManager.GetCurrentEvent();const eventStack=eventSheetManager.GetEventStack();const triggerDepth=eventSheetManager.GetTriggerDepth();let ret=false;if(currentEvent)eventSheetManager.PushCleanSol(currentEvent.GetSolModifiersIncludingParents());eventSheetManager.PushCleanSol(trigger.GetSolModifiersIncludingParents());
const isRecursive=triggerDepth>1;if(isRecursive)eventSheetManager.GetLocalVarStack().Push();const frame=eventStack.Push(trigger);if(inst){const objectClass=trigger.GetConditions()[index].GetObjectClass();const sol=objectClass.GetCurrentSol();sol.SetSinglePicked(inst);if(inst.IsInContainer())inst.SetSiblingsSinglePicked()}let okToRun=true;if(trigger.GetParent()){const parents=trigger.GetTriggerParents();for(let i=0,len=parents.length;i<len;++i)if(!(yield*parents[i].DebugRunPreTrigger(frame))){okToRun=
false;break}}if(okToRun){runtime.IncrementExecCount();if(trigger.IsOrBlock())yield*trigger.DebugRunOrBlockTrigger(frame,index);else yield*trigger.DebugRun(frame);ret=frame.GetLastEventTrue()}eventStack.Pop();if(isRecursive)eventSheetManager.GetLocalVarStack().Pop();eventSheetManager.PopSol(trigger.GetSolModifiersIncludingParents());if(currentEvent)eventSheetManager.PopSol(currentEvent.GetSolModifiersIncludingParents());if(!currentEvent&&triggerDepth===1){eventSheetManager.ClearAsyncActionPromises();
if(!eventSheetManager.IsFlushingBlocked())runtime.FlushPendingInstances()}return ret}_GetPerfRecord(){return this._perfRecord}};

}

// events/eventBlock.js
{
'use strict';const C3=self.C3;const EMPTY_ARRAY=[];function NoActions(frame,index){return true}function*DebugNoActions(frame,index){return true}
C3.EventBlock=class EventBlock extends C3.DefendedBase{constructor(eventSheet,parent,data){super();this._eventSheet=eventSheet;this._runtime=eventSheet.GetRuntime();this._parent=parent;this._scopeParent=null;this._eventStack=this._runtime.GetEventSheetManager().GetEventStack();this._solModifiers=[];this._solModifiersIncludingParents=[];this._hasGotSolModifiersIncludingParents=false;this._isSolWriterAfterCnds=false;this._isTopLevelGroup=false;this._hasElseBlock=false;this._isOrBlock=!!data[2];this._isElseBlock=
false;this._triggerParents=null;this._conditions=[];this._actions=[];this._subEvents=[];this._RunActions=NoActions;this._DebugRunActions=DebugNoActions;this._isGroup=false;this._isInitiallyActive=false;this._groupName="";this._isGroupActive=false;this._containedIncludes=null;this._perfRecord=null;this._sid=data[4];this._displayNumber=data[5];this._eventSheet._RegisterEventByDisplayNumber(this,this._displayNumber);this._debugData=this._runtime.IsDebug()?{isBreakpoint:data[3][0],isBreakable:data[3][1],
canRunAllConditionsFast:false,canRunAllActionsFast:false,canRunAllSubEventsFast:false,canRunSelfFast:false}:null;this.GetEventSheetManager()._RegisterEventBlock(this);if(data[0]===3)this._InitGroup(data[1]);let index=0;for(const cndData of data[6]){const condition=C3.Condition.Create(this,cndData,index++);this._conditions.push(condition);this._AddSolModifier(condition.GetObjectClass())}index=0;for(const actData of data[7]){const action=C3.Action.Create(this,actData,index++);this._actions.push(action)}if(data.length===
9){const subEventsData=data[8];for(const eventData of subEventsData)this._eventSheet._CreateEvent(eventData,this,this._subEvents)}if(this._conditions.length)this._isElseBlock=this._conditions[0].GetObjectClass()===null&&this._conditions[0]._GetFunc()===C3.Plugins.System.Cnds.Else;if(this._conditions.length===0)this._conditions=EMPTY_ARRAY;if(this._actions.length===0)this._actions=EMPTY_ARRAY;if(this._subEvents.length===0)this._subEvents=EMPTY_ARRAY}static Create(eventSheet,parent,data){return C3.New(C3.EventBlock,
eventSheet,parent,data)}_InitGroup(groupData){this._isGroup=true;this._isInitiallyActive=!!groupData[0];this._isGroupActive=this._isInitiallyActive;this._groupName=groupData[1].toLowerCase();this._containedIncludes=[];this.GetEventSheetManager()._RegisterGroup(this);if(this._runtime.IsDebug())this._perfRecord={type:"group",name:groupData[1],totalTimeCounter:0,children:[]}}_AddContainedInclude(include){this._containedIncludes.push(include)}_AddContainerSolModifierToList(objectClass,arr){for(const containerType of objectClass.GetContainer().objectTypes())if(!arr.includes(containerType))arr.push(containerType)}_AddSolModifierToList(objectClass,
arr){if(!objectClass)return;if(!arr.includes(objectClass))arr.push(objectClass);if(objectClass.IsFamily())for(const familyMember of objectClass.GetFamilyMembers()){if(familyMember.IsInContainer())this._AddContainerSolModifierToList(familyMember,arr)}else if(objectClass.IsInContainer())this._AddContainerSolModifierToList(objectClass,arr)}_AddSolModifier(objectClass){this._AddSolModifierToList(objectClass,this._solModifiers)}_AddParentSolModifier(objectClass){this._AddSolModifierToList(objectClass,
this._solModifiersIncludingParents)}SetAllSolModifiers(){this._solModifiers=this._runtime.GetAllObjectClasses()}_PostInit(hasElse){this._hasElseBlock=!!hasElse;this._IdentifyTopLevelGroup();this._IdentifyTriggerParents();for(const c of this._conditions)c._PostInit();if(this._actions.length>0){let hasAnyActionWithReturnType=false;for(const a of this._actions){a._PostInit();if(a.HasReturnType())hasAnyActionWithReturnType=true}if(hasAnyActionWithReturnType){this._RunActions=this._RunActions_ReturnValue;
this._DebugRunActions=this._DebugRunActions_ReturnValue}else{this._RunActions=this._RunActions_Fast;this._DebugRunActions=this._DebugRunActions_Fast}}const subEvents=this._subEvents;for(let i=0,len=subEvents.length;i<len;++i){const hasElseBlock=i<len-1&&subEvents[i+1]instanceof C3.EventBlock&&subEvents[i+1].IsElseBlock();subEvents[i]._PostInit(hasElseBlock)}if(this._debugData)this._UpdateCanRunFast();if(this._perfRecord)this._GetPerfRecordParent()._GetPerfRecord().children.push(this._perfRecord)}_GetPerfRecord(){return this._perfRecord}_GetPerfRecordParent(){let p=
this.GetParent();while(p){if(p.IsGroup())return p;p=p.GetParent()}return this._eventSheet}_UpdateCanRunFast(){const dd=this._debugData;dd.canRunAllConditionsFast=this._conditions.every(c=>c.DebugCanRunFast());dd.canRunAllActionsFast=this._actions.every(a=>a.DebugCanRunFast());dd.canRunAllSubEventsFast=this._subEvents.every(s=>s.DebugCanRunFast());dd.canRunSelfFast=dd.canRunAllConditionsFast&&dd.canRunAllActionsFast&&dd.canRunAllSubEventsFast}_UpdateCanRunFastRecursive(){let e=this;do{e._UpdateCanRunFast();
e=e.GetParent()}while(e)}_IdentifyTopLevelGroup(){if(!this.IsGroup())return;let p=this.GetParent();this._isTopLevelGroup=true;while(p){if(!p.IsGroup()){this._isTopLevelGroup=false;break}p=p.GetParent()}}_IdentifySolModifiersIncludingParents(){const allObjectClasses=this._runtime.GetAllObjectClasses();if(this._solModifiers===allObjectClasses)this._solModifiersIncludingParents=allObjectClasses;else{this._solModifiersIncludingParents=C3.cloneArray(this._solModifiers);let p=this.GetParent();while(p){for(const o of p._solModifiers)this._AddParentSolModifier(o);
p=p.GetParent()}const eventSheetManager=this.GetEventSheetManager();this._solModifiers=eventSheetManager._DeduplicateSolModifierList(this._solModifiers);this._solModifiersIncludingParents=eventSheetManager._DeduplicateSolModifierList(this._solModifiersIncludingParents)}}_IdentifyTriggerParents(){if(!this.HasAnyTriggeredCondition())return;this._triggerParents=[];let p=this.GetParent();while(p){this._triggerParents.push(p);p=p.GetParent()}this._triggerParents.reverse()}SetSolWriterAfterCnds(){this._isSolWriterAfterCnds=
true;if(this._parent)this._parent.SetSolWriterAfterCnds()}IsSolWriterAfterCnds(){return this._isSolWriterAfterCnds}GetSolModifiers(){return this._solModifiers}GetSolModifiersIncludingParents(){if(!this._hasGotSolModifiersIncludingParents){this._hasGotSolModifiersIncludingParents=true;this._IdentifySolModifiersIncludingParents()}return this._solModifiersIncludingParents}HasSolModifier(objectClass){return this._solModifiers.includes(objectClass)}GetTriggerParents(){return this._triggerParents}GetEventSheet(){return this._eventSheet}GetEventSheetManager(){return this._eventSheet.GetEventSheetManager()}GetRuntime(){return this._runtime}GetParent(){return this._parent}_SetScopeParent(p){this._scopeParent=
p}GetScopeParent(){return this._scopeParent||this._parent}GetDisplayNumber(){return this._displayNumber}IsDebugBreakable(){return this._debugData&&this._debugData.isBreakable}IsDebugBreakpoint(){return this.IsDebugBreakable()&&this._debugData.isBreakpoint}_SetDebugBreakpoint(b){this._debugData.isBreakpoint=!!b;this._UpdateCanRunFastRecursive()}IsGroup(){return this._isGroup}IsTopLevelGroup(){return this._isTopLevelGroup}IsElseBlock(){return this._isElseBlock}HasElseBlock(){return this._hasElseBlock}GetGroupName(){return this._groupName}IsGroupActive(){return this._isGroupActive}ResetInitialActivation(){this.SetGroupActive(this._isInitiallyActive)}SetGroupActive(a){a=
!!a;if(!this._isGroup)throw new Error("not a group");if(this._isGroupActive===a)return;this._isGroupActive=a;for(const include of this._containedIncludes)include.UpdateActive();if(this._containedIncludes.length){const currentLayout=this._runtime.GetCurrentLayout();const mainEventSheet=currentLayout.GetEventSheet();if(mainEventSheet)mainEventSheet._UpdateDeepIncludes()}}GetSID(){return this._sid}IsOrBlock(){return this._isOrBlock}IsTrigger(){return this._conditions.length&&this._conditions[0].IsTrigger()}IsForFunctionBlock(){return this._scopeParent&&
this._scopeParent instanceof C3.FunctionBlock}HasAnyTriggeredCondition(){return this.IsForFunctionBlock()||this._conditions.some(c=>c.IsTrigger())}GetConditions(){return this._conditions}GetConditionCount(){return this._conditions.length}GetConditionAt(i){i=Math.floor(i);if(i<0||i>=this._conditions.length)throw new RangeError("invalid condition index");return this._conditions[i]}GetConditionByDebugIndex(i){return this.GetConditionAt(i)}IsFirstConditionOfType(cnd){let i=cnd.GetIndex();if(i===0)return true;
--i;for(;i>=0;--i)if(this._conditions[i].GetObjectClass()===cnd.GetObjectClass())return false;return true}GetActions(){return this._actions}GetActionCount(){return this._actions.length}GetActionAt(i){i=Math.floor(i);if(i<0||i>=this._actions.length)throw new RangeError("invalid action index");return this._actions[i]}GetActionByDebugIndex(i){i=Math.floor(i);const ret=this._actions.find(a=>a.GetDebugIndex()===i);if(!ret)throw new RangeError("invalid action debug index");return ret}_HasActionIndex(i){i=
Math.floor(i);return i>=0&&i<this._actions.length}GetSubEvents(){return this._subEvents}_GetAllLocalVariablesInScope(){return this._subEvents.filter(e=>e instanceof C3.EventVariable)}RunPreTrigger(frame){frame.SetCurrentEvent(this);let isAnyTrue=false;const conditions=this._conditions;for(let i=0,len=conditions.length;i<len;++i){const c=conditions[i];frame.SetConditionIndex(i);if(c.IsLooping())throw new Error("trigger cannot be used as sub-event to a loop");if(c.Run())isAnyTrue=true;else if(!this._isOrBlock)return false}return this._isOrBlock?
isAnyTrue:true}RunOrBlockTrigger(frame,index){frame.SetCurrentEvent(this);if(this._conditions[index].Run()){if(this._RunActions(frame,0))this._RunSubEvents(frame);frame.SetLastEventTrue(true)}}*DebugRunPreTrigger(frame){frame.SetCurrentEvent(this);let isAnyTrue=false;const conditions=this._conditions;for(let i=0,len=conditions.length;i<len;++i){const c=conditions[i];frame.SetConditionIndex(i);if(c.IsLooping())throw new Error("trigger cannot be used as sub-event to a loop");let ret;if(c.DebugCanRunFast())ret=
c.Run();else ret=yield*c.DebugRun();if(ret)isAnyTrue=true;else if(!this._isOrBlock)return false}return this._isOrBlock?isAnyTrue:true}*DebugRunOrBlockTrigger(frame,index){frame.SetCurrentEvent(this);const c=this._conditions[index];let ret;if(c.DebugCanRunFast())ret=c.Run();else ret=yield*c.DebugRun();if(ret){let actRet;if(this.DebugCanRunActionsFast())actRet=this._RunActions(frame,0);else actRet=yield*this._DebugRunActions(frame,0);if(actRet)if(this.DebugCanRunSubEventsFast())this._RunSubEvents();
else yield*this._DebugRunSubEvents();frame.SetLastEventTrue(true)}}Run(frame){frame.SetCurrentEvent(this);if(!this._isElseBlock)frame.SetElseBranchRan(false);if(this._isOrBlock)this._RunOrBlock(frame);else this._RunAndBlock(frame)}*DebugRun(frame){if(this.IsDebugBreakpoint()||this._runtime.DebugBreakNext())yield this;frame.SetCurrentEvent(this);if(!this._isElseBlock)frame.SetElseBranchRan(false);if(this._isOrBlock)yield*this._DebugRunOrBlock(frame);else yield*this._DebugRunAndBlock(frame)}_RunOrBlock(frame){const conditions=
this._conditions;let isAnyTrue=conditions.length===0;for(let i=0,len=conditions.length;i<len;++i){const c=conditions[i];if(c.IsTrigger())continue;frame.SetConditionIndex(i);const result=c.Run();isAnyTrue=isAnyTrue||result}frame.SetLastEventTrue(isAnyTrue);if(isAnyTrue){if(this._RunActions(frame,0))this._RunSubEvents(frame);if(this._hasElseBlock)frame.SetElseBranchRan(true)}}*_DebugRunOrBlock(frame){const conditions=this._conditions;let isAnyTrue=conditions.length===0;for(let i=0,len=conditions.length;i<
len;++i){const c=conditions[i];if(c.IsTrigger())continue;frame.SetConditionIndex(i);let ret;if(c.DebugCanRunFast())ret=c.Run();else ret=yield*c.DebugRun();isAnyTrue=isAnyTrue||ret}frame.SetLastEventTrue(isAnyTrue);if(isAnyTrue){let actRet;if(this.DebugCanRunActionsFast())actRet=this._RunActions(frame,0);else actRet=yield*this._DebugRunActions(frame,0);if(actRet)if(this.DebugCanRunSubEventsFast())this._RunSubEvents();else yield*this._DebugRunSubEvents();if(this._hasElseBlock)frame.SetElseBranchRan(true)}}_RunAndBlock(frame){const conditions=
this._conditions;for(let i=0,len=conditions.length;i<len;++i){const c=conditions[i];frame.SetConditionIndex(i);const result=c.Run();if(!result){frame.SetLastEventTrue(false);return}}frame.SetLastEventTrue(true);if(this._RunActions(frame,0))this._RunSubEvents(frame);if(frame.GetLastEventTrue()&&this._hasElseBlock)frame.SetElseBranchRan(true)}*_DebugRunAndBlock(frame){const conditions=this._conditions;for(let i=0,len=conditions.length;i<len;++i){const c=conditions[i];frame.SetConditionIndex(i);let ret;
if(c.DebugCanRunFast())ret=c.Run();else ret=yield*c.DebugRun();if(!ret){frame.SetLastEventTrue(false);return}}frame.SetLastEventTrue(true);let actRet;if(this.DebugCanRunActionsFast())actRet=this._RunActions(frame,0);else actRet=yield*this._DebugRunActions(frame,0);if(actRet)if(this.DebugCanRunSubEventsFast())this._RunSubEvents();else yield*this._DebugRunSubEvents();if(frame.GetLastEventTrue()&&this._hasElseBlock)frame.SetElseBranchRan(true)}_RunActions_Fast(frame,startIndex){const actions=this._actions;
for(let i=startIndex,len=actions.length;i<len;++i){const a=actions[i];frame.SetActionIndex(i);a.Run()}return true}*_DebugRunActions_Fast(frame,startIndex){const actions=this._actions;for(let i=startIndex,len=actions.length;i<len;++i){const a=actions[i];frame.SetActionIndex(i);if(a.DebugCanRunFast())a.Run();else yield*a.DebugRun()}return true}_RunActions_ReturnValue(frame,startIndex){const eventSheetManager=this.GetEventSheetManager();const actions=this._actions;for(let i=startIndex,len=actions.length;i<
len;++i){const a=actions[i];frame.SetActionIndex(i);const ret=a.Run();if(a.CanBailOut()&&ret===true)return false;else if(a.IsAsync()&&ret instanceof Promise)eventSheetManager.AddAsyncActionPromise(ret)}return true}*_DebugRunActions_ReturnValue(frame,startIndex){const eventSheetManager=this.GetEventSheetManager();const actions=this._actions;for(let i=startIndex,len=actions.length;i<len;++i){const a=actions[i];frame.SetActionIndex(i);let ret;if(a.DebugCanRunFast())ret=a.Run();else ret=yield*a.DebugRun();
if(a.CanBailOut()&&ret===true)return false;else if(a.IsAsync()&&ret instanceof Promise)eventSheetManager.AddAsyncActionPromise(ret)}return true}_ResumeActionsAndSubEvents(frame){if(this._RunActions(frame,frame.GetActionIndex()))this._RunSubEvents()}*_DebugResumeActionsAndSubEvents(frame){if(yield*this._DebugRunActions(frame,frame.GetActionIndex()))yield*this._DebugRunSubEvents()}_RunSubEvents(){if(!this._subEvents.length)return;const profile=this.IsGroup()&&this._runtime.IsCPUProfiling();const startTime=
profile?performance.now():0;const eventStack=this._eventStack;const frame=eventStack.Push(this);if(this._isSolWriterAfterCnds)this._RunSubEvents_SolWriterAfterCnds(frame);else this._RunSubEvents_Fast(frame);eventStack.Pop();if(profile)this._perfRecord.totalTimeCounter+=performance.now()-startTime}_RunSubEvents_SolWriterAfterCnds(frame){const isGroup=this._isGroup;const isTopLevelGroup=this._isTopLevelGroup;const eventSheetManager=this.GetEventSheetManager();const subEvents=this._subEvents;for(let i=
0,len=subEvents.length,last=len-1;i<len;++i){const e=subEvents[i];const solModifiers=e.GetSolModifiers();const copySol=!isTopLevelGroup||!isGroup&&i<last;if(copySol)eventSheetManager.PushCopySol(solModifiers);e.Run(frame);if(copySol)eventSheetManager.PopSol(solModifiers);else eventSheetManager.ClearSol(solModifiers)}}_RunSubEvents_Fast(frame){const subEvents=this._subEvents;for(let i=0,len=subEvents.length;i<len;++i)subEvents[i].Run(frame)}*_DebugRunSubEvents(){if(!this._subEvents.length)return;const eventStack=
this._eventStack;const frame=eventStack.Push(this);if(this._isSolWriterAfterCnds)yield*this._DebugRunSubEvents_SolWriterAfterCnds(frame);else yield*this._DebugRunSubEvents_Fast(frame);eventStack.Pop()}*_DebugRunSubEvents_SolWriterAfterCnds(frame){const isGroup=this._isGroup;const isTopLevelGroup=this._isTopLevelGroup;const eventSheetManager=this.GetEventSheetManager();const subEvents=this._subEvents;for(let i=0,len=subEvents.length,last=len-1;i<len;++i){const e=subEvents[i];const solModifiers=e.GetSolModifiers();
const copySol=!isTopLevelGroup||!isGroup&&i<last;if(copySol)eventSheetManager.PushCopySol(solModifiers);yield*e.DebugRun(frame);if(copySol)eventSheetManager.PopSol(solModifiers);else eventSheetManager.ClearSol(solModifiers)}}*_DebugRunSubEvents_Fast(frame){const subEvents=this._subEvents;for(let i=0,len=subEvents.length;i<len;++i)yield*subEvents[i].DebugRun(frame)}Retrigger(oldFrame,newFrame){this._runtime.IncrementExecCount();newFrame.ResetQuick();const conditions=this._conditions;if(!this.IsOrBlock())for(let i=
oldFrame.GetConditionIndex()+1,len=conditions.length;i<len;++i){const c=conditions[i];newFrame.SetConditionIndex(i);const result=c.Run();if(!result)return false}if(this._RunActions(newFrame,0))this._RunSubEvents(newFrame);return true}*DebugRetrigger(oldFrame,newFrame){this._runtime.IncrementExecCount();newFrame.ResetQuick();const conditions=this._conditions;if(!this.IsOrBlock())for(let i=oldFrame.GetConditionIndex()+1,len=conditions.length;i<len;++i){const c=conditions[i];newFrame.SetConditionIndex(i);
let ret;if(c.DebugCanRunFast())ret=c.Run();else ret=yield*c.DebugRun();if(!ret)return false}let actRet;if(this.DebugCanRunActionsFast())actRet=this._RunActions(newFrame,0);else actRet=yield*this._DebugRunActions(newFrame,0);if(actRet)if(this.DebugCanRunSubEventsFast())this._RunSubEvents();else yield*this._DebugRunSubEvents();return true}DebugCanRunFast(){return!this.IsDebugBreakpoint()&&!this._runtime.DebugBreakNext()&&this._debugData.canRunSelfFast}DebugCanRunActionsFast(){return!this._runtime.DebugBreakNext()&&
this._debugData.canRunAllActionsFast}DebugCanRunSubEventsFast(){return!this._runtime.DebugBreakNext()&&this._debugData.canRunAllSubEventsFast}_CheckParentsOKToRun(frame){if(this.GetParent()){const parents=this.GetTriggerParents();for(let i=0,len=parents.length;i<len;++i)if(!parents[i].RunPreTrigger(frame))return false}return true}*_DebugCheckParentsOKToRun(frame){if(this.GetParent()){const parents=this.GetTriggerParents();for(let i=0,len=parents.length;i<len;++i)if(!(yield*parents[i].DebugRunPreTrigger(frame)))return false}return true}_EvaluateFunctionCallParameters(eventSheetManager,
parameters,isRecursive){if(parameters.length>0)if(isRecursive){const paramResults=parameters.map(p=>p.Get(0));eventSheetManager.GetLocalVarStack().Push();this._scopeParent.SetFunctionParameters(paramResults)}else this._scopeParent.EvaluateFunctionParameters(parameters);else if(isRecursive)eventSheetManager.GetLocalVarStack().Push()}RunAsFunctionCall(combinedSolModifiers,parameters){let ret;let asyncId;const hasAnySolModifiers=combinedSolModifiers.length>0;const runtime=this._runtime;const eventStack=
this._eventStack;const eventSheetManager=runtime.GetEventSheetManager();const triggerDepth=eventSheetManager._IncTriggerDepth();const isRecursive=triggerDepth>1;this._EvaluateFunctionCallParameters(eventSheetManager,parameters,isRecursive);if(hasAnySolModifiers)eventSheetManager.PushCleanSol(combinedSolModifiers);const frame=eventStack.Push(this);if(this._CheckParentsOKToRun(frame)){runtime.IncrementExecCount();frame.SetCurrentEvent(this);const isAsync=this._scopeParent.IsAsync();if(isAsync)[asyncId,
ret]=this._scopeParent.StartAsyncFunctionCall();this._RunAndBlock(frame);if(isAsync)this._scopeParent.MaybeFinishAsyncFunctionCall(asyncId)}eventStack.Pop();if(isRecursive)eventSheetManager.GetLocalVarStack().Pop();if(hasAnySolModifiers)eventSheetManager.PopSol(combinedSolModifiers);eventSheetManager._DecTriggerDepth();return ret}*DebugRunAsFunctionCall(combinedSolModifiers,parameters){let ret;let asyncId;if(this.IsDebugBreakpoint()||this._runtime.DebugBreakNext())yield this;const hasAnySolModifiers=
combinedSolModifiers.length>0;const runtime=this._runtime;const eventStack=this._eventStack;const eventSheetManager=runtime.GetEventSheetManager();const triggerDepth=eventSheetManager._IncTriggerDepth();const isRecursive=triggerDepth>1;this._EvaluateFunctionCallParameters(eventSheetManager,parameters,isRecursive);if(hasAnySolModifiers)eventSheetManager.PushCleanSol(combinedSolModifiers);const frame=eventStack.Push(this);if(yield*this._DebugCheckParentsOKToRun(frame)){runtime.IncrementExecCount();
frame.SetCurrentEvent(this);const isAsync=this._scopeParent.IsAsync();if(isAsync)[asyncId,ret]=this._scopeParent.StartAsyncFunctionCall();yield*this._DebugRunAndBlock(frame);if(isAsync)this._scopeParent.MaybeFinishAsyncFunctionCall(asyncId)}eventStack.Pop();if(isRecursive)eventSheetManager.GetLocalVarStack().Pop();if(hasAnySolModifiers)eventSheetManager.PopSol(combinedSolModifiers);eventSheetManager._DecTriggerDepth();return ret}RunAsMappedFunctionCall(paramResults){const solModifiers=this.GetSolModifiersIncludingParents();
const hasAnySolModifiers=solModifiers.length>0;const runtime=this._runtime;const eventStack=this._eventStack;const eventSheetManager=runtime.GetEventSheetManager();const triggerDepth=eventSheetManager._IncTriggerDepth();const isRecursive=triggerDepth>1;if(isRecursive)eventSheetManager.GetLocalVarStack().Push();this._scopeParent.SetFunctionParameters(paramResults);if(hasAnySolModifiers)eventSheetManager.PushCleanSol(solModifiers);const frame=eventStack.Push(this);if(this._CheckParentsOKToRun(frame)){runtime.IncrementExecCount();
frame.SetCurrentEvent(this);this._RunAndBlock(frame)}eventStack.Pop();if(isRecursive)eventSheetManager.GetLocalVarStack().Pop();if(hasAnySolModifiers)eventSheetManager.PopSol(solModifiers);eventSheetManager._DecTriggerDepth()}*DebugRunAsMappedFunctionCall(paramResults){if(this.IsDebugBreakpoint()||this._runtime.DebugBreakNext())yield this;const solModifiers=this.GetSolModifiersIncludingParents();const hasAnySolModifiers=solModifiers.length>0;const runtime=this._runtime;const eventStack=this._eventStack;
const eventSheetManager=runtime.GetEventSheetManager();const triggerDepth=eventSheetManager._IncTriggerDepth();const isRecursive=triggerDepth>1;if(isRecursive)eventSheetManager.GetLocalVarStack().Push();this._scopeParent.SetFunctionParameters(paramResults);if(hasAnySolModifiers)eventSheetManager.PushCleanSol(solModifiers);const frame=eventStack.Push(this);if(yield*this._DebugCheckParentsOKToRun(frame)){runtime.IncrementExecCount();frame.SetCurrentEvent(this);yield*this._DebugRunAndBlock(frame)}eventStack.Pop();
if(isRecursive)eventSheetManager.GetLocalVarStack().Pop();if(hasAnySolModifiers)eventSheetManager.PopSol(solModifiers);eventSheetManager._DecTriggerDepth()}RunAsExpressionFunctionCall(combinedSolModifiers,returnType,defaultReturnValue,...paramResults){let ret;let asyncId;const hasAnySolModifiers=combinedSolModifiers.length>0;const runtime=this._runtime;const eventStack=this._eventStack;const eventSheetManager=runtime.GetEventSheetManager();const triggerDepth=eventSheetManager._IncTriggerDepth();const isRecursive=
triggerDepth>1;if(isRecursive)eventSheetManager.GetLocalVarStack().Push();if(paramResults.length>0)this._scopeParent.SetFunctionParameters(paramResults);if(hasAnySolModifiers)eventSheetManager.PushCleanSol(combinedSolModifiers);const frame=eventStack.Push(this);frame.InitCallFunctionExpression(returnType,defaultReturnValue);eventStack.PushExpFunc(frame);runtime.SetDebuggingEnabled(false);if(this._CheckParentsOKToRun(frame)){runtime.IncrementExecCount();frame.SetCurrentEvent(this);const isAsync=this._scopeParent.IsAsync();
if(isAsync)[asyncId,ret]=this._scopeParent.StartAsyncFunctionCall();this._RunAndBlock(frame);if(isAsync)this._scopeParent.MaybeFinishAsyncFunctionCall(asyncId)}runtime.SetDebuggingEnabled(true);eventStack.Pop();eventStack.PopExpFunc();if(isRecursive)eventSheetManager.GetLocalVarStack().Pop();if(hasAnySolModifiers)eventSheetManager.PopSol(combinedSolModifiers);eventSheetManager._DecTriggerDepth();return ret||frame.GetFunctionReturnValue()}};

}

// events/eventScript.js
{
'use strict';const C3=self.C3;const EMPTY_SOL_MODIFIERS=[];let hadUserScriptException=false;
C3.EventScript=class EventScript extends C3.DefendedBase{constructor(eventSheet,parent,data){super();const runtime=eventSheet.GetRuntime();const eventSheetManager=eventSheet.GetEventSheetManager();this._eventSheet=eventSheet;this._eventSheetManager=eventSheetManager;this._runtime=eventSheet.GetRuntime();this._parent=parent;const userMethod=runtime.GetObjectReference(data[1]);this._func=userMethod;this._displayNumber=data[2];this._eventSheet._RegisterEventByDisplayNumber(this,this._displayNumber);
this._debugData=runtime.IsDebug()?{isBreakpoint:data[3][0],isBreakable:data[3][1]}:null}static Create(eventSheet,parent,data){return C3.New(C3.EventScript,eventSheet,parent,data)}_PostInit(){const userMethod=this._func;const localVars=this._runtime.GetEventSheetManager()._GetLocalVariablesScriptInterface(this);this._func=userMethod.bind(null,this._runtime.GetIRuntime(),localVars)}GetParent(){return this._parent}GetScopeParent(){return this._parent}GetEventSheet(){return this._eventSheet}GetDisplayNumber(){return this._displayNumber}IsDebugBreakable(){return this._debugData&&
this._debugData.isBreakable}IsDebugBreakpoint(){return this.IsDebugBreakable()&&this._debugData.isBreakpoint}_SetDebugBreakpoint(b){this._debugData.isBreakpoint=!!b}IsElseBlock(){return false}GetSolModifiers(){return EMPTY_SOL_MODIFIERS}GetSolModifiersIncludingParents(){if(this._parent)return this._parent.GetSolModifiersIncludingParents();else return EMPTY_SOL_MODIFIERS}Run(frame){frame.SetCurrentEvent(this);this._eventSheetManager.AddAsyncActionPromise(this._RunUserScript())}async _RunUserScript(){try{await this._func()}catch(err){console.error(`Unhandled exception running script %c${this.GetEventSheet().GetName()}, event ${this.GetDisplayNumber()}:`,
"font-size: 1.2em; font-weight: bold;",err);if(self.C3Debugger)self.C3Debugger._SetLastErrorScript(this);if(!hadUserScriptException){console.info(`%cTip:%c run this to highlight in Construct the last script that had an error: %cgoToLastErrorScript()`,"font-weight: bold; text-decoration: underline","","font-weight: bold");hadUserScriptException=true}}}*DebugRun(frame){frame.SetCurrentEvent(this);if(this.IsDebugBreakpoint()||this._runtime.DebugBreakNext())yield this;this.Run(frame)}DebugCanRunFast(){return!this.IsDebugBreakpoint()&&
!this._runtime.DebugBreakNext()}static HadUserScriptException(){return hadUserScriptException}static SetHadUserScriptException(){hadUserScriptException=true}};

}

// events/functionBlock.js
{
'use strict';const C3=self.C3;const assert=self.assert;
C3.FunctionBlock=class FunctionBlock extends C3.DefendedBase{constructor(eventSheet,parent,data){super();this._eventSheet=eventSheet;this._runtime=eventSheet.GetRuntime();this._parent=parent;const funcData=data[1];this._functionName=funcData[0];this._returnType=funcData[1];this._functionParameters=funcData[2].map(paramData=>C3.EventVariable.Create(eventSheet,this,paramData));this._isEnabled=funcData[3];this._innerLocalVariables=[];this._isAsync=funcData[4];this._nextAsyncId=0;this._currentAsyncId=
-1;this._asyncMap=new Map;this._eventBlock=C3.EventBlock.Create(eventSheet,parent,data);this._eventBlock._SetScopeParent(this)}static Create(eventSheet,parent,data){return C3.New(C3.FunctionBlock,eventSheet,parent,data)}_PostInit(){for(const fp of this._functionParameters)fp._PostInit();this._eventBlock._PostInit(false)}_GetAllLocalVariablesInScope(){return this._functionParameters}GetFunctionParameters(){return this._functionParameters}GetFunctionParameterCount(){return this._functionParameters.length}_RegisterLocalVariable(localVariable){this._innerLocalVariables.push(localVariable)}_GetAllInnerLocalVariables(){return this._innerLocalVariables}EvaluateFunctionParameters(parameters){const functionParameters=
this._functionParameters;for(let i=0,len=functionParameters.length;i<len;++i)functionParameters[i].SetValue(parameters[i].Get(0))}SetFunctionParameters(paramResults){const functionParameters=this._functionParameters;for(let i=0,len=functionParameters.length;i<len;++i)functionParameters[i].SetValue(paramResults[i])}CaptureFunctionParameters(){return this._functionParameters.map(p=>p.GetValue())}GetParent(){return this._parent}GetScopeParent(){return this._parent}GetFunctionName(){return this._functionName}GetReturnType(){return this._returnType}IsEnabled(){return this._isEnabled}GetDefaultReturnValue(){switch(this._returnType){case 0:return null;
case 2:return"";default:return 0}}GetEventBlock(){return this._eventBlock}IsAsync(){return this._isAsync}StartAsyncFunctionCall(){const asyncId=this._nextAsyncId++;this._currentAsyncId=asyncId;let resolve;const promise=new Promise(r=>resolve=r);this._asyncMap.set(asyncId,{resolve,pauseCount:0});return[asyncId,promise]}MaybeFinishAsyncFunctionCall(asyncId){const info=this._asyncMap.get(asyncId);if(info.pauseCount===0){info.resolve();this._asyncMap.delete(asyncId)}this._currentAsyncId=-1}PauseCurrentAsyncFunction(){const info=
this._asyncMap.get(this._currentAsyncId);info.pauseCount++;return this._currentAsyncId}ResumeAsyncFunction(asyncId){this._currentAsyncId=asyncId;const info=this._asyncMap.get(asyncId);info.pauseCount--}};

}

// events/eventVariable.js
{
'use strict';const C3=self.C3;const EMPTY_SOL_MODIFIERS=[];
C3.EventVariable=class EventVariable extends C3.DefendedBase{constructor(eventSheet,parent,data){super();const eventSheetManager=eventSheet.GetEventSheetManager();this._eventSheet=eventSheet;this._eventSheetManager=eventSheetManager;this._runtime=eventSheet.GetRuntime();this._parent=parent;this._localVarStack=eventSheetManager.GetLocalVarStack();this._name=data[1];this._type=data[2];this._initialValue=data[3];this._isStatic=!!data[4];this._isConstant=!!data[5];this._isFunctionParameter=parent instanceof
C3.FunctionBlock;this._sid=data[6];this._jsPropName=this._runtime.GetJsPropName(data[8]);this._scriptSetter=v=>this.SetValue(v);this._scriptGetter=()=>this.GetValue();this._hasSingleValue=!this._parent||this._isStatic||this._isConstant;this._value=this._initialValue;this._localIndex=-1;if(this.IsBoolean())this._value=this._value?1:0;if(this.IsLocal()&&!this.IsStatic()&&!this.IsConstant())this._localIndex=eventSheetManager._GetNextLocalVarIndex(this);eventSheetManager._RegisterEventVariable(this)}static Create(eventSheet,
parent,data){return C3.New(C3.EventVariable,eventSheet,parent,data)}_PostInit(){if(this.IsLocal()&&!this.IsStatic()&&!this.IsConstant()&&!this.IsFunctionParameter()){const functionBlock=this._eventSheetManager.FindFirstFunctionBlockParent(this);if(functionBlock)functionBlock._RegisterLocalVariable(this)}}GetName(){return this._name}GetJsPropName(){return this._jsPropName}GetParent(){return this._parent}GetScopeParent(){return this.GetParent()}IsGlobal(){return!this.GetParent()}IsLocal(){return!this.IsGlobal()}IsFunctionParameter(){return this._isFunctionParameter}IsStatic(){return this._isStatic}IsConstant(){return this._isConstant}IsNumber(){return this._type===
0}IsString(){return this._type===1}IsBoolean(){return this._type===2}IsElseBlock(){return false}GetSID(){return this._sid}GetInitialValue(){return this._initialValue}GetSolModifiers(){return EMPTY_SOL_MODIFIERS}Run(frame){if(this.IsLocal()&&!this.IsStatic()&&!this.IsConstant())this.SetValue(this.GetInitialValue())}DebugCanRunFast(){return true}*DebugRun(frame){this.Run(frame)}SetValue(v){if(this.IsNumber()){if(typeof v!=="number")v=parseFloat(v)}else if(this.IsString()){if(typeof v!=="string")v=v.toString()}else if(this.IsBoolean())v=
v?1:0;if(this._hasSingleValue)this._value=v;else this._localVarStack.GetCurrent()[this._localIndex]=v}GetValue(){return this._hasSingleValue?this._value:this._localVarStack.GetCurrent()[this._localIndex]}GetTypedValue(){let ret=this.GetValue();if(this.IsBoolean())ret=!!ret;return ret}ResetToInitialValue(){this._value=this._initialValue}_GetScriptInterfaceDescriptor(){return{configurable:false,enumerable:true,get:this._scriptGetter,set:this._scriptSetter}}};

}

// events/eventInclude.js
{
'use strict';const C3=self.C3;const assert=self.assert;const EMPTY_SOL_MODIFIERS=[];
C3.EventInclude=class EventInclude extends C3.DefendedBase{constructor(eventSheet,parent,data){super();const eventSheetManager=eventSheet.GetEventSheetManager();this._eventSheet=eventSheet;this._eventSheetManager=eventSheetManager;this._runtime=eventSheet.GetRuntime();this._parent=parent;this._includeSheet=null;this._includeSheetName=data[1];this._isActive=true}static Create(eventSheet,parent,data){return C3.New(C3.EventInclude,eventSheet,parent,data)}_PostInit(){this._includeSheet=this._eventSheetManager.GetEventSheetByName(this._includeSheetName);
this._eventSheet._AddShallowInclude(this);let p=this.GetParent();while(p){if(p instanceof C3.EventBlock&&p.IsGroup())p._AddContainedInclude(this);p=p.GetParent()}this.UpdateActive();if(this._runtime.IsDebug())this._eventSheet._GetPerfRecord().children.push(this._includeSheet._GetPerfRecord())}GetParent(){return this._parent}GetSolModifiers(){return EMPTY_SOL_MODIFIERS}GetIncludeSheet(){return this._includeSheet}Run(frame){const pushSol=!!this.GetParent();const allObjectClasses=this._runtime.GetAllObjectClasses();
if(pushSol)this._eventSheetManager.PushCleanSol(allObjectClasses);this._includeSheet.Run();if(pushSol)this._eventSheetManager.PopSol(allObjectClasses)}*DebugRun(frame){const pushSol=!!this.GetParent();const allObjectClasses=this._runtime.GetAllObjectClasses();if(pushSol)this._eventSheetManager.PushCleanSol(allObjectClasses);yield*this._includeSheet.DebugRun();if(pushSol)this._eventSheetManager.PopSol(allObjectClasses)}DebugCanRunFast(){return false}IsActive(){return this._isActive}UpdateActive(){let p=
this.GetParent();while(p){if(p instanceof C3.EventBlock&&p.IsGroup()&&!p.IsGroupActive()){this._isActive=false;return}p=p.GetParent()}this._isActive=true}};

}

// events/expNode.js
{
'use strict';const C3=self.C3;const assert=self.assert;C3.ExpNode=class ExpNode extends C3.DefendedBase{constructor(owner){super();this._owner=owner;this._runtime=owner.GetRuntime()}_PostInit(){}static CreateNode(owner,data){const type=data[0];const Classes=[BehaviorExpressionNode,ObjectExpressionNode,InstVarExpressionNode,EventVarExpNode,SystemExpressionExpNode,CallFunctionExpressionExpNode];return C3.New(Classes[type],owner,data)}};
class SystemExpressionExpNode extends C3.ExpNode{constructor(owner,data){super(owner);this._systemPlugin=this._runtime.GetSystemPlugin();this._func=this._runtime.GetObjectReference(data[1]);if(this._func===C3.Plugins.System.Exps.random||this._func===C3.Plugins.System.Exps.choose)this._owner.SetVariesPerInstance()}GetBoundMethod(){return this._systemPlugin._GetBoundACEMethod(this._func,this._systemPlugin)}}
class CallFunctionExpressionExpNode extends C3.ExpNode{constructor(owner,data){super(owner);this._functionBlock=null;this._functionName=data[1];this._owner.SetVariesPerInstance()}_PostInit(){const eventSheetManager=this._runtime.GetEventSheetManager();this._functionBlock=eventSheetManager.GetFunctionBlockByName(this._functionName);this._functionName=null;const myEventBlock=this._owner.GetEventBlock();const callEventBlock=this._functionBlock.GetEventBlock();this._combinedSolModifiers=[...(new Set([...myEventBlock.GetSolModifiersIncludingParents(),
...callEventBlock.GetSolModifiersIncludingParents()]))];this._combinedSolModifiers=eventSheetManager._DeduplicateSolModifierList(this._combinedSolModifiers)}GetBoundMethod(){const functionBlock=this._functionBlock;if(functionBlock.IsEnabled()){const callEventBlock=functionBlock.GetEventBlock();return C3.EventBlock.prototype.RunAsExpressionFunctionCall.bind(callEventBlock,this._combinedSolModifiers,functionBlock.GetReturnType(),functionBlock.GetDefaultReturnValue())}else{const defaultReturnValue=functionBlock.GetDefaultReturnValue();
return()=>defaultReturnValue}}}function WrapIndex(index,len){if(index>=len)return index%len;else if(index<0){if(index<=-len)index%=len;if(index<0)index+=len;return index}else return index}
class ObjectExpressionNode extends C3.ExpNode{constructor(owner,data){super(owner);this._objectClass=this._runtime.GetObjectClassByIndex(data[1]);this._func=this._runtime.GetObjectReference(data[2]);this._returnsString=!!data[3];this._eventStack=this._runtime.GetEventSheetManager().GetEventStack();this._owner._MaybeVaryFor(this._objectClass)}GetBoundMethod(){return this._objectClass.GetPlugin()._GetBoundACEMethod(this._func,this._objectClass.GetSingleGlobalInstance().GetSdkInstance())}ExpObject(...args){const objectClass=
this._objectClass;const instances=objectClass.GetCurrentSol().GetExpressionInstances();const len=instances.length;if(len===0)return this._returnsString?"":0;const index=WrapIndex(this._owner.GetSolIndex(),len);this._eventStack.GetCurrentStackFrame().SetExpressionObjectClass(objectClass);return this._func.apply(instances[index].GetSdkInstance(),args)}ExpObject_InstExpr(instIndex,...args){const objectClass=this._objectClass;const instances=objectClass.GetInstances();const len=instances.length;if(len===
0)return this._returnsString?"":0;const index=WrapIndex(instIndex,len);this._eventStack.GetCurrentStackFrame().SetExpressionObjectClass(objectClass);return this._func.apply(instances[index].GetSdkInstance(),args)}}
class InstVarExpressionNode extends C3.ExpNode{constructor(owner,data){super(owner);this._objectClass=this._runtime.GetObjectClassByIndex(data[1]);this._varIndex=data[3];this._returnsString=!!data[2];this._owner._MaybeVaryFor(this._objectClass)}ExpInstVar(){const instances=this._objectClass.GetCurrentSol().GetExpressionInstances();const len=instances.length;if(len===0)return this._returnsString?"":0;const index=WrapIndex(this._owner.GetSolIndex(),len);return instances[index]._GetInstanceVariableValueUnchecked(this._varIndex)}ExpInstVar_Family(){const objectClass=
this._objectClass;const instances=objectClass.GetCurrentSol().GetExpressionInstances();const len=instances.length;if(len===0)return this._returnsString?"":0;const index=WrapIndex(this._owner.GetSolIndex(),len);const inst=instances[index];const offset=inst.GetObjectClass().GetFamilyInstanceVariableOffset(objectClass.GetFamilyIndex());return inst._GetInstanceVariableValueUnchecked(this._varIndex+offset)}ExpInstVar_InstExpr(instIndex){const objectClass=this._objectClass;const instances=objectClass.GetInstances();
const len=instances.length;if(len===0)return this._returnsString?"":0;const index=WrapIndex(instIndex,len);const inst=instances[index];let offset=0;if(objectClass.IsFamily())offset=inst.GetObjectClass().GetFamilyInstanceVariableOffset(objectClass.GetFamilyIndex());return inst._GetInstanceVariableValueUnchecked(this._varIndex+offset)}}
class BehaviorExpressionNode extends C3.ExpNode{constructor(owner,data){super(owner);this._objectClass=this._runtime.GetObjectClassByIndex(data[1]);this._behaviorType=this._objectClass.GetBehaviorTypeByName(data[2]);this._behaviorIndex=this._objectClass.GetBehaviorIndexByName(data[2]);this._func=this._runtime.GetObjectReference(data[3]);this._returnsString=!!data[4];this._eventStack=this._runtime.GetEventSheetManager().GetEventStack();this._owner._MaybeVaryFor(this._objectClass)}ExpBehavior(...args){const objectClass=
this._objectClass;const instances=objectClass.GetCurrentSol().GetExpressionInstances();const len=instances.length;if(len===0)return this._returnsString?"":0;const index=WrapIndex(this._owner.GetSolIndex(),len);this._eventStack.GetCurrentStackFrame().SetExpressionObjectClass(objectClass);const inst=instances[index];let offset=0;if(objectClass.IsFamily())offset=inst.GetObjectClass().GetFamilyBehaviorOffset(objectClass.GetFamilyIndex());return this._func.apply(inst.GetBehaviorInstances()[this._behaviorIndex+
offset].GetSdkInstance(),args)}ExpBehavior_InstExpr(instIndex,...args){const objectClass=this._objectClass;const instances=objectClass.GetInstances();const len=instances.length;if(len===0)return this._returnsString?"":0;const index=WrapIndex(instIndex,len);this._eventStack.GetCurrentStackFrame().SetExpressionObjectClass(objectClass);const inst=instances[index];let offset=0;if(objectClass.IsFamily())offset=inst.GetObjectClass().GetFamilyBehaviorOffset(objectClass.GetFamilyIndex());return this._func.apply(inst.GetBehaviorInstances()[this._behaviorIndex+
offset].GetSdkInstance(),args)}}class EventVarExpNode extends C3.ExpNode{constructor(owner,data){super(owner);this._eventVar=null;this._eventVarSid=data[1]}_PostInit(){this._eventVar=this._runtime.GetEventSheetManager().GetEventVariableBySID(this._eventVarSid)}GetVar(){return this._eventVar}};

}

// events/parameter.js
{
'use strict';const C3=self.C3;const assert=self.assert;
C3.Parameter=class Parameter extends C3.DefendedBase{constructor(owner,type,index){super();this._owner=owner;this._index=index;this._type=type;this.Get=null;this._variesPerInstance=false;this._isConstant=false}static Create(owner,data,index){const type=data[0];const Classes=[ExpressionParameter,StringExpressionParameter,FileParameter,ComboParameter,ObjectParameter,LayerExpressionParameter,LayoutParameter,ExpressionParameter,ComboParameter,ComboParameter,InstVarParameter,EventVarParameter,FileParameter,
VariadicParameter,StringExpressionParameter,TimelineParameter,BooleanParameter,FunctionParameter,EaseParameter,TilemapBrushParameter];return C3.New(Classes[type],owner,type,index,data)}_PostInit(){}SetVariesPerInstance(){this._variesPerInstance=true}_MaybeVaryFor(objectClass){if(this._variesPerInstance)return;if(!objectClass)return;if(!objectClass.GetPlugin().IsSingleGlobal())this._variesPerInstance=true}VariesPerInstance(){return this._variesPerInstance}GetIndex(){return this._index}GetRuntime(){return this._owner.GetRuntime()}GetEventBlock(){return this._owner.GetEventBlock()}IsConstant(){return this._isConstant}};
function GetExpressionFunc(number){const ret=self.C3_ExpressionFuncs[number];if(!ret)throw new Error("invalid expression number");return ret}
class ExpressionParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._solIndex=0;const expData=data[1];this._expressionNumber=expData[0];this._numberedNodes=[];this._expressionFunc=null;for(let i=1,len=expData.length;i<len;++i)this._numberedNodes.push(C3.ExpNode.CreateNode(this,expData[i]));if(this._numberedNodes.length)this.Get=this.GetExpression;else{this.Get=GetExpressionFunc(this._expressionNumber);this._isConstant=true}}_GetNode(i){if(i<0||i>=this._numberedNodes.length)throw new RangeError("invalid numbered node");
return this._numberedNodes[i]}_PostInit(){for(const node of this._numberedNodes)node._PostInit();const func=GetExpressionFunc(this._expressionNumber);if(this._numberedNodes.length)this._expressionFunc=func(this);else this._expressionFunc=func}GetSolIndex(){return this._solIndex}GetExpression(solIndex){this._solIndex=solIndex;return this._expressionFunc()}}
class StringExpressionParameter extends ExpressionParameter{constructor(owner,type,index,data){super(owner,type,index,data);this.Get=this.GetStringExpression;if(type===14){this.GetEventBlock().SetAllSolModifiers();if(this._owner instanceof C3.Action)this.GetEventBlock().SetSolWriterAfterCnds()}}GetStringExpression(solIndex){this._solIndex=solIndex;const ret=this._expressionFunc();if(typeof ret==="string")return ret;else return""}_GetFastTriggerValue(){return GetExpressionFunc(this._expressionNumber)()}}
class LayerExpressionParameter extends ExpressionParameter{constructor(owner,type,index,data){super(owner,type,index,data);this.Get=this.GetLayer;this._isConstant=false}GetLayer(solIndex){this._solIndex=solIndex;const ret=this._expressionFunc();const layout=this.GetRuntime().GetCurrentLayout();return layout.GetLayer(ret)}}
class ComboParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._combo=data[1];this.Get=this.GetCombo;this._isConstant=true}GetCombo(){return this._combo}}class BooleanParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._bool=data[1];this.Get=this.GetBoolean;this._isConstant=true}GetBoolean(){return this._bool}}
class ObjectParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._objectClass=this.GetRuntime().GetObjectClassByIndex(data[1]);this.Get=this.GetObjectClass;const eventBlock=this.GetEventBlock();eventBlock._AddSolModifier(this._objectClass);if(this._owner instanceof C3.Action)eventBlock.SetSolWriterAfterCnds();else if(eventBlock.GetParent())eventBlock.GetParent().SetSolWriterAfterCnds();this._isConstant=true}GetObjectClass(){return this._objectClass}}
class LayoutParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._layout=this.GetRuntime().GetLayoutManager().GetLayoutByName(data[1]);this.Get=this.GetLayout;this._isConstant=true}GetLayout(){return this._layout}}
class TimelineParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._timeline=this.GetRuntime().GetTimelineManager().GetTimelineByName(data[1]);this.Get=this.GetTimeline;this._isConstant=true}GetTimeline(){return this._timeline}}class FileParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._fileInfo=data[1];this.Get=this.GetFile;this._isConstant=true}GetFile(){return this._fileInfo}}
class InstVarParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._instVarIndex=data[1];const ownerObjectClass=this._owner.GetObjectClass();if(ownerObjectClass&&ownerObjectClass.IsFamily()){this.Get=this.GetFamilyInstanceVariable;this.SetVariesPerInstance()}else{this.Get=this.GetInstanceVariable;this._isConstant=true}}GetInstanceVariable(){return this._instVarIndex}GetFamilyInstanceVariable(solIndex){solIndex=solIndex||0;const familyType=this._owner.GetObjectClass();
const sol=familyType.GetCurrentSol();const instances=sol.GetInstances();let realType=null;if(instances.length)realType=instances[solIndex%instances.length].GetObjectClass();else if(sol.HasAnyElseInstances()){const elseInstances=sol.GetElseInstances();realType=elseInstances[solIndex%elseInstances.length].GetObjectClass()}else if(familyType.GetInstanceCount()>0){const familyInstances=familyType.GetInstances();realType=familyInstances[solIndex%familyInstances.length].GetObjectClass()}else return 0;return this._instVarIndex+
realType.GetFamilyInstanceVariableOffset(familyType.GetFamilyIndex())}}class EventVarParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._eventVarSid=data[1];this._eventVar=null;this.Get=this.GetEventVariable;this._isConstant=true}_PostInit(){this._eventVar=this.GetRuntime().GetEventSheetManager().GetEventVariableBySID(this._eventVarSid)}GetEventVariable(){return this._eventVar}}
class FunctionParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._functionBlockName=data[1];this._functionBlock=null;this.Get=this.GetFunction;this._isConstant=true}_PostInit(){this._functionBlock=this.GetRuntime().GetEventSheetManager().GetFunctionBlockByName(this._functionBlockName);this._functionBlockName=null}GetFunction(){return this._functionBlock}}
class VariadicParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._subParams=[];this._variadicRet=[];this._isConstant=true;for(let i=1,len=data.length;i<len;++i){const subParam=C3.Parameter.Create(this._owner,data[i],0);this._subParams.push(subParam);this._variadicRet.push(0);if(!subParam.IsConstant())this._isConstant=false}this.Get=this.GetVariadic}_PostInit(){for(const subParam of this._subParams)subParam._PostInit()}GetVariadic(){const subParams=this._subParams;
const variadicRet=this._variadicRet;for(let i=0,len=subParams.length;i<len;++i)variadicRet[i]=subParams[i].Get(0);return variadicRet}}class EaseParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._easeIndex=data[1];this.Get=this.GetEase;this._isConstant=true}GetEase(){return this._easeIndex}}
class TilemapBrushParameter extends C3.Parameter{constructor(owner,type,index,data){super(owner,type,index);this._brushIndex=data[1];this.Get=this.GetTilemapBrush;this._isConstant=true}GetTilemapBrush(){return this._brushIndex}};

}

// events/condition.js
{
'use strict';const C3=self.C3;const assert=self.assert;function EvalParams(parameters,results){for(let i=0,len=parameters.length;i<len;++i)results[i]=parameters[i].Get(0)}const EMPTY_PARAMS_ARRAY=[];const noop=function(){};
C3.Condition=class Condition extends C3.DefendedBase{constructor(eventBlock,data,index){super();this._eventBlock=eventBlock;this._runtime=eventBlock.GetRuntime();this._index=index;this._func=this._runtime.GetObjectReference(data[1]);this._isTrigger=data[3]>0;this._isFastTrigger=data[3]===2;this._isLooping=!!data[4];this._isInverted=!!data[5];this._isStatic=!!data[6];this._sid=data[7];this._isInOrBlock=this._eventBlock.IsOrBlock();this._objectClass=null;this._behaviorType=null;this._behaviorIndex=
-1;this._systemPlugin=null;this.Run=noop;this.DebugRun=noop;this._parameters=[];this._results=[];this._anyParamVariesPerInstance=false;this._savedData=null;this._unsavedData=null;this._debugData=this._runtime.IsDebug()?{isBreakpoint:data[8][0],canDebug:data[8][1]}:null;if(data[0]===-1)this._systemPlugin=this._runtime.GetSystemPlugin();else{this._objectClass=this._runtime.GetObjectClassByIndex(data[0]);if(data[2]){this._behaviorType=this._objectClass.GetBehaviorTypeByName(data[2]);this._behaviorIndex=
this._objectClass.GetBehaviorIndexByName(data[2])}if(this._eventBlock.GetParent())this._eventBlock.GetParent().SetSolWriterAfterCnds()}if(data.length===10){let paramData=data[9];for(let data of paramData){this._parameters.push(C3.Parameter.Create(this,data,this._parameters.length));this._results.push(0)}}if(this._parameters.length===0){this._parameters=EMPTY_PARAMS_ARRAY;this._results=EMPTY_PARAMS_ARRAY}this._eventBlock.GetEventSheetManager()._RegisterCondition(this)}static Create(eventBlock,data,
index){return C3.New(C3.Condition,eventBlock,data,index)}_PostInit(){for(const param of this._parameters){param._PostInit();if(param.VariesPerInstance())this._anyParamVariesPerInstance=true}if(this._isFastTrigger){this.Run=this._RunFastTrigger;this.DebugRun=this._DebugRunFastTrigger}else if(this._systemPlugin){this._SetSystemRunMethod();this.DebugRun=this._DebugRunSystem}else if(this._objectClass.GetPlugin().IsSingleGlobal()){this._SetSingleGlobalRunMethod();this.DebugRun=this._DebugRunSingleGlobal}else if(this._isStatic){this.Run=
this._RunStatic;this.DebugRun=this._DebugRunStatic}else{this.Run=this._RunObject;this.DebugRun=this._DebugRunObject}}_SetSystemRunMethod(){const plugin=this._systemPlugin;const bindThis=this._systemPlugin;this._SetRunMethodForBoundFunc(plugin,bindThis,this._RunSystem)}_SetSingleGlobalRunMethod(){const plugin=this._objectClass.GetPlugin();const bindThis=this._objectClass.GetSingleGlobalInstance().GetSdkInstance();this._SetRunMethodForBoundFunc(plugin,bindThis,this._RunSingleGlobal)}_SetRunMethodForBoundFunc(plugin,
bindThis,fallbackMethod){const func=this._func;const isInverted=this._isInverted;const parameters=this._parameters;if(parameters.length===0){const boundFunc=plugin._GetBoundACEMethod(func,bindThis);if(isInverted)this.Run=function RunSingleCnd_0param(){return C3.xor(boundFunc(),isInverted)};else this.Run=boundFunc}else if(parameters.length===1){const param0=parameters[0];if(!isInverted&&param0.IsConstant())this.Run=plugin._GetBoundACEMethod_1param(func,bindThis,param0.Get(0));else{const boundFunc=
plugin._GetBoundACEMethod(func,bindThis);this.Run=function RunSingleCnd_1param(){return C3.xor(boundFunc(param0.Get(0)),isInverted)}}}else if(parameters.length===2){const param0=parameters[0];const param1=parameters[1];if(!isInverted&&param0.IsConstant()&&param1.IsConstant())this.Run=plugin._GetBoundACEMethod_2params(func,bindThis,param0.Get(0),param1.Get(0));else{const boundFunc=plugin._GetBoundACEMethod(func,bindThis);this.Run=function RunSingleCnd_2params(){return C3.xor(boundFunc(param0.Get(0),
param1.Get(0)),isInverted)}}}else if(parameters.length===3){const param0=parameters[0];const param1=parameters[1];const param2=parameters[2];if(!isInverted&&param0.IsConstant()&&param1.IsConstant()&&param2.IsConstant())this.Run=plugin._GetBoundACEMethod_3params(func,bindThis,param0.Get(0),param1.Get(0),param2.Get(0));else{const boundFunc=plugin._GetBoundACEMethod(func,bindThis);this.Run=function RunSingleCnd_3params(){return C3.xor(boundFunc(param0.Get(0),param1.Get(0),param2.Get(0)),isInverted)}}}else this.Run=
fallbackMethod}GetSID(){return this._sid}_GetFunc(){return this._func}GetObjectClass(){return this._objectClass}GetBehaviorType(){return this._behaviorType}GetEventBlock(){return this._eventBlock}GetRuntime(){return this._runtime}GetIndex(){return this._index}GetDebugIndex(){return this.GetIndex()}IsTrigger(){return this._isTrigger}IsFastTrigger(){return this._isFastTrigger}IsInverted(){return this._isInverted}IsLooping(){return this._isLooping}IsBreakpoint(){return this._debugData.isBreakpoint}_SetBreakpoint(b){this._debugData.isBreakpoint=
!!b;this._eventBlock._UpdateCanRunFastRecursive()}_DebugReturnsGenerator(){return this._debugData.canDebug}DebugCanRunFast(){return!this.IsBreakpoint()&&!this._runtime.DebugBreakNext()&&!this._DebugReturnsGenerator()}GetSavedDataMap(){if(!this._savedData)this._savedData=new Map;return this._savedData}GetUnsavedDataMap(){if(!this._unsavedData)this._unsavedData=new Map;return this._unsavedData}_RunSystem(){const results=this._results;EvalParams(this._parameters,results);return C3.xor(this._func.apply(this._systemPlugin,
results),this._isInverted)}*_DebugRunSystem(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;if(this._DebugReturnsGenerator()){const results=this._results;EvalParams(this._parameters,results);let ret=this._func.apply(this._systemPlugin,results);if(C3.IsIterator(ret))ret=yield*ret;return C3.xor(ret,this._isInverted)}else return this.Run()}_RunSingleGlobal(){const results=this._results;EvalParams(this._parameters,results);const inst=this._objectClass.GetSingleGlobalInstance().GetSdkInstance();
return C3.xor(this._func.apply(inst,results),this._isInverted)}*_DebugRunSingleGlobal(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;if(this._DebugReturnsGenerator()){const results=this._results;EvalParams(this._parameters,results);const inst=this._objectClass.GetSingleGlobalInstance().GetSdkInstance();let ret=this._func.apply(inst,results);if(C3.IsIterator(ret))ret=yield*ret;return C3.xor(ret,this._isInverted)}else return this.Run()}_RunFastTrigger(){return true}*_DebugRunFastTrigger(){if(this.IsBreakpoint()||
this._runtime.DebugBreakNext())yield this;return true}_RunStatic(){const results=this._results;EvalParams(this._parameters,results);const ret=this._func.apply(this._behaviorType||this._objectClass,results);this._objectClass.ApplySolToContainer();return ret}*_DebugRunStatic(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;if(this._DebugReturnsGenerator()){const results=this._results;EvalParams(this._parameters,results);let ret=this._func.apply(this._behaviorType||this._objectClass,
results);if(C3.IsIterator(ret))ret=yield*ret;this._objectClass.ApplySolToContainer();return ret}else return this.Run()}_RunObject(){const parameters=this._parameters;const results=this._results;const sol=this._objectClass.GetCurrentSol();for(let i=0,len=parameters.length;i<len;++i){const p=parameters[i];if(!p.VariesPerInstance())results[i]=p.Get(0)}if(sol.IsSelectAll())return this._RunObject_FirstFilter(sol);else return this._RunObject_NextFilter(sol)}*_DebugRunObject(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;
return this._RunObject()}_EvaluateVaryingParameters(solIndex){const parameters=this._parameters;const results=this._results;for(let i=0,len=parameters.length;i<len;++i){const p=parameters[i];if(p.VariesPerInstance())results[i]=p.Get(solIndex)}}_RunObject_FirstFilter(sol){const objectClass=this._objectClass;const isFamily=objectClass.IsFamily();const familyIndex=objectClass.GetFamilyIndex();const behaviorIndex=this._behaviorIndex;const isBehavior=behaviorIndex>=0;const allInstances=objectClass.GetInstances();
const paramsVary=this._anyParamVariesPerInstance;const results=this._results;const func=this._func;const isInverted=this._isInverted;const isInOrBlock=this._isInOrBlock&&!this._isTrigger;sol.ClearArrays();for(let i=0,len=allInstances.length;i<len;++i){const inst=allInstances[i];if(paramsVary)this._EvaluateVaryingParameters(i);let ret;if(isBehavior){const offset=isFamily?inst.GetObjectClass().GetFamilyBehaviorOffset(familyIndex):0;ret=func.apply(inst.GetBehaviorInstances()[behaviorIndex+offset].GetSdkInstance(),
results)}else ret=func.apply(inst.GetSdkInstance(),results);if(C3.xor(ret,isInverted))sol._PushInstance(inst);else if(isInOrBlock)sol._PushElseInstance(inst)}objectClass.FinishCondition(true);sol._SetSelectAll(false);objectClass.ApplySolToContainer();return sol.HasAnyInstances()}_RunObject_NextFilter(sol){const objectClass=this._objectClass;const isFamily=objectClass.IsFamily();const familyIndex=objectClass.GetFamilyIndex();const isInContainer=objectClass.IsInContainer();const behaviorIndex=this._behaviorIndex;
const isBehavior=behaviorIndex>=0;const paramsVary=this._anyParamVariesPerInstance;const results=this._results;const func=this._func;const isInverted=this._isInverted;const isInOrBlock=this._isInOrBlock&&!this._isTrigger;const solInstances=sol._GetOwnInstances();const solElseInstances=sol._GetOwnElseInstances();const isUsingElseInstances=isInOrBlock&&!this._eventBlock.IsFirstConditionOfType(this);const arr=isUsingElseInstances?solElseInstances:solInstances;let k=0;let isAnyTrue=false;for(let i=0,
len=arr.length;i<len;++i){const inst=arr[i];if(paramsVary)this._EvaluateVaryingParameters(i);let ret;if(isBehavior){const offset=isFamily?inst.GetObjectClass().GetFamilyBehaviorOffset(familyIndex):0;ret=func.apply(inst.GetBehaviorInstances()[behaviorIndex+offset].GetSdkInstance(),results)}else ret=func.apply(inst.GetSdkInstance(),results);if(C3.xor(ret,isInverted)){isAnyTrue=true;if(isUsingElseInstances){solInstances.push(inst);if(isInContainer)inst._PushSiblingsToSolInstances()}else{arr[k]=inst;
if(isInContainer)inst._SetSiblingsToSolInstancesIndex(k);++k}}else if(isUsingElseInstances){arr[k]=inst;if(isInContainer)inst._SetSiblingsToSolElseInstancesIndex(k);++k}else if(isInOrBlock){solElseInstances.push(inst);if(isInContainer)inst._PushSiblingsToSolElseInstances()}}C3.truncateArray(arr,k);if(isInContainer)objectClass._TruncateContainerSols(isUsingElseInstances,k);const pickInFinish=isAnyTrue;if(isUsingElseInstances&&!isAnyTrue)isAnyTrue=this._OrBlockCheckInstances(solInstances);objectClass.FinishCondition(pickInFinish||
isInOrBlock);return isInOrBlock?isAnyTrue:sol.HasAnyInstances()}_OrBlockCheckInstances(solInstances){const objectClass=this._objectClass;const isFamily=objectClass.IsFamily();const familyIndex=objectClass.GetFamilyIndex();const paramsVary=this._anyParamVariesPerInstance;const behaviorIndex=this._behaviorIndex;const isBehavior=behaviorIndex>=0;const results=this._results;const func=this._func;const isInverted=this._isInverted;for(let i=0,len=solInstances.length;i<len;++i){const inst=solInstances[i];
if(paramsVary)this._EvaluateVaryingParameters(i);let ret;if(isBehavior){const offset=isFamily?inst.GetObjectClass().GetFamilyBehaviorOffset(familyIndex):0;ret=func.apply(inst.GetBehaviorInstances()[behaviorIndex+offset].GetSdkInstance(),results)}else ret=func.apply(inst.GetSdkInstance(),results);if(C3.xor(ret,isInverted))return true}return false}ReevaluateParameter(paramIndex,solIndex){return this._parameters[paramIndex].Get(solIndex)}GetFastTriggerValue(){const parameters=this._parameters;if(!parameters.length)throw new Error("no parameters");
return parameters[0]._GetFastTriggerValue()}_SaveToJson(){if(!this._savedData||!this._savedData.size)return null;const ex={};for(const [k,v]of this._savedData.entries()){let saveVal=v;if(k==="collmemory")saveVal=[...v.entries()].map(arr=>[arr[0].GetUID(),arr[1].GetUID(),arr[2]]);ex[k]=saveVal}return{"ex":ex}}_LoadFromJson(o){if(this._savedData){this._savedData.clear();this._savedData=null}if(!o)return;const runtime=this._runtime;const ex=o["ex"];if(ex){const map=this.GetSavedDataMap();map.clear();
for(const [k,v]of Object.entries(ex)){let loadVal=v;if(k==="collmemory")loadVal=C3.New(C3.PairMap,v.map(arr=>[runtime.GetInstanceByUID(arr[0]),runtime.GetInstanceByUID(arr[1]),arr[2]]).filter(arr=>arr[0]&&arr[1]));map.set(k,loadVal)}}}};

}

// events/action.js
{
'use strict';const C3=self.C3;const assert=self.assert;function EvalParams(parameters,results){for(let i=0,len=parameters.length;i<len;++i)results[i]=parameters[i].Get(0)}const EMPTY_PARAMS_ARRAY=[];const noop=function(){};const noopGenerator=function*(){};
C3.Action=class Action extends C3.DefendedBase{constructor(eventBlock,data,index){super();this._eventBlock=eventBlock;const runtime=eventBlock.GetRuntime();this._runtime=runtime;this._index=index;this._sid=data.length>=4?data[3]:-1;this._actionReturnType=data.length>=5?data[4]:0;this._func=null;this._objectClass=null;this._behaviorType=null;this._behaviorIndex=-1;this._systemPlugin=null;this._callFunctionName="";this._callEventBlock=null;this._combinedSolModifiers=null;this.Run=noop;this.DebugRun=
noop;this._parameters=[];this._results=[];this._anyParamVariesPerInstance=false;this._savedData=null;this._unsavedData=null;const isScript=data[0]===-3;const debugInfo=isScript?data[2]:data[5];this._debugData=runtime.IsDebug()||isScript?{isBreakpoint:debugInfo[0],canDebug:debugInfo[1],index:debugInfo[2]}:null;if(data[0]===-1){this._systemPlugin=runtime.GetSystemPlugin();this._func=runtime.GetObjectReference(data[1])}else if(data[0]===-2)this._callFunctionName=data[1];else if(isScript){const userMethod=
runtime.GetObjectReference(data[1]);this._func=userMethod;this.Run=this.RunUserScript;this.DebugRun=this.DebugRunUserScript;this._actionReturnType=1}else{this._func=runtime.GetObjectReference(data[1]);this._objectClass=runtime.GetObjectClassByIndex(data[0]);if(data[2]){this._behaviorType=this._objectClass.GetBehaviorTypeByName(data[2]);this._behaviorIndex=this._objectClass.GetBehaviorIndexByName(data[2])}}if(data.length===7){const paramData=data[6];for(const data of paramData){this._parameters.push(C3.Parameter.Create(this,
data,this._parameters.length));this._results.push(0)}}if(this._parameters.length===0){this._parameters=EMPTY_PARAMS_ARRAY;this._results=EMPTY_PARAMS_ARRAY}this._eventBlock.GetEventSheetManager()._RegisterAction(this)}static Create(eventBlock,data,index){return C3.New(C3.Action,eventBlock,data,index)}_PostInit(){for(const param of this._parameters){param._PostInit();if(param.VariesPerInstance())this._anyParamVariesPerInstance=true}if(this._systemPlugin){this._SetSystemRunMethod();this.DebugRun=this._DebugRunSystem}else if(this._callFunctionName){this._SetCallFunctionRunMethod();
this._callFunctionName=""}else if(this.Run===this.RunUserScript){const userMethod=this._func;const localVars=this._runtime.GetEventSheetManager()._GetLocalVariablesScriptInterface(this._eventBlock);this._func=userMethod.bind(null,this._runtime.GetIRuntime(),localVars)}else if(this._behaviorType)if(this.IsAsync()){this.Run=this._RunBehavior_Async;this.DebugRun=this._DebugRunBehavior_Async}else{this.Run=this._RunBehavior;this.DebugRun=this._DebugRunBehavior}else if(this._objectClass.GetPlugin().IsSingleGlobal()){this._SetSingleGlobalRunMethod();
this.DebugRun=this._DebugRunSingleGlobal}else if(this.IsAsync()){this.Run=this._RunObject_Async;this.DebugRun=this._DebugRunObject_Async}else if(!this._parameters.length){this.Run=this._RunObject_ParamsConst;this.DebugRun=this._DebugRunObject_ParamsConst}else if(this._parameters.every(p=>p.VariesPerInstance())){this.Run=this._RunObject_AllParamsVary;this.DebugRun=this._DebugRunObject_AllParamsVary}else if(this._anyParamVariesPerInstance){this.Run=this._RunObject_SomeParamsVary;this.DebugRun=this._DebugRunObject_SomeParamsVary}else if(this._parameters.every(p=>
p.IsConstant())){EvalParams(this._parameters,this._results);this.Run=this._RunObject_ParamsConst;this.DebugRun=this._DebugRunObject_ParamsConst}else{this.Run=this._RunObject_ParamsDontVary;this.DebugRun=this._DebugRunObject_ParamsDontVary}}_SetSystemRunMethod(){const plugin=this._systemPlugin;const bindThis=this._systemPlugin;this._SetRunMethodForBoundFunc(plugin,bindThis,this._RunSystem)}_SetSingleGlobalRunMethod(){const plugin=this._objectClass.GetPlugin();const bindThis=this._objectClass.GetSingleGlobalInstance().GetSdkInstance();
this._SetRunMethodForBoundFunc(plugin,bindThis,this._RunSingleGlobal)}_SetCallFunctionRunMethod(){const eventSheetManager=this._eventBlock.GetEventSheetManager();const functionBlock=eventSheetManager.GetFunctionBlockByName(this._callFunctionName);if(functionBlock.IsEnabled()){this._callEventBlock=functionBlock.GetEventBlock();this._combinedSolModifiers=[...(new Set([...this._eventBlock.GetSolModifiersIncludingParents(),...this._callEventBlock.GetSolModifiersIncludingParents()]))];this._combinedSolModifiers=
eventSheetManager._DeduplicateSolModifierList(this._combinedSolModifiers);this.Run=C3.EventBlock.prototype.RunAsFunctionCall.bind(this._callEventBlock,this._combinedSolModifiers,this._parameters);this.DebugRun=this._DebugRunCallFunction}else{this.Run=noop;this.DebugRun=noopGenerator}}_SetRunMethodForBoundFunc(plugin,bindThis,fallbackMethod){const func=this._func;const parameters=this._parameters;if(parameters.length===0)this.Run=plugin._GetBoundACEMethod(func,bindThis);else if(parameters.length===
1){const param0=parameters[0];if(param0.IsConstant())this.Run=plugin._GetBoundACEMethod_1param(func,bindThis,param0.Get(0));else{const boundFunc=plugin._GetBoundACEMethod(func,bindThis);this.Run=function RunSingleAct_1param(){return boundFunc(param0.Get(0))}}}else if(parameters.length===2){const param0=parameters[0];const param1=parameters[1];if(param0.IsConstant()&&param1.IsConstant())this.Run=plugin._GetBoundACEMethod_2params(func,bindThis,param0.Get(0),param1.Get(0));else{const boundFunc=plugin._GetBoundACEMethod(func,
bindThis);this.Run=function RunSingleAct_2params(){return boundFunc(param0.Get(0),param1.Get(0))}}}else if(parameters.length===3){const param0=parameters[0];const param1=parameters[1];const param2=parameters[2];if(param0.IsConstant()&&param1.IsConstant()&&param2.IsConstant())this.Run=plugin._GetBoundACEMethod_3params(func,bindThis,param0.Get(0),param1.Get(0),param2.Get(0));else{const boundFunc=plugin._GetBoundACEMethod(func,bindThis);this.Run=function RunSingleAct_3params(){return boundFunc(param0.Get(0),
param1.Get(0),param2.Get(0))}}}else this.Run=fallbackMethod}GetSID(){return this._sid}IsAsync(){return this._actionReturnType===1}CanBailOut(){return this._actionReturnType===2}HasReturnType(){return this._actionReturnType!==0}GetObjectClass(){return this._objectClass}GetEventBlock(){return this._eventBlock}GetRuntime(){return this._runtime}GetIndex(){return this._index}GetDebugIndex(){return this._debugData.index}GetCombinedSolModifiers(){return this._combinedSolModifiers}IsBreakpoint(){return this._debugData.isBreakpoint}_SetBreakpoint(b){this._debugData.isBreakpoint=
!!b;this._eventBlock._UpdateCanRunFastRecursive()}_DebugReturnsGenerator(){return this._debugData.canDebug}DebugCanRunFast(){return!this.IsBreakpoint()&&!this._runtime.DebugBreakNext()&&!this._DebugReturnsGenerator()}GetSavedDataMap(){if(!this._savedData)this._savedData=new Map;return this._savedData}GetUnsavedDataMap(){if(!this._unsavedData)this._unsavedData=new Map;return this._unsavedData}_RunSystem(){const results=this._results;EvalParams(this._parameters,results);return this._func.apply(this._systemPlugin,
results)}*_DebugRunSystem(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;if(this._DebugReturnsGenerator()){const results=this._results;EvalParams(this._parameters,results);const ret=yield*this._func.apply(this._systemPlugin,results);return ret}else return this.Run()}*_DebugRunCallFunction(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;const ret=yield*this._callEventBlock.DebugRunAsFunctionCall(this._combinedSolModifiers,this._parameters);return ret}_RunSingleGlobal(){const results=
this._results;EvalParams(this._parameters,results);return this._func.apply(this._objectClass.GetSingleGlobalInstance().GetSdkInstance(),results)}*_DebugRunSingleGlobal(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;if(this._DebugReturnsGenerator()){const results=this._results;EvalParams(this._parameters,results);const ret=yield*this._func.apply(this._objectClass.GetSingleGlobalInstance().GetSdkInstance(),results);return ret}else return this.Run()}_RunObject_ParamsConst(){const results=
this._results;const instances=this._objectClass.GetCurrentSol().GetInstances();for(let i=0,len=instances.length;i<len;++i)this._func.apply(instances[i].GetSdkInstance(),results)}*_DebugRunObject_ParamsConst(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;if(this._DebugReturnsGenerator()){const results=this._results;const instances=this._objectClass.GetCurrentSol().GetInstances();for(let i=0,len=instances.length;i<len;++i)yield*this._func.apply(instances[i].GetSdkInstance(),results)}else this._RunObject_ParamsConst()}_RunObject_ParamsDontVary(){const results=
this._results;EvalParams(this._parameters,results);const instances=this._objectClass.GetCurrentSol().GetInstances();for(let i=0,len=instances.length;i<len;++i)this._func.apply(instances[i].GetSdkInstance(),results)}*_DebugRunObject_ParamsDontVary(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;if(this._DebugReturnsGenerator()){const results=this._results;EvalParams(this._parameters,results);const instances=this._objectClass.GetCurrentSol().GetInstances();for(let i=0,len=instances.length;i<
len;++i)yield*this._func.apply(instances[i].GetSdkInstance(),results)}else this._RunObject_ParamsDontVary()}_RunObject_AllParamsVary(){const parameters=this._parameters;const results=this._results;const func=this._func;const instances=this._objectClass.GetCurrentSol().GetInstances();for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];for(let j=0,lenj=parameters.length;j<lenj;++j)results[j]=parameters[j].Get(i);func.apply(inst.GetSdkInstance(),results)}}*_DebugRunObject_AllParamsVary(){if(this.IsBreakpoint()||
this._runtime.DebugBreakNext())yield this;if(this._DebugReturnsGenerator()){const parameters=this._parameters;const results=this._results;const func=this._func;const instances=this._objectClass.GetCurrentSol().GetInstances();for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];for(let j=0,lenj=parameters.length;j<lenj;++j)results[j]=parameters[j].Get(i);yield*func.apply(inst.GetSdkInstance(),results)}}else this._RunObject_AllParamsVary()}_RunObject_SomeParamsVary(){const parameters=
this._parameters;const results=this._results;const func=this._func;const instances=this._objectClass.GetCurrentSol().GetInstances();for(let i=0,len=parameters.length;i<len;++i){const p=parameters[i];if(!p.VariesPerInstance())results[i]=p.Get(0)}for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];for(let j=0,lenj=parameters.length;j<lenj;++j){const p=parameters[j];if(p.VariesPerInstance())results[j]=p.Get(i)}func.apply(inst.GetSdkInstance(),results)}}*_DebugRunObject_SomeParamsVary(){if(this.IsBreakpoint()||
this._runtime.DebugBreakNext())yield this;if(this._DebugReturnsGenerator()){const parameters=this._parameters;const results=this._results;const func=this._func;const instances=this._objectClass.GetCurrentSol().GetInstances();for(let i=0,len=parameters.length;i<len;++i){const p=parameters[i];if(!p.VariesPerInstance())results[i]=p.Get(0)}for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];for(let j=0,lenj=parameters.length;j<lenj;++j){const p=parameters[j];if(p.VariesPerInstance())results[j]=
p.Get(i)}yield*func.apply(inst.GetSdkInstance(),results)}}else this._RunObject_SomeParamsVary()}_RunBehavior(){const objectClass=this._objectClass;const isFamily=objectClass.IsFamily();const familyIndex=objectClass.GetFamilyIndex();const parameters=this._parameters;const paramsVary=this._anyParamVariesPerInstance;const results=this._results;const func=this._func;const behaviorIndex=this._behaviorIndex;const instances=objectClass.GetCurrentSol().GetInstances();for(let i=0,len=parameters.length;i<len;++i){const p=
parameters[i];if(!p.VariesPerInstance())results[i]=p.Get(0)}for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];if(paramsVary)for(let j=0,lenj=parameters.length;j<lenj;++j){const p=parameters[j];if(p.VariesPerInstance())results[j]=p.Get(i)}const offset=isFamily?inst.GetObjectClass().GetFamilyBehaviorOffset(familyIndex):0;func.apply(inst.GetBehaviorInstances()[behaviorIndex+offset].GetSdkInstance(),results)}}*_DebugRunBehavior(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;
if(this._DebugReturnsGenerator()){const objectClass=this._objectClass;const isFamily=objectClass.IsFamily();const familyIndex=objectClass.GetFamilyIndex();const parameters=this._parameters;const paramsVary=this._anyParamVariesPerInstance;const results=this._results;const func=this._func;const behaviorIndex=this._behaviorIndex;const instances=objectClass.GetCurrentSol().GetInstances();for(let i=0,len=parameters.length;i<len;++i){const p=parameters[i];if(!p.VariesPerInstance())results[i]=p.Get(0)}for(let i=
0,len=instances.length;i<len;++i){const inst=instances[i];if(paramsVary)for(let j=0,lenj=parameters.length;j<lenj;++j){const p=parameters[j];if(p.VariesPerInstance())results[j]=p.Get(i)}const offset=isFamily?inst.GetObjectClass().GetFamilyBehaviorOffset(familyIndex):0;yield*func.apply(inst.GetBehaviorInstances()[behaviorIndex+offset].GetSdkInstance(),results)}}else this._RunBehavior()}_RunObject_Async(){const parameters=this._parameters;const results=this._results;const func=this._func;const instances=
this._objectClass.GetCurrentSol().GetInstances();const promises=[];for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];for(let j=0,lenj=parameters.length;j<lenj;++j)results[j]=parameters[j].Get(i);promises.push(func.apply(inst.GetSdkInstance(),results))}return Promise.all(promises)}*_DebugRunObject_Async(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;if(this._DebugReturnsGenerator()){const parameters=this._parameters;const results=this._results;const func=this._func;
const instances=this._objectClass.GetCurrentSol().GetInstances();const promises=[];for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];for(let j=0,lenj=parameters.length;j<lenj;++j)results[j]=parameters[j].Get(i);promises.push(yield*func.apply(inst.GetSdkInstance(),results))}return Promise.all(promises)}else return this._RunObject_Async()}_RunBehavior_Async(){const objectClass=this._objectClass;const isFamily=objectClass.IsFamily();const familyIndex=objectClass.GetFamilyIndex();const parameters=
this._parameters;const results=this._results;const func=this._func;const behaviorIndex=this._behaviorIndex;const instances=objectClass.GetCurrentSol().GetInstances();const promises=[];for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];for(let j=0,lenj=parameters.length;j<lenj;++j)results[j]=parameters[j].Get(i);const offset=isFamily?inst.GetObjectClass().GetFamilyBehaviorOffset(familyIndex):0;promises.push(func.apply(inst.GetBehaviorInstances()[behaviorIndex+offset].GetSdkInstance(),
results))}return Promise.all(promises)}*_DebugRunBehavior_Async(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;if(this._DebugReturnsGenerator()){const objectClass=this._objectClass;const isFamily=objectClass.IsFamily();const familyIndex=objectClass.GetFamilyIndex();const parameters=this._parameters;const results=this._results;const func=this._func;const behaviorIndex=this._behaviorIndex;const instances=objectClass.GetCurrentSol().GetInstances();const promises=[];for(let i=0,len=
instances.length;i<len;++i){const inst=instances[i];for(let j=0,lenj=parameters.length;j<lenj;++j)results[j]=parameters[j].Get(i);const offset=isFamily?inst.GetObjectClass().GetFamilyBehaviorOffset(familyIndex):0;promises.push(yield*func.apply(inst.GetBehaviorInstances()[behaviorIndex+offset].GetSdkInstance(),results))}return Promise.all(promises)}else return this._RunBehavior_Async()}async RunUserScript(){try{await this._func()}catch(err){console.error(`Unhandled exception running script %c${this._eventBlock.GetEventSheet().GetName()}, event ${this._eventBlock.GetDisplayNumber()}, action ${this.GetDebugIndex()+
1}:`,"font-size: 1.2em; font-weight: bold;",err);if(self.C3Debugger)self.C3Debugger._SetLastErrorScript(this);if(!C3.EventScript.HadUserScriptException()){console.info(`%cTip:%c run this to highlight in Construct the last script that had an error: %cgoToLastErrorScript()`,"font-weight: bold; text-decoration: underline","","font-weight: bold");C3.EventScript.SetHadUserScriptException()}}}*DebugRunUserScript(){if(this.IsBreakpoint()||this._runtime.DebugBreakNext())yield this;return this.RunUserScript()}_SaveToJson(){if(!this._savedData||
!this._savedData.size)return null;return{"ex":C3.ToSuperJSON(this._savedData)}}_LoadFromJson(o){if(this._savedData){this._savedData.clear();this._savedData=null}if(!o)return;const ex=o["ex"];if(ex)this._savedData=C3.FromSuperJSON(ex)}};

}

// events/commonACEs.js
{
'use strict';const C3=self.C3;const tempColor=new C3.Color;function CompareX(cmp,x){return C3.compare(this.GetWorldInfo().GetX(),cmp,x)}function CompareY(cmp,y){return C3.compare(this.GetWorldInfo().GetY(),cmp,y)}
function IsOnScreen(){const wi=this.GetWorldInfo();const layer=wi.GetLayer();if(layer.Has3DCamera())return wi.IsInViewport3D(layer._GetViewFrustum());else return wi.IsInViewport(layer.GetViewport(),wi.GetLayout().HasVanishingPointOutsideViewport(),wi.GetLayout().IsOrthographicProjection())}
function IsOutsideLayout(){const wi=this.GetWorldInfo();const layout=wi.GetLayout();const bbox=wi.GetBoundingBox();return bbox.getRight()<0||bbox.getBottom()<0||bbox.getLeft()>layout.GetWidth()||bbox.getTop()>layout.GetHeight()}
function PickDistance(which,x,y){const sol=this.GetCurrentSol();const instances=sol.GetInstances();if(!instances.length)return false;let inst=instances[0];let wi=inst.GetWorldInfo();let pickme=inst;let dist2=C3.distanceSquared(wi.GetX(),wi.GetY(),x,y);for(let i=1,len=instances.length;i<len;++i){inst=instances[i];wi=inst.GetWorldInfo();const d2=C3.distanceSquared(wi.GetX(),wi.GetY(),x,y);if(which===0&&d2<dist2||which===1&&d2>dist2){dist2=d2;pickme=inst}}sol.PickOne(pickme);return true}
function SetX(x){const wi=this.GetWorldInfo();if(wi.GetX()===x)return;wi.SetX(x);wi.SetBboxChanged()}function SetY(y){const wi=this.GetWorldInfo();if(wi.GetY()===y)return;wi.SetY(y);wi.SetBboxChanged()}function SetPos(x,y){const wi=this.GetWorldInfo();if(wi.EqualsXY(x,y))return;wi.SetXY(x,y);wi.SetBboxChanged()}
function SetPosToObject(objectClass,imgPt){if(!objectClass)return;const inst=objectClass.GetPairedInstance(this._inst);if(!inst)return;const [x,y]=inst.GetImagePoint(imgPt);const wi=this.GetWorldInfo();if(wi.GetX()===x&&wi.GetY()===y)return;wi.SetXY(x,y);wi.SetBboxChanged()}function MoveForward(dist){if(dist===0)return;const wi=this.GetWorldInfo();wi.OffsetXY(wi.GetCosAngle()*dist,wi.GetSinAngle()*dist);wi.SetBboxChanged()}
function MoveAtAngle(a,dist){if(dist===0)return;const wi=this.GetWorldInfo();a=C3.toRadians(a);wi.OffsetXY(Math.cos(a)*dist,Math.sin(a)*dist);wi.SetBboxChanged()}function GetX(){return this.GetWorldInfo().GetX()}function GetY(){return this.GetWorldInfo().GetY()}function GetDt(){return this._runtime.GetDt(this._inst)}function CompareWidth(cmp,w){return C3.compare(this.GetWorldInfo().GetWidth(),cmp,w)}function CompareHeight(cmp,h){return C3.compare(this.GetWorldInfo().GetHeight(),cmp,h)}
function SetWidth(w){const wi=this.GetWorldInfo();if(wi.GetWidth()===w)return;wi.SetWidth(w);wi.SetBboxChanged()}function SetHeight(h){const wi=this.GetWorldInfo();if(wi.GetHeight()===h)return;wi.SetHeight(h);wi.SetBboxChanged()}function SetSize(w,h){const wi=this.GetWorldInfo();if(wi.GetWidth()===w&&wi.GetHeight()===h)return;wi.SetSize(w,h);wi.SetBboxChanged()}function GetWidth(){return this.GetWorldInfo().GetWidth()}function GetHeight(){return this.GetWorldInfo().GetHeight()}
function GetBboxLeft(){return this.GetWorldInfo().GetBoundingBox().getLeft()}function GetBboxTop(){return this.GetWorldInfo().GetBoundingBox().getTop()}function GetBboxRight(){return this.GetWorldInfo().GetBoundingBox().getRight()}function GetBboxBottom(){return this.GetWorldInfo().GetBoundingBox().getBottom()}function IsAngleWithin(within,a){return C3.angleDiff(this.GetWorldInfo().GetAngle(),C3.toRadians(a))<=C3.toRadians(within)}
function IsAngleClockwiseFrom(a){return C3.angleClockwise(this.GetWorldInfo().GetAngle(),C3.toRadians(a))}function IsBetweenAngles(a,b){const lower=C3.toRadians(a);const upper=C3.toRadians(b);const angle=this.GetWorldInfo().GetAngle();const obtuse=!C3.angleClockwise(upper,lower);if(obtuse)return!(!C3.angleClockwise(angle,lower)&&C3.angleClockwise(angle,upper));else return C3.angleClockwise(angle,lower)&&!C3.angleClockwise(angle,upper)}
function SetAngle(a){const wi=this.GetWorldInfo();const newAngle=C3.clampAngle(C3.toRadians(a));if(isNaN(newAngle)||wi.GetAngle()===newAngle)return;wi.SetAngle(newAngle);wi.SetBboxChanged()}function RotateClockwise(a){if(isNaN(a)||a===0)return;const wi=this.GetWorldInfo();wi.SetAngle(wi.GetAngle()+C3.toRadians(a));wi.SetBboxChanged()}function RotateCounterclockwise(a){if(isNaN(a)||a===0)return;const wi=this.GetWorldInfo();wi.SetAngle(wi.GetAngle()-C3.toRadians(a));wi.SetBboxChanged()}
function RotateTowardAngle(amt,target){const wi=this.GetWorldInfo();const a=wi.GetAngle();const newAngle=C3.angleRotate(a,C3.toRadians(target),C3.toRadians(amt));if(isNaN(newAngle)||a===newAngle)return;wi.SetAngle(newAngle);wi.SetBboxChanged()}
function RotateTowardPosition(amt,x,y){const wi=this.GetWorldInfo();const a=wi.GetAngle();const dx=x-wi.GetX();const dy=y-wi.GetY();const target=Math.atan2(dy,dx);const newAngle=C3.angleRotate(a,target,C3.toRadians(amt));if(isNaN(newAngle)||a===newAngle)return;wi.SetAngle(newAngle);wi.SetBboxChanged()}
function SetTowardPosition(x,y){const wi=this.GetWorldInfo();const a=wi.GetAngle();const dx=x-wi.GetX();const dy=y-wi.GetY();const newAngle=Math.atan2(dy,dx);if(isNaN(newAngle)||a===newAngle)return;wi.SetAngle(newAngle);wi.SetBboxChanged()}function GetAngle(){return C3.toDegrees(this.GetWorldInfo().GetAngle())}function CompareOpacity(cmp,x){return C3.compare(C3.round6dp(this.GetWorldInfo().GetOpacity()*100),cmp,x)}function IsVisible(){return this.GetWorldInfo().IsVisible()}
function SetVisible(v){const wi=this.GetWorldInfo();if(v===2)v=!wi.IsVisible();else v=v!==0;if(wi.IsVisible()===v)return;wi.SetVisible(v);this._runtime.UpdateRender()}function SetOpacity(o){const newOpacity=C3.clamp(o/100,0,1);const wi=this.GetWorldInfo();if(wi.GetOpacity()===newOpacity)return;wi.SetOpacity(newOpacity);this._runtime.UpdateRender()}
function SetDefaultColor(rgb){tempColor.setFromRgbValue(rgb);const wi=this.GetWorldInfo();if(wi.GetUnpremultipliedColor().equalsIgnoringAlpha(tempColor))return;wi.SetUnpremultipliedColor(tempColor);this._runtime.UpdateRender()}function GetColor(){const c=this.GetWorldInfo().GetUnpremultipliedColor();return C3.PackRGBAEx(c.getR(),c.getG(),c.getB(),c.getA())}function GetOpacity(){return C3.round6dp(this.GetWorldInfo().GetOpacity()*100)}
function IsOnLayer(layer){if(!layer)return false;return this.GetWorldInfo().GetLayer()===layer}
function PickTopBottom(which){const sol=this.GetCurrentSol();const instances=sol.GetInstances();if(!instances.length)return false;let inst=instances[0];let pickme=inst;for(let i=1,len=instances.length;i<len;++i){const inst=instances[i];const instWi=inst.GetWorldInfo();const pickmeWi=pickme.GetWorldInfo();const instLayerIndex=instWi.GetLayer().GetIndex();const pickmeLayerIndex=pickmeWi.GetLayer().GetIndex();if(which===0){if(instLayerIndex>pickmeLayerIndex||instLayerIndex===pickmeLayerIndex&&instWi.GetZIndex()>
pickmeWi.GetZIndex())pickme=inst}else if(instLayerIndex<pickmeLayerIndex||instLayerIndex===pickmeLayerIndex&&instWi.GetZIndex()<pickmeWi.GetZIndex())pickme=inst}sol.PickOne(pickme);return true}function CompareZElevation(which,cmp,value){const wi=this.GetWorldInfo();const z=which===0?wi.GetZElevation():wi.GetTotalZElevation();return C3.compare(z,cmp,value)}function MoveToTop(){this.GetWorldInfo().ZOrderMoveToTop()}function MoveToBottom(){this.GetWorldInfo().ZOrderMoveToBottom()}
function MoveToLayer(layerMove){if(!layerMove)return;this.GetWorldInfo().ZOrderMoveToLayer(layerMove)}function ZMoveToObject(where,objectClass){const isAfter=where===0;if(!objectClass)return;const otherInst=objectClass.GetFirstPicked(this.GetInstance());if(!otherInst)return;this.GetWorldInfo().ZOrderMoveAdjacentToInstance(otherInst,isAfter)}function SetZElevation(z){const wi=this.GetWorldInfo();if(wi.GetZElevation()===z)return;wi.SetZElevation(z);this._runtime.UpdateRender()}
function LayerNumber(){return this.GetWorldInfo().GetLayer().GetIndex()}function LayerName(){return this.GetWorldInfo().GetLayer().GetName()}function ZIndex(){return this.GetWorldInfo().GetZIndex()}function ZElevation(){return this.GetWorldInfo().GetZElevation()}function TotalZElevation(){return this.GetWorldInfo().GetTotalZElevation()}
function SetEffectEnabled(enabled,effectName){const effectType=this.GetObjectClass().GetEffectList().GetEffectTypeByName(effectName);if(!effectType)return;const effectTypeIndex=effectType.GetIndex();const e=enabled===1;const instFxList=this.GetWorldInfo().GetInstanceEffectList();if(instFxList.IsEffectIndexActive(effectTypeIndex)===e)return;instFxList.SetEffectIndexActive(effectTypeIndex,e);instFxList.UpdateActiveEffects();this._runtime.UpdateRender()}
function SetEffectParam(effectName,paramIndex,value){const effectType=this.GetObjectClass().GetEffectList().GetEffectTypeByName(effectName);if(!effectType)return;const effectTypeIndex=effectType.GetIndex();const instFxList=this.GetWorldInfo().GetInstanceEffectList();const paramsArr=instFxList.GetEffectParametersForIndex(effectTypeIndex);paramIndex=Math.floor(paramIndex);if(paramIndex<0||paramIndex>=paramsArr.length)return;const paramType=effectType.GetShaderProgram().GetParameterType(paramIndex);
if(paramType==="color"){tempColor.setFromRgbValue(value);const curColor=paramsArr[paramIndex];if(tempColor.equalsIgnoringAlpha(curColor))return;curColor.copyRgb(tempColor)}else{if(paramType==="percent")value/=100;if(paramsArr[paramIndex]===value)return;paramsArr[paramIndex]=value}if(instFxList.IsEffectIndexActive(effectTypeIndex))this._runtime.UpdateRender()}const tempRect=C3.New(C3.Rect);const tempCandidates1=[];const tempCandidates2=[];let needsCollisionFinish=false;let rPickType=null;
let rPickFromElseInstances=false;const rToPick=new Set;function CollMemory_Add(collMemory,a,b,tickCount){const a_uid=a.GetUID();const b_uid=b.GetUID();if(a_uid<b_uid)collMemory.Set(a,b,tickCount);else collMemory.Set(b,a,tickCount)}function CollMemory_Remove(collMemory,a,b){const a_uid=a.GetUID();const b_uid=b.GetUID();if(a_uid<b_uid)collMemory.Delete(a,b);else collMemory.Delete(b,a)}function CollMemory_RemoveInstance(collMemory,inst){collMemory.DeleteEither(inst)}
function CollMemory_Get(collMemory,a,b){const a_uid=a.GetUID();const b_uid=b.GetUID();if(a_uid<b_uid)return collMemory.Get(a,b);else return collMemory.Get(b,a)}
function DoOverlapCondition(sdkInst,rtype,offX,offY){if(!rtype)return false;const inst=sdkInst.GetInstance();const hasOffset=offX!==0||offY!==0;const wi=inst.GetWorldInfo();const runtime=inst.GetRuntime();const collisionEngine=runtime.GetCollisionEngine();const cnd=runtime.GetCurrentCondition();const isOrBlock=cnd.GetEventBlock().IsOrBlock();const ltype=cnd.GetObjectClass();const isInverted=cnd.IsInverted();const rsol=rtype.GetCurrentSol();const isDifferentTypes=ltype!==rtype;rPickType=rtype;needsCollisionFinish=
isDifferentTypes&&!isInverted;rPickFromElseInstances=false;let rinstances;let oldX=0;let oldY=0;let ret=false;if(rsol.IsSelectAll()){tempRect.copy(wi.GetBoundingBox());tempRect.offset(offX,offY);collisionEngine.GetCollisionCandidates(wi.GetLayer(),rtype,tempRect,tempCandidates2);rinstances=tempCandidates2}else if(isOrBlock)if(runtime.IsCurrentConditionFirst()&&!rsol._GetOwnElseInstances().length&&rsol._GetOwnInstances().length)rinstances=rsol._GetOwnInstances();else{rinstances=rsol._GetOwnElseInstances();
rPickFromElseInstances=true}else rinstances=rsol._GetOwnInstances();if(hasOffset){oldX=wi.GetX();oldY=wi.GetY();wi.OffsetXY(offX,offY);wi.SetBboxChanged()}for(const rinst of rinstances)if(collisionEngine.TestOverlap(inst,rinst)){ret=true;if(isInverted)break;if(isDifferentTypes)rToPick.add(rinst)}if(hasOffset){wi.SetXY(oldX,oldY);wi.SetBboxChanged()}C3.clearArray(tempCandidates2);return ret}
function FinishCollisionConditionPicking(type){const isOrBlock=type.GetRuntime().GetCurrentEvent().IsOrBlock();const sol=rPickType.GetCurrentSol();const solInstances=sol._GetOwnInstances();const solElseInstances=sol._GetOwnElseInstances();if(sol.IsSelectAll()){sol.SetSetPicked(rToPick);if(isOrBlock){C3.clearArray(solElseInstances);sol.AddElseInstances(rToPick,rPickType.GetInstances())}}else if(isOrBlock)if(rPickFromElseInstances)sol.TransferElseInstancesToOwn(rToPick);else{sol.AddElseInstances(rToPick,
solInstances);sol.SetSetPicked(rToPick)}else sol.SetSetPicked(rToPick);rPickType.ApplySolToContainer()}function FinishCollisionCondition(type,doPick){if(!needsCollisionFinish)return;if(doPick)FinishCollisionConditionPicking(type);rToPick.clear();rPickType=null;needsCollisionFinish=false}
function OnCollision(rtype){if(this._runtime.IsDebugging())return DebugOnCollision.call(this,rtype);if(!rtype)return false;const runtime=this._runtime;const collisionEngine=runtime.GetCollisionEngine();const eventSheetManager=runtime.GetEventSheetManager();const eventStack=eventSheetManager.GetEventStack();const cnd=eventSheetManager.GetCurrentCondition();const ltype=cnd.GetObjectClass();const savedData=cnd.GetSavedDataMap();const unsavedData=cnd.GetUnsavedDataMap();const oldFrame=eventStack.GetCurrentStackFrame();
const tickCount=runtime.GetTickCount();const lastTickCount=tickCount-1;const currentEvent=oldFrame.GetCurrentEvent();const newFrame=eventStack.Push(currentEvent);let collMemory=savedData.get("collmemory");if(!collMemory){collMemory=C3.New(C3.PairMap);savedData.set("collmemory",collMemory)}if(!unsavedData.get("collisionCreatedDestroyCallback")){unsavedData.set("collisionCreatedDestroyCallback",true);runtime.Dispatcher().addEventListener("instancedestroy",e=>CollMemory_RemoveInstance(collMemory,e.instance))}const lsol=
ltype.GetCurrentSol();const rsol=rtype.GetCurrentSol();const linstances=lsol.GetInstances();let rinstances=null;for(let l=0;l<linstances.length;++l){const linst=linstances[l];if(rsol.IsSelectAll()){collisionEngine.GetCollisionCandidates(linst.GetWorldInfo().GetLayer(),rtype,linst.GetWorldInfo().GetBoundingBox(),tempCandidates1);rinstances=tempCandidates1;collisionEngine.AddRegisteredCollisionCandidates(linst,rtype,rinstances)}else rinstances=rsol.GetInstances();for(let r=0;r<rinstances.length;++r){const rinst=
rinstances[r];if(collisionEngine.TestOverlap(linst,rinst)||collisionEngine.CheckRegisteredCollision(linst,rinst)){const entry=CollMemory_Get(collMemory,linst,rinst);let entryExists=false;let lastCollTickCount=-2;if(typeof entry==="number"){entryExists=true;lastCollTickCount=entry}const shouldRun=!entryExists||lastCollTickCount<lastTickCount;CollMemory_Add(collMemory,linst,rinst,tickCount);if(shouldRun){const solModifiers=currentEvent.GetSolModifiers();eventSheetManager.PushCopySol(solModifiers);const curlsol=
ltype.GetCurrentSol();const currsol=rtype.GetCurrentSol();curlsol._SetSelectAll(false);currsol._SetSelectAll(false);if(ltype===rtype){const solInstances=curlsol._GetOwnInstances();C3.clearArray(solInstances);solInstances.push(linst);solInstances.push(rinst);ltype.ApplySolToContainer()}else{const lsolInstances=curlsol._GetOwnInstances();const rsolInstances=currsol._GetOwnInstances();C3.clearArray(lsolInstances);C3.clearArray(rsolInstances);lsolInstances.push(linst);rsolInstances.push(rinst);ltype.ApplySolToContainer();
rtype.ApplySolToContainer()}currentEvent.Retrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}}else CollMemory_Remove(collMemory,linst,rinst)}C3.clearArray(tempCandidates1)}eventStack.Pop();return false}
function*DebugOnCollision(rtype){if(!rtype)return false;const runtime=this._runtime;const collisionEngine=runtime.GetCollisionEngine();const eventSheetManager=runtime.GetEventSheetManager();const eventStack=eventSheetManager.GetEventStack();const oldFrame=eventStack.GetCurrentStackFrame();const tickCount=runtime.GetTickCount();const lastTickCount=tickCount-1;const currentEvent=oldFrame.GetCurrentEvent();const newFrame=eventStack.Push(currentEvent);const cnd=eventSheetManager.GetCurrentCondition();
const ltype=cnd.GetObjectClass();const savedData=cnd.GetSavedDataMap();const unsavedData=cnd.GetUnsavedDataMap();let collMemory=savedData.get("collmemory");if(!collMemory){collMemory=C3.New(C3.PairMap);savedData.set("collmemory",collMemory)}if(!unsavedData.get("collisionCreatedDestroyCallback")){unsavedData.set("collisionCreatedDestroyCallback",true);runtime.Dispatcher().addEventListener("instancedestroy",e=>CollMemory_RemoveInstance(collMemory,e.instance))}const lsol=ltype.GetCurrentSol();const rsol=
rtype.GetCurrentSol();const linstances=lsol.GetInstances();let rinstances=null;for(let l=0;l<linstances.length;++l){const linst=linstances[l];if(rsol.IsSelectAll()){collisionEngine.GetCollisionCandidates(linst.GetWorldInfo().GetLayer(),rtype,linst.GetWorldInfo().GetBoundingBox(),tempCandidates1);rinstances=tempCandidates1;collisionEngine.AddRegisteredCollisionCandidates(linst,rtype,rinstances)}else rinstances=rsol.GetInstances();for(let r=0;r<rinstances.length;++r){const rinst=rinstances[r];if(collisionEngine.TestOverlap(linst,
rinst)||collisionEngine.CheckRegisteredCollision(linst,rinst)){const entry=CollMemory_Get(collMemory,linst,rinst);let entryExists=false;let lastCollTickCount=-2;if(typeof entry==="number"){entryExists=true;lastCollTickCount=entry}const shouldRun=!entryExists||lastCollTickCount<lastTickCount;CollMemory_Add(collMemory,linst,rinst,tickCount);if(shouldRun){const solModifiers=currentEvent.GetSolModifiers();eventSheetManager.PushCopySol(solModifiers);const curlsol=ltype.GetCurrentSol();const currsol=rtype.GetCurrentSol();
curlsol._SetSelectAll(false);currsol._SetSelectAll(false);if(ltype===rtype){const solInstances=curlsol._GetOwnInstances();C3.clearArray(solInstances);solInstances.push(linst);solInstances.push(rinst);ltype.ApplySolToContainer()}else{const lsolInstances=curlsol._GetOwnInstances();const rsolInstances=currsol._GetOwnInstances();C3.clearArray(lsolInstances);C3.clearArray(rsolInstances);lsolInstances.push(linst);rsolInstances.push(rinst);ltype.ApplySolToContainer();rtype.ApplySolToContainer()}yield*currentEvent.DebugRetrigger(oldFrame,
newFrame);eventSheetManager.PopSol(solModifiers)}}else CollMemory_Remove(collMemory,linst,rinst)}C3.clearArray(tempCandidates1)}eventStack.Pop();return false}function IsOverlapping(rtype){return DoOverlapCondition(this,rtype,0,0)}function IsOverlappingOffset(rtype,offX,offY){return DoOverlapCondition(this,rtype,offX,offY)}function HasParent(){return this.GetWorldInfo().HasParent()}function HasChildren(){return this.GetWorldInfo().HasChildren()}
function PickParent(parentObjectClass,which){const mySol=this.GetCurrentSol();const myInstances=mySol.GetInstances();if(myInstances.length===0)return false;const parentSol=parentObjectClass.GetCurrentSol();const parentInstances=parentSol.GetInstances();if(parentInstances.length===0)return false;const parentInstancesSet=new Set(parentInstances);const pickParents=new Set;for(let i=0,len=myInstances.length;i<len;++i){const myInst=myInstances[i];if(which===1)for(const parentInst of myInst.parents()){if(parentInst.BelongsToObjectClass(parentObjectClass)&&
parentInstancesSet.has(parentInst))pickParents.add(parentInst)}else{let parentInst;if(which===0){parentInst=myInst.GetParent();if(parentInst===null)continue}else parentInst=myInst.GetTopParent();if(parentInst.BelongsToObjectClass(parentObjectClass)&&parentInstancesSet.has(parentInst))pickParents.add(parentInst)}}if(pickParents.size===0)return false;parentSol.SetSetPicked(pickParents);parentObjectClass.ApplySolToContainer();return true}
function PickChildren(childObjectClass,which){const mySol=this.GetCurrentSol();const myInstances=mySol.GetInstances();if(myInstances.length===0)return false;const childSol=childObjectClass.GetCurrentSol();let childInstances=childSol.GetInstances();if(childSol.IsSelectAll()){const childInstsPendingCreate=[...this._runtime.instancesPendingCreateForObjectClass(childObjectClass)];if(childInstsPendingCreate.length>0)childInstances=childInstances.concat(childInstsPendingCreate)}if(childInstances.length===
0)return false;const childInstancesSet=new Set(childInstances);const pickChildren=new Set;for(let i=0,len=myInstances.length;i<len;++i){const myInst=myInstances[i];if(which===2&&!myInst.HasChildren()&&myInst.BelongsToObjectClass(childObjectClass)&&childInstancesSet.has(myInst))pickChildren.add(myInst);for(const childInst of which===0?myInst.children():myInst.allChildren()){if(which===2&&childInst.HasChildren())continue;if(childInst.BelongsToObjectClass(childObjectClass)&&childInstancesSet.has(childInst))pickChildren.add(childInst)}}if(pickChildren.size===
0)return false;childSol.SetSetPicked(pickChildren);childObjectClass.ApplySolToContainer();return true}
function PickNthChild(childObjectClass,index){const mySol=this.GetCurrentSol();const myInstances=mySol.GetInstances();if(myInstances.length===0)return false;const childSol=childObjectClass.GetCurrentSol();let childInstances=childSol.GetInstances();if(childSol.IsSelectAll()){const childInstsPendingCreate=[...this._runtime.instancesPendingCreateForObjectClass(childObjectClass)];if(childInstsPendingCreate.length>0)childInstances=childInstances.concat(childInstsPendingCreate)}if(childInstances.length===
0)return false;const childInstancesSet=new Set(childInstances);const pickChildren=[];for(let i=0,len=myInstances.length;i<len;++i){const myInst=myInstances[i];const childInst=myInst.GetChildAt(index);if(childInst!==null&&childInst.BelongsToObjectClass(childObjectClass)&&childInstancesSet.has(childInst))pickChildren.push(childInst)}if(pickChildren.length===0)return false;childSol.SetArrayPicked(pickChildren);childObjectClass.ApplySolToContainer();return true}
function CompareChildCount(cmp,count){return C3.compare(this._inst.GetChildCount(),cmp,count)}
function AddChild(childObjectClass,transformX,transformY,transformWidth,transformHeight,transformAngle,transformZElevation,destroyWithParent){const inst=this._inst;const actObjectClass=this._runtime.GetCurrentAction().GetObjectClass();for(const child of childObjectClass.allCorrespondingInstances(inst,actObjectClass)){if(!child.GetPlugin().SupportsSceneGraph())return;inst.AddChild(child,{transformX,transformY,transformWidth,transformHeight,transformAngle,transformZElevation,destroyWithParent})}}
function RemoveChild(childObjectClass){const inst=this._inst;const actObjectClass=this._runtime.GetCurrentAction().GetObjectClass();for(const child of childObjectClass.allCorrespondingInstances(inst,actObjectClass))inst.RemoveChild(child)}function RemoveFromParent(){if(!this._inst.HasParent())return;const parent=this._inst.GetParent();parent.RemoveChild(this._inst)}function ChildCount(){return this._inst.GetChildCount()}
function SetMeshSize(cols,rows){cols=Math.floor(cols);rows=Math.floor(rows);const wi=this.GetWorldInfo();if(cols<2||rows<2||!isFinite(cols)||!isFinite(rows)){wi.ReleaseMesh();wi.SetBboxChanged()}else wi.CreateMesh(cols,rows)}function SetMeshPoint(col,row,mode,posx,posy,zElevation,texu,texv){const wi=this.GetWorldInfo();const didBboxChange=wi.SetMeshPoint(col,row,{mode:mode===0?"absolute":"relative",x:posx,y:posy,zElevation,u:texu,v:texv});if(didBboxChange)wi.SetBboxChanged()}
function MeshColumns(){const wi=this.GetWorldInfo();return wi.HasMesh()?wi.GetSourceMesh().GetHSize():0}function MeshRows(){const wi=this.GetWorldInfo();return wi.HasMesh()?wi.GetSourceMesh().GetVSize():0}function SetElementVisible(v){const wi=this.GetWorldInfo();if(v===2)v=!wi.IsVisible();else v=v!==0;if(wi.IsVisible()===v)return;wi.SetVisible(v)}function SetElementCSSStyle(prop,val){this.SetElementCSSStyle(prop,val)}
function SetElementAttribute(attribName,value){this.SetElementAttribute(attribName,""+value)}function RemoveElementAttribute(attribName){this.RemoveElementAttribute(attribName)}function SetElementFocus(){this.FocusElement()}function SetElementBlur(){this.BlurElement()}function IsElementFocused(){return this.IsElementFocused()}function SetElementEnabled(e){this._SetEnabled(e!==0)}function IsElementEnabled(){return this._IsEnabled()}
function CompareInstanceVar(iv,cmp,val){return C3.compare(this.GetInstance().GetInstanceVariableValue(iv),cmp,val)}function IsBoolInstanceVarSet(iv){return!!this.GetInstance().GetInstanceVariableValue(iv)}
function PickInstVarHiLow(which,iv){const sol=this.GetCurrentSol();const instances=sol.GetInstances();if(!instances.length)return false;let inst=instances[0];let pickme=inst;let val=inst.GetInstanceVariableValue(iv);for(let i=1,len=instances.length;i<len;++i){inst=instances[i];const v=inst.GetInstanceVariableValue(iv);if(which===0&&v<val||which===1&&v>val){val=v;pickme=inst}}sol.PickOne(pickme);return true}
function PickByUID(uid){if(this._runtime.GetCurrentCondition().IsInverted())return PickByUID_Inverted(this,uid);else return PickByUID_Normal(this,uid)}
function PickByUID_Normal(objectClass,uid){const inst=objectClass.GetRuntime().GetInstanceByUID(uid);if(!inst)return false;const sol=objectClass.GetCurrentSol();if(!sol.IsSelectAll()&&!sol._GetOwnInstances().includes(inst))return false;if(objectClass.IsFamily()){if(inst.GetObjectClass().BelongsToFamily(objectClass)){sol.PickOne(inst);objectClass.ApplySolToContainer();return true}}else if(inst.GetObjectClass()===objectClass){sol.PickOne(inst);objectClass.ApplySolToContainer();return true}return false}
function PickByUID_Inverted(objectClass,uid){const sol=objectClass.GetCurrentSol();if(sol.IsSelectAll()){sol._SetSelectAll(false);sol.ClearArrays();const instances=objectClass.GetInstances();for(let i=0,len=instances.length;i<len;++i){const inst=instances[i];if(inst.GetUID()===uid)sol._PushElseInstance(inst);else sol._PushInstance(inst)}objectClass.ApplySolToContainer();return!!sol._GetOwnInstances().length}else{const instances=sol._GetOwnInstances();let j=0;for(let i=0,len=instances.length;i<len;++i){const inst=
instances[i];instances[j]=inst;if(inst.GetUID()===uid)sol._PushElseInstance(inst);else++j}C3.truncateArray(instances,j);objectClass.ApplySolToContainer();return!!instances.length}}function Destroy(){this._runtime.DestroyInstance(this._inst)}function OnCreated(){return true}function OnDestroyed(){return true}function SetInstanceVar(iv,value){this.GetInstance().SetInstanceVariableValue(iv,value)}
function AddInstanceVar(iv,value){const instance=this.GetInstance();const lastValue=instance.GetInstanceVariableValue(iv);if(typeof lastValue==="number"&&typeof value!=="number")value=parseFloat(value);else if(typeof lastValue==="string"&&typeof value!=="string")value=value.toString();instance.SetInstanceVariableValue(iv,lastValue+value)}
function SubInstanceVar(iv,value){const instance=this.GetInstance();const lastValue=instance.GetInstanceVariableValue(iv);if(typeof lastValue!=="number")return;if(typeof value!=="number")value=parseFloat(value);instance.SetInstanceVariableValue(iv,lastValue-value)}function SetBoolInstanceVar(iv,value){this.GetInstance().SetInstanceVariableValue(iv,value?1:0)}
function ToggleBoolInstanceVar(iv){const instance=this.GetInstance();instance.SetInstanceVariableValue(iv,instance.GetInstanceVariableValue(iv)===0?1:0)}function LoadFromJsonString(str){let o;try{o=JSON.parse(str)}catch(err){console.error("Failed to load from JSON string: ",err);return}const inst=this.GetInstance();const mode="state";inst._OnBeforeLoad(mode);inst.LoadFromJson(o,mode)}function AsJSON(){return JSON.stringify(this.GetInstance().SaveToJson("state"))}
function ObjectTypeName(){return this.GetInstance().GetObjectClass().GetName()}function Count(){const expObjectClass=this._runtime.GetCurrentEventStackFrame().GetExpressionObjectClass();let count=expObjectClass.GetInstanceCount();for(const inst of this._runtime.instancesPendingCreateForObjectClass(expObjectClass))++count;return count}function PickedCount(){return this._runtime.GetCurrentEventStackFrame().GetExpressionObjectClass().GetCurrentSol().GetInstances().length}
function GetIID(){return this._inst.GetIID()}function GetUID(){return this._inst.GetUID()}
C3.AddCommonACEs=function AddCommonACEs(pluginData,pluginCtor){const isSingleGlobal=pluginData[1];const hasPositionACEs=pluginData[3];const hasSizeACEs=pluginData[4];const hasAngleACEs=pluginData[5];const hasAppearanceACEs=pluginData[6];const hasZOrderACEs=pluginData[7];const hasEffectsACEs=pluginData[8];const hasElementACEs=pluginData[10];const hasElementFocusACEs=pluginData[11];const hasElementEnabledACEs=pluginData[12];const hasSceneGraphACEs=pluginData[13];const hasMeshACEs=pluginData[14];const hasCollisionACEs=
pluginData[15];const Cnds=pluginCtor.Cnds;const Acts=pluginCtor.Acts;const Exps=pluginCtor.Exps;if(hasPositionACEs){Cnds.CompareX=CompareX;Cnds.CompareY=CompareY;Cnds.IsOnScreen=IsOnScreen;Cnds.IsOutsideLayout=IsOutsideLayout;Cnds.PickDistance=PickDistance;Acts.SetX=SetX;Acts.SetY=SetY;Acts.SetPos=SetPos;Acts.SetPosToObject=SetPosToObject;Acts.MoveForward=MoveForward;Acts.MoveAtAngle=MoveAtAngle;Exps.X=GetX;Exps.Y=GetY;Exps.dt=GetDt}if(hasSizeACEs){Cnds.CompareWidth=CompareWidth;Cnds.CompareHeight=
CompareHeight;Acts.SetWidth=SetWidth;Acts.SetHeight=SetHeight;Acts.SetSize=SetSize;Exps.Width=GetWidth;Exps.Height=GetHeight;Exps.BBoxLeft=GetBboxLeft;Exps.BBoxTop=GetBboxTop;Exps.BBoxRight=GetBboxRight;Exps.BBoxBottom=GetBboxBottom}if(hasAngleACEs){Cnds.AngleWithin=IsAngleWithin;Cnds.IsClockwiseFrom=IsAngleClockwiseFrom;Cnds.IsBetweenAngles=IsBetweenAngles;Acts.SetAngle=SetAngle;Acts.RotateClockwise=RotateClockwise;Acts.RotateCounterclockwise=RotateCounterclockwise;Acts.RotateTowardAngle=RotateTowardAngle;
Acts.RotateTowardPosition=RotateTowardPosition;Acts.SetTowardPosition=SetTowardPosition;Exps.Angle=GetAngle}if(hasAppearanceACEs){Cnds.IsVisible=IsVisible;Cnds.CompareOpacity=CompareOpacity;Acts.SetVisible=SetVisible;Acts.SetOpacity=SetOpacity;Acts.SetDefaultColor=SetDefaultColor;Exps.Opacity=GetOpacity;Exps.ColorValue=GetColor}if(hasZOrderACEs){Cnds.IsOnLayer=IsOnLayer;Cnds.PickTopBottom=PickTopBottom;Cnds.CompareZElevation=CompareZElevation;Acts.MoveToTop=MoveToTop;Acts.MoveToBottom=MoveToBottom;
Acts.MoveToLayer=MoveToLayer;Acts.ZMoveToObject=ZMoveToObject;Acts.SetZElevation=SetZElevation;Exps.LayerNumber=LayerNumber;Exps.LayerName=LayerName;Exps.ZIndex=ZIndex;Exps.ZElevation=ZElevation;Exps.TotalZElevation=TotalZElevation}if(hasEffectsACEs){Acts.SetEffectEnabled=SetEffectEnabled;Acts.SetEffectParam=SetEffectParam}if(hasSceneGraphACEs){Cnds.HasParent=HasParent;Cnds.HasChildren=HasChildren;Cnds.PickParent=PickParent;Cnds.PickChildren=PickChildren;Cnds.PickNthChild=PickNthChild;Cnds.CompareChildCount=
CompareChildCount;Acts.AddChild=AddChild;Acts.RemoveChild=RemoveChild;Acts.RemoveFromParent=RemoveFromParent;Exps.ChildCount=ChildCount}if(hasMeshACEs){Acts.SetMeshSize=SetMeshSize;Acts.SetMeshPoint=SetMeshPoint;Exps.MeshColumns=MeshColumns;Exps.MeshRows=MeshRows}if(hasElementACEs){Cnds.IsVisible=IsVisible;Acts.SetVisible=SetElementVisible;Acts.SetCSSStyle=SetElementCSSStyle;Acts.SetElemAttribute=SetElementAttribute;Acts.RemoveElemAttribute=RemoveElementAttribute}if(hasElementFocusACEs){Cnds.IsFocused=
IsElementFocused;Acts.SetFocus=SetElementFocus;Acts.SetBlur=SetElementBlur}if(hasElementEnabledACEs){Cnds.IsEnabled=IsElementEnabled;Acts.SetEnabled=SetElementEnabled}if(hasCollisionACEs){Cnds.OnCollision=OnCollision;Cnds.IsOverlapping=IsOverlapping;Cnds.IsOverlappingOffset=IsOverlappingOffset;pluginCtor.FinishCollisionCondition=FinishCollisionCondition}if(!isSingleGlobal){Cnds.CompareInstanceVar=CompareInstanceVar;Cnds.IsBoolInstanceVarSet=IsBoolInstanceVarSet;Cnds.PickInstVarHiLow=PickInstVarHiLow;
Cnds.PickByUID=PickByUID;Acts.SetInstanceVar=SetInstanceVar;Acts.AddInstanceVar=AddInstanceVar;Acts.SubInstanceVar=SubInstanceVar;Acts.SetBoolInstanceVar=SetBoolInstanceVar;Acts.ToggleBoolInstanceVar=ToggleBoolInstanceVar;Cnds.OnCreated=OnCreated;Cnds.OnDestroyed=OnDestroyed;Acts.Destroy=Destroy;if(!Acts.LoadFromJsonString)Acts.LoadFromJsonString=LoadFromJsonString;if(!Exps.AsJSON)Exps.AsJSON=AsJSON;Exps.Count=Count;Exps.PickedCount=PickedCount;Exps.IID=GetIID;Exps.UID=GetUID;Exps.ObjectTypeName=
ObjectTypeName}};

}

// events/scheduledWait.js
{
'use strict';const C3=self.C3;
C3.ScheduledWait=class ScheduledWait extends C3.DefendedBase{constructor(eventSheetManager){super();this._eventSheetManager=eventSheetManager;this._type="";this._time=-1;this._signalTag="";this._isSignalled=false;this._event=null;this._actIndex=0;this._solModifiers=[];this._sols=new Map;this._callingFunctionBlock=null;this._asyncId=-1;this._functionParameters=null;this._functionInnerLocalVars=null;this._shouldRelease=false}Release(){this._type="";this._time=-1;this._signalTag="";this._event=null;
this._callingFunctionBlock=null;this._functionParameters=null;this._functionInnerLocalVars=null;this._asyncId=-1;C3.clearArray(this._solModifiers);for(const s of this._sols.values())s.Release();this._sols.clear()}_Init(){const eventSheetManager=this._eventSheetManager;const allObjectClasses=eventSheetManager.GetRuntime().GetAllObjectClasses();const frame=eventSheetManager.GetCurrentEventStackFrame();this._event=frame.GetCurrentEvent();this._actIndex=frame.GetActionIndex()+1;const functionBlock=eventSheetManager.FindFirstFunctionBlockParent(this._event);
if(functionBlock){this._callingFunctionBlock=functionBlock;this._functionParameters=functionBlock.CaptureFunctionParameters();this._functionInnerLocalVars=functionBlock._GetAllInnerLocalVariables().map(v=>v.GetValue());if(functionBlock.IsAsync())this._asyncId=functionBlock.PauseCurrentAsyncFunction()}for(const objectClass of allObjectClasses){const sol=objectClass.GetCurrentSol();if(sol.IsSelectAll()&&!this._event.HasSolModifier(objectClass))continue;this._solModifiers.push(objectClass);this._sols.set(objectClass,
C3.New(C3.SolState,sol))}}InitTimer(seconds){this._type="timer";this._Init();this._time=this._eventSheetManager.GetRuntime().GetGameTime()+seconds}InitSignal(tag){this._type="signal";this._Init();this._signalTag=tag.toLowerCase()}InitPromise(p){this._type="promise";this._Init();p.then(()=>this.SetSignalled()).catch(err=>{console.warn("[C3 runtime] Promise rejected in 'Wait for previous actions to complete': ",err);this.SetSignalled()})}IsTimer(){return this._type==="timer"}IsSignal(){return this._type===
"signal"}IsPromise(){return this._type==="promise"}GetSignalTag(){return this._signalTag}IsSignalled(){return this._isSignalled}SetSignalled(){this._isSignalled=true}_ShouldRun(){if(this.IsTimer())return this._time<=this._eventSheetManager.GetRuntime().GetGameTime();else return this.IsSignalled()}_RestoreState(frame){frame._Restore(this._event,this._actIndex);for(const [objectClass,solState]of this._sols.entries()){const sol=objectClass.GetCurrentSol();solState._Restore(sol)}const callingFunctionBlock=
this._callingFunctionBlock;if(callingFunctionBlock){callingFunctionBlock.SetFunctionParameters(this._functionParameters);callingFunctionBlock._GetAllInnerLocalVariables().map((v,index)=>v.SetValue(this._functionInnerLocalVars[index]));if(callingFunctionBlock.IsAsync())callingFunctionBlock.ResumeAsyncFunction(this._asyncId)}}_Run(frame){this._RestoreState(frame);this._event._ResumeActionsAndSubEvents(frame);if(this._callingFunctionBlock&&this._callingFunctionBlock.IsAsync())this._callingFunctionBlock.MaybeFinishAsyncFunctionCall(this._asyncId);
this._eventSheetManager.ClearSol(this._solModifiers);this._shouldRelease=true}async _DebugRun(frame){this._RestoreState(frame);for(const breakEventObject of this._event._DebugResumeActionsAndSubEvents(frame))await this._eventSheetManager.GetRuntime().DebugBreak(breakEventObject);if(this._callingFunctionBlock&&this._callingFunctionBlock.IsAsync())this._callingFunctionBlock.MaybeFinishAsyncFunctionCall(this._asyncId);this._eventSheetManager.ClearSol(this._solModifiers);this._shouldRelease=true}ShouldRelease(){return this._shouldRelease}RemoveInstances(s){for(const solState of this._sols.values())solState.RemoveInstances(s)}_SaveToJson(){const sols=
{};const o={"t":this._time,"st":this._signalTag,"s":this._isSignalled,"ev":this._event.GetSID(),"sm":this._solModifiers.map(oc=>oc.GetSID()),"sols":sols};if(this._event._HasActionIndex(this._actIndex))o["act"]=this._event.GetActionAt(this._actIndex).GetSID();for(const [objectClass,solState]of this._sols)sols[objectClass.GetSID().toString()]=solState._SaveToJson();return o}static _CreateFromJson(eventSheetManager,o){const runtime=eventSheetManager.GetRuntime();const event=eventSheetManager.GetEventBlockBySID(o["ev"]);
if(!event)return null;let actIndex=0;if(o.hasOwnProperty("act")){const act=eventSheetManager.GetActionBySID(o["act"]);if(!act)return null;actIndex=act.GetIndex()}const sw=C3.New(C3.ScheduledWait,eventSheetManager);sw._time=o["t"];sw._type=sw._time===-1?"signal":"timer";sw._signalTag=o["st"];sw._isSignalled=o["s"];sw._event=event;sw._actIndex=actIndex;for(const sid of o["sm"]){const objectClass=runtime.GetObjectClassBySID(sid);if(objectClass)sw._solModifiers.push(objectClass)}for(const [sidStr,solData]of Object.entries(o["sols"])){const sid=
parseInt(sidStr,10);const objectClass=runtime.GetObjectClassBySID(sid);if(!objectClass)continue;const solState=C3.New(C3.SolState,null);solState._LoadFromJson(eventSheetManager,solData);sw._sols.set(objectClass,solState)}return sw}};

}

// events/solState.js
{
'use strict';const C3=self.C3;
C3.SolState=class SolState extends C3.DefendedBase{constructor(sol){super();this._objectClass=null;this._isSelectAll=true;this._instances=[];if(sol){this._objectClass=sol.GetObjectClass();this._isSelectAll=sol.IsSelectAll();C3.shallowAssignArray(this._instances,sol._GetOwnInstances())}}Release(){this._objectClass=null;C3.clearArray(this._instances)}_Restore(sol){sol._SetSelectAll(this._isSelectAll);C3.shallowAssignArray(sol._GetOwnInstances(),this._instances)}RemoveInstances(s){C3.arrayRemoveAllInSet(this._instances,s)}_SaveToJson(){return{"sa":this._isSelectAll,
"insts":this._instances.map(inst=>inst.GetUID())}}_LoadFromJson(eventSheetManager,o){const runtime=eventSheetManager.GetRuntime();this._isSelectAll=!!o["sa"];C3.clearArray(this._instances);for(const uid of o["insts"]){const inst=runtime.GetInstanceByUID(uid);if(inst)this._instances.push(inst)}}};

}

// sdk/sdkPluginBase.js
{
'use strict';const C3=self.C3;function GetNextParamMap(paramMap,param){let nextParamMap=paramMap.get(param);if(!nextParamMap){nextParamMap=new Map;paramMap.set(param,nextParamMap)}return nextParamMap}
C3.SDKPluginBase=class SDKPluginBase extends C3.DefendedBase{constructor(opts){super();this._runtime=opts.runtime;this._isSingleGlobal=!!opts.isSingleGlobal;this._isWorldType=!!opts.isWorld;this._isRotatable=!!opts.isRotatable;this._mustPredraw=!!opts.mustPredraw;this._hasEffects=!!opts.hasEffects;this._supportsSceneGraph=!!opts.supportsSceneGraph;this._supportsMesh=!!opts.supportsMesh;this._singleGlobalObjectClass=null;this._boundACEMethodCache=new Map;this._boundACEMethodCache_1param=new Map;this._boundACEMethodCache_2params=
new Map;this._boundACEMethodCache_3params=new Map}Release(){this._runtime=null}GetRuntime(){return this._runtime}OnCreate(){}IsSingleGlobal(){return this._isSingleGlobal}IsWorldType(){return this._isWorldType}IsRotatable(){return this._isRotatable}MustPreDraw(){return this._mustPredraw}HasEffects(){return this._hasEffects}SupportsSceneGraph(){return this._supportsSceneGraph}SupportsMesh(){return this._supportsMesh}_GetBoundACEMethod(func,bindThis){if(!bindThis)throw new Error("missing 'this' binding");
let ret=this._boundACEMethodCache.get(func);if(ret)return ret;ret=func.bind(bindThis);this._boundACEMethodCache.set(func,ret);return ret}_GetBoundACEMethod_1param(func,bindThis,param0){if(!bindThis)throw new Error("missing 'this' binding");const param0map=GetNextParamMap(this._boundACEMethodCache_1param,func);let ret=param0map.get(param0);if(ret)return ret;ret=func.bind(bindThis,param0);param0map.set(param0,ret);return ret}_GetBoundACEMethod_2params(func,bindThis,param0,param1){if(!bindThis)throw new Error("missing 'this' binding");
const param0map=GetNextParamMap(this._boundACEMethodCache_2params,func);const param1map=GetNextParamMap(param0map,param0);let ret=param1map.get(param1);if(ret)return ret;ret=func.bind(bindThis,param0,param1);param1map.set(param1,ret);return ret}_GetBoundACEMethod_3params(func,bindThis,param0,param1,param2){if(!bindThis)throw new Error("missing 'this' binding");const param0map=GetNextParamMap(this._boundACEMethodCache_3params,func);const param1map=GetNextParamMap(param0map,param0);const param2map=
GetNextParamMap(param1map,param1);let ret=param2map.get(param2);if(ret)return ret;ret=func.bind(bindThis,param0,param1,param2);param2map.set(param2,ret);return ret}_SetSingleGlobalObjectClass(objectClass){if(!this.IsSingleGlobal())throw new Error("must be single-global plugin");this._singleGlobalObjectClass=objectClass}GetSingleGlobalObjectClass(){if(!this.IsSingleGlobal())throw new Error("must be single-global plugin");return this._singleGlobalObjectClass}GetSingleGlobalInstance(){if(!this.IsSingleGlobal())throw new Error("must be single-global plugin");
return this._singleGlobalObjectClass.GetSingleGlobalInstance()}};

}

// sdk/sdkDOMPluginBase.js
{
'use strict';const C3=self.C3;
C3.SDKDOMPluginBase=class SDKDOMPluginBase extends C3.SDKPluginBase{constructor(opts,DOM_COMPONENT_ID){super(opts);this._domComponentId=DOM_COMPONENT_ID;this._nextElementId=0;this._instMap=new Map;this.AddElementMessageHandler("elem-focused",sdkInst=>sdkInst._OnElemFocused());this.AddElementMessageHandler("elem-blurred",sdkInst=>{if(sdkInst)sdkInst._OnElemBlurred()})}Release(){super.Release()}_AddElement(sdkInst){const elementId=this._nextElementId++;this._instMap.set(elementId,sdkInst);return elementId}_RemoveElement(elementId){this._instMap.delete(elementId)}AddElementMessageHandler(handler,
func){this._runtime.AddDOMComponentMessageHandler(this._domComponentId,handler,e=>{const sdkInst=this._instMap.get(e["elementId"]);func(sdkInst,e)})}};

}

// sdk/sdkTypeBase.js
{
'use strict';const C3=self.C3;C3.SDKTypeBase=class SDKTypeBase extends C3.DefendedBase{constructor(objectClass){super();this._objectClass=objectClass;this._runtime=objectClass.GetRuntime();this._plugin=objectClass.GetPlugin()}Release(){this._objectClass=null;this._runtime=null;this._plugin=null}GetObjectClass(){return this._objectClass}GetRuntime(){return this._runtime}GetPlugin(){return this._plugin}GetImageInfo(){return this._objectClass.GetImageInfo()}FinishCondition(f){}LoadTextures(renderer){}ReleaseTextures(){}OnDynamicTextureLoadComplete(){}PreloadTexturesWithInstances(renderer){}LoadTilemapData(){}GetScriptInterfaceClass(){return null}};

}

// sdk/sdkInstanceBase.js
{
'use strict';const C3=self.C3;
C3.SDKInstanceBase=class SDKInstanceBase extends C3.DefendedBase{constructor(inst,domComponentId){super();this._inst=inst;this._domComponentId=domComponentId;this._runtime=inst.GetRuntime();this._objectClass=this._inst.GetObjectClass();this._sdkType=this._objectClass.GetSdkType();this._tickFunc=null;this._tick2Func=null;this._isTicking=false;this._isTicking2=false;this._disposables=null;this._wasReleased=false}Release(){this._wasReleased=true;this._StopTicking();this._StopTicking2();this._tickFunc=
null;this._tick2Func=null;if(this._disposables){this._disposables.Release();this._disposables=null}this._inst=null;this._runtime=null;this._objectClass=null;this._sdkType=null}WasReleased(){return this._wasReleased}GetInstance(){return this._inst}GetRuntime(){return this._runtime}GetObjectClass(){return this._objectClass}GetPlugin(){return this._sdkType.GetPlugin()}GetSdkType(){return this._sdkType}GetScriptInterface(){return this._inst.GetInterfaceClass()}Trigger(method){return this._runtime.Trigger(method,
this._inst,null)}DebugTrigger(method){return this._runtime.DebugTrigger(method,this._inst,null)}TriggerAsync(method){return this._runtime.TriggerAsync(method,this._inst,null)}FastTrigger(method,value){return this._runtime.FastTrigger(method,this._inst,value)}DebugFastTrigger(method,value){return this._runtime.DebugFastTrigger(method,this._inst,value)}ScheduleTriggers(f){return this._runtime.ScheduleTriggers(f)}AddDOMMessageHandler(handler,func){this._runtime.AddDOMComponentMessageHandler(this._domComponentId,
handler,func)}AddDOMMessageHandlers(list){for(const [handler,func]of list)this.AddDOMMessageHandler(handler,func)}PostToDOM(handler,data){this._runtime.PostComponentMessageToDOM(this._domComponentId,handler,data)}PostToDOMAsync(handler,data){return this._runtime.PostComponentMessageToDOMAsync(this._domComponentId,handler,data)}_PostToDOMMaybeSync(handler,data){if(this._runtime.IsInWorker())this.PostToDOM(handler,data);else return window["c3_runtimeInterface"]["_OnMessageFromRuntime"]({"type":"event",
"component":this._domComponentId,"handler":handler,"data":data,"responseId":null})}Tick(){}Tick2(){}_StartTicking(){if(this._isTicking)return;if(!this._tickFunc)this._tickFunc=()=>this.Tick();this._runtime.Dispatcher().addEventListener("tick",this._tickFunc);this._isTicking=true}_StopTicking(){if(!this._isTicking)return;this._runtime.Dispatcher().removeEventListener("tick",this._tickFunc);this._isTicking=false}IsTicking(){return this._isTicking}_StartTicking2(){if(this._isTicking2)return;if(!this._tick2Func)this._tick2Func=
()=>this.Tick2();this._runtime.Dispatcher().addEventListener("tick2",this._tick2Func);this._isTicking2=true}_StopTicking2(){if(!this._isTicking2)return;this._runtime.Dispatcher().removeEventListener("tick2",this._tick2Func);this._isTicking2=false}IsTicking2(){return this._isTicking2}GetDebuggerProperties(){return[]}SaveToJson(){return null}LoadFromJson(o){}GetPropertyValueByIndex(index){}SetPropertyValueByIndex(index,value){}OffsetPropertyValueByIndex(index,offset){if(offset===0)return;const value=
this.GetPropertyValueByIndex(index);if(typeof value!=="number")throw new Error("expected number");this.SetPropertyValueByIndex(index,value+offset)}SetPropertyColorOffsetValueByIndex(offset,r,g,b){}CallAction(actMethod,...args){actMethod.call(this,...args)}CallExpression(expMethod,...args){return expMethod.call(this,...args)}GetScriptInterfaceClass(){return null}};

}

// sdk/sdkWorldInstanceBase.js
{
'use strict';const C3=self.C3;
C3.SDKWorldInstanceBase=class SDKWorldInstanceBase extends C3.SDKInstanceBase{constructor(inst,domComponentId){super(inst,domComponentId);this._worldInfo=inst.GetWorldInfo();this._webglcontextlost_handler=null;this._webglcontextrestored_handler=null}Release(){if(this._webglcontextlost_handler){const dispatcher=this._runtime.Dispatcher();dispatcher.removeEventListener("webglcontextlost",this._webglcontextlost_handler);dispatcher.removeEventListener("webglcontextrestored",this._webglcontextrestored_handler);
this._webglcontextlost_handler=null;this._webglcontextrestored_handler=null}this._worldInfo=null;super.Release()}HandleWebGLContextLoss(){if(this._webglcontextlost_handler)return;this._webglcontextlost_handler=()=>this.OnWebGLContextLost();this._webglcontextrestored_handler=()=>this.OnWebGLContextRestored();const dispatcher=this._runtime.Dispatcher();dispatcher.addEventListener("webglcontextlost",this._webglcontextlost_handler);dispatcher.addEventListener("webglcontextrestored",this._webglcontextrestored_handler)}OnWebGLContextLost(){}OnWebGLContextRestored(){}GetWorldInfo(){return this._worldInfo}IsOriginalSizeKnown(){return false}GetOriginalWidth(){if(!this.IsOriginalSizeKnown())throw new Error("original size not known");
const imageInfo=this.GetCurrentImageInfo();if(imageInfo)return imageInfo.GetWidth();else;}GetOriginalHeight(){if(!this.IsOriginalSizeKnown())throw new Error("original size not known");const imageInfo=this.GetCurrentImageInfo();if(imageInfo)return imageInfo.GetHeight();else;}GetCurrentImageInfo(){return null}GetCurrentSurfaceSize(){const imageInfo=this.GetCurrentImageInfo();if(imageInfo){const texture=imageInfo.GetTexture();if(texture)return[texture.GetWidth(),texture.GetHeight()]}return[100,100]}GetCurrentTexRect(){const imageInfo=
this.GetCurrentImageInfo();return imageInfo?imageInfo.GetTexRect():null}GetCurrentTexQuad(){const imageInfo=this.GetCurrentImageInfo();return imageInfo?imageInfo.GetTexQuad():null}GetImagePoint(nameOrIndex){const wi=this._inst.GetWorldInfo();return[wi.GetX(),wi.GetY()]}LoadTilemapData(data,mapWidth,mapHeight){}TestPointOverlapTile(x,y){}RendersToOwnZPlane(){return true}};

}

// sdk/sdkDOMInstanceBase.js
{
'use strict';const C3=self.C3;const tempRect=C3.New(C3.Rect);
C3.SDKDOMInstanceBase=class SDKDOMInstanceBase extends C3.SDKWorldInstanceBase{constructor(inst,domComponentId){super(inst,domComponentId);this._elementId=this.GetPlugin()._AddElement(this);this._isElementShowing=true;this._elemHasFocus=false;this._autoFontSize=false;this._lastRect=C3.New(C3.Rect,0,0,-1,-1);const canvasManager=this._runtime.GetCanvasManager();this._lastWindowWidth=canvasManager.GetLastWidth();this._lastWindowHeight=canvasManager.GetLastHeight();this._isPendingUpdateState=false;this._StartTicking()}Release(){this.GetPlugin()._RemoveElement(this._elementId);
this.PostToDOMElement("destroy");this._elementId=-1;super.Release()}_GetElementInDOMMode(){if(this._runtime.IsInWorker())throw new Error("not valid in worker mode");return this._PostToDOMElementMaybeSync("get-element")}PostToDOMElement(handler,data){if(!data)data={};data["elementId"]=this._elementId;this.PostToDOM(handler,data)}_PostToDOMElementMaybeSync(handler,data){if(!data)data={};data["elementId"]=this._elementId;return this._PostToDOMMaybeSync(handler,data)}PostToDOMElementAsync(handler,data){if(!data)data=
{};data["elementId"]=this._elementId;return this.PostToDOMAsync(handler,data)}CreateElement(data){if(!data)data={};const isVisible=this.GetWorldInfo().IsVisible();data["elementId"]=this._elementId;data["isVisible"]=isVisible;Object.assign(data,this.GetElementState());this._isElementShowing=!!data["isVisible"];this._PostToDOMMaybeSync("create",data);this._UpdatePosition(true)}SetElementVisible(v){v=!!v;if(this._isElementShowing===v)return;this._isElementShowing=v;this.PostToDOMElement("set-visible",
{"isVisible":v})}Tick(){this._UpdatePosition(false)}_ShouldPreserveElement(){const fullscreenMode=this._runtime.GetCanvasManager().GetFullscreenMode();return C3.Platform.OS==="Android"&&(fullscreenMode==="scale-inner"||fullscreenMode==="scale-outer"||fullscreenMode==="crop")}_UpdatePosition(first){const wi=this.GetWorldInfo();const layer=wi.GetLayer();const x=wi.GetX();const y=wi.GetY();let [cleft,ctop]=layer.LayerToCanvasCss(x,y);let [cright,cbottom]=layer.LayerToCanvasCss(x+wi.GetWidth(),y+wi.GetHeight());
const canvasManager=this._runtime.GetCanvasManager();const rightEdge=canvasManager.GetCssWidth();const bottomEdge=canvasManager.GetCssHeight();if(!wi.IsVisible()||!layer.IsVisible()){this.SetElementVisible(false);return}if(!this._ShouldPreserveElement()){if(cright<=0||cbottom<=0||cleft>=rightEdge||ctop>=bottomEdge){this.SetElementVisible(false);return}if(cleft<1)cleft=1;if(ctop<1)ctop=1;if(cright>=rightEdge)cright=rightEdge-1;if(cbottom>=bottomEdge)cbottom=bottomEdge-1}tempRect.set(cleft,ctop,cright,
cbottom);const curWinWidth=canvasManager.GetLastWidth();const curWinHeight=canvasManager.GetLastHeight();if(!first&&tempRect.equals(this._lastRect)&&this._lastWindowWidth===curWinWidth&&this._lastWindowHeight===curWinHeight){this.SetElementVisible(true);return}this._lastRect.copy(tempRect);this._lastWindowWidth=curWinWidth;this._lastWindowHeight=curWinHeight;this.SetElementVisible(true);let fontSize=null;if(this._autoFontSize)fontSize=layer.GetDisplayScale()-.2;this.PostToDOMElement("update-position",
{"left":Math.round(this._lastRect.getLeft())+canvasManager.GetCanvasClientX(),"top":Math.round(this._lastRect.getTop())+canvasManager.GetCanvasClientY(),"width":Math.round(this._lastRect.width()),"height":Math.round(this._lastRect.height()),"fontSize":fontSize})}FocusElement(){this._PostToDOMElementMaybeSync("focus",{"focus":true})}BlurElement(){this._PostToDOMElementMaybeSync("focus",{"focus":false})}_OnElemFocused(){this._elemHasFocus=true}_OnElemBlurred(){this._elemHasFocus=false}IsElementFocused(){return this._elemHasFocus}SetElementCSSStyle(prop,
val){this.PostToDOMElement("set-css-style",{"prop":C3.CSSToCamelCase(prop),"val":val})}SetElementAttribute(attribName,value){this.PostToDOMElement("set-attribute",{"name":attribName,"val":value})}RemoveElementAttribute(attribName){this.PostToDOMElement("remove-attribute",{"name":attribName})}UpdateElementState(){if(this._isPendingUpdateState)return;this._isPendingUpdateState=true;Promise.resolve().then(()=>{this._isPendingUpdateState=false;this.PostToDOMElement("update-state",this.GetElementState())})}GetElementState(){}GetElementId(){return this._elementId}};

}

// sdk/sdkBehaviorBase.js
{
'use strict';const C3=self.C3;const IBehavior=self.IBehavior;
C3.SDKBehaviorBase=class SDKBehaviorBase extends C3.DefendedBase{constructor(opts){super();this._runtime=opts.runtime;this._myObjectClasses=C3.New(C3.ArraySet);this._myInstances=C3.New(C3.ArraySet);this._iBehavior=null;this._scriptInterfaceClass=opts.scriptInterfaceClass||null}Release(){this._myInstances.Release();this._myObjectClasses.Release();this._runtime=null}GetRuntime(){return this._runtime}OnCreate(){}_AddObjectClass(objectClass){this._myObjectClasses.Add(objectClass)}GetObjectClasses(){return this._myObjectClasses.GetArray()}_AddInstance(inst){this._myInstances.Add(inst)}_RemoveInstance(inst){this._myInstances.Delete(inst)}GetInstances(){return this._myInstances.GetArray()}GetIBehavior(){if(this._iBehavior===null){const CustomScriptClass=
this._scriptInterfaceClass;if(CustomScriptClass){this._iBehavior=new CustomScriptClass(this);if(!(this._iBehavior instanceof IBehavior))throw new TypeError("script interface class must derive from IBehavior");}else this._iBehavior=new IBehavior(this)}return this._iBehavior}};

}

// sdk/sdkBehaviorTypeBase.js
{
'use strict';const C3=self.C3;C3.SDKBehaviorTypeBase=class SDKBehaviorTypeBase extends C3.DefendedBase{constructor(behaviorType){super();this._runtime=behaviorType.GetRuntime();this._behaviorType=behaviorType;this._objectClass=behaviorType.GetObjectClass();this._behavior=behaviorType.GetBehavior();this._behavior._AddObjectClass(this._objectClass)}Release(){this._runtime=null;this._behaviorType=null;this._objectClass=null;this._behavior=null}GetBehaviorType(){return this._behaviorType}GetObjectClass(){return this._objectClass}GetRuntime(){return this._runtime}GetBehavior(){return this._behavior}};

}

// sdk/sdkBehaviorInstanceBase.js
{
'use strict';const C3=self.C3;
C3.SDKBehaviorInstanceBase=class SDKBehaviorInstanceBase extends C3.DefendedBase{constructor(behInst,domComponentId){super();this._behInst=behInst;this._domComponentId=domComponentId;this._inst=behInst.GetObjectInstance();this._runtime=behInst.GetRuntime();this._behaviorType=behInst.GetBehaviorType();this._sdkType=this._behaviorType.GetSdkType();this._isTicking=false;this._isTicking2=false;this._isPostTicking=false;this._disposables=null}Release(){this._StopTicking();this._StopTicking2();this._StopPostTicking();
if(this._disposables){this._disposables.Release();this._disposables=null}this._behInst=null;this._inst=null;this._runtime=null;this._behaviorType=null;this._sdkType=null}GetBehavior(){return this._behaviorType.GetBehavior()}GetBehaviorInstance(){return this._behInst}GetObjectInstance(){return this._inst}GetObjectClass(){return this._inst.GetObjectClass()}GetWorldInfo(){return this._inst.GetWorldInfo()}GetRuntime(){return this._runtime}GetBehaviorType(){return this._behaviorType}GetSdkType(){return this._sdkType}GetScriptInterface(){return this._behInst.GetScriptInterface()}Trigger(method){return this._runtime.Trigger(method,
this._inst,this._behaviorType)}DebugTrigger(method){return this._runtime.DebugTrigger(method,this._inst,this._behaviorType)}TriggerAsync(method){return this._runtime.TriggerAsync(method,this._inst,this._behaviorType)}PostCreate(){}Tick(){}Tick2(){}PostTick(){}_StartTicking(){if(this._isTicking)return;this._runtime._AddBehInstToTick(this);this._isTicking=true}_StopTicking(){if(!this._isTicking)return;this._runtime._RemoveBehInstToTick(this);this._isTicking=false}IsTicking(){return this._isTicking}_StartTicking2(){if(this._isTicking2)return;
this._runtime._AddBehInstToTick2(this);this._isTicking2=true}_StopTicking2(){if(!this._isTicking2)return;this._runtime._RemoveBehInstToTick2(this);this._isTicking2=false}IsTicking2(){return this._isTicking2}_StartPostTicking(){if(this._isPostTicking)return;this._runtime._AddBehInstToPostTick(this);this._isPostTicking=true}_StopPostTicking(){if(!this._isPostTicking)return;this._runtime._RemoveBehInstToPostTick(this);this._isPostTicking=false}IsPostTicking(){return this._isPostTicking}GetDebuggerProperties(){return[]}AddDOMMessageHandler(handler,
func){this._runtime.AddDOMComponentMessageHandler(this._domComponentId,handler,func)}OnSpriteFrameChanged(prevFrame,nextFrame){}SaveToJson(){return null}LoadFromJson(o){}GetPropertyValueByIndex(index){}SetPropertyValueByIndex(index,value){}OffsetPropertyValueByIndex(index,offset){if(offset===0)return;const value=this.GetPropertyValueByIndex(index);if(typeof value!=="number")throw new Error("expected number");this.SetPropertyValueByIndex(index,value+offset)}SetPropertyColorOffsetValueByIndex(index,
offsetR,offsetG,offsetB){}CallAction(actMethod,...args){actMethod.call(this,...args)}CallExpression(expMethod,...args){return expMethod.call(this,...args)}GetScriptInterfaceClass(){return null}};

}

// objects/pluginManager.js
{
'use strict';const C3=self.C3;C3.Plugins={};C3.Behaviors={};
C3.PluginManager=class PluginManager extends C3.DefendedBase{constructor(runtime){super();this._runtime=runtime;this._allPlugins=[];this._pluginsByCtor=new Map;this._systemPlugin=null;this._allBehaviors=[];this._behaviorsByCtor=new Map;this._solidBehavior=null;this._jumpthruBehavior=null}CreatePlugin(pluginData){const Ctor=this._runtime.GetObjectReference(pluginData[0]);if(!Ctor)throw new Error("missing plugin");C3.AddCommonACEs(pluginData,Ctor);const plugin=C3.New(Ctor,{runtime:this._runtime,isSingleGlobal:pluginData[1],
isWorld:pluginData[2],isRotatable:pluginData[5],hasEffects:pluginData[8],mustPredraw:pluginData[9],supportsSceneGraph:pluginData[13],supportsMesh:pluginData[14]});plugin.OnCreate();this._allPlugins.push(plugin);this._pluginsByCtor.set(Ctor,plugin)}CreateSystemPlugin(){this._systemPlugin=C3.New(C3.Plugins.System,{runtime:this._runtime,isSingleGlobal:true});this._systemPlugin.OnCreate()}CreateBehavior(behaviorData){const Ctor=this._runtime.GetObjectReference(behaviorData[1]);if(!Ctor)throw new Error("missing behavior");
const behavior=C3.New(Ctor,{runtime:this._runtime});behavior.OnCreate();this._allBehaviors.push(behavior);this._behaviorsByCtor.set(Ctor,behavior);if(!this._solidBehavior&&C3.Behaviors.solid&&behavior instanceof C3.Behaviors.solid)this._solidBehavior=behavior;else if(!this._jumpthruBehavior&&C3.Behaviors.jumpthru&&behavior instanceof C3.Behaviors.jumpthru)this._jumpthruBehavior=behavior}GetPluginByConstructorFunction(ctor){return this._pluginsByCtor.get(ctor)||null}HasBehaviorByConstructorFunction(ctor){return this._behaviorsByCtor.has(ctor)}GetBehaviorByConstructorFunction(ctor){return this._behaviorsByCtor.get(ctor)||
null}GetSystemPlugin(){return this._systemPlugin}GetSolidBehavior(){return this._solidBehavior}GetJumpthruBehavior(){return this._jumpthruBehavior}};

}

// objects/imageInfo.js
{
'use strict';const C3=self.C3;const allImageInfos=new Set;
C3.ImageInfo=class ImageInfo extends C3.DefendedBase{constructor(){super();this._url="";this._size=0;this._offsetX=0;this._offsetY=0;this._width=0;this._height=0;this._isRotated=false;this._hasMetaData=false;this._imageAsset=null;this._textureState="";this._rcTex=C3.New(C3.Rect);this._quadTex=C3.New(C3.Quad);allImageInfos.add(this)}Release(){this.ReleaseTexture();this._imageAsset=null;allImageInfos.delete(this)}static OnWebGLContextLost(){for(const imageInfo of allImageInfos){imageInfo._textureState="";
imageInfo._rcTex.set(0,0,0,0);imageInfo._quadTex.setFromRect(imageInfo._rcTex)}}LoadData(imageData){this._url=imageData[0];this._size=imageData[1];this._offsetX=imageData[2];this._offsetY=imageData[3];this._width=imageData[4];this._height=imageData[5];this._isRotated=imageData[6];this._hasMetaData=true}LoadDynamicAsset(runtime,url){if(this._imageAsset)throw new Error("already loaded asset");this._url=url;const opts={};if(C3.IsAbsoluteURL(url))opts.loadPolicy="remote";this.LoadAsset(runtime,opts);
return this._imageAsset.Load()}ReplaceWith(otherImageInfo){if(otherImageInfo===this)throw new Error("cannot replace with self");this.ReleaseTexture();this._url=otherImageInfo._url;this._size=otherImageInfo._size;this._offsetX=otherImageInfo._offsetX;this._offsetY=otherImageInfo._offsetY;this._width=otherImageInfo._width;this._height=otherImageInfo._height;this._hasMetaData=otherImageInfo._hasMetaData;this._imageAsset=otherImageInfo._imageAsset;this._textureState=otherImageInfo._textureState;this._rcTex=
otherImageInfo._rcTex;this._quadTex=otherImageInfo._quadTex}GetURL(){return this._url}GetSize(){return this._size}GetOffsetX(){return this._offsetX}GetOffsetY(){return this._offsetY}GetWidth(){return this._width}GetHeight(){return this._height}GetSheetWidth(){return this._imageAsset.GetWidth()}GetSheetHeight(){return this._imageAsset.GetHeight()}LoadAsset(runtime,opts){if(this._imageAsset)throw new Error("already got asset");opts=Object.assign({},opts,{url:this.GetURL(),size:this.GetSize()});this._imageAsset=
runtime.LoadImage(opts)}IsLoaded(){return this._imageAsset&&this._imageAsset.IsLoaded()}async LoadStaticTexture(renderer,opts){if(!this._imageAsset)throw new Error("no asset");if(this._textureState)throw new Error("already loaded texture");this._textureState="loading";const texture=await this._imageAsset.LoadStaticTexture(renderer,opts);if(!texture){this._textureState="";return null}this._textureState="loaded";if(!this._hasMetaData){this._width=texture.GetWidth();this._height=texture.GetHeight();
this._hasMetaData=true}const wr=this._isRotated?this._height:this._width;const hr=this._isRotated?this._width:this._height;this._rcTex.set(this._offsetX,this._offsetY,this._offsetX+wr,this._offsetY+hr);this._rcTex.divide(texture.GetWidth(),texture.GetHeight());this._quadTex.setFromRect(this._rcTex);if(this._isRotated)this._quadTex.rotatePointsAnticlockwise();return texture}ReleaseTexture(){if(!this._textureState)return;if(this._imageAsset)this._imageAsset.ReleaseTexture();this._textureState="";this._rcTex.set(0,
0,0,0);this._quadTex.setFromRect(this._rcTex)}GetTexture(){return this._imageAsset?this._imageAsset.GetTexture():null}GetTexRect(){return this._rcTex}GetTexQuad(){return this._quadTex}async ExtractImageToCanvas(){const srcDrawable=await this._imageAsset.LoadToDrawable();const canvas=C3.CreateCanvas(this._width,this._height);const ctx=canvas.getContext("2d");ctx.drawImage(srcDrawable,this._offsetX,this._offsetY,this._width,this._height,0,0,this._width,this._height);return canvas}};

}

// objects/animationInfo.js
{
'use strict';const C3=self.C3;
C3.AnimationInfo=class AnimationInfo extends C3.DefendedBase{constructor(animData){super();this._name=animData[0];this._speed=animData[1];this._isLooping=!!animData[2];this._repeatCount=animData[3];this._repeatTo=animData[4];this._isPingPong=!!animData[5];this._sid=animData[6];this._frames=animData[7].map(frameData=>C3.New(C3.AnimationFrameInfo,frameData))}Release(){for(const f of this._frames)f.Release();C3.clearArray(this._frames)}LoadAllAssets(runtime){for(const f of this._frames)f.GetImageInfo().LoadAsset(runtime)}LoadAllTextures(renderer,opts){return Promise.all(this._frames.map(f=>
f.GetImageInfo().LoadStaticTexture(renderer,opts)))}ReleaseAllTextures(){for(const f of this._frames)f.GetImageInfo().ReleaseTexture()}GetName(){return this._name}GetSID(){return this._sid}GetFrameCount(){return this._frames.length}GetFrames(){return this._frames}GetFrameAt(i){i=Math.floor(i);if(i<0||i>=this._frames.length)throw new RangeError("invalid frame");return this._frames[i]}GetSpeed(){return this._speed}IsLooping(){return this._isLooping}GetRepeatCount(){return this._repeatCount}GetRepeatTo(){return this._repeatTo}IsPingPong(){return this._isPingPong}};

}

// objects/animationFrameInfo.js
{
'use strict';const C3=self.C3;
C3.AnimationFrameInfo=class AnimationFrameInfo extends C3.DefendedBase{constructor(frameData){super();this._imageInfo=C3.New(C3.ImageInfo);this._imageInfo.LoadData(frameData);this._duration=frameData[7];this._origin=C3.New(C3.Vector2,frameData[8],frameData[9]);this._imagePoints=frameData[10].map(data=>C3.New(C3.ImagePoint,this,data));this._imagePointsByName=new Map;for(const ip of this._imagePoints)this._imagePointsByName.set(ip.GetName().toLowerCase(),ip);this._collisionPoly=null;const polyPoints=
frameData[11];if(polyPoints.length>=6)this._collisionPoly=C3.New(C3.CollisionPoly,polyPoints)}Release(){if(this._collisionPoly){this._collisionPoly.Release();this._collisionPoly=null}this._imageInfo.Release();this._imageInfo=null}GetImageInfo(){return this._imageInfo}GetDuration(){return this._duration}GetOriginX(){return this._origin.getX()}GetOriginY(){return this._origin.getY()}GetCollisionPoly(){return this._collisionPoly}GetImagePointByName(name){return this._imagePointsByName.get(name.toLowerCase())||
null}GetImagePointByIndex(index){index=Math.floor(index);if(index<0||index>=this._imagePoints.length)return null;return this._imagePoints[index]}GetImagePointCount(){return this._imagePoints.length}};

}

// objects/imagePoint.js
{
'use strict';const C3=self.C3;C3.ImagePoint=class ImagePoint extends C3.DefendedBase{constructor(afi,data){super();this._afi=afi;this._name=data[0];this._pos=C3.New(C3.Vector2,data[1],data[2])}Release(){}GetName(){return this._name}GetX(){return this._pos.getX()}GetY(){return this._pos.getY()}GetVec2(){return this._pos}};

}

// objects/objectClass.js
{
'use strict';const C3=self.C3;const C3Debugger=self.C3Debugger;const IObjectClass=self.IObjectClass;const assert=self.assert;
C3.ObjectClass=class ObjectClass extends C3.DefendedBase{constructor(runtime,index,data){super();const PluginCtor=runtime.GetObjectReference(data[1]);this._runtime=runtime;this._plugin=runtime.GetPluginManager().GetPluginByConstructorFunction(PluginCtor);this._sdkType=null;this._instSdkCtor=PluginCtor.Instance;this._index=index;this._sid=data[11];this._name=data[0];this._jsPropName=this._runtime.GetJsPropName(data[14]);this._isGlobal=!!data[9];this._isFamily=!!data[2];this._isOnLoaderLayout=!!data[10];
this._instVars=data[3].map(arr=>({sid:arr[0],type:arr[1],name:arr[2],jsPropName:runtime.GetJsPropName(arr[3])}));this._behaviorsCount=data[4];this._effectsCount=data[5];this._isWorldType=this._plugin.IsWorldType();this._effectList=null;this._collisionGrid=C3.New(C3.SparseGrid,runtime.GetOriginalViewportWidth(),runtime.GetOriginalViewportHeight());this._anyCollisionCellChanged=true;this._anyInstanceParallaxed=false;this._familyMembers=null;this._familyMembersSet=null;this._familyIndex=-1;this._families=
null;this._familiesSet=null;this._familyInstVarMap=null;this._familyBehaviorMap=null;this._familyEffectMap=null;this._isInContainer=false;this._container=null;this._behaviorTypes=data[8].map(behaviorTypeData=>C3.BehaviorType.Create(this,behaviorTypeData));this._behaviorTypesIncludingInherited=[];this._behaviorsByName=new Map;this._behaviorNameToIndex=new Map;this._usedBehaviorCtors=new Set;this._solStack=C3.New(C3.SolStack,this);this._defaultInstanceData=null;this._defaultLayerIndex=0;this._isContained=
false;this._container=null;this._imageInfo=null;this._animations=null;this._animationsByName=null;this._animationsBySid=null;this._textureRefCount=0;this._savedData=new Map;this._unsavedData=new Map;this._instances=[];this._iidsStale=true;if(this._plugin.HasEffects())this._effectList=C3.New(C3.EffectList,this,data[12]);if(data[6]){this._imageInfo=C3.New(C3.ImageInfo);this._imageInfo.LoadData(data[6])}if(data[7]){this._animations=data[7].map(animData=>C3.New(C3.AnimationInfo,animData));this._animationsByName=
new Map;this._animationsBySid=new Map;for(const anim of this._animations){this._animationsByName.set(anim.GetName().toLowerCase(),anim);this._animationsBySid.set(anim.GetSID(),anim)}}if(this._isFamily){this._familyMembers=[];this._familyMembersSet=new Set;this._familyIndex=this._runtime._GetNextFamilyIndex()}else{this._families=[];this._familiesSet=new Set;this._familyInstVarMap=[];this._familyBehaviorMap=[];this._familyEffectMap=[]}this._sdkType=C3.New(PluginCtor.Type,this,data[15]);this._iObjectClass=
null;this._instanceUserScriptClass=null;this._userScriptDispatcher=C3.New(C3.Event.Dispatcher);const CustomScriptClass=this._sdkType.GetScriptInterfaceClass();if(CustomScriptClass){this._iObjectClass=new CustomScriptClass(this);if(!(this._iObjectClass instanceof IObjectClass))throw new TypeError("script interface class must derive from IObjectClass");}else this._iObjectClass=new IObjectClass(this);if(data[13]){const tilemapData=data[13];if(tilemapData){const tilePolyData=tilemapData[0];const maxTileIndex=
tilemapData[1];const brushData=tilemapData[2];this._sdkType.LoadTilemapData(tilePolyData,maxTileIndex,brushData)}}if(!this._runtime.UsesLoaderLayout()||this._isFamily||this._isOnLoaderLayout||!this._isWorldType)this.OnCreate();if(this._plugin.IsSingleGlobal()){this._plugin._SetSingleGlobalObjectClass(this);this._CreateSingleGlobalInstance(data)}}static Create(runtime,index,objectClassData){return C3.New(C3.ObjectClass,runtime,index,objectClassData)}Release(){if(this._imageInfo){this._imageInfo.Release();
this._imageInfo=null}if(this._animations){for(const a of this._animations)a.Release();C3.clearArray(this._animations);this._animationsByName.clear();this._animationsBySid.clear()}this._solStack.Release();this._solStack=null;this._savedData.clear();this._unsavedData.clear();this._container=null;this._runtime=null}_LoadFamily(familyData){for(let i=1,len=familyData.length;i<len;++i){const memberType=this._runtime.GetObjectClassByIndex(familyData[i]);this._familyMembers.push(memberType);this._familyMembersSet.add(memberType);
memberType._families.push(this);memberType._familiesSet.add(this)}}_SetContainer(container){this._isInContainer=true;this._container=container}IsInContainer(){return this._isInContainer}GetContainer(){return this._container}_OnAfterCreate(){let index=0;if(!this._isFamily)for(const family of this._families)for(const familyBehType of family.GetBehaviorTypes()){const lowerName=familyBehType.GetName().toLowerCase();this._behaviorsByName.set(lowerName,familyBehType);this._behaviorNameToIndex.set(lowerName,
index);this._behaviorTypesIncludingInherited.push(familyBehType);++index}for(const behaviorType of this.GetBehaviorTypes()){const lowerName=behaviorType.GetName().toLowerCase();this._behaviorsByName.set(lowerName,behaviorType);this._behaviorNameToIndex.set(lowerName,index);this._behaviorTypesIncludingInherited.push(behaviorType);++index}for(const behaviorType of this._behaviorTypesIncludingInherited)this._usedBehaviorCtors.add(behaviorType.GetBehavior().constructor);if(!this._isFamily&&this._families.length){const familyCount=
this._runtime.GetFamilyCount();C3.extendArray(this._familyInstVarMap,familyCount,0);C3.extendArray(this._familyBehaviorMap,familyCount,0);C3.extendArray(this._familyEffectMap,familyCount,0);const allFx=[];let ivSum=0;let behSum=0;let fxSum=0;for(const family of this._families){const familyIndex=family.GetFamilyIndex();this._familyInstVarMap[familyIndex]=ivSum;ivSum+=family.GetInstanceVariablesCount();this._familyBehaviorMap[familyIndex]=behSum;behSum+=family.GetBehaviorTypesCount();this._familyEffectMap[familyIndex]=
fxSum;fxSum+=family.GetEffectTypesCount();const familyEffectList=family.GetEffectList();if(familyEffectList&&this._effectList)for(const effectType of familyEffectList.GetAllEffectTypes())allFx.push(effectType.Clone(this._effectList))}if(this._effectList)this._effectList.PrependEffectTypes(allFx)}}_CreateSingleGlobalInstance(data){const uid=this._runtime._GetNewUID();const inst=C3.New(C3.Instance,{runtime:this._runtime,objectType:this,uid:uid});inst._CreateSdkInstance(data[16],[]);this._runtime._MapInstanceByUID(uid,
inst);this._instances.push(inst)}GetSdkType(){return this._sdkType}IsOnLoaderLayout(){return this._isOnLoaderLayout}OnCreate(){if(!this._isFamily)this._sdkType.OnCreate()}HasLoadedTextures(){return this._textureRefCount>0}LoadTextures(renderer){if(this._isFamily)return Promise.resolve();this._textureRefCount++;if(this._textureRefCount===1)return this._sdkType.LoadTextures(renderer)||Promise.resolve();else return Promise.resolve()}ReleaseTextures(){if(this._isFamily)return;this._textureRefCount--;
if(this._textureRefCount<0)throw new Error("released textures too many times");if(this._textureRefCount===0)this._sdkType.ReleaseTextures()}OnDynamicTextureLoadComplete(){if(this._isFamily)throw new Error("not applicable to family");this._sdkType.OnDynamicTextureLoadComplete()}PreloadTexturesWithInstances(renderer){if(this._isFamily)return Promise.resolve();return this._sdkType.PreloadTexturesWithInstances(renderer)}GetRuntime(){return this._runtime}GetPlugin(){return this._plugin}GetInstanceSdkCtor(){return this._instSdkCtor}GetName(){return this._name}GetJsPropName(){return this._jsPropName}GetIndex(){return this._index}GetSID(){return this._sid}IsFamily(){return this._isFamily}IsGlobal(){return this._isGlobal}IsWorldType(){return this._isWorldType}GetFamilyIndex(){return this._familyIndex}GetBehaviorTypes(){return this._behaviorTypes}GetBehaviorTypesCount(){return this._behaviorsCount}UsesBehaviorByCtor(Ctor){return Ctor&&
this._usedBehaviorCtors.has(Ctor)}GetInstanceVariablesCount(){return this._instVars.length}GetInstanceVariableSIDs(){return this._instVars.map(iv=>iv.sid)}GetInstanceVariableIndexBySID(sid){return this._instVars.findIndex(iv=>iv.sid===sid)}GetInstanceVariableIndexByName(name){return this._instVars.findIndex(iv=>iv.name===name)}_GetAllInstanceVariableNames(){return this._instVars.map(iv=>iv.name)}_GetAllInstanceVariableJsPropNames(){return this._instVars.map(iv=>iv.jsPropName)}GetInstanceVariableType(i){i=
Math.floor(i);if(i<0||i>=this._instVars.length)throw new RangeError("invalid instance variable index");return this._instVars[i].type}GetInstanceVariableName(i){i=Math.floor(i);if(i<0||i>=this._instVars.length)throw new RangeError("invalid instance variable index");return this._instVars[i].name}GetEffectTypesCount(){return this._effectsCount}GetBehaviorTypesIncludingInherited(){return this._behaviorTypesIncludingInherited}GetBehaviorTypeByName(name){return this._behaviorsByName.get(name.toLowerCase())||
null}GetBehaviorIndexByName(name){const ret=this._behaviorNameToIndex.get(name.toLowerCase());if(typeof ret==="undefined")return-1;else return ret}GetEffectList(){return this._effectList}HasEffects(){return this._plugin.HasEffects()}UsesEffects(){return this._effectList&&this._effectList.HasAnyEffectType()}GetSolStack(){return this._solStack}GetCurrentSol(){return this._solStack.GetCurrentSol()}GetImageInfo(){return this._imageInfo}SetDefaultInstanceData(d){this._defaultInstanceData=d}GetDefaultInstanceData(){return this._defaultInstanceData}_SetDefaultLayerIndex(i){this._defaultLayerIndex=
i}GetDefaultLayerIndex(){return this._defaultLayerIndex}GetAnimations(){return this._animations}GetAnimationCount(){return this._animations.length}GetFamilies(){return this._families}BelongsToFamily(family){return this._familiesSet.has(family)}GetFamilyMembers(){return this._familyMembers}FamilyHasMember(objectType){return this._familyMembersSet.has(objectType)}GetFamilyBehaviorOffset(familyIndex){return this._familyBehaviorMap[familyIndex]}GetFamilyInstanceVariableOffset(familyIndex){return this._familyInstVarMap[familyIndex]}GetAnimationByName(name){if(!this._animations)throw new Error("no animations");
return this._animationsByName.get(name.toLowerCase())||null}GetAnimationBySID(sid){if(!this._animations)throw new Error("no animations");return this._animationsBySid.get(sid)||null}GetFirstAnimationFrame(){if(!this._animations)throw new Error("no animations");return this._animations[0].GetFrameAt(0)}GetDefaultInstanceSize(){if(this._animations){const firstFrameInfo=this.GetFirstAnimationFrame().GetImageInfo();return[firstFrameInfo.GetWidth(),firstFrameInfo.GetHeight()]}else if(this._imageInfo)return[this._imageInfo.GetWidth(),
this._imageInfo.GetHeight()];else return[100,100]}GetSingleGlobalInstance(){if(!this._plugin.IsSingleGlobal())throw new Error("not a single-global plugin");return this._instances[0]}GetInstances(){return this._instances}*instances(){yield*this._instances}*instancesIncludingPendingCreate(){yield*this._instances;for(const inst of this._runtime._GetInstancesPendingCreate())if(inst.GetObjectClass()===this)yield inst}GetInstanceCount(){return this._instances.length}_AddInstance(inst){this._instances.push(inst)}_SetIIDsStale(){this._iidsStale=
true}_UpdateIIDs(){if(!this._iidsStale||this._isFamily)return;const instances=this._instances;let i=0;for(let len=instances.length;i<len;++i)instances[i]._SetIID(i);const instancesPendingCreate=this._runtime._GetInstancesPendingCreate();for(const inst of instancesPendingCreate)if(inst.GetObjectClass()===this)inst._SetIID(i++);this._iidsStale=false}GetInstanceByIID(i){const instances=this._instances;if(i<instances.length)return instances[i];i-=instances.length;const instancesPendingCreate=this._runtime._GetInstancesPendingCreate();
for(const inst of instancesPendingCreate)if(inst.GetObjectClass()===this){if(i===0)return inst;--i}return null}GetFirstPicked(fromInst){if(fromInst&&fromInst.IsInContainer()&&fromInst.GetObjectClass()!==this)for(const s of fromInst.siblings())if(s.GetObjectClass()===this)return s;const instances=this.GetCurrentSol().GetInstances();if(instances.length)return instances[0];else return null}GetPairedInstance(inst){const instances=this.GetCurrentSol().GetInstances();if(instances.length>0)return instances[inst.GetIID()%
instances.length];else return null}*allCorrespondingInstances(inst,objectClass){const myInstances=this.GetCurrentSol().GetInstances();const myInstanceCount=myInstances.length;const otherSol=objectClass.GetCurrentSol();const otherInstances=objectClass.GetCurrentSol().GetInstances();const otherInstanceCount=otherInstances.length;let index=inst.GetIID();if(objectClass.IsFamily()||!otherSol.IsSelectAll())index=otherInstances.indexOf(inst);const divisor=Math.ceil(myInstanceCount/otherInstanceCount);const remainder=
myInstanceCount%otherInstanceCount;let startIndex=0;let correspondCount=0;if(remainder===0||index<remainder){startIndex=index*divisor;correspondCount=divisor}else{startIndex=remainder*divisor+(index-remainder)*(divisor-1);correspondCount=divisor-1}for(let i=startIndex,end=startIndex+correspondCount;i<end;++i)yield myInstances[i]}FinishCondition(f){this._sdkType.FinishCondition(f)}ApplySolToContainer(){if(!this._isInContainer||this._isFamily)return;this._UpdateIIDs();const sol1=this.GetCurrentSol();
const sol1instances=sol1._GetOwnInstances();const selectAll=sol1.IsSelectAll();const es=this._runtime.GetCurrentEventStackFrame();const isOrBlock=es&&es.GetCurrentEvent()&&es.GetCurrentEvent().IsOrBlock();for(const containerType of this._container.objectTypes()){if(containerType===this)continue;containerType._UpdateIIDs();const sol2=containerType.GetCurrentSol();sol2._SetSelectAll(selectAll);if(!selectAll){const sol2instances=sol2._GetOwnInstances();C3.clearArray(sol2instances);for(const inst of sol1instances)sol2instances.push(containerType.GetInstanceByIID(inst.GetIID()));
if(isOrBlock){const sol1elseInstances=sol1._GetOwnElseInstances();const sol2elseInstances=sol2._GetOwnElseInstances();C3.clearArray(sol2elseInstances);for(const inst of sol1elseInstances)sol2elseInstances.push(containerType.GetInstanceByIID(inst.GetIID()))}}}}_TruncateContainerSols(useElseInstances,i){for(const containerType of this.GetContainer().objectTypes()){const sol=containerType.GetCurrentSol();if(useElseInstances)C3.truncateArray(sol._GetOwnElseInstances(),i);else C3.truncateArray(sol._GetOwnInstances(),
i)}}_GetCollisionCellGrid(){return this._collisionGrid}_SetAnyCollisionCellChanged(c){this._anyCollisionCellChanged=!!c}_SetAnyInstanceParallaxed(p){this._anyInstanceParallaxed=!!p}IsAnyInstanceParallaxed(){return this._anyInstanceParallaxed}_UpdateAllCollisionCells(){if(!this._anyCollisionCellChanged||!this._isWorldType)return;for(const inst of this._instances)inst.GetWorldInfo()._UpdateCollisionCell();for(const inst of this._runtime._GetInstancesPendingCreate())if(inst.GetObjectClass()===this)inst.GetWorldInfo()._UpdateCollisionCell();
this._anyCollisionCellChanged=false}GetSavedDataMap(){if(!this._savedData)this._savedData=new Map;return this._savedData}GetUnsavedDataMap(){if(!this._unsavedData)this._unsavedData=new Map;return this._unsavedData}HasSolidBehavior(){return this.UsesBehaviorByCtor(C3.Behaviors.solid)}HasNoSaveBehavior(){return this.UsesBehaviorByCtor(C3.Behaviors.NoSave)}HasPersistBehavior(){return this.UsesBehaviorByCtor(C3.Behaviors.Persist)}_SaveToJson(){const o={"instances":this._instances.map(inst=>inst.SaveToJson())};
if(this._savedData&&this._savedData.size)o["ex"]=C3.ToSuperJSON(this._savedData);return o}_LoadFromJson(o){if(this._savedData){this._savedData.clear();this._savedData=null}const ex=o["ex"];if(ex)this._savedData=C3.FromSuperJSON(ex);const existingInstances=this._instances;const loadInstances=o["instances"];for(let i=0,len=Math.min(existingInstances.length,loadInstances.length);i<len;++i)existingInstances[i].LoadFromJson(loadInstances[i]);for(let i=loadInstances.length,len=existingInstances.length;i<
len;++i)this._runtime.DestroyInstance(existingInstances[i]);for(let i=existingInstances.length,len=loadInstances.length;i<len;++i){const data=loadInstances[i];let layer=null;if(this.IsWorldType()){layer=this._runtime.GetMainRunningLayout().GetLayerBySID(data["w"]["l"]);if(!layer)continue}const inst=this._runtime.CreateInstanceFromData(this._defaultInstanceData||this,layer,false,0,0,true);inst.LoadFromJson(data)}this._SetIIDsStale()}GetIObjectClass(){return this._iObjectClass}UserScriptDispatcher(){return this._userScriptDispatcher}_GetUserScriptInstanceClass(){return this._instanceUserScriptClass}_SetUserScriptInstanceClass(Class){this._instanceUserScriptClass=
Class}DispatchUserScriptEvent(e){const runtime=this._runtime;const shouldTime=runtime.IsDebug()&&!runtime.GetEventSheetManager().IsInEventEngine();if(shouldTime)C3Debugger.StartMeasuringScriptTime();this._userScriptDispatcher.dispatchEvent(e);if(shouldTime)C3Debugger.AddScriptTime()}};

}

// objects/container.js
{
'use strict';const C3=self.C3;C3.Container=class Container extends C3.DefendedBase{constructor(runtime,objectTypes){super();this._runtime=runtime;this._objectTypes=objectTypes;for(const objectType of this._objectTypes)objectType._SetContainer(this)}Release(){this._runtime=null}GetRuntime(){return this._runtime}GetObjectTypes(){return this._objectTypes}objectTypes(){return this._objectTypes}HasAnyWorldType(){return this._objectTypes.some(o=>o.IsWorldType())}};

}

// objects/instance.js
{
'use strict';const C3=self.C3;const C3Debugger=self.C3Debugger;const IInstance=self.IInstance;const EMPTY_ARRAY=[];let nextPuid=0;const savedDataMaps=new WeakMap;const unsavedDataMaps=new WeakMap;const FLAG_DESTROYED=1<<0;const FLAG_TILEMAP=1<<1;const FLAG_MUST_PREDRAW=1<<2;const FLAG_SOLID_ENABLED=1<<3;const FLAG_JUMPTHRU_ENABLED=1<<4;const FLAG_MUST_MITIGATE_Z_FIGHTING=1<<5;
C3.Instance=class Instance extends C3.DefendedBase{constructor(opts){super();this._runtime=opts.runtime;this._objectType=opts.objectType;this._worldInfo=null;this._sdkInst=null;this._iScriptInterface=null;this._iid=0;this._uid=opts.uid;this._puid=nextPuid++;this._flags=0;this._instVarValues=EMPTY_ARRAY;this._behaviorInstances=EMPTY_ARRAY;const behaviorTypes=this._objectType.GetBehaviorTypesIncludingInherited();if(behaviorTypes.length>0)this._behaviorInstances=behaviorTypes.map((behaviorType,index)=>
C3.New(C3.BehaviorInstance,{runtime:this._runtime,behaviorType:behaviorType,instance:this,index}));this._siblings=this._objectType.IsInContainer()?[]:null;this._timeScale=-1;this._dispatcher=null;const plugin=this.GetPlugin();if(plugin.MustPreDraw())this._flags|=FLAG_MUST_PREDRAW;if(plugin.IsWorldType()){this._worldInfo=C3.New(C3.WorldInfo,this,opts.layer);if(opts.worldData)this._worldInfo.Init(opts.worldData);else{this._worldInfo.InitNoData();const [width,height]=this._objectType.GetDefaultInstanceSize();
this._worldInfo.SetSize(width,height);if(this.GetObjectClass().UsesEffects())this._worldInfo.GetInstanceEffectList().LoadDefaultEffectParameters()}}if(opts.instVarData)this._LoadInstanceVariableData(opts.instVarData);else this._LoadDefaultInstanceVariables()}Release(){if(this._iScriptInterface){this._iScriptInterface._Release();this._iScriptInterface=null}if(this._behaviorInstances.length>0){for(const behInst of this._behaviorInstances)behInst.Release();C3.clearArray(this._behaviorInstances)}this._sdkInst.Release();
this._sdkInst=null;const savedData=savedDataMaps.get(this);if(savedData){savedData.clear();savedDataMaps.delete(this)}const unsavedData=unsavedDataMaps.get(this);if(unsavedData){unsavedData.clear();unsavedDataMaps.delete(this)}if(this._siblings)C3.clearArray(this._siblings);if(this._dispatcher){this._dispatcher.Release();this._dispatcher=null}this._runtime=null;this._objectType=null;if(this._instVarValues.length>0)C3.clearArray(this._instVarValues);if(this._worldInfo){this._worldInfo.Release();this._worldInfo=
null}}_LoadInstanceVariableData(instVarData){if(instVarData.length>0){this._instVarValues=[];C3.shallowAssignArray(this._instVarValues,instVarData)}}_LoadDefaultInstanceVariables(){const len=this._objectType.GetInstanceVariablesCount();if(len===0)return;this._instVarValues=[];const typeToInitValue=[0,0,""];for(let i=0;i<len;++i)this._instVarValues.push(typeToInitValue[this._objectType.GetInstanceVariableType(i)])}_CreateSdkInstance(properties,behInstProperties){if(this._sdkInst)throw new Error("already got sdk instance");
for(let i=0,len=this._behaviorInstances.length;i<len;++i){const behInst=this._behaviorInstances[i];behInst._CreateSdkInstance(behInstProperties?behInstProperties[i]:null)}this._sdkInst=C3.New(this._objectType.GetInstanceSdkCtor(),this,properties);if(!(this._sdkInst instanceof C3.SDKInstanceBase))throw new Error("sdk type must derive from SDKInstanceBase");for(let i=0,len=this._behaviorInstances.length;i<len;++i)this._behaviorInstances[i].PostCreate();if(this._objectType._GetUserScriptInstanceClass())this._InitUserScriptInterface()}GetSdkInstance(){return this._sdkInst}GetWorldInfo(){return this._worldInfo}GetRuntime(){return this._runtime}GetTimeScale(){return this._timeScale}GetActiveTimeScale(){const ts=
this._timeScale;if(ts===-1)return this.GetRuntime().GetTimeScale();else return ts}SetTimeScale(ts){ts=+ts;if(ts<0||!isFinite(ts))ts=0;this._timeScale=ts}RestoreTimeScale(){this._timeScale=-1}Dispatcher(){if(!this._dispatcher)this._dispatcher=C3.New(C3.Event.Dispatcher);return this._dispatcher}Draw(renderer){this._sdkInst.Draw(renderer)}OnCreate(properties){this._sdkInst.OnCreate(properties)}_SetHasTilemap(){this._flags|=FLAG_TILEMAP}HasTilemap(){return(this._flags&FLAG_TILEMAP)!==0}_MarkDestroyed(){this._flags|=
FLAG_DESTROYED}IsDestroyed(){return(this._flags&FLAG_DESTROYED)!==0}MustPreDraw(){return(this._flags&FLAG_MUST_PREDRAW)!==0}SetMustMitigateZFighting(){this._flags|=FLAG_MUST_MITIGATE_Z_FIGHTING}MustMitigateZFighting(){return(this._flags&FLAG_MUST_MITIGATE_Z_FIGHTING)!==0}_IsSolidEnabled(){return(this._flags&FLAG_SOLID_ENABLED)!==0}_SetSolidEnabled(e){if(e)this._flags|=FLAG_SOLID_ENABLED;else this._flags&=~FLAG_SOLID_ENABLED}_IsJumpthruEnabled(){return(this._flags&FLAG_JUMPTHRU_ENABLED)!==0}_SetJumpthruEnabled(e){if(e)this._flags|=
FLAG_JUMPTHRU_ENABLED;else this._flags&=~FLAG_JUMPTHRU_ENABLED}SetFlag(bit,enable){bit<<=16;if(enable)this._flags|=bit;else this._flags&=~bit}GetFlag(bit){return(this._flags&bit<<16)!==0}GetCurrentImageInfo(){return this._sdkInst.GetCurrentImageInfo()}GetCurrentSurfaceSize(){return this._sdkInst.GetCurrentSurfaceSize()}GetCurrentTexRect(){return this._sdkInst.GetCurrentTexRect()}GetCurrentTexQuad(){return this._sdkInst.GetCurrentTexQuad()}GetImagePoint(nameOrIndex){return this._sdkInst.GetImagePoint(nameOrIndex)}GetObjectClass(){return this._objectType}RendersToOwnZPlane(){return this._sdkInst.RendersToOwnZPlane()}BelongsToObjectClass(objectClass){if(objectClass.IsFamily())return objectClass.FamilyHasMember(this.GetObjectClass());
else return this.GetObjectClass()===objectClass}VerifySupportsSceneGraph(){if(!this.GetPlugin().SupportsSceneGraph())throw new Error("object does not support scene graph");}HasParent(){return this.GetParent()!==null}GetParent(){const wi=this.GetWorldInfo();if(!wi)return null;const parentWi=wi.GetParent();return parentWi?parentWi.GetInstance():null}GetTopParent(){const wi=this.GetWorldInfo();if(!wi)return null;const parentWi=wi.GetTopParent();return parentWi?parentWi.GetInstance():null}*parents(){const wi=
this.GetWorldInfo();if(!wi)return;for(const parentWi of wi.parents())yield parentWi.GetInstance()}HasChildren(){const wi=this.GetWorldInfo();return wi?wi.HasChildren():false}GetChildren(){const wi=this.GetWorldInfo();if(!wi)return[];return wi.GetChildren().map(wi=>wi.GetInstance())}*children(){const wi=this.GetWorldInfo();if(!wi)return;for(const childWi of wi.children())yield childWi.GetInstance()}*allChildren(){const wi=this.GetWorldInfo();if(!wi)return;for(const childWi of wi.allChildren())yield childWi.GetInstance()}GetChildCount(){const wi=
this.GetWorldInfo();return wi?wi.GetChildCount():0}GetChildAt(index){const wi=this.GetWorldInfo();if(!wi)return null;const childWi=wi.GetChildAt(index);return childWi?childWi.GetInstance():null}AddChild(childInst,opts){this.VerifySupportsSceneGraph();childInst.VerifySupportsSceneGraph();this.GetWorldInfo().AddChild(childInst.GetWorldInfo(),opts||{})}RemoveChild(childInst){const wi=this.GetWorldInfo();if(!wi)return;wi.RemoveChild(childInst.GetWorldInfo())}GetDestroyWithParent(){const wi=this.GetWorldInfo();
return wi?wi.GetDestroyWithParent():false}SetupInitialSceneGraphConnections(){const wi=this.GetWorldInfo();if(!wi)return;const childrenData=wi.GetSceneGraphChildrenExportData();if(!childrenData)return;for(const childData of childrenData){const child=this._runtime.GetInstanceByUID(childData[2]);if(child){const flags=childData[3];this.AddChild(child,{transformX:!!(flags>>0&1),transformY:!!(flags>>1&1),transformWidth:!!(flags>>2&1),transformHeight:!!(flags>>3&1),transformAngle:!!(flags>>4&1),destroyWithParent:!!(flags>>
5&1),transformZElevation:!!(flags>>6&1)})}}}IsInContainer(){return this._siblings!==null}_AddSibling(inst){this._siblings.push(inst)}GetSiblings(){return this._siblings}HasSibling(objectClass){return!!this.GetSibling(objectClass)}GetSibling(objectClass){const siblings=this.siblings();if(siblings===null||siblings.length===0)return false;for(const s of siblings)if(s.GetObjectClass()===objectClass)return s;return null}siblings(){return this._siblings}SetSiblingsSinglePicked(){for(const s of this.siblings())s.GetObjectClass().GetCurrentSol().SetSinglePicked(s)}_PushSiblingsToSolInstances(){for(const s of this.siblings())s.GetObjectClass().GetCurrentSol()._PushInstance(s)}_SetSiblingsToSolInstancesIndex(i){for(const s of this.siblings())s.GetObjectClass().GetCurrentSol()._GetOwnInstances()[i]=
s}_PushSiblingsToSolElseInstances(){for(const s of this.siblings())s.GetObjectClass().GetCurrentSol()._PushElseInstance(s)}_SetSiblingsToSolElseInstancesIndex(i){for(const s of this.siblings())s.GetObjectClass().GetCurrentSol()._GetOwnElseInstances()[i]=s}GetPlugin(){return this._objectType.GetPlugin()}_SetIID(i){this._iid=i}GetIID(){this._objectType._UpdateIIDs();return this._iid}GetUID(){return this._uid}GetPUID(){return this._puid}GetBehaviorInstances(){return this._behaviorInstances}GetBehaviorInstanceFromCtor(ctor){if(!ctor)return null;
for(const behInst of this._behaviorInstances)if(behInst.GetBehavior()instanceof ctor)return behInst;return null}GetBehaviorSdkInstanceFromCtor(ctor){if(!ctor)return null;const behInst=this.GetBehaviorInstanceFromCtor(ctor);if(behInst)return behInst.GetSdkInstance();else return null}GetBehaviorIndexBySID(sid){const behaviorInstances=this._behaviorInstances;for(let i=0,len=behaviorInstances.length;i<len;++i)if(behaviorInstances[i].GetBehaviorType().GetSID()===sid)return i;return-1}GetAllInstanceVariableValues(){return this._instVarValues}_GetAllInstanceVariableNames(){return this._objectType._GetAllInstanceVariableNames()}GetInstanceVariableCount(){return this._instVarValues.length}GetInstanceVariableValue(index){index=
index|0;const instVarValues=this._instVarValues;if(index<0||index>=instVarValues.length)throw new RangeError("invalid instance variable");return instVarValues[index]}_GetInstanceVariableValueUnchecked(index){return this._instVarValues[index]}_GetInstanceVariableTypedValue(index){const ret=this._instVarValues[index];if(this._objectType.GetInstanceVariableType(index)===0)return!!ret;else return ret}SetInstanceVariableValue(index,value){index=index|0;const instVarValues=this._instVarValues;if(index<
0||index>=instVarValues.length)throw new RangeError("invalid instance variable");const type=this._objectType.GetInstanceVariableType(index);switch(type){case 0:instVarValues[index]=value?1:0;break;case 1:instVarValues[index]=typeof value==="number"?value:parseFloat(value);break;case 2:instVarValues[index]=typeof value==="string"?value:value.toString();break;default:throw new Error("unknown instance variable type");}}SetInstanceVariableOffset(index,offset){if(offset===0)return;index=index|0;const instVarValues=
this._instVarValues;if(index<0||index>=instVarValues.length)throw new RangeError("invalid instance variable");const lastValue=instVarValues[index];if(typeof lastValue==="number")if(typeof offset==="number")instVarValues[index]+=offset;else instVarValues[index]+=parseFloat(offset);else if(typeof lastValue==="boolean")throw new Error("can not set offset of boolean variable");else if(typeof lastValue==="string")throw new Error("can not set offset of string variable");else throw new Error("unknown instance variable type");
}GetSavedDataMap(){let ret=savedDataMaps.get(this);if(ret)return ret;ret=new Map;savedDataMaps.set(this,ret);return ret}GetUnsavedDataMap(){let ret=unsavedDataMaps.get(this);if(ret)return ret;ret=new Map;unsavedDataMaps.set(this,ret);return ret}_HasAnyCreateDestroyHandler(name){const objectType=this.GetObjectClass();if(objectType.UserScriptDispatcher().HasAnyHandlerFor(name))return true;for(const family of objectType.GetFamilies())if(family.UserScriptDispatcher().HasAnyHandlerFor(name))return true;
if(this._runtime.UserScriptDispatcher().HasAnyHandlerFor(name))return true;return false}_TriggerOnCreatedOnSelfAndRelated(){const instancesToTriggerOnCreated=new Set;instancesToTriggerOnCreated.add(this);const wi=this.GetWorldInfo();if(wi&&wi.HasChildren())for(const c of this.allChildren()){instancesToTriggerOnCreated.add(c);if(!c.IsInContainer())continue;for(const s of c.siblings())instancesToTriggerOnCreated.add(s)}if(this.IsInContainer())for(const s of this.siblings())instancesToTriggerOnCreated.add(s);
for(const instance of instancesToTriggerOnCreated.values())instance._TriggerOnCreated()}_TriggerOnCreated(){if(this._HasAnyCreateDestroyHandler("instancecreate")){const objectType=this.GetObjectClass();const instCreateEvent=new C3.Event("instancecreate");instCreateEvent.instance=this.GetInterfaceClass();objectType.DispatchUserScriptEvent(instCreateEvent);for(const family of objectType.GetFamilies())family.DispatchUserScriptEvent(instCreateEvent);this._runtime.DispatchUserScriptEvent(instCreateEvent)}this._runtime.Trigger(this.GetPlugin().constructor.Cnds.OnCreated,
this,null)}_TriggerOnDestroyed(){this._runtime.Trigger(this.GetPlugin().constructor.Cnds.OnDestroyed,this,null)}_FireDestroyedScriptEvents(isEndingLayout){if(this._iScriptInterface){const e=new C3.Event("destroy");e.isEndingLayout=isEndingLayout;this.DispatchUserScriptEvent(e)}if(!this._HasAnyCreateDestroyHandler("instancedestroy"))return;const objectType=this.GetObjectClass();const instDestroyEvent=new C3.Event("instancedestroy");instDestroyEvent.instance=this.GetInterfaceClass();instDestroyEvent.isEndingLayout=
isEndingLayout;objectType.DispatchUserScriptEvent(instDestroyEvent);for(const family of objectType.GetFamilies())family.DispatchUserScriptEvent(instDestroyEvent);this._runtime.DispatchUserScriptEvent(instDestroyEvent)}_GetDebuggerProperties(){return this._sdkInst.GetDebuggerProperties()}SaveToJson(mode="full"){const o={};if(mode==="full")o["uid"]=this.GetUID();else o["c3"]=true;if(mode!=="visual-state"){const savedData=savedDataMaps.get(this);if(savedData&&savedData.size)o["ex"]=C3.ToSuperJSON(savedData);
if(this.GetTimeScale()!==-1)o["mts"]=this.GetTimeScale();if(this._objectType.GetInstanceVariablesCount()>0){const ivs={};const ivSids=this._objectType.GetInstanceVariableSIDs();for(let i=0,len=this._instVarValues.length;i<len;++i)ivs[ivSids[i].toString()]=this._instVarValues[i];o["ivs"]=ivs}if(this._behaviorInstances.length){const behs={};for(const behInst of this._behaviorInstances){const data=behInst.SaveToJson();if(data)behs[behInst.GetBehaviorType().GetSID().toString()]=data}o["behs"]=behs}}if(this._worldInfo)o["w"]=
this._worldInfo._SaveToJson(mode);const ownData=this._sdkInst.SaveToJson();if(ownData)o["data"]=ownData;return o}_OnBeforeLoad(mode="full"){if(this._worldInfo)this._worldInfo._OnBeforeLoad(mode)}LoadFromJson(o,mode="full"){if(mode==="full")this._uid=o["uid"];else if(!o["c3"])return;if(mode!=="visual-state"){let savedData=savedDataMaps.get(this);if(savedData){savedData.clear();savedDataMaps.delete(this)}const ex=o["ex"];if(ex){savedData=C3.FromSuperJSON(ex);savedDataMaps.set(this,savedData)}this._timeScale=
o.hasOwnProperty("mts")?o["mts"]:-1;const ivs=o["ivs"];if(ivs)for(const [sidStr,value]of Object.entries(ivs)){const sid=parseInt(sidStr,10);const index=this._objectType.GetInstanceVariableIndexBySID(sid);if(index<0||index>=this._instVarValues.length)continue;let v=value;if(v===null)v=NaN;this._instVarValues[index]=v}}if(this.GetPlugin().IsWorldType()){const worldData=o["w"];const layerSid=worldData["l"];if(this._worldInfo.GetLayer().GetSID()!==layerSid){const oldLayer=this._worldInfo.GetLayer();const newLayer=
oldLayer.GetLayout().GetLayerBySID(layerSid);if(newLayer){this._worldInfo._SetLayer(newLayer);oldLayer._RemoveInstance(this,true);newLayer._AddInstance(this,true);newLayer.SetZIndicesChanged();this._worldInfo.SetBboxChanged()}else if(mode==="full")this._runtime.DestroyInstance(this)}this._worldInfo._LoadFromJson(worldData,mode)}if(mode!=="visual-state"){const behs=o["behs"];if(behs)for(const [sidStr,data]of Object.entries(behs)){const sid=parseInt(sidStr,10);const index=this.GetBehaviorIndexBySID(sid);
if(index<0||index>=this._behaviorInstances.length)continue;this._behaviorInstances[index].LoadFromJson(data)}}const ownData=o["data"];if(ownData)this._sdkInst.LoadFromJson(ownData)}GetInterfaceClass(){return this._iScriptInterface||this._InitUserScriptInterface()}_InitUserScriptInterface(){const DefaultScriptClass=this._worldInfo?self.IWorldInstance:IInstance;const SdkScriptClass=this._sdkInst.GetScriptInterfaceClass();const UserScriptClass=this._objectType._GetUserScriptInstanceClass();const ScriptInterfaceClass=
UserScriptClass||SdkScriptClass||DefaultScriptClass;IInstance._Init(this);this._iScriptInterface=new ScriptInterfaceClass;IInstance._Init(null);if(SdkScriptClass&&!(this._iScriptInterface instanceof DefaultScriptClass))throw new TypeError(`script interface class '${SdkScriptClass.name}' does not extend the right base class '${DefaultScriptClass.name}'`);if(UserScriptClass){const ExpectedBaseClass=SdkScriptClass||DefaultScriptClass;if(!(this._iScriptInterface instanceof ExpectedBaseClass))throw new TypeError(`setInstanceClass(): class '${UserScriptClass.name}' does not extend the right base class '${ExpectedBaseClass.name}'`);
}return this._iScriptInterface}_GetInstVarsScriptDescriptor(instDescriptors){if(this._instVarValues.length===0)return;const varDescriptors={};const instVarJsPropNames=this._objectType._GetAllInstanceVariableJsPropNames();for(let i=0,len=instVarJsPropNames.length;i<len;++i)varDescriptors[instVarJsPropNames[i]]={configurable:false,enumerable:true,get:C3.Instance.prototype._GetInstanceVariableTypedValue.bind(this,i),set:C3.Instance.prototype.SetInstanceVariableValue.bind(this,i)};const instVarsObj=Object.create(Object.prototype,
varDescriptors);instDescriptors.instVars={value:instVarsObj,writable:false}}_GetBehaviorsScriptDescriptor(instDescriptors){const behaviorInstances=this._behaviorInstances;if(behaviorInstances.length===0)return;const behDescriptors={};for(const behInst of behaviorInstances)behDescriptors[behInst.GetBehaviorType().GetJsPropName()]={value:behInst.GetScriptInterface(),writable:false};const behaviorsObj=Object.create(Object.prototype,behDescriptors);instDescriptors.behaviors={value:behaviorsObj,writable:false}}DispatchUserScriptEvent(e){e.instance=
this.GetInterfaceClass();const runtime=this._runtime;const shouldTime=runtime.IsDebug()&&!runtime.GetEventSheetManager().IsInEventEngine();if(shouldTime)C3Debugger.StartMeasuringScriptTime();this.GetInterfaceClass().dispatchEvent(e);if(shouldTime)C3Debugger.AddScriptTime()}};

}

// objects/sceneGraphInfo.js
{
'use strict';const C3=self.C3;
C3.SceneGraphInfo=class SceneGraphInfo extends C3.DefendedBase{constructor(owner){super();this._owner=owner;this._parent=null;this._children=[];this._startWidth=owner.GetWidth();this._startHeight=owner.GetHeight();this._startScaleX=1;this._startScaleY=1;this._parentStartAngle=0}Release(){this._parent=null;C3.clearArray(this._children)}SetParent(parent){this._parent=parent;this._parentStartAngle=parent?parent.GetAngle():0}GetParent(){return this._parent}HasChildren(){return this._children.length>0}GetChildren(){return this._children}GetStartScaleX(){return this._startScaleX}SetStartScaleX(sx){this._startScaleX=
sx}GetStartScaleY(){return this._startScaleY}SetStartScaleY(sy){this._startScaleY=sy}_GetStartWidth(){return this._startWidth}_GetStartHeight(){return this._startHeight}GetParentScaleX(){if(this._owner.GetTransformWithParentWidth())return this._parent.GetWidth()/this._parent._GetSceneGraphInfo()._GetStartWidth();else return 1}GetParentScaleY(){if(this._owner.GetTransformWithParentHeight())return this._parent.GetHeight()/this._parent._GetSceneGraphInfo()._GetStartHeight();else return 1}GetParentStartAngle(){return this._parentStartAngle}_SaveToJson(){return{"sw":this._startWidth,
"sh":this._startHeight,"sx":this._startScaleX,"sy":this._startScaleY,"psa":this._parentStartAngle,"c":this._children.map(c=>{let flagsStr="";if(c.GetTransformWithParentX())flagsStr+="x";if(c.GetTransformWithParentY())flagsStr+="y";if(c.GetTransformWithParentWidth())flagsStr+="w";if(c.GetTransformWithParentHeight())flagsStr+="h";if(c.GetTransformWithParentAngle())flagsStr+="a";if(c.GetTransformWithParentZElevation())flagsStr+="z";if(c.GetDestroyWithParent())flagsStr+="d";return{"uid":c.GetInstance().GetUID(),
"f":flagsStr}})}}_LoadFromJson(o){this._startWidth=o["sw"];this._startHeight=o["sh"];this._startScaleX=o["sx"];this._startScaleY=o["sy"];this._parentStartAngle=o["psa"]}_OnAfterLoad(o){const owner=this._owner;const runtime=owner.GetRuntime();for(const childData of o["c"]){const childUid=childData["uid"];const childInst=runtime.GetInstanceByUID(childUid);const childWi=childInst.GetWorldInfo();const flagsStr=childData["f"];const opts={};opts.transformX=flagsStr.includes("x");opts.transformY=flagsStr.includes("y");
opts.transformWidth=flagsStr.includes("w");opts.transformHeight=flagsStr.includes("h");opts.transformAngle=flagsStr.includes("a");opts.transformZElevation=flagsStr.includes("z");opts.destroyWithParent=flagsStr.includes("d");owner.AddChild(childWi,opts)}}};

}

// objects/worldInfo.js
{
'use strict';const C3=self.C3;const glMatrix=self.glMatrix;const vec3=glMatrix.vec3;const vec4=glMatrix.vec4;const tempRect=C3.New(C3.Rect);const tempQuad=C3.New(C3.Quad);const bboxChangeEvent=C3.New(C3.Event,"bboxchange",false);const tempColor=C3.New(C3.Color,0,0,0,0);const tempCollisionPoly=C3.New(C3.CollisionPoly);const DEFAULT_COLOR=C3.New(C3.Color,1,1,1,1);const DEFAULT_RENDER_CELLS=C3.New(C3.Rect,0,0,-1,-1);const DEFAULT_COLLISION_CELLS=C3.New(C3.Rect,0,0,-1,-1);
const VALID_SET_MESH_POINT_MODES=new Set(["absolute","relative"]);const EMPTY_ARRAY=[];let enableUpdateRendererStateGroup=true;const FLAG_IS_VISIBLE=1<<0;const FLAG_BBOX_CHANGED=1<<1;const FLAG_ENABLE_BBOX_CHANGED_EVENT=1<<2;const FLAG_COLLISION_ENABLED=1<<3;const FLAG_COLLISION_CELL_CHANGED=1<<4;const FLAG_SOLID_FILTER_INCLUSIVE=1<<5;const FLAG_HAS_ANY_ACTIVE_EFFECT=1<<6;const FLAG_IS_ROTATABLE=1<<7;const FLAG_DESTROYED=1<<8;const FLAG_DESTROY_WITH_PARENT=1<<9;
const FLAG_TRANSFORM_WITH_PARENT_X=1<<10;const FLAG_TRANSFORM_WITH_PARENT_Y=1<<11;const FLAG_TRANSFORM_WITH_PARENT_W=1<<12;const FLAG_TRANSFORM_WITH_PARENT_H=1<<13;const FLAG_TRANSFORM_WITH_PARENT_A=1<<14;const FLAG_TRANSFORM_WITH_PARENT_Z_ELEVATION=1<<15;const MASK_ALL_SCENE_GRAPH_FLAGS=FLAG_DESTROY_WITH_PARENT|FLAG_TRANSFORM_WITH_PARENT_X|FLAG_TRANSFORM_WITH_PARENT_Y|FLAG_TRANSFORM_WITH_PARENT_W|FLAG_TRANSFORM_WITH_PARENT_H|FLAG_TRANSFORM_WITH_PARENT_A|FLAG_TRANSFORM_WITH_PARENT_Z_ELEVATION;
const FLAG_MESH_CHANGED=1<<16;const FLAG_PHYSICS_BODY_CHANGED=1<<17;const FLAG_SIN_COS_ANGLE_CHANGED=1<<18;const FLAG_USE_POINTS_SHADER_PROGRAM=1<<19;const FLAG_DRAW_BACK_FACE_ONLY=1<<20;const FLAG_DRAW_NON_BACK_FACES_ONLY=1<<21;const FLAG_BLEND_MODE_BIT_OFFSET=26;const FLAG_BLEND_MODE_MASK=31<<FLAG_BLEND_MODE_BIT_OFFSET;
C3.WorldInfo=class WorldInfo extends C3.DefendedBase{constructor(inst,layer){super();this._inst=inst;this._objectClass=inst.GetObjectClass();this._runtime=inst.GetRuntime();this._layer=layer;this._zIndex=-1;this._flags=FLAG_IS_VISIBLE|FLAG_BBOX_CHANGED|FLAG_COLLISION_ENABLED|FLAG_COLLISION_CELL_CHANGED|FLAG_MESH_CHANGED|FLAG_PHYSICS_BODY_CHANGED;if(this._objectClass.GetPlugin().IsRotatable())this._flags|=FLAG_IS_ROTATABLE;this._x=NaN;this._y=NaN;this._zElevation=NaN;this._w=NaN;this._h=NaN;this._depth=
NaN;this._a=NaN;this._sinA=NaN;this._cosA=NaN;this._ox=NaN;this._oy=NaN;this._boundingBox=C3.New(C3.Rect);this._boundingQuad=C3.New(C3.Quad);this._collisionCells=DEFAULT_COLLISION_CELLS;this._renderCells=DEFAULT_RENDER_CELLS;this._sourceCollisionPoly=null;this._transformedPolyInfo=null;this._solidFilterTags=null;this._color=DEFAULT_COLOR;this._colorPremultiplied=DEFAULT_COLOR;this._stateGroup=null;this._instanceEffectList=null;if(this._inst.GetObjectClass().UsesEffects())this._instanceEffectList=
C3.New(C3.InstanceEffectList,this._inst,this);this._sceneGraphInfo=null;this._sceneGraphFlagsExportData=NaN;this._sceneGraphChildrenExportData=null;this._sceneGraphZIndexExportData=NaN;this._sceneGraphZIndex=NaN;this._meshInfo=null}_MarkDestroyed(){this._flags|=FLAG_DESTROYED}Release(){if(this._stateGroup){this._runtime.GetRenderer().ReleaseStateGroup(this._stateGroup);this._stateGroup=null}this._sourceCollisionPoly=null;if(this._transformedPolyInfo){this._transformedPolyInfo.poly.Release();this._transformedPolyInfo=
null}if(this._solidFilterTags){this._solidFilterTags.clear();this._solidFilterTags=null}this.ReleaseMesh();if(this.HasParent())this.GetParent().RemoveChild(this);if(this.HasChildren()){const childrenToRelease=[...this.GetChildren()];for(const child of childrenToRelease)this.RemoveChild(child)}this._ReleaseSceneGraphInfo();this._inst=null;this._objectClass=null;this._runtime=null;this._layer=null}Init(data){enableUpdateRendererStateGroup=false;this.SetXY(data[0],data[1]);this.SetZElevation(data[2]);
this.SetSize(data[3],data[4]);this._depth=0;if(this.IsRotatable())this.SetAngle(data[6]);else this._a=0;tempColor.setFromJSON(data[7]);this._SetColor(tempColor);this.SetOriginX(data[8]);this.SetOriginY(data[9]);this.SetBlendMode(data[10]);if(this._instanceEffectList)this._instanceEffectList._LoadEffectParameters(data[12]);if(data[14]){this._sceneGraphFlagsExportData=data[14][0];this._sceneGraphChildrenExportData=data[14][1];this._sceneGraphZIndexExportData=data[14][2]}if(data[15]){const meshData=
data[15];this.CreateMesh(meshData[0],meshData[1]);const sourceMesh=this.GetSourceMesh();const meshRows=meshData[2];for(let y=0,lenY=meshRows.length;y<lenY;++y){const rowData=meshRows[y];for(let x=0,lenX=rowData.length;x<lenX;++x){const d=rowData[x];const pt=sourceMesh.GetMeshPointAt(x,y);pt.SetX(d[0]);pt.SetY(d[1]);pt.SetZElevation(d[2]);pt.SetU(d[3]);pt.SetV(d[4])}}}enableUpdateRendererStateGroup=true;this._UpdateRendererStateGroup()}InitNoData(){this._x=0;this._y=0;this._zElevation=0;this._w=0;
this._h=0;this._depth=0;this._a=0;this._sinA=0;this._cosA=1;this._ox=0;this._oy=0;this._UpdateRendererStateGroup()}GetRuntime(){return this._runtime}GetObjectClass(){return this._objectClass}GetInstance(){return this._inst}_GetParentOffsetAngle(){if(this.GetTransformWithParentAngle())return this.GetParent().GetAngle()-this._sceneGraphInfo.GetParentStartAngle();else return 0}SetX(x){x=+x;if(this.GetTransformWithParentX()){const sgi=this._sceneGraphInfo;const dx=x-this.GetX();const da=-this._GetParentOffsetAngle();
if(da===0)this._x+=dx/sgi.GetParentScaleX();else{this._x+=Math.cos(da)*dx/sgi.GetParentScaleX();if(this.GetTransformWithParentY())this._y+=Math.sin(da)*dx/sgi.GetParentScaleY()}}else this._x=x}OffsetX(x){x=+x;if(this.GetTransformWithParentX())this.SetX(this.GetX()+x);else this._x+=x}GetX(){if(this.GetTransformWithParentX()){let x=this._x;const sgi=this._sceneGraphInfo;const parent=this.GetParent();const da=this._GetParentOffsetAngle();if(da===0)x*=sgi.GetParentScaleX();else{x=x*sgi.GetParentScaleX()*
Math.cos(da);if(this.GetTransformWithParentY())x-=this._y*sgi.GetParentScaleY()*Math.sin(da)}return parent.GetX()+x}else return this._x}SetY(y){y=+y;if(this.GetTransformWithParentY()){const sgi=this._sceneGraphInfo;const dy=y-this.GetY();const da=-this._GetParentOffsetAngle();if(da===0)this._y+=dy/sgi.GetParentScaleY();else{if(this.GetTransformWithParentX())this._x-=Math.sin(da)*dy/sgi.GetParentScaleX();this._y+=Math.cos(da)*dy/sgi.GetParentScaleY()}}else this._y=y}OffsetY(y){y=+y;if(this.GetTransformWithParentY())this.SetY(this.GetY()+
y);else this._y+=y}GetY(){if(this.GetTransformWithParentY()){let y=this._y;const sgi=this._sceneGraphInfo;const parent=this.GetParent();const da=this._GetParentOffsetAngle();if(da===0)y*=sgi.GetParentScaleY();else{y=y*sgi.GetParentScaleY()*Math.cos(da);if(this.GetTransformWithParentX())y+=this._x*sgi.GetParentScaleX()*Math.sin(da)}return parent.GetY()+y}else return this._y}SetXY(x,y){x=+x;y=+y;if(this.GetTransformWithParentXOrY()){const isTransformX=this.GetTransformWithParentX();const isTransformY=
this.GetTransformWithParentY();const sgi=this._sceneGraphInfo;const dx=x-this.GetX();const dy=y-this.GetY();const da=-this._GetParentOffsetAngle();if(da===0){if(isTransformX)this._x+=dx/sgi.GetParentScaleX();else this._x=x;if(isTransformY)this._y+=dy/sgi.GetParentScaleY();else this._y=y}else{const sinDa=Math.sin(da);const cosDa=Math.cos(da);if(isTransformX)if(isTransformY)this._x+=(cosDa*dx-sinDa*dy)/sgi.GetParentScaleX();else this._x+=cosDa*dx/sgi.GetParentScaleX();else this._x=x;if(isTransformY)if(isTransformX)this._y+=
(sinDa*dx+cosDa*dy)/sgi.GetParentScaleY();else this._y+=cosDa*dy/sgi.GetParentScaleY();else this._y=y}}else{this._x=x;this._y=y}}OffsetXY(x,y){x=+x;y=+y;if(this.GetTransformWithParentXOrY())this.SetXY(this.GetX()+x,this.GetY()+y);else{this._x+=x;this._y+=y}}EqualsXY(x,y){return this.GetX()===x&&this.GetY()===y}SetZElevation(z){z=+z;if(this.GetTransformWithParentZElevation())z-=this.GetParent().GetZElevation();if(this._zElevation===z)return;this._zElevation=z;this._UpdateZElevation();const layer=this.GetLayer();
if(this._zElevation!==0)layer._SetAnyInstanceZElevated();layer.SetZIndicesChanged()}_UpdateZElevation(){this._UpdateRendererStateGroup();if(this.HasChildren()){const children=this.GetChildren();for(let i=0,len=children.length;i<len;i++){const child=children[i];if(child.GetTransformWithParentZElevation())child._UpdateZElevation()}}}OffsetZElevation(z){this.SetZElevation(this.GetZElevation()+z)}GetZElevation(){if(this.GetTransformWithParentZElevation())return this.GetParent().GetZElevation()+this._zElevation;
else return this._zElevation}GetTotalZElevation(){return this.GetLayer().GetZElevation()+this.GetZElevation()}SetWidth(w){w=+w;if(this.GetTransformWithParentWidth())this._w*=w/this.GetWidth();else this._w=w}OffsetWidth(w){w=+w;if(this.GetTransformWithParentWidth())this.SetWidth(this.GetWidth()+w);else this._w+=w}GetWidth(){if(this.GetTransformWithParentWidth())return this.GetParent().GetWidth()*this._w;else return this._w}SetHeight(h){h=+h;if(this.GetTransformWithParentHeight())this._h*=h/this.GetHeight();
else this._h=h}OffsetHeight(h){h=+h;if(this.GetTransformWithParentHeight())this.SetHeight(this.GetHeight()+h);else this._h+=h}GetHeight(){if(this.GetTransformWithParentHeight())return this.GetParent().GetHeight()*this._h;else return this._h}SetSize(w,h){w=+w;h=+h;if(this.GetTransformWithParentWidth())this._w*=w/this.GetWidth();else this._w=w;if(this.GetTransformWithParentHeight())this._h*=h/this.GetHeight();else this._h=h}GetDepth(){return this._depth}SetDepth(d){if(d<0)throw new RangeError("invalid depth");
this._depth=d}GetSceneGraphScale(){if(this.HasParent()){const sgi=this._sceneGraphInfo;return Math.min(sgi.GetParentScaleX(),sgi.GetParentScaleY())}else return 1}IsRotatable(){return(this._flags&FLAG_IS_ROTATABLE)!==0}SetAngle(a){a=+a;if(!this.IsRotatable())return;if(this.GetTransformWithParentAngle())a-=this.GetParent().GetAngle();a=C3.clampAngle(a);if(this._a===a)return;this._a=a;this._MarkSinCosAngleChanged()}OffsetAngle(a){a=+a;if(a===0||!this.IsRotatable())return;this._a=C3.clampAngle(this._a+
a);this._MarkSinCosAngleChanged()}_MarkSinCosAngleChanged(){this._flags|=FLAG_SIN_COS_ANGLE_CHANGED;if(this.HasChildren()){const children=this.GetChildren();for(let i=0,len=children.length;i<len;i++)children[i]._MarkSinCosAngleChanged()}}GetAngle(){if(this.GetTransformWithParentAngle())return C3.clampAngle(this.GetParent().GetAngle()+this._a);else return this._a}_MaybeUpdateSinCosAngle(){const flags=this._flags;if((flags&FLAG_SIN_COS_ANGLE_CHANGED)===0)return;const a=this.GetAngle();this._sinA=Math.sin(a);
this._cosA=Math.cos(a);this._flags=flags&~FLAG_SIN_COS_ANGLE_CHANGED}GetSinAngle(){this._MaybeUpdateSinCosAngle();return this._sinA}GetCosAngle(){this._MaybeUpdateSinCosAngle();return this._cosA}SetOriginX(x){this._ox=+x}OffsetOriginX(x){this._ox+=+x}GetOriginX(){return this._ox}SetOriginY(y){this._oy=+y}OffsetOriginY(y){this._oy+=+y}GetOriginY(){return this._oy}_SetColor(c){if(this._color.equals(c))return;if(this._color===DEFAULT_COLOR){this._color=C3.New(C3.Color,c);this._colorPremultiplied=C3.New(C3.Color,
c);this._colorPremultiplied.premultiply()}else if(c.equalsRgba(1,1,1,1)){this._color=DEFAULT_COLOR;this._colorPremultiplied=DEFAULT_COLOR}else{this._color.set(c);this._colorPremultiplied.set(c);this._colorPremultiplied.premultiply()}this._UpdateRendererStateGroup()}SetOpacity(o){o=C3.clamp(+o,0,1);if(this._color.a===o)return;tempColor.copyRgb(this._color);tempColor.a=o;this._SetColor(tempColor)}OffsetOpacity(o){this.SetOpacity(this.GetOpacity()+o)}GetOpacity(){return this._color.a}SetUnpremultipliedColor(c){if(this._color.equalsIgnoringAlpha(c))return;
tempColor.copyRgb(c);tempColor.a=this._color.a;this._SetColor(tempColor)}SetUnpremultipliedColorRGB(r,g,b){tempColor.setRgb(r,g,b);this.SetUnpremultipliedColor(tempColor)}OffsetUnpremultipliedColorRGB(r,g,b){if(r===0&&g===0&&b===0)return;tempColor.copyRgb(this._color);tempColor.r+=r;tempColor.g+=g;tempColor.b+=b;this.SetUnpremultipliedColor(tempColor)}GetUnpremultipliedColor(){return this._color}GetPremultipliedColor(){return this._colorPremultiplied}GetDestroyWithParent(){return(this._flags&FLAG_DESTROY_WITH_PARENT)!==
0}SetDestroyWithParent(d){this._SetFlag(FLAG_DESTROY_WITH_PARENT,d)}GetTransformWithParentX(){return(this._flags&FLAG_TRANSFORM_WITH_PARENT_X)!==0}SetTransformWithParentX(tpx){this._SetFlag(FLAG_TRANSFORM_WITH_PARENT_X,tpx)}GetTransformWithParentY(){return(this._flags&FLAG_TRANSFORM_WITH_PARENT_Y)!==0}GetTransformWithParentXOrY(){return(this._flags&(FLAG_TRANSFORM_WITH_PARENT_X|FLAG_TRANSFORM_WITH_PARENT_Y))!==0}SetTransformWithParentY(tpx){this._SetFlag(FLAG_TRANSFORM_WITH_PARENT_Y,tpx)}GetTransformWithParentWidth(){return(this._flags&
FLAG_TRANSFORM_WITH_PARENT_W)!==0}SetTransformWithParentWidth(tpw){this._SetFlag(FLAG_TRANSFORM_WITH_PARENT_W,tpw)}GetTransformWithParentHeight(){return(this._flags&FLAG_TRANSFORM_WITH_PARENT_H)!==0}SetTransformWithParentHeight(tph){this._SetFlag(FLAG_TRANSFORM_WITH_PARENT_H,tph)}GetTransformWithParentAngle(){return(this._flags&FLAG_TRANSFORM_WITH_PARENT_A)!==0}SetTransformWithParentAngle(tpa){this._SetFlag(FLAG_TRANSFORM_WITH_PARENT_A,tpa)}GetTransformWithParentZElevation(){return(this._flags&FLAG_TRANSFORM_WITH_PARENT_Z_ELEVATION)!==
0}SetTransformWithParentZElevation(tpz){this._SetFlag(FLAG_TRANSFORM_WITH_PARENT_Z_ELEVATION,tpz)}_ClearAllSceneGraphFlags(){this._flags&=~MASK_ALL_SCENE_GRAPH_FLAGS}AddChild(child,opts){if(child===this)return;if(child.HasParent())return;if(this._HasChildRecursive(child))return;if(this._HasAnyParent(child))return;const absX=child.GetX();const absY=child.GetY();const absW=child.GetWidth();const absH=child.GetHeight();const absA=child.GetAngle();const absZElevation=child.GetZElevation();child._SetParent(this);
child.SetTransformWithParentX(opts.transformX);child.SetTransformWithParentY(opts.transformY);child.SetTransformWithParentWidth(opts.transformWidth);child.SetTransformWithParentHeight(opts.transformHeight);child.SetTransformWithParentAngle(opts.transformAngle);child.SetTransformWithParentZElevation(opts.transformZElevation);child.SetDestroyWithParent(opts.destroyWithParent);if(opts.transformX){child._x=absX-this.GetX();if(opts.transformWidth)child._x/=this.GetWidth()/this._sceneGraphInfo._GetStartWidth()}if(opts.transformY){child._y=
absY-this.GetY();if(opts.transformHeight)child._y/=this.GetHeight()/this._sceneGraphInfo._GetStartHeight()}if(opts.transformWidth){child._w=absW/this.GetWidth();child._sceneGraphInfo.SetStartScaleX(child._w)}if(opts.transformHeight){child._h=absH/this.GetHeight();child._sceneGraphInfo.SetStartScaleY(child._h)}if(opts.transformAngle)child._a=absA-this.GetAngle();if(opts.transformZElevation)child._zElevation=absZElevation-this.GetZElevation();this._AddChildToSceneGraphInfo(child);this.SetBboxChanged()}RemoveChild(child){if(child.GetParent()!==
this)return;const absX=child.GetX();const absY=child.GetY();const absW=child.GetWidth();const absH=child.GetHeight();const absA=child.GetAngle();const absZElevation=child.GetZElevation();child._SetParent(null);child._ClearAllSceneGraphFlags();child.SetXY(absX,absY);child.SetSize(absW,absH);child.SetAngle(absA);child.SetZElevation(absZElevation);this._RemoveChildFromSceneGraphInfo(child);this.SetBboxChanged()}_ResetAllSceneGraphState(){for(const c of this.children())this.RemoveChild(c);const parent=
this.GetParent();if(parent)parent.RemoveChild(this);this._ClearAllSceneGraphFlags()}HasParent(){return this.GetParent()!==null}GetParent(){const sgi=this._sceneGraphInfo;return sgi!==null?sgi.GetParent():null}GetTopParent(){let p=this;while(p.HasParent())p=p.GetParent();return p}*parents(){let parent=this.GetParent();while(parent){yield parent;parent=parent.GetParent()}}HasChild(child){return this.GetChildren().includes(child)}HasChildren(){const sgi=this._sceneGraphInfo;return sgi!==null?sgi.HasChildren():
false}GetChildren(){const sgi=this._sceneGraphInfo;return sgi!==null?sgi.GetChildren():EMPTY_ARRAY}children(){return this.GetChildren()}*allChildren(){for(const child of this.children()){yield child;yield*child.allChildren()}}GetChildCount(){return this.GetChildren().length}GetChildAt(index){const children=this.GetChildren();index=Math.floor(+index);if(index<0||index>=children.length)return null;return children[index]}_CreateSceneGraphInfo(parent){if(!this._sceneGraphInfo)this._sceneGraphInfo=C3.New(C3.SceneGraphInfo,
this);if(parent)this._sceneGraphInfo.SetParent(parent)}_GetSceneGraphInfo(){return this._sceneGraphInfo}_ReleaseSceneGraphInfo(){if(!this._sceneGraphInfo)return;this._sceneGraphInfo.Release();this._sceneGraphInfo=null}_SetParent(parent){if(parent){parent._CreateSceneGraphInfo(null);this._CreateSceneGraphInfo(parent)}else{if(this._sceneGraphInfo)this._sceneGraphInfo.SetParent(null);if(!this.HasChildren())this._ReleaseSceneGraphInfo()}}_HasAnyParent(child){if(!this.HasParent())return false;const parent=
this.GetParent();if(parent===child)return true;return parent._HasAnyParent(child)}_HasChildRecursive(child){if(this.HasChild(child))return true;for(const c of this.GetChildren())if(c._HasChildRecursive(child))return true;return false}_AddChildToSceneGraphInfo(child){this._sceneGraphInfo.GetChildren().push(child)}_RemoveChildFromSceneGraphInfo(child){const children=this._sceneGraphInfo.GetChildren();const index=children.indexOf(child);if(index!==-1)children.splice(index,1);if(children.length===0&&
!this.HasParent())this._ReleaseSceneGraphInfo();if(!child.HasChildren())child._ReleaseSceneGraphInfo()}GetSceneGraphChildrenExportData(){return this._sceneGraphChildrenExportData}GetSceneGraphZIndexExportData(){return this._sceneGraphZIndexExportData}GetSceneGraphZIndex(){return this._sceneGraphZIndex}SetSceneGraphZIndex(z){this._sceneGraphZIndex=z}SetUsePointsShaderProgram(){this._SetFlag(FLAG_USE_POINTS_SHADER_PROGRAM,true);this._UpdateRendererStateGroup()}_UpdateRendererStateGroup(){if(!enableUpdateRendererStateGroup)return;
const renderer=this._runtime.GetRenderer();if(this._stateGroup)renderer.ReleaseStateGroup(this._stateGroup);let shaderProgram;if((this._flags&FLAG_USE_POINTS_SHADER_PROGRAM)!==0)shaderProgram=renderer.GetPointsRenderingProgram()||"<point>";else shaderProgram=renderer.GetTextureFillShaderProgram()||"<default>";this._stateGroup=renderer.AcquireStateGroup(shaderProgram,this.GetBlendMode(),this._colorPremultiplied,this.GetZElevation())}GetRendererStateGroup(){return this._stateGroup}HasDefaultColor(){return this._color===
DEFAULT_COLOR}SetBlendMode(bm){bm=bm|0;if(bm<0||bm>31)throw new RangeError("invalid blend mode");if(this.GetBlendMode()===bm)return;this._flags=this._flags&~FLAG_BLEND_MODE_MASK|bm<<FLAG_BLEND_MODE_BIT_OFFSET;this._UpdateRendererStateGroup()}GetBlendMode(){return(this._flags&FLAG_BLEND_MODE_MASK)>>FLAG_BLEND_MODE_BIT_OFFSET}_SetLayer(layer){this._layer=layer;if(this.GetZElevation()!==0)this._layer._SetAnyInstanceZElevated()}GetLayer(){return this._layer}GetLayout(){return this.GetLayer().GetLayout()}_SetZIndex(z){this._zIndex=
z|0}GetZIndex(){this._layer._UpdateZIndices();return this._zIndex}_GetLastCachedZIndex(){return this._zIndex}_SetFlag(bit,enable){if(enable)this._flags|=bit;else this._flags&=~bit}IsVisible(){return(this._flags&FLAG_IS_VISIBLE)!==0}SetVisible(v){this._SetFlag(FLAG_IS_VISIBLE,v)}IsCollisionEnabled(){return(this._flags&FLAG_COLLISION_ENABLED)!==0}SetCollisionEnabled(e){e=!!e;if(this.IsCollisionEnabled()===e)return;this._SetFlag(FLAG_COLLISION_ENABLED,e);if(e)this.SetBboxChanged();else this._RemoveFromCollisionCells()}SetSolidCollisionFilter(isInclusive,
tags){this._SetFlag(FLAG_SOLID_FILTER_INCLUSIVE,isInclusive);if(this._solidFilterTags)this._solidFilterTags.clear();if(!tags.trim()){this._solidFilterTags=null;return}if(!this._solidFilterTags)this._solidFilterTags=new Set;for(const tag of tags.split(" "))if(tag)this._solidFilterTags.add(tag.toLowerCase())}IsSolidCollisionAllowed(solidTagSet){const isInclusive=(this._flags&FLAG_SOLID_FILTER_INCLUSIVE)!==0;const filterTags=this._solidFilterTags;if(!solidTagSet||!filterTags)return!isInclusive;for(const tag of filterTags)if(solidTagSet.has(tag))return isInclusive;
return!isInclusive}SetBboxChanged(){this._flags|=FLAG_BBOX_CHANGED|FLAG_COLLISION_CELL_CHANGED|FLAG_MESH_CHANGED;this._objectClass._SetAnyCollisionCellChanged(true);this._runtime.UpdateRender();if(this._layer.UsesRenderCells()){this.CalculateBbox(this._boundingBox,this._boundingQuad,true);this._flags&=~FLAG_BBOX_CHANGED;this._UpdateRenderCell()}if((this._flags&FLAG_ENABLE_BBOX_CHANGED_EVENT)!==0)this._inst.Dispatcher().dispatchEvent(bboxChangeEvent);if(this._sceneGraphInfo!==null){const children=
this._sceneGraphInfo.GetChildren();for(let i=0,len=children.length;i<len;++i)children[i].SetBboxChanged()}}CalculateBbox(bbox,bquad,includeMesh){const x=this.GetX();const y=this.GetY();const w=this.GetWidth();const h=this.GetHeight();const a=this.GetAngle();bbox.setWH(x-this._ox*w,y-this._oy*h,w,h);if(includeMesh&&this.HasMesh())this._ExpandBboxForMesh(bbox);if(a===0)bquad.setFromRect(bbox);else{bbox.offset(-x,-y);bquad.setFromRotatedRectPrecalc(bbox,this.GetSinAngle(),this.GetCosAngle());bquad.offset(x,
y);bquad.getBoundingBox(bbox)}bbox.normalize()}_UpdateBbox(){const flags=this._flags;if((flags&FLAG_BBOX_CHANGED)!==0){this.CalculateBbox(this._boundingBox,this._boundingQuad,true);this._flags=flags&~FLAG_BBOX_CHANGED}}GetBoundingBox(){this._UpdateBbox();return this._boundingBox}GetBoundingQuad(){this._UpdateBbox();return this._boundingQuad}PixelRoundQuad(quad){const x=this.GetX();const y=this.GetY();const ox=Math.round(x)-x;const oy=Math.round(y)-y;if(ox===0&&oy===0)return quad;else{tempQuad.copy(quad);
tempQuad.offset(ox,oy);return tempQuad}}OverwriteBoundingBox(box){this._boundingBox.copy(box);this._boundingQuad.setFromRect(this._boundingBox);this._flags&=~FLAG_BBOX_CHANGED;this._UpdateCollisionCell();this._UpdateRenderCell()}SetBboxChangeEventEnabled(e){this._SetFlag(FLAG_ENABLE_BBOX_CHANGED_EVENT,e)}IsBboxChangeEventEnabled(){return(this._flags&FLAG_ENABLE_BBOX_CHANGED_EVENT)!==0}IsInViewport(viewport,hasVanishingPointOutsideViewport,isOrthographic){if(hasVanishingPointOutsideViewport&&this.GetDepth()!==
0)return this.IsInViewport3D(this.GetLayer()._GetViewFrustum());else return this.GetZElevation()===0||isOrthographic?viewport.intersectsRect(this.GetBoundingBox()):this._IsInViewport_ZElevated()}_IsInViewport_ZElevated(){const layer=this.GetLayer();const totalZElevation=this.GetTotalZElevation();if(totalZElevation>=layer.GetCameraZ())return false;layer.GetViewportForZ(totalZElevation,tempRect);return tempRect.intersectsRect(this.GetBoundingBox())}IsInViewport3D(viewFrustum){const bbox=this.GetBoundingBox();
const minX=bbox.getLeft();const maxX=bbox.getRight();const minY=bbox.getTop();const maxY=bbox.getBottom();const minZ=this.GetTotalZElevation();const maxZ=minZ+this.GetDepth();return viewFrustum.ContainsAABB(minX,minY,minZ,maxX,maxY,maxZ)}_SetDrawBackFaceOnly(e){this._SetFlag(FLAG_DRAW_BACK_FACE_ONLY,e)}_SetDrawNonBackFacesOnly(e){this._SetFlag(FLAG_DRAW_NON_BACK_FACES_ONLY,e)}IsDrawBackFaceOnly(){return(this._flags&FLAG_DRAW_BACK_FACE_ONLY)!==0}IsDrawNonBackFacesOnly(){return(this._flags&FLAG_DRAW_NON_BACK_FACES_ONLY)!==
0}SetSourceCollisionPoly(poly){this._sourceCollisionPoly=poly;this._DiscardTransformedCollisionPoly();if(this.HasMesh())this._meshInfo.meshPoly=null}GetSourceCollisionPoly(){return this._sourceCollisionPoly}HasOwnCollisionPoly(){return this._sourceCollisionPoly!==null||this.HasMesh()}GetTransformedCollisionPoly(){return this._GetCustomTransformedCollisionPolyPrecalc(this.GetWidth(),this.GetHeight(),this.GetAngle(),this.GetSinAngle(),this.GetCosAngle())}GetCustomTransformedCollisionPoly(w,h,a){let sina=
0;let cosa=1;if(a!==0){sina=Math.sin(a);cosa=Math.cos(a)}return this._GetCustomTransformedCollisionPolyPrecalc(w,h,a,sina,cosa)}_GetCustomTransformedCollisionPolyPrecalc(w,h,a,sinA,cosA){let tpi=this._transformedPolyInfo;if(tpi===null){tpi={poly:C3.New(C3.CollisionPoly),width:NaN,height:NaN,angle:NaN};this._transformedPolyInfo=tpi}const transformedPoly=tpi.poly;if(tpi.width===w&&tpi.height===h&&tpi.angle===a)return transformedPoly;const sourcePoly=this._sourceCollisionPoly;if(this.HasMesh()){const ox=
this.GetOriginX();const oy=this.GetOriginY();const sourceMesh=this.GetSourceMesh();let meshPoly=this._meshInfo.meshPoly;if(!meshPoly){if(sourcePoly){tempCollisionPoly.copy(sourcePoly);tempCollisionPoly.offset(ox,oy)}else tempCollisionPoly.setDefaultPoints();meshPoly=sourceMesh.InsertPolyMeshVertices(tempCollisionPoly);this._meshInfo.meshPoly=meshPoly}sourceMesh.TransformCollisionPoly(meshPoly,transformedPoly);transformedPoly.offset(-ox,-oy);transformedPoly.transformPrecalc(w,h,sinA,cosA)}else if(sourcePoly){transformedPoly.copy(sourcePoly);
transformedPoly.transformPrecalc(w,h,sinA,cosA)}else transformedPoly.setFromQuad(this.GetBoundingQuad(),-this.GetX(),-this.GetY());tpi.width=w;tpi.height=h;tpi.angle=a;return transformedPoly}_DiscardTransformedCollisionPoly(){this.SetPhysicsBodyChanged(true);const tpi=this._transformedPolyInfo;if(tpi===null)return;tpi.width=NaN}CreateMesh(hsize,vsize){hsize=Math.floor(hsize);vsize=Math.floor(vsize);if(!this.GetInstance().GetPlugin().SupportsMesh())throw new Error("object does not support mesh");this.ReleaseMesh();
this._meshInfo={sourceMesh:C3.New(C3.Gfx.Mesh,hsize,vsize),transformedMesh:C3.New(C3.Gfx.Mesh,hsize,vsize),meshPoly:null}}HasMesh(){return this._meshInfo!==null}GetSourceMesh(){if(!this.HasMesh())throw new Error("no mesh");return this._meshInfo.sourceMesh}GetTransformedMesh(){if(!this.HasMesh())throw new Error("no mesh");return this._meshInfo.transformedMesh}SetMeshChanged(e){this._SetFlag(FLAG_MESH_CHANGED,e)}IsMeshChanged(){return(this._flags&FLAG_MESH_CHANGED)!==0}SetPhysicsBodyChanged(e){this._SetFlag(FLAG_PHYSICS_BODY_CHANGED,
e)}IsPhysicsBodyChanged(){return(this._flags&FLAG_PHYSICS_BODY_CHANGED)!==0}_ExpandBboxForMesh(bbox){const sourceMesh=this._meshInfo.sourceMesh;const minX=Math.min(sourceMesh.GetMinX(),0);const minY=Math.min(sourceMesh.GetMinY(),0);const maxX=Math.max(sourceMesh.GetMaxX(),1);const maxY=Math.max(sourceMesh.GetMaxY(),1);const w=bbox.width();const h=bbox.height();bbox.offsetLeft(minX*w);bbox.offsetTop(minY*h);bbox.offsetRight((maxX-1)*w);bbox.offsetBottom((maxY-1)*h);this._depth=sourceMesh.GetMaxZ()}ReleaseMesh(){if(!this._meshInfo)return;
this._meshInfo.sourceMesh.Release();this._meshInfo.transformedMesh.Release();this._meshInfo=null;this._DiscardTransformedCollisionPoly()}SetMeshPoint(col,row,opts){col=Math.floor(col);row=Math.floor(row);const mode=opts.mode||"absolute";if(!VALID_SET_MESH_POINT_MODES.has(mode))throw new Error("invalid mode");const isRelative=mode==="relative";let posx=opts.x;let posy=opts.y;const zElevation=opts.zElevation;let texu=typeof opts.u==="number"?opts.u:isRelative?0:-1;let texv=typeof opts.v==="number"?
opts.v:isRelative?0:-1;if(!this.HasMesh())return false;const sourceMesh=this.GetSourceMesh();const p=sourceMesh.GetMeshPointAt(col,row);if(p===null)return false;let ret=false;if(typeof zElevation==="number"&&p.GetZElevation()!==zElevation){p.SetZElevation(zElevation);ret=true}if(isRelative){posx+=col/(sourceMesh.GetHSize()-1);posy+=row/(sourceMesh.GetVSize()-1)}if(texu===-1&&!isRelative)texu=p.GetU();else{if(isRelative)texu+=col/(sourceMesh.GetHSize()-1);texu=C3.clamp(texu,0,1)}if(texv===-1&&!isRelative)texv=
p.GetV();else{if(isRelative)texv+=row/(sourceMesh.GetVSize()-1);texv=C3.clamp(texv,0,1)}if(p.GetX()===posx&&p.GetY()===posy&&p.GetU()===texu&&p.GetV()===texv)return ret;p.SetX(posx);p.SetY(posy);p.SetU(texu);p.SetV(texv);this._DiscardTransformedCollisionPoly();return true}HasTilemap(){return this._inst.HasTilemap()}ContainsPoint(x,y){if(!this.GetBoundingBox().containsPoint(x,y))return false;if(!this.GetBoundingQuad().containsPoint(x,y))return false;if(this.HasTilemap())return this._inst.GetSdkInstance().TestPointOverlapTile(x,
y);if(!this.HasOwnCollisionPoly())return true;return this.GetTransformedCollisionPoly().containsPoint(x-this.GetX(),y-this.GetY())}_IsCollisionCellChanged(){return(this._flags&FLAG_COLLISION_CELL_CHANGED)!==0}_UpdateCollisionCell(){if(!this._IsCollisionCellChanged()||!this.IsCollisionEnabled()||(this._flags&FLAG_DESTROYED)!==0)return;const bbox=this.GetBoundingBox();const grid=this._objectClass._GetCollisionCellGrid();const collisionCells=this._collisionCells;tempRect.set(grid.XToCell(bbox.getLeft()),
grid.YToCell(bbox.getTop()),grid.XToCell(bbox.getRight()),grid.YToCell(bbox.getBottom()));if(collisionCells.equals(tempRect))return;const inst=this._inst;if(collisionCells===DEFAULT_COLLISION_CELLS){grid.Update(inst,null,tempRect);this._collisionCells=C3.New(C3.Rect,tempRect)}else{grid.Update(inst,collisionCells,tempRect);collisionCells.copy(tempRect)}this._flags&=~FLAG_COLLISION_CELL_CHANGED}_RemoveFromCollisionCells(){const collisionCells=this._collisionCells;if(collisionCells===DEFAULT_COLLISION_CELLS)return;
this._objectClass._GetCollisionCellGrid().Update(this._inst,collisionCells,null);this._collisionCells=DEFAULT_COLLISION_CELLS}_UpdateRenderCell(){const layer=this.GetLayer();if(!layer.UsesRenderCells()||(this._flags&FLAG_DESTROYED)!==0)return;const renderGrid=layer.GetRenderGrid();const bbox=this.GetBoundingBox();const renderCells=this._renderCells;tempRect.set(renderGrid.XToCell(bbox.getLeft()),renderGrid.YToCell(bbox.getTop()),renderGrid.XToCell(bbox.getRight()),renderGrid.YToCell(bbox.getBottom()));
if(renderCells.equals(tempRect))return;const inst=this._inst;if(renderCells===DEFAULT_RENDER_CELLS){renderGrid.Update(inst,null,tempRect);this._renderCells=C3.New(C3.Rect,tempRect)}else{renderGrid.Update(inst,renderCells,tempRect);renderCells.copy(tempRect)}layer.SetRenderListStale()}_RemoveFromRenderCells(){const renderCells=this._renderCells;if(renderCells===DEFAULT_RENDER_CELLS)return;this.GetLayer().GetRenderGrid().Update(this._inst,renderCells,null);this._renderCells=DEFAULT_RENDER_CELLS}GetRenderCellRange(){return this._renderCells}ZOrderMoveToTop(){const inst=
this._inst;const layer=this._layer;const layerInstances=layer._GetInstances();if(layerInstances.length&&layerInstances.at(-1)===inst)return;layer._RemoveInstance(inst,false);layer._AddInstance(inst,false);this._runtime.UpdateRender()}ZOrderMoveToBottom(){const inst=this._inst;const layer=this._layer;const layerInstances=layer._GetInstances();if(layerInstances.length&&layerInstances[0]===inst)return;layer._RemoveInstance(inst,false);layer._PrependInstance(inst,false);this._runtime.UpdateRender()}ZOrderMoveToLayer(layerMove){const inst=
this._inst;const curLayer=this._layer;if(curLayer.GetLayout()!==layerMove.GetLayout())throw new Error("layer from different layout");if(layerMove===curLayer)return;curLayer._RemoveInstance(inst,true);this._SetLayer(layerMove);layerMove._AddInstance(inst,true);this._runtime.UpdateRender()}ZOrderMoveAdjacentToInstance(otherInst,isAfter){const inst=this._inst;let didChangeLayer=false;const curLayer=this._layer;if(otherInst.GetUID()===inst.GetUID())return;const otherWi=otherInst.GetWorldInfo();if(!otherWi)throw new Error("expected world instance");
const otherLayer=otherWi.GetLayer();if(curLayer.GetIndex()!==otherLayer.GetIndex()){curLayer._RemoveInstance(inst,true);this._SetLayer(otherLayer);otherLayer._AddInstance(inst,true);didChangeLayer=true}const didChangeZOrder=otherLayer.MoveInstanceAdjacent(inst,otherInst,!!isAfter);if(didChangeLayer||didChangeZOrder)this._runtime.UpdateRender()}GetInstanceEffectList(){return this._instanceEffectList}_SetHasAnyActiveEffect(e){this._SetFlag(FLAG_HAS_ANY_ACTIVE_EFFECT,e)}HasAnyActiveEffect(){return(this._flags&
FLAG_HAS_ANY_ACTIVE_EFFECT)!==0}_SaveToJson(mode){const o={"x":this.GetX(),"y":this.GetY(),"w":this.GetWidth(),"h":this.GetHeight(),"l":this.GetLayer().GetSID(),"zi":this.GetZIndex()};if(this.GetZElevation()!==0)o["ze"]=this.GetZElevation();if(this.GetAngle()!==0)o["a"]=this.GetAngle();if(!this.HasDefaultColor())o["c"]=this._color.toJSON();if(this.GetOriginX()!==.5)o["oX"]=this.GetOriginX();if(this.GetOriginY()!==.5)o["oY"]=this.GetOriginY();if(this.GetBlendMode()!==0)o["bm"]=this.GetBlendMode();
if(!this.IsVisible())o["v"]=this.IsVisible();if(!this.IsCollisionEnabled())o["ce"]=this.IsCollisionEnabled();if(this.IsBboxChangeEventEnabled())o["be"]=this.IsBboxChangeEventEnabled();if(this._instanceEffectList)o["fx"]=this._instanceEffectList._SaveToJson();const isSolidFilterInclusive=(this._flags&FLAG_SOLID_FILTER_INCLUSIVE)!==0;if(isSolidFilterInclusive)o["sfi"]=isSolidFilterInclusive;if(this._solidFilterTags)o["sft"]=[...this._solidFilterTags].join(" ");if(this._sceneGraphInfo&&mode!=="visual-state")o["sgi"]=
this._sceneGraphInfo._SaveToJson();if(this.HasMesh())o["mesh"]=this.GetSourceMesh().SaveToJson();return o}_OnBeforeLoad(mode){if(mode!=="visual-state")this._ResetAllSceneGraphState()}_LoadFromJson(o,mode){enableUpdateRendererStateGroup=false;this.SetX(o["x"]);this.SetY(o["y"]);this.SetWidth(o["w"]);this.SetHeight(o["h"]);this._SetZIndex(o["zi"]);this.SetZElevation(o.hasOwnProperty("ze")?o["ze"]:0);this.SetAngle(o.hasOwnProperty("a")?o["a"]:0);if(o.hasOwnProperty("c"))tempColor.setFromJSON(o["c"]);
else if(o.hasOwnProperty("o")){tempColor.copyRgb(this._color);tempColor.a=o["o"]}else tempColor.setRgba(1,1,1,1);this._SetColor(tempColor);this.SetOriginX(o.hasOwnProperty("oX")?o["oX"]:.5);this.SetOriginY(o.hasOwnProperty("oY")?o["oY"]:.5);this.SetBlendMode(o.hasOwnProperty("bm")?o["bm"]:0);this.SetVisible(o.hasOwnProperty("v")?o["v"]:true);this.SetCollisionEnabled(o.hasOwnProperty("ce")?o["ce"]:true);this.SetBboxChangeEventEnabled(o.hasOwnProperty("be")?o["be"]:false);this.SetSolidCollisionFilter(o.hasOwnProperty("sfi")?
o["sfi"]:false,o.hasOwnProperty("sft")?o["sft"]:"");if(this._instanceEffectList&&o.hasOwnProperty("fx"))this._instanceEffectList._LoadFromJson(o["fx"]);if(o.hasOwnProperty("sgi")&&mode!=="visual-state"){this._CreateSceneGraphInfo(null);const sgi=this._sceneGraphInfo;const sgiData=o["sgi"];sgi._LoadFromJson(sgiData);const runtimeDispatcher=this.GetRuntime().Dispatcher();const onAfterLoad=()=>{runtimeDispatcher.removeEventListener("afterload",onAfterLoad);if((this._flags&FLAG_DESTROYED)===0)sgi._OnAfterLoad(sgiData)};
runtimeDispatcher.addEventListener("afterload",onAfterLoad)}if(o.hasOwnProperty("mesh")){const meshData=o["mesh"];this.CreateMesh(meshData["cols"],meshData["rows"]);this.GetSourceMesh().LoadFromJson(meshData)}else this.ReleaseMesh();this.SetBboxChanged();enableUpdateRendererStateGroup=true;this._UpdateRendererStateGroup()}};

}

// objects/behaviorType.js
{
'use strict';const C3=self.C3;
C3.BehaviorType=class BehaviorType extends C3.DefendedBase{constructor(objectClass,data){super();const runtime=objectClass.GetRuntime();const pluginManager=runtime.GetPluginManager();const BehaviorCtor=runtime.GetObjectReference(data[1]);if(!pluginManager.HasBehaviorByConstructorFunction(BehaviorCtor))pluginManager.CreateBehavior(data);this._runtime=runtime;this._objectClass=objectClass;this._behavior=pluginManager.GetBehaviorByConstructorFunction(BehaviorCtor);this._sdkType=null;this._instSdkCtor=
BehaviorCtor.Instance;this._sid=data[2];this._name=data[0];this._jsPropName=this._runtime.GetJsPropName(data[3]);this._sdkType=C3.New(BehaviorCtor.Type,this);this.OnCreate()}static Create(objectClass,behaviorTypeData){return C3.New(C3.BehaviorType,objectClass,behaviorTypeData)}Release(){this._runtime=null;this._behavior=null;this._sdkType.Release();this._sdkType=null;this._instSdkCtor=null}GetSdkType(){return this._sdkType}OnCreate(){this._sdkType.OnCreate()}GetRuntime(){return this._runtime}GetObjectClass(){return this._objectClass}GetBehavior(){return this._behavior}GetInstanceSdkCtor(){return this._instSdkCtor}GetName(){return this._name}GetSID(){return this._sid}GetJsPropName(){return this._jsPropName}};

}

// objects/behaviorInstance.js
{
'use strict';const C3=self.C3;const IBehaviorInstance=self.IBehaviorInstance;
C3.BehaviorInstance=class BehaviorInstance extends C3.DefendedBase{constructor(opts){super();this._runtime=opts.runtime;this._behaviorType=opts.behaviorType;this._behavior=this._behaviorType.GetBehavior();this._inst=opts.instance;this._index=opts.index;this._sdkInst=null;this._iScriptInterface=null;this._behavior._AddInstance(this._inst)}Release(){if(this._iScriptInterface){this._iScriptInterface._Release();this._iScriptInterface=null}this._behavior._RemoveInstance(this._inst);this._sdkInst.Release();
this._sdkInst=null;this._iScriptInterface=null;this._runtime=null;this._behaviorType=null;this._behavior=null;this._inst=null}_CreateSdkInstance(properties){if(this._sdkInst)throw new Error("already got sdk instance");this._sdkInst=C3.New(this._behaviorType.GetInstanceSdkCtor(),this,properties);this._InitScriptInterface()}GetSdkInstance(){return this._sdkInst}GetObjectInstance(){return this._inst}GetRuntime(){return this._runtime}GetBehaviorType(){return this._behaviorType}GetBehavior(){return this._behavior}_GetIndex(){return this._index}PostCreate(){this._sdkInst.PostCreate()}OnSpriteFrameChanged(prevFrame,
nextFrame){this._sdkInst.OnSpriteFrameChanged(prevFrame,nextFrame)}_GetDebuggerProperties(){return this._sdkInst.GetDebuggerProperties()}SaveToJson(){return this._sdkInst.SaveToJson()}LoadFromJson(o){return this._sdkInst.LoadFromJson(o)}static SortByTickSequence(a,b){const instA=a.GetObjectInstance();const instB=b.GetObjectInstance();const typeIndexA=instA.GetObjectClass().GetIndex();const typeIndexB=instB.GetObjectClass().GetIndex();if(typeIndexA!==typeIndexB)return typeIndexA-typeIndexB;const seqA=
instA.GetPUID();const seqB=instB.GetPUID();if(seqA!==seqB)return seqA-seqB;return a.GetBehaviorInstance()._GetIndex()-b.GetBehaviorInstance()._GetIndex()}_InitScriptInterface(){const DefaultScriptClass=IBehaviorInstance;const SdkScriptClass=this._sdkInst.GetScriptInterfaceClass();const ScriptInterfaceClass=SdkScriptClass||DefaultScriptClass;IBehaviorInstance._Init(this);this._iScriptInterface=new ScriptInterfaceClass;IBehaviorInstance._Init(null);if(SdkScriptClass&&!(this._iScriptInterface instanceof
DefaultScriptClass))throw new TypeError(`script interface class '${SdkScriptClass.name}' does not extend the right base class '${DefaultScriptClass.name}'`);}GetScriptInterface(){return this._iScriptInterface}};

}

// objects/effectList.js
{
'use strict';const C3=self.C3;
C3.EffectList=class EffectList extends C3.DefendedBase{constructor(owner,data){super();this._owner=owner;this._allEffectTypes=[];this._activeEffectTypes=[];this._effectTypesByName=new Map;this._effectParams=[];this._preservesOpaqueness=true;for(const d of data){const et=C3.New(C3.EffectType,this,d,this._allEffectTypes.length);this._allEffectTypes.push(et);this._effectTypesByName.set(et.GetName().toLowerCase(),et);if(d.length>=3)this._effectParams.push(this._LoadSingleEffectParameters(d[2]))}this.GetRuntime()._AddEffectList(this)}Release(){C3.clearArray(this._allEffectTypes);C3.clearArray(this._activeEffectTypes);
this._effectTypesByName.clear();C3.clearArray(this._effectParams);this._owner=null}PrependEffectTypes(arr){if(!arr.length)return;this._allEffectTypes=arr.concat(this._allEffectTypes);for(const et of arr)this._effectTypesByName.set(et.GetName().toLowerCase(),et);for(let i=0,len=this._allEffectTypes.length;i<len;++i)this._allEffectTypes[i]._SetIndex(i)}_LoadSingleEffectParameters(arr){const ret=arr.slice(0);for(let i=0,len=ret.length;i<len;++i){const p=ret[i];if(Array.isArray(p)){const c=C3.New(C3.Color);
c.setFromJSON(p);ret[i]=c}}return ret}GetOwner(){return this._owner}GetRuntime(){return this._owner.GetRuntime()}UpdateActiveEffects(){C3.clearArray(this._activeEffectTypes);let preservesOpaqueness=true;for(const et of this._allEffectTypes)if(et.IsActive()){this._activeEffectTypes.push(et);if(!et.GetShaderProgram().PreservesOpaqueness())preservesOpaqueness=false}this._preservesOpaqueness=preservesOpaqueness}GetAllEffectTypes(){return this._allEffectTypes}HasAnyEffectType(){return this._allEffectTypes.length>
0}GetEffectTypeByName(name){return this._effectTypesByName.get(name.toLowerCase())||null}GetEffectTypeByIndex(index){index=Math.floor(+index);if(index<0||index>=this._allEffectTypes.length)throw new RangeError("invalid effect type index");return this._allEffectTypes[index]}IsEffectIndexActive(index){return this.GetEffectTypeByIndex(index).IsActive()}SetEffectIndexActive(index,a){this.GetEffectTypeByIndex(index).SetActive(a)}GetActiveEffectTypes(){return this._activeEffectTypes}HasAnyActiveEffect(){return this._activeEffectTypes.length>
0}PreservesOpaqueness(){return this._preservesOpaqueness}GetEffectParametersForIndex(index){return this._effectParams[index]}static SaveFxParamToJson(param){if(param&&param instanceof C3.Color)return{"t":"color","v":param.toJSON()};else return param}static LoadFxParamFromJson(o){if(typeof o==="object"){const type=o["t"];if(type==="color"){const color=C3.New(C3.Color);color.setFromJSON(o["v"]);return color}else throw new Error("invalid effect parameter type");}else return o}static SaveFxParamsToJson(params){return params.map(C3.EffectList.SaveFxParamToJson)}static LoadFxParamsFromJson(arr){return arr.map(C3.EffectList.LoadFxParamFromJson)}SaveToJson(){return this._allEffectTypes.map(et=>
({"name":et.GetName(),"active":et.IsActive(),"params":C3.EffectList.SaveFxParamsToJson(this._effectParams[et.GetIndex()])}))}LoadFromJson(arr){for(const o of arr){const et=this.GetEffectTypeByName(o["name"]);if(!et)continue;et.SetActive(o["active"]);this._effectParams[et.GetIndex()]=C3.EffectList.LoadFxParamsFromJson(o["params"])}this.UpdateActiveEffects()}};

}

// objects/effectType.js
{
'use strict';const C3=self.C3;
C3.EffectType=class EffectType extends C3.DefendedBase{constructor(effectList,data,index){super();this._effectList=effectList;this._id=data[0];this._name=data[1];this._index=index;this._shaderProgram=null;this._isActive=true}Release(){this._effectList=null;this._shaderProgram=null}Clone(effectListOwner){const ret=C3.New(C3.EffectType,effectListOwner,[this._id,this._name],-1);ret._shaderProgram=this._shaderProgram;ret._isActive=this._isActive;return ret}_InitRenderer(renderer){const shaderProgram=renderer.GetShaderProgramByName(this._id);
if(!shaderProgram)throw new Error("failed to find shader program '"+this._id+"'");this._shaderProgram=shaderProgram}GetEffectList(){return this._effectList}GetName(){return this._name}_SetIndex(i){this._index=i}GetIndex(){return this._index}GetOwner(){return this._effectList.GetOwner()}GetRuntime(){return this._effectList.GetRuntime()}SetActive(a){this._isActive=!!a}IsActive(){return this._isActive}GetShaderProgram(){return this._shaderProgram}GetDefaultParameterValues(){const ret=[];for(let i=0,
len=this._shaderProgram.GetParameterCount();i<len;++i){const type=this._shaderProgram.GetParameterType(i);if(type==="float"||type==="percent")ret.push(0);else if(type==="color")ret.push(C3.New(C3.Color,1,1,1,1));else throw new TypeError("unknown effect parameter type");}return ret}};

}

// objects/instanceEffectList.js
{
'use strict';const C3=self.C3;
C3.InstanceEffectList=class InstanceEffectList extends C3.DefendedBase{constructor(inst,wi,data){super();this._inst=inst;this._wi=wi;this._effectList=inst.GetObjectClass().GetEffectList();this._activeEffectFlags=[];this._activeEffectTypes=[];this._preservesOpaqueness=true;this._effectParams=[];for(const et of this._effectList.GetAllEffectTypes())this._activeEffectFlags.push(true);this.UpdateActiveEffects()}Release(){C3.clearArray(this._activeEffectFlags);C3.clearArray(this._activeEffectTypes);C3.clearArray(this._effectParams);
this._inst=null;this._effectList=null}_LoadEffectParameters(data){for(const e of data)this._effectParams.push(this._LoadSingleEffectParameters(e))}_LoadSingleEffectParameters(arr){const ret=arr.slice(0);for(let i=0,len=ret.length;i<len;++i){const p=ret[i];if(Array.isArray(p)){const c=C3.New(C3.Color);c.setFromJSON(p);ret[i]=c}}return ret}LoadDefaultEffectParameters(){for(const effectType of this._effectList.GetAllEffectTypes())this._effectParams.push(effectType.GetDefaultParameterValues())}GetOwner(){return this._owner}GetEffectList(){return this._effectList}GetRuntime(){return this._inst.GetRuntime()}UpdateActiveEffects(){C3.clearArray(this._activeEffectTypes);
const allEffectTypes=this._effectList.GetAllEffectTypes();const activeEffectTypes=this._activeEffectTypes;const activeEffectFlags=this._activeEffectFlags;let preservesOpaqueness=true;for(let i=0,len=allEffectTypes.length;i<len;++i)if(activeEffectFlags[i]){const et=allEffectTypes[i];activeEffectTypes.push(et);if(!et.GetShaderProgram().PreservesOpaqueness())preservesOpaqueness=false}this._preservesOpaqueness=preservesOpaqueness;this._wi._SetHasAnyActiveEffect(!!activeEffectTypes.length)}GetActiveEffectTypes(){return this._activeEffectTypes}GetEffectParametersForIndex(index){return this._effectParams[index]}PreservesOpaqueness(){return this._preservesOpaqueness}HasAnyActiveBackgroundBlendingEffect(){return this._activeEffectTypes.some(et=>
et.GetShaderProgram().UsesDest())}IsEffectIndexActive(i){return this._activeEffectFlags[i]}SetEffectIndexActive(i,e){this._activeEffectFlags[i]=!!e}GetAllEffectTypes(){return this._effectList.GetAllEffectTypes()}_SaveToJson(){return this._effectList.GetAllEffectTypes().map(et=>({"name":et.GetName(),"active":this._activeEffectFlags[et.GetIndex()],"params":C3.EffectList.SaveFxParamsToJson(this._effectParams[et.GetIndex()])}))}_LoadFromJson(arr){for(const o of arr){const et=this._effectList.GetEffectTypeByName(o["name"]);
if(!et)continue;this._activeEffectFlags[et.GetIndex()]=o["active"];this._effectParams[et.GetIndex()]=C3.EffectList.LoadFxParamsFromJson(o["params"])}this.UpdateActiveEffects()}};

}

// collisions/collisionEngine.js
{
'use strict';const C3=self.C3;const tempCandidates=[];const tileCollRectCandidates=[];const tempJumpthruRet=[];const tempPolyA=C3.New(C3.CollisionPoly);const tempPolyB=C3.New(C3.CollisionPoly);const tempQuad=C3.New(C3.Quad);const tempRect=C3.New(C3.Rect);const tempRect2=C3.New(C3.Rect);let tempPolyC=null;let tempRect3=null;let tempQuadB=null;
C3.CollisionEngine=class CollisionEngine extends C3.DefendedBase{constructor(runtime){super();this._runtime=runtime;this._registeredCollisions=[];this._collisionCheckCount=0;this._collisionCheckSec=0;this._polyCheckCount=0;this._polyCheckSec=0}Release(){this._runtime=null}_Update1sStats(){this._collisionCheckSec=this._collisionCheckCount;this._collisionCheckCount=0;this._polyCheckSec=this._polyCheckCount;this._polyCheckCount=0}Get1secCollisionChecks(){return this._collisionCheckSec}Get1secPolyChecks(){return this._polyCheckSec}RegisterCollision(a,
b){const aw=a.GetWorldInfo();const bw=b.GetWorldInfo();if(!aw||!bw)return;if(!aw.IsCollisionEnabled()||!bw.IsCollisionEnabled())return;this._registeredCollisions.push([a,b])}AddRegisteredCollisionCandidates(inst,otherType,arr){for(const [a,b]of this._registeredCollisions){let otherInst=null;if(inst===a)otherInst=b;else if(inst===b)otherInst=a;else continue;if(!otherInst.BelongsToObjectClass(otherType))continue;if(!arr.includes(otherInst))arr.push(otherInst)}}CheckRegisteredCollision(a,b){if(!this._registeredCollisions.length)return false;
for(const [c,d]of this._registeredCollisions)if(a===c&&b===d||a===d&&b===c)return true;return false}ClearRegisteredCollisions(){C3.clearArray(this._registeredCollisions)}TestOverlap(a,b){if(!a||!b||a===b)return false;const aw=a.GetWorldInfo();const bw=b.GetWorldInfo();if(!aw.IsCollisionEnabled()||!bw.IsCollisionEnabled())return false;this._collisionCheckCount++;const layerA=aw.GetLayer();const layerB=bw.GetLayer();const areLayerTransformsCompatible=layerA.IsTransformCompatibleWith(layerB);if(areLayerTransformsCompatible)return this._TestOverlap_SameLayers(aw,
bw);else return this._TestOverlap_DifferentLayers(aw,bw)}_TestOverlap_SameLayers(aw,bw){if(!aw.GetBoundingBox().intersectsRect(bw.GetBoundingBox()))return false;this._polyCheckCount++;if(!aw.GetBoundingQuad().intersectsQuad(bw.GetBoundingQuad()))return false;if(aw.HasTilemap()&&bw.HasTilemap())return false;if(aw.HasTilemap())return this.TestTilemapOverlap(aw,bw);else if(bw.HasTilemap())return this.TestTilemapOverlap(bw,aw);if(!aw.HasOwnCollisionPoly()&&!bw.HasOwnCollisionPoly())return true;const polyA=
aw.GetTransformedCollisionPoly();const polyB=bw.GetTransformedCollisionPoly();return polyA.intersectsPoly(polyB,bw.GetX()-aw.GetX(),bw.GetY()-aw.GetY())}_TestOverlap_DifferentLayers(aw,bw){const aIsTileMap=aw.HasTilemap();const bIsTileMap=bw.HasTilemap();if(aIsTileMap&&!bIsTileMap)return this.TestTilemapOverlapDifferentLayers(aw,bw);else if(bIsTileMap&&!aIsTileMap)return this.TestTilemapOverlapDifferentLayers(bw,aw);else if(!bIsTileMap&&!aIsTileMap){const layerA=aw.GetLayer();const layerB=bw.GetLayer();
tempPolyA.copy(aw.GetTransformedCollisionPoly());tempPolyB.copy(bw.GetTransformedCollisionPoly());const ptsArrA=tempPolyA.pointsArr();for(let i=0,len=ptsArrA.length;i<len;i+=2){const j=i+1;const x=ptsArrA[i];const y=ptsArrA[j];const [lx,ly]=layerA.LayerToCanvasCss(x+aw.GetX(),y+aw.GetY());ptsArrA[i]=lx;ptsArrA[j]=ly}const ptsArrB=tempPolyB.pointsArr();for(let i=0,len=ptsArrB.length;i<len;i+=2){const j=i+1;const x=ptsArrB[i];const y=ptsArrB[j];const [lx,ly]=layerB.LayerToCanvasCss(x+bw.GetX(),y+bw.GetY());
ptsArrB[i]=lx;ptsArrB[j]=ly}tempPolyA.setBboxChanged();tempPolyB.setBboxChanged();this._polyCheckCount++;return tempPolyA.intersectsPoly(tempPolyB,0,0)}else return false}TestTilemapOverlapDifferentLayers(tilemapWi,nonTilemapWi){const tilemapLayer=tilemapWi.GetLayer();const nonTilemapLayer=nonTilemapWi.GetLayer();if(!tempPolyC)tempPolyC=C3.New(C3.CollisionPoly);if(!tempRect3)tempRect3=C3.New(C3.Rect);if(!tempQuadB)tempQuadB=C3.New(C3.Quad);const nonTilemapX=nonTilemapWi.GetX();const nonTilemapY=nonTilemapWi.GetY();
const [lx,ly]=nonTilemapLayer.LayerToCanvasCss(nonTilemapX,nonTilemapY);const [nonTilemapTransformedX,nonTilemapTransformedY]=tilemapLayer.CanvasCssToLayer(lx,ly);const deltaX=nonTilemapTransformedX-nonTilemapX;const deltaY=nonTilemapTransformedY-nonTilemapY;tempRect3.copy(nonTilemapWi.GetBoundingBox());tempRect3.offset(deltaX,deltaY);if(!tilemapWi.GetBoundingBox().intersectsRect(tempRect3))return false;tempQuadB.copy(nonTilemapWi.GetBoundingQuad());tempQuadB.offset(deltaX,deltaY);this._polyCheckCount++;
if(!tilemapWi.GetBoundingQuad().intersectsQuad(tempQuadB))return false;tempPolyC.copy(nonTilemapWi.GetTransformedCollisionPoly());const ptsArrB=tempPolyC.pointsArr();for(let i=0,len=ptsArrB.length;i<len;i+=2){const j=i+1;const x=ptsArrB[i]+=deltaX;const y=ptsArrB[j]+=deltaY}tempPolyC.setBboxChanged();return this.TestTilemapOverlap(tilemapWi,nonTilemapWi,nonTilemapTransformedX,nonTilemapTransformedY,tempPolyC,tempRect3,tempQuadB)}TestTilemapOverlap(tmWi,wi,transformedWiX,transformedWiY,transformedCollisionPoly,
transformedBoundingBox,transformedBoundingQuad){const bbox=transformedBoundingBox!==undefined?transformedBoundingBox:wi.GetBoundingBox();const tmX=tmWi.GetX();const tmY=tmWi.GetY();const tmSdkInst=tmWi.GetInstance().GetSdkInstance();const instX=transformedWiX!==undefined?transformedWiX:wi.GetX();const instY=transformedWiY!==undefined?transformedWiY:wi.GetY();const instHasPoly=wi.HasOwnCollisionPoly();const instQuad=transformedBoundingQuad!==undefined?transformedBoundingQuad:wi.GetBoundingQuad();const collRects=
tileCollRectCandidates;tmSdkInst.GetCollisionRectCandidates(bbox,collRects);for(let i=0,len=collRects.length;i<len;++i){const c=collRects[i];const rc=c.GetRect();this._collisionCheckCount++;if(bbox.intersectsRectOffset(rc,tmX,tmY)){tempQuad.setFromRect(rc);tempQuad.offset(tmX,tmY);if(tempQuad.intersectsQuad(instQuad))if(instHasPoly){const instPoly=transformedCollisionPoly!==undefined?transformedCollisionPoly:wi.GetTransformedCollisionPoly();const tilePoly=c.GetPoly();if(tilePoly){this._polyCheckCount++;
if(tilePoly.intersectsPoly(instPoly,instX-(tmX+rc.getLeft()),instY-(tmY+rc.getTop()))){C3.clearArray(collRects);return true}}else{tempPolyA.setFromQuad(tempQuad,0,0);if(tempPolyA.intersectsPoly(instPoly,instX,instY)){C3.clearArray(collRects);return true}}}else{const tilePoly=c.GetPoly();if(tilePoly){tempPolyA.setFromQuad(instQuad,0,0);if(tilePoly.intersectsPoly(tempPolyA,-(tmX+rc.getLeft()),-(tmY+rc.getTop()))){C3.clearArray(collRects);return true}}else{C3.clearArray(collRects);return true}}}}C3.clearArray(collRects);
return false}TestAndSelectCanvasPointOverlap(objectClass,ptx,pty,isInverted){const sol=objectClass.GetCurrentSol();const currentEvent=this._runtime.GetCurrentEvent();if(!currentEvent)throw new Error("cannot call outside event");const isOrBlock=currentEvent.IsOrBlock();if(sol.IsSelectAll()){if(!isInverted){sol._SetSelectAll(false);C3.clearArray(sol._GetOwnInstances())}for(const inst of objectClass.GetInstances()){const wi=inst.GetWorldInfo();const layer=wi.GetLayer();const [lx,ly]=layer.CanvasCssToLayer(ptx,
pty,wi.GetTotalZElevation());if(wi.ContainsPoint(lx,ly))if(isInverted)return false;else sol._PushInstance(inst);else if(isOrBlock)sol._PushElseInstance(inst)}}else{const arr=isOrBlock?sol._GetOwnElseInstances():sol._GetOwnInstances();let j=0;for(let i=0,len=arr.length;i<len;++i){const inst=arr[i];const wi=inst.GetWorldInfo();const layer=wi.GetLayer();const [lx,ly]=layer.CanvasCssToLayer(ptx,pty,wi.GetTotalZElevation());if(wi.ContainsPoint(lx,ly))if(isInverted)return false;else if(isOrBlock)sol._PushInstance(inst);
else arr[j++]=inst;else if(isOrBlock)arr[j++]=inst}if(!isInverted)arr.length=j}objectClass.ApplySolToContainer();if(isInverted)return true;else return sol.HasAnyInstances()}GetCollisionCandidates(layer,rtype,bbox,candidates){const isParallaxed=layer?layer.GetParallaxX()!==1||layer.GetParallaxY()!==1:false;if(rtype.IsFamily())for(const memberType of rtype.GetFamilyMembers())if(isParallaxed||memberType.IsAnyInstanceParallaxed())C3.appendArray(candidates,memberType.GetInstances());else{memberType._UpdateAllCollisionCells();
memberType._GetCollisionCellGrid().QueryRange(bbox,candidates)}else if(isParallaxed||rtype.IsAnyInstanceParallaxed())C3.appendArray(candidates,rtype.GetInstances());else{rtype._UpdateAllCollisionCells();rtype._GetCollisionCellGrid().QueryRange(bbox,candidates)}}GetObjectClassesCollisionCandidates(layer,objectClasses,bbox,candidates){for(const objectClass of objectClasses)this.GetCollisionCandidates(layer,objectClass,bbox,candidates)}GetSolidCollisionCandidates(layer,bbox,candidates){const solidBehavior=
this._runtime.GetSolidBehavior();if(!solidBehavior)return;this.GetObjectClassesCollisionCandidates(layer,solidBehavior.GetObjectClasses(),bbox,candidates)}GetJumpthruCollisionCandidates(layer,bbox,candidates){const jumpthruBehavior=this._runtime.GetJumpthruBehavior();if(!jumpthruBehavior)return;this.GetObjectClassesCollisionCandidates(layer,jumpthruBehavior.GetObjectClasses(),bbox,candidates)}IsSolidCollisionAllowed(solidInst,inst){return solidInst._IsSolidEnabled()&&(!inst||inst.GetWorldInfo().IsSolidCollisionAllowed(solidInst.GetSavedDataMap().get("solidTags")))}TestOverlapSolid(inst){const wi=
inst.GetWorldInfo();this.GetSolidCollisionCandidates(wi.GetLayer(),wi.GetBoundingBox(),tempCandidates);for(const s of tempCandidates){if(!this.IsSolidCollisionAllowed(s,inst))continue;if(this.TestOverlap(inst,s)){C3.clearArray(tempCandidates);return s}}C3.clearArray(tempCandidates);return null}TestRectOverlapSolid(rect,inst){this.GetSolidCollisionCandidates(null,rect,tempCandidates);for(const s of tempCandidates){if(!this.IsSolidCollisionAllowed(s,inst))continue;if(this.TestRectOverlap(rect,s)){C3.clearArray(tempCandidates);
return s}}C3.clearArray(tempCandidates);return null}TestOverlapJumpthru(inst,all){let ret=null;if(all){ret=tempJumpthruRet;C3.clearArray(ret)}const wi=inst.GetWorldInfo();this.GetJumpthruCollisionCandidates(wi.GetLayer(),wi.GetBoundingBox(),tempCandidates);for(const j of tempCandidates){if(!j._IsJumpthruEnabled())continue;if(this.TestOverlap(inst,j))if(all)ret.push(j);else{C3.clearArray(tempCandidates);return j}}C3.clearArray(tempCandidates);return ret}PushOut(inst,xdir,ydir,dist,otherInst){dist=
dist||50;const wi=inst.GetWorldInfo();const oldX=wi.GetX();const oldY=wi.GetY();for(let i=0;i<dist;++i){wi.SetXY(oldX+xdir*i,oldY+ydir*i);wi.SetBboxChanged();if(!this.TestOverlap(inst,otherInst))return true}wi.SetXY(oldX,oldY);wi.SetBboxChanged();return false}PushOutSolid(inst,xdir,ydir,dist,includeJumpthrus,specificJumpthru){dist=dist||50;const wi=inst.GetWorldInfo();const oldX=wi.GetX();const oldY=wi.GetY();let lastOverlapped=null;let secondLastOverlapped=null;for(let i=0;i<dist;++i){wi.SetXY(oldX+
xdir*i,oldY+ydir*i);wi.SetBboxChanged();if(!this.TestOverlap(inst,lastOverlapped)){lastOverlapped=this.TestOverlapSolid(inst);if(lastOverlapped)secondLastOverlapped=lastOverlapped;else{if(includeJumpthrus){if(specificJumpthru)lastOverlapped=this.TestOverlap(inst,specificJumpthru)?specificJumpthru:null;else lastOverlapped=this.TestOverlapJumpthru(inst);if(lastOverlapped)secondLastOverlapped=lastOverlapped}if(!lastOverlapped){if(secondLastOverlapped)this.PushInFractional(inst,xdir,ydir,secondLastOverlapped,
16,true);return true}}}}wi.SetXY(oldX,oldY);wi.SetBboxChanged();return false}PushOutSolidAxis(inst,xdir,ydir,dist){dist=dist||50;const wi=inst.GetWorldInfo();const oldX=wi.GetX();const oldY=wi.GetY();let lastOverlapped=null;let secondLastOverlapped=null;for(let i=0;i<dist;++i)for(let which=0;which<2;++which){const sign=which*2-1;wi.SetXY(oldX+xdir*i*sign,oldY+ydir*i*sign);wi.SetBboxChanged();if(!this.TestOverlap(inst,lastOverlapped)){lastOverlapped=this.TestOverlapSolid(inst);if(lastOverlapped)secondLastOverlapped=
lastOverlapped;else{if(secondLastOverlapped)this.PushInFractional(inst,xdir*sign,ydir*sign,secondLastOverlapped,16,true);return true}}}wi.SetXY(oldX,oldY);wi.SetBboxChanged();return false}PushInFractional(inst,xdir,ydir,otherInst,limit,includeAnySolid){let divisor=2;let forward=false;let overlapping=false;const wi=inst.GetWorldInfo();let bestX=wi.GetX();let bestY=wi.GetY();while(divisor<=limit){const frac=1/divisor;divisor*=2;wi.OffsetXY(xdir*frac*(forward?1:-1),ydir*frac*(forward?1:-1));wi.SetBboxChanged();
if(this.TestOverlap(inst,otherInst)||includeAnySolid&&this.TestOverlapSolid(inst)){forward=true;overlapping=true}else{forward=false;overlapping=false;bestX=wi.GetX();bestY=wi.GetY()}}if(overlapping){wi.SetXY(bestX,bestY);wi.SetBboxChanged()}}PushOutSolidNearest(inst,maxDist=100){let dist=0;const wi=inst.GetWorldInfo();const oldX=wi.GetX();const oldY=wi.GetY();let dir=0;let lastOverlapped=this.TestOverlapSolid(inst);if(!lastOverlapped)return true;while(dist<=maxDist){let dx=0;let dy=0;switch(dir){case 0:dx=
0;dy=-1;dist++;break;case 1:dx=1;dy=-1;break;case 2:dx=1;dy=0;break;case 3:dx=1;dy=1;break;case 4:dx=0;dy=1;break;case 5:dx=-1;dy=1;break;case 6:dx=-1;dy=0;break;case 7:dx=-1;dy=-1;break}dir=(dir+1)%8;wi.SetXY(Math.floor(oldX+dx*dist),Math.floor(oldY+dy*dist));wi.SetBboxChanged();if(!this.TestOverlap(inst,lastOverlapped)){lastOverlapped=this.TestOverlapSolid(inst);if(!lastOverlapped)return true}}wi.SetXY(oldX,oldY);wi.SetBboxChanged();return false}CalculateBounceAngle(inst,startX,startY,otherInst){const wi=
inst.GetWorldInfo();const oldX=wi.GetX();const oldY=wi.GetY();const radius=Math.max(10,C3.distanceTo(startX,startY,oldX,oldY));const startAngle=C3.angleTo(startX,startY,oldX,oldY);const firstInst=otherInst||this.TestOverlapSolid(inst);if(!firstInst)return C3.clampAngle(startAngle+Math.PI);let curInst=firstInst;let anticlockwiseFreeAngle=0;let clockwiseFreeAngle=0;const increment=C3.toRadians(5);let i;for(i=1;i<36;++i){const curAngle=startAngle-i*increment;wi.SetXY(startX+Math.cos(curAngle)*radius,
startY+Math.sin(curAngle)*radius);wi.SetBboxChanged();if(!this.TestOverlap(inst,curInst)){curInst=otherInst?null:this.TestOverlapSolid(inst);if(!curInst){anticlockwiseFreeAngle=curAngle;break}}}if(i===36)anticlockwiseFreeAngle=C3.clampAngle(startAngle+Math.PI);curInst=firstInst;for(i=1;i<36;++i){const curAngle=startAngle+i*increment;wi.SetXY(startX+Math.cos(curAngle)*radius,startY+Math.sin(curAngle)*radius);wi.SetBboxChanged();if(!this.TestOverlap(inst,curInst)){curInst=otherInst?null:this.TestOverlapSolid(inst);
if(!curInst){clockwiseFreeAngle=curAngle;break}}}if(i===36)clockwiseFreeAngle=C3.clampAngle(startAngle+Math.PI);wi.SetXY(oldX,oldY);wi.SetBboxChanged();if(clockwiseFreeAngle===anticlockwiseFreeAngle)return clockwiseFreeAngle;const halfDiff=C3.angleDiff(clockwiseFreeAngle,anticlockwiseFreeAngle)/2;let normal;if(C3.angleClockwise(clockwiseFreeAngle,anticlockwiseFreeAngle))normal=C3.clampAngle(anticlockwiseFreeAngle+halfDiff+Math.PI);else normal=C3.clampAngle(clockwiseFreeAngle+halfDiff);const vx=Math.cos(startAngle);
const vy=Math.sin(startAngle);const nx=Math.cos(normal);const ny=Math.sin(normal);const v_dot_n=vx*nx+vy*ny;const rx=vx-2*v_dot_n*nx;const ry=vy-2*v_dot_n*ny;return C3.angleTo(0,0,rx,ry)}TestSegmentOverlap(x1,y1,x2,y2,inst){if(!inst)return false;const wi=inst.GetWorldInfo();if(!wi.IsCollisionEnabled())return false;this._collisionCheckCount++;tempRect.set(Math.min(x1,x2),Math.min(y1,y2),Math.max(x1,x2),Math.max(y1,y2));if(!wi.GetBoundingBox().intersectsRect(tempRect))return false;if(inst.HasTilemap())return this._TestSegmentOverlapTilemap(x1,
y1,x2,y2,inst,wi);this._polyCheckCount++;if(!wi.GetBoundingQuad().intersectsSegment(x1,y1,x2,y2))return false;if(!wi.HasOwnCollisionPoly())return true;const poly=wi.GetTransformedCollisionPoly();return poly.intersectsSegment(wi.GetX(),wi.GetY(),x1,y1,x2,y2)}_TestSegmentOverlapTilemap(x1,y1,x2,y2,inst,wi){const tmX=wi.GetX();const tmY=wi.GetY();const sdkInst=inst.GetSdkInstance();const collRects=tileCollRectCandidates;tempRect2.set(x1,y1,x2,y2);tempRect2.normalize();sdkInst.GetCollisionRectCandidates(tempRect2,
collRects);for(let i=0,len=collRects.length;i<len;++i){const c=collRects[i];const tileRc=c.GetRect();this._collisionCheckCount++;if(tempRect.intersectsRectOffset(tileRc,tmX,tmY)){tempQuad.setFromRect(tileRc);tempQuad.offset(tmX,tmY);if(tempQuad.intersectsSegment(x1,y1,x2,y2)){const tilePoly=c.GetPoly();if(tilePoly){this._polyCheckCount++;if(tilePoly.intersectsSegment(tmX+tileRc.getLeft(),tmY+tileRc.getTop(),x1,y1,x2,y2)){C3.clearArray(collRects);return true}}else{C3.clearArray(collRects);return true}}}}C3.clearArray(collRects);
return false}TestRectOverlap(rect,inst){if(!inst)return false;const wi=inst.GetWorldInfo();if(!wi.IsCollisionEnabled())return false;this._collisionCheckCount++;if(!wi.GetBoundingBox().intersectsRect(rect))return false;if(inst.HasTilemap())return this._TestRectOverlapTilemap(rect,inst,wi);this._polyCheckCount++;tempQuad.setFromRect(rect);if(!wi.GetBoundingQuad().intersectsQuad(tempQuad))return false;if(!wi.HasOwnCollisionPoly())return true;const polyA=tempPolyA;polyA.setFromRect(rect,wi.GetX(),wi.GetY());
const polyB=wi.GetTransformedCollisionPoly();return polyA.intersectsPoly(polyB,0,0)}_TestRectOverlapTilemap(rect,inst,wi){const tmX=wi.GetX();const tmY=wi.GetY();const sdkInst=inst.GetSdkInstance();const collRects=tileCollRectCandidates;sdkInst.GetCollisionRectCandidates(rect,collRects);for(let i=0,len=collRects.length;i<len;++i){const c=collRects[i];const tileRc=c.GetRect();this._collisionCheckCount++;if(rect.intersectsRectOffset(tileRc,tmX,tmY)){const tilePoly=c.GetPoly();if(tilePoly){this._polyCheckCount++;
tempPolyA.setFromRect(rect,0,0);if(tilePoly.intersectsPoly(tempPolyA,-(tmX+tileRc.getLeft()),-(tmY+tileRc.getTop()))){C3.clearArray(collRects);return true}}else{C3.clearArray(collRects);return true}}}C3.clearArray(collRects);return false}TestRayIntersectsInstance(inst,ray){if(!inst)return;const wi=inst.GetWorldInfo();if(!wi.IsCollisionEnabled())return;this._collisionCheckCount++;if(!wi.GetBoundingBox().intersectsRect(ray.rect))return;if(inst.HasTilemap()){this._TestRayIntersectsTilemap(inst,wi,ray);
return}this._polyCheckCount++;if(wi.HasOwnCollisionPoly())ray.TestInstancePoly(inst,wi.GetX(),wi.GetY(),wi.GetTransformedCollisionPoly());else ray.TestInstanceQuad(inst,wi.GetBoundingQuad())}_TestRayIntersectsTilemap(inst,wi,ray){const xOffset=wi.GetX();const yOffset=wi.GetY();const collRects=tileCollRectCandidates;inst.GetSdkInstance().GetCollisionRectCandidates(ray.rect,collRects);for(let i=0,l=collRects.length;i<l;i++){const c=collRects[i];const tileRc=c.GetRect();this._collisionCheckCount++;if(ray.rect.intersectsRectOffset(tileRc,
xOffset,yOffset)){const tilePoly=c.GetPoly();this._polyCheckCount++;if(tilePoly)ray.TestInstancePoly(inst,xOffset+tileRc.getLeft(),yOffset+tileRc.getTop(),tilePoly);else ray.TestInstanceRect(inst,wi.GetX(),wi.GetY(),tileRc)}}C3.clearArray(collRects)}};

}

// collisions/sparseGrid.js
{
'use strict';const C3=self.C3;
C3.SparseGrid=class SparseGrid extends C3.DefendedBase{constructor(cellWidth,cellHeight){super();this._cellWidth=cellWidth;this._cellHeight=cellHeight;this._cells=C3.New(C3.PairMap)}Release(){this._cells.Release();this._cells=null}GetCell(x,y,createIfMissing){let ret=this._cells.Get(x,y);if(ret)return ret;else if(createIfMissing){ret=C3.New(C3.GridCell,this,x,y);this._cells.Set(x,y,ret);return ret}else return null}XToCell(x){const ret=Math.floor(x/this._cellWidth);return isFinite(ret)?ret:0}YToCell(y){const ret=
Math.floor(y/this._cellHeight);return isFinite(ret)?ret:0}Update(inst,oldRange,newRange){if(oldRange)for(let x=oldRange.getLeft(),lenx=oldRange.getRight();x<=lenx;++x)for(let y=oldRange.getTop(),leny=oldRange.getBottom();y<=leny;++y){if(newRange&&newRange.containsPoint(x,y))continue;const cell=this.GetCell(x,y,false);if(!cell)continue;cell.Remove(inst);if(cell.IsEmpty())this._cells.Delete(x,y)}if(newRange)for(let x=newRange.getLeft(),lenx=newRange.getRight();x<=lenx;++x)for(let y=newRange.getTop(),
leny=newRange.getBottom();y<=leny;++y){if(oldRange&&oldRange.containsPoint(x,y))continue;this.GetCell(x,y,true).Insert(inst)}}QueryRange(rc,result){let x=this.XToCell(rc.getLeft());const ystart=this.YToCell(rc.getTop());const lenx=this.XToCell(rc.getRight());const leny=this.YToCell(rc.getBottom());if(!isFinite(lenx)||!isFinite(leny))return;for(;x<=lenx;++x)for(let y=ystart;y<=leny;++y){const cell=this.GetCell(x,y,false);if(!cell)continue;cell.Dump(result)}}};

}

// collisions/gridCell.js
{
'use strict';const C3=self.C3;C3.GridCell=class GridCell extends C3.DefendedBase{constructor(grid,x,y){super();this._grid=grid;this._x=x;this._y=y;this._instances=C3.New(C3.ArraySet)}Release(){this._instances.Release();this._instances=null;this._grid=null}IsEmpty(){return this._instances.IsEmpty()}Insert(inst){this._instances.Add(inst)}Remove(inst){this._instances.Delete(inst)}Dump(result){C3.appendArray(result,this._instances.GetArray())}};

}

// collisions/ray.js
{
'use strict';const C3=self.C3;const PADDING=1E-6;const NO_HIT=2;
C3.Ray=class Ray{constructor(){this.x1=0;this.y1=0;this.x2=0;this.y2=0;this.dx=0;this.dy=0;this.rect=new C3.Rect;this.hitFraction=NO_HIT;this.hitUid=null;this.hitNormal=0;this.hitNormalDx=0;this.hitNormalDy=0;this.hitX=0;this.hitY=0;this.distance=0;this.normalX=1;this.normalY=0;this.reflectionX=1;this.reflectionY=0}DidCollide(){return this.hitFraction<1+PADDING}Set(x1,y1,x2,y2){this.x1=x1;this.y1=y1;this.x2=x2;this.y2=y2;this.dx=x2-x1;this.dy=y2-y1;this.rect.set(x1,y1,x2,y2);this.rect.normalize();
this.hitFraction=NO_HIT;this.hitUid=null;this.hitNormal=0;this.hitNormalDx=0;this.hitNormalDy=0;this.hitX=0;this.hitY=0;this.distance=0;this.normalX=1;this.normalY=0;this.reflectionX=1;this.reflectionY=0;return this}Complete(){if(this.DidCollide()===false)return;const dx=this.dx*this.hitFraction;const dy=this.dy*this.hitFraction;const length=Math.sqrt(dx*dx+dy*dy);const dirx=dx/length;const diry=dy/length;this.distance=length-PADDING;this.hitX=this.x1+dirx*this.distance;this.hitY=this.y1+diry*this.distance;
this.hitNormal=Math.atan2(this.hitNormalDy,this.hitNormalDx)+Math.PI/2;this.normalX=Math.cos(this.hitNormal);this.normalY=Math.sin(this.hitNormal);const dot=dirx*this.normalX+diry*this.normalY;this.reflectionX=dirx-2*this.normalX*dot;this.reflectionY=diry-2*this.normalY*dot;if(dot>0){const PI=Math.PI;this.hitNormal=C3.clampAngle(this.hitNormal+PI);this.normalX=-this.normalX;this.normalY=-this.normalY}}TestInstanceSegment(inst,sx1,sy1,sx2,sy2){const t=C3.rayIntersect(this.x1,this.y1,this.x2,this.y2,
sx1,sy1,sx2,sy2);if(t>=0&&t<this.hitFraction){this.hitFraction=t;this.hitUid=inst.GetUID();this.hitNormalDx=sx1-sx2;this.hitNormalDy=sy1-sy2}}TestInstanceRect(inst,offX,offY,rect){const lt=offX+rect.getLeft(),rt=offX+rect.getRight(),tp=offY+rect.getTop(),bm=offY+rect.getBottom();this.TestInstanceSegment(inst,lt,tp,rt,tp);this.TestInstanceSegment(inst,rt,tp,rt,bm);this.TestInstanceSegment(inst,rt,bm,lt,bm);this.TestInstanceSegment(inst,lt,bm,lt,tp)}TestInstanceQuad(inst,quad){const tlX=quad.getTlx(),
tlY=quad.getTly(),trX=quad.getTrx(),trY=quad.getTry(),brX=quad.getBrx(),brY=quad.getBry(),blX=quad.getBlx(),blY=quad.getBly();this.TestInstanceSegment(inst,tlX,tlY,trX,trY);this.TestInstanceSegment(inst,trX,trY,brX,brY);this.TestInstanceSegment(inst,brX,brY,blX,blY);this.TestInstanceSegment(inst,blX,blY,tlX,tlY)}TestInstancePoly(inst,offX,offY,poly){const points=poly.pointsArr();for(let i=0,l=points.length;i<l;i+=2){const ii=(i+2)%l;const x1=points[i]+offX;const y1=points[i+1]+offY;const x2=points[ii]+
offX;const y2=points[ii+1]+offY;this.TestInstanceSegment(inst,x1,y1,x2,y2)}}};

}

// canvasManager.js
{
'use strict';const C3=self.C3;const VALID_FULLSCREEN_MODES=new Set(["off","crop","scale-inner","scale-outer","letterbox-scale","letterbox-integer-scale"]);const VALID_FULLSCREEN_SCALING_QUALITIES=new Set(["high","low"]);const glMatrix=self.glMatrix;const mat4=glMatrix.mat4;const vec3=glMatrix.vec3;const tempProjection=mat4.create();const PERCENTTEXT_WIDTH=300;const PERCENTTEXT_HEIGHT=200;const PROGRESSBAR_WIDTH=120;const PROGRESSBAR_HEIGHT=8;const tempQuad=C3.New(C3.Quad);const tempRect=C3.New(C3.Rect);
const SPLASH_MIN_DISPLAY_TIME=3E3;const SPLASH_AFTER_FADEOUT_WAIT_TIME=200;const SPLASH_FADE_DURATION=300;
C3.CanvasManager=class CanvasManager extends C3.DefendedBase{constructor(runtime){super();this._runtime=runtime;this._canvas=null;this._isWebGPUEnabled=false;this._webglRenderer=null;this._webgpuRenderer=null;this._gpuPreference="high-performance";this._windowInnerWidth=0;this._windowInnerHeight=0;this._canvasCssWidth=0;this._canvasCssHeight=0;this._canvasDeviceWidth=0;this._canvasDeviceHeight=0;this._canvasCssOffsetX=0;this._canvasCssOffsetY=0;this._enableMipmaps=true;this._textureAnisotropy=0;this._drawWidth=
0;this._drawHeight=0;this._fullscreenMode="letterbox-scale";this._documentFullscreenMode="letterbox-scale";this._deviceTransformOffX=0;this._deviceTransformOffY=0;this._defaultProjectionMatrix=mat4.create();this._wantFullscreenScalingQuality="high";this._fullscreenScalingQuality=this._wantFullscreenScalingQuality;this._isDocumentFullscreen=false;this._availableAdditionalRenderTargets=[];this._usedAdditionalRenderTargets=new Set;this._shaderData=self["C3_Shaders"];this._gpuTimeStartFrame=0;this._gpuTimeEndFrame=
0;this._gpuLastUtilisation=NaN;this._gpuFrameTimingsBuffer=null;this._layersGpuProfile=new Map;this._gpuCurUtilisation=NaN;this._webgpuFrameTimings=new Map;this._snapshotFormat="";this._snapshotQuality=1;this._snapshotArea=C3.New(C3.Rect);this._snapshotUrl="";this._snapshotPromise=null;this._snapshotResolve=null;this._isPastingToDrawingCanvas=0;this._loaderStartTime=0;this._rafId=-1;this._loadingProgress=0;this._loadingprogress_handler=e=>this._loadingProgress=e.progress;this._percentText=null;this._splashTextures=
{logo:null,powered:null,website:null};this._splashFrameNumber=0;this._splashFadeInFinishTime=0;this._splashFadeOutStartTime=0;this._splashState="fade-in";this._splashDoneResolve=null;this._splashDonePromise=new Promise(resolve=>this._splashDoneResolve=resolve)}_SetGPUPowerPreference(pref){this._gpuPreference=pref}_SetWebGPUEnabled(e){this._isWebGPUEnabled=!!e}async CreateCanvas(opts){this._canvas=opts["canvas"];this._runtime.AddDOMComponentMessageHandler("runtime","window-resize",e=>this._OnWindowResize(e));
this._runtime.AddDOMComponentMessageHandler("runtime","fullscreenchange",e=>this._OnFullscreenChange(e));this._runtime.AddDOMComponentMessageHandler("runtime","fullscreenerror",e=>this._OnFullscreenError(e));this._canvas.addEventListener("webglcontextlost",e=>this._OnWebGLContextLost(e));this._canvas.addEventListener("webglcontextrestored",e=>this._OnWebGLContextRestored(e));this._isDocumentFullscreen=!!opts["isFullscreen"];const useWebGPU=navigator["gpu"]&&this._isWebGPUEnabled;let hasMajorPerformanceCaveat=
false;if(useWebGPU)try{await this._InitWebGPUContext(true)}catch(err){this._webgpuRenderer=null}if(!this.GetRenderer())try{await this._InitWebGLContext(true)}catch(err){this._webglRenderer=null}if(!this.GetRenderer())hasMajorPerformanceCaveat=true;if(!this.GetRenderer()&&useWebGPU)try{await this._InitWebGPUContext(false)}catch(err){this._webgpuRenderer=null}if(!this.GetRenderer())try{await this._InitWebGLContext(false)}catch(err){this._webglRenderer=null}const renderer=this.GetRenderer();if(!renderer)throw new Error("failed to acquire a renderer - check WebGL or WebGPU is supported");
renderer.SetHasMajorPerformanceCaveat(hasMajorPerformanceCaveat);this.SetSize(opts["windowInnerWidth"],opts["windowInnerHeight"],true);if(this._webgpuRenderer)await this._InitWebGPU();else if(this._webglRenderer)await this._InitWebGL();renderer.SetMipmapsEnabled(this._enableMipmaps);if(renderer.SupportsGPUProfiling())this._gpuLastUtilisation=0;let hasAnyBackgroundBlending=false;for(const effectList of this._runtime._GetAllEffectLists()){for(const effectType of effectList.GetAllEffectTypes()){effectType._InitRenderer(renderer);
if(effectType.GetShaderProgram().UsesDest())hasAnyBackgroundBlending=true}effectList.UpdateActiveEffects()}this._runtime._SetUsesAnyBackgroundBlending(hasAnyBackgroundBlending)}async _InitWebGPUContext(failIfMajorPerformanceCaveat){const rendererOpts={powerPreference:this._gpuPreference,depth:this._runtime.Uses3DFeatures(),failIfMajorPerformanceCaveat};this._webgpuRenderer=C3.New(C3.Gfx.WebGPURenderer);await this._webgpuRenderer.Create(this._canvas,rendererOpts)}async _InitWebGLContext(failIfMajorPerformanceCaveat){const rendererOpts=
{powerPreference:this._gpuPreference,enableGpuProfiling:true,depth:this._runtime.Uses3DFeatures(),failIfMajorPerformanceCaveat};if(C3.Platform.OS==="Android"&&C3.Platform.BrowserEngine==="Chromium"&&C3.Platform.BrowserVersionNumber<75){console.warn("[Construct 3] Disabling WebGL 2 because this device appears to be affected by crbug.com/934823. Install software updates to avoid this.");rendererOpts.maxWebGLVersion=1}if(this._runtime.GetCompositingMode()==="standard")rendererOpts.alpha=true;else{rendererOpts.alpha=
false;rendererOpts.lowLatency=true}this._webglRenderer=C3.New(C3.Gfx.WebGLRenderer,this._canvas,rendererOpts);await this._webglRenderer.InitState()}async _InitWebGPU(){if(this._shaderData){const promises=[];for(const [id,data]of Object.entries(this._shaderData)){const vertexSrc=C3.Gfx.WebGPUShaderProgram.GetDefaultVertexShaderSource();promises.push(this._webgpuRenderer.CreateShaderProgram(id,data.wgsl,vertexSrc))}await Promise.all(promises)}}async _InitWebGL(){if(this._shaderData){const promises=
[];for(const [id,data]of Object.entries(this._shaderData)){data.src=data.glsl;const vertexSrc=C3.Gfx.WebGLShaderProgram.GetDefaultVertexShaderSource();promises.push(this._webglRenderer.CreateShaderProgram(data,vertexSrc,id))}await Promise.all(promises);this._webglRenderer.ResetLastProgram();this._webglRenderer.SetTextureFillMode()}if(this._webglRenderer.SupportsGPUProfiling())this._gpuFrameTimingsBuffer=C3.New(C3.Gfx.WebGLQueryResultBuffer,this._webglRenderer)}Release(){this._runtime=null;this._webglRenderer=
null;this._canvas=null}_OnWindowResize(e){const runtime=this._runtime;const dpr=e["devicePixelRatio"];if(runtime.IsInWorker())self.devicePixelRatio=dpr;runtime._SetDevicePixelRatio(dpr);this._isDocumentFullscreen=!!e["isFullscreen"];this.SetSize(e["innerWidth"],e["innerHeight"]);runtime.UpdateRender();if(runtime.IsDebug()&&(runtime.HitBreakpoint()||self.C3Debugger.IsDebuggerPaused()))runtime.Render()}_OnFullscreenChange(e){this._isDocumentFullscreen=!!e["isFullscreen"];this.SetSize(e["innerWidth"],
e["innerHeight"],true);this._runtime.UpdateRender()}_OnFullscreenError(e){this._isDocumentFullscreen=!!e["isFullscreen"];this.SetSize(e["innerWidth"],e["innerHeight"],true);this._runtime.UpdateRender()}SetSize(availableWidth,availableHeight,force=false){availableWidth=Math.floor(availableWidth);availableHeight=Math.floor(availableHeight);if(availableWidth<=0||availableHeight<=0)throw new Error("invalid size");if(this._windowInnerWidth===availableWidth&&this._windowInnerHeight===availableHeight&&!force)return;
this._windowInnerWidth=availableWidth;this._windowInnerHeight=availableHeight;const fullscreenMode=this.GetCurrentFullscreenMode();if(fullscreenMode==="letterbox-scale")this._CalculateLetterboxScale(availableWidth,availableHeight);else if(fullscreenMode==="letterbox-integer-scale")this._CalculateLetterboxIntegerScale(availableWidth,availableHeight);else if(fullscreenMode==="off")this._CalculateFixedSizeCanvas(availableWidth,availableHeight);else this._CalculateFullsizeCanvas(availableWidth,availableHeight);
this._UpdateFullscreenScalingQuality(fullscreenMode);this._canvas.width=this._canvasDeviceWidth;this._canvas.height=this._canvasDeviceHeight;this._runtime.PostComponentMessageToDOM("canvas","update-size",{"marginLeft":this._canvasCssOffsetX,"marginTop":this._canvasCssOffsetY,"styleWidth":this._canvasCssWidth,"styleHeight":this._canvasCssHeight});const renderer=this.GetRenderer();renderer.SetSize(this._canvasDeviceWidth,this._canvasDeviceHeight,true);for(const rt of this._availableAdditionalRenderTargets)renderer.DeleteRenderTarget(rt);
C3.clearArray(this._availableAdditionalRenderTargets);renderer.CalculatePerspectiveMatrix(this._defaultProjectionMatrix,this.GetDrawWidth()/this.GetDrawHeight());const layoutManager=this._runtime.GetLayoutManager();layoutManager.SetAllLayerProjectionChanged();layoutManager.SetAllLayerMVChanged()}GetDefaultProjectionMatrix(){return this._defaultProjectionMatrix}_CalculateLetterboxScale(availableWidth,availableHeight){const dpr=this._runtime.GetDevicePixelRatio();const originalViewportWidth=this._runtime.GetOriginalViewportWidth();
const originalViewportHeight=this._runtime.GetOriginalViewportHeight();const originalAspectRatio=originalViewportWidth/originalViewportHeight;const availableAspectRatio=availableWidth/availableHeight;if(availableAspectRatio>originalAspectRatio){const letterboxedWidth=availableHeight*originalAspectRatio;this._canvasCssWidth=Math.round(letterboxedWidth);this._canvasCssHeight=availableHeight;this._canvasCssOffsetX=Math.floor((availableWidth-this._canvasCssWidth)/2);this._canvasCssOffsetY=0}else{const letterboxedHeight=
availableWidth/originalAspectRatio;this._canvasCssWidth=availableWidth;this._canvasCssHeight=Math.round(letterboxedHeight);this._canvasCssOffsetX=0;this._canvasCssOffsetY=Math.floor((availableHeight-this._canvasCssHeight)/2)}this._canvasDeviceWidth=Math.round(this._canvasCssWidth*dpr);this._canvasDeviceHeight=Math.round(this._canvasCssHeight*dpr);this._runtime.SetViewportSize(originalViewportWidth,originalViewportHeight)}_CalculateLetterboxIntegerScale(availableWidth,availableHeight){const dpr=this._runtime.GetDevicePixelRatio();
if(dpr!==1){availableWidth+=1;availableHeight+=1}const originalViewportWidth=this._runtime.GetOriginalViewportWidth();const originalViewportHeight=this._runtime.GetOriginalViewportHeight();const originalAspectRatio=originalViewportWidth/originalViewportHeight;const availableAspectRatio=availableWidth/availableHeight;let intScale;if(availableAspectRatio>originalAspectRatio){const letterboxedWidth=availableHeight*originalAspectRatio;intScale=letterboxedWidth*dpr/originalViewportWidth}else{const letterboxedHeight=
availableWidth/originalAspectRatio;intScale=letterboxedHeight*dpr/originalViewportHeight}if(intScale>1)intScale=Math.floor(intScale);else if(intScale<1)intScale=1/Math.ceil(1/intScale);this._canvasDeviceWidth=Math.round(originalViewportWidth*intScale);this._canvasDeviceHeight=Math.round(originalViewportHeight*intScale);this._canvasCssWidth=this._canvasDeviceWidth/dpr;this._canvasCssHeight=this._canvasDeviceHeight/dpr;this._canvasCssOffsetX=Math.max(Math.floor((availableWidth-this._canvasCssWidth)/
2),0);this._canvasCssOffsetY=Math.max(Math.floor((availableHeight-this._canvasCssHeight)/2),0);this._runtime.SetViewportSize(originalViewportWidth,originalViewportHeight)}_CalculateFullsizeCanvas(availableWidth,availableHeight){const dpr=this._runtime.GetDevicePixelRatio();this._canvasCssWidth=availableWidth;this._canvasCssHeight=availableHeight;this._canvasDeviceWidth=Math.round(this._canvasCssWidth*dpr);this._canvasDeviceHeight=Math.round(this._canvasCssHeight*dpr);this._canvasCssOffsetX=0;this._canvasCssOffsetY=
0;const displayScale=this.GetDisplayScale();this._runtime.SetViewportSize(this._canvasCssWidth/displayScale,this._canvasCssHeight/displayScale)}_CalculateFixedSizeCanvas(availableWidth,availableHeight){const dpr=this._runtime.GetDevicePixelRatio();this._canvasCssWidth=this._runtime.GetViewportWidth();this._canvasCssHeight=this._runtime.GetViewportHeight();this._canvasDeviceWidth=Math.round(this._canvasCssWidth*dpr);this._canvasDeviceHeight=Math.round(this._canvasCssHeight*dpr);if(this.IsDocumentFullscreen()){this._canvasCssOffsetX=
Math.floor((availableWidth-this._canvasCssWidth)/2);this._canvasCssOffsetY=Math.floor((availableHeight-this._canvasCssHeight)/2)}else{this._canvasCssOffsetX=0;this._canvasCssOffsetY=0}this._runtime.SetViewportSize(this._runtime.GetViewportWidth(),this._runtime.GetViewportHeight())}_UpdateFullscreenScalingQuality(fullscreenMode){if(this._wantFullscreenScalingQuality==="high"){this._drawWidth=this._canvasDeviceWidth;this._drawHeight=this._canvasDeviceHeight;this._fullscreenScalingQuality="high"}else{let viewportWidth,
viewportHeight;if(this.GetCurrentFullscreenMode()==="off"){viewportWidth=this._runtime.GetViewportWidth();viewportHeight=this._runtime.GetViewportHeight()}else{viewportWidth=this._runtime.GetOriginalViewportWidth();viewportHeight=this._runtime.GetOriginalViewportHeight()}if(this._canvasDeviceWidth<viewportWidth&&this._canvasDeviceHeight<viewportHeight){this._drawWidth=this._canvasDeviceWidth;this._drawHeight=this._canvasDeviceHeight;this._fullscreenScalingQuality="high"}else{this._drawWidth=viewportWidth;
this._drawHeight=viewportHeight;this._fullscreenScalingQuality="low";if(fullscreenMode==="scale-inner"){const originalAspectRatio=viewportWidth/viewportHeight;const currentAspectRatio=this._windowInnerWidth/this._windowInnerHeight;if(currentAspectRatio<originalAspectRatio)this._drawWidth=this._drawHeight*currentAspectRatio;else if(currentAspectRatio>originalAspectRatio)this._drawHeight=this._drawWidth/currentAspectRatio}else if(fullscreenMode==="scale-outer"){const originalAspectRatio=viewportWidth/
viewportHeight;const currentAspectRatio=this._windowInnerWidth/this._windowInnerHeight;if(currentAspectRatio>originalAspectRatio)this._drawWidth=this._drawHeight*currentAspectRatio;else if(currentAspectRatio<originalAspectRatio)this._drawHeight=this._drawWidth/currentAspectRatio}}}}IsDocumentFullscreen(){return this._isDocumentFullscreen}SetFullscreenMode(m){if(!VALID_FULLSCREEN_MODES.has(m))throw new Error("invalid fullscreen mode");this._fullscreenMode=m;const layoutManager=this._runtime.GetLayoutManager();
layoutManager.SetAllLayerProjectionChanged();layoutManager.SetAllLayerMVChanged()}GetFullscreenMode(){return this._fullscreenMode}SetDocumentFullscreenMode(m){if(!VALID_FULLSCREEN_MODES.has(m))throw new Error("invalid fullscreen mode");this._documentFullscreenMode=m;const layoutManager=this._runtime.GetLayoutManager();layoutManager.SetAllLayerProjectionChanged();layoutManager.SetAllLayerMVChanged()}GetDocumentFullscreenMode(){return this._documentFullscreenMode}GetCurrentFullscreenMode(){if(this.IsDocumentFullscreen())return this.GetDocumentFullscreenMode();
else return this.GetFullscreenMode()}SetFullscreenScalingQuality(q){if(!VALID_FULLSCREEN_SCALING_QUALITIES.has(q))throw new Error("invalid fullscreen scaling quality");this._wantFullscreenScalingQuality=q;this._runtime.GetLayoutManager().SetAllLayerProjectionChanged()}GetSetFullscreenScalingQuality(){return this._wantFullscreenScalingQuality}GetCurrentFullscreenScalingQuality(){return this._fullscreenScalingQuality}static _FullscreenModeNumberToString(n){switch(n){case 0:return"off";case 1:return"crop";
case 2:return"scale-inner";case 3:return"scale-outer";case 4:return"letterbox-scale";case 5:return"letterbox-integer-scale";default:throw new Error("invalid fullscreen mode");}}GetLastWidth(){return this._windowInnerWidth}GetLastHeight(){return this._windowInnerHeight}GetDrawWidth(){return this._drawWidth}GetDrawHeight(){return this._drawHeight}SetMipmapsEnabled(e){this._enableMipmaps=!!e}_SetTextureAnisotropy(a){this._textureAnisotropy=a}GetTextureAnisotropy(){return this._textureAnisotropy}IsRendererContextLost(){return this.GetRenderer().IsContextLost()}_OnWebGLContextLost(e){console.log("[Construct 3] WebGL context lost");
e.preventDefault();this._availableAdditionalRenderTargets=[];this._usedAdditionalRenderTargets.clear();this._webglRenderer.OnContextLost();this._runtime._OnWebGLContextLost()}async _OnWebGLContextRestored(e){await this._webglRenderer.OnContextRestored();await this._LoadWebGLShaderPrograms();for(const effectList of this._runtime._GetAllEffectLists())for(const effectType of effectList.GetAllEffectTypes())effectType._InitRenderer(this._webglRenderer);await this._runtime._OnWebGLContextRestored();console.log("[Construct 3] WebGL context restored")}GetWebGLRenderer(){return this._webglRenderer}GetWebGPURenderer(){return this._webgpuRenderer}GetRenderer(){return this._webgpuRenderer||
this._webglRenderer}GetRenderScale(){if(this._fullscreenScalingQuality==="low")return 1/this._runtime.GetDevicePixelRatio();return this.GetDisplayScale()}GetDisplayScale(){const fullscreenMode=this.GetCurrentFullscreenMode();if(fullscreenMode==="off"||fullscreenMode==="crop")return 1;const originalViewportWidth=this._runtime.GetOriginalViewportWidth();const originalViewportHeight=this._runtime.GetOriginalViewportHeight();const originalAspectRatio=originalViewportWidth/originalViewportHeight;const currentAspectRatio=
this._canvasDeviceWidth/this._canvasDeviceHeight;if(fullscreenMode!=="scale-inner"&&currentAspectRatio>originalAspectRatio||fullscreenMode==="scale-inner"&&currentAspectRatio<originalAspectRatio)return this._canvasCssHeight/originalViewportHeight;else return this._canvasCssWidth/originalViewportWidth}SetDeviceTransformOffset(x,y){this._deviceTransformOffX=x;this._deviceTransformOffY=y}SetDeviceTransform(renderer,w,h,updateProjection=true){w=w||this._drawWidth;h=h||this._drawHeight;const scrollX=w/
2+this._deviceTransformOffX;const scrollY=h/2+this._deviceTransformOffY;if(updateProjection){let projectionMatrix=this.GetDefaultProjectionMatrix();if(w!==this._drawWidth||h!==this._drawHeight){renderer.CalculatePerspectiveMatrix(tempProjection,w/h);projectionMatrix=tempProjection}renderer.SetProjectionMatrix(projectionMatrix)}const tempMat4=renderer.CalculateLookAtModelView2(scrollX,scrollY,renderer.GetDefaultCameraZ()*this._runtime.GetDevicePixelRatio(),scrollX,scrollY,0,h||this._drawHeight);renderer.SetModelViewMatrix(tempMat4)}SetCssTransform(renderer,
updateProjection=true){const scrollX=this._canvasCssWidth/2;const scrollY=this._canvasCssHeight/2;if(updateProjection)renderer.SetProjectionMatrix(this.GetDefaultProjectionMatrix());const tempMat4=renderer.CalculateLookAtModelView2(scrollX,scrollY,renderer.GetDefaultCameraZ(),scrollX,scrollY,0);renderer.SetModelViewMatrix(tempMat4)}GetDeviceWidth(){return this._canvasDeviceWidth}GetDeviceHeight(){return this._canvasDeviceHeight}GetCssWidth(){return this._canvasCssWidth}GetCssHeight(){return this._canvasCssHeight}GetCanvasClientX(){return this._canvasCssOffsetX}GetCanvasClientY(){return this._canvasCssOffsetY}GetAdditionalRenderTarget(opts){opts.depth=
this._runtime.Uses3DFeatures();const arr=this._availableAdditionalRenderTargets;const useIndex=arr.findIndex(rt=>rt.IsCompatibleWithOptions(opts));let ret;if(useIndex!==-1){ret=arr[useIndex];arr.splice(useIndex,1)}else ret=this.GetRenderer().CreateRenderTarget(opts);this._usedAdditionalRenderTargets.add(ret);return ret}ReleaseAdditionalRenderTarget(renderTarget){if(!this._usedAdditionalRenderTargets.has(renderTarget))throw new Error("render target not in use");this._usedAdditionalRenderTargets.delete(renderTarget);
this._availableAdditionalRenderTargets.push(renderTarget)}*activeLayersGpuProfiles(){for(const layout of this._runtime.GetLayoutManager().runningLayouts())for(const layer of layout.GetLayers()){const p=this._layersGpuProfile.get(layer);if(p)yield p}}GetLayerTimingsBuffer(layer){if(!this.GetRenderer().SupportsGPUProfiling())return null;let p=this._layersGpuProfile.get(layer);if(!p){p={name:layer.GetName(),timingsBuffer:C3.New(C3.Gfx.WebGLQueryResultBuffer,this._webglRenderer),curUtilisation:0,lastUtilisation:0};
this._layersGpuProfile.set(layer,p)}return p.timingsBuffer}_Update1sFrameRange(){const renderer=this.GetRenderer();if(!renderer.SupportsGPUProfiling())return;if(this._gpuTimeEndFrame===0){this._gpuTimeEndFrame=renderer.GetFrameNumber();this._gpuCurUtilisation=NaN;for(const p of this.activeLayersGpuProfiles())p.curUtilisation=NaN}}_UpdateTick(){if(this._webglRenderer&&this._webglRenderer.SupportsGPUProfiling())this._UpdateTick_WebGL();if(this._webgpuRenderer&&this._webgpuRenderer.SupportsGPUProfiling())this._UpdateTick_WebGPU()}_UpdateTick_WebGL(){if(!isNaN(this._gpuCurUtilisation))return;
this._gpuCurUtilisation=this._gpuFrameTimingsBuffer.GetFrameRangeResultSum(this._gpuTimeStartFrame,this._gpuTimeEndFrame);if(isNaN(this._gpuCurUtilisation))return;if(this._runtime.IsDebug())for(const p of this.activeLayersGpuProfiles()){p.curUtilisation=p.timingsBuffer.GetFrameRangeResultSum(this._gpuTimeStartFrame,this._gpuTimeEndFrame);if(isNaN(p.curUtilisation))return}this._gpuFrameTimingsBuffer.DeleteAllBeforeFrameNumber(this._gpuTimeEndFrame);this._gpuLastUtilisation=Math.min(this._gpuCurUtilisation,
1);if(this._runtime.IsDebug()){for(const p of this.activeLayersGpuProfiles()){p.timingsBuffer.DeleteAllBeforeFrameNumber(this._gpuTimeEndFrame);p.lastUtilisation=Math.min(p.curUtilisation,1)}self.C3Debugger.UpdateGPUProfile(this._gpuLastUtilisation,[...this.activeLayersGpuProfiles()])}this._gpuTimeStartFrame=this._gpuTimeEndFrame;this._gpuTimeEndFrame=0}GetGPUFrameTimingsBuffer(){return this._gpuFrameTimingsBuffer}_UpdateTick_WebGPU(){if(this._gpuTimeEndFrame===0)return;for(let frameNumber=this._gpuTimeStartFrame;frameNumber<
this._gpuTimeEndFrame;++frameNumber){const frameTiming=this._webgpuFrameTimings.get(frameNumber);if(frameTiming&&!frameTiming.HasResult())return}const layout=this._runtime.GetMainRunningLayout();const profileResults=C3.MakeFilledArray(layout.GetLayerCount()+1,0);for(let frameNumber=this._gpuTimeStartFrame;frameNumber<this._gpuTimeEndFrame;++frameNumber){const frameTiming=this._webgpuFrameTimings.get(frameNumber);if(!frameTiming)continue;const results=frameTiming.GetResult();for(let i=0,len=Math.min(profileResults.length,
results.length/2);i<len;++i){const start64=results[i*2];const end64=results[i*2+1];if(Number(start64)===0||Number(end64)===0){profileResults[i]=NaN;continue}const diff64=end64-start64;const duration=Number(diff64)/1E9;profileResults[i]+=duration}}this._gpuLastUtilisation=C3.clamp(profileResults[0],0,1);if(this._runtime.IsDebug()){const layerProfiles=[];const layers=layout.GetLayers();for(let i=0,len=Math.min(layers.length,profileResults.length-1);i<len;++i)layerProfiles.push({name:layers[i].GetName(),
lastUtilisation:C3.clamp(profileResults[i+1],0,1)});self.C3Debugger.UpdateGPUProfile(this._gpuLastUtilisation,layerProfiles)}for(let frameNumber=this._gpuTimeStartFrame;frameNumber<this._gpuTimeEndFrame;++frameNumber)this._webgpuFrameTimings.delete(frameNumber);this._gpuTimeStartFrame=this._gpuTimeEndFrame;this._gpuTimeEndFrame=0}_AddWebGPUFrameTiming(frameTiming){this._webgpuFrameTimings.set(this._webgpuRenderer.GetFrameNumber(),frameTiming)}GetGPUUtilisation(){return this._gpuLastUtilisation}SnapshotCanvas(format,
quality,x,y,width,height){this._snapshotFormat=format;this._snapshotQuality=quality;this._snapshotArea.setWH(x,y,width,height);if(this._snapshotPromise)return this._snapshotPromise;this._snapshotPromise=new Promise(resolve=>{this._snapshotResolve=resolve});return this._snapshotPromise}_MaybeTakeSnapshot(){if(!this._snapshotFormat)return;let canvas=this._canvas;const snapArea=this._snapshotArea;const x=C3.clamp(Math.floor(snapArea.getLeft()),0,canvas.width);const y=C3.clamp(Math.floor(snapArea.getTop()),
0,canvas.height);let w=snapArea.width();if(w===0)w=canvas.width-x;else w=C3.clamp(Math.floor(w),0,canvas.width-x);let h=snapArea.height();if(h===0)h=canvas.height-y;else h=C3.clamp(Math.floor(h),0,canvas.height-y);if((x!==0||y!==0||w!==canvas.width||h!==canvas.height)&&(w>0&&h>0)){canvas=C3.CreateCanvas(w,h);const ctx=canvas.getContext("2d");ctx.drawImage(this._canvas,x,y,w,h,0,0,w,h)}C3.CanvasToBlob(canvas,this._snapshotFormat,this._snapshotQuality).then(blob=>{this._snapshotUrl=URL.createObjectURL(blob);
this._snapshotPromise=null;this._snapshotResolve(this._snapshotUrl)});this._snapshotFormat="";this._snapshotQuality=1}GetCanvasSnapshotUrl(){return this._snapshotUrl}SetIsPastingToDrawingCanvas(p){if(p)this._isPastingToDrawingCanvas++;else this._isPastingToDrawingCanvas--}IsPastingToDrawingCanvas(){return this._isPastingToDrawingCanvas>0}InitLoadingScreen(loaderStyle){if(!this._webglRenderer)return;if(loaderStyle===2){this._percentText=C3.New(C3.Gfx.RendererText,this.GetRenderer());this._percentText.SetIsAsync(false);
this._percentText.SetFontName("Arial");this._percentText.SetFontSize(16);this._percentText.SetHorizontalAlignment("center");this._percentText.SetVerticalAlignment("center");this._percentText.SetSize(PERCENTTEXT_WIDTH,PERCENTTEXT_HEIGHT)}else if(loaderStyle===0){const loadingLogoAsset=this._runtime.GetLoadingLogoAsset();if(loadingLogoAsset)loadingLogoAsset.LoadStaticTexture(this._webglRenderer).catch(err=>console.warn(`[C3 runtime] Failed to create texture for loading logo: `,err))}else if(loaderStyle===
4){this._LoadSvgSplashImage("splash-images/splash-logo.svg").then(tex=>{if(this._splashState==="done")this._webglRenderer.DeleteTexture(tex);else this._splashTextures.logo=tex}).catch(err=>console.warn("Failed to load splash image: ",err));this._LoadBitmapSplashImage("splash-images/splash-poweredby-512.png").then(tex=>{if(this._splashState==="done")this._webglRenderer.DeleteTexture(tex);else this._splashTextures.powered=tex}).catch(err=>console.warn("Failed to load splash image: ",err));this._LoadBitmapSplashImage("splash-images/splash-website-512.png").then(tex=>
{if(this._splashState==="done")this._webglRenderer.DeleteTexture(tex);else this._splashTextures.website=tex}).catch(err=>console.warn("Failed to load splash image: ",err))}}async _LoadSvgSplashImage(url){url=(new URL(url,this._runtime.GetBaseURL())).toString();const blob=await C3.FetchBlob(url);const drawable=await this._runtime.RasterSvgImage(blob,2048,2048);return await this._webglRenderer.CreateStaticTextureAsync(drawable,{mipMapQuality:"high"})}async _LoadBitmapSplashImage(url){url=(new URL(url,
this._runtime.GetBaseURL())).toString();const blob=await C3.FetchBlob(url);return await this._webglRenderer.CreateStaticTextureAsync(blob,{mipMapQuality:"high"})}HideCordovaSplashScreen(){this._runtime.PostComponentMessageToDOM("runtime","hide-cordova-splash")}StartLoadingScreen(){this._loaderStartTime=Date.now();this._runtime.Dispatcher().addEventListener("loadingprogress",this._loadingprogress_handler);this._rafId=requestAnimationFrame(()=>this._DrawLoadingScreen());const loaderStyle=this._runtime.GetLoaderStyle();
if(loaderStyle!==3)this.HideCordovaSplashScreen()}async EndLoadingScreen(){if(!this._webglRenderer)return;this._loadingProgress=1;const loaderStyle=this._runtime.GetLoaderStyle();if(loaderStyle===4)await this._splashDonePromise;this._splashDoneResolve=null;this._splashDonePromise=null;if(this._rafId!==-1){cancelAnimationFrame(this._rafId);this._rafId=-1}this._runtime.Dispatcher().removeEventListener("loadingprogress",this._loadingprogress_handler);this._loadingprogress_handler=null;if(this._percentText){this._percentText.Release();
this._percentText=null}this._runtime.ReleaseLoadingLogoAsset();this._webglRenderer.Start();if(this._splashTextures.logo){this._webglRenderer.DeleteTexture(this._splashTextures.logo);this._splashTextures.logo=null}if(this._splashTextures.powered){this._webglRenderer.DeleteTexture(this._splashTextures.powered);this._splashTextures.powered=null}if(this._splashTextures.website){this._webglRenderer.DeleteTexture(this._splashTextures.website);this._splashTextures.website=null}this._webglRenderer.ClearRgba(0,
0,0,0);this._webglRenderer.Finish();this._splashState="done";this._gpuTimeStartFrame=this._webglRenderer.GetFrameNumber();if(loaderStyle===3)this.HideCordovaSplashScreen()}_DrawLoadingScreen(){if(this._rafId===-1)return;const renderer=this._webglRenderer;if(!renderer)return;renderer.Start();this._rafId=-1;const hasHadError=this._runtime.GetAssetManager().HasHadErrorLoading();const loaderStyle=this._runtime.GetLoaderStyle();if(loaderStyle!==3){this.SetCssTransform(renderer);renderer.ClearRgba(0,0,
0,0);renderer.ResetColor();renderer.SetTextureFillMode();renderer.SetTexture(null)}if(loaderStyle===0)this._DrawProgressBarAndLogoLoadingScreen(hasHadError);else if(loaderStyle===1)this._DrawProgressBarLoadingScreen(hasHadError,PROGRESSBAR_WIDTH,0);else if(loaderStyle===2)this._DrawPercentTextLoadingScreen(hasHadError);else if(loaderStyle===3)C3.noop();else if(loaderStyle===4)this._DrawSplashLoadingScreen(hasHadError);else throw new Error("invalid loader style");renderer.Finish();this._rafId=requestAnimationFrame(()=>
this._DrawLoadingScreen())}_DrawPercentTextLoadingScreen(hasHadError){if(hasHadError)this._percentText.SetColorRgb(1,0,0);else this._percentText.SetColorRgb(.6,.6,.6);this._percentText.SetText(Math.round(this._loadingProgress*100)+"%");const midX=this._canvasCssWidth/2;const midY=this._canvasCssHeight/2;const hw=PERCENTTEXT_WIDTH/2;const hh=PERCENTTEXT_HEIGHT/2;tempQuad.setRect(midX-hw,midY-hh,midX+hw,midY+hh);this._webglRenderer.SetTexture(this._percentText.GetTexture());this._webglRenderer.Quad3(tempQuad,
this._percentText.GetTexRect())}_DrawProgressBarLoadingScreen(hasHadError,width,yOff){const renderer=this._webglRenderer;const height=PROGRESSBAR_HEIGHT;renderer.SetColorFillMode();if(hasHadError)renderer.SetColorRgba(1,0,0,1);else renderer.SetColorRgba(.118,.565,1,1);const midX=this._canvasCssWidth/2;const midY=this._canvasCssHeight/2;const hw=width/2;const hh=height/2;tempRect.setWH(midX-hw,midY-hh+yOff,Math.floor(width*this._loadingProgress),height);renderer.Rect(tempRect);tempRect.setWH(midX-
hw,midY-hh+yOff,width,height);tempRect.offset(-.5,-.5);tempRect.inflate(.5,.5);renderer.SetColorRgba(0,0,0,1);renderer.LineRect2(tempRect);tempRect.inflate(1,1);renderer.SetColorRgba(1,1,1,1);renderer.LineRect2(tempRect)}_DrawProgressBarAndLogoLoadingScreen(hasHadError){const loadingLogoAsset=this._runtime.GetLoadingLogoAsset();if(!loadingLogoAsset){this._DrawProgressBarLoadingScreen(hasHadError,PROGRESSBAR_WIDTH,0);return}const logoTexture=loadingLogoAsset.GetTexture();if(!logoTexture){this._DrawProgressBarLoadingScreen(hasHadError,
PROGRESSBAR_WIDTH,0);return}const logoW=logoTexture.GetWidth();const logoH=logoTexture.GetHeight();const midX=this._canvasCssWidth/2;const midY=this._canvasCssHeight/2;const hw=logoW/2;const hh=logoH/2;tempQuad.setRect(midX-hw,midY-hh,midX+hw,midY+hh);this._webglRenderer.SetTexture(logoTexture);this._webglRenderer.Quad(tempQuad);this._DrawProgressBarLoadingScreen(hasHadError,logoW,hh+16)}_DrawSplashLoadingScreen(hasHadError){const renderer=this._webglRenderer;const logoTex=this._splashTextures.logo;
const poweredTex=this._splashTextures.powered;const websiteTex=this._splashTextures.website;const nowTime=Date.now();if(this._splashFrameNumber===0)this._loaderStartTime=nowTime;const allowQuickSplash=this._runtime.IsPreview()||this._runtime.IsFBInstantAvailable()&&!this._runtime.IsCordova();const splashAfterFadeOutWait=allowQuickSplash?0:SPLASH_AFTER_FADEOUT_WAIT_TIME;const splashMinDisplayTime=allowQuickSplash?0:SPLASH_MIN_DISPLAY_TIME;let a=1;if(this._splashState==="fade-in")a=Math.min((nowTime-
this._loaderStartTime)/SPLASH_FADE_DURATION,1);else if(this._splashState==="fade-out")a=Math.max(1-(nowTime-this._splashFadeOutStartTime)/SPLASH_FADE_DURATION,0);renderer.SetColorFillMode();renderer.SetColorRgba(.231*a,.251*a,.271*a,a);tempRect.set(0,0,this._canvasCssWidth,this._canvasCssHeight);renderer.Rect(tempRect);const w=Math.ceil(this._canvasCssWidth);const h=Math.ceil(this._canvasCssHeight);let drawW,drawH;if(this._canvasCssHeight>256){renderer.SetColorRgba(.302*a,.334*a,.365*a,a);drawW=w;
drawH=Math.max(h*.005,2);tempRect.setWH(0,h*.8-drawH/2,drawW,drawH);renderer.Rect(tempRect);if(hasHadError)renderer.SetColorRgba(a,0,0,a);else renderer.SetColorRgba(.161*a,.953*a,.816*a,a);drawW=w*this._loadingProgress;tempRect.setWH(w*.5-drawW/2,h*.8-drawH/2,drawW,drawH);renderer.Rect(tempRect);renderer.SetColorRgba(a,a,a,a);renderer.SetTextureFillMode();if(poweredTex){drawW=C3.clamp(h*.22,105,w*.6)*1.5;drawH=drawW/8;tempRect.setWH(w*.5-drawW/2,h*.2-drawH/2,drawW,drawH);renderer.SetTexture(poweredTex);
renderer.Rect(tempRect)}if(logoTex){drawW=Math.min(h*.395,w*.95);drawH=drawW;tempRect.setWH(w*.5-drawW/2,h*.485-drawH/2,drawW,drawH);renderer.SetTexture(logoTex);renderer.Rect(tempRect)}if(websiteTex){drawW=C3.clamp(h*.22,105,w*.6)*1.5;drawH=drawW/8;tempRect.setWH(w*.5-drawW/2,h*.868-drawH/2,drawW,drawH);renderer.SetTexture(websiteTex);renderer.Rect(tempRect)}}else{renderer.SetColorRgba(.302*a,.334*a,.365*a,a);drawW=w;drawH=Math.max(h*.005,2);tempRect.setWH(0,h*.85-drawH/2,drawW,drawH);renderer.Rect(tempRect);
if(hasHadError)renderer.SetColorRgba(a,0,0,a);else renderer.SetColorRgba(.161*a,.953*a,.816*a,a);drawW=w*this._loadingProgress;tempRect.setWH(w*.5-drawW/2,h*.85-drawH/2,drawW,drawH);renderer.Rect(tempRect);renderer.SetColorRgba(a,a,a,a);renderer.SetTextureFillMode();if(logoTex){drawW=h*.55;drawH=drawW;tempRect.setWH(w*.5-drawW/2,h*.45-drawH/2,drawW,drawH);renderer.SetTexture(logoTex);renderer.Rect(tempRect)}}this._splashFrameNumber++;if(this._splashState==="fade-in"&&nowTime-this._loaderStartTime>=
SPLASH_FADE_DURATION&&this._splashFrameNumber>=2){this._splashState="wait";this._splashFadeInFinishTime=nowTime}if(this._splashState==="wait"&&nowTime-this._splashFadeInFinishTime>=splashMinDisplayTime&&this._loadingProgress>=1){this._splashState="fade-out";this._splashFadeOutStartTime=nowTime}if(this._splashState==="fade-out"&&nowTime-this._splashFadeOutStartTime>=SPLASH_FADE_DURATION+splashAfterFadeOutWait||allowQuickSplash&&this._loadingProgress>=1&&nowTime-this._loaderStartTime<500)this._splashDoneResolve()}};

}

// runtime.js
{
'use strict';const C3=self.C3;const C3Debugger=self.C3Debugger;const assert=self.assert;const DEFAULT_RUNTIME_OPTS={"messagePort":null,"baseUrl":"","headless":false,"hasDom":true,"isInWorker":false,"useAudio":true,"projectData":"","exportType":""};let ife=true;
C3.Runtime=class C3Runtime extends C3.DefendedBase{constructor(opts){opts=Object.assign({},DEFAULT_RUNTIME_OPTS,opts);super();this._messagePort=opts["messagePort"];this._baseUrl=opts["baseUrl"];this._isHeadless=!!opts["headless"];this._hasDom=!!opts["hasDom"];this._isInWorker=!!opts["isInWorker"];ife=opts["ife"];this._useAudio=!!opts["useAudio"];this._exportType=opts["exportType"];this._isiOSCordova=!!opts["isiOSCordova"];this._isiOSWebView=!!opts["isiOSWebView"];this._isFBInstantAvailable=!!opts["isFBInstantAvailable"];
this._opusWasmScriptUrl=opts["opusWasmScriptUrl"];this._opusWasmBinaryUrl=opts["opusWasmBinaryUrl"];this._isDebug=!!(this._exportType==="preview"&&opts["isDebug"]);this._breakpointsEnabled=this._isDebug;this._isDebugging=this._isDebug;this._debuggingDisabled=0;this._additionalLoadPromises=[];this._additionalCreatePromises=[];this._isUsingCreatePromises=false;this._projectName="";this._projectVersion="";this._projectUniqueId="";this._appId="";this._originalViewportWidth=0;this._originalViewportHeight=
0;this._devicePixelRatio=self.devicePixelRatio;this._parallaxXorigin=0;this._parallaxYorigin=0;this._viewportWidth=0;this._viewportHeight=0;this._loaderStyle=0;this._usesLoaderLayout=false;this._isLoading=true;this._usesAnyBackgroundBlending=false;this._loadingLogoAsset=null;this._assetManager=C3.New(C3.AssetManager,this,opts);this._layoutManager=C3.New(C3.LayoutManager,this);this._eventSheetManager=C3.New(C3.EventSheetManager,this);this._pluginManager=C3.New(C3.PluginManager,this);this._collisionEngine=
C3.New(C3.CollisionEngine,this);this._timelineManager=C3.New(C3.TimelineManager,this);this._transitionManager=C3.New(C3.TransitionManager,this);this._allObjectClasses=[];this._objectClassesByName=new Map;this._objectClassesBySid=new Map;this._familyCount=0;this._allContainers=[];this._allEffectLists=[];this._currentLayoutStack=[];this._instancesPendingCreate=[];this._instancesPendingDestroy=new Map;this._hasPendingInstances=false;this._isFlushingPendingInstances=false;this._objectCount=0;this._nextUid=
0;this._instancesByUid=new Map;this._instancesToReleaseAtEndOfTick=new Set;this._instancesToReleaseAffectedObjectClasses=new Set;this._objectReferenceTable=[];this._jsPropNameTable=[];this._canvasManager=null;this._uses3dFeatures=false;this._framerateMode="vsync";this._compositingMode="standard";this._sampling="trilinear";this._isPixelRoundingEnabled=false;this._needRender=true;this._pauseOnBlur=false;this._isPausedOnBlur=false;this._tickCallbacks={normal:timestamp=>{this._rafId=-1;this._ruafId=-1;
this.Tick(timestamp)},tickOnly:timestamp=>{this._ruafId=-1;this.Tick(timestamp,false,"skip-render")},renderOnly:()=>{this._rafId=-1;this.Render()}};this._rafId=-1;this._ruafId=-1;this._tickCount=0;this._tickCountNoSave=0;this._execCount=0;this._hasStarted=false;this._isInTick=false;this._hasStartedTicking=false;this._isLayoutFirstTick=true;this._suspendCount=0;this._scheduleTriggersThrottle=new C3.PromiseThrottle(1);this._randomNumberCallback=()=>Math.random();this._startTime=0;this._lastTickTime=
0;this._dt1=0;this._dt=0;this._timeScale=1;this._minimumFramerate=30;this._gameTime=C3.New(C3.KahanSum);this._gameTimeRaw=C3.New(C3.KahanSum);this._wallTime=C3.New(C3.KahanSum);this._fpsFrameCount=-1;this._fpsLastTime=0;this._fps=0;this._mainThreadTimeCounter=0;this._mainThreadTime=0;this._isLoadingState=false;this._saveToSlotName="";this._loadFromSlotName="";this._loadFromJson=null;this._lastSaveJson="";this._projectStorage=null;this._savegamesStorage=null;this._dispatcher=C3.New(C3.Event.Dispatcher);
this._domEventHandlers=new Map;this._pendingResponsePromises=new Map;this._nextDomResponseId=0;this._didRequestDeviceOrientationEvent=false;this._didRequestDeviceMotionEvent=false;this._isReadyToHandleEvents=false;this._waitingToHandleEvents=[];this._eventObjects={"pretick":C3.New(C3.Event,"pretick",false),"tick":C3.New(C3.Event,"tick",false),"tick2":C3.New(C3.Event,"tick2",false),"instancedestroy":C3.New(C3.Event,"instancedestroy",false),"beforelayoutchange":C3.New(C3.Event,"beforelayoutchange",
false),"layoutchange":C3.New(C3.Event,"layoutchange",false)};this._eventObjects["instancedestroy"].instance=null;this._userScriptDispatcher=C3.New(C3.Event.Dispatcher);this._userScriptEventObjects=null;this._behInstsToTick=C3.New(C3.RedBlackSet,C3.BehaviorInstance.SortByTickSequence);this._behInstsToPostTick=C3.New(C3.RedBlackSet,C3.BehaviorInstance.SortByTickSequence);this._behInstsToTick2=C3.New(C3.RedBlackSet,C3.BehaviorInstance.SortByTickSequence);this._jobScheduler=C3.New(C3.JobSchedulerRuntime,
this,opts["jobScheduler"]);if(opts["canvas"])this._canvasManager=C3.New(C3.CanvasManager,this);this._messagePort.onmessage=e=>this["_OnMessageFromDOM"](e.data);this.AddDOMComponentMessageHandler("runtime","visibilitychange",e=>this._OnVisibilityChange(e));this.AddDOMComponentMessageHandler("runtime","opus-decode",e=>this._WasmDecodeWebMOpus(e["arrayBuffer"]));this.AddDOMComponentMessageHandler("runtime","get-remote-preview-status-info",()=>this._GetRemotePreviewStatusInfo());this.AddDOMComponentMessageHandler("runtime",
"js-invoke-function",e=>this._InvokeFunctionFromJS(e));this.AddDOMComponentMessageHandler("runtime","go-to-last-error-script",self["goToLastErrorScript"]);this._dispatcher.addEventListener("window-blur",e=>this._OnWindowBlur(e));this._dispatcher.addEventListener("window-focus",()=>this._OnWindowFocus());this._timelineManager.AddRuntimeListeners();this._iRuntime=null;this._interfaceMap=new WeakMap;this._commonScriptInterfaces={keyboard:null,mouse:null,touch:null}}static Create(opts){return C3.New(C3.Runtime,
opts)}Release(){C3.clearArray(this._allObjectClasses);this._objectClassesByName.clear();this._objectClassesBySid.clear();this._layoutManager.Release();this._layoutManager=null;this._eventSheetManager.Release();this._eventSheetManager=null;this._pluginManager.Release();this._pluginManager=null;this._assetManager.Release();this._assetManager=null;this._collisionEngine.Release();this._collisionEngine=null;this._timelineManager.Release();this._timelineManager=null;this._transitionManager.Release();this._transitionManager=
null;if(this._canvasManager){this._canvasManager.Release();this._canvasManager=null}this._dispatcher.Release();this._dispatcher=null;this._tickEvent=null}["_OnMessageFromDOM"](data){const type=data["type"];if(type==="event")this._OnEventFromDOM(data);else if(type==="result")this._OnResultFromDOM(data);else throw new Error(`unknown message '${type}'`);}_OnEventFromDOM(e){if(!this._isReadyToHandleEvents){this._waitingToHandleEvents.push(e);return}const component=e["component"];const handler=e["handler"];
const data=e["data"];const dispatchOpts=e["dispatchOpts"];const dispatchRuntimeEvent=!!(dispatchOpts&&dispatchOpts["dispatchRuntimeEvent"]);const dispatchUserScriptEvent=!!(dispatchOpts&&dispatchOpts["dispatchUserScriptEvent"]);const responseId=e["responseId"];if(component==="runtime"){if(dispatchRuntimeEvent){const event=new C3.Event(handler);event.data=data;this._dispatcher.dispatchEventAndWaitAsyncSequential(event)}if(dispatchUserScriptEvent){const event=new C3.Event(handler,true);for(const [key,
value]of Object.entries(data))event[key]=value;this.DispatchUserScriptEvent(event)}}const handlerMap=this._domEventHandlers.get(component);if(!handlerMap){if(!dispatchRuntimeEvent&&!dispatchUserScriptEvent)console.warn(`[Runtime] No DOM event handlers for component '${component}'`);return}const func=handlerMap.get(handler);if(!func){if(!dispatchRuntimeEvent&&!dispatchUserScriptEvent)console.warn(`[Runtime] No DOM handler '${handler}' for component '${component}'`);return}let ret=null;try{ret=func(data)}catch(err){console.error(`Exception in '${component}' handler '${handler}':`,
err);if(responseId!==null)this._PostResultToDOM(responseId,false,""+err);return}if(responseId!==null)if(ret&&ret.then)ret.then(result=>this._PostResultToDOM(responseId,true,result)).catch(err=>{console.error(`Rejection from '${component}' handler '${handler}':`,err);this._PostResultToDOM(responseId,false,""+err)});else this._PostResultToDOM(responseId,true,ret)}_PostResultToDOM(responseId,isOk,result){this._messagePort.postMessage({"type":"result","responseId":responseId,"isOk":isOk,"result":result})}_OnResultFromDOM(data){const responseId=
data["responseId"];const isOk=data["isOk"];const result=data["result"];const pendingPromise=this._pendingResponsePromises.get(responseId);if(isOk)pendingPromise.resolve(result);else pendingPromise.reject(result);this._pendingResponsePromises.delete(responseId)}AddDOMComponentMessageHandler(component,handler,func){let handlerMap=this._domEventHandlers.get(component);if(!handlerMap){handlerMap=new Map;this._domEventHandlers.set(component,handlerMap)}if(handlerMap.has(handler))throw new Error(`[Runtime] Component '${component}' already has handler '${handler}'`);
handlerMap.set(handler,func)}PostComponentMessageToDOM(component,handler,data){this._messagePort.postMessage({"type":"event","component":component,"handler":handler,"data":data,"responseId":null})}PostComponentMessageToDOMAsync(component,handler,data){const responseId=this._nextDomResponseId++;const ret=new Promise((resolve,reject)=>{this._pendingResponsePromises.set(responseId,{resolve,reject})});this._messagePort.postMessage({"type":"event","component":component,"handler":handler,"data":data,"responseId":responseId});
return ret}PostToDebugger(data){if(!this.IsDebug())throw new Error("not in debug mode");this.PostComponentMessageToDOM("runtime","post-to-debugger",data)}async Init(opts){if(this.IsDebug())await C3Debugger.Init(this);else if(self.C3Debugger)self.C3Debugger.InitPreview(this);const [o]=await Promise.all([this._assetManager.FetchJson("data.json"),this._MaybeLoadOpusDecoder(),this._jobScheduler.Init()]);this._LoadDataJson(o);await this._InitialiseCanvas(opts);if(!this.IsPreview())console.info("Made with Construct 3, the game and app creator :: https://www.construct.net");
if(this.GetWebGLRenderer()){const webglRenderer=this.GetWebGLRenderer();console.info(`[C3 runtime] Hosted in ${this.IsInWorker()?"worker":"DOM"}, rendering with WebGL ${webglRenderer.GetWebGLVersionNumber()} [${webglRenderer.GetUnmaskedRenderer()}] (${webglRenderer.IsDesynchronized()?"desynchronized":"standard"} compositing)`)}else if(this.GetWebGPURenderer())console.info(`[C3 runtime] Hosted in ${this.IsInWorker()?"worker":"DOM"}, rendering with experimental WebGPU`);if(this.GetRenderer().HasMajorPerformanceCaveat())console.warn("[C3 runtime] The renderer indicates a major performance caveat. Software rendering may be in use. This can result in significantly degraded performance.");
this._isReadyToHandleEvents=true;for(const e of this._waitingToHandleEvents)this._OnEventFromDOM(e);C3.clearArray(this._waitingToHandleEvents);if(this._canvasManager)this._canvasManager.StartLoadingScreen();for(const f of opts["runOnStartupFunctions"])this._additionalLoadPromises.push(this._RunOnStartupFunction(f));await Promise.all([this._assetManager.WaitForAllToLoad(),...this._additionalLoadPromises]);C3.clearArray(this._additionalLoadPromises);if(this._assetManager.HasHadErrorLoading()){if(this._canvasManager)this._canvasManager.HideCordovaSplashScreen();
return}if(this._canvasManager)await this._canvasManager.EndLoadingScreen();await this._dispatcher.dispatchEventAndWaitAsync(new C3.Event("beforeruntimestart"));await this.Start();this._messagePort.postMessage({"type":"runtime-ready"});return this}async _RunOnStartupFunction(f){try{await f(this._iRuntime)}catch(err){console.error("[C3 runtime] Error in runOnStartup function: ",err)}}_LoadDataJson(o){const projectData=o["project"];this._projectName=projectData[0];this._projectVersion=projectData[16];
this._projectUniqueId=projectData[31];this._appId=projectData[38];const loadingLogoFilename=projectData[39]||"loading-logo.png";this._isPixelRoundingEnabled=!!projectData[9];this._originalViewportWidth=this._viewportWidth=projectData[10];this._originalViewportHeight=this._viewportHeight=projectData[11];this._parallaxXorigin=this._originalViewportWidth/2;this._parallaxYorigin=this._originalViewportHeight/2;this._compositingMode=projectData[36];this._framerateMode=projectData[37];if(this._compositingMode===
"low-latency"&&this.IsAndroidWebView()&&C3.Platform.BrowserVersionNumber<=77){console.warn("[C3 runtime] Desynchronized (low-latency) compositing is enabled, but is disabled in the Android WebView <=77 due to crbug.com/1008842. Reverting to synchronized (standard) compositing.");this._compositingMode="standard"}this._uses3dFeatures=!!projectData[40];this._sampling=projectData[14];this._usesLoaderLayout=!!projectData[18];this._loaderStyle=projectData[19];this._nextUid=projectData[21];this._pauseOnBlur=
projectData[22];const assetManager=this._assetManager;assetManager._SetAudioFiles(projectData[7],projectData[25]);assetManager._SetMediaSubfolder(projectData[8]);assetManager._SetFontsSubfolder(projectData[32]);assetManager._SetIconsSubfolder(projectData[28]);assetManager._SetWebFonts(projectData[29]);if(this._loaderStyle===0){let url="";if(this.IsPreview()){if(assetManager._HasLocalUrlBlob(loadingLogoFilename))url=assetManager.GetLocalUrlAsBlobUrl(loadingLogoFilename)}else url=assetManager.GetIconsSubfolder()+
loadingLogoFilename;if(url)this._loadingLogoAsset=assetManager.LoadImage({url})}if(this._canvasManager){this._canvasManager.SetFullscreenMode(C3.CanvasManager._FullscreenModeNumberToString(projectData[12]));this._canvasManager.SetFullscreenScalingQuality(projectData[23]?"high":"low");this._canvasManager.SetMipmapsEnabled(projectData[24]!==0);this._canvasManager._SetGPUPowerPreference(projectData[34]);this._canvasManager._SetTextureAnisotropy(projectData[41]);this._canvasManager._SetWebGPUEnabled(projectData[13])}this._pluginManager.CreateSystemPlugin();
this._objectReferenceTable=self.C3_GetObjectRefTable();for(const pluginData of projectData[2])this._pluginManager.CreatePlugin(pluginData);this._objectReferenceTable=self.C3_GetObjectRefTable();this._LoadJsPropNameTable();for(const objectClassData of projectData[3]){const objectClass=C3.ObjectClass.Create(this,this._allObjectClasses.length,objectClassData);this._allObjectClasses.push(objectClass);this._objectClassesByName.set(objectClass.GetName().toLowerCase(),objectClass);this._objectClassesBySid.set(objectClass.GetSID(),
objectClass)}for(const familyData of projectData[4]){const familyType=this._allObjectClasses[familyData[0]];familyType._LoadFamily(familyData)}for(const containerData of projectData[27]){const containerTypes=containerData.map(index=>this._allObjectClasses[index]);this._allContainers.push(C3.New(C3.Container,this,containerTypes))}for(const objectClass of this._allObjectClasses)objectClass._OnAfterCreate();for(const layoutData of projectData[5])this._layoutManager.Create(layoutData);const firstLayoutName=
projectData[1];if(firstLayoutName){const firstLayout=this._layoutManager.GetLayoutByName(firstLayoutName);if(firstLayout)this._layoutManager.SetFirstLayout(firstLayout)}for(const timelineData of projectData[33])this._timelineManager.Create(timelineData);for(const transitionData of projectData[35])this._transitionManager.Create(transitionData);this._InitScriptInterfaces();for(const eventSheetData of projectData[6])this._eventSheetManager.Create(eventSheetData);this._eventSheetManager._PostInit();this._InitGlobalVariableScriptInterface();
C3.clearArray(this._objectReferenceTable);this.FlushPendingInstances();let targetOrientation="any";const orientations=projectData[20];if(orientations===1)targetOrientation="portrait";else if(orientations===2)targetOrientation="landscape";this.PostComponentMessageToDOM("runtime","set-target-orientation",{"targetOrientation":targetOrientation})}GetLoaderStyle(){return this._loaderStyle}IsFBInstantAvailable(){return this._isFBInstantAvailable}IsLoading(){return this._isLoading}AddLoadPromise(promise){this._additionalLoadPromises.push(promise)}SetUsingCreatePromises(e){this._isUsingCreatePromises=
!!e}AddCreatePromise(promise){if(!this._isUsingCreatePromises)return;this._additionalCreatePromises.push(promise)}GetCreatePromises(){return this._additionalCreatePromises}_GetNextFamilyIndex(){return this._familyCount++}GetFamilyCount(){return this._familyCount}_AddEffectList(el){this._allEffectLists.push(el)}_GetAllEffectLists(){return this._allEffectLists}async _InitialiseCanvas(opts){if(!this._canvasManager)return;await this._canvasManager.CreateCanvas(opts);this._canvasManager.InitLoadingScreen(this._loaderStyle)}async _MaybeLoadOpusDecoder(){if(this._assetManager.IsAudioFormatSupported("audio/webm; codecs=opus"))return;
let wasmBlob=null;let wasmBuffer=null;try{if(this.IsiOSCordova()&&this._assetManager.IsFileProtocol())wasmBuffer=await this._assetManager.CordovaFetchLocalFileAsArrayBuffer(this._opusWasmBinaryUrl);else wasmBuffer=await this._assetManager.FetchArrayBuffer(this._opusWasmBinaryUrl)}catch(err){console.info("Failed to fetch Opus decoder WASM; assuming project has no Opus audio.",err);return}if(wasmBuffer)this.AddJobWorkerBuffer(wasmBuffer,"opus-decoder-wasm");else this.AddJobWorkerBlob(wasmBlob,"opus-decoder-wasm");
await this.AddJobWorkerScripts([this._opusWasmScriptUrl])}async _WasmDecodeWebMOpus(arrayBuffer){const result=await this.AddJob("OpusDecode",{"arrayBuffer":arrayBuffer},[arrayBuffer]);return result}async Start(){this._hasStarted=true;this._startTime=Date.now();if(this._usesLoaderLayout){for(const objectClass of this._allObjectClasses)if(!objectClass.IsFamily()&&!objectClass.IsOnLoaderLayout()&&objectClass.IsWorldType())objectClass.OnCreate();this._assetManager.WaitForAllToLoad().then(()=>{this._isLoading=
false;this._OnLoadFinished()})}else this._isLoading=false;this._assetManager.SetInitialLoadFinished();if(this.IsDebug())C3Debugger.RuntimeInit(ife);for(const layout of this._layoutManager.GetAllLayouts())layout._CreateGlobalNonWorlds();const firstLayout=this._layoutManager.GetFirstLayout();await firstLayout._Load(null,this.GetRenderer());await firstLayout._StartRunning(true);this._fpsLastTime=performance.now();if(!this._usesLoaderLayout)this._OnLoadFinished();const state=await this.PostComponentMessageToDOMAsync("runtime",
"before-start-ticking");if(state["isSuspended"])this._suspendCount++;else this.Tick()}_OnLoadFinished(){this.Trigger(C3.Plugins.System.Cnds.OnLoadFinished,null,null);this.PostComponentMessageToDOM("runtime","register-sw")}GetObjectReference(index){index=Math.floor(index);const objRefTable=this._objectReferenceTable;if(index<0||index>=objRefTable.length)throw new Error("invalid object reference");return objRefTable[index]}_LoadJsPropNameTable(){for(const entry of self.C3_JsPropNameTable){const propName=
C3.first(Object.keys(entry));this._jsPropNameTable.push(propName)}}GetJsPropName(index){index=Math.floor(index);const jsPropNameTable=this._jsPropNameTable;if(index<0||index>=jsPropNameTable.length)throw new Error("invalid prop reference");return jsPropNameTable[index]}HasDOM(){return this._hasDom}IsHeadless(){return this._isHeadless}IsInWorker(){return this._isInWorker}GetBaseURL(){return this._baseUrl}GetEventSheetManager(){return this._eventSheetManager}GetEventStack(){return this._eventSheetManager.GetEventStack()}GetCurrentEventStackFrame(){return this._eventSheetManager.GetCurrentEventStackFrame()}GetCurrentEvent(){return this._eventSheetManager.GetCurrentEvent()}GetCurrentCondition(){return this._eventSheetManager.GetCurrentCondition()}IsCurrentConditionFirst(){return this.GetCurrentEventStackFrame().GetConditionIndex()===
0}GetCurrentAction(){return this._eventSheetManager.GetCurrentAction()}GetPluginManager(){return this._pluginManager}GetSystemPlugin(){return this._pluginManager.GetSystemPlugin()}GetObjectClassByIndex(i){i=Math.floor(i);if(i<0||i>=this._allObjectClasses.length)throw new RangeError("invalid index");return this._allObjectClasses[i]}GetObjectClassByName(name){return this._objectClassesByName.get(name.toLowerCase())||null}GetObjectClassBySID(sid){return this._objectClassesBySid.get(sid)||null}GetSingleGlobalObjectClassByCtor(ctor){const plugin=
this._pluginManager.GetPluginByConstructorFunction(ctor);if(!plugin)return null;return plugin.GetSingleGlobalObjectClass()}GetAllObjectClasses(){return this._allObjectClasses}*allInstances(){for(const objectClass of this._allObjectClasses){if(objectClass.IsFamily())continue;yield*objectClass.instances()}}Dispatcher(){return this._dispatcher}UserScriptDispatcher(){return this._userScriptDispatcher}DispatchUserScriptEvent(e){e.runtime=this.GetIRuntime();const shouldTime=this.IsDebug()&&!this._eventSheetManager.IsInEventEngine();
if(shouldTime)C3Debugger.StartMeasuringScriptTime();this._userScriptDispatcher.dispatchEvent(e);if(shouldTime)C3Debugger.AddScriptTime()}DispatchUserScriptEventAsyncWait(e){e.runtime=this.GetIRuntime();return this._userScriptDispatcher.dispatchEventAndWaitAsync(e)}GetOriginalViewportWidth(){return this._originalViewportWidth}GetOriginalViewportHeight(){return this._originalViewportHeight}SetOriginalViewportSize(w,h){if(this._originalViewportWidth===w&&this._originalViewportHeight===h)return;this._originalViewportWidth=
w;this._originalViewportHeight=h;const layoutManager=this.GetLayoutManager();layoutManager.SetAllLayerProjectionChanged();layoutManager.SetAllLayerMVChanged()}GetViewportWidth(){return this._viewportWidth}GetViewportHeight(){return this._viewportHeight}SetViewportSize(w,h){if(this._viewportWidth===w&&this._viewportHeight===h)return;this._viewportWidth=w;this._viewportHeight=h;const layoutManager=this.GetLayoutManager();layoutManager.SetAllLayerProjectionChanged();layoutManager.SetAllLayerMVChanged()}_SetDevicePixelRatio(r){this._devicePixelRatio=
r}GetDevicePixelRatio(){return this._devicePixelRatio}GetParallaxXOrigin(){return this._parallaxXorigin}GetParallaxYOrigin(){return this._parallaxYorigin}GetCanvasManager(){return this._canvasManager}GetDrawWidth(){if(!this._canvasManager)return this._viewportWidth;return this._canvasManager.GetDrawWidth()}GetDrawHeight(){if(!this._canvasManager)return this._viewportHeight;return this._canvasManager.GetDrawHeight()}GetRenderScale(){if(!this._canvasManager)return 1;return this._canvasManager.GetRenderScale()}GetDisplayScale(){if(!this._canvasManager)return 1;
return this._canvasManager.GetDisplayScale()}GetCanvasClientX(){if(!this._canvasManager)return 0;return this._canvasManager.GetCanvasClientX()}GetCanvasClientY(){if(!this._canvasManager)return 0;return this._canvasManager.GetCanvasClientY()}GetCanvasCssWidth(){if(!this._canvasManager)return 0;return this._canvasManager.GetCssWidth()}GetCanvasCssHeight(){if(!this._canvasManager)return 0;return this._canvasManager.GetCssHeight()}GetFullscreenMode(){if(!this._canvasManager)return"off";return this._canvasManager.GetFullscreenMode()}GetAdditionalRenderTarget(opts){if(!this._canvasManager)return null;
return this._canvasManager.GetAdditionalRenderTarget(opts)}ReleaseAdditionalRenderTarget(renderTarget){if(!this._canvasManager)return;this._canvasManager.ReleaseAdditionalRenderTarget(renderTarget)}_SetUsesAnyBackgroundBlending(u){this._usesAnyBackgroundBlending=!!u}UsesAnyBackgroundBlending(){return this._usesAnyBackgroundBlending}GetGPUUtilisation(){if(!this._canvasManager)return NaN;return this._canvasManager.GetGPUUtilisation()}IsLinearSampling(){return this.GetSampling()!=="nearest"}GetFramerateMode(){return this._framerateMode}GetCompositingMode(){return this._compositingMode}GetSampling(){return this._sampling}UsesLoaderLayout(){return this._usesLoaderLayout}GetLoadingLogoAsset(){return this._loadingLogoAsset}ReleaseLoadingLogoAsset(){if(this._loadingLogoAsset){this._loadingLogoAsset.Release();
this._loadingLogoAsset=null}}GetLayoutManager(){return this._layoutManager}GetMainRunningLayout(){return this._layoutManager.GetMainRunningLayout()}GetTimelineManager(){return this._timelineManager}GetTransitionManager(){return this._transitionManager}GetAssetManager(){return this._assetManager}LoadImage(opts){return this._assetManager.LoadImage(opts)}CreateInstance(objectClass,layer,x,y,createHierarchy){return this.CreateInstanceFromData(objectClass,layer,false,x,y,false,createHierarchy,undefined,
createHierarchy)}CreateInstanceFromData(instData_or_objectClass,layer,isStartupInstance,x,y,skipSiblings,createHierarchy,previousInstance,creatingHierarchy){let instData=null;let objectClass=null;if(instData_or_objectClass instanceof C3.ObjectClass){objectClass=instData_or_objectClass;if(objectClass.IsFamily()){const members=objectClass.GetFamilyMembers();const i=Math.floor(this.Random()*members.length);objectClass=members[i]}instData=objectClass.GetDefaultInstanceData()}else{instData=instData_or_objectClass;
objectClass=this.GetObjectClassByIndex(instData[1])}const isWorld=objectClass.GetPlugin().IsWorldType();if(this._isLoading&&isWorld&&!objectClass.IsOnLoaderLayout())return null;const originalLayer=layer;if(!isWorld)layer=null;let uid;if(isStartupInstance&&!skipSiblings&&instData&&!this._instancesByUid.has(instData[2]))uid=instData[2];else uid=this._nextUid++;const worldData=instData?instData[0]:null;const inst=C3.New(C3.Instance,{runtime:this,objectType:objectClass,layer:layer,worldData,instVarData:instData?
instData[3]:null,uid:uid});this._instancesByUid.set(uid,inst);let wi=null;if(isWorld){wi=inst.GetWorldInfo();if(typeof x!=="undefined"&&typeof y!=="undefined"){wi.SetX(x);wi.SetY(y)}objectClass._SetAnyCollisionCellChanged(true)}if(layer){if(!creatingHierarchy)layer._AddInstance(inst,true);if(layer.GetParallaxX()!==1||layer.GetParallaxY()!==1)objectClass._SetAnyInstanceParallaxed(true);layer.GetLayout().MaybeLoadTexturesFor(objectClass)}this._objectCount++;let needsSiblingCreation=true;if(previousInstance){const previousObjectClass=
previousInstance.GetObjectClass();if(previousObjectClass.IsInContainer()&&objectClass.IsInContainer()){const container=objectClass.GetContainer();const previousContainer=previousObjectClass.GetContainer();if(container===previousContainer)needsSiblingCreation=false}}if(objectClass.IsInContainer()&&!isStartupInstance&&!skipSiblings&&needsSiblingCreation){for(const containerType of objectClass.GetContainer().objectTypes()){if(containerType===objectClass)continue;const siblingInst=this.CreateInstanceFromData(containerType,
originalLayer,false,wi?wi.GetX():x,wi?wi.GetY():y,true,false,undefined,creatingHierarchy);inst._AddSibling(siblingInst)}for(const s of inst.siblings()){s._AddSibling(inst);for(const s2 of inst.siblings())if(s!==s2)s._AddSibling(s2)}}if(isWorld&&!isStartupInstance&&!!createHierarchy)this._CreateChildInstancesFromData(inst,worldData,wi,layer,x,y,creatingHierarchy);if(objectClass.IsInContainer()&&!isStartupInstance&&!skipSiblings&&!!createHierarchy)for(const sibling of inst.siblings()){const swi=sibling.GetWorldInfo();
if(!swi)continue;const siblingPlugin=sibling.GetPlugin();const sWorldData=sibling.GetObjectClass().GetDefaultInstanceData()[0];if(siblingPlugin.IsWorldType())this._CreateChildInstancesFromData(sibling,sWorldData,swi,layer,swi.GetX(),swi.GetY(),creatingHierarchy);else this._CreateChildInstancesFromData(sibling,sWorldData,swi,layer,undefined,undefined,creatingHierarchy)}if(!skipSiblings&&!!createHierarchy){if(typeof x==="undefined")x=worldData[0];if(typeof y==="undefined")y=worldData[1];const pwi=wi.GetTopParent();
const newX=x-wi.GetX()+pwi.GetX();const newY=y-wi.GetY()+pwi.GetY();pwi.SetXY(newX,newY)}objectClass._SetIIDsStale();const instPropertyData=instData?C3.cloneArray(instData[5]):null;const behPropertyData=instData?instData[4].map(bp=>C3.cloneArray(bp)):null;const hasTilemap=isWorld&&worldData&&worldData[13];if(hasTilemap)inst._SetHasTilemap();inst._CreateSdkInstance(instPropertyData,behPropertyData);if(hasTilemap){const tilemapData=worldData[13];inst.GetSdkInstance().LoadTilemapData(tilemapData[2],
tilemapData[0],tilemapData[1])}this._instancesPendingCreate.push(inst);this._hasPendingInstances=true;if(this.IsDebug())C3Debugger.InstanceCreated(inst);return inst}_CreateChildInstancesFromData(parentInstance,parentWorldData,parentWorldInfo,layer,x,y,creatingHierarchy){const parentZIndex=parentWorldInfo.GetSceneGraphZIndexExportData();const childrenData=parentWorldInfo.GetSceneGraphChildrenExportData();parentInstance.GetWorldInfo().SetSceneGraphZIndex(parentZIndex);if(!childrenData)return;if(typeof x===
"undefined")x=parentWorldData[0];if(typeof y==="undefined")y=parentWorldData[1];const sceneGraphSiblings=new Set;const parentX=parentWorldData[0];const parentY=parentWorldData[1];for(const childData of childrenData){const childLayoutSID=childData[0];const childLayerIndex=childData[1];const childUID=childData[2];const childFlags=childData[3];const childIsInContainer=!!childData[4];const childZIndex=childData[5];const layout=this._layoutManager.GetLayoutBySID(childLayoutSID);const l=layout.GetLayer(childLayerIndex);
const childInstData=l.GetInitialInstanceData(childUID);const childObjectClass=this.GetObjectClassByIndex(childInstData[1]);const hasSibling=parentInstance.HasSibling(childObjectClass);const siblingProcessed=sceneGraphSiblings.has(childObjectClass);if(hasSibling&&!siblingProcessed&&childIsInContainer){const childInst=parentInstance.GetSibling(childObjectClass);const childX=x+childInstData[0][0]-parentX;const childY=y+childInstData[0][1]-parentY;childInst.GetWorldInfo().SetXY(childX,childY);childInst.GetWorldInfo().SetSceneGraphZIndex(childZIndex);
parentInstance.AddChild(childInst,{transformX:!!(childFlags>>0&1),transformY:!!(childFlags>>1&1),transformWidth:!!(childFlags>>2&1),transformHeight:!!(childFlags>>3&1),transformAngle:!!(childFlags>>4&1),destroyWithParent:!!(childFlags>>5&1),transformZElevation:!!(childFlags>>6&1)});sceneGraphSiblings.add(childObjectClass)}else{const childX=x+childInstData[0][0]-parentX;const childY=y+childInstData[0][1]-parentY;const childInst=this.CreateInstanceFromData(childInstData,layer,false,childX,childY,false,
true,parentInstance,creatingHierarchy);childInst.GetWorldInfo().SetSceneGraphZIndex(childZIndex);parentInstance.AddChild(childInst,{transformX:!!(childFlags>>0&1),transformY:!!(childFlags>>1&1),transformWidth:!!(childFlags>>2&1),transformHeight:!!(childFlags>>3&1),transformAngle:!!(childFlags>>4&1),destroyWithParent:!!(childFlags>>5&1),transformZElevation:!!(childFlags>>6&1)})}}}DestroyInstance(inst){if(this._instancesToReleaseAtEndOfTick.has(inst))return;const objectClass=inst.GetObjectClass();let s=
this._instancesPendingDestroy.get(objectClass);if(s){if(s.has(inst))return;s.add(inst)}else{s=new Set;s.add(inst);this._instancesPendingDestroy.set(objectClass,s)}if(this.IsDebug())C3Debugger.InstanceDestroyed(inst);inst._MarkDestroyed();this._hasPendingInstances=true;if(inst.IsInContainer())for(const s of inst.siblings())this.DestroyInstance(s);for(const c of inst.children())if(c.GetDestroyWithParent())this.DestroyInstance(c);if(!this._layoutManager.IsEndingLayout()&&!this._isLoadingState){const eventSheetManager=
this.GetEventSheetManager();eventSheetManager.BlockFlushingInstances(true);inst._TriggerOnDestroyed();eventSheetManager.BlockFlushingInstances(false)}inst._FireDestroyedScriptEvents(this._layoutManager.IsEndingLayout())}FlushPendingInstances(){if(!this._hasPendingInstances)return;this._isFlushingPendingInstances=true;this._FlushInstancesPendingCreate();this._FlushInstancesPendingDestroy();this._isFlushingPendingInstances=false;this._hasPendingInstances=false;this.UpdateRender()}_FlushInstancesPendingCreate(){for(const inst of this._instancesPendingCreate){const objectType=
inst.GetObjectClass();objectType._AddInstance(inst);for(const family of objectType.GetFamilies()){family._AddInstance(inst);family._SetIIDsStale()}}C3.clearArray(this._instancesPendingCreate)}_FlushInstancesPendingDestroy(){this._dispatcher.SetDelayRemoveEventsEnabled(true);for(const [objectClass,s]of this._instancesPendingDestroy.entries()){this._FlushInstancesPendingDestroyForObjectClass(objectClass,s);s.clear()}this._instancesPendingDestroy.clear();this._dispatcher.SetDelayRemoveEventsEnabled(false)}_FlushInstancesPendingDestroyForObjectClass(objectClass,
s){for(const inst of s){const instanceDestroyEvent=this._eventObjects["instancedestroy"];instanceDestroyEvent.instance=inst;this._dispatcher.dispatchEvent(instanceDestroyEvent);this._instancesByUid.delete(inst.GetUID());const wi=inst.GetWorldInfo();if(wi){wi._RemoveFromCollisionCells();wi._RemoveFromRenderCells();wi._MarkDestroyed()}this._instancesToReleaseAtEndOfTick.add(inst);this._objectCount--}C3.arrayRemoveAllInSet(objectClass.GetInstances(),s);objectClass._SetIIDsStale();this._instancesToReleaseAffectedObjectClasses.add(objectClass);
if(objectClass.GetInstances().length===0)objectClass._SetAnyInstanceParallaxed(false);for(const family of objectClass.GetFamilies()){C3.arrayRemoveAllInSet(family.GetInstances(),s);family._SetIIDsStale();this._instancesToReleaseAffectedObjectClasses.add(family)}if(objectClass.GetPlugin().IsWorldType()){const layers=new Set([...s].map(i=>i.GetWorldInfo().GetLayer()));for(const layer of layers)layer._RemoveAllInstancesInSet(s)}}_GetInstancesPendingCreate(){return this._instancesPendingCreate}*instancesPendingCreateForObjectClass(objectClass){for(const inst of this._GetInstancesPendingCreate())if(objectClass.IsFamily()){if(inst.GetObjectClass().BelongsToFamily(objectClass))yield inst}else if(inst.GetObjectClass()===
objectClass)yield inst}_GetNewUID(){return this._nextUid++}_MapInstanceByUID(uid,inst){this._instancesByUid.set(uid,inst)}_OnWebGLContextLost(){this._dispatcher.dispatchEvent(C3.New(C3.Event,"webglcontextlost"));this.SetSuspended(true);for(const objectClass of this._allObjectClasses)if(!objectClass.IsFamily()&&objectClass.HasLoadedTextures())objectClass.ReleaseTextures();const runningLayout=this.GetMainRunningLayout();if(runningLayout)runningLayout._OnWebGLContextLost();C3.ImageInfo.OnWebGLContextLost();
C3.ImageAsset.OnWebGLContextLost()}async _OnWebGLContextRestored(){await this.GetMainRunningLayout()._Load(null,this.GetWebGLRenderer());this._dispatcher.dispatchEvent(C3.New(C3.Event,"webglcontextrestored"));this.SetSuspended(false);this.UpdateRender()}_OnVisibilityChange(e){this.SetSuspended(e["hidden"])}_OnWindowBlur(e){if(!this.IsPreview()||!this._pauseOnBlur||C3.Platform.IsMobile)return;if(!e.data["parentHasFocus"]){this.SetSuspended(true);this._isPausedOnBlur=true}}_OnWindowFocus(){if(!this._isPausedOnBlur)return;
this.SetSuspended(false);this._isPausedOnBlur=false}_RequestAnimationFrame(){const tickCallbacks=this._tickCallbacks;if(this._framerateMode==="vsync"){if(this._rafId===-1)this._rafId=self.requestAnimationFrame(tickCallbacks.normal)}else if(this._framerateMode==="unlimited-tick"){if(this._ruafId===-1)this._ruafId=C3.RequestUnlimitedAnimationFrame(tickCallbacks.tickOnly);if(this._rafId===-1)this._rafId=self.requestAnimationFrame(tickCallbacks.renderOnly)}else if(this._ruafId===-1)this._ruafId=C3.RequestUnlimitedAnimationFrame(tickCallbacks.normal)}_CancelAnimationFrame(){if(this._rafId!==
-1){self.cancelAnimationFrame(this._rafId);this._rafId=-1}if(this._ruafId!==-1){C3.CancelUnlimitedAnimationFrame(this._ruafId);this._ruafId=-1}}IsSuspended(){return this._suspendCount>0}SetSuspended(s){const wasSuspended=this.IsSuspended();this._suspendCount+=s?1:-1;if(this._suspendCount<0)this._suspendCount=0;const isSuspended=this.IsSuspended();if(!wasSuspended&&isSuspended){console.log("[Construct 3] Suspending");this._CancelAnimationFrame();this._dispatcher.dispatchEvent(C3.New(C3.Event,"suspend"));
this.Trigger(C3.Plugins.System.Cnds.OnSuspend,null,null)}else if(wasSuspended&&!isSuspended){console.log("[Construct 3] Resuming");const now=performance.now();this._lastTickTime=now;this._fpsLastTime=now;this._fpsFrameCount=0;this._fps=0;this._mainThreadTime=0;this._mainThreadTimeCounter=0;this._dispatcher.dispatchEvent(C3.New(C3.Event,"resume"));this.Trigger(C3.Plugins.System.Cnds.OnResume,null,null);if(!this.HitBreakpoint())this.Tick(now)}}_AddBehInstToTick(behSdkInst){this._behInstsToTick.Add(behSdkInst)}_AddBehInstToPostTick(behSdkInst){this._behInstsToPostTick.Add(behSdkInst)}_AddBehInstToTick2(behSdkInst){this._behInstsToTick2.Add(behSdkInst)}_RemoveBehInstToTick(behSdkInst){this._behInstsToTick.Remove(behSdkInst)}_RemoveBehInstToPostTick(behSdkInst){this._behInstsToPostTick.Remove(behSdkInst)}_RemoveBehInstToTick2(behSdkInst){this._behInstsToTick2.Remove(behSdkInst)}_BehaviorTick(){this._behInstsToTick.SetQueueingEnabled(true);
for(const bi of this._behInstsToTick)bi.Tick();this._behInstsToTick.SetQueueingEnabled(false)}_BehaviorPostTick(){this._behInstsToPostTick.SetQueueingEnabled(true);for(const bi of this._behInstsToPostTick)bi.PostTick();this._behInstsToPostTick.SetQueueingEnabled(false)}_BehaviorTick2(){this._behInstsToTick2.SetQueueingEnabled(true);for(const bi of this._behInstsToTick2)bi.Tick2();this._behInstsToTick2.SetQueueingEnabled(false)}*_DebugBehaviorTick(){this._behInstsToTick.SetQueueingEnabled(true);for(const bi of this._behInstsToTick){const ret=
bi.Tick();if(C3.IsIterator(ret))yield*ret}this._behInstsToTick.SetQueueingEnabled(false)}*_DebugBehaviorPostTick(){this._behInstsToPostTick.SetQueueingEnabled(true);for(const bi of this._behInstsToPostTick){const ret=bi.PostTick();if(C3.IsIterator(ret))yield*ret}this._behInstsToPostTick.SetQueueingEnabled(false)}*_DebugBehaviorTick2(){this._behInstsToTick2.SetQueueingEnabled(true);for(const bi of this._behInstsToTick2){const ret=bi.Tick2();if(C3.IsIterator(ret))yield*ret}this._behInstsToTick2.SetQueueingEnabled(false)}async Tick(timestamp,
isDebugStep,mode){this._hasStartedTicking=true;const isBackgroundWake=mode==="background-wake";const shouldRender=mode!=="background-wake"&&mode!=="skip-render";if(!this._hasStarted||this.IsSuspended()&&!isDebugStep&&!isBackgroundWake)return;const startTime=performance.now();this._isInTick=true;this._MeasureDt(timestamp||0);const beforePreTickRet=this.Step_BeforePreTick();if(this.IsDebugging())await beforePreTickRet;const pretickRet=this._dispatcher.dispatchEventAndWait_AsyncOptional(this._eventObjects["pretick"]);
if(pretickRet instanceof Promise)await pretickRet;const afterPreTickRet=this.Step_AfterPreTick();if(this.IsDebugging())await afterPreTickRet;if(this._NeedsHandleSaveOrLoad())await this._HandleSaveOrLoad();if(this.GetLayoutManager().IsPendingChangeMainLayout())await this._MaybeChangeLayout();const runEventsRet=this.Step_RunEventsEtc();if(this.IsDebugging())await runEventsRet;if(shouldRender)this.Render();if(!this.IsSuspended()&&!isBackgroundWake)this._RequestAnimationFrame();this._tickCount++;this._tickCountNoSave++;
this._execCount++;this._isInTick=false;this._mainThreadTimeCounter+=performance.now()-startTime}async Step_BeforePreTick(){const eventSheetManager=this._eventSheetManager;const isDebug=this.IsDebug();this.FlushPendingInstances();eventSheetManager.BlockFlushingInstances(true);this.PushCurrentLayout(this.GetMainRunningLayout());if(isDebug)C3Debugger.StartMeasuringTime();if(this.IsDebugging())await eventSheetManager.DebugRunScheduledWaits();else eventSheetManager.RunScheduledWaits();if(isDebug)C3Debugger.AddEventsTime();
this.PopCurrentLayout();eventSheetManager.BlockFlushingInstances(false);this.FlushPendingInstances();eventSheetManager.BlockFlushingInstances(true)}async Step_AfterPreTick(){const isDebug=this.IsDebug();const isDebugging=this.IsDebugging();const dispatcher=this._dispatcher;const eventObjects=this._eventObjects;const userScriptEventObjects=this._userScriptEventObjects;if(isDebug)C3Debugger.StartMeasuringTime();if(isDebugging)await this.DebugIterateAndBreak(this._DebugBehaviorTick());else this._BehaviorTick();
if(isDebugging)await this.DebugIterateAndBreak(this._DebugBehaviorPostTick());else this._BehaviorPostTick();if(isDebug)C3Debugger.AddBehaviorTickTime();if(isDebug)C3Debugger.StartMeasuringTime();if(isDebugging)await this.DebugFireGeneratorEventAndBreak(eventObjects["tick"]);else dispatcher.dispatchEvent(eventObjects["tick"]);if(isDebug)C3Debugger.AddPluginTickTime();this._eventSheetManager.BlockFlushingInstances(false);this.DispatchUserScriptEvent(userScriptEventObjects["tick"])}async Step_RunEventsEtc(){const eventSheetManager=
this._eventSheetManager;const dispatcher=this._dispatcher;const eventObjects=this._eventObjects;const isDebug=this.IsDebug();const isDebugging=this.IsDebugging();if(isDebug)C3Debugger.StartMeasuringTime();if(isDebugging)await eventSheetManager.DebugRunEvents(this._layoutManager);else eventSheetManager.RunEvents(this._layoutManager);if(isDebug)C3Debugger.AddEventsTime();this._collisionEngine.ClearRegisteredCollisions();this._ReleaseInstancesAtEndOfTick();this._isLayoutFirstTick=false;eventSheetManager.BlockFlushingInstances(true);
if(isDebug)C3Debugger.StartMeasuringTime();if(isDebugging)await this.DebugIterateAndBreak(this._DebugBehaviorTick2());else this._BehaviorTick2();if(isDebug)C3Debugger.AddBehaviorTickTime();if(isDebug)C3Debugger.StartMeasuringTime();if(isDebugging)await this.DebugFireGeneratorEventAndBreak(eventObjects["tick2"]);else dispatcher.dispatchEvent(eventObjects["tick2"]);if(isDebug)C3Debugger.AddPluginTickTime();eventSheetManager.BlockFlushingInstances(false);if(isDebugging)await eventSheetManager.RunQueuedDebugTriggersAsync()}_ReleaseInstancesAtEndOfTick(){if(this._instancesToReleaseAtEndOfTick.size===
0)return;const dispatcher=this._dispatcher;dispatcher.SetDelayRemoveEventsEnabled(true);for(const objectClass of this._instancesToReleaseAffectedObjectClasses)objectClass.GetSolStack().RemoveInstances(this._instancesToReleaseAtEndOfTick);this._instancesToReleaseAffectedObjectClasses.clear();this._eventSheetManager.RemoveInstancesFromScheduledWaits(this._instancesToReleaseAtEndOfTick);for(const inst of this._instancesToReleaseAtEndOfTick)inst.Release();this._instancesToReleaseAtEndOfTick.clear();dispatcher.SetDelayRemoveEventsEnabled(false)}async _MaybeChangeLayout(){const layoutManager=
this.GetLayoutManager();let i=0;while(layoutManager.IsPendingChangeMainLayout()&&i++<10)await this._DoChangeLayout(layoutManager.GetPendingChangeMainLayout())}_MeasureDt(timestamp){let dtRaw=0;if(this._lastTickTime!==0){const msDiff=Math.max(timestamp-this._lastTickTime,0);dtRaw=msDiff/1E3;if(dtRaw>.5)dtRaw=0;const maxDt1=1/this._minimumFramerate;this._dt1=Math.min(dtRaw,maxDt1)}this._lastTickTime=timestamp;this._dt=this._dt1*this._timeScale;this._gameTime.Add(this._dt);this._gameTimeRaw.Add(dtRaw*
this._timeScale);this._wallTime.Add(this._dt1);if(this._canvasManager)this._canvasManager._UpdateTick();if(timestamp-this._fpsLastTime>=1E3){this._fpsLastTime+=1E3;if(timestamp-this._fpsLastTime>=1E3)this._fpsLastTime=timestamp;this._fps=this._fpsFrameCount;this._fpsFrameCount=0;this._mainThreadTime=Math.min(this._mainThreadTimeCounter/1E3,1);this._mainThreadTimeCounter=0;if(this._canvasManager)this._canvasManager._Update1sFrameRange();this._collisionEngine._Update1sStats();if(this.IsDebug())C3Debugger.Update1sPerfStats()}this._fpsFrameCount++}async _DoChangeLayout(changeToLayout){const dispatcher=
this._dispatcher;const layoutManager=this.GetLayoutManager();const prevLayout=layoutManager.GetMainRunningLayout();await prevLayout._StopRunning();prevLayout._Unload(changeToLayout,this.GetRenderer());if(prevLayout===changeToLayout)this._eventSheetManager.ClearAllScheduledWaits();this._collisionEngine.ClearRegisteredCollisions();this._ReleaseInstancesAtEndOfTick();dispatcher.dispatchEvent(this._eventObjects["beforelayoutchange"]);C3.Asyncify.SetHighThroughputMode(true);await changeToLayout._Load(prevLayout,
this.GetRenderer());C3.Asyncify.SetHighThroughputMode(false);await changeToLayout._StartRunning(false);dispatcher.dispatchEvent(this._eventObjects["layoutchange"]);this.UpdateRender();this._isLayoutFirstTick=true;this.FlushPendingInstances()}UpdateRender(){this._needRender=true}GetWebGLRenderer(){if(!this._canvasManager)return null;return this._canvasManager.GetWebGLRenderer()}GetWebGPURenderer(){if(!this._canvasManager)return null;return this._canvasManager.GetWebGPURenderer()}GetRenderer(){if(!this._canvasManager)return null;
return this._canvasManager.GetRenderer()}Render(){const canvasManager=this._canvasManager;if(!canvasManager||canvasManager.IsRendererContextLost())return;const renderer=this.GetRenderer();const supportsGPUProfiling=renderer.SupportsGPUProfiling();const isWebGLProfiling=supportsGPUProfiling&&renderer.IsWebGL();const isWebGPUProfiling=supportsGPUProfiling&&renderer.IsWebGPU();if(isWebGLProfiling)renderer.CheckForQueryResults();if(!this._needRender){renderer.IncrementFrameNumber();return}const layout=
this._layoutManager.GetMainRunningLayout();renderer.Start();const isDebug=this.IsDebug();if(isDebug)C3Debugger.StartMeasuringTime();this._needRender=false;let webglFrameQuery=null;if(isWebGLProfiling){webglFrameQuery=canvasManager.GetGPUFrameTimingsBuffer().AddTimeElapsedQuery();renderer.StartQuery(webglFrameQuery)}let webgpuFrameTimings=null;if(isWebGPUProfiling){webgpuFrameTimings=renderer.StartFrameTiming((1+layout.GetLayerCount())*2);renderer.WriteTimestamp(0)}if(this.Uses3DFeatures()&&canvasManager.GetCurrentFullscreenScalingQuality()===
"low")renderer.SetFixedSizeDepthBuffer(canvasManager.GetDrawWidth(),canvasManager.GetDrawHeight());else renderer.SetAutoSizeDepthBuffer();this._Render(this.GetRenderer(),layout);if(webglFrameQuery)renderer.EndQuery(webglFrameQuery);if(isWebGPUProfiling){renderer.WriteTimestamp(1);this._canvasManager._AddWebGPUFrameTiming(webgpuFrameTimings)}renderer.Finish();if(isDebug){C3Debugger.AddDrawCallsTime();C3Debugger.UpdateInspectHighlight()}if(canvasManager)canvasManager._MaybeTakeSnapshot()}_Render(renderer,
layout){renderer.SetTextureFillMode();renderer.SetAlphaBlend();renderer.SetColorRgba(1,1,1,1);renderer.SetRenderTarget(null);renderer.SetTexture(null);renderer.SetDepthEnabled(this.Uses3DFeatures());layout.Draw(renderer)}Trigger(method,inst,behaviorType){if(!this._hasStarted)return false;const isTopLevel=!this._isInTick&&!this._eventSheetManager.IsInTrigger();let startTime=0;if(isTopLevel)startTime=performance.now();const isDebug=this.IsDebug();if(isDebug)this.SetDebuggingEnabled(false);const ret=
this._eventSheetManager._Trigger(this._layoutManager,method,inst,behaviorType);if(isTopLevel){const triggerTime=performance.now()-startTime;this._mainThreadTimeCounter+=triggerTime;if(isDebug)C3Debugger.AddTriggersTime(triggerTime)}if(isDebug)this.SetDebuggingEnabled(true);return ret}DebugTrigger(method,inst,behaviorType){if(!this.IsDebug())return this.Trigger(method,inst,behaviorType);if(this.HitBreakpoint())throw new Error("called DebugTrigger() while stopped on breakpoint");if(!this._isInTick&&
!this._eventSheetManager.IsInTrigger())throw new Error("called DebugTrigger() outside of event code - use TriggerAsync() instead");return this._eventSheetManager._DebugTrigger(this._layoutManager,method,inst,behaviorType)}async TriggerAsync(method,inst,behaviorType){if(!this.IsDebugging())return this.Trigger(method,inst,behaviorType);if(!this._hasStarted)return false;if(this.HitBreakpoint())return this._eventSheetManager.QueueDebugTrigger(method,inst,behaviorType);if(!this.GetMainRunningLayout())return this._eventSheetManager.QueueTrigger(method,
inst,behaviorType);const startTime=performance.now();const iter=this._eventSheetManager._DebugTrigger(this._layoutManager,method,inst,behaviorType);let result=iter.next();while(!result.done){await this.DebugBreak(result.value);result=iter.next()}if(!this.IsSuspended()&&!this._eventSheetManager.IsInTrigger()){await this._eventSheetManager.RunQueuedDebugTriggersAsync();if(this._hasStartedTicking&&!this._isInTick)this._RequestAnimationFrame()}this._mainThreadTimeCounter+=performance.now()-startTime;
return result.value}FastTrigger(method,inst,value){const isDebug=this.IsDebug();if(isDebug)this.SetDebuggingEnabled(false);const ret=this._eventSheetManager._FastTrigger(this._layoutManager,method,inst,value);if(isDebug)this.SetDebuggingEnabled(true);return ret}DebugFastTrigger(method,inst,value){return this._eventSheetManager._DebugFastTrigger(this._layoutManager,method,inst,value)}ScheduleTriggers(f){return this._scheduleTriggersThrottle.Add(f)}PushCurrentLayout(layout){this._currentLayoutStack.push(layout)}PopCurrentLayout(){if(!this._currentLayoutStack.length)throw new Error("layout stack empty");
this._currentLayoutStack.pop()}GetCurrentLayout(){if(!this._currentLayoutStack.length)return this.GetMainRunningLayout();return this._currentLayoutStack.at(-1)}GetDt(inst){if(!inst||inst.GetTimeScale()===-1)return this._dt;return this._dt1*inst.GetTimeScale()}_GetDtFast(){return this._dt}GetDt1(){return this._dt1}GetTimeScale(){return this._timeScale}SetTimeScale(ts){if(isNaN(ts)||ts<0)ts=0;this._timeScale=ts}SetMinimumFramerate(fps){this._minimumFramerate=C3.clamp(fps,1,120)}GetMinimumFramerate(){return this._minimumFramerate}GetFPS(){return this._fps}GetMainThreadTime(){return this._mainThreadTime}GetStartTime(){return this._startTime}GetGameTime(){return this._gameTime.Get()}GetGameTimeRaw(){return this._gameTimeRaw.Get()}GetWallTime(){return this._wallTime.Get()}GetTickCount(){return this._tickCount}GetTickCountNoSave(){return this._tickCountNoSave}IncrementExecCount(){++this._execCount}GetExecCount(){return this._execCount}GetObjectCount(){return this._objectCount}GetProjectName(){return this._projectName}GetProjectVersion(){return this._projectVersion}GetProjectUniqueId(){return this._projectUniqueId}GetAppId(){return this._appId}GetInstanceByUID(uid){if(this._isLoadingState)throw new Error("cannot call while loading state - wait until afterload event");
return this._instancesByUid.get(uid)||null}_RefreshUidMap(){this._instancesByUid.clear();for(const objectClass of this._allObjectClasses){if(objectClass.IsFamily())continue;for(const inst of objectClass.GetInstances())this._instancesByUid.set(inst.GetUID(),inst)}}IsPreview(){return this._exportType==="preview"}IsDebug(){return this._isDebug}GetExportType(){return this._exportType}IsCordova(){return this._exportType==="cordova"}IsAndroidWebView(){return C3.Platform.OS==="Android"&&(this._exportType===
"cordova"||this._exportType==="playable-ad"||this._exportType==="instant-games")}IsiOSCordova(){return this._isiOSCordova}IsiOSWebView(){return this._isiOSWebView}GetCollisionEngine(){return this._collisionEngine}GetSolidBehavior(){return this._pluginManager.GetSolidBehavior()}GetJumpthruBehavior(){return this._pluginManager.GetJumpthruBehavior()}Uses3DFeatures(){return this._uses3dFeatures}GetZScaleFactor(){const renderer=this.GetRenderer();const realZunits=this.GetViewportHeight()/2/Math.tan(renderer.GetFovY()/
2);return realZunits/renderer.GetDefaultCameraZ()}IsLayoutFirstTick(){return this._isLayoutFirstTick}SetPixelRoundingEnabled(e){e=!!e;if(this._isPixelRoundingEnabled===e)return;this._isPixelRoundingEnabled=e;this.GetLayoutManager().SetAllLayerMVChanged();this.UpdateRender()}IsPixelRoundingEnabled(){return this._isPixelRoundingEnabled}SaveToSlot(slotName){this._saveToSlotName=slotName}LoadFromSlot(slotName){this._loadFromSlotName=slotName}LoadFromJsonString(str){this._loadFromJson=str}GetLastSaveJsonString(){return this._lastSaveJson}_NeedsHandleSaveOrLoad(){return!!(this._saveToSlotName||
this._loadFromSlotName||this._loadFromJson!==null)}async _HandleSaveOrLoad(){if(this._saveToSlotName){this.FlushPendingInstances();await this._DoSaveToSlot(this._saveToSlotName);this._ClearSaveOrLoad()}if(this._loadFromSlotName){await this._DoLoadFromSlot(this._loadFromSlotName);this._ClearSaveOrLoad();if(this.IsDebug())C3Debugger.StepIfPausedInDebugger()}if(this._loadFromJson!==null){this.FlushPendingInstances();try{await this._DoLoadFromJsonString(this._loadFromJson);this._lastSaveJson=this._loadFromJson;
await this.TriggerAsync(C3.Plugins.System.Cnds.OnLoadComplete,null);this._lastSaveJson=""}catch(err){console.error("[Construct 3] Failed to load state from JSON string: ",err);await this.TriggerAsync(C3.Plugins.System.Cnds.OnLoadFailed,null)}this._ClearSaveOrLoad()}}_ClearSaveOrLoad(){this._saveToSlotName="";this._loadFromSlotName="";this._loadFromJson=null}_GetProjectStorage(){if(!this._projectStorage)this._projectStorage=localforage.createInstance({name:"c3-localstorage-"+this.GetProjectUniqueId(),
description:this.GetProjectName()});return this._projectStorage}_GetSavegamesStorage(){if(!this._savegamesStorage)this._savegamesStorage=localforage.createInstance({name:"c3-savegames-"+this.GetProjectUniqueId(),description:this.GetProjectName()});return this._savegamesStorage}async _DoSaveToSlot(slotName){const saveJson=await this._SaveToJsonString();try{await this._GetSavegamesStorage().setItem(slotName,saveJson);console.log("[Construct 3] Saved state to storage ("+saveJson.length+" chars)");this._lastSaveJson=
saveJson;await this.TriggerAsync(C3.Plugins.System.Cnds.OnSaveComplete,null);this._lastSaveJson=""}catch(err){console.error("[Construct 3] Failed to save state to storage: ",err);await this.TriggerAsync(C3.Plugins.System.Cnds.OnSaveFailed,null)}}async _DoLoadFromSlot(slotName){try{const loadJson=await this._GetSavegamesStorage().getItem(slotName);if(!loadJson)throw new Error("empty slot");console.log("[Construct 3] Loaded state from storage ("+loadJson.length+" chars)");await this._DoLoadFromJsonString(loadJson);
this._lastSaveJson=loadJson;await this.TriggerAsync(C3.Plugins.System.Cnds.OnLoadComplete,null);this._lastSaveJson=""}catch(err){console.error("[Construct 3] Failed to load state from storage: ",err);await this.TriggerAsync(C3.Plugins.System.Cnds.OnLoadFailed,null)}}async _SaveToJsonString(){const o={"c3save":true,"version":1,"rt":{"time":this.GetGameTime(),"timeRaw":this.GetGameTimeRaw(),"walltime":this.GetWallTime(),"timescale":this.GetTimeScale(),"tickcount":this.GetTickCount(),"execcount":this.GetExecCount(),
"next_uid":this._nextUid,"running_layout":this.GetMainRunningLayout().GetSID(),"start_time_offset":Date.now()-this._startTime},"types":{},"layouts":{},"events":this._eventSheetManager._SaveToJson(),"timelines":this._timelineManager._SaveToJson(),"user_script_data":null};for(const objectClass of this._allObjectClasses){if(objectClass.IsFamily()||objectClass.HasNoSaveBehavior())continue;o["types"][objectClass.GetSID().toString()]=objectClass._SaveToJson()}for(const layout of this._layoutManager.GetAllLayouts())o["layouts"][layout.GetSID().toString()]=
layout._SaveToJson();const saveEvent=this._CreateUserScriptEvent("save");saveEvent.saveData=null;await this.DispatchUserScriptEventAsyncWait(saveEvent);o["user_script_data"]=saveEvent.saveData;return JSON.stringify(o)}IsLoadingState(){return this._isLoadingState}async _DoLoadFromJsonString(jsonStr){const layoutManager=this.GetLayoutManager();const o=JSON.parse(jsonStr);if(o["c2save"])throw new Error("C2 saves are incompatible with C3 runtime");if(!o["c3save"])throw new Error("not valid C3 save data");
if(o["version"]>1)throw new Error("C3 save data from future version");this._dispatcher.dispatchEvent(C3.New(C3.Event,"beforeload"));for(const inst of this.allInstances())inst._OnBeforeLoad();this._isLoadingState=true;const rt=o["rt"];this._gameTime.Set(rt["time"]);if(rt.hasOwnProperty("timeRaw"))this._gameTimeRaw.Set(rt["timeRaw"]);this._wallTime.Set(rt["walltime"]);this._timeScale=rt["timescale"];this._tickCount=rt["tickcount"];this._execCount=rt["execcount"];this._startTime=Date.now()-rt["start_time_offset"];
const layoutSid=rt["running_layout"];if(layoutSid!==this.GetMainRunningLayout().GetSID()){const changeToLayout=layoutManager.GetLayoutBySID(layoutSid);if(changeToLayout)await this._DoChangeLayout(changeToLayout);else return}for(const [sidStr,data]of Object.entries(o["types"])){const sid=parseInt(sidStr,10);const objectClass=this.GetObjectClassBySID(sid);if(!objectClass||objectClass.IsFamily()||objectClass.HasNoSaveBehavior())continue;objectClass._LoadFromJson(data)}this.FlushPendingInstances();this._RefreshUidMap();
this._isLoadingState=false;this._nextUid=rt["next_uid"];for(const [sidStr,data]of Object.entries(o["layouts"])){const sid=parseInt(sidStr,10);const layout=layoutManager.GetLayoutBySID(sid);if(!layout)continue;layout._LoadFromJson(data)}this._eventSheetManager._LoadFromJson(o["events"]);for(const objectClass of this._allObjectClasses){if(objectClass.IsFamily()||!objectClass.IsInContainer())continue;for(const inst of objectClass.GetInstances()){const iid=inst.GetIID();for(const otherType of objectClass.GetContainer().objectTypes()){if(otherType===
objectClass)continue;const otherInstances=otherType.GetInstances();if(iid<0||iid>=otherInstances.length)throw new Error("missing sibling instance");inst._AddSibling(otherInstances[iid])}}}this._timelineManager._LoadFromJson(o["timelines"]);layoutManager.SetAllLayerProjectionChanged();layoutManager.SetAllLayerMVChanged();this._dispatcher.dispatchEvent(C3.New(C3.Event,"afterload"));const loadEvent=this._CreateUserScriptEvent("load");loadEvent.saveData=o["user_script_data"];await this.DispatchUserScriptEventAsyncWait(loadEvent);
this.UpdateRender()}async AddJobWorkerScripts(scripts){const blobs=await Promise.all(scripts.map(url=>this._assetManager.FetchBlob(url)));const blobUrls=blobs.map(b=>URL.createObjectURL(b));this._jobScheduler.ImportScriptsToJobWorkers(blobUrls)}AddJobWorkerBlob(blob,id){this._jobScheduler.SendBlobToJobWorkers(blob,id)}AddJobWorkerBuffer(buffer,id){this._jobScheduler.SendBufferToJobWorkers(buffer,id)}AddJob(type,params,transferables){return this._jobScheduler.AddJob(type,params,transferables)}BroadcastJob(type,
params,transferables){return this._jobScheduler.BroadcastJob(type,params,transferables)}InvokeDownload(url,filename){this.PostComponentMessageToDOM("runtime","invoke-download",{"url":url,"filename":filename})}async RasterSvgImage(blob,imageWidth,imageHeight,surfaceWidth,surfaceHeight,imageBitmapOpts){surfaceWidth=surfaceWidth||imageWidth;surfaceHeight=surfaceHeight||imageHeight;if(this.IsInWorker()){const result=await this.PostComponentMessageToDOMAsync("runtime","raster-svg-image",{"blob":blob,"imageWidth":imageWidth,
"imageHeight":imageHeight,"surfaceWidth":surfaceWidth,"surfaceHeight":surfaceHeight,"imageBitmapOpts":imageBitmapOpts});return result["imageBitmap"]}else{const canvas=await self["C3_RasterSvgImageBlob"](blob,imageWidth,imageHeight,surfaceWidth,surfaceHeight);if(imageBitmapOpts)return await self.createImageBitmap(canvas,imageBitmapOpts);else return canvas}}async GetSvgImageSize(blob){if(this.IsInWorker())return await this.PostComponentMessageToDOMAsync("runtime","get-svg-image-size",{"blob":blob});
else return await self["C3_GetSvgImageSize"](blob)}RequestDeviceOrientationEvent(){if(this._didRequestDeviceOrientationEvent)return;this._didRequestDeviceOrientationEvent=true;this.PostComponentMessageToDOM("runtime","enable-device-orientation")}RequestDeviceMotionEvent(){if(this._didRequestDeviceMotionEvent)return;this._didRequestDeviceMotionEvent=true;this.PostComponentMessageToDOM("runtime","enable-device-motion")}Random(){return this._randomNumberCallback()}SetRandomNumberGeneratorCallback(f){this._randomNumberCallback=
f}_GetRemotePreviewStatusInfo(){const webglRenderer=this.GetWebGLRenderer();return{"fps":this.GetFPS(),"cpu":this.GetMainThreadTime(),"gpu":this.GetGPUUtilisation(),"layout":this.GetMainRunningLayout()?this.GetMainRunningLayout().GetName():"","renderer":webglRenderer?webglRenderer.GetUnmaskedRenderer():"<unavailable>"}}HitBreakpoint(){if(!this.IsDebug())return false;return C3Debugger.HitBreakpoint()}DebugBreak(eventObject){if(!this.IsDebugging())return Promise.resolve();return C3Debugger.DebugBreak(eventObject)}DebugBreakNext(){if(!this.IsDebugging())return false;
return C3Debugger.BreakNext()}SetDebugBreakpointsEnabled(e){this._breakpointsEnabled=!!e;this._UpdateDebuggingFlag()}AreDebugBreakpointsEnabled(){return this._breakpointsEnabled}IsDebugging(){return this._isDebugging}SetDebuggingEnabled(d){if(d)this._debuggingDisabled--;else this._debuggingDisabled++;this._UpdateDebuggingFlag()}_UpdateDebuggingFlag(){this._isDebugging=this.IsDebug()&&this._breakpointsEnabled&&this._debuggingDisabled===0}IsCPUProfiling(){return this.IsDebug()&&C3Debugger.IsCPUProfiling()}IsGPUProfiling(){return this.IsDebug()&&
this.GetRenderer().SupportsGPUProfiling()&&C3Debugger.IsGPUProfiling()}async DebugIterateAndBreak(iter){if(!iter)return;for(const breakEventObject of iter)await this.DebugBreak(breakEventObject)}DebugFireGeneratorEventAndBreak(event){return this.DebugIterateAndBreak(this._dispatcher.dispatchGeneratorEvent(event))}_InvokeFunctionFromJS(e){return this._eventSheetManager._InvokeFunctionFromJS(e["name"],e["params"])}GetIRuntime(){return this._iRuntime}_CreateUserScriptEvent(name){const e=C3.New(C3.Event,
name,false);e.runtime=this._iRuntime;return e}_InitScriptInterfaces(){const objectDescriptors={};for(const objectClass of this._allObjectClasses)objectDescriptors[objectClass.GetJsPropName()]={value:objectClass.GetIObjectClass(),enumerable:true,writable:false};const objects=Object.create(Object.prototype,objectDescriptors);this._iRuntime=new self.IRuntime(this,objects);this._userScriptEventObjects={"tick":this._CreateUserScriptEvent("tick")}}_InitGlobalVariableScriptInterface(){const globalVarDescriptors=
{};for(const globalVar of this.GetEventSheetManager().GetAllGlobalVariables())globalVarDescriptors[globalVar.GetJsPropName()]=globalVar._GetScriptInterfaceDescriptor();this._iRuntime._InitGlobalVars(globalVarDescriptors)}_GetCommonScriptInterfaces(){return this._commonScriptInterfaces}_MapScriptInterface(interface_,class_){this._interfaceMap.set(interface_,class_)}_UnwrapScriptInterface(interface_){return this._interfaceMap.get(interface_)}_UnwrapIObjectClass(iObjectClass){if(!(iObjectClass instanceof
self.IObjectClass))throw new TypeError("expected IObjectClass");const objectClass=this._UnwrapScriptInterface(iObjectClass);if(!objectClass||!(objectClass instanceof C3.ObjectClass))throw new Error("invalid IObjectClass");return objectClass}_UnwrapIWorldInstance(iinst){if(!(iinst instanceof self.IWorldInstance))throw new TypeError("expected IWorldInstance");const inst=this._UnwrapScriptInterface(iinst);if(!inst||!(inst instanceof C3.Instance))throw new Error("invalid IInstance");return inst}};
self["C3_CreateRuntime"]=C3.Runtime.Create;self["C3_InitRuntime"]=(runtime,opts)=>runtime.Init(opts);

}

// workers/jobSchedulerRuntime.js
{
'use strict';const C3=self.C3;
C3.JobSchedulerRuntime=class JobSchedulerRuntime extends C3.DefendedBase{constructor(runtime,data){super();this._runtime=runtime;this._jobPromises=new Map;this._nextJobId=0;this._inputPort=data["inputPort"];data["outputPort"].onmessage=e=>this._OnJobWorkerMessage(e);this._maxNumWorkers=data["maxNumWorkers"];this._jobWorkerCount=1;this._isCreatingWorker=false;this._hadErrorCreatingWorker=false}async Init(){}ImportScriptsToJobWorkers(scripts){this._inputPort.postMessage({"type":"_import_scripts","scripts":scripts})}SendBlobToJobWorkers(blob,
id){this._inputPort.postMessage({"type":"_send_blob","blob":blob,"id":id})}SendBufferToJobWorkers(buffer,id){this._inputPort.postMessage({"type":"_send_buffer","buffer":buffer,"id":id},[buffer])}AddJob(type,params,transferables,progressHandler,abortDisposable){if(!transferables)transferables=[];const jobId=this._nextJobId++;const job={"type":type,"isBroadcast":false,"jobId":jobId,"params":params,"transferables":transferables};const promise=new Promise((resolve,reject)=>{this._jobPromises.set(jobId,
{resolve:resolve,progress:progressHandler,reject:reject,cancelled:false})});if(abortDisposable)abortDisposable.SetAction(()=>this._CancelJob(jobId));this._inputPort.postMessage(job,transferables);this._MaybeCreateExtraWorker();return promise}BroadcastJob(type,params,transferables){if(!transferables)transferables=[];const jobId=this._nextJobId++;const job={"type":type,"isBroadcast":true,"jobId":jobId,"params":params,"transferables":transferables};this._inputPort.postMessage(job,transferables)}_CancelJob(jobId){const job=
this._jobPromises.get(jobId);if(job){job.cancelled=true;job.resolve=null;job.progress=null;job.reject=null;this._inputPort.postMessage({"type":"_cancel","jobId":jobId})}}_OnJobWorkerMessage(e){const msg=e.data;const type=msg["type"];const id=msg["jobId"];switch(type){case "result":this._OnJobResult(id,msg["result"]);break;case "progress":this._OnJobProgress(id,msg["progress"]);break;case "error":this._OnJobError(id,msg["error"]);break;case "ready":this._OnJobWorkerReady();break;default:throw new Error(`unknown message from worker '${type}'`);
}}_OnJobResult(jobId,result){const p=this._jobPromises.get(jobId);if(!p)throw new Error("invalid job ID");if(!p.cancelled)p.resolve(result);this._jobPromises.delete(jobId)}_OnJobProgress(jobId,progress){const p=this._jobPromises.get(jobId);if(!p)throw new Error("invalid job ID");if(!p.cancelled&&p.progress)p.progress(progress)}_OnJobError(jobId,error){const p=this._jobPromises.get(jobId);if(!p)throw new Error("invalid job ID");if(!p.cancelled)p.reject(error);this._jobPromises.delete(jobId)}_OnJobWorkerReady(){if(!this._isCreatingWorker)return;
this._isCreatingWorker=false;this._jobWorkerCount++;if(this._jobWorkerCount<this._maxNumWorkers)this._MaybeCreateExtraWorker();else this._inputPort.postMessage({"type":"_no_more_workers"})}async _MaybeCreateExtraWorker(){if(this._jobWorkerCount>=this._maxNumWorkers||this._isCreatingWorker||this._hadErrorCreatingWorker||this._jobPromises.size<=this._jobWorkerCount)return;try{this._isCreatingWorker=true;const result=await this._runtime.PostComponentMessageToDOMAsync("runtime","create-job-worker");result["outputPort"].onmessage=
e=>this._OnJobWorkerMessage(e)}catch(err){this._hadErrorCreatingWorker=true;this._isCreatingWorker=false;console.error(`[Construct 3] Failed to create job worker; stopping creating any more (created ${this._jobWorkerCount} so far)`,err)}}};

}

{
self["C3_Shaders"] = {};
self["C3_Shaders"]["inverse"] = {
	glsl: "varying mediump vec2 vTex;\nuniform lowp sampler2D samplerFront;\nuniform lowp float intensity;\nvoid main(void)\n{\nlowp vec4 front = texture2D(samplerFront, vTex);\nlowp vec3 inverse = vec3(front.a - front.rgb);\ngl_FragColor = vec4(mix(front.rgb, inverse, intensity), front.a);\n}",
	wgsl: "",
	extendBoxHorizontal: 0,
	extendBoxVertical: 0,
	crossSampling: false,
	mustPreDraw: false,
	preservesOpaqueness: true,
	animated: false,
	parameters: [["intensity",0,"percent"]]
};

}

{
'use strict';const C3=self.C3;let cacheRegex=null;let lastRegex="";let lastFlags="";let regexMatches=[];let lastMatchesStr="";let lastMatchesRegex="";let lastMatchesFlags="";const forEachStack=C3.New(C3.ArrayStack);function ForEachOrdered_SortInstances(a,b){const va=a[1];const vb=b[1];if(typeof va==="number"&&typeof vb==="number")return va-vb;else{const sa=""+va;const sb=""+vb;if(sa<sb)return-1;else if(sa>sb)return 1;else return 0}}
C3.Plugins.System=class SystemPlugin extends C3.SDKPluginBase{constructor(opts){super(opts);this._loopStack=this._runtime.GetEventSheetManager().GetLoopStack();this._eventStack=this._runtime.GetEventSheetManager().GetEventStack();this._imagesLoadingTotal=0;this._imagesLoadingComplete=0;this._functionMaps=new Map}Release(){super.Release()}UpdateRender(){this._runtime.UpdateRender()}Trigger(method){this._runtime.Trigger(method,null,null)}GetRegex(regex,flags){if(!cacheRegex||regex!==lastRegex||flags!==
lastFlags){cacheRegex=new RegExp(regex,flags);lastRegex=regex;lastFlags=flags}cacheRegex.lastIndex=0;return cacheRegex}GetRegexMatches(str,regex,flags){if(str===lastMatchesStr&&regex===lastMatchesRegex&&flags===lastMatchesFlags)return regexMatches;const cacheRegex=this.GetRegex(regex,flags);regexMatches=str.match(cacheRegex);lastMatchesStr=str;lastMatchesRegex=regex;lastMatchesFlags=flags;return regexMatches}async _LoadTexturesForObjectClasses(layout,objectClasses){if(!objectClasses.length)return;
this._imagesLoadingTotal+=objectClasses.length;const promises=[];for(const oc of objectClasses)promises.push(layout.MaybeLoadTexturesFor(oc));await C3.PromiseAllWithProgress(promises,()=>{this._imagesLoadingComplete++});this._imagesLoadingComplete++;if(this._imagesLoadingComplete===this._imagesLoadingTotal){this._runtime.Trigger(C3.Plugins.System.Cnds.OnImageLoadingComplete,null,null);this._imagesLoadingComplete=0;this._imagesLoadingTotal=0}}_UnloadTexturesForObjectClasses(layout,objectClasses){for(const oc of objectClasses)if(oc.GetInstanceCount()===
0)layout.MaybeUnloadTexturesFor(oc)}_GetForEachStack(){return forEachStack}_Repeat(count){const eventSheetManager=this._runtime.GetEventSheetManager();const eventStack=eventSheetManager.GetEventStack();const oldFrame=eventStack.GetCurrentStackFrame();const currentEvent=oldFrame.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiers();const isSolModifierAfterCnds=oldFrame.IsSolModifierAfterCnds();const newFrame=eventStack.Push(currentEvent);const loopStack=eventSheetManager.GetLoopStack();
const loop=loopStack.Push();loop.SetEnd(count);if(isSolModifierAfterCnds)for(let i=0;i<count&&!loop.IsStopped();++i){eventSheetManager.PushCopySol(solModifiers);loop.SetIndex(i);currentEvent.Retrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}else for(let i=0;i<count&&!loop.IsStopped();++i){loop.SetIndex(i);currentEvent.Retrigger(oldFrame,newFrame)}eventStack.Pop();loopStack.Pop();return false}*_DebugRepeat(count){const eventSheetManager=this._runtime.GetEventSheetManager();const eventStack=
eventSheetManager.GetEventStack();const oldFrame=eventStack.GetCurrentStackFrame();const currentEvent=oldFrame.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiers();const isSolModifierAfterCnds=oldFrame.IsSolModifierAfterCnds();const newFrame=eventStack.Push(currentEvent);const loopStack=eventSheetManager.GetLoopStack();const loop=loopStack.Push();loop.SetEnd(count);if(isSolModifierAfterCnds)for(let i=0;i<count&&!loop.IsStopped();++i){eventSheetManager.PushCopySol(solModifiers);loop.SetIndex(i);
yield*currentEvent.DebugRetrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}else for(let i=0;i<count&&!loop.IsStopped();++i){loop.SetIndex(i);yield*currentEvent.DebugRetrigger(oldFrame,newFrame)}eventStack.Pop();loopStack.Pop();return false}_While(){const eventSheetManager=this._runtime.GetEventSheetManager();const eventStack=eventSheetManager.GetEventStack();const oldFrame=eventStack.GetCurrentStackFrame();const currentEvent=oldFrame.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiers();
const isSolModifierAfterCnds=oldFrame.IsSolModifierAfterCnds();const newFrame=eventStack.Push(currentEvent);const loopStack=eventSheetManager.GetLoopStack();const loop=loopStack.Push();if(isSolModifierAfterCnds)for(let i=0;!loop.IsStopped();++i){eventSheetManager.PushCopySol(solModifiers);loop.SetIndex(i);if(!currentEvent.Retrigger(oldFrame,newFrame))loop.Stop();eventSheetManager.PopSol(solModifiers)}else for(let i=0;!loop.IsStopped();++i){loop.SetIndex(i);if(!currentEvent.Retrigger(oldFrame,newFrame))loop.Stop()}eventStack.Pop();
loopStack.Pop();return false}*_DebugWhile(){const eventSheetManager=this._runtime.GetEventSheetManager();const eventStack=eventSheetManager.GetEventStack();const oldFrame=eventStack.GetCurrentStackFrame();const currentEvent=oldFrame.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiers();const isSolModifierAfterCnds=oldFrame.IsSolModifierAfterCnds();const newFrame=eventStack.Push(currentEvent);const loopStack=eventSheetManager.GetLoopStack();const loop=loopStack.Push();if(isSolModifierAfterCnds)for(let i=
0;!loop.IsStopped();++i){eventSheetManager.PushCopySol(solModifiers);loop.SetIndex(i);const ret=yield*currentEvent.DebugRetrigger(oldFrame,newFrame);if(!ret)loop.Stop();eventSheetManager.PopSol(solModifiers)}else for(let i=0;!loop.IsStopped();++i){loop.SetIndex(i);const ret=yield*currentEvent.DebugRetrigger(oldFrame,newFrame);if(!ret)loop.Stop()}eventStack.Pop();loopStack.Pop();return false}_For(name,start,end){const eventSheetManager=this._runtime.GetEventSheetManager();const eventStack=eventSheetManager.GetEventStack();
const oldFrame=eventStack.GetCurrentStackFrame();const currentEvent=oldFrame.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiers();const isSolModifierAfterCnds=oldFrame.IsSolModifierAfterCnds();const newFrame=eventStack.Push(currentEvent);const loopStack=eventSheetManager.GetLoopStack();const loop=loopStack.Push();loop.SetName(name);loop.SetEnd(end);if(end<start)if(isSolModifierAfterCnds)for(let i=start;i>=end&&!loop.IsStopped();--i){eventSheetManager.PushCopySol(solModifiers);loop.SetIndex(i);
currentEvent.Retrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}else for(let i=start;i>=end&&!loop.IsStopped();--i){loop.SetIndex(i);currentEvent.Retrigger(oldFrame,newFrame)}else if(isSolModifierAfterCnds)for(let i=start;i<=end&&!loop.IsStopped();++i){eventSheetManager.PushCopySol(solModifiers);loop.SetIndex(i);currentEvent.Retrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}else for(let i=start;i<=end&&!loop.IsStopped();++i){loop.SetIndex(i);currentEvent.Retrigger(oldFrame,
newFrame)}eventStack.Pop();loopStack.Pop();return false}*_DebugFor(name,start,end){const eventSheetManager=this._runtime.GetEventSheetManager();const eventStack=eventSheetManager.GetEventStack();const oldFrame=eventStack.GetCurrentStackFrame();const currentEvent=oldFrame.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiers();const isSolModifierAfterCnds=oldFrame.IsSolModifierAfterCnds();const newFrame=eventStack.Push(currentEvent);const loopStack=eventSheetManager.GetLoopStack();const loop=
loopStack.Push();loop.SetName(name);loop.SetEnd(end);if(end<start)if(isSolModifierAfterCnds)for(let i=start;i>=end&&!loop.IsStopped();--i){eventSheetManager.PushCopySol(solModifiers);loop.SetIndex(i);yield*currentEvent.DebugRetrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}else for(let i=start;i>=end&&!loop.IsStopped();--i){loop.SetIndex(i);yield*currentEvent.DebugRetrigger(oldFrame,newFrame)}else if(isSolModifierAfterCnds)for(let i=start;i<=end&&!loop.IsStopped();++i){eventSheetManager.PushCopySol(solModifiers);
loop.SetIndex(i);yield*currentEvent.DebugRetrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}else for(let i=start;i<=end&&!loop.IsStopped();++i){loop.SetIndex(i);yield*currentEvent.DebugRetrigger(oldFrame,newFrame)}eventStack.Pop();loopStack.Pop();return false}_ForEach(objectClass){const eventSheetManager=this._runtime.GetEventSheetManager();const eventStack=eventSheetManager.GetEventStack();const oldFrame=eventStack.GetCurrentStackFrame();const currentEvent=oldFrame.GetCurrentEvent();
const solModifiers=currentEvent.GetSolModifiers();const isSolModifierAfterCnds=oldFrame.IsSolModifierAfterCnds();const newFrame=eventStack.Push(currentEvent);const loopStack=eventSheetManager.GetLoopStack();const loop=loopStack.Push();const isInContainer=objectClass.IsInContainer();const sol=objectClass.GetCurrentSol();const instances=forEachStack.Push();C3.shallowAssignArray(instances,sol.GetInstances());loop.SetEnd(instances.length);if(isSolModifierAfterCnds)for(let i=0,len=instances.length;i<len&&
!loop.IsStopped();++i){eventSheetManager.PushCopySol(solModifiers);const inst=instances[i];objectClass.GetCurrentSol().SetSinglePicked(inst);if(isInContainer)inst.SetSiblingsSinglePicked();loop.SetIndex(i);currentEvent.Retrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}else{sol._SetSelectAll(false);const solInstances=sol._GetOwnInstances();C3.clearArray(solInstances);solInstances.push(null);for(let i=0,len=instances.length;i<len&&!loop.IsStopped();++i){const inst=instances[i];solInstances[0]=
inst;if(isInContainer)inst.SetSiblingsSinglePicked();loop.SetIndex(i);currentEvent.Retrigger(oldFrame,newFrame)}}eventStack.Pop();loopStack.Pop();C3.clearArray(instances);forEachStack.Pop();return false}*_DebugForEach(objectClass){const eventSheetManager=this._runtime.GetEventSheetManager();const eventStack=eventSheetManager.GetEventStack();const oldFrame=eventStack.GetCurrentStackFrame();const currentEvent=oldFrame.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiers();const isSolModifierAfterCnds=
oldFrame.IsSolModifierAfterCnds();const newFrame=eventStack.Push(currentEvent);const loopStack=eventSheetManager.GetLoopStack();const loop=loopStack.Push();const isInContainer=objectClass.IsInContainer();const sol=objectClass.GetCurrentSol();const instances=forEachStack.Push();C3.shallowAssignArray(instances,sol.GetInstances());loop.SetEnd(instances.length);if(isSolModifierAfterCnds)for(let i=0,len=instances.length;i<len&&!loop.IsStopped();++i){eventSheetManager.PushCopySol(solModifiers);const inst=
instances[i];objectClass.GetCurrentSol().SetSinglePicked(inst);if(isInContainer)inst.SetSiblingsSinglePicked();loop.SetIndex(i);yield*currentEvent.DebugRetrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}else{sol._SetSelectAll(false);const solInstances=sol._GetOwnInstances();C3.clearArray(solInstances);solInstances.push(null);for(let i=0,len=instances.length;i<len&&!loop.IsStopped();++i){const inst=instances[i];solInstances[0]=inst;if(isInContainer)inst.SetSiblingsSinglePicked();loop.SetIndex(i);
yield*currentEvent.DebugRetrigger(oldFrame,newFrame)}}eventStack.Pop();loopStack.Pop();C3.clearArray(instances);forEachStack.Pop();return false}_ForEachOrdered(objectClass,order){const eventSheetManager=this._runtime.GetEventSheetManager();const eventStack=eventSheetManager.GetEventStack();const cnd=eventSheetManager.GetCurrentCondition();const oldFrame=eventStack.GetCurrentStackFrame();const currentEvent=oldFrame.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiers();const isSolModifierAfterCnds=
oldFrame.IsSolModifierAfterCnds();const newFrame=eventStack.Push(currentEvent);const loopStack=eventSheetManager.GetLoopStack();const loop=loopStack.Push();const isInContainer=objectClass.IsInContainer();const sol=objectClass.GetCurrentSol();const instancesData=forEachStack.Push();C3.clearArray(instancesData);const iterInstances=sol.GetInstances();loop.SetEnd(iterInstances.length);for(let i=0,len=iterInstances.length;i<len;++i)instancesData.push([iterInstances[i],cnd.ReevaluateParameter(1,i)]);instancesData.sort(ForEachOrdered_SortInstances);
if(order===1)instancesData.reverse();if(isSolModifierAfterCnds)for(let i=0,len=instancesData.length;i<len&&!loop.IsStopped();++i){eventSheetManager.PushCopySol(solModifiers);const inst=instancesData[i][0];objectClass.GetCurrentSol().SetSinglePicked(inst);if(isInContainer)inst.SetSiblingsSinglePicked();loop.SetIndex(i);currentEvent.Retrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}else{sol._SetSelectAll(false);const solInstances=sol._GetOwnInstances();C3.clearArray(solInstances);
solInstances.push(null);for(let i=0,len=instancesData.length;i<len&&!loop.IsStopped();++i){const inst=instancesData[i][0];solInstances[0]=inst;if(isInContainer)inst.SetSiblingsSinglePicked();loop.SetIndex(i);currentEvent.Retrigger(oldFrame,newFrame)}}eventStack.Pop();loopStack.Pop();C3.clearArray(instancesData);forEachStack.Pop();return false}*_DebugForEachOrdered(objectClass,order){const eventSheetManager=this._runtime.GetEventSheetManager();const eventStack=eventSheetManager.GetEventStack();const cnd=
eventSheetManager.GetCurrentCondition();const oldFrame=eventStack.GetCurrentStackFrame();const currentEvent=oldFrame.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiers();const isSolModifierAfterCnds=oldFrame.IsSolModifierAfterCnds();const newFrame=eventStack.Push(currentEvent);const loopStack=eventSheetManager.GetLoopStack();const loop=loopStack.Push();const isInContainer=objectClass.IsInContainer();const sol=objectClass.GetCurrentSol();const instancesData=forEachStack.Push();C3.clearArray(instancesData);
const iterInstances=sol.GetInstances();loop.SetEnd(iterInstances.length);for(let i=0,len=iterInstances.length;i<len;++i)instancesData.push([iterInstances[i],cnd.ReevaluateParameter(1,i)]);instancesData.sort(ForEachOrdered_SortInstances);if(order===1)instancesData.reverse();if(isSolModifierAfterCnds)for(let i=0,len=instancesData.length;i<len&&!loop.IsStopped();++i){eventSheetManager.PushCopySol(solModifiers);const inst=instancesData[i][0];objectClass.GetCurrentSol().SetSinglePicked(inst);if(isInContainer)inst.SetSiblingsSinglePicked();
loop.SetIndex(i);yield*currentEvent.DebugRetrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}else{sol._SetSelectAll(false);const solInstances=sol._GetOwnInstances();C3.clearArray(solInstances);solInstances.push(null);for(let i=0,len=instancesData.length;i<len&&!loop.IsStopped();++i){const inst=instancesData[i][0];solInstances[0]=inst;if(isInContainer)inst.SetSiblingsSinglePicked();loop.SetIndex(i);yield*currentEvent.DebugRetrigger(oldFrame,newFrame)}}eventStack.Pop();loopStack.Pop();
C3.clearArray(instancesData);forEachStack.Pop();return false}_GetFunctionMap(name,createIfMissing){let ret=this._functionMaps.get(name);if(ret)return ret;if(!createIfMissing)return null;ret={defaultFunc:null,strMap:new Map};this._functionMaps.set(name,ret);return ret}_DoCallMappedFunction(eventSheetManager,functionBlock,paramResults,hasAnySolModifiers,solModifiers){functionBlock.GetEventBlock().RunAsMappedFunctionCall(paramResults);if(hasAnySolModifiers)eventSheetManager.PopSol(solModifiers)}*_DebugDoCallMappedFunction(eventSheetManager,
functionBlock,paramResults,hasAnySolModifiers,solModifiers){yield*functionBlock.GetEventBlock().DebugRunAsMappedFunctionCall(paramResults);if(hasAnySolModifiers)eventSheetManager.PopSol(solModifiers)}};

}

{
'use strict';const C3=self.C3;C3.Plugins.System.Type=class SystemType extends C3.DefendedBase{constructor(objectClass){super();this._objectClass=objectClass;this._runtime=objectClass.GetRuntime();this._plugin=objectClass.GetPlugin()}OnCreate(){}Release(){this._objectClass=null;this._runtime=null;this._plugin=null}};

}

{
'use strict';const C3=self.C3;C3.Plugins.System.Instance=class SystemInstance extends C3.DefendedBase{constructor(inst,properties){super();this._inst=inst;this._objectClass=this._inst.GetObjectClass();this._sdkType=this._objectClass.GetSdkType();this._runtime=this._inst.GetRuntime()}Release(){this._inst=null;this._objectClass=null;this._sdkType=null;this._runtime=null}};

}

{
'use strict';const C3=self.C3;const tmpPickArray=[];
C3.Plugins.System.Cnds={EveryTick(){return true},OnLayoutStart(){return true},OnLayoutEnd(){return true},OnSuspend(){return true},OnResume(){return true},IsSuspended(){return this._runtime.IsSuspended()},Else(){const frame=this._runtime.GetCurrentEventStackFrame();if(frame.GetElseBranchRan())return false;else return!frame.GetLastEventTrue()},TriggerOnce(){const cnd=this._runtime.GetCurrentCondition();const cndSavedData=cnd.GetSavedDataMap();let lastTick=cndSavedData.get("TriggerOnce_lastTick");if(typeof lastTick===
"undefined"){lastTick=-1;cndSavedData.set("TriggerOnce_lastTick",-1)}const curTick=this._runtime.GetTickCount();cndSavedData.set("TriggerOnce_lastTick",curTick);return this._runtime.IsLayoutFirstTick()||lastTick!==curTick-1},Every(seconds){const cnd=this._runtime.GetCurrentCondition();const cndSavedData=cnd.GetSavedDataMap();const lastTime=cndSavedData.get("Every_lastTime")||0;const curTime=this._runtime.GetGameTime();if(!cndSavedData.has("Every_seconds"))cndSavedData.set("Every_seconds",seconds);
const thisSeconds=cndSavedData.get("Every_seconds");if(curTime>=lastTime+thisSeconds){cndSavedData.set("Every_lastTime",lastTime+thisSeconds);if(curTime>=cndSavedData.get("Every_lastTime")+.04)cndSavedData.set("Every_lastTime",curTime);cndSavedData.set("Every_seconds",seconds);return true}else if(curTime<lastTime-.1)cndSavedData.set("Every_lastTime",curTime);return false},IsGroupActive(groupName){const eventGroup=this._runtime.GetEventSheetManager().GetEventGroupByName(groupName);return eventGroup&&
eventGroup.IsGroupActive()},IsPreview(){return this._runtime.IsPreview()},IsMobile(){return C3.Platform.IsMobile},OnLoadFinished(){return true},OnCanvasSnapshot(){return true},EffectsSupported(){return true},OnSaveComplete(){return true},OnSaveFailed(){return true},OnLoadComplete(){return true},OnLoadFailed(){return true},ObjectUIDExists(uid){return!!this._runtime.GetInstanceByUID(uid)},IsOnPlatform(p){switch(p){case 0:return C3.Platform.Context==="browser";case 1:return C3.Platform.OS==="iOS";case 2:return C3.Platform.OS===
"Android";case 8:return C3.Platform.Context==="cordova";case 9:return this._runtime.GetExportType()==="scirra-arcade";case 10:return C3.Platform.Context==="nwjs";case 13:return this._runtime.GetExportType()==="windows-uwp";default:return false}},RegexTest(str,regex,flags){const cacheRegex=this.GetRegex(regex,flags);return cacheRegex.test(str)},Compare(x,cmp,y){return C3.compare(x,cmp,y)},CompareBetween(x,a,b){return x>=a&&x<=b},CompareVar(ev,cmp,val){return C3.compare(ev.GetValue(),cmp,val)},CompareBoolVar(ev){return!!ev.GetValue()},
CompareTime(cmp,t){const gameTime=this._runtime.GetGameTime();if(cmp===0){const cnd=this._runtime.GetCurrentCondition();const cndSavedData=cnd.GetSavedDataMap();if(!cndSavedData.get("CompareTime_executed"))if(gameTime>=t){cndSavedData.set("CompareTime_executed",true);return true}return false}else return C3.compare(gameTime,cmp,t)},IsNaN(n){return isNaN(n)},AngleWithin(a1,within,a2){return C3.angleDiff(C3.toRadians(a1),C3.toRadians(a2))<=C3.toRadians(within)},IsClockwiseFrom(a1,a2){return C3.angleClockwise(C3.toRadians(a1),
C3.toRadians(a2))},IsBetweenAngles(a,la,ua){let angle=C3.toRadians(a);let lower=C3.toRadians(la);let upper=C3.toRadians(ua);let obtuse=!C3.angleClockwise(upper,lower);if(obtuse)return!(!C3.angleClockwise(angle,lower)&&C3.angleClockwise(angle,upper));else return C3.angleClockwise(angle,lower)&&!C3.angleClockwise(angle,upper)},IsValueType(v,t){if(typeof v==="number")return t===0;else return t===1},EvaluateExpression(v){return!!v},PickByComparison(objectClass,exp,cmp,val){if(!objectClass)return false;
const forEachStack=this._GetForEachStack();const tempInstances=forEachStack.Push();const sol=objectClass.GetCurrentSol();C3.shallowAssignArray(tempInstances,sol.GetInstances());if(sol.IsSelectAll())C3.clearArray(sol._GetOwnElseInstances());const cnd=this._runtime.GetCurrentCondition();let k=0;for(let i=0,len=tempInstances.length;i<len;++i){const inst=tempInstances[i];tempInstances[k]=inst;exp=cnd.ReevaluateParameter(1,i);val=cnd.ReevaluateParameter(3,i);if(C3.compare(exp,cmp,val))++k;else sol._PushElseInstance(inst)}C3.truncateArray(tempInstances,
k);sol.SetArrayPicked(tempInstances);const ret=!!tempInstances.length;C3.clearArray(tempInstances);forEachStack.Pop();objectClass.ApplySolToContainer();return ret},PickByEvaluate(objectClass,exp){if(!objectClass)return false;const forEachStack=this._GetForEachStack();const tempInstances=forEachStack.Push();const sol=objectClass.GetCurrentSol();C3.shallowAssignArray(tempInstances,sol.GetInstances());if(sol.IsSelectAll())C3.clearArray(sol._GetOwnElseInstances());const cnd=this._runtime.GetCurrentCondition();
let k=0;for(let i=0,len=tempInstances.length;i<len;++i){const inst=tempInstances[i];tempInstances[k]=inst;exp=cnd.ReevaluateParameter(1,i);if(exp)++k;else sol._PushElseInstance(inst)}C3.truncateArray(tempInstances,k);sol.SetArrayPicked(tempInstances);const ret=!!tempInstances.length;C3.clearArray(tempInstances);forEachStack.Pop();objectClass.ApplySolToContainer();return ret},PickNth(objectClass,index){if(!objectClass)return false;const sol=objectClass.GetCurrentSol();const instances=sol.GetInstances();
index=Math.floor(index);if(index>=instances.length)return false;const inst=instances[index];sol.PickOne(inst);objectClass.ApplySolToContainer();return true},PickRandom(objectClass){if(!objectClass)return false;const sol=objectClass.GetCurrentSol();const instances=sol.GetInstances();const index=Math.floor(this._runtime.Random()*instances.length);if(index>=instances.length)return false;const inst=instances[index];sol.PickOne(inst);objectClass.ApplySolToContainer();return true},PickAll(objectClass){if(!objectClass)return false;
if(!objectClass.GetInstanceCount())return false;const sol=objectClass.GetCurrentSol();sol._SetSelectAll(true);objectClass.ApplySolToContainer();return true},PickOverlappingPoint(objectClass,x,y){if(!objectClass)return false;const sol=objectClass.GetCurrentSol();const instances=sol.GetInstances();const currentEvent=this._runtime.GetCurrentEvent();const isOrBlock=currentEvent.IsOrBlock();const isInverted=this._runtime.GetCurrentCondition().IsInverted();if(sol.IsSelectAll()){C3.shallowAssignArray(tmpPickArray,
instances);sol.ClearArrays();sol._SetSelectAll(false)}else if(isOrBlock){C3.shallowAssignArray(tmpPickArray,sol._GetOwnElseInstances());C3.clearArray(sol._GetOwnElseInstances())}else{C3.shallowAssignArray(tmpPickArray,sol._GetOwnInstances());C3.clearArray(sol._GetOwnInstances())}for(let i=0,len=tmpPickArray.length;i<len;++i){const inst=tmpPickArray[i];if(C3.xor(inst.GetWorldInfo().ContainsPoint(x,y),isInverted))sol._PushInstance(inst);else sol._PushElseInstance(inst)}objectClass.ApplySolToContainer();
return C3.xor(!!sol._GetOwnInstances().length,isInverted)},PickLastCreated(objectClass){if(!objectClass)return false;const isFamily=objectClass.IsFamily();let pick=null;const instancesPendingCreate=this._runtime._GetInstancesPendingCreate();for(let i=instancesPendingCreate.length-1;i>=0;--i){const inst=instancesPendingCreate[i];if(isFamily){if(inst.GetObjectClass().BelongsToFamily(objectClass)){pick=inst;break}}else if(inst.GetObjectClass()===objectClass){pick=inst;break}}if(!pick){const instances=
objectClass.GetInstances();if(instances.length)pick=instances.at(-1)}if(!pick)return false;const sol=objectClass.GetCurrentSol();sol.PickOne(pick);objectClass.ApplySolToContainer();return true},Repeat(count){if(this._runtime.IsDebugging())return this._DebugRepeat(count);else return this._Repeat(count)},While(){if(this._runtime.IsDebugging())return this._DebugWhile();else return this._While()},For(name,start,end){if(this._runtime.IsDebugging())return this._DebugFor(name,start,end);else return this._For(name,
start,end)},ForEach(objectClass){if(this._runtime.IsDebugging())return this._DebugForEach(objectClass);else return this._ForEach(objectClass)},ForEachOrdered(objectClass,expression,order){if(this._runtime.IsDebugging())return this._DebugForEachOrdered(objectClass,order);else return this._ForEachOrdered(objectClass,order)},LayerVisible(layer){return layer?layer.IsVisible():false},LayerEmpty(layer){return layer?!layer.GetInstanceCount():false},LayerCmpOpacity(layer,cmp,o){if(!layer)return false;return C3.compare(layer.GetOpacity()*
100,cmp,o)},OnImageLoadingComplete(){return true},IsLoadingImages(){return this._imagesLoadingTotal>0}};

}

{
'use strict';const C3=self.C3;function SortZOrderList(a,b){const layerA=a[0];const layerB=b[0];const diff=layerA-layerB;if(diff!==0)return diff;const indexA=a[1];const indexB=b[1];return indexA-indexB}function SortInstancesByValue(a,b){return a[1]-b[1]}const tempZOrderList=[];const tempInstValues=[];const tempRect=C3.New(C3.Rect);const tempColor=C3.New(C3.Color);
C3.Plugins.System.Acts={SetVar(ev,x){ev.SetValue(x)},AddVar(ev,x){if(ev.IsNumber()&&typeof x!=="number")x=parseFloat(x);ev.SetValue(ev.GetValue()+x)},SubVar(ev,x){if(!ev.IsNumber())return;ev.SetValue(ev.GetValue()-x)},SetBoolVar(ev,x){ev.SetValue(!!x)},ToggleBoolVar(ev){ev.SetValue(!ev.GetValue())},ResetGlobals(){this._runtime.GetEventSheetManager().ResetAllGlobalsToInitialValue()},CreateObject(objectClass,layer,x,y,createHierarchy){if(!objectClass||!layer)return;const inst=this._runtime.CreateInstance(objectClass,
layer,x,y,createHierarchy);if(!inst)return;if(createHierarchy)layer.SortAndAddInstancesByZIndex(inst);const eventSheetManager=this._runtime.GetEventSheetManager();eventSheetManager.BlockFlushingInstances(true);inst._TriggerOnCreatedOnSelfAndRelated();eventSheetManager.BlockFlushingInstances(false);objectClass.GetCurrentSol().SetSinglePicked(inst);if(inst.IsInContainer())inst.SetSiblingsSinglePicked()},CreateObjectByName(objectClassName,layer,x,y,createHierarchy){if(!objectClassName||!layer)return;
const objectClass=this._runtime.GetObjectClassByName(objectClassName);if(!objectClass)return;C3.Plugins.System.Acts.CreateObject.call(this,objectClass,layer,x,y,createHierarchy)},RecreateInitialObjects(objectClass,x1,y1,x2,y2,sourceLayoutName,sourceLayerParam,offsetX,offsetY,createHierarchy){if(!objectClass)return;let sourceLayout=this._runtime.GetCurrentLayout();if(sourceLayoutName){const lookupLayout=this._runtime.GetLayoutManager().GetLayoutByName(sourceLayoutName);if(lookupLayout)sourceLayout=
lookupLayout;else return}let sourceLayer=null;if(typeof sourceLayerParam!=="number"||sourceLayerParam>=0){sourceLayer=sourceLayout.GetLayer(sourceLayerParam);if(!sourceLayer)return}tempRect.set(x1,y1,x2,y2);const allCreatedInstances=sourceLayout.RecreateInitialObjects(objectClass,tempRect,sourceLayer,offsetX,offsetY,createHierarchy);objectClass.GetCurrentSol().SetArrayPicked(allCreatedInstances);objectClass.ApplySolToContainer()},StopLoop(){const loopStack=this._loopStack;if(!loopStack.IsInLoop())return;
loopStack.GetCurrent().Stop()},SetGroupActive(groupName,a){const group=this._runtime.GetEventSheetManager().GetEventGroupByName(groupName);if(!group)return;if(a===0)group.SetGroupActive(false);else if(a===1)group.SetGroupActive(true);else group.SetGroupActive(!group.IsGroupActive())},SetTimescale(ts){this._runtime.SetTimeScale(ts)},SetObjectTimescale(objectClass,ts){if(ts<0)ts=0;if(!objectClass)return;const sol=objectClass.GetCurrentSol();const instances=sol.GetInstances();for(const inst of instances)inst.SetTimeScale(ts)},
RestoreObjectTimescale(objectClass){if(!objectClass)return;const sol=objectClass.GetCurrentSol();const instances=sol.GetInstances();for(const inst of instances)inst.RestoreTimeScale()},Wait(seconds){if(seconds<0)return;this._runtime.GetEventSheetManager().AddScheduledWait().InitTimer(seconds);return true},WaitForSignal(tag){this._runtime.GetEventSheetManager().AddScheduledWait().InitSignal(tag);return true},WaitForPreviousActions(){const eventSheetManager=this._runtime.GetEventSheetManager();eventSheetManager.AddScheduledWait().InitPromise(eventSheetManager.GetPromiseForAllAsyncActions());
return true},Signal(tag){const lowerTag=tag.toLowerCase();for(const w of this._runtime.GetEventSheetManager().scheduledWaits())if(w.IsSignal()&&w.GetSignalTag()===lowerTag)w.SetSignalled()},async SnapshotCanvas(format,quality,x,y,width,height){const canvasManager=this._runtime.GetCanvasManager();if(!canvasManager)return;this.UpdateRender();await canvasManager.SnapshotCanvas(format===0?"image/png":"image/jpeg",quality/100,x,y,width,height);await this._runtime.TriggerAsync(C3.Plugins.System.Cnds.OnCanvasSnapshot,
null)},SetCanvasSize(w,h){if(w<=0||h<=0)return;this._runtime.SetViewportSize(w,h);const currentLayout=this._runtime.GetCurrentLayout();currentLayout.BoundScrolling();for(const layer of currentLayout.GetLayers())layer.UpdateViewport();const canvasManager=this._runtime.GetCanvasManager();if(!canvasManager)return;if(canvasManager.GetCurrentFullscreenMode()==="off")canvasManager.SetSize(canvasManager.GetLastWidth(),canvasManager.GetLastHeight(),true);else{this._runtime.SetOriginalViewportSize(w,h);canvasManager.SetSize(canvasManager.GetLastWidth(),
canvasManager.GetLastHeight(),true)}this._runtime.UpdateRender()},SetFullscreenQuality(q){const canvasManager=this._runtime.GetCanvasManager();if(!canvasManager)return;if(canvasManager.GetCurrentFullscreenMode()==="off")return;canvasManager.SetFullscreenScalingQuality(q!==0?"high":"low");canvasManager.SetSize(canvasManager.GetLastWidth(),canvasManager.GetLastHeight(),true)},SaveState(slot){this._runtime.SaveToSlot(slot)},LoadState(slot){this._runtime.LoadFromSlot(slot)},LoadStateJSON(jsonStr){this._runtime.LoadFromJsonString(jsonStr)},
SetHalfFramerateMode(m){},ResetPersisted(){for(const layout of this._runtime.GetLayoutManager().GetAllLayouts())layout.ResetPersistData()},SetPixelRounding(m){this._runtime.SetPixelRoundingEnabled(m!==0)},SetMinimumFramerate(fps){this._runtime.SetMinimumFramerate(fps)},SortZOrderByInstVar(objectClass,instVar){if(!objectClass)return;const sol=objectClass.GetCurrentSol();const pickedInstances=sol.GetInstances();const zOrderList=tempZOrderList;const instValues=tempInstValues;const layout=this._runtime.GetCurrentLayout();
const isFamily=objectClass.IsFamily();const familyIndex=objectClass.GetFamilyIndex();for(let i=0,len=pickedInstances.length;i<len;++i){const inst=pickedInstances[i];const wi=inst.GetWorldInfo();if(!wi)continue;let value;if(isFamily)value=inst.GetInstanceVariableValue(instVar+inst.GetObjectClass().GetFamilyInstanceVariableOffset(familyIndex));else value=inst.GetInstanceVariableValue(instVar);zOrderList.push([wi.GetLayer().GetIndex(),wi.GetZIndex()]);instValues.push([inst,value])}if(!zOrderList.length)return;
zOrderList.sort(SortZOrderList);instValues.sort(SortInstancesByValue);let anyChanged=false;for(let i=0,len=zOrderList.length;i<len;++i){const inst=instValues[i][0];const layer=layout.GetLayerByIndex(zOrderList[i][0]);const toZ=zOrderList[i][1];const layerInstances=layer._GetInstances();if(layerInstances[toZ]!==inst){layerInstances[toZ]=inst;inst.GetWorldInfo()._SetLayer(layer);layer.SetZIndicesChanged();anyChanged=true}}if(anyChanged)this._runtime.UpdateRender();C3.clearArray(tempZOrderList);C3.clearArray(tempInstValues)},
GoToLayout(layout){if(this._runtime.IsLoading())return;const layoutManager=this._runtime.GetLayoutManager();if(layoutManager.IsPendingChangeMainLayout())return;layoutManager.ChangeMainLayout(layout)},GoToLayoutByName(layoutName){if(this._runtime.IsLoading())return;const layoutManager=this._runtime.GetLayoutManager();if(layoutManager.IsPendingChangeMainLayout())return;const toLayout=layoutManager.GetLayoutByName(layoutName);if(toLayout)layoutManager.ChangeMainLayout(toLayout)},NextPrevLayout(prev){if(this._runtime.IsLoading())return;
const layoutManager=this._runtime.GetLayoutManager();if(layoutManager.IsPendingChangeMainLayout())return;const allLayouts=layoutManager.GetAllLayouts();const index=allLayouts.indexOf(layoutManager.GetMainRunningLayout());if(prev&&index===0)return;if(!prev&&index===allLayouts.length-1)return;const toLayout=allLayouts[index+(prev?-1:1)];layoutManager.ChangeMainLayout(toLayout)},RestartLayout(){if(this._runtime.IsLoading())return;const layoutManager=this._runtime.GetLayoutManager();if(layoutManager.IsPendingChangeMainLayout())return;
layoutManager.ChangeMainLayout(layoutManager.GetMainRunningLayout());this._runtime.GetEventSheetManager().ResetAllGroupsInitialActivation()},SetLayerVisible(layer,v){if(!layer)return;layer.SetVisible(v)},SetLayerOpacity(layer,o){if(!layer)return;layer.SetOpacity(o/100)},SetLayerScale(layer,s){if(!layer)return;layer.SetOwnScale(s)},SetLayerScaleRate(layer,r){if(!layer)return;layer.SetScaleRate(r)},SetLayerAngle(layer,a){if(!layer)return;layer.SetAngle(C3.toRadians(+a))},SetLayerScroll(layer,scrollX,
scrollY){if(!layer)return;layer.SetOwnScrollPositionEnabled(true);layer.SetScrollX(scrollX);layer.SetScrollY(scrollY)},RestoreLayerScroll(layer){if(!layer)return;layer.SetOwnScrollPositionEnabled(false)},SetLayerParallax(layer,px,py){if(!layer)return;layer.SetParallax(px/100,py/100)},SetLayerZElevation(layer,z){if(!layer)return;layer.SetZElevation(+z)},SetLayerBackground(layer,rgb){if(!layer)return;tempColor.setFromRgbValue(rgb);tempColor.clamp();const layerBgColor=layer.GetBackgroundColor();if(layerBgColor.equalsIgnoringAlpha(tempColor))return;
layerBgColor.copyRgb(tempColor);this.UpdateRender()},SetLayerTransparent(layer,t){if(!layer)return;layer.SetTransparent(t)},SetLayerBlendMode(layer,bm){if(!layer)return;layer.SetBlendMode(bm)},SetLayerEffectEnabled(layer,enabled,effectName){if(!layer)return;const effectList=layer.GetEffectList();const effectType=effectList.GetEffectTypeByName(effectName);if(!effectType)return;const e=enabled===1;if(effectType.IsActive()===e)return;effectType.SetActive(e);effectList.UpdateActiveEffects();this._runtime.UpdateRender()},
SetLayerEffectParam(layer,effectName,paramIndex,value){if(!layer)return;const effectList=layer.GetEffectList();const effectType=effectList.GetEffectTypeByName(effectName);if(!effectType)return;const effectTypeIndex=effectType.GetIndex();const paramsArr=effectList.GetEffectParametersForIndex(effectTypeIndex);paramIndex=Math.floor(paramIndex);if(paramIndex<0||paramIndex>=paramsArr.length)return;const paramType=effectType.GetShaderProgram().GetParameterType(paramIndex);if(paramType==="color"){tempColor.setFromRgbValue(value);
const curColor=paramsArr[paramIndex];if(tempColor.equalsIgnoringAlpha(curColor))return;curColor.copyRgb(tempColor)}else{if(paramType==="percent")value/=100;if(paramsArr[paramIndex]===value)return;paramsArr[paramIndex]=value}if(effectType.IsActive())this._runtime.UpdateRender()},SetLayerForceOwnTexture(layer,f){if(!layer)return;layer.SetForceOwnTexture(f)},SetLayoutScale(s){this._runtime.GetCurrentLayout().SetScale(+s)},SetLayoutAngle(a){this._runtime.GetCurrentLayout().SetAngle(C3.toRadians(+a))},
SetLayoutEffectEnabled(enabled,effectName){const layout=this._runtime.GetCurrentLayout();const effectList=layout.GetEffectList();const effectType=effectList.GetEffectTypeByName(effectName);if(!effectType)return;const e=enabled===1;if(effectType.IsActive()===e)return;effectType.SetActive(e);effectList.UpdateActiveEffects();this._runtime.UpdateRender()},SetLayoutEffectParam(effectName,paramIndex,value){const layout=this._runtime.GetCurrentLayout();const effectList=layout.GetEffectList();const effectType=
effectList.GetEffectTypeByName(effectName);if(!effectType)return;const effectTypeIndex=effectType.GetIndex();const paramsArr=effectList.GetEffectParametersForIndex(effectTypeIndex);paramIndex=Math.floor(paramIndex);if(paramIndex<0||paramIndex>=paramsArr.length)return;const paramType=effectType.GetShaderProgram().GetParameterType(paramIndex);if(paramType==="color"){tempColor.setFromRgbValue(value);const curColor=paramsArr[paramIndex];if(tempColor.equalsIgnoringAlpha(curColor))return;curColor.copyRgb(tempColor)}else{if(paramType===
"percent")value/=100;if(paramsArr[paramIndex]===value)return;paramsArr[paramIndex]=value}if(effectType.IsActive())this._runtime.UpdateRender()},SetLayoutVanishingPoint(vpX,vpY){const layout=this._runtime.GetCurrentLayout();layout.SetVanishingPointXY(vpX/100,vpY/100)},SetLayoutProjection(p){const layout=this._runtime.GetCurrentLayout();if(p===0)layout.SetPerspectiveProjection();else layout.SetOrthographicProjection()},ScrollX(x){const layout=this._runtime.GetCurrentLayout();layout.SetScrollX(x)},ScrollY(y){const layout=
this._runtime.GetCurrentLayout();layout.SetScrollY(y)},Scroll(x,y){const layout=this._runtime.GetCurrentLayout();layout.SetScrollX(x);layout.SetScrollY(y)},ScrollToObject(objectClass){if(!objectClass)return;const inst=objectClass.GetFirstPicked();if(!inst)return;const wi=inst.GetWorldInfo();if(!wi)return;const layout=this._runtime.GetCurrentLayout();layout.SetScrollX(wi.GetX());layout.SetScrollY(wi.GetY())},async LoadObjectTextures(objectClass){const layout=this._runtime.GetMainRunningLayout();if(!layout||
!objectClass||this._runtime.IsLoading())return;const objectClasses=objectClass.IsFamily()?objectClass.GetFamilyMembers():[objectClass];await this._LoadTexturesForObjectClasses(layout,objectClasses)},async LoadObjectTexturesByName(objectClassName){await C3.Plugins.System.Acts.LoadObjectTextures.call(this,this._runtime.GetObjectClassByName(objectClassName))},UnloadObjectTextures(objectClass){const layout=this._runtime.GetMainRunningLayout();if(!layout||!objectClass)return;const objectClasses=objectClass.IsFamily()?
objectClass.GetFamilyMembers():[objectClass];this._UnloadTexturesForObjectClasses(layout,objectClasses)},UnloadObjectTexturesByName(objectClassName){C3.Plugins.System.Acts.UnloadObjectTexturesByName.call(this,this._runtime.GetObjectClassByName(objectClassName))},UnloadUnusedTextures(){const layout=this._runtime.GetMainRunningLayout();if(!layout)return;const objectClasses=layout._GetTextureLoadedObjectTypes();this._UnloadTexturesForObjectClasses(layout,objectClasses)},async LoadLayoutTextures(loadLayout){const curLayout=
this._runtime.GetMainRunningLayout();if(!loadLayout||!curLayout||this._runtime.IsLoading())return;await this._LoadTexturesForObjectClasses(curLayout,loadLayout._GetInitialObjectClasses())},async LoadLayoutTexturesByName(layoutName){const curLayout=this._runtime.GetMainRunningLayout();const loadLayout=this._runtime.GetLayoutManager().GetLayoutByName(layoutName);if(!loadLayout||!curLayout||this._runtime.IsLoading())return;await this._LoadTexturesForObjectClasses(curLayout,loadLayout._GetInitialObjectClasses())},
SetFunctionReturnValue(v){const frame=this._eventStack.GetCurrentExpFuncStackFrame();if(!frame)return;switch(frame.GetFunctionReturnType()){case 1:if(typeof v==="number")frame.SetFunctionReturnValue(v);break;case 2:if(typeof v==="string")frame.SetFunctionReturnValue(v);break;case 3:frame.SetFunctionReturnValue(v);break}},MapFunction(name,str,functionBlock){const mapEntry=this._GetFunctionMap(name.toLowerCase(),true);const strMap=mapEntry.strMap;const lowerStr=str.toLowerCase();if(strMap.has(lowerStr))console.warn(`[Construct 3] Function map '${name}' string '${str}' already in map; overwriting entry`);
const firstFunctionBlock=C3.first(strMap.values())||mapEntry.defaultFunc;if(firstFunctionBlock){const firstReturnsValue=firstFunctionBlock.GetReturnType()!==0;const curReturnsValue=functionBlock.GetReturnType()!==0;if(firstReturnsValue!==curReturnsValue){console.error(`[Construct 3] Function map '${name}' string '${str}' function return type not compatible with other functions in the map; entry ignored`);return}}strMap.set(lowerStr,functionBlock)},MapFunctionDefault(name,functionBlock){const mapEntry=
this._GetFunctionMap(name.toLowerCase(),true);if(mapEntry.defaultFunc)console.warn(`[Construct 3] Function map '${name}' already has a default; overwriting entry`);const firstFunctionBlock=C3.first(mapEntry.strMap.values())||mapEntry.defaultFunc;if(firstFunctionBlock){const firstReturnsValue=firstFunctionBlock.GetReturnType()!==0;const curReturnsValue=functionBlock.GetReturnType()!==0;if(firstReturnsValue!==curReturnsValue){console.error(`[Construct 3] Function map '${name}' default: function return type not compatible with other functions in the map; entry ignored`);
return}}mapEntry.defaultFunc=functionBlock},CallMappedFunction(name,str,forwardParams){forwardParams=Math.floor(forwardParams);const mapEntry=this._GetFunctionMap(name.toLowerCase(),false);if(!mapEntry){console.warn(`[Construct 3] Call mapped function: map name '${name}' not found; call ignored`);return}let functionBlock=mapEntry.strMap.get(str.toLowerCase());if(!functionBlock)if(mapEntry.defaultFunc){functionBlock=mapEntry.defaultFunc;forwardParams=0}else{console.warn(`[Construct 3] Call mapped function: no function associated with map '${name}' string '${str}'; call ignored (consider setting a default)`);
return}if(!functionBlock.IsEnabled())return;if(functionBlock.GetReturnType()!==0){console.warn(`[Construct 3] Call mapped function: map '${name}' string '${str}' has a return type so cannot be called`);return}const runtime=this._runtime;const eventSheetManager=runtime.GetEventSheetManager();const currentEvent=eventSheetManager.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiersIncludingParents();const hasAnySolModifiers=solModifiers.length>0;if(hasAnySolModifiers)eventSheetManager.PushCleanSol(solModifiers);
const paramResults=[];const callerFunctionBlock=eventSheetManager.FindFirstFunctionBlockParent(currentEvent);if(callerFunctionBlock){const callerParameters=callerFunctionBlock.GetFunctionParameters();for(let i=forwardParams,len=callerParameters.length;i<len;++i)paramResults.push(callerParameters[i].GetValue())}const calleeParameters=functionBlock.GetFunctionParameters();for(let i=paramResults.length,len=calleeParameters.length;i<len;++i)paramResults.push(calleeParameters[i].GetInitialValue());if(runtime.IsDebugging())return this._DebugDoCallMappedFunction(eventSheetManager,
functionBlock,paramResults,hasAnySolModifiers,solModifiers);else return this._DoCallMappedFunction(eventSheetManager,functionBlock,paramResults,hasAnySolModifiers,solModifiers)}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.System.Exps={int:function(x){if(typeof x==="string"){x=parseInt(x,10);if(isNaN(x))x=0}return Math.floor(x)},float:function(x){if(typeof x==="string"){x=parseFloat(x);if(isNaN(x))x=0}return x},str(x){return x.toString()},len(x){if(typeof x==="string")return x.length;else return 0},random(a,b){if(typeof b==="undefined")return this._runtime.Random()*a;else return this._runtime.Random()*(b-a)+a},choose(...args){const index=Math.floor(this._runtime.Random()*args.length);return args[index]},
pi(){return Math.PI},infinity(){return Infinity},sqrt(v){return Math.sqrt(v)},abs(v){return Math.abs(v)},round(v){return Math.round(v)},roundtodp(v,dp){dp=Math.max(Math.floor(dp),0);const m=Math.pow(10,dp);return Math.round((v+Number.EPSILON)*m)/m},floor(v){return Math.floor(v)},ceil(v){return Math.ceil(v)},sign(v){return Math.sign(v)},sin(x){return Math.sin(C3.toRadians(x))},cos(x){return Math.cos(C3.toRadians(x))},tan(x){return Math.tan(C3.toRadians(x))},asin(x){return C3.toDegrees(Math.asin(x))},
acos(x){return C3.toDegrees(Math.acos(x))},atan(x){return C3.toDegrees(Math.atan(x))},exp(x){return Math.exp(x)},ln(x){return Math.log(x)},log10(x){return Math.log(x)/Math.LN10},max(...args){let ret=args[0];if(typeof ret!=="number")ret=0;for(let i=1,len=args.length;i<len;++i){let n=args[i];if(typeof n!=="number")continue;if(ret<n)ret=n}return ret},min(...args){let ret=args[0];if(typeof ret!=="number")ret=0;for(let i=1,len=args.length;i<len;++i){let n=args[i];if(typeof n!=="number")continue;if(ret>
n)ret=n}return ret},clamp(x,l,u){return C3.clamp(x,l,u)},distance(x1,y1,x2,y2){return C3.distanceTo(x1,y1,x2,y2)},angle(x1,y1,x2,y2){return C3.toDegrees(C3.angleTo(x1,y1,x2,y2))},lerp(a,b,x){return C3.lerp(a,b,x)},unlerp(a,b,y){return C3.unlerp(a,b,y)},qarp(a,b,c,x){return C3.qarp(a,b,c,x)},cubic(a,b,c,d,x){return C3.cubic(a,b,c,d,x)},cosp(a,b,x){return C3.cosp(a,b,x)},anglediff(a,b){return C3.toDegrees(C3.angleDiff(C3.toRadians(a),C3.toRadians(b)))},anglelerp(a,b,x){return C3.toDegrees(C3.angleLerp(C3.toRadians(a),
C3.toRadians(b),x))},anglerotate(a,b,c){return C3.toDegrees(C3.angleRotate(C3.toRadians(a),C3.toRadians(b),C3.toRadians(c)))},setbit(n,b,v){n=n|0;b=b|0;v=v!==0?1:0;return n&~(1<<b)|v<<b},togglebit(n,b){n=n|0;b=b|0;return n^1<<b},getbit(n,b){n=n|0;b=b|0;return n&1<<b?1:0},newline(){return"\n"},uppercase(s){return typeof s==="string"?s.toUpperCase():""},lowercase(s){return typeof s==="string"?s.toLowerCase():""},left(text,n){return typeof text==="string"?text.substr(0,n):""},mid(text,index,count){if(typeof text!==
"string")return"";if(count<0)return text.substr(index);else return text.substr(index,count)},right(text,n){return typeof text==="string"?text.substr(text.length-n):""},trim(text){return typeof text==="string"?text.trim():""},tokenat(text,index,sep){if(typeof text!=="string"||typeof sep!=="string")return"";let arr=text.split(sep);index=Math.floor(index);if(index<0||index>=arr.length)return"";return arr[index]},tokencount(text,sep){if(typeof text!=="string"||typeof sep!=="string"||!text.length)return 0;
return text.split(sep).length},find(text,searchStr){if(typeof text==="string"&&typeof searchStr==="string")return text.search(new RegExp(C3.EscapeRegex(searchStr),"i"));else return-1},findcase(text,searchStr){if(typeof text==="string"&&typeof searchStr==="string")return text.search(new RegExp(C3.EscapeRegex(searchStr),""));else return-1},replace(text,find,replace){if(typeof text==="string"&&typeof find==="string"&&typeof replace==="string")return text.replace(new RegExp(C3.EscapeRegex(find),"gi"),
replace);else return typeof text==="string"?text:""},regexsearch(text,regex,flags){const cacheRegex=this.GetRegex(regex,flags);return text?text.search(cacheRegex):-1},regexreplace(text,regex,flags,replace){const cacheRegex=this.GetRegex(regex,flags);return text?text.replace(cacheRegex,replace):""},regexmatchcount(text,regex,flags){const matches=this.GetRegexMatches(text.toString(),regex,flags);return matches?matches.length:0},regexmatchat(text,regex,flags,index){index=Math.floor(index);const matches=
this.GetRegexMatches(text.toString(),regex,flags);if(!matches||index<0||index>=matches.length)return"";else return matches[index]},zeropad(n,d){let s=n<0?"-":"";if(n<0)n=-n;const zeroes=d-n.toString().length;s+="0".repeat(Math.max(zeroes,0));return s+n.toString()},urlencode(s){return encodeURIComponent(s)},urldecode(s){return decodeURIComponent(s)},dt(){return this._runtime._GetDtFast()},timescale(){return this._runtime.GetTimeScale()},wallclocktime(){return(Date.now()-this._runtime.GetStartTime())/
1E3},unixtime(){return Date.now()},time(){return this._runtime.GetGameTime()},tickcount(){return this._runtime.GetTickCount()},objectcount(){return this._runtime.GetObjectCount()},fps(){return this._runtime.GetFPS()},cpuutilisation(){return this._runtime.GetMainThreadTime()},gpuutilisation(){return this._runtime.GetGPUUtilisation()},windowwidth(){return this._runtime.GetCanvasManager().GetDeviceWidth()},windowheight(){return this._runtime.GetCanvasManager().GetDeviceHeight()},originalwindowwidth(){return this._runtime.GetOriginalViewportWidth()},
originalwindowheight(){return this._runtime.GetOriginalViewportHeight()},originalviewportwidth(){return this._runtime.GetOriginalViewportWidth()},originalviewportheight(){return this._runtime.GetOriginalViewportHeight()},scrollx(){return this._runtime.GetCurrentLayout().GetScrollX()},scrolly(){return this._runtime.GetCurrentLayout().GetScrollY()},layoutname(){return this._runtime.GetCurrentLayout().GetName()},layoutscale(){return this._runtime.GetCurrentLayout().GetScale()},layoutangle(){return C3.toDegrees(this._runtime.GetCurrentLayout().GetAngle())},
layoutwidth(){return this._runtime.GetCurrentLayout().GetWidth()},layoutheight(){return this._runtime.GetCurrentLayout().GetHeight()},viewportleft(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.GetViewport3D().getLeft():0},viewporttop(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.GetViewport3D().getTop():0},viewportright(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);
return layer?layer.GetViewport3D().getRight():0},viewportbottom(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.GetViewport3D().getBottom():0},viewportwidth(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.GetViewport3D().width():0},viewportheight(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.GetViewport3D().height():0},canvastolayerx(layerParam,x,y){const layer=
this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.CanvasCssToLayer(x,y)[0]:0},canvastolayery(layerParam,x,y){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.CanvasCssToLayer(x,y)[1]:0},layertocanvasx(layerParam,x,y){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.LayerToCanvasCss(x,y)[0]:0},layertocanvasy(layerParam,x,y){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.LayerToCanvasCss(x,
y)[1]:0},layerscale(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.GetOwnScale():0},layerangle(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?C3.toDegrees(layer.GetOwnAngle()):0},layeropacity(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.GetOpacity()*100:0},layerscalerate(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?
layer.GetScaleRate():0},layerscrollx(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.GetScrollX():0},layerscrolly(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.GetScrollY():0},layerparallaxx(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.GetParallaxX()*100:0},layerparallaxy(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);
return layer?layer.GetParallaxY()*100:0},layerzelevation(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.GetZElevation():0},layerindex(layerParam){const layer=this._runtime.GetCurrentLayout().GetLayer(layerParam);return layer?layer.GetIndex():-1},canvassnapshot(){const canvasManager=this._runtime.GetCanvasManager();if(!canvasManager)return"";return canvasManager.GetCanvasSnapshotUrl()},loopindex(name){const loopStack=this._loopStack;if(!loopStack.IsInLoop())return 0;
if(name){const loop=loopStack.FindByName(name);return loop?loop.GetIndex():0}else return loopStack.GetCurrent().GetIndex()},savestatejson(){return this._runtime.GetLastSaveJsonString()},callmapped(name,str,...paramResults){const mapEntry=this._GetFunctionMap(name.toLowerCase(),false);if(!mapEntry){console.warn(`[Construct 3] Call mapped function: map name '${name}' not found; returning 0`);return 0}let functionBlock=mapEntry.strMap.get(str.toLowerCase());if(!functionBlock)if(mapEntry.defaultFunc)functionBlock=
mapEntry.defaultFunc;else{console.warn(`[Construct 3] Call mapped function: no function associated with map '${name}' string '${str}'; returning 0 (consider setting a default)`);return 0}const returnType=functionBlock.GetReturnType();const defaultReturnValue=functionBlock.GetDefaultReturnValue();if(returnType===0){console.warn(`[Construct 3] Call mapped function: map '${name}' string '${str}' has no return type so cannot be called from an expression; returning 0`);return 0}if(!functionBlock.IsEnabled())return defaultReturnValue;
const runtime=this._runtime;const eventSheetManager=runtime.GetEventSheetManager();const currentEvent=eventSheetManager.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiersIncludingParents();const hasAnySolModifiers=solModifiers.length>0;if(hasAnySolModifiers)eventSheetManager.PushCleanSol(solModifiers);const calleeParameters=functionBlock.GetFunctionParameters();for(let i=paramResults.length,len=calleeParameters.length;i<len;++i)paramResults.push(calleeParameters[i].GetInitialValue());
const callEventBlock=functionBlock.GetEventBlock();const returnValue=callEventBlock.RunAsExpressionFunctionCall(callEventBlock.GetSolModifiersIncludingParents(),returnType,defaultReturnValue,...paramResults);if(hasAnySolModifiers)eventSheetManager.PopSol(solModifiers);return returnValue},loadingprogress(){return this._runtime.GetAssetManager().GetLoadProgress()},imageloadingprogress(){if(this._imagesLoadingTotal===0)return 1;return this._imagesLoadingComplete/this._imagesLoadingTotal},renderer(){if(this._runtime.GetWebGPURenderer())return"webgpu";
else return"webgl"},rendererdetail(){if(this._runtime.GetWebGPURenderer())return"<unavailable>";else return this._runtime.GetWebGLRenderer().GetUnmaskedRenderer()},imagememoryusage(){let ret=this._runtime.GetRenderer().GetEstimatedTextureMemoryUsage();return Math.round(100*ret/(1024*1024))/100},rgb(r,g,b){return C3.PackRGB(r,g,b)},rgbex(r,g,b){return C3.PackRGBEx(r/100,g/100,b/100)},rgba(r,g,b,a){return C3.PackRGBAEx(r/100,g/100,b/100,a/100)},rgbex255(r,g,b){return C3.PackRGBEx(r/255,g/255,b/255)},
rgba255(r,g,b,a){return C3.PackRGBAEx(r/255,g/255,b/255,a/255)},projectname(){return this._runtime.GetProjectName()},projectversion(){return this._runtime.GetProjectVersion()},currenteventsheetname(){return this._runtime.GetCurrentEvent().GetEventSheet().GetName()},currenteventnumber(){return this._runtime.GetCurrentEvent().GetDisplayNumber()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Sprite=class SpritePlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Sprite.Type=class SpriteType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass);this._animations=objectClass.GetAnimations()}Release(){C3.clearArray(this._animations);super.Release()}OnCreate(){for(const a of this._animations)a.LoadAllAssets(this._runtime)}LoadTextures(renderer){const opts={sampling:this._runtime.GetSampling()};return Promise.all(this._animations.map(a=>a.LoadAllTextures(renderer,opts)))}ReleaseTextures(){for(const a of this._animations)a.ReleaseAllTextures()}OnDynamicTextureLoadComplete(){this._UpdateAllCurrentTexture()}_UpdateAllCurrentTexture(){for(const inst of this._objectClass.instancesIncludingPendingCreate())inst.GetSdkInstance()._UpdateCurrentTexture()}FinishCondition(doPick){C3.Plugins.Sprite.FinishCollisionCondition(this,doPick)}};

}

{
'use strict';const C3=self.C3;const C3X=self.C3X;const INITIALLY_VISIBLE=0;const INITIAL_ANIMATION=1;const INITIAL_FRAME=2;const ENABLE_COLLISIONS=3;const tempRect=C3.New(C3.Rect);const tempQuad=C3.New(C3.Quad);const tempVec2=C3.New(C3.Vector2);const FLAG_PLAYING_FORWARDS=1<<0;const FLAG_ANIMATION_PLAYING=1<<1;const FLAG_ANIMATION_TRIGGER=1<<2;
C3.Plugins.Sprite.Instance=class SpriteInstance extends C3.SDKWorldInstanceBase{constructor(inst,properties){super(inst);let initiallyVisible=true;let initialAnimation="";let initialFrame=0;let collisionEnabled=true;if(properties){initiallyVisible=!!properties[INITIALLY_VISIBLE];initialAnimation=properties[INITIAL_ANIMATION];initialFrame=properties[INITIAL_FRAME];collisionEnabled=properties[ENABLE_COLLISIONS]}this._currentAnimation=this._objectClass.GetAnimationByName(initialAnimation)||this._objectClass.GetAnimations()[0];
this._currentFrameIndex=C3.clamp(initialFrame,0,this._currentAnimation.GetFrameCount()-1);this._currentAnimationFrame=this._currentAnimation.GetFrameAt(this._currentFrameIndex);const initialImageInfo=this._currentAnimationFrame.GetImageInfo();this._currentTexture=initialImageInfo.GetTexture();this._currentRcTex=initialImageInfo.GetTexRect();this._currentQuadTex=initialImageInfo.GetTexQuad();this.HandleWebGLContextLoss();inst.SetFlag(FLAG_ANIMATION_PLAYING,true);inst.SetFlag(FLAG_PLAYING_FORWARDS,
this._currentAnimation.GetSpeed()>=0);this._currentAnimationSpeed=Math.abs(this._currentAnimation.GetSpeed());this._currentAnimationRepeatTo=this._currentAnimation.GetRepeatTo();this._animationTimer=C3.New(C3.KahanSum);this._frameStartTime=0;this._animationRepeats=0;this._animTriggerName="";this._changeAnimFrameIndex=-1;this._changeAnimationName="";this._changeAnimationFrom=0;const wi=this.GetWorldInfo();this._bquadRef=wi.GetBoundingQuad();wi.SetVisible(initiallyVisible);wi.SetCollisionEnabled(collisionEnabled);
wi.SetOriginX(this._currentAnimationFrame.GetOriginX());wi.SetOriginY(this._currentAnimationFrame.GetOriginY());wi.SetSourceCollisionPoly(this._currentAnimationFrame.GetCollisionPoly());wi.SetBboxChanged();if((this._objectClass.GetAnimationCount()!==1||this._objectClass.GetAnimations()[0].GetFrameCount()!==1)&&this._currentAnimationSpeed!==0)this._StartTicking()}Release(){this._currentAnimation=null;this._currentAnimationFrame=null;this._currentTexture=null;this._animationTimer=null;super.Release()}GetCurrentImageInfo(){return this._currentAnimationFrame.GetImageInfo()}IsOriginalSizeKnown(){return true}OnWebGLContextLost(){this._currentTexture=
null}OnWebGLContextRestored(){this._UpdateCurrentTexture()}Draw(renderer){const texture=this._currentTexture;if(texture===null)return;renderer.SetTexture(texture);const wi=this.GetWorldInfo();if(wi.HasMesh())this._DrawMesh(wi,renderer);else this._DrawStandard(wi,renderer)}_DrawStandard(wi,renderer){let quad=this._bquadRef;if(this._runtime.IsPixelRoundingEnabled())quad=wi.PixelRoundQuad(quad);renderer.Quad4(quad,this._currentQuadTex)}_DrawMesh(wi,renderer){const transformedMesh=wi.GetTransformedMesh();
if(wi.IsMeshChanged()){wi.CalculateBbox(tempRect,tempQuad,false);let quad=tempQuad;if(this._runtime.IsPixelRoundingEnabled())quad=wi.PixelRoundQuad(quad);transformedMesh.CalculateTransformedMesh(wi.GetSourceMesh(),quad,this._currentQuadTex);wi.SetMeshChanged(false)}transformedMesh.Draw(renderer)}GetAnimationTime(){return this._animationTimer.Get()}IsAnimationPlaying(){return this._inst.GetFlag(FLAG_ANIMATION_PLAYING)}SetAnimationPlaying(e){this._inst.SetFlag(FLAG_ANIMATION_PLAYING,e)}IsPlayingForwards(){return this._inst.GetFlag(FLAG_PLAYING_FORWARDS)}SetPlayingForwards(e){this._inst.SetFlag(FLAG_PLAYING_FORWARDS,
e)}IsInAnimationTrigger(){return this._inst.GetFlag(FLAG_ANIMATION_TRIGGER)}SetInAnimationTrigger(e){this._inst.SetFlag(FLAG_ANIMATION_TRIGGER,e)}Tick(){if(this._changeAnimationName)this._DoChangeAnimation();if(this._changeAnimFrameIndex>=0)this._DoChangeAnimFrame();const currentAnimationSpeed=this._currentAnimationSpeed;if(!this.IsAnimationPlaying()||currentAnimationSpeed===0){this._StopTicking();return}const dt=this._runtime.GetDt(this._inst);this._animationTimer.Add(dt);const now=this.GetAnimationTime();
const prevFrame=this._currentAnimationFrame;const currentFrameTime=prevFrame.GetDuration()/currentAnimationSpeed;if(now<this._frameStartTime+currentFrameTime)return;const currentAnimation=this._currentAnimation;const repeatTo=this._currentAnimationRepeatTo;const frameCount=currentAnimation.GetFrameCount();const repeatCount=currentAnimation.GetRepeatCount();const isLooping=currentAnimation.IsLooping();const isPingPong=currentAnimation.IsPingPong();if(this.IsPlayingForwards())this._currentFrameIndex++;
else this._currentFrameIndex--;this._frameStartTime+=currentFrameTime;if(this._currentFrameIndex>=frameCount)if(isPingPong){this.SetPlayingForwards(false);this._currentFrameIndex=frameCount-2}else if(isLooping)this._currentFrameIndex=repeatTo;else{this._animationRepeats++;if(this._animationRepeats>=repeatCount)this._FinishAnimation(false);else this._currentFrameIndex=repeatTo}if(this._currentFrameIndex<0)if(isPingPong){this._currentFrameIndex=1;this.SetPlayingForwards(true);if(!isLooping){this._animationRepeats++;
if(this._animationRepeats>=repeatCount)this._FinishAnimation(true)}}else if(isLooping)this._currentFrameIndex=repeatTo;else{this._animationRepeats++;if(this._animationRepeats>=repeatCount)this._FinishAnimation(true);else this._currentFrameIndex=repeatTo}this._currentFrameIndex=C3.clamp(this._currentFrameIndex,0,frameCount-1);const nextFrame=currentAnimation.GetFrameAt(this._currentFrameIndex);if(now>this._frameStartTime+nextFrame.GetDuration()/currentAnimationSpeed)this._frameStartTime=now;this._OnFrameChanged(prevFrame,
nextFrame)}_FinishAnimation(reverse){this._currentFrameIndex=reverse?0:this._currentAnimation.GetFrameCount()-1;this.SetAnimationPlaying(false);this._animTriggerName=this._currentAnimation.GetName();this.SetInAnimationTrigger(true);this.Trigger(C3.Plugins.Sprite.Cnds.OnAnyAnimFinished);this.Trigger(C3.Plugins.Sprite.Cnds.OnAnimFinished);this.SetInAnimationTrigger(false);this._animationRepeats=0}_OnFrameChanged(prevFrame,nextFrame){if(prevFrame===nextFrame)return;const wi=this.GetWorldInfo();const prevImage=
prevFrame.GetImageInfo();const nextImage=nextFrame.GetImageInfo();const oldW=prevImage.GetWidth();const oldH=prevImage.GetHeight();const newW=nextImage.GetWidth();const newH=nextImage.GetHeight();if(oldW!==newW)wi.SetWidth(wi.GetWidth()*(newW/oldW));if(oldH!==newH)wi.SetHeight(wi.GetHeight()*(newH/oldH));wi.SetOriginX(nextFrame.GetOriginX());wi.SetOriginY(nextFrame.GetOriginY());wi.SetSourceCollisionPoly(nextFrame.GetCollisionPoly());wi.SetBboxChanged();this._currentAnimationFrame=nextFrame;this._currentTexture=
nextImage.GetTexture();this._currentRcTex=nextImage.GetTexRect();this._currentQuadTex=nextImage.GetTexQuad();const behaviorInstances=this.GetInstance().GetBehaviorInstances();for(let i=0,len=behaviorInstances.length;i<len;++i)behaviorInstances[i].OnSpriteFrameChanged(prevFrame,nextFrame);this.Trigger(C3.Plugins.Sprite.Cnds.OnFrameChanged);this._runtime.UpdateRender()}_StartAnim(from){this.SetAnimationPlaying(true);this._frameStartTime=this.GetAnimationTime();if(from===1&&this._currentFrameIndex!==
0){this._changeAnimFrameIndex=0;if(!this.IsInAnimationTrigger())this._DoChangeAnimFrame()}this._StartTicking()}_SetAnim(animName,from){this._changeAnimationName=animName;this._changeAnimationFrom=from;this._StartTicking();if(!this.IsInAnimationTrigger())this._DoChangeAnimation()}_GetCurrentAnimationName(){if(this._changeAnimationName)return this._changeAnimationName;else return this._currentAnimation.GetName()}_SetAnimFrame(frameNum){if(!isFinite(frameNum))return;this._changeAnimFrameIndex=frameNum;
if(!this.IsInAnimationTrigger())this._DoChangeAnimFrame()}_GetAnimFrame(){return this._currentFrameIndex}_SetAnimSpeed(s){this._currentAnimationSpeed=Math.abs(s);this.SetPlayingForwards(s>=0);if(this._currentAnimationSpeed>0)this._StartTicking()}_GetAnimSpeed(){return this.IsPlayingForwards()?this._currentAnimationSpeed:-this._currentAnimationSpeed}_SetAnimRepeatToFrame(f){f=C3.clamp(Math.floor(f),0,this._currentAnimation.GetFrameCount()-1);this._currentAnimationRepeatTo=f}_GetAnimRepeatToFrame(){return this._currentAnimationRepeatTo}_DoChangeAnimation(){const prevFrame=
this._currentAnimationFrame;const animation=this._objectClass.GetAnimationByName(this._changeAnimationName);this._changeAnimationName="";if(!animation)return;if(animation===this._currentAnimation&&this.IsAnimationPlaying())return;this._currentAnimation=animation;this.SetPlayingForwards(animation.GetSpeed()>=0);this._currentAnimationSpeed=Math.abs(animation.GetSpeed());this._currentAnimationRepeatTo=animation.GetRepeatTo();this._currentFrameIndex=C3.clamp(this._currentFrameIndex,0,this._currentAnimation.GetFrameCount()-
1);if(this._changeAnimationFrom===1)this._currentFrameIndex=0;this.SetAnimationPlaying(true);this._frameStartTime=this.GetAnimationTime();const nextFrame=this._currentAnimation.GetFrameAt(this._currentFrameIndex);this._OnFrameChanged(prevFrame,nextFrame)}_DoChangeAnimFrame(){const prevFrame=this._currentAnimationFrame;const prevFrameIndex=this._currentFrameIndex;this._currentFrameIndex=C3.clamp(Math.floor(this._changeAnimFrameIndex),0,this._currentAnimation.GetFrameCount()-1);this._changeAnimFrameIndex=
-1;if(prevFrameIndex===this._currentFrameIndex)return;const nextFrame=this._currentAnimation.GetFrameAt(this._currentFrameIndex);this._OnFrameChanged(prevFrame,nextFrame);this._frameStartTime=this.GetAnimationTime()}_UpdateCurrentTexture(){const curImageInfo=this._currentAnimationFrame.GetImageInfo();this._currentTexture=curImageInfo.GetTexture();this._currentRcTex=curImageInfo.GetTexRect();this._currentQuadTex=curImageInfo.GetTexQuad();this.GetWorldInfo().SetMeshChanged(true)}GetTexture(){return this._currentTexture}GetTexRect(){return this._currentRcTex}GetTexQuad(){return this._currentQuadTex}GetImagePointCount(){return this._currentAnimationFrame.GetImagePointCount()}GetImagePoint(nameOrIndex){const frame=
this._currentAnimationFrame;const wi=this.GetWorldInfo();let ip=null;if(typeof nameOrIndex==="string")ip=frame.GetImagePointByName(nameOrIndex);else if(typeof nameOrIndex==="number")ip=frame.GetImagePointByIndex(nameOrIndex-1);else throw new TypeError("expected string or number");if(!ip)return[wi.GetX(),wi.GetY()];tempVec2.copy(ip.GetVec2());if(wi.HasMesh()){const [tx,ty]=wi.GetSourceMesh().TransformPoint(tempVec2.getX(),tempVec2.getY());tempVec2.set(tx,ty)}tempVec2.offset(-frame.GetOriginX(),-frame.GetOriginY());
tempVec2.scale(wi.GetWidth(),wi.GetHeight());tempVec2.rotate(wi.GetAngle());tempVec2.offset(wi.GetX(),wi.GetY());return[tempVec2.getX(),tempVec2.getY()]}GetCollisionPolyPointCount(){return this.GetWorldInfo().GetTransformedCollisionPoly().pointCount()}GetCollisionPolyPoint(index){index=Math.floor(index);const wi=this.GetWorldInfo();const poly=wi.GetTransformedCollisionPoly();const pointCount=poly.pointCount();if(index===pointCount)index=0;if(index<0||index>=pointCount)return[0,0];const pointsArr=
poly.pointsArr();return[pointsArr[index*2+0]+wi.GetX(),pointsArr[index*2+1]+wi.GetY()]}GetDebuggerProperties(){const Acts=C3.Plugins.Sprite.Acts;const prefix="plugins.sprite.debugger.animation-properties";return[{title:prefix+".title",properties:[{name:prefix+".current-animation",value:this._currentAnimation.GetName(),onedit:v=>this.CallAction(Acts.SetAnim,v,0)},{name:prefix+".current-frame",value:this._currentFrameIndex,onedit:v=>this.CallAction(Acts.SetAnimFrame,v)},{name:prefix+".is-playing",value:this.IsAnimationPlaying(),
onedit:v=>v?this.CallAction(Acts.StartAnim,0):this.CallAction(Acts.StopAnim)},{name:prefix+".speed",value:this._currentAnimationSpeed,onedit:v=>this.CallAction(Acts.SetAnimSpeed,v)},{name:prefix+".repeats",value:this._animationRepeats,onedit:v=>this._animationRepeats=v}]}]}SaveToJson(){const o={"a":this._currentAnimation.GetSID()};if(this._frameStartTime!==0)o["fs"]=this._frameStartTime;const animTime=this.GetAnimationTime();if(animTime!==0)o["at"]=animTime;if(this._currentFrameIndex!==0)o["f"]=this._currentFrameIndex;
if(this._currentAnimationSpeed!==0)o["cas"]=this._currentAnimationSpeed;if(this._animationRepeats!==1)o["ar"]=this._animationRepeats;if(this._currentAnimationRepeatTo!==0)o["rt"]=this._currentAnimationRepeatTo;if(!this.IsAnimationPlaying())o["ap"]=this.IsAnimationPlaying();if(!this.IsPlayingForwards())o["af"]=this.IsPlayingForwards();const wi=this.GetWorldInfo();if(wi.IsCollisionEnabled())o["ce"]=wi.IsCollisionEnabled();return o}LoadFromJson(o){const anim=this.GetObjectClass().GetAnimationBySID(o["a"]);
if(anim)this._currentAnimation=anim;this._frameStartTime=o.hasOwnProperty("fs")?o["fs"]:0;this._animationTimer.Set(o.hasOwnProperty("at")?o["at"]:0);const frameIndex=o.hasOwnProperty("f")?o["f"]:0;this._currentFrameIndex=C3.clamp(frameIndex,0,this._currentAnimation.GetFrameCount()-1);this._currentAnimationSpeed=o.hasOwnProperty("cas")?o["cas"]:0;this._animationRepeats=o.hasOwnProperty("ar")?o["ar"]:1;const repeatToIndex=o.hasOwnProperty("rt")?o["rt"]:0;this._currentAnimationRepeatTo=C3.clamp(repeatToIndex,
0,this._currentAnimation.GetFrameCount()-1);this.SetAnimationPlaying(o.hasOwnProperty("ap")?!!o["ap"]:true);this.SetPlayingForwards(o.hasOwnProperty("af")?!!o["af"]:true);const nextFrame=this._currentAnimation.GetFrameAt(this._currentFrameIndex);this._currentAnimationFrame=nextFrame;this._UpdateCurrentTexture();const wi=this.GetWorldInfo();wi.SetOriginX(nextFrame.GetOriginX());wi.SetOriginY(nextFrame.GetOriginY());wi.SetSourceCollisionPoly(nextFrame.GetCollisionPoly());wi.SetCollisionEnabled(!!o["ce"])}GetPropertyValueByIndex(index){const wi=
this.GetWorldInfo();switch(index){case ENABLE_COLLISIONS:return wi.IsCollisionEnabled();case INITIAL_FRAME:return C3.clamp(this._currentFrameIndex,0,this._currentAnimation.GetFrameCount()-1)}}SetPropertyValueByIndex(index,value){const wi=this.GetWorldInfo();switch(index){case ENABLE_COLLISIONS:wi.SetCollisionEnabled(!!value);break;case INITIAL_FRAME:this.SetAnimationPlaying(false);const totalFrames=this._currentAnimation.GetFrameCount()-1;const nextIndex=value=C3.clamp(value,0,totalFrames);const prevFrame=
this._currentAnimation.GetFrameAt(this._currentFrameIndex);const nextFrame=this._currentAnimation.GetFrameAt(nextIndex);this._OnFrameChanged(prevFrame,nextFrame);this._currentFrameIndex=C3.clamp(nextIndex,0,totalFrames);break}}GetScriptInterfaceClass(){return self.ISpriteInstance}};const map=new WeakMap;const ANIM_FROM_MODES=new Map([["current-frame",0],["beginning",1]]);
self.ISpriteInstance=class ISpriteInstance extends self.IWorldInstance{constructor(){super();map.set(this,self.IInstance._GetInitInst().GetSdkInstance())}getImagePointCount(){return map.get(this).GetImagePointCount()}getImagePointX(nameOrIndex){if(typeof nameOrIndex!=="string"&&typeof nameOrIndex!=="number")throw new TypeError("expected string or number");return map.get(this).GetImagePoint(nameOrIndex)[0]}getImagePointY(nameOrIndex){if(typeof nameOrIndex!=="string"&&typeof nameOrIndex!=="number")throw new TypeError("expected string or number");
return map.get(this).GetImagePoint(nameOrIndex)[1]}getImagePoint(nameOrIndex){if(typeof nameOrIndex!=="string"&&typeof nameOrIndex!=="number")throw new TypeError("expected string or number");return map.get(this).GetImagePoint(nameOrIndex)}getPolyPointCount(){return map.get(this).GetCollisionPolyPointCount()}getPolyPointX(index){C3X.RequireFiniteNumber(index);return map.get(this).GetCollisionPolyPoint(index)[0]}getPolyPointY(index){C3X.RequireFiniteNumber(index);return map.get(this).GetCollisionPolyPoint(index)[1]}getPolyPoint(index){C3X.RequireFiniteNumber(index);
return map.get(this).GetCollisionPolyPoint(index)}stopAnimation(){map.get(this).SetAnimationPlaying(false)}startAnimation(from="current-frame"){C3X.RequireString(from);const f=ANIM_FROM_MODES.get(from);if(typeof f==="undefined")throw new Error("invalid mode");map.get(this)._StartAnim(f)}setAnimation(name,from="beginning"){C3X.RequireString(name);C3X.RequireString(from);const f=ANIM_FROM_MODES.get(from);if(typeof f==="undefined")throw new Error("invalid mode");map.get(this)._SetAnim(name,f)}get animationName(){return map.get(this)._GetCurrentAnimationName()}set animationFrame(frameIndex){C3X.RequireFiniteNumber(frameIndex);
map.get(this)._SetAnimFrame(frameIndex)}get animationFrame(){return map.get(this)._GetAnimFrame()}set animationSpeed(s){C3X.RequireFiniteNumber(s);map.get(this)._SetAnimSpeed(s)}get animationSpeed(){return map.get(this)._GetAnimSpeed()}set animationRepeatToFrame(f){C3X.RequireFiniteNumber(f);map.get(this)._SetAnimRepeatToFrame(f)}get animationRepeatToFrame(){return map.get(this)._GetAnimRepeatToFrame()}get imageWidth(){return map.get(this).GetCurrentImageInfo().GetWidth()}get imageHeight(){return map.get(this).GetCurrentImageInfo().GetHeight()}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Sprite.Cnds={IsAnimPlaying(animName){return C3.equalsNoCase(this._GetCurrentAnimationName(),animName)},CompareFrame(cmp,frameNum){return C3.compare(this._currentFrameIndex,cmp,frameNum)},CompareAnimSpeed(cmp,x){return C3.compare(this._GetAnimSpeed(),cmp,x)},OnAnimFinished(animName){return C3.equalsNoCase(this._animTriggerName,animName)},OnAnyAnimFinished(){return true},OnFrameChanged(){return true},IsMirrored(){return this.GetWorldInfo().GetWidth()<0},IsFlipped(){return this.GetWorldInfo().GetHeight()<0},
OnURLLoaded(){return true},OnURLFailed(){return true},IsCollisionEnabled(){return this.GetWorldInfo().IsCollisionEnabled()}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Sprite.Acts={Spawn(objectClass,layer,imgPt,createHierarchy){if(!objectClass||!layer)return;const [imgPtX,imgPtY]=this.GetImagePoint(imgPt);const inst=this._runtime.CreateInstance(objectClass,layer,imgPtX,imgPtY,createHierarchy);if(!inst)return;if(createHierarchy)layer.SortAndAddInstancesByZIndex(inst);if(objectClass.GetPlugin().IsRotatable()){const instWi=inst.GetWorldInfo();instWi.SetAngle(this.GetWorldInfo().GetAngle());instWi.SetBboxChanged()}const eventSheetManager=this._runtime.GetEventSheetManager();
eventSheetManager.BlockFlushingInstances(true);inst._TriggerOnCreatedOnSelfAndRelated();eventSheetManager.BlockFlushingInstances(false);const act=this._runtime.GetCurrentAction();const actData=act.GetSavedDataMap();let resetSol=false;if(!actData.has("Spawn_LastExec")||actData.get("Spawn_LastExec")<this._runtime.GetExecCount()){resetSol=true;actData.set("Spawn_LastExec",this._runtime.GetExecCount())}if(objectClass!==this.GetObjectClass()){const sol=objectClass.GetCurrentSol();sol._SetSelectAll(false);
const solInstances=sol._GetOwnInstances();if(resetSol){C3.clearArray(solInstances);solInstances.push(inst)}else solInstances.push(inst);if(inst.IsInContainer())for(const s of inst.siblings()){const sol2=s.GetObjectClass().GetCurrentSol();if(resetSol)sol2.SetSinglePicked(s);else{sol2._SetSelectAll(false);sol2._PushInstance(s)}}}},StopAnim(){this.SetAnimationPlaying(false)},StartAnim(from){this._StartAnim(from)},SetAnim(animName,from){this._SetAnim(animName,from)},SetAnimFrame(frameNum){this._SetAnimFrame(frameNum)},
SetAnimSpeed(s){this._SetAnimSpeed(s)},SetAnimRepeatToFrame(f){this._SetAnimRepeatToFrame(f)},SetMirrored(m){const wi=this.GetWorldInfo();const oldW=wi.GetWidth();const newW=Math.abs(oldW)*(m===0?-1:1);if(oldW===newW)return;wi.SetWidth(newW);wi.SetBboxChanged()},SetFlipped(f){const wi=this.GetWorldInfo();const oldH=wi.GetHeight();const newH=Math.abs(oldH)*(f===0?-1:1);if(oldH===newH)return;wi.SetHeight(newH);wi.SetBboxChanged()},SetScale(s){const frame=this._currentAnimationFrame;const imageInfo=
frame.GetImageInfo();const wi=this.GetWorldInfo();const mirrorFactor=wi.GetWidth()<0?-1:1;const flipFactor=wi.GetHeight()<0?-1:1;const newWidth=imageInfo.GetWidth()*s*mirrorFactor;const newHeight=imageInfo.GetHeight()*s*flipFactor;if(wi.GetWidth()!==newWidth||wi.GetHeight()!==newHeight){wi.SetSize(newWidth,newHeight);wi.SetBboxChanged()}},async LoadURL(url,resize,crossOrigin){const curAnimFrame=this._currentAnimationFrame;const curImageInfo=curAnimFrame.GetImageInfo();const wi=this.GetWorldInfo();
const runtime=this._runtime;if(curImageInfo.GetURL()===url){if(resize===0){wi.SetSize(curImageInfo.GetWidth(),curImageInfo.GetHeight());wi.SetBboxChanged()}this.Trigger(C3.Plugins.Sprite.Cnds.OnURLLoaded);return}const imageInfo=C3.New(C3.ImageInfo);try{await imageInfo.LoadDynamicAsset(runtime,url);if(!imageInfo.IsLoaded())throw new Error("image failed to load");await imageInfo.LoadStaticTexture(runtime.GetRenderer(),{sampling:this._runtime.GetSampling()})}catch(err){console.error("Load image from URL failed: ",
err);this.Trigger(C3.Plugins.Sprite.Cnds.OnURLFailed);return}curImageInfo.ReplaceWith(imageInfo);this._sdkType._UpdateAllCurrentTexture();if(!this.WasReleased()&&resize===0){wi.SetSize(curImageInfo.GetWidth(),curImageInfo.GetHeight());wi.SetBboxChanged()}runtime.UpdateRender();if(!this.WasReleased())await this.TriggerAsync(C3.Plugins.Sprite.Cnds.OnURLLoaded)},SetCollisions(e){this.GetWorldInfo().SetCollisionEnabled(e)},SetSolidCollisionFilter(mode,tags){this.GetWorldInfo().SetSolidCollisionFilter(mode===
0,tags)},SetEffect(effect){this.GetWorldInfo().SetBlendMode(effect);this._runtime.UpdateRender()}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Sprite.Exps={AnimationFrame(){return this._currentFrameIndex},AnimationFrameCount(){return this._currentAnimation.GetFrameCount()},AnimationName(){return this._currentAnimation.GetName()},AnimationSpeed(){return this._GetAnimSpeed()},OriginalAnimationSpeed(){return this._currentAnimation.GetSpeed()},ImagePointX(imgpt){return this.GetImagePoint(imgpt)[0]},ImagePointY(imgpt){return this.GetImagePoint(imgpt)[1]},ImagePointCount(){return this.GetImagePointCount()},ImageWidth(){return this.GetCurrentImageInfo().GetWidth()},
ImageHeight(){return this.GetCurrentImageInfo().GetHeight()},PolyPointXAt(i){return this.GetCollisionPolyPoint(i)[0]},PolyPointYAt(i){return this.GetCollisionPolyPoint(i)[1]},PolyPointCount(){return this.GetCollisionPolyPointCount()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Text=class TextPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Text.Type=class TextType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){}LoadTextures(renderer){}ReleaseTextures(){}};

}

{
'use strict';const C3=self.C3;const C3X=self.C3X;const TEMP_COLOR_ARRAY=[0,0,0];const TEXT=0;const ENABLE_BBCODE=1;const FONT=2;const SIZE=3;const LINE_HEIGHT=4;const BOLD=5;const ITALIC=6;const COLOR=7;const HORIZONTAL_ALIGNMENT=8;const VERTICAL_ALIGNMENT=9;const WRAPPING=10;const INITIALLY_VISIBLE=11;const ORIGIN=12;const HORIZONTAL_ALIGNMENTS=["left","center","right"];const VERTICAL_ALIGNMENTS=["top","center","bottom"];const WORD_WRAP=0;const CHARACTER_WRAP=1;const tempRect=new C3.Rect;
const tempQuad=new C3.Quad;const tempColor=new C3.Color;
C3.Plugins.Text.Instance=class TextInstance extends C3.SDKWorldInstanceBase{constructor(inst,properties){super(inst);this._text="";this._enableBBcode=true;this._faceName="Arial";this._ptSize=12;this._lineHeightOffset=0;this._isBold=false;this._isItalic=false;this._color=C3.New(C3.Color);this._horizontalAlign=0;this._verticalAlign=0;this._wrapByWord=true;this._typewriterStartTime=-1;this._typewriterEndTime=-1;this._typewriterLength=0;this._rendererText=C3.New(C3.Gfx.RendererText,this._runtime.GetRenderer(),
{timeout:5});this._rendererText.ontextureupdate=()=>this._runtime.UpdateRender();this._rendererText.SetIsAsync(false);if(properties){this._text=properties[TEXT];this._enableBBcode=!!properties[ENABLE_BBCODE];this._faceName=properties[FONT];this._ptSize=properties[SIZE];this._lineHeightOffset=properties[LINE_HEIGHT];this._isBold=!!properties[BOLD];this._isItalic=!!properties[ITALIC];this._horizontalAlign=properties[HORIZONTAL_ALIGNMENT];this._verticalAlign=properties[VERTICAL_ALIGNMENT];this._wrapByWord=
properties[WRAPPING]===WORD_WRAP;const v=properties[COLOR];this._color.setRgb(v[0],v[1],v[2]);this.GetWorldInfo().SetVisible(properties[INITIALLY_VISIBLE])}this._UpdateTextSettings()}Release(){this._CancelTypewriter();this._rendererText.Release();this._rendererText=null;super.Release()}_UpdateTextSettings(){const rendererText=this._rendererText;rendererText.SetText(this._text);rendererText.SetBBCodeEnabled(this._enableBBcode);rendererText.SetFontName(this._faceName);rendererText.SetLineHeight(this._lineHeightOffset);
rendererText.SetBold(this._isBold);rendererText.SetItalic(this._isItalic);rendererText.SetColor(this._color);rendererText.SetHorizontalAlignment(HORIZONTAL_ALIGNMENTS[this._horizontalAlign]);rendererText.SetVerticalAlignment(VERTICAL_ALIGNMENTS[this._verticalAlign]);rendererText.SetWordWrapMode(this._wrapByWord?"word":"character")}_UpdateTextSize(){const wi=this.GetWorldInfo();this._rendererText.SetFontSize(this._ptSize);this._rendererText.SetFontSizeScale(wi.GetSceneGraphScale());const layer=wi.GetLayer();
const textZoom=layer.GetRenderScale()*layer.Get2DScaleFactorToZ(wi.GetTotalZElevation());this._rendererText.SetSize(wi.GetWidth(),wi.GetHeight(),textZoom)}Draw(renderer){const wi=this.GetWorldInfo();this._UpdateTextSize();const texture=this._rendererText.GetTexture();if(!texture)return;const layer=wi.GetLayer();if(wi.GetAngle()===0&&layer.GetAngle()===0&&wi.GetTotalZElevation()===0&&!wi.HasMesh()&&layer.RendersIn2DMode()){const quad=wi.GetBoundingQuad();const [dl,dt]=layer.LayerToDrawSurface(quad.getTlx(),
quad.getTly());const [dr,db]=layer.LayerToDrawSurface(quad.getBrx(),quad.getBry());const offX=dl-Math.round(dl);const offY=dt-Math.round(dt);tempRect.set(dl,dt,dr,db);tempRect.offset(-offX,-offY);tempQuad.setFromRect(tempRect);const [rtWidth,rtHeight]=renderer.GetRenderTargetSize(renderer.GetRenderTarget());this._runtime.GetCanvasManager().SetDeviceTransform(renderer,rtWidth,rtHeight);renderer.SetTexture(texture);renderer.Quad3(tempQuad,this._rendererText.GetTexRect());layer._SetTransform(renderer)}else{renderer.SetTexture(texture);
if(wi.HasMesh())this._DrawMesh(wi,renderer);else this._DrawStandard(wi,renderer)}}_DrawStandard(wi,renderer){let quad=wi.GetBoundingQuad();if(this._runtime.IsPixelRoundingEnabled())quad=this._PixelRoundQuad(quad);renderer.Quad3(quad,this._rendererText.GetTexRect())}_DrawMesh(wi,renderer){const transformedMesh=wi.GetTransformedMesh();if(wi.IsMeshChanged()){wi.CalculateBbox(tempRect,tempQuad,false);let quad=tempQuad;if(this._runtime.IsPixelRoundingEnabled())quad=this._PixelRoundQuad(quad);transformedMesh.CalculateTransformedMesh(wi.GetSourceMesh(),
quad,this._rendererText.GetTexRect());wi.SetMeshChanged(false)}transformedMesh.Draw(renderer)}_PixelRoundQuad(quad){const offX=quad.getTlx()-Math.round(quad.getTlx());const offY=quad.getTly()-Math.round(quad.getTly());if(offX===0&&offY===0)return quad;else{tempQuad.copy(quad);tempQuad.offset(-offX,-offY);return tempQuad}}SaveToJson(){const o={"t":this._text,"c":this._color.toJSON(),"fn":this._faceName,"ps":this._ptSize};if(this._enableBBcode)o["bbc"]=this._enableBBcode;if(this._horizontalAlign!==
0)o["ha"]=this._horizontalAlign;if(this._verticalAlign!==0)o["va"]=this._verticalAlign;if(!this._wrapByWord)o["wr"]=this._wrapByWord;if(this._lineHeightOffset!==0)o["lho"]=this._lineHeightOffset;if(this._isBold)o["b"]=this._isBold;if(this._isItalic)o["i"]=this._isItalic;if(this._typewriterEndTime!==-1)o["tw"]={"st":this._typewriterStartTime,"en":this._typewriterEndTime,"l":this._typewriterLength};return o}LoadFromJson(o){this._CancelTypewriter();this._text=o["t"],this._color.setFromJSON(o["c"]);this._faceName=
o["fn"],this._ptSize=o["ps"];this._enableBBcode=o.hasOwnProperty("bbc")?o["bbc"]:false;this._horizontalAlign=o.hasOwnProperty("ha")?o["ha"]:0;this._verticalAlign=o.hasOwnProperty("va")?o["va"]:0;this._wrapByWord=o.hasOwnProperty("wr")?o["wr"]:true;this._lineHeightOffset=o.hasOwnProperty("lho")?o["lho"]:0;this._isBold=o.hasOwnProperty("b")?o["b"]:false;this._isItalic=o.hasOwnProperty("i")?o["i"]:false;if(o.hasOwnProperty("tw")){const tw=o["tw"];this._typewriterStartTime=tw["st"];this._typewriterEndTime=
tw["en"];this._typewriterLength=tw["l"]}this._UpdateTextSettings();if(this._typewriterEndTime!==-1)this._StartTicking()}GetPropertyValueByIndex(index){switch(index){case TEXT:return this._text;case ENABLE_BBCODE:return this._enableBBcode;case FONT:return this._faceName;case SIZE:return this._ptSize;case LINE_HEIGHT:return this._lineHeightOffset;case BOLD:return this._isBold;case ITALIC:return this._isItalic;case COLOR:TEMP_COLOR_ARRAY[0]=this._color.getR();TEMP_COLOR_ARRAY[1]=this._color.getG();TEMP_COLOR_ARRAY[2]=
this._color.getB();return TEMP_COLOR_ARRAY;case HORIZONTAL_ALIGNMENT:return this._horizontalAlign;case VERTICAL_ALIGNMENT:return this._verticalAlign;case WRAPPING:return this._wrapByWord?CHARACTER_WRAP:WORD_WRAP}}SetPropertyValueByIndex(index,value){switch(index){case TEXT:if(this._text===value)return;this._text=value;this._UpdateTextSettings();break;case ENABLE_BBCODE:if(this._enableBBcode===!!value)return;this._enableBBcode=!!value;this._UpdateTextSettings();break;case FONT:if(this._faceName===
value)return;this._faceName=value;this._UpdateTextSettings();break;case SIZE:if(this._ptSize===value)return;this._ptSize=value;this._UpdateTextSettings();break;case LINE_HEIGHT:if(this._lineHeightOffset===value)return;this._lineHeightOffset=value;this._UpdateTextSettings();break;case BOLD:if(this._isBold===!!value)return;this._isBold=!!value;this._UpdateTextSettings();break;case ITALIC:if(this._isItalic===!!value)return;this._isItalic=!!value;this._UpdateTextSettings();break;case COLOR:const c=this._color;
const v=value;if(c.getR()===v[0]&&c.getG()===v[1]&&c.getB()===v[2])return;this._color.setRgb(v[0],v[1],v[2]);this._UpdateTextSettings();break;case HORIZONTAL_ALIGNMENT:if(this._horizontalAlign===value)return;this._horizontalAlign=value;this._UpdateTextSettings();break;case VERTICAL_ALIGNMENT:if(this._verticalAlign===value)return;this._verticalAlign=value;this._UpdateTextSettings();break;case WRAPPING:if(this._wrapByWord===(value===WORD_WRAP))return;this._wrapByWord=value===WORD_WRAP;this._UpdateTextSettings();
break}}SetPropertyColorOffsetValueByIndex(index,r,g,b){if(r===0&&g===0&&b===0)return;switch(index){case COLOR:this._color.addRgb(r,g,b);this._UpdateTextSettings();break}}_SetText(text){if(this._text===text)return;this._text=text;this._rendererText.SetText(text);this._runtime.UpdateRender()}GetText(){return this._text}_StartTypewriter(text,duration){this._SetText(text);this._typewriterStartTime=this._runtime.GetWallTime();this._typewriterEndTime=this._typewriterStartTime+duration/this.GetInstance().GetActiveTimeScale();
this._typewriterLength=C3.BBString.StripAnyTags(text).length;this._rendererText.SetDrawMaxCharacterCount(0);this._StartTicking()}_CancelTypewriter(){this._typewriterStartTime=-1;this._typewriterEndTime=-1;this._typewriterLength=0;this._rendererText.SetDrawMaxCharacterCount(-1);this._StopTicking()}_FinishTypewriter(){if(this._typewriterEndTime===-1)return;this._CancelTypewriter();this.Trigger(C3.Plugins.Text.Cnds.OnTypewriterTextFinished);this._runtime.UpdateRender()}_SetFontFace(face){if(this._faceName===
face)return;this._faceName=face;this._rendererText.SetFontName(face);this._runtime.UpdateRender()}_GetFontFace(){return this._faceName}_SetBold(b){b=!!b;if(this._isBold===b)return;this._isBold=b;this._rendererText.SetBold(b);this._runtime.UpdateRender()}_IsBold(){return this._isBold}_SetItalic(i){i=!!i;if(this._isItalic===i)return;this._isItalic=i;this._rendererText.SetItalic(i);this._runtime.UpdateRender()}_IsItalic(){return this._isItalic}_SetFontSize(size){if(this._ptSize===size)return;this._ptSize=
size;this._runtime.UpdateRender()}_GetFontSize(){return this._ptSize}_SetFontColor(color){if(this._color.equalsIgnoringAlpha(color))return;this._color.copyRgb(color);this._rendererText.SetColor(this._color);this._runtime.UpdateRender()}_GetFontColor(){return this._color}_SetLineHeight(lho){if(this._lineHeightOffset===lho)return;this._lineHeightOffset=lho;this._UpdateTextSettings();this._runtime.UpdateRender()}_GetLineHeight(){return this._lineHeightOffset}_SetHAlign(h){if(this._horizontalAlign===
h)return;this._horizontalAlign=h;this._UpdateTextSettings();this._runtime.UpdateRender()}_GetHAlign(){return this._horizontalAlign}_SetVAlign(v){if(this._verticalAlign===v)return;this._verticalAlign=v;this._UpdateTextSettings();this._runtime.UpdateRender()}_GetVAlign(){return this._verticalAlign}_SetWrapByWord(w){w=!!w;if(this._wrapByWord===w)return;this._wrapByWord=w;this._UpdateTextSettings();this._runtime.UpdateRender()}_IsWrapByWord(){return this._wrapByWord}_GetTextWidth(){this._UpdateTextSize();
return this._rendererText.GetTextWidth()}_GetTextHeight(){this._UpdateTextSize();return this._rendererText.GetTextHeight()}Tick(){const wallTime=this._runtime.GetWallTime();if(wallTime>=this._typewriterEndTime){this._CancelTypewriter();this.Trigger(C3.Plugins.Text.Cnds.OnTypewriterTextFinished);this._runtime.UpdateRender()}else{let displayLength=C3.relerp(this._typewriterStartTime,this._typewriterEndTime,wallTime,0,this._typewriterLength);displayLength=Math.floor(displayLength);if(displayLength!==
this._rendererText.GetDrawMaxCharacterCount()){this._rendererText.SetDrawMaxCharacterCount(displayLength);this._runtime.UpdateRender()}}}GetDebuggerProperties(){const prefix="plugins.text";return[{title:prefix+".name",properties:[{name:prefix+".properties.text.name",value:this._text,onedit:v=>this._SetText(v)}]}]}GetScriptInterfaceClass(){return self.ITextInstance}};const map=new WeakMap;const SCRIPT_HORIZONTAL_ALIGNMENTS=new Map([["left",0],["center",1],["right",2]]);
const SCRIPT_VERTICAL_ALIGNMENTS=new Map([["top",0],["center",1],["bottom",2]]);const SCRIPT_WRAP_MODES=new Map([["word",true],["character",false]]);
self.ITextInstance=class ITextInstance extends self.IWorldInstance{constructor(){super();map.set(this,self.IInstance._GetInitInst().GetSdkInstance())}get text(){return map.get(this).GetText()}set text(str){C3X.RequireString(str);const inst=map.get(this);inst._CancelTypewriter();inst._SetText(str)}typewriterText(str,duration){C3X.RequireString(str);C3X.RequireFiniteNumber(duration);const inst=map.get(this);inst._CancelTypewriter();inst._StartTypewriter(str,duration)}typewriterFinish(){map.get(this)._FinishTypewriter()}set fontFace(str){C3X.RequireString(str);
map.get(this)._SetFontFace(str)}get fontFace(){return map.get(this)._GetFontFace()}set isBold(b){map.get(this)._SetBold(b)}get isBold(){return map.get(this)._IsBold()}set isItalic(i){map.get(this)._SetItalic(i)}get isItalic(){return map.get(this)._IsItalic()}set sizePt(pt){C3X.RequireFiniteNumber(pt);map.get(this)._SetFontSize(pt)}get sizePt(){return map.get(this)._GetFontSize()}set fontColor(arr){C3X.RequireArray(arr);if(arr.length<3)throw new Error("expected 3 elements");tempColor.setRgb(arr[0],
arr[1],arr[2]);map.get(this)._SetFontColor(tempColor)}get fontColor(){const c=map.get(this)._GetFontColor();return[c.getR(),c.getG(),c.getB()]}set lineHeight(lho){C3X.RequireFiniteNumber(lho);map.get(this)._SetLineHeight(lho)}get lineHeight(){return map.get(this)._GetLineHeight()}set horizontalAlign(str){C3X.RequireString(str);const h=SCRIPT_HORIZONTAL_ALIGNMENTS.get(str);if(typeof h==="undefined")throw new Error("invalid mode");map.get(this)._SetHAlign(h)}get horizontalAlign(){return HORIZONTAL_ALIGNMENTS[map.get(this)._GetHAlign()]}set verticalAlign(str){C3X.RequireString(str);
const v=SCRIPT_VERTICAL_ALIGNMENTS.get(str);if(typeof v==="undefined")throw new Error("invalid mode");map.get(this)._SetVAlign(v)}get verticalAlign(){return VERTICAL_ALIGNMENTS[map.get(this)._GetVAlign()]}set wordWrapMode(str){C3X.RequireString(str);const isWrapByWord=SCRIPT_WRAP_MODES.get(str);if(typeof isWrapByWord==="undefined")throw new Error("invalid mode");map.get(this)._SetWrapByWord(isWrapByWord)}get wordWrapMode(){return map.get(this)._IsWrapByWord()?"word":"character"}get textWidth(){return map.get(this)._GetTextWidth()}get textHeight(){return map.get(this)._GetTextHeight()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Text.Cnds={CompareText(str,caseSensitive){if(caseSensitive)return this._text===str;else return C3.equalsNoCase(this._text,str)},IsRunningTypewriterText(){return this._typewriterEndTime!==-1},OnTypewriterTextFinished(){return true}};

}

{
'use strict';const C3=self.C3;const tempColor=C3.New(C3.Color);
C3.Plugins.Text.Acts={SetText(param){this._CancelTypewriter();if(typeof param==="number"&&param<1E9)param=Math.round(param*1E10)/1E10;this._SetText(param.toString())},AppendText(param){this._CancelTypewriter();if(typeof param==="number"&&param<1E9)param=Math.round(param*1E10)/1E10;param=param.toString();if(!param)return;this._SetText(this._text+param)},TypewriterText(param,duration){this._CancelTypewriter();if(typeof param==="number"&&param<1E9)param=Math.round(param*1E10)/1E10;this._StartTypewriter(param.toString(),
duration)},SetFontFace(face,style){let bold=false;let italic=false;switch(style){case 1:bold=true;break;case 2:italic=true;break;case 3:bold=true;italic=true;break}if(face===this._faceName&&bold===this._isBold&&italic===this._isItalic)return;this._SetFontFace(face);this._SetBold(bold);this._SetItalic(italic)},SetFontSize(size){this._SetFontSize(size)},SetFontColor(rgb){tempColor.setFromRgbValue(rgb);tempColor.clamp();this._SetFontColor(tempColor)},SetWebFont(familyName,cssUrl){console.warn("[Text] 'Set web font' action is deprecated and no longer has any effect")},
SetEffect(effect){this.GetWorldInfo().SetBlendMode(effect);this._runtime.UpdateRender()},TypewriterFinish(){this._FinishTypewriter()},SetLineHeight(lho){this._SetLineHeight(lho)},SetHAlign(h){this._SetHAlign(h)},SetVAlign(v){this._SetVAlign(v)},SetWrapping(w){this._SetWrapByWord(w===0)}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Text.Exps={Text(){return this._text},PlainText(){if(this._enableBBcode)return C3.BBString.StripAnyTags(this._text);else return this._text},FaceName(){return this._faceName},FaceSize(){return this._ptSize},TextWidth(){return this._GetTextWidth()},TextHeight(){return this._GetTextHeight()},LineHeight(){return this._lineHeightOffset}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Arr=class ArrayPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Arr.Type=class ArrayType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){}};

}

{
'use strict';const C3=self.C3;const C3X=self.C3X;const IInstance=self.IInstance;function ResizeArray(arr,len,data){if(len<arr.length)C3.truncateArray(arr,len);else if(len>arr.length)if(typeof data==="function")for(let i=arr.length;i<len;++i)arr.push(data());else for(let i=arr.length;i<len;++i)arr.push(data)}
C3.Plugins.Arr.Instance=class ArrayInstance extends C3.SDKInstanceBase{constructor(inst,properties){super(inst);this._cx=10;this._cy=1;this._cz=1;this._arr=null;this._forX=[];this._forY=[];this._forZ=[];this._forDepth=-1;if(properties){this._cx=properties[0];this._cy=properties[1];this._cz=properties[2]}this._arr=C3.MakeFilledArray(this._cx,()=>C3.MakeFilledArray(this._cy,()=>C3.MakeFilledArray(this._cz,0)))}Release(){this._arr=null;super.Release()}At(x,y,z){x=Math.floor(x);y=Math.floor(y);z=Math.floor(z);
if(x>=0&&x<this._cx&&y>=0&&y<this._cy&&z>=0&&z<this._cz)return this._arr[x][y][z];else return 0}Set(x,y,z,val){x=Math.floor(x);y=Math.floor(y);z=Math.floor(z);if(x>=0&&x<this._cx&&y>=0&&y<this._cy&&z>=0&&z<this._cz)this._arr[x][y][z]=val}SetSize(w,h,d){w=Math.floor(w);h=Math.floor(h);d=Math.floor(d);if(w<0)w=0;if(h<0)h=0;if(d<0)d=0;if(this._cx===w&&this._cy===h&&this._cz===d)return;this._cx=w;this._cy=h;this._cz=d;const arr=this._arr;ResizeArray(arr,w,()=>C3.MakeFilledArray(h,()=>C3.MakeFilledArray(d,
0)));for(let x=0;x<w;++x){ResizeArray(arr[x],h,()=>C3.MakeFilledArray(d,0));for(let y=0;y<h;++y)ResizeArray(arr[x][y],d,0)}}GetWidth(){return this._cx}GetHeight(){return this._cy}GetDepth(){return this._cz}GetDebuggerProperties(){const prefix="plugins.arr.debugger";const propsPrefix="plugins.arr.properties";const ret=[{title:prefix+".array-properties.title",properties:[{name:propsPrefix+".width.name",value:this._cx,onedit:v=>this.SetSize(v,this._cy,this._cz)},{name:propsPrefix+".height.name",value:this._cy,
onedit:v=>this.SetSize(this._cx,v,this._cz)},{name:propsPrefix+".depth.name",value:this._cz,onedit:v=>this.SetSize(this._cx,this._cy,v)},{name:propsPrefix+".elements.name",value:this._cx*this._cy*this._cz}]}];const dataProps=[];if(this._cy===1&&this._cz===1)for(let x=0;x<this._cx;++x)dataProps.push({name:"$"+x,value:this._arr[x][0][0],onedit:v=>this._arr[x][0][0]=v});else for(let x=0;x<this._cx;++x)dataProps.push({name:"$"+x,value:this._arr[x].toString()});if(dataProps.length)ret.push({title:prefix+
".array-data.title",properties:dataProps});return ret}GetAsJsonString(){return JSON.stringify({"c2array":true,"size":[this._cx,this._cy,this._cz],"data":this._arr})}SaveToJson(){return{"size":[this._cx,this._cy,this._cz],"data":this._arr}}LoadFromJson(o){const sz=o["size"];this._cx=sz[0];this._cy=sz[1];this._cz=sz[2];this._arr=o["data"]}_GetForX(){if(this._forDepth>=0&&this._forDepth<this._forX.length)return this._forX[this._forDepth];else return 0}_GetForY(){if(this._forDepth>=0&&this._forDepth<
this._forY.length)return this._forY[this._forDepth];else return 0}_GetForZ(){if(this._forDepth>=0&&this._forDepth<this._forZ.length)return this._forZ[this._forDepth];else return 0}GetScriptInterfaceClass(){return self.IArrayInstance}};const map=new WeakMap;
self.IArrayInstance=class IArrayInstance extends IInstance{constructor(){super();map.set(this,IInstance._GetInitInst().GetSdkInstance())}get width(){return map.get(this).GetWidth()}get height(){return map.get(this).GetHeight()}get depth(){return map.get(this).GetDepth()}setSize(w,h=1,d=1){C3X.RequireFiniteNumber(w);C3X.RequireFiniteNumber(h);C3X.RequireFiniteNumber(d);map.get(this).SetSize(w,h,d)}getAt(x,y=0,z=0){C3X.RequireFiniteNumber(x);C3X.RequireFiniteNumber(y);C3X.RequireFiniteNumber(z);return map.get(this).At(x,
y,z)}setAt(val,x,y=0,z=0){C3X.RequireFiniteNumber(x);C3X.RequireFiniteNumber(y);C3X.RequireFiniteNumber(z);if(typeof val!=="number"&&typeof val!=="string")throw new TypeError("invalid type");map.get(this).Set(x,y,z,val)}};

}

{
'use strict';const C3=self.C3;function DoForEachTrigger(eventSheetManager,currentEvent,solModifiers,oldFrame,newFrame){eventSheetManager.PushCopySol(solModifiers);currentEvent.Retrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}
C3.Plugins.Arr.Cnds={CompareX(x,cmp,val){return C3.compare(this.At(x,0,0),cmp,val)},CompareXY(x,y,cmp,val){return C3.compare(this.At(x,y,0),cmp,val)},CompareXYZ(x,y,z,cmp,val){return C3.compare(this.At(x,y,z),cmp,val)},ArrForEach(dims){const runtime=this._runtime;const eventSheetManager=runtime.GetEventSheetManager();const currentEvent=runtime.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiers();const eventStack=runtime.GetEventStack();const oldFrame=eventStack.GetCurrentStackFrame();
const newFrame=eventStack.Push(currentEvent);const forDepth=++this._forDepth;const forX=this._forX;const forY=this._forY;const forZ=this._forZ;const cx=this._cx;const cy=this._cy;const cz=this._cz;if(forDepth===this._forX.length){forX.push(0);forY.push(0);forZ.push(0)}else{forX[forDepth]=0;forY[forDepth]=0;forZ[forDepth]=0}runtime.SetDebuggingEnabled(false);if(dims===0)for(let x=0;x<cx;++x)for(let y=0;y<cy;++y)for(let z=0;z<cz;++z){forX[forDepth]=x;forY[forDepth]=y;forZ[forDepth]=z;DoForEachTrigger(eventSheetManager,
currentEvent,solModifiers,oldFrame,newFrame)}else if(dims===1)for(let x=0;x<cx;++x)for(let y=0;y<cy;++y){forX[forDepth]=x;forY[forDepth]=y;DoForEachTrigger(eventSheetManager,currentEvent,solModifiers,oldFrame,newFrame)}else for(let x=0;x<cx;++x){forX[forDepth]=x;DoForEachTrigger(eventSheetManager,currentEvent,solModifiers,oldFrame,newFrame)}runtime.SetDebuggingEnabled(true);this._forDepth--;eventStack.Pop();return false},CompareCurrent(cmp,val){return C3.compare(this.At(this._GetForX(),this._GetForY(),
this._GetForZ()),cmp,val)},Contains(val){const cx=this._cx;const cy=this._cy;const cz=this._cz;const arr=this._arr;for(let x=0;x<cx;++x)for(let y=0;y<cy;++y)for(let z=0;z<cz;++z)if(arr[x][y][z]===val)return true;return false},IsEmpty(){return this._cx===0||this._cy===0||this._cz===0},CompareSize(axis,cmp,val){let s=0;switch(axis){case 0:s=this._cx;break;case 1:s=this._cy;break;case 2:s=this._cz;break}return C3.compare(s,cmp,val)}};

}

{
'use strict';const C3=self.C3;function CompareValues(va,vb){if(typeof va==="number"&&typeof vb==="number")return va-vb;else{const sa=va.toString();const sb=vb.toString();if(sa<sb)return-1;else if(sa>sb)return 1;else return 0}}
C3.Plugins.Arr.Acts={Clear(v){const cx=this._cx;const cy=this._cy;const cz=this._cz;const arr=this._arr;for(let x=0;x<cx;++x)for(let y=0;y<cy;++y)for(let z=0;z<cz;++z)arr[x][y][z]=v},SetSize(w,h,d){this.SetSize(w,h,d)},SetX(x,val){this.Set(x,0,0,val)},SetXY(x,y,val){this.Set(x,y,0,val)},SetXYZ(x,y,z,val){this.Set(x,y,z,val)},Push(where,value,axis){const cx=this._cx;const cy=this._cy;const cz=this._cz;const arr=this._arr;if(axis===0){const add=C3.MakeFilledArray(cy,()=>C3.MakeFilledArray(cz,value));
if(where===0)arr.push(add);else arr.unshift(add);this._cx++}else if(axis===1){for(let x=0;x<cx;++x){const add=C3.MakeFilledArray(cz,value);if(where===0)arr[x].push(add);else arr[x].unshift(add)}this._cy++}else{for(let x=0;x<cx;++x)for(let y=0;y<cy;++y)if(where===0)arr[x][y].push(value);else arr[x][y].unshift(value);this._cz++}},Pop(where,axis){const cx=this._cx;const cy=this._cy;const cz=this._cz;const arr=this._arr;if(axis===0){if(cx===0)return;if(where===0)arr.pop();else arr.shift();this._cx--}else if(axis===
1){if(cy===0)return;for(let x=0;x<cx;++x)if(where===0)arr[x].pop();else arr[x].shift();this._cy--}else{if(cz===0)return;for(let x=0;x<cx;++x)for(let y=0;y<cy;++y)if(where===0)arr[x][y].pop();else arr[x][y].shift();this._cz--}},Reverse(axis){const cx=this._cx;const cy=this._cy;const cz=this._cz;const arr=this._arr;if(cx===0||cy===0||cz===0)return;if(axis===0)arr.reverse();else if(axis===1)for(let x=0;x<cx;++x)arr[x].reverse();else for(let x=0;x<cx;++x)for(let y=0;y<cy;++y)arr[x][y].reverse()},Sort(axis){const cx=
this._cx;const cy=this._cy;const cz=this._cz;const arr=this._arr;if(cx===0||cy===0||cz===0)return;if(axis===0)arr.sort((a,b)=>CompareValues(a[0][0],b[0][0]));else if(axis===1)for(let x=0;x<cx;++x)arr[x].sort((a,b)=>CompareValues(a[0],b[0]));else for(let x=0;x<cx;++x)for(let y=0;y<cy;++y)arr[x][y].sort(CompareValues)},Delete(index,axis){index=Math.floor(index);if(index<0)return;const cx=this._cx;const cy=this._cy;const cz=this._cz;const arr=this._arr;if(axis===0){if(index>=cx)return;arr.splice(index,
1);this._cx--}else if(axis===1){if(index>=cy)return;for(let x=0;x<cx;++x)arr[x].splice(index,1);this._cy--}else{if(index>=cz)return;for(let x=0;x<cx;++x)for(let y=0;y<cy;++y)arr[x][y].splice(index,1);this._cz--}},Insert(value,index,axis){index=Math.floor(index);if(index<0)return;const cx=this._cx;const cy=this._cy;const cz=this._cz;const arr=this._arr;if(axis===0){if(index>cx)return;arr.splice(index,0,C3.MakeFilledArray(cy,()=>C3.MakeFilledArray(cz,value)));this._cx++}else if(axis===1){if(index>cy)return;
for(let x=0;x<cx;++x)arr[x].splice(index,0,C3.MakeFilledArray(cz,value));this._cy++}else{if(index>cz)return;for(let x=0;x<cx;++x)for(let y=0;y<cy;++y)arr[x][y].splice(index,0,value);this._cz++}},JSONLoad(json){let o=null;try{o=JSON.parse(json)}catch(err){console.error("[Construct 3] Failed to parse JSON: ",err);return}if(!o["c2array"])return;const sz=o["size"];this._cx=sz[0];this._cy=sz[1];this._cz=sz[2];this._arr=o["data"]},JSONDownload(filename){const url=URL.createObjectURL(new Blob([this.GetAsJsonString()],
{type:"application/json"}));this._runtime.InvokeDownload(url,filename)}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Arr.Exps={At(x,y,z){return this.At(x,y||0,z||0)},Width(){return this._cx},Height(){return this._cy},Depth(){return this._cz},CurX(){return this._GetForX()},CurY(){return this._GetForY()},CurZ(){return this._GetForZ()},CurValue(){return this.At(this._GetForX(),this._GetForY(),this._GetForZ())},Front(){return this.At(0,0,0)},Back(){return this.At(this._cx-1,0,0)},IndexOf(v){const arr=this._arr;for(let x=0,len=this._cx;x<len;++x)if(arr[x][0][0]===v)return x;return-1},LastIndexOf(v){const arr=
this._arr;for(let x=this._cx-1;x>=0;--x)if(arr[x][0][0]===v)return x;return-1},AsJSON(){return this.GetAsJsonString()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Touch=class TouchPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;const C3X=self.C3X;C3.Plugins.Touch.Type=class TouchType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){}GetScriptInterfaceClass(){return self.ITouchObjectType}};let touchObjectType=null;function GetTouchSdkInstance(){return touchObjectType.GetSingleGlobalInstance().GetSdkInstance()}
self.ITouchObjectType=class ITouchObjectType extends self.IObjectClass{constructor(objectType){super(objectType);touchObjectType=objectType;objectType.GetRuntime()._GetCommonScriptInterfaces().touch=this}requestPermission(type){C3X.RequireString(type);const touchInst=GetTouchSdkInstance();if(type==="orientation")return touchInst._RequestPermission(0);else if(type==="motion")return touchInst._RequestPermission(1);else throw new Error("invalid type");}};

}

{
'use strict';const C3=self.C3;const DOM_COMPONENT_ID="touch";
C3.Plugins.Touch.Instance=class TouchInstance extends C3.SDKInstanceBase{constructor(inst,properties){super(inst,DOM_COMPONENT_ID);this._touches=new Map;this._useMouseInput=false;this._isMouseDown=false;this._orientCompassHeading=0;this._orientAlpha=0;this._orientBeta=0;this._orientGamma=0;this._accX=0;this._accY=0;this._accZ=0;this._accWithGX=0;this._accWithGY=0;this._accWithGZ=0;this._triggerIndex=0;this._triggerId=0;this._triggerPermission=0;this._curTouchX=0;this._curTouchY=0;this._getTouchIndex=
0;this._permissionPromises=[];if(properties)this._useMouseInput=properties[0];this.AddDOMMessageHandler("permission-result",e=>this._OnPermissionResult(e));const rt=this.GetRuntime().Dispatcher();this._disposables=new C3.CompositeDisposable(C3.Disposable.From(rt,"pointerdown",e=>this._OnPointerDown(e.data)),C3.Disposable.From(rt,"pointermove",e=>this._OnPointerMove(e.data)),C3.Disposable.From(rt,"pointerup",e=>this._OnPointerUp(e.data,false)),C3.Disposable.From(rt,"pointercancel",e=>this._OnPointerUp(e.data,
true)),C3.Disposable.From(rt,"deviceorientation",e=>this._OnDeviceOrientation(e.data)),C3.Disposable.From(rt,"deviceorientationabsolute",e=>this._OnDeviceOrientationAbsolute(e.data)),C3.Disposable.From(rt,"devicemotion",e=>this._OnDeviceMotion(e.data)),C3.Disposable.From(rt,"tick2",e=>this._OnTick2()))}Release(){this._touches.clear();super.Release()}_OnPointerDown(e){if(e["pointerType"]==="mouse")if(this._useMouseInput)this._isMouseDown=true;else return;const pointerId=e["pointerId"];if(this._touches.has(pointerId))return;
const x=e["pageX"]-this._runtime.GetCanvasClientX();const y=e["pageY"]-this._runtime.GetCanvasClientY();const nowTime=performance.now();const index=this._touches.size;this._triggerIndex=index;this._triggerId=pointerId;const touchInfo=C3.New(C3.Plugins.Touch.TouchInfo);touchInfo.Init(nowTime,x,y,pointerId,index);this._touches.set(pointerId,touchInfo);this.Trigger(C3.Plugins.Touch.Cnds.OnNthTouchStart);this.Trigger(C3.Plugins.Touch.Cnds.OnTouchStart);this._curTouchX=x;this._curTouchY=y;this.Trigger(C3.Plugins.Touch.Cnds.OnTouchObject)}_OnPointerMove(e){if(e["pointerType"]===
"mouse"&&!this._isMouseDown)return;const touchInfo=this._touches.get(e["pointerId"]);if(!touchInfo)return;const nowTime=performance.now();if(nowTime-touchInfo.GetTime()<2)return;const x=e["pageX"]-this._runtime.GetCanvasClientX();const y=e["pageY"]-this._runtime.GetCanvasClientY();touchInfo.Update(nowTime,x,y,e["width"],e["height"],e["pressure"])}_OnPointerUp(e,isCancel){if(e["pointerType"]==="mouse")if(this._isMouseDown)this._isMouseDown=false;else return;const nowTime=performance.now();const pointerId=
e["pointerId"];const touchInfo=this._touches.get(pointerId);if(!touchInfo)return;this._triggerIndex=touchInfo.GetStartIndex();this._triggerId=touchInfo.GetId();this.Trigger(C3.Plugins.Touch.Cnds.OnNthTouchEnd);this.Trigger(C3.Plugins.Touch.Cnds.OnTouchEnd);if(!isCancel){const tap=touchInfo.ShouldTriggerTap(nowTime);if(tap==="single-tap"){this.Trigger(C3.Plugins.Touch.Cnds.OnTapGesture);this._curTouchX=touchInfo.GetX();this._curTouchY=touchInfo.GetY();this.Trigger(C3.Plugins.Touch.Cnds.OnTapGestureObject)}else if(tap===
"double-tap"){this.Trigger(C3.Plugins.Touch.Cnds.OnDoubleTapGesture);this._curTouchX=touchInfo.GetX();this._curTouchY=touchInfo.GetY();this.Trigger(C3.Plugins.Touch.Cnds.OnDoubleTapGestureObject)}}touchInfo.Release();this._touches.delete(pointerId)}_RequestPermission(type){this._PostToDOMMaybeSync("request-permission",{"type":type});return new Promise((resolve,reject)=>{this._permissionPromises.push({type,resolve,reject})})}_OnPermissionResult(e){const isGranted=e["result"];const type=e["type"];this._triggerPermission=
type;const toResolve=this._permissionPromises.filter(o=>o.type===type);for(const o of toResolve)o.resolve(isGranted?"granted":"denied");this._permissionPromises=this._permissionPromises.filter(o=>o.type!==type);if(isGranted){this.Trigger(C3.Plugins.Touch.Cnds.OnPermissionGranted);if(type===0)this._runtime.RequestDeviceOrientationEvent();else this._runtime.RequestDeviceMotionEvent()}else this.Trigger(C3.Plugins.Touch.Cnds.OnPermissionDenied)}_OnDeviceOrientation(e){if(typeof e["webkitCompassHeading"]===
"number")this._orientCompassHeading=e["webkitCompassHeading"];else if(e["absolute"])this._orientCompassHeading=e["alpha"];this._orientAlpha=e["alpha"];this._orientBeta=e["beta"];this._orientGamma=e["gamma"]}_OnDeviceOrientationAbsolute(e){this._orientCompassHeading=e["alpha"]}_OnDeviceMotion(e){const acc=e["acceleration"];if(acc){this._accX=acc["x"];this._accY=acc["y"];this._accZ=acc["z"]}const withG=e["accelerationIncludingGravity"];if(withG){this._accWithGX=withG["x"];this._accWithGY=withG["y"];
this._accWithGZ=withG["z"]}}_OnTick2(){const nowTime=performance.now();let index=0;for(const touchInfo of this._touches.values()){if(touchInfo.GetTime()<=nowTime-50)touchInfo._SetLastTime(nowTime);if(touchInfo.ShouldTriggerHold(nowTime)){this._triggerIndex=touchInfo.GetStartIndex();this._triggerId=touchInfo.GetId();this._getTouchIndex=index;this.Trigger(C3.Plugins.Touch.Cnds.OnHoldGesture);this._curTouchX=touchInfo.GetX();this._curTouchY=touchInfo.GetY();this.Trigger(C3.Plugins.Touch.Cnds.OnHoldGestureObject);
this._getTouchIndex=0}++index}}_GetTouchByIndex(index){index=Math.floor(index);for(const touchInfo of this._touches.values()){if(index===0)return touchInfo;--index}return null}_IsClientPosOnCanvas(touchX,touchY){return touchX>=0&&touchY>=0&&touchX<this._runtime.GetCanvasCssWidth()&&touchY<this._runtime.GetCanvasCssHeight()}GetDebuggerProperties(){const prefix="plugins.touch.debugger";return[{title:prefix+".touches",properties:[...this._touches.values()].map(ti=>({name:"$"+ti.GetId(),value:ti.GetX()+
", "+ti.GetY()}))}]}};

}

{
'use strict';const C3=self.C3;const tempArr=[];
C3.Plugins.Touch.Cnds={OnTouchStart(){return true},OnTouchEnd(){return true},IsInTouch(){return this._touches.size>0},OnTouchObject(objectClass){if(!objectClass)return false;if(!this._IsClientPosOnCanvas(this._curTouchX,this._curTouchY))return false;return this._runtime.GetCollisionEngine().TestAndSelectCanvasPointOverlap(objectClass,this._curTouchX,this._curTouchY,false)},IsTouchingObject(objectClass){if(!objectClass)return false;const sol=objectClass.GetCurrentSol();const instances=sol.GetInstances();
for(const inst of instances){const wi=inst.GetWorldInfo();const layer=wi.GetLayer();for(const touchInfo of this._touches.values()){if(!this._IsClientPosOnCanvas(touchInfo.GetX(),touchInfo.GetY()))continue;const [px,py]=layer.CanvasCssToLayer(touchInfo.GetX(),touchInfo.GetY(),wi.GetTotalZElevation());if(wi.ContainsPoint(px,py)){tempArr.push(inst);break}}}if(tempArr.length){sol.SetArrayPicked(tempArr);objectClass.ApplySolToContainer();C3.clearArray(tempArr);return true}else return false},CompareTouchSpeed(index,
cmp,s){const touchInfo=this._GetTouchByIndex(index);if(!touchInfo)return false;return C3.compare(touchInfo.GetSpeed(),cmp,s)},OrientationSupported(){return true},MotionSupported(){return true},CompareOrientation(orientation,cmp,a){this._runtime.RequestDeviceOrientationEvent();let v=0;if(orientation===0)v=this._orientAlpha;else if(orientation===1)v=this._orientBeta;else v=this._orientGamma;return C3.compare(v,cmp,a)},CompareAcceleration(a,cmp,x){this._runtime.RequestDeviceMotionEvent();let v=0;if(a===
0)v=this._accWithGX;else if(a===1)v=this._accWithGY;else if(a===2)v=this._accWithGZ;else if(a===3)v=this._accX;else if(a===4)v=this._accY;else v=this._accZ;return C3.compare(v,cmp,x)},OnNthTouchStart(index){index=Math.floor(index);return index===this._triggerIndex},OnNthTouchEnd(index){index=Math.floor(index);return index===this._triggerIndex},HasNthTouch(index){index=Math.floor(index);return this._touches.size>=index+1},OnHoldGesture(){return true},OnTapGesture(){return true},OnDoubleTapGesture(){return true},
OnHoldGestureObject(objectClass){if(!objectClass)return false;if(!this._IsClientPosOnCanvas(this._curTouchX,this._curTouchY))return false;return this._runtime.GetCollisionEngine().TestAndSelectCanvasPointOverlap(objectClass,this._curTouchX,this._curTouchY,false)},OnTapGestureObject(objectClass){if(!objectClass)return false;if(!this._IsClientPosOnCanvas(this._curTouchX,this._curTouchY))return false;return this._runtime.GetCollisionEngine().TestAndSelectCanvasPointOverlap(objectClass,this._curTouchX,
this._curTouchY,false)},OnDoubleTapGestureObject(objectClass){if(!objectClass)return false;if(!this._IsClientPosOnCanvas(this._curTouchX,this._curTouchY))return false;return this._runtime.GetCollisionEngine().TestAndSelectCanvasPointOverlap(objectClass,this._curTouchX,this._curTouchY,false)},OnPermissionGranted(type){return this._triggerPermission===type},OnPermissionDenied(type){return this._triggerPermission===type}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Touch.Acts={RequestPermission(type){this._RequestPermission(type)}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Touch.Exps={TouchCount(){return this._touches.size},X(layerParam){const touchInfo=this._GetTouchByIndex(this._getTouchIndex);if(!touchInfo)return 0;return touchInfo.GetPositionForLayer(this._runtime.GetCurrentLayout(),layerParam,true)},Y(layerParam){const touchInfo=this._GetTouchByIndex(this._getTouchIndex);if(!touchInfo)return 0;return touchInfo.GetPositionForLayer(this._runtime.GetCurrentLayout(),layerParam,false)},XAt(index,layerParam){const touchInfo=this._GetTouchByIndex(index);if(!touchInfo)return 0;
return touchInfo.GetPositionForLayer(this._runtime.GetCurrentLayout(),layerParam,true)},YAt(index,layerParam){const touchInfo=this._GetTouchByIndex(index);if(!touchInfo)return 0;return touchInfo.GetPositionForLayer(this._runtime.GetCurrentLayout(),layerParam,false)},XForID(id,layerParam){const touchInfo=this._touches.get(id);if(!touchInfo)return 0;return touchInfo.GetPositionForLayer(this._runtime.GetCurrentLayout(),layerParam,true)},YForID(id,layerParam){const touchInfo=this._touches.get(id);if(!touchInfo)return 0;
return touchInfo.GetPositionForLayer(this._runtime.GetCurrentLayout(),layerParam,false)},AbsoluteX(){const touchInfo=this._GetTouchByIndex(0);if(touchInfo)return touchInfo.GetX();else return 0},AbsoluteY(){const touchInfo=this._GetTouchByIndex(0);if(touchInfo)return touchInfo.GetY();else return 0},AbsoluteXAt(index){const touchInfo=this._GetTouchByIndex(index);if(touchInfo)return touchInfo.GetX();else return 0},AbsoluteYAt(index){const touchInfo=this._GetTouchByIndex(index);if(touchInfo)return touchInfo.GetY();
else return 0},AbsoluteXForID(id){const touchInfo=this._touches.get(id);if(touchInfo)return touchInfo.GetX();else return 0},AbsoluteYForID(id){const touchInfo=this._touches.get(id);if(touchInfo)return touchInfo.GetY();else return 0},SpeedAt(index){const touchInfo=this._GetTouchByIndex(index);if(touchInfo)return touchInfo.GetSpeed();else return 0},SpeedForID(id){const touchInfo=this._touches.get(id);if(touchInfo)return touchInfo.GetSpeed();else return 0},AngleAt(index){const touchInfo=this._GetTouchByIndex(index);
if(touchInfo)return C3.toDegrees(touchInfo.GetAngle());else return 0},AngleForID(id){const touchInfo=this._touches.get(id);if(touchInfo)return C3.toDegrees(touchInfo.GetAngle());else return 0},CompassHeading(){this._runtime.RequestDeviceOrientationEvent();return this._orientCompassHeading},Alpha(){this._runtime.RequestDeviceOrientationEvent();return this._orientAlpha},Beta(){this._runtime.RequestDeviceOrientationEvent();return this._orientBeta},Gamma(){this._runtime.RequestDeviceOrientationEvent();
return this._orientGamma},AccelerationXWithG(){this._runtime.RequestDeviceMotionEvent();return this._accWithGX},AccelerationYWithG(){this._runtime.RequestDeviceMotionEvent();return this._accWithGY},AccelerationZWithG(){this._runtime.RequestDeviceMotionEvent();return this._accWithGZ},AccelerationX(){this._runtime.RequestDeviceMotionEvent();return this._accX},AccelerationY(){this._runtime.RequestDeviceMotionEvent();return this._accY},AccelerationZ(){this._runtime.RequestDeviceMotionEvent();return this._accZ},
TouchIndex(){return this._triggerIndex},TouchID(){return this._triggerId},WidthForID(id){const touchInfo=this._touches.get(id);if(touchInfo)return touchInfo.GetWidth();else return 0},HeightForID(id){const touchInfo=this._touches.get(id);if(touchInfo)return touchInfo.GetHeight();else return 0},PressureForID(id){const touchInfo=this._touches.get(id);if(touchInfo)return touchInfo.GetPressure();else return 0}};

}

{
'use strict';const C3=self.C3;const GESTURE_HOLD_THRESHOLD=15;const GESTURE_HOLD_TIMEOUT=500;const GESTURE_TAP_TIMEOUT=333;const GESTURE_DOUBLETAP_THRESHOLD=25;let lastTapX=-1E3;let lastTapY=-1E3;let lastTapTime=-1E4;
C3.Plugins.Touch.TouchInfo=class TouchInfo extends C3.DefendedBase{constructor(){super();this._pointerId=0;this._startIndex=0;this._startTime=0;this._time=0;this._lastTime=0;this._startX=0;this._startY=0;this._x=0;this._y=0;this._lastX=0;this._lastY=0;this._width=0;this._height=0;this._pressure=0;this._hasTriggeredHold=false;this._isTooFarForHold=false}Release(){}Init(nowTime,x,y,id,index){this._pointerId=id;this._startIndex=index;this._time=nowTime;this._lastTime=nowTime;this._startTime=nowTime;
this._startX=x;this._startY=y;this._x=x;this._y=y;this._lastX=x;this._lastY=y}Update(nowTime,x,y,width,height,pressure){this._lastTime=this._time;this._time=nowTime;this._lastX=this._x;this._lastY=this._y;this._x=x;this._y=y;this._width=width;this._height=height;this._pressure=pressure;if(!this._isTooFarForHold&&C3.distanceTo(this._startX,this._startY,this._x,this._y)>=GESTURE_HOLD_THRESHOLD)this._isTooFarForHold=true}GetId(){return this._pointerId}GetStartIndex(){return this._startIndex}GetTime(){return this._time}_SetLastTime(t){this._lastTime=
t}GetX(){return this._x}GetY(){return this._y}GetSpeed(){const dist=C3.distanceTo(this._x,this._y,this._lastX,this._lastY);const dt=(this._time-this._lastTime)/1E3;if(dt>0)return dist/dt;else return 0}GetAngle(){return C3.angleTo(this._lastX,this._lastY,this._x,this._y)}GetWidth(){return this._width}GetHeight(){return this._height}GetPressure(){return this._pressure}ShouldTriggerHold(nowTime){if(this._hasTriggeredHold)return false;if(nowTime-this._startTime>=GESTURE_HOLD_TIMEOUT&&!this._isTooFarForHold&&
C3.distanceTo(this._startX,this._startY,this._x,this._y)<GESTURE_HOLD_THRESHOLD){this._hasTriggeredHold=true;return true}return false}ShouldTriggerTap(nowTime){if(this._hasTriggeredHold)return"";if(nowTime-this._startTime<=GESTURE_TAP_TIMEOUT&&!this._isTooFarForHold&&C3.distanceTo(this._startX,this._startY,this._x,this._y)<GESTURE_HOLD_THRESHOLD)if(nowTime-lastTapTime<=GESTURE_TAP_TIMEOUT*2&&C3.distanceTo(lastTapX,lastTapY,this._x,this._y)<GESTURE_DOUBLETAP_THRESHOLD){lastTapX=-1E3;lastTapY=-1E3;
lastTapTime=-1E4;return"double-tap"}else{lastTapX=this._x;lastTapY=this._y;lastTapTime=nowTime;return"single-tap"}return""}GetPositionForLayer(layout,layerNameOrNumber,getx){if(typeof layerNameOrNumber==="undefined"){const layer=layout.GetLayerByIndex(0);return layer.CanvasCssToLayer_DefaultTransform(this._x,this._y)[getx?0:1]}else{const layer=layout.GetLayer(layerNameOrNumber);if(layer)return layer.CanvasCssToLayer(this._x,this._y)[getx?0:1];else return 0}}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Mouse=class MousePlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;const C3X=self.C3X;C3.Plugins.Mouse.Type=class MouseType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){}GetScriptInterfaceClass(){return self.IMouseObjectType}};let mouseObjectType=null;function GetMouseSdkInstance(){return mouseObjectType.GetSingleGlobalInstance().GetSdkInstance()}
self.IMouseObjectType=class IMouseObjectType extends self.IObjectClass{constructor(objectType){super(objectType);mouseObjectType=objectType;objectType.GetRuntime()._GetCommonScriptInterfaces().mouse=this}getMouseX(layerNameOrNumber){return GetMouseSdkInstance().GetMousePositionForLayer(layerNameOrNumber)[0]}getMouseY(layerNameOrNumber){return GetMouseSdkInstance().GetMousePositionForLayer(layerNameOrNumber)[1]}getMousePosition(layerNameOrNumber){return GetMouseSdkInstance().GetMousePositionForLayer(layerNameOrNumber)}isMouseButtonDown(button){return GetMouseSdkInstance().IsMouseButtonDown(button)}};

}

{
'use strict';const C3=self.C3;const DOM_COMPONENT_ID="mouse";
C3.Plugins.Mouse.Instance=class MouseInstance extends C3.SDKInstanceBase{constructor(inst,properties){super(inst,DOM_COMPONENT_ID);this._buttonMap=[false,false,false];this._mouseXcanvas=0;this._mouseYcanvas=0;this._triggerButton=0;this._triggerType=0;this._triggerDir=0;this._hasPointerLock=false;this._movementX=0;this._movementY=0;this.AddDOMMessageHandlers([["pointer-lock-change",e=>this._OnPointerLockChange(e)],["pointer-lock-error",e=>this._OnPointerLockError(e)]]);const rt=this.GetRuntime().Dispatcher();
this._disposables=new C3.CompositeDisposable(C3.Disposable.From(rt,"pointermove",e=>this._OnPointerMove(e.data)),C3.Disposable.From(rt,"pointerdown",e=>this._OnPointerDown(e.data)),C3.Disposable.From(rt,"pointerup",e=>this._OnPointerUp(e.data)),C3.Disposable.From(rt,"dblclick",e=>this._OnDoubleClick(e.data)),C3.Disposable.From(rt,"wheel",e=>this._OnMouseWheel(e.data)),C3.Disposable.From(rt,"window-blur",()=>this._OnWindowBlur()))}Release(){super.Release()}_OnPointerDown(e){if(e["pointerType"]!=="mouse")return;
this._mouseXcanvas=e["pageX"]-this._runtime.GetCanvasClientX();this._mouseYcanvas=e["pageY"]-this._runtime.GetCanvasClientY();this._CheckButtonChanges(e["lastButtons"],e["buttons"])}_OnPointerMove(e){this._movementX=e["movementX"];this._movementY=e["movementY"];this.Trigger(C3.Plugins.Mouse.Cnds.OnMovement);this._movementX=0;this._movementY=0;if(e["pointerType"]!=="mouse")return;this._mouseXcanvas=e["pageX"]-this._runtime.GetCanvasClientX();this._mouseYcanvas=e["pageY"]-this._runtime.GetCanvasClientY();
this._CheckButtonChanges(e["lastButtons"],e["buttons"])}_OnPointerUp(e){if(e["pointerType"]!=="mouse")return;this._CheckButtonChanges(e["lastButtons"],e["buttons"])}_CheckButtonChanges(lastButtons,buttons){this._CheckButtonChange(lastButtons,buttons,1,0);this._CheckButtonChange(lastButtons,buttons,4,1);this._CheckButtonChange(lastButtons,buttons,2,2)}_CheckButtonChange(lastButtons,buttons,checkButtonFlag,resultButton){if(!(lastButtons&checkButtonFlag)&&buttons&checkButtonFlag)this._OnMouseDown(resultButton);
else if(lastButtons&checkButtonFlag&&!(buttons&checkButtonFlag))this._OnMouseUp(resultButton)}_OnMouseDown(button){this._buttonMap[button]=true;this.Trigger(C3.Plugins.Mouse.Cnds.OnAnyClick);this._triggerButton=button;this._triggerType=0;this.Trigger(C3.Plugins.Mouse.Cnds.OnClick);this.Trigger(C3.Plugins.Mouse.Cnds.OnObjectClicked)}_OnMouseUp(button){if(!this._buttonMap[button])return;this._buttonMap[button]=false;this._triggerButton=button;this.Trigger(C3.Plugins.Mouse.Cnds.OnRelease)}_OnDoubleClick(e){this._triggerButton=
e["button"];this._triggerType=1;this.Trigger(C3.Plugins.Mouse.Cnds.OnClick);this.Trigger(C3.Plugins.Mouse.Cnds.OnObjectClicked)}_OnMouseWheel(e){this._triggerDir=e["deltaY"]<0?1:0;this.Trigger(C3.Plugins.Mouse.Cnds.OnWheel)}_OnWindowBlur(){for(let i=0,len=this._buttonMap.length;i<len;++i){if(!this._buttonMap[i])return;this._buttonMap[i]=false;this._triggerButton=i;this.Trigger(C3.Plugins.Mouse.Cnds.OnRelease)}}GetMousePositionForLayer(layerNameOrNumber){const layout=this._runtime.GetMainRunningLayout();
const x=this._mouseXcanvas;const y=this._mouseYcanvas;if(typeof layerNameOrNumber==="undefined"){const layer=layout.GetLayerByIndex(0);return layer.CanvasCssToLayer_DefaultTransform(x,y)}else{const layer=layout.GetLayer(layerNameOrNumber);if(layer)return layer.CanvasCssToLayer(x,y);else return[0,0]}}IsMouseButtonDown(button){button=Math.floor(button);return!!this._buttonMap[button]}_IsMouseOverCanvas(){return this._mouseXcanvas>=0&&this._mouseYcanvas>=0&&this._mouseXcanvas<this._runtime.GetCanvasCssWidth()&&
this._mouseYcanvas<this._runtime.GetCanvasCssHeight()}_OnPointerLockChange(e){this._UpdatePointerLockState(e["has-pointer-lock"])}_OnPointerLockError(e){this._UpdatePointerLockState(e["has-pointer-lock"]);this.Trigger(C3.Plugins.Mouse.Cnds.OnPointerLockError)}_UpdatePointerLockState(hasPointerLock){if(this._hasPointerLock===hasPointerLock)return;this._hasPointerLock=hasPointerLock;if(this._hasPointerLock)this.Trigger(C3.Plugins.Mouse.Cnds.OnPointerLocked);else this.Trigger(C3.Plugins.Mouse.Cnds.OnPointerUnlocked)}GetDebuggerProperties(){const prefix=
"plugins.mouse";return[{title:prefix+".name",properties:[{name:prefix+".debugger.absolute-position",value:this._mouseXcanvas+","+this._mouseYcanvas},{name:prefix+".debugger.left-button",value:this._buttonMap[0]},{name:prefix+".debugger.middle-button",value:this._buttonMap[1]},{name:prefix+".debugger.right-button",value:this._buttonMap[2]}]},{title:prefix+".debugger.position-on-each-layer",properties:this._runtime.GetMainRunningLayout().GetLayers().map(layer=>({name:"$"+layer.GetName(),value:layer.CanvasCssToLayer(this._mouseXcanvas,
this._mouseYcanvas).join(", ")}))}]}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Mouse.Cnds={OnClick(button,type){return this._triggerButton===button&&this._triggerType===type},OnAnyClick(){return true},IsButtonDown(button){return this._buttonMap[button]},OnRelease(button){return this._triggerButton===button},IsOverObject(objectClass){if(!this._IsMouseOverCanvas())return false;const cnd=this._runtime.GetCurrentCondition();const isInverted=cnd.IsInverted();const mx=this._mouseXcanvas;const my=this._mouseYcanvas;return C3.xor(this._runtime.GetCollisionEngine().TestAndSelectCanvasPointOverlap(objectClass,mx,
my,isInverted),isInverted)},OnObjectClicked(button,type,objectClass){if(button!==this._triggerButton||type!==this._triggerType)return false;if(!this._IsMouseOverCanvas())return false;const mx=this._mouseXcanvas;const my=this._mouseYcanvas;return this._runtime.GetCollisionEngine().TestAndSelectCanvasPointOverlap(objectClass,mx,my,false)},OnWheel(dir){return this._triggerDir===dir},OnPointerLocked(){return true},OnPointerUnlocked(){return true},OnPointerLockError(){return true},HasPointerLock(){return this._hasPointerLock},
OnMovement(){return true}};

}

{
'use strict';const C3=self.C3;let lastSetCursor=null;const CURSOR_STYLES=["auto","pointer","text","crosshair","move","help","wait","none"];
C3.Plugins.Mouse.Acts={SetCursor(c){const cursorStyle=CURSOR_STYLES[c];if(lastSetCursor===cursorStyle)return;lastSetCursor=cursorStyle;this.PostToDOM("cursor",cursorStyle)},SetCursorSprite(objectClass){if(C3.Platform.IsMobile||!objectClass)return;const inst=objectClass.GetFirstPicked();if(!inst)return;const wi=inst.GetWorldInfo();const imageInfo=inst.GetCurrentImageInfo();if(!wi||!imageInfo)return;if(lastSetCursor===imageInfo)return;lastSetCursor=imageInfo;imageInfo.ExtractImageToCanvas().then(canvas=>
C3.CanvasToBlob(canvas)).then(blob=>{const url=URL.createObjectURL(blob);const cursorStyle=`url(${url}) ${Math.round(wi.GetOriginX()*imageInfo.GetWidth())} ${Math.round(wi.GetOriginY()*imageInfo.GetHeight())}, auto`;this.PostToDOM("cursor","");this.PostToDOM("cursor",cursorStyle)})},RequestPointerLock(){this._PostToDOMMaybeSync("request-pointer-lock")},ReleasePointerLock(){this.PostToDOM("release-pointer-lock")}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Mouse.Exps={X(layerParam){return this.GetMousePositionForLayer(layerParam)[0]},Y(layerParam){return this.GetMousePositionForLayer(layerParam)[1]},AbsoluteX(){return this._mouseXcanvas},AbsoluteY(){return this._mouseYcanvas},MovementX(){return this._movementX},MovementY(){return this._movementY}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Dictionary=class DictionaryPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Dictionary.Type=class DictionaryType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){}};

}

{
'use strict';const C3=self.C3;const C3X=self.C3X;const IInstance=self.IInstance;
C3.Plugins.Dictionary.Instance=class DictionaryInstance extends C3.SDKInstanceBase{constructor(inst,properties){super(inst);this._data=new Map;this._curKey=""}Release(){this._data.clear();super.Release()}GetAsJsonString(){return JSON.stringify({"c2dictionary":true,"data":C3.MapToObject(this._data)})}GetDataMap(){return this._data}SaveToJson(){return C3.MapToObject(this._data)}LoadFromJson(o){C3.ObjectToMap(o,this._data)}GetDebuggerProperties(){const prefix="plugins.dictionary";return[{title:prefix+
".name",properties:[{name:prefix+".debugger.key-count",value:this._data.size},...[...this._data].map(entry=>({name:"$"+entry[0],value:entry[1],onedit:v=>this._data.set(entry[0],v)}))]}]}GetScriptInterfaceClass(){return self.IDictionaryInstance}};const map=new WeakMap;self.IDictionaryInstance=class IDictionaryInstance extends IInstance{constructor(){super();map.set(this,IInstance._GetInitInst().GetSdkInstance())}getDataMap(){return map.get(this).GetDataMap()}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Dictionary.Cnds={CompareValue(key,cmp,val){const x=this._data.get(key);if(typeof x==="undefined")return false;return C3.compare(x,cmp,val)},ForEachKey(){const runtime=this._runtime;const eventSheetManager=runtime.GetEventSheetManager();const currentEvent=runtime.GetCurrentEvent();const solModifiers=currentEvent.GetSolModifiers();const eventStack=runtime.GetEventStack();const oldFrame=eventStack.GetCurrentStackFrame();const newFrame=eventStack.Push(currentEvent);runtime.SetDebuggingEnabled(false);
for(const key of this._data.keys()){this._curKey=key;eventSheetManager.PushCopySol(solModifiers);currentEvent.Retrigger(oldFrame,newFrame);eventSheetManager.PopSol(solModifiers)}runtime.SetDebuggingEnabled(true);this._curKey="";eventStack.Pop();return false},CompareCurrentValue(cmp,val){const x=this._data.get(this._curKey);if(typeof x==="undefined")return false;return C3.compare(x,cmp,val)},HasKey(key){return this._data.has(key)},IsEmpty(){return this._data.size===0}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Dictionary.Acts={AddKey(key,value){this._data.set(key,value)},SetKey(key,value){if(this._data.has(key))this._data.set(key,value)},DeleteKey(key){this._data.delete(key)},Clear(){this._data.clear()},JSONLoad(json){let o=null;try{o=JSON.parse(json)}catch(err){console.error("[Construct 3] Error parsing JSON: ",err);return}if(!o["c2dictionary"])return;C3.ObjectToMap(o["data"],this._data)},JSONDownload(filename){const url=URL.createObjectURL(new Blob([this.GetAsJsonString()],{type:"application/json"}));
this._runtime.InvokeDownload(url,filename)}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Dictionary.Exps={Get(key){const ret=this._data.get(key);if(typeof ret==="undefined")return 0;else return ret},GetDefault(key,defaultValue){const ret=this._data.get(key);if(typeof ret==="undefined")return defaultValue;else return ret},KeyCount(){return this._data.size},CurrentKey(){return this._curKey},CurrentValue(){return this._data.get(this._curKey)||0},AsJSON(){return this.GetAsJsonString()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.NinePatch=class NinePatchPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.NinePatch.Type=class NinePatchType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass);this._textureSet=null;this._drawable=null}Release(){this.ReleaseTextures();super.Release()}OnCreate(){this.GetImageInfo().LoadAsset(this._runtime)}async LoadTextures(renderer){const imageInfo=this.GetImageInfo();this._drawable=await imageInfo.ExtractImageToCanvas()}CreatePatch(lm,rm,tm,bm){if(this._textureSet||!this._drawable)return;this._textureSet=new self.NinePatchTextureSet(this);this._textureSet.CreateTextures(this._drawable,
lm,rm,tm,bm)}ReleaseTextures(){if(this._textureSet){this._textureSet.Release();this._textureSet=null}}GetTextureSet(){return this._textureSet}};

}

{
'use strict';const C3=self.C3;const LEFT_MARGIN=0;const RIGHT_MARGIN=1;const TOP_MARGIN=2;const BOTTOM_MARGIN=3;const EDGES=4;const FILL=5;const INITIALLY_VISIBLE=6;const ORIGIN=7;const SEAMS=8;const tempRect1=C3.New(C3.Rect);const tempRect2=C3.New(C3.Rect);const tempQuad=C3.New(C3.Quad);
C3.Plugins.NinePatch.Instance=class NinePatchInstance extends C3.SDKWorldInstanceBase{constructor(inst,properties){super(inst);this._leftMargin=16;this._rightMargin=16;this._topMargin=16;this._bottomMargin=16;this._edges=1;this._fill=1;this._isSeamless=true;this._callback3d=null;if(properties){this._leftMargin=properties[LEFT_MARGIN];this._rightMargin=properties[RIGHT_MARGIN];this._topMargin=properties[TOP_MARGIN];this._bottomMargin=properties[BOTTOM_MARGIN];this._edges=properties[EDGES];this._fill=
properties[FILL];this._isSeamless=!!properties[SEAMS];this.GetWorldInfo().SetVisible(!!properties[INITIALLY_VISIBLE])}this._sdkType.CreatePatch(this._leftMargin,this._rightMargin,this._topMargin,this._bottomMargin)}Release(){super.Release()}_Set3DCallback(cb){this._callback3d=cb}Draw(renderer){const wi=this.GetWorldInfo();const bquad=wi.GetBoundingQuad();this._Draw(renderer,bquad.getTlx(),bquad.getTly(),wi.GetWidth(),wi.GetHeight())}_Draw(renderer,myx,myy,myw,myh){let textureSet=this._sdkType.GetTextureSet();
if(!textureSet){this._sdkType.CreatePatch(this._leftMargin,this._rightMargin,this._topMargin,this._bottomMargin);textureSet=this._sdkType.GetTextureSet();if(!textureSet)return}const lm=this._leftMargin;const rm=this._rightMargin;const tm=this._topMargin;const bm=this._bottomMargin;const iw=textureSet.GetImageWidth();const ih=textureSet.GetImageHeight();const re=iw-rm;const be=ih-bm;const s=this._isSeamless?1:0;const edges=this._edges;const fill=this._fill;if(lm>0&&tm>0)this._DrawPatch(renderer,textureSet.GetTexture(),
0,0,lm+s,tm+s,myx,myy,lm+s,tm+s);if(rm>0&&tm>0)this._DrawPatch(renderer,textureSet.GetTexture(),re-s,0,rm+s,tm+s,myx+myw-rm-s,myy,rm+s,tm+s);if(rm>0&&bm>0)this._DrawPatch(renderer,textureSet.GetTexture(),re-s,be-s,rm+s,bm+s,myx+myw-rm-s,myy+myh-bm-s,rm+s,bm+s);if(lm>0&&bm>0)this._DrawPatch(renderer,textureSet.GetTexture(),0,be-s,lm+s,bm+s,myx,myy+myh-bm-s,lm+s,bm+s);if(edges===0){const off=fill===2?0:s;if(lm>0&&be>tm)this._TilePatch(renderer,textureSet.GetLeftTexture(),myx,myy+tm,lm+off,myh-tm-bm,
0,0);if(rm>0&&be>tm)this._TilePatch(renderer,textureSet.GetRightTexture(),myx+myw-rm-off,myy+tm,rm+off,myh-tm-bm,off,0);if(tm>0&&re>lm)this._TilePatch(renderer,textureSet.GetTopTexture(),myx+lm,myy,myw-lm-rm,tm+off,0,0);if(bm>0&&re>lm)this._TilePatch(renderer,textureSet.GetBottomTexture(),myx+lm,myy+myh-bm-off,myw-lm-rm,bm+off,0,off)}else if(edges===1){if(lm>0&&be>tm)this._DrawPatch(renderer,textureSet.GetTexture(),0,tm,lm,be-tm,myx,myy+tm,lm,myh-tm-bm);if(rm>0&&be>tm)this._DrawPatch(renderer,textureSet.GetTexture(),
re,tm,rm,be-tm,myx+myw-rm,myy+tm,rm,myh-tm-bm);if(tm>0&&re>lm)this._DrawPatch(renderer,textureSet.GetTexture(),lm,0,re-lm,tm,myx+lm,myy,myw-lm-rm,tm);if(bm>0&&re>lm)this._DrawPatch(renderer,textureSet.GetTexture(),lm,be,re-lm,bm,myx+lm,myy+myh-bm,myw-lm-rm,bm)}if(be>tm&&re>lm)if(fill===0)this._TilePatch(renderer,textureSet.GetFillTexture(),myx+lm,myy+tm,myw-lm-rm,myh-tm-bm,0,0);else if(fill===1)this._DrawPatch(renderer,textureSet.GetTexture(),lm,tm,re-lm,be-tm,myx+lm,myy+tm,myw-lm-rm,myh-tm-bm)}_DrawPatch(renderer,
tex,sx,sy,sw,sh,dx,dy,dw,dh){const texW=tex.GetWidth();const texH=tex.GetHeight();renderer.SetTexture(tex);tempRect1.set(dx,dy,dx+dw,dy+dh);tempRect2.set(sx/texW,sy/texH,(sx+sw)/texW,(sy+sh)/texH);if(this._callback3d===null){const wi=this.GetWorldInfo();const bquad=wi.GetBoundingQuad();const offX=bquad.getTlx();const offY=bquad.getTly();tempRect1.offset(-offX,-offY);tempQuad.setFromRotatedRect(tempRect1,wi.GetAngle());tempQuad.offset(offX,offY);renderer.Quad3(tempQuad,tempRect2)}else this._callback3d(tempRect1,
tempRect2)}_TilePatch(renderer,tex,dx,dy,dw,dh,ox,oy){const texW=tex.GetWidth();const texH=tex.GetHeight();renderer.SetTexture(tex);tempRect1.set(dx,dy,dx+dw,dy+dh);tempRect2.set(-ox/texW,-oy/texH,(dw-ox)/texW,(dh-oy)/texH);if(this._callback3d===null){const wi=this.GetWorldInfo();const bquad=wi.GetBoundingQuad();const offX=bquad.getTlx();const offY=bquad.getTly();tempRect1.offset(-offX,-offY);tempQuad.setFromRotatedRect(tempRect1,wi.GetAngle());tempQuad.offset(offX,offY);renderer.Quad3(tempQuad,tempRect2)}else this._callback3d(tempRect1,
tempRect2)}GetCurrentImageInfo(){this._objectClass.GetImageInfo()}GetPropertyValueByIndex(index){}SetPropertyValueByIndex(index,value){}};

}

{
'use strict';const C3=self.C3;C3.Plugins.NinePatch.Cnds={};

}

{
'use strict';const C3=self.C3;C3.Plugins.NinePatch.Acts={SetEffect(effect){this.GetWorldInfo().SetBlendMode(effect);this._runtime.UpdateRender()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.NinePatch.Exps={};

}

{
'use strict';const C3=self.C3;function CloneDrawable(drawable){const canvas=C3.CreateCanvas(drawable.width,drawable.height);const ctx=canvas.getContext("2d");ctx.drawImage(drawable,0,0);return canvas}
self.NinePatchTextureSet=class NinePatchTextureSet{constructor(sdkType){this._sdkType=sdkType;this._runtime=this._sdkType.GetRuntime();this._texture=null;this._fillTexture=null;this._leftTexture=null;this._rightTexture=null;this._topTexture=null;this._bottomTexture=null;this._imageWidth=0;this._imageHeight=0;this._renderer=this._runtime.GetRenderer();this._isLoading=false;this._wasReleased=false}Release(){if(!this._renderer.IsContextLost()){this._renderer.DeleteTexture(this._texture);this._renderer.DeleteTexture(this._fillTexture);
this._renderer.DeleteTexture(this._leftTexture);this._renderer.DeleteTexture(this._rightTexture);this._renderer.DeleteTexture(this._topTexture);this._renderer.DeleteTexture(this._bottomTexture)}this._texture=null;this._fillTexture=null;this._leftTexture=null;this._rightTexture=null;this._topTexture=null;this._bottomTexture=null;this._sdkType=null;this._renderer=null;this._wasReleased=true}WasReleased(){return this._wasReleased}CreateTextures(drawable,lm,rm,tm,bm){this._SliceImage(drawable,lm,rm,tm,
bm)}HasCreatedTextures(){return!!this._texture}_SliceImage(drawable,lm,rm,tm,bm){if(this._wasReleased)return;const iw=drawable.width;const ih=drawable.height;this._imageWidth=iw;this._imageHeight=ih;const re=iw-rm;const be=ih-bm;const sampling=this._runtime.GetSampling();const anisotropy=this._runtime.GetCanvasManager().GetTextureAnisotropy();this._texture=this._renderer.CreateStaticTexture(CloneDrawable(drawable),{sampling,anisotropy});if(re>lm&&be>tm)this._fillTexture=this._renderer.CreateStaticTexture(this._SliceSubImage(CloneDrawable(drawable),
lm,tm,re,be),{wrapX:"repeat",wrapY:"repeat",sampling,anisotropy});if(lm>0&&be>tm)this._leftTexture=this._renderer.CreateStaticTexture(this._SliceSubImage(CloneDrawable(drawable),0,tm,lm,be),{wrapY:"repeat",sampling,anisotropy});if(rm>0&&be>tm)this._rightTexture=this._renderer.CreateStaticTexture(this._SliceSubImage(CloneDrawable(drawable),re,tm,iw,be),{wrapY:"repeat",sampling,anisotropy});if(tm>0&&re>lm)this._topTexture=this._renderer.CreateStaticTexture(this._SliceSubImage(CloneDrawable(drawable),
lm,0,re,tm),{wrapX:"repeat",sampling,anisotropy});if(bm>0&&re>lm)this._bottomTexture=this._renderer.CreateStaticTexture(this._SliceSubImage(CloneDrawable(drawable),lm,be,re,ih),{wrapX:"repeat",sampling,anisotropy})}_SliceSubImage(drawable,x1,y1,x2,y2){const w=x2-x1;const h=y2-y1;const tmpCanvas=C3.CreateCanvas(w,h);const tmpCtx=tmpCanvas.getContext("2d");tmpCtx.drawImage(drawable,x1,y1,w,h,0,0,w,h);return tmpCanvas}GetImageWidth(){return this._imageWidth}GetImageHeight(){return this._imageHeight}GetTexture(){return this._texture}GetFillTexture(){return this._fillTexture}GetLeftTexture(){return this._leftTexture}GetRightTexture(){return this._rightTexture}GetTopTexture(){return this._topTexture}GetBottomTexture(){return this._bottomTexture}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Spritefont2=class SpriteFontPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Spritefont2.Type=class SpriteFontType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass);this._spriteFont=C3.New(self.SpriteFont)}Release(){super.Release()}OnCreate(){this.GetImageInfo().LoadAsset(this._runtime)}LoadTextures(renderer){return this.GetImageInfo().LoadStaticTexture(renderer,{sampling:this._runtime.GetSampling()})}ReleaseTextures(){this.GetImageInfo().ReleaseTexture()}GetSpriteFont(){return this._spriteFont}UpdateSettings(characterWidth,characterHeight,characterSet,
spacingData){const imageInfo=this.GetImageInfo();const sf=this._spriteFont;sf.SetWidth(imageInfo.GetWidth());sf.SetHeight(imageInfo.GetHeight());sf.SetCharacterWidth(characterWidth);sf.SetCharacterHeight(characterHeight);sf.SetCharacterSet(characterSet);sf.SetSpacingData(spacingData);sf.UpdateCharacterMap()}};

}

{
'use strict';const C3=self.C3;const C3X=self.C3X;const TEXT=0;const ENABLE_BBCODE=1;const CHARACTER_WIDTH=2;const CHARACTER_HEIGHT=3;const CHARACTER_SET=4;const SPACING_DATA=5;const SCALE=6;const CHARACTER_SPACING=7;const LINE_HEIGHT=8;const HORIZONTAL_ALIGNMENT=9;const VERTICAL_ALIGNMENT=10;const WRAPPING=11;const INITIALLY_VISIBLE=12;const ORIGIN=13;const HORIZONTAL_ALIGNMENTS=["left","center","right"];const VERTICAL_ALIGNMENTS=["top","center","bottom"];const WORD_WRAP=0;const CHARACTER_WRAP=1;
C3.Plugins.Spritefont2.Instance=class SpriteFontInstance extends C3.SDKWorldInstanceBase{constructor(inst,properties){super(inst);this._text="";this._enableBBcode=true;this._characterWidth=16;this._characterHeight=16;this._characterSet="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@\u00b0+=*$\u00a3\u20ac<>";let spacingData="";this._characterScale=1;this._characterSpacing=0;this._lineHeight=0;this._horizontalAlign=0;this._verticalAlign=0;this._wrapByWord=true;
this._spriteFontText=null;this._typewriterStartTime=-1;this._typewriterEndTime=-1;this._typewriterLength=0;if(properties){this._text=properties[0];this._enableBBcode=properties[1];this._characterWidth=properties[2];this._characterHeight=properties[3];this._characterSet=properties[4];spacingData=properties[5];this._characterScale=properties[6];this._characterSpacing=properties[7];this._lineHeight=properties[8];this._horizontalAlign=properties[9];this._verticalAlign=properties[10];this._wrapByWord=
properties[11]===0;const wi=this.GetWorldInfo();wi.SetVisible(properties[12])}this._sdkType.UpdateSettings(this._characterWidth,this._characterHeight,this._characterSet,spacingData);this._spriteFontText=C3.New(self.SpriteFontText,this._sdkType.GetSpriteFont());const wi=this.GetWorldInfo();this._spriteFontText.SetSize(wi.GetWidth(),wi.GetHeight());this._UpdateSettings();this._inst.SetMustMitigateZFighting()}Release(){this._CancelTypewriter();this._spriteFontText.Release();this._spriteFontText=null;
super.Release()}_UpdateSettings(){const sft=this._spriteFontText;if(!sft)return;sft.SetBBCodeEnabled(this._enableBBcode);sft.SetText(this._text);sft.SetWordWrapMode(this._wrapByWord?"word":"character");sft.SetHorizontalAlign(HORIZONTAL_ALIGNMENTS[this._horizontalAlign]);sft.SetVerticalAlign(VERTICAL_ALIGNMENTS[this._verticalAlign]);sft.SetSpacing(this._characterSpacing);sft.SetLineHeight(this._lineHeight)}Draw(renderer){const imageInfo=this._objectClass.GetImageInfo();const texture=imageInfo.GetTexture();
if(!texture)return;renderer.SetTexture(texture);const wi=this.GetWorldInfo();let q=wi.GetBoundingQuad();const sft=this._spriteFontText;sft.SetScale(this._characterScale);sft.SetSceneGraphScale(wi.GetSceneGraphScale());if(this._runtime.IsPixelRoundingEnabled())q=wi.PixelRoundQuad(q);sft.SetSize(wi.GetWidth(),wi.GetHeight());sft.GetSpriteFont().SetTexRect(imageInfo.GetTexRect());sft.SetColor(wi.GetUnpremultipliedColor());sft.Draw(renderer,q.getTlx(),q.getTly(),wi.GetAngle())}SaveToJson(){const ret=
{"t":this._text,"ebbc":this._enableBBcode,"csc":this._characterScale,"csp":this._characterSpacing,"lh":this._lineHeight,"ha":this._horizontalAlign,"va":this._verticalAlign,"w":this._wrapByWord,"cw":this._sdkType.GetSpriteFont().GetCharacterWidth(),"ch":this._sdkType.GetSpriteFont().GetCharacterHeight(),"cs":this._sdkType.GetSpriteFont().GetCharacterSet(),"sd":this._sdkType.GetSpriteFont().GetSpacingData()};if(this._typewriterEndTime!==-1)ret["tw"]={"st":this._typewriterStartTime,"en":this._typewriterEndTime,
"l":this._typewriterLength};return ret}LoadFromJson(o){this._CancelTypewriter();this._text=o["t"];this._enableBBcode=o["ebbc"];this._characterScale=o["csc"];this._characterSpacing=o["csp"];this._lineHeight=o["lh"];this._horizontalAlign=o["ha"];this._verticalAlign=o["va"];this._wrapByWord=o["w"];if(o.hasOwnProperty("tw")){const tw=o["tw"];this._typewriterStartTime=tw["st"];this._typewriterEndTime=tw["en"];this._typewriterLength=o["l"]}const spriteFont=this._sdkType.GetSpriteFont();spriteFont.SetCharacterWidth(o["cw"]);
spriteFont.SetCharacterHeight(o["ch"]);spriteFont.SetCharacterSet(o["cs"]);spriteFont.SetSpacingData(o["sd"]);this._UpdateSettings();if(this._typewriterEndTime!==-1)this._StartTicking()}GetPropertyValueByIndex(index){switch(index){case TEXT:return this._text;case ENABLE_BBCODE:return this._enableBBcode;case CHARACTER_WIDTH:return this._sdkType.GetSpriteFont().GetCharacterWidth();case CHARACTER_HEIGHT:return this._sdkType.GetSpriteFont().GetCharacterHeight();case CHARACTER_SET:return this._sdkType.GetSpriteFont().GetCharacterSet();
case SPACING_DATA:return this._sdkType.GetSpriteFont().GetSpacingData();case SCALE:return this._characterScale;case CHARACTER_SPACING:return this._characterSpacing;case LINE_HEIGHT:return this._lineHeight;case HORIZONTAL_ALIGNMENT:return this._horizontalAlign;case VERTICAL_ALIGNMENT:return this._verticalAlign;case WRAPPING:return this._wrapByWord?CHARACTER_WRAP:WORD_WRAP}}SetPropertyValueByIndex(index,value){switch(index){case TEXT:if(this._text===value)return;this._text=value;this._UpdateSettings();
break;case ENABLE_BBCODE:if(this._enableBBcode===!!value)return;this._enableBBcode=!!value;this._UpdateSettings();break;case CHARACTER_WIDTH:this._sdkType.GetSpriteFont().SetCharacterWidth(value);break;case CHARACTER_HEIGHT:this._sdkType.GetSpriteFont().SetCharacterHeight(value);break;case CHARACTER_SET:this._sdkType.GetSpriteFont().SetCharacterSet(value);break;case SPACING_DATA:this._sdkType.GetSpriteFont().SetSpacingData(value);break;case SCALE:if(this._characterScale===value)return;this._characterScale=
value;this._UpdateSettings();break;case CHARACTER_SPACING:if(this._characterSpacing===value)return;this._characterSpacing=value;this._UpdateSettings();break;case LINE_HEIGHT:if(this._lineHeight===value)return;this._lineHeight=value;this._UpdateSettings();break;case HORIZONTAL_ALIGNMENT:if(this._horizontalAlign===value)return;this._horizontalAlign=value;this._UpdateSettings();break;case VERTICAL_ALIGNMENT:if(this._verticalAlign===value)return;this._verticalAlign=value;this._UpdateSettings();break;
case WRAPPING:if(this._wrapByWord===(value===WORD_WRAP))return;this._wrapByWord=value===WORD_WRAP;this._UpdateSettings();break}}_SetText(text){if(this._text===text)return;this._text=text;this._spriteFontText.SetText(text);this._runtime.UpdateRender()}GetText(){return this._text}_StartTypewriter(text,duration){this._SetText(text);this._typewriterStartTime=this._runtime.GetWallTime();this._typewriterEndTime=this._typewriterStartTime+duration/this.GetInstance().GetActiveTimeScale();this._typewriterLength=
C3.BBString.StripAnyTags(text).length;this._spriteFontText.SetDrawMaxCharacterCount(0);this._StartTicking()}_CancelTypewriter(){this._typewriterStartTime=-1;this._typewriterEndTime=-1;this._typewriterLength=0;this._spriteFontText.SetDrawMaxCharacterCount(-1);this._StopTicking()}_FinishTypewriter(){if(this._typewriterEndTime===-1)return;this._CancelTypewriter();this.Trigger(C3.Plugins.Spritefont2.Cnds.OnTypewriterTextFinished);this._runtime.UpdateRender()}_SetScale(s){if(this._characterScale===s)return;
this._characterScale=s;this._spriteFontText.SetScale(this._characterScale);this._runtime.UpdateRender()}_GetScale(){return this._characterScale}_SetCharacterSpacing(s){if(this._characterSpacing===s)return;this._characterSpacing=s;this._spriteFontText.SetSpacing(this._characterSpacing);this._runtime.UpdateRender()}_GetCharacterSpacing(){return this._characterSpacing}_SetLineHeight(h){if(this._lineHeight===h)return;this._lineHeight=h;this._spriteFontText.SetLineHeight(this._lineHeight);this._runtime.UpdateRender()}_GetLineHeight(){return this._lineHeight}_SetHAlign(h){if(this._horizontalAlign===
h)return;this._horizontalAlign=h;this._UpdateSettings();this._runtime.UpdateRender()}_GetHAlign(){return this._horizontalAlign}_SetVAlign(v){if(this._verticalAlign===v)return;this._verticalAlign=v;this._UpdateSettings();this._runtime.UpdateRender()}_GetVAlign(){return this._verticalAlign}_SetWrapByWord(w){w=!!w;if(this._wrapByWord===w)return;this._wrapByWord=w;this._UpdateSettings();this._runtime.UpdateRender()}_IsWrapByWord(){return this._wrapByWord}Tick(){const wallTime=this._runtime.GetWallTime();
if(wallTime>=this._typewriterEndTime){this._CancelTypewriter();this.Trigger(C3.Plugins.Spritefont2.Cnds.OnTypewriterTextFinished);this._runtime.UpdateRender()}else{let displayLength=C3.relerp(this._typewriterStartTime,this._typewriterEndTime,wallTime,0,this._typewriterLength);displayLength=Math.floor(displayLength);if(displayLength!==this._spriteFontText.GetDrawMaxCharacterCount()){this._spriteFontText.SetDrawMaxCharacterCount(displayLength);this._runtime.UpdateRender()}}}GetDebuggerProperties(){const prefix=
"plugins.spritefont2";return[{title:prefix+".name",properties:[{name:prefix+".properties.text.name",value:this._text,onedit:v=>this._SetText(v)}]}]}GetScriptInterfaceClass(){return self.ISpriteFontInstance}};const map=new WeakMap;const SCRIPT_HORIZONTAL_ALIGNMENTS=new Map([["left",0],["center",1],["right",2]]);const SCRIPT_VERTICAL_ALIGNMENTS=new Map([["top",0],["center",1],["bottom",2]]);const SCRIPT_WRAP_MODES=new Map([["word",true],["character",false]]);
self.ISpriteFontInstance=class ISpriteFontInstance extends self.IWorldInstance{constructor(){super();map.set(this,self.IInstance._GetInitInst().GetSdkInstance())}get text(){return map.get(this).GetText()}set text(str){C3X.RequireString(str);const inst=map.get(this);inst._CancelTypewriter();inst._SetText(str)}typewriterText(str,duration){C3X.RequireString(str);C3X.RequireFiniteNumber(duration);const inst=map.get(this);inst._CancelTypewriter();inst._StartTypewriter(str,duration)}typewriterFinish(){map.get(this)._FinishTypewriter()}set characterScale(s){C3X.RequireFiniteNumber(s);
map.get(this)._SetScale(s)}get characterScale(){return map.get(this)._GetScale()}set characterSpacing(s){C3X.RequireFiniteNumber(s);map.get(this)._SetCharacterSpacing(s)}get characterSpacing(){return map.get(this)._GetCharacterSpacing()}set lineHeight(lho){C3X.RequireFiniteNumber(lho);map.get(this)._SetLineHeight(lho)}get lineHeight(){return map.get(this)._GetLineHeight()}set horizontalAlign(str){C3X.RequireString(str);const h=SCRIPT_HORIZONTAL_ALIGNMENTS.get(str);if(typeof h==="undefined")throw new Error("invalid mode");
map.get(this)._SetHAlign(h)}get horizontalAlign(){return HORIZONTAL_ALIGNMENTS[map.get(this)._GetHAlign()]}set verticalAlign(str){C3X.RequireString(str);const v=SCRIPT_VERTICAL_ALIGNMENTS.get(str);if(typeof v==="undefined")throw new Error("invalid mode");map.get(this)._SetVAlign(v)}get verticalAlign(){return VERTICAL_ALIGNMENTS[map.get(this)._GetVAlign()]}set wordWrapMode(str){C3X.RequireString(str);const isWrapByWord=SCRIPT_WRAP_MODES.get(str);if(typeof isWrapByWord==="undefined")throw new Error("invalid mode");
map.get(this)._SetWrapByWord(isWrapByWord)}get wordWrapMode(){return map.get(this)._IsWrapByWord()?"word":"character"}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Spritefont2.Cnds={CompareText(text,caseSensitive){if(caseSensitive)return this._text===text;else return C3.equalsNoCase(this._text,text)},IsRunningTypewriterText(){return this._typewriterEndTime!==-1},OnTypewriterTextFinished(){return true}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Spritefont2.Acts={SetText(param){this._CancelTypewriter();if(typeof param==="number"&&param<1E9)param=Math.round(param*1E10)/1E10;this._SetText(param.toString())},AppendText(param){this._CancelTypewriter();if(typeof param==="number"&&param<1E9)param=Math.round(param*1E10)/1E10;param=param.toString();if(!param)return;this._SetText(this._text+param)},TypewriterText(param,duration){this._CancelTypewriter();if(typeof param==="number"&&param<1E9)param=Math.round(param*1E10)/1E10;this._StartTypewriter(param.toString(),
duration)},TypewriterFinish(){this._FinishTypewriter()},SetScale(s){this._SetScale(s)},SetCharacterSpacing(s){this._SetCharacterSpacing(s)},SetLineHeight(h){this._SetLineHeight(h)},SetCharacterWidth(chars,width){let didAnyChange=false;const spriteFont=this._sdkType.GetSpriteFont();for(const ch of chars)if(ch===" "){spriteFont.SetSpaceWidth(width);didAnyChange=true}else{const sfc=spriteFont.GetCharacter(ch);if(sfc){sfc.SetDisplayWidth(width);didAnyChange=true}}if(didAnyChange)spriteFont.SetCharacterWidthsChanged();
this._runtime.UpdateRender()},SetEffect(effect){this.GetWorldInfo().SetBlendMode(effect);this._runtime.UpdateRender()},SetHAlign(h){this._SetHAlign(h)},SetVAlign(v){this._SetVAlign(v)},SetWrapping(w){this._SetWrapByWord(w===0)}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Spritefont2.Exps={CharacterWidth(ch){const sfc=this._sdkType.GetSpriteFont().GetCharacter(ch);if(sfc)return sfc.GetDisplayWidth();else return this._sdkType.GetSpriteFont().GetCharacterWidth()},CharacterHeight(){return this._characterHeight},CharacterScale(){return this._characterScale},CharacterSpacing(){return this._characterSpacing},LineHeight(){return this._lineHeight},Text(){return this._text},PlainText(){if(this._enableBBcode)return C3.BBString.StripAnyTags(this._text);else return this._text},
TextWidth(){const wi=this.GetWorldInfo();this._spriteFontText.SetSize(wi.GetWidth(),wi.GetHeight());return this._spriteFontText.GetTextWidth()},TextHeight(){const wi=this.GetWorldInfo();this._spriteFontText.SetSize(wi.GetWidth(),wi.GetHeight());return this._spriteFontText.GetTextHeight()}};

}

{
'use strict';const C3=self.C3;
self.SpriteFontCharacter=class SpriteFontCharacter{constructor(spriteFont,char,x,y){let charWidth=spriteFont.GetCharacterWidth();let charHeight=spriteFont.GetCharacterHeight();this._spriteFont=spriteFont;this._char=char;this._pxRect=new C3.Rect(x,y,x+charWidth,y+charHeight);this._texRect=new C3.Rect;this._displayWidth=-1;this._UpdateTexRect()}Release(){this._spriteFont=null;this._pxRect=null;this._texRect=null}_UpdateTexRect(){let w=this._spriteFont.GetWidth();let h=this._spriteFont.GetHeight();this._texRect.copy(this._pxRect);
this._texRect.divide(w,h);this._texRect.lerpInto(this._spriteFont.GetTexRect())}GetSpriteFont(){return this._spriteFont}GetChar(){return this._char}GetTexRect(){return this._texRect}SetDisplayWidth(w){this._displayWidth=w}GetDisplayWidth(){if(this._displayWidth<0)return this._spriteFont.GetCharacterWidth();else return this._displayWidth}};

}

{
'use strict';const C3=self.C3;const tmpRect=new C3.Rect;const tmpQuad=new C3.Quad;const tmpColor=new C3.Color;const VALID_HORIZ_ALIGNMENTS=new Set(["left","center","right"]);const VALID_VERT_ALIGNMENTS=new Set(["top","center","bottom"]);const VALID_WORD_WRAP_MODES=new Set(["word","character"]);
self.SpriteFontText=class SpriteFontText{constructor(spriteFont){this._spriteFont=spriteFont;this._cssWidth=0;this._cssHeight=0;this._text="";this._isBBcodeEnabled=false;this._bbString=null;this._wrappedText=C3.New(C3.WordWrap);this._wrapMode="word";this._wrapChanged=false;this._horizontalAlign="left";this._verticalAlign="top";this._scale=1;this._sceneGraphScale=1;this._spacing=0;this._lineHeight=0;this._color=C3.New(C3.Color);this._drawMaxCharCount=-1;this._drawCharCount=0;this._measureTextCallback=
(str,styles)=>this._MeasureText(str,styles);this._spriteFont._AddSpriteFontText(this)}Release(){this._spriteFont._RemoveSpriteFontText(this);this._color=null;this._measureTextCallback=null;this._wrappedText.Clear();this._wrappedText=null;this._spriteFont=null;this._bbString=null}_MeasureText(str,styles){const scaleStyle=this._GetStyleTag(styles,"scale");const scale=(scaleStyle?parseFloat(scaleStyle.param):this._scale)*this._sceneGraphScale;const scaleXStyle=this._GetStyleTag(styles,"scalex");const scaleX=
(scaleXStyle?parseFloat(scaleXStyle.param):1)*scale;const scaleYStyle=this._GetStyleTag(styles,"scaley");const scaleY=(scaleYStyle?parseFloat(scaleYStyle.param):1)*scale;const lineTotalHeight=this._spriteFont.GetCharacterHeight()*scaleY+this._lineHeight;const spriteFont=this.GetSpriteFont();const defaultCharWidth=spriteFont.GetCharacterWidth()*scaleX;const spacing=this.GetSpacing();if(spriteFont.HasAnyCustomWidths()){let strLen=0;let totalWidth=0;for(const ch of str){let charWidth=defaultCharWidth;
const sfc=spriteFont.GetCharacter(ch);if(sfc)charWidth=sfc.GetDisplayWidth()*scaleX;else if(ch===" ")charWidth=spriteFont.GetSpaceWidth()*scaleX;totalWidth+=charWidth;++strLen}return{width:totalWidth+strLen*spacing,height:lineTotalHeight}}else{const strLen=[...str].length;const spaceCount=Math.max(strLen,0);return{width:defaultCharWidth*strLen+spaceCount*spacing,height:lineTotalHeight}}}_SetWrapChanged(){this._wrapChanged=true;this._wrappedText.Clear()}SetSize(cssWidth,cssHeight){if(cssWidth<=0||
cssHeight<=0)return;if(this._cssWidth===cssWidth&&this._cssHeight===cssHeight)return;if(this._cssWidth!==cssWidth)this._SetWrapChanged();this._cssWidth=cssWidth;this._cssHeight=cssHeight}SetDrawMaxCharacterCount(n){this._drawMaxCharCount=Math.floor(n)}GetDrawMaxCharacterCount(){return this._drawMaxCharCount}_GetStyleTag(styles,tag){for(let i=styles.length-1;i>=0;--i){const s=styles[i];if(s.tag===tag)return s}return null}_HasStyleTag(styles,tag){return!!this._GetStyleTag(styles,tag)}_MaybeWrapText(){if(!this._wrapChanged)return;
if(this._isBBcodeEnabled&&(!this._bbString||this._bbString.toString()!==this._text))this._bbString=new C3.BBString(this._text,{noEscape:true});const endOfLineMargin=-this.GetSpacing();this._wrappedText.WordWrap(this._isBBcodeEnabled?this._bbString.toFragmentList():this._text,this._measureTextCallback,this._cssWidth,this._wrapMode,endOfLineMargin);this._wrapChanged=false}Draw(renderer,offX,offY,angle){this._MaybeWrapText();this._drawCharCount=0;let penY=0;const lineSpaceHeight=this._lineHeight;const lines=
C3.cloneArray(this._wrappedText.GetLines());const sin_a=Math.sin(angle);const cos_a=Math.cos(angle);const linesTotalHeight=lines.reduce((a,v)=>a+v.height,0)-lineSpaceHeight;if(this._verticalAlign==="center")penY=Math.max(Math.floor(this._cssHeight/2-linesTotalHeight/2),0);else if(this._verticalAlign==="bottom")penY=Math.floor(this._cssHeight-linesTotalHeight);for(let i=0,len=lines.length;i<len;++i){const line=lines[i];const curLineTextHeight=line.height;if(i>0&&penY>this._cssHeight-(curLineTextHeight-
lineSpaceHeight))break;if(penY>=0)this._DrawLine(renderer,line,offX,offY,penY,sin_a,cos_a);penY+=curLineTextHeight}}_DrawLine(renderer,line,offX,offY,penY,sin_a,cos_a){const lineHeight=line.height;let penX=0;if(this._horizontalAlign==="center")penX=Math.max(Math.floor((this._cssWidth-line.width)/2),0);else if(this._horizontalAlign==="right")penX=Math.max(Math.floor(this._cssWidth-line.width),0);for(const frag of line.fragments){this._DrawFragment(renderer,frag,offX,offY,penX,penY,sin_a,cos_a,lineHeight);
penX+=frag.width}}_DrawFragment(renderer,frag,offX,offY,penX,penY,sin_a,cos_a,lineHeight){let text=frag.text;let fragWidth=frag.width;const styles=frag.styles;if(this._drawMaxCharCount!==-1){if(this._drawCharCount>=this._drawMaxCharCount)return;if(this._drawCharCount+text.length>this._drawMaxCharCount){text=text.substr(0,this._drawMaxCharCount-this._drawCharCount);fragWidth=this._MeasureText(text,styles).width}this._drawCharCount+=text.length}const backgroundStyle=this._GetStyleTag(styles,"background");
if(C3.IsStringAllWhitespace(text)&&!backgroundStyle||this._HasStyleTag(styles,"hide"))return;const scaleStyle=this._GetStyleTag(styles,"scale");const scale=(scaleStyle?parseFloat(scaleStyle.param):this._scale)*this._sceneGraphScale;const scaleXStyle=this._GetStyleTag(styles,"scalex");const scaleX=(scaleXStyle?parseFloat(scaleXStyle.param):1)*scale;const scaleYStyle=this._GetStyleTag(styles,"scaley");const scaleY=(scaleYStyle?parseFloat(scaleYStyle.param):1)*scale;const charHeight=this._spriteFont.GetCharacterHeight()*
scaleY;const lineSpaceHeight=this._lineHeight;penY+=lineHeight-lineSpaceHeight-charHeight;const offsetXStyle=this._GetStyleTag(styles,"offsetx");penX+=offsetXStyle?parseFloat(offsetXStyle.param):0;const offsetYStyle=this._GetStyleTag(styles,"offsety");penY+=offsetYStyle?parseFloat(offsetYStyle.param):0;if(backgroundStyle){renderer.SetColorFillMode();tmpColor.parseString(backgroundStyle.param);tmpColor.setA(1);renderer.SetColor(tmpColor);tmpRect.set(penX,penY,penX+fragWidth,penY+charHeight);if(tmpRect.getRight()>
this._cssWidth)tmpRect.setRight(this._cssWidth);tmpQuad.setFromRotatedRectPrecalc(tmpRect,sin_a,cos_a);tmpQuad.offset(offX,offY);renderer.Quad(tmpQuad);renderer.SetTextureFillMode()}const colorStyle=this._GetStyleTag(styles,"color");if(colorStyle){tmpColor.parseString(colorStyle.param);tmpColor.setA(this._color.getA())}else tmpColor.copy(this._color);const opacityStyle=this._GetStyleTag(styles,"opacity");if(opacityStyle)tmpColor.setA(tmpColor.getA()*parseFloat(opacityStyle.param)/100);tmpColor.premultiply();
renderer.SetColor(tmpColor);const drawCharWidth=this._spriteFont.GetCharacterWidth()*scaleX;const endOfLineMargin=Math.abs(this.GetSpacing());for(const ch of text){const sfc=this._spriteFont.GetCharacter(ch);if(sfc){const layoutCharWidth=sfc.GetDisplayWidth()*scaleX;if(penX+layoutCharWidth>this._cssWidth+endOfLineMargin+1E-5)return;tmpRect.set(penX,penY,penX+drawCharWidth,penY+charHeight);tmpQuad.setFromRotatedRectPrecalc(tmpRect,sin_a,cos_a);tmpQuad.offset(offX,offY);renderer.Quad3(tmpQuad,sfc.GetTexRect());
penX+=layoutCharWidth+this._spacing}else penX+=this._spriteFont.GetSpaceWidth()*scaleX+this._spacing}}GetSpriteFont(){return this._spriteFont}SetBBCodeEnabled(e){e=!!e;if(this._isBBcodeEnabled===e)return;this._isBBcodeEnabled=e;this._SetWrapChanged()}IsBBCodeEnabled(){return this._isBBcodeEnabled}SetText(text){if(this._text===text)return;this._text=text;this._SetWrapChanged()}SetWordWrapMode(w){if(!VALID_WORD_WRAP_MODES.has(w))throw new Error("invalid word wrap mode");if(this._wrapMode===w)return;
this._wrapMode=w;this._SetWrapChanged()}SetHorizontalAlign(a){if(!VALID_HORIZ_ALIGNMENTS.has(a))throw new Error("invalid alignment");this._horizontalAlign=a}SetVerticalAlign(a){if(!VALID_VERT_ALIGNMENTS.has(a))throw new Error("invalid alignment");this._verticalAlign=a}SetScale(s){if(this._scale===s)return;this._scale=s;this._SetWrapChanged()}GetScale(){return this._scale}SetSceneGraphScale(s){if(this._sceneGraphScale===s)return;this._sceneGraphScale=s;this._SetWrapChanged()}GetSceneGraphScale(){return this._sceneGraphScale}SetSpacing(s){if(this._spacing===
s)return;this._spacing=s;this._SetWrapChanged()}GetSpacing(){return this._spacing}SetLineHeight(h){this._lineHeight=h;this._SetWrapChanged()}GetLineHeight(){return this._lineHeight}SetOpacity(o){o=C3.clamp(o,0,1);this._color.a=o}SetColor(c){if(this._color.equals(c))return;this._color.copy(c)}GetColor(){return this._color}GetTextWidth(){this._MaybeWrapText();return this._wrappedText.GetMaxLineWidth()}GetTextHeight(){this._MaybeWrapText();const lineTextHeight=this._spriteFont.GetCharacterHeight()*this._scale;
const lineSpaceHeight=this._lineHeight;const lineTotalHeight=lineTextHeight+lineSpaceHeight;return this._wrappedText.GetLineCount()*lineTotalHeight-lineSpaceHeight}};

}

{
'use strict';const C3=self.C3;const SpriteFontText=self.SpriteFontText;const DEFAULT_SPRITEFONT_OPTS={width:256,height:256,characterWidth:16,characterHeight:16,characterSet:""};
self.SpriteFont=class SpriteFont{constructor(opts){opts=Object.assign({},DEFAULT_SPRITEFONT_OPTS,opts);if(opts.width<=0||opts.height<=0||opts.characterWidth<=0||opts.characterHeight<=0)throw new Error("invalid size");this._width=opts.width;this._height=opts.height;this._characterWidth=opts.characterWidth;this._characterHeight=opts.characterHeight;this._characterSet=opts.characterSet;this._spacingData="";this._spacingParsed=null;this._hasAnyCustomWidths=false;this._spaceWidth=-1;this._texRect=new C3.Rect(0,
0,1,1);this._characterMap=new Map;this._mapChanged=true;this._allTexts=new Set}Release(){this._texRect=null;this._ReleaseCharacters();this._characterMap=null;if(this._allTexts)this._allTexts.clear();this._allTexts=null}_ReleaseCharacters(){for(let c of this._characterMap.values())c.Release();this._characterMap.clear()}_AddSpriteFontText(sft){this._allTexts.add(sft)}_RemoveSpriteFontText(sft){this._allTexts.delete(sft)}UpdateCharacterMap(){if(!this._mapChanged)return;this._ReleaseCharacters();let charSetArr=
[...this._characterSet];let cols=Math.floor(this._width/this._characterWidth);let rows=Math.floor(this._height/this._characterHeight);let last=cols*rows;for(let i=0,len=charSetArr.length;i<len;++i){if(i>=last)break;let x=i%cols;let y=Math.floor(i/cols);let char=charSetArr[i];this._characterMap.set(char,C3.New(self.SpriteFontCharacter,this,char,x*this._characterWidth,y*this._characterHeight))}this._hasAnyCustomWidths=false;this._spaceWidth=-1;if(Array.isArray(this._spacingParsed))for(let entry of this._spacingParsed){if(!Array.isArray(entry))continue;
if(entry.length!==2)continue;let charWidth=entry[0];let str=entry[1];if(typeof charWidth!=="number"||!isFinite(charWidth)||typeof str!=="string")continue;if(charWidth===this._characterWidth)continue;for(let ch of str){let sfc=this._characterMap.get(ch);if(sfc){sfc.SetDisplayWidth(charWidth);this._hasAnyCustomWidths=true}else if(ch===" "){this._spaceWidth=charWidth;this._hasAnyCustomWidths=true}}}this._mapChanged=false;for(let sft of this._allTexts)sft._SetWrapChanged()}SetCharacterWidthsChanged(){this._hasAnyCustomWidths=
true;for(const sft of this._allTexts)sft._SetWrapChanged()}GetCharacter(ch){this.UpdateCharacterMap();return this._characterMap.get(ch)||null}HasAnyCustomWidths(){return this._hasAnyCustomWidths}SetWidth(w){w=Math.floor(w);if(w<=0)throw new Error("invalid size");if(this._width===w)return;this._width=w;this._mapChanged=true}GetWidth(){return this._width}SetHeight(h){h=Math.floor(h);if(h<=0)throw new Error("invalid size");if(this._height===h)return;this._height=h;this._mapChanged=true}GetHeight(){return this._height}SetTexRect(rc){if(this._texRect.equals(rc))return;
this._texRect.copy(rc);for(const sfc of this._characterMap.values())sfc._UpdateTexRect()}GetTexRect(){return this._texRect}SetCharacterWidth(w){w=Math.floor(w);if(w<=0)throw new Error("invalid size");if(this._characterWidth===w)return;this._characterWidth=w;this._mapChanged=true}GetCharacterWidth(){return this._characterWidth}SetCharacterHeight(h){h=Math.floor(h);if(h<=0)throw new Error("invalid size");if(this._characterHeight===h)return;this._characterHeight=h;this._mapChanged=true}GetCharacterHeight(){return this._characterHeight}SetCharacterSet(s){if(this._characterSet===
s)return;this._characterSet=s;this._mapChanged=true}GetCharacterSet(){return this._characterSet}SetSpacingData(s){if(this._spacingData===s)return;this._spacingData=s;this._mapChanged=true;this._spacingParsed=null;if(this._spacingData.length)try{this._spacingParsed=JSON.parse(this._spacingData)}catch(e){this._spacingParsed=null}}GetSpacingData(){return this._spacingData}SetSpaceWidth(w){if(w<0)w=-1;if(this._spaceWidth===w)return;this._spaceWidth=w;if(this._spaceWidth>=0)this._hasAnyCustomWidths=true}GetSpaceWidth(){if(this._spaceWidth<
0)return this._characterWidth;else return this._spaceWidth}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Particles=class ParticlesPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Particles.Type=class ParticlesType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){this.GetImageInfo().LoadAsset(this._runtime)}LoadTextures(renderer){return this.GetImageInfo().LoadStaticTexture(renderer,{sampling:this._runtime.GetSampling()})}ReleaseTextures(){this.GetImageInfo().ReleaseTexture()}};

}

{
'use strict';const C3=self.C3;const RATE=0;const SPRAY_CONE=1;const TYPE=2;const SPAWNOBJECTCLASS=3;const SPEED=4;const SIZE=5;const OPACITY=6;const GROW_RATE=7;const X_RANDOMISER=8;const Y_RANDOMISER=9;const INITIAL_SPEED_RANDOMISER=10;const SIZE_RANDOMISER=11;const GROW_RATE_RANDOMISER=12;const ACCELERATION=13;const GRAVITY=14;const ANGLE_RANDOMISER=15;const LIFE_SPEED_RANDOMISER=16;const OPACITY_RANDOMISER=17;const DESTROY_MODE=18;const TIMEOUT=19;const CONTINUOUS=0;const ONE_SHOT=1;
const tempRect=C3.New(C3.Rect);
C3.Plugins.Particles.Instance=class ParticlesInstance extends C3.SDKWorldInstanceBase{constructor(inst,properties){super(inst);this._isFirstTick=true;const pe=C3.New(self.ParticleEngine);this._particleEngine=pe;pe.ononeshotfinish=()=>this._OnOneShotFinish();this._spawnObjectClass=null;this._particleUpdateCallback=(inst,dx,dy,dSize,dAngle,dOpacity)=>this._OnParticleUpdate(inst,dx,dy,dSize,dAngle,dOpacity);this._particleDestroyCallback=inst=>this._OnParticleDestroy(inst);this._hasAnyDefaultParticle=
true;if(properties){pe.SetRate(properties[RATE]);pe.SetSprayCone(C3.toRadians(properties[SPRAY_CONE]));pe.SetSprayType(properties[TYPE]?"one-shot":"continuous-spray");this._SetParticleObjectClass(this._runtime.GetObjectClassBySID(properties[SPAWNOBJECTCLASS]));pe.SetInitSpeed(properties[SPEED]);pe.SetInitSize(properties[SIZE]);pe.SetInitOpacity(properties[OPACITY]/100);pe.SetGrowRate(properties[GROW_RATE]);pe.SetInitXRandom(properties[X_RANDOMISER]);pe.SetInitYRandom(properties[Y_RANDOMISER]);pe.SetInitSpeedRandom(properties[INITIAL_SPEED_RANDOMISER]);
pe.SetInitSizeRandom(properties[SIZE_RANDOMISER]);pe.SetGrowRandom(properties[GROW_RATE_RANDOMISER]);pe.SetAcceleration(properties[ACCELERATION]);pe.SetGravity(properties[GRAVITY]);pe.SetLifeAngleRandom(properties[ANGLE_RANDOMISER]);pe.SetLifeSpeedRandom(properties[LIFE_SPEED_RANDOMISER]);pe.SetLifeOpacityRandom(properties[OPACITY_RANDOMISER]);pe.SetDestroyModeIndex(properties[DESTROY_MODE]);pe.SetTimeout(properties[TIMEOUT])}this._UpdateEngineParameters();if(this._spawnObjectClass)this._hasAnyDefaultParticle=
false;if(pe.GetSprayType()==="one-shot")pe.CreateOneShotSpray();else pe.SetSpraying(true);const wi=this.GetWorldInfo();wi.SetBboxChangeEventEnabled(true);this._inst.Dispatcher().addEventListener("bboxchange",()=>{wi.OverwriteBoundingBox(this._particleEngine.GetBoundingBox())});if(this.GetRuntime().GetRenderer().IsWebGPU())wi.SetUsePointsShaderProgram();this._StartTicking()}Release(){this._particleEngine.Release();this._particleEngine=null;this._particleUpdateCallback=null;this._particleDestroyCallback=
null;super.Release()}_SetParticleObjectClass(objectClass){if(objectClass===this.GetObjectClass())objectClass=null;this._spawnObjectClass=objectClass;this._particleEngine.onparticlecreate=objectClass?p=>this._OnParticleCreate(p):null;if(!this._spawnObjectClass)this._hasAnyDefaultParticle=true}_UpdateEngineParameters(){const pe=this._particleEngine;const wi=this.GetWorldInfo();pe.SetMasterOpacity(wi.GetOpacity());pe.SetPixelRounding(this._runtime.IsPixelRoundingEnabled());pe.SetSpawnX(wi.GetX());pe.SetSpawnY(wi.GetY());
pe.SetSpawnAngle(wi.GetAngle());pe.SetInitSizeScale(wi.GetSceneGraphScale())}_OnOneShotFinish(){this._runtime.DestroyInstance(this._inst)}Draw(renderer){if(!this._hasAnyDefaultParticle)return;const imageInfo=this._objectClass.GetImageInfo();const texture=imageInfo.GetTexture();if(!texture)return;const wi=this.GetWorldInfo();const layer=wi.GetLayer();const viewport=tempRect;if(this._runtime.GetCanvasManager().IsPastingToDrawingCanvas())viewport.set(-Infinity,-Infinity,Infinity,Infinity);else if(layer.Has3DCamera())layer.CalculateViewport3D(wi.GetTotalZElevation(),
viewport);else layer.GetViewportForZ(wi.GetTotalZElevation(),viewport);renderer.SetTexture(texture);const zScaleFactor=layer.Get2DScaleFactorToZ(wi.GetTotalZElevation());this._particleEngine.SetParticleScale(layer.GetRenderScale()*zScaleFactor);this._particleEngine.Draw(renderer,imageInfo.GetTexRect(),viewport,layer.Has3DCamera())}SaveToJson(){const pe=this._particleEngine;return{"r":pe.GetRate(),"sc":pe.GetSprayCone(),"st":pe.GetSprayType(),"isp":pe.GetInitSpeed(),"isz":pe.GetInitSize(),"io":pe.GetInitOpacity(),
"gr":pe.GetGrowRate(),"xr":pe.GetInitXRandom(),"yr":pe.GetInitYRandom(),"spr":pe.GetInitSpeedRandom(),"szr":pe.GetInitSizeRandom(),"grnd":pe.GetGrowRandom(),"acc":pe.GetAcceleration(),"g":pe.GetGravity(),"lar":pe.GetLifeAngleRandom(),"lsr":pe.GetLifeSpeedRandom(),"lor":pe.GetLifeOpacityRandom(),"dm":pe.GetDestroyModeIndex(),"to":pe.GetTimeout(),"s":pe.IsSpraying(),"pcc":pe._GetCreateCounter(),"ft":this._isFirstTick,"p":pe.GetParticles().map(p=>p.toJSON())}}LoadFromJson(o){const pe=this._particleEngine;
pe.SetRate(o["r"]);pe.SetSprayCone(o["sc"]);pe.SetSprayType(o["st"]);pe.SetInitSpeed(o["isp"]);pe.SetInitSize(o["isz"]);pe.SetInitOpacity(o["io"]);pe.SetGrowRate(o["gr"]);pe.SetInitXRandom(o["xr"]);pe.SetInitYRandom(o["yr"]);pe.SetInitSpeedRandom(o["spr"]);pe.SetInitSizeRandom(o["szr"]);pe.SetGrowRandom(o["grnd"]);pe.SetAcceleration(o["acc"]);pe.SetGravity(o["g"]);pe.SetLifeAngleRandom(o["lar"]);pe.SetLifeSpeedRandom(o["lsr"]);pe.SetLifeOpacityRandom(o["lor"]);pe.SetDestroyModeIndex(o["dm"]);pe.SetTimeout(o["to"]);
pe.SetSpraying(o["s"]);pe._SetCreateCounter(o["pcc"]);this._isFirstTick=o["ft"];const particlesData=o["p"];pe.SetParticleCount(particlesData.length);const particles=pe.GetParticles();for(let i=0,len=particles.length;i<len;++i)particles[i].setFromJSON(particlesData[i])}Tick(){const dt=this._runtime.GetDt(this._inst);this._UpdateEngineParameters();if(this._isFirstTick&&this._particleEngine.GetSprayType()==="one-shot")this._particleEngine.ReInitAllParticles();this._particleEngine.Tick(dt);if(this._particleEngine.IsSpraying())this._runtime.UpdateRender();
this.GetWorldInfo().SetBboxChanged();this._isFirstTick=false}_OnParticleCreate(p){const inst=this._runtime.CreateInstance(this._spawnObjectClass,this.GetWorldInfo().GetLayer(),p.GetX(),p.GetY());const wi=inst.GetWorldInfo();wi.SetSize(p.GetSize(),p.GetSize());wi.SetAngle(p.GetAngle());wi.SetOpacity(p.GetOpacity());wi.SetUnpremultipliedColor(this.GetWorldInfo().GetUnpremultipliedColor());wi.SetBboxChanged();wi.ZOrderMoveAdjacentToInstance(this.GetInstance(),true);inst._TriggerOnCreated();p.SetUpdateCallback(this._particleUpdateCallback);
p.SetDestroyCallback(this._particleDestroyCallback);return inst}_OnParticleUpdate(inst,dx,dy,dSize,dAngle,dOpacity){if(inst.IsDestroyed())return;const wi=inst.GetWorldInfo();wi.OffsetXY(dx,dy);wi.SetSize(wi.GetWidth()+dSize,wi.GetHeight()+dSize);wi.SetAngle(wi.GetAngle()+dAngle);wi.SetOpacity(wi.GetOpacity()+dOpacity);wi.SetBboxChanged()}_OnParticleDestroy(inst){if(inst.IsDestroyed())return;this._runtime.DestroyInstance(inst)}GetPropertyValueByIndex(index){const pe=this._particleEngine;switch(index){case RATE:return pe.GetRate();
case SPRAY_CONE:return C3.toDegrees(pe.GetSprayCone());case TYPE:return pe.GetSprayType()==="one-shot"?ONE_SHOT:CONTINUOUS;case SPEED:return pe.GetInitSpeed();case SIZE:return pe.GetInitSize();case OPACITY:return pe.GetInitOpacity()*100;case GROW_RATE:return pe.GetGrowRate();case X_RANDOMISER:return pe.GetInitXRandom();case Y_RANDOMISER:return pe.GetInitYRandom();case INITIAL_SPEED_RANDOMISER:return pe.GetInitSpeedRandom();case SIZE_RANDOMISER:return pe.GetInitSizeRandom();case GROW_RATE_RANDOMISER:return pe.GetGrowRandom();
case ACCELERATION:return pe.GetAcceleration();case GRAVITY:return pe.GetGravity();case ANGLE_RANDOMISER:return pe.GetLifeAngleRandom();case LIFE_SPEED_RANDOMISER:return pe.GetLifeSpeedRandom();case OPACITY_RANDOMISER:return pe.GetLifeOpacityRandom();case DESTROY_MODE:return pe.GetDestroyModeIndex();case TIMEOUT:return pe.GetTimeout()}}SetPropertyValueByIndex(index,value){const pe=this._particleEngine;switch(index){case RATE:pe.SetRate(value);break;case SPRAY_CONE:pe.SetSprayCone(C3.toRadians(value));
break;case TYPE:pe.SetSprayType(value?"one-shot":"continuous-spray");break;case SPEED:pe.SetInitSpeed(value);break;case SIZE:pe.SetInitSize(value);break;case OPACITY:pe.SetInitOpacity(value/100);break;case GROW_RATE:pe.SetGrowRate(value);break;case X_RANDOMISER:pe.SetInitXRandom(value);break;case Y_RANDOMISER:pe.SetInitYRandom(value);break;case INITIAL_SPEED_RANDOMISER:pe.SetInitSpeedRandom(value);break;case SIZE_RANDOMISER:pe.SetInitSizeRandom(value);break;case GROW_RATE_RANDOMISER:pe.SetGrowRandom(value);
break;case ACCELERATION:pe.SetAcceleration(value);break;case GRAVITY:pe.SetGravity(value);break;case ANGLE_RANDOMISER:pe.SetLifeAngleRandom(value);break;case LIFE_SPEED_RANDOMISER:pe.SetLifeSpeedRandom(value);break;case OPACITY_RANDOMISER:pe.SetLifeOpacityRandom(value);break;case DESTROY_MODE:pe.SetDestroyModeIndex(value);break;case TIMEOUT:pe.SetTimeout(value);break}}GetDebuggerProperties(){const prefix="plugins.particles";const propPrefix=prefix+".properties";const dbgPrefix=prefix+".debugger";
const pe=this._particleEngine;return[{title:prefix+".name",properties:[{name:dbgPrefix+".particle-count",value:pe.GetParticleCount()},{name:propPrefix+".type.name",value:[propPrefix+".type.items."+pe.GetSprayType()]},{name:dbgPrefix+".is-spraying",value:pe.IsSpraying(),onedit:v=>pe.SetSpraying(v)},{name:propPrefix+".rate.name",value:pe.GetRate(),onedit:v=>pe.SetRate(v)},{name:propPrefix+".spray-cone.name",value:C3.toDegrees(pe.GetSprayCone()),onedit:v=>pe.SetSprayCone(C3.toRadians(v))},{name:propPrefix+
".speed.name",value:pe.GetInitSpeed(),onedit:v=>pe.SetInitSpeed(v)},{name:propPrefix+".size.name",value:pe.GetInitSize(),onedit:v=>pe.SetInitSize(v)},{name:propPrefix+".opacity.name",value:pe.GetInitOpacity(),onedit:v=>pe.SetInitOpacity(v)},{name:propPrefix+".grow-rate.name",value:pe.GetGrowRate(),onedit:v=>pe.SetGrowRate(v)},{name:propPrefix+".x-randomiser.name",value:pe.GetInitXRandom(),onedit:v=>pe.SetInitXRandom(v)},{name:propPrefix+".y-randomiser.name",value:pe.GetInitYRandom(),onedit:v=>pe.SetInitYRandom(v)},
{name:propPrefix+".initial-speed-randomiser.name",value:pe.GetInitSpeedRandom(),onedit:v=>pe.SetInitSpeedRandom(v)},{name:propPrefix+".size-randomiser.name",value:pe.GetInitSizeRandom(),onedit:v=>pe.SetInitSizeRandom(v)},{name:propPrefix+".grow-rate-randomiser.name",value:pe.GetGrowRandom(),onedit:v=>pe.SetGrowRandom(v)},{name:propPrefix+".acceleration.name",value:pe.GetAcceleration(),onedit:v=>pe.SetAcceleration(v)},{name:propPrefix+".gravity.name",value:pe.GetGravity(),onedit:v=>pe.SetGravity(v)},
{name:propPrefix+".angle-randomiser.name",value:pe.GetLifeAngleRandom(),onedit:v=>pe.SetLifeAngleRandom(v)},{name:propPrefix+".life-speed-randomiser.name",value:pe.GetLifeSpeedRandom(),onedit:v=>pe.SetLifeSpeedRandom(v)},{name:propPrefix+".opacity-randomiser.name",value:pe.GetLifeOpacityRandom(),onedit:v=>pe.SetLifeOpacityRandom(v)},{name:propPrefix+".timeout.name",value:pe.GetTimeout(),onedit:v=>pe.SetTimeout(v)}]}]}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Particles.Cnds={IsSpraying(){return this._particleEngine.IsSpraying()}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Particles.Acts={SetSpraying(s){this._particleEngine.SetSpraying(s!==0)},SetRate(r){this._particleEngine.SetRate(r);if(this._particleEngine.GetSprayType()==="one-shot"&&this._isFirstTick)this._particleEngine.SetParticleCount(r)},SetParticleObject(objectClass){this._SetParticleObjectClass(objectClass)},UnsetParticleObject(){this._SetParticleObjectClass(null)},SetSprayCone(c){this._particleEngine.SetSprayCone(C3.toRadians(c))},SetInitSpeed(x){this._particleEngine.SetInitSpeed(x)},SetInitSize(x){this._particleEngine.SetInitSize(x)},
SetInitOpacity(x){this._particleEngine.SetInitOpacity(x/100)},SetGrowRate(x){this._particleEngine.SetGrowRate(x)},SetXRandomiser(x){this._particleEngine.SetInitXRandom(x)},SetYRandomiser(x){this._particleEngine.SetInitYRandom(x)},SetSpeedRandomiser(x){this._particleEngine.SetInitSpeedRandom(x)},SetSizeRandomiser(x){this._particleEngine.SetInitSizeRandom(x)},SetGrowRateRandomiser(x){this._particleEngine.SetGrowRandom(x)},SetParticleAcc(x){this._particleEngine.SetAcceleration(x)},SetGravity(x){this._particleEngine.SetGravity(x)},
SetAngleRandomiser(x){this._particleEngine.SetLifeAngleRandom(x)},SetLifeSpeedRandomiser(x){this._particleEngine.SetLifeSpeedRandom(x)},SetOpacityRandomiser(x){this._particleEngine.SetLifeOpacityRandom(x)},SetTimeout(x){this._particleEngine.SetTimeout(x)},SetEffect(effect){this.GetWorldInfo().SetBlendMode(effect);this._runtime.UpdateRender()}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Particles.Exps={ParticleCount(){return this._particleEngine.GetParticleCount()},Rate(){return this._particleEngine.GetRate()},SprayCone(){return C3.toDegrees(this._particleEngine.GetSprayCone())},InitSpeed(){return this._particleEngine.GetInitSpeed()},InitSize(){return this._particleEngine.GetInitSize()},InitOpacity(){return this._particleEngine.GetInitOpacity()*100},InitGrowRate(){return this._particleEngine.GetGrowRate()},XRandom(){return this._particleEngine.GetInitXRandom()},YRandom(){return this._particleEngine.GetInitYRandom()},
InitSizeRandom(){return this._particleEngine.GetInitSizeRandom()},InitSpeedRandom(){return this._particleEngine.GetInitSpeedRandom()},InitGrowRandom(){return this._particleEngine.GetGrowRandom()},ParticleAcceleration(){return this._particleEngine.GetAcceleration()},Gravity(){return this._particleEngine.GetGravity()},ParticleAngleRandom(){return this._particleEngine.GetLifeAngleRandom()},ParticleSpeedRandom(){return this._particleEngine.GetLifeSpeedRandom()},ParticleOpacityRandom(){return this._particleEngine.GetLifeOpacityRandom()},
Timeout(){return this._particleEngine.GetTimeout()}};

}

{
'use strict';const C3=self.C3;const inactiveParticles=[];const MAX_RECYCLE_PARTICLES=1E3;const VALID_SPRAY_TYPES=new Set(["continuous-spray","one-shot"]);const DESTROY_MODES=["fade-to-invisible","timeout-expired","particle-stopped"];
self.ParticleEngine=class ParticleEngine{constructor(){this._rate=0;this._sprayCone=0;this._sprayType="continuous-spray";this._isSpraying=false;this._masterOpacity=0;this._isPixelRounding=false;this._spawnX=0;this._spawnY=0;this._spawnAngle=0;this._initSpeed=0;this._initSize=0;this._initSizeScale=1;this._initOpacity=0;this._growRate=0;this._xRandom=0;this._yRandom=0;this._initSpeedRandom=0;this._initSizeRandom=0;this._growRandom=0;this._acceleration=0;this._gravity=0;this._lifeAngleRandom=0;this._lifeSpeedRandom=
0;this._lifeOpacityRandom=0;this._destroyMode=0;this._timeout=0;this._createCounter=0;this._particleScale=1;this.ononeshotfinish=null;this.onparticlecreate=null;this._particles=[];this._boundingBox=new C3.Rect;this._color=new C3.Color}Release(){this.Cancel();C3.clearArray(this._particles);this._particles=null;this.ononeshotfinish=null;this.onparticlecreate=null;this._boundingBox=null;this._boundingBox=null;this._color=null}Cancel(){const particles=this._particles;for(let i=0,len=particles.length;i<
len;++i)particles[i].Destroy();C3.appendArray(inactiveParticles,particles);C3.clearArray(particles);if(inactiveParticles.length>MAX_RECYCLE_PARTICLES)C3.truncateArray(inactiveParticles,MAX_RECYCLE_PARTICLES);this._isSpraying=false}CreateOneShotSpray(){for(let i=0,len=this._rate;i<len;++i)this._CreateParticle();if(this._particles.length)this._isSpraying=true}_CreateParticle(){let ret=null;if(inactiveParticles.length){ret=inactiveParticles.pop();ret.SetEngine(this)}else ret=C3.New(self.Particle,this);
this._particles.push(ret);ret.Init(this.onparticlecreate);return ret}ReInitAllParticles(){const particles=this._particles;const onparticlecreate=this.onparticlecreate;for(let i=0,len=particles.length;i<len;++i)particles[i].Init(onparticlecreate)}SetParticleCount(c){const particles=this._particles;if(c<particles.length){const diff=particles.length-c;for(let i=0;i<diff;++i){const p=particles.pop();p.Destroy();inactiveParticles.push(p)}if(inactiveParticles.length>MAX_RECYCLE_PARTICLES)C3.truncateArray(inactiveParticles,
MAX_RECYCLE_PARTICLES)}else if(c>particles.length){const diff=c-particles.length;for(let i=0;i<diff;++i)this._CreateParticle()}}GetParticles(){return this._particles}GetParticleCount(){return this._particles.length}Tick(dt){this._SpawnContinuous(dt);this._TickParticles(dt);this._MaybeFinishOneShot()}_SpawnContinuous(dt){if(this._sprayType==="continuous-spray"&&this._isSpraying){this._createCounter+=dt*this._rate;const n=Math.floor(this._createCounter);this._createCounter-=n;for(let i=0;i<n;++i)this._CreateParticle()}}_SetCreateCounter(c){this._createCounter=
c}_GetCreateCounter(){return this._createCounter}_TickParticles(dt){const bbox=this._boundingBox;bbox.set(this._spawnX,this._spawnY,this._spawnX,this._spawnY);const particles=this._particles;let j=0;for(let i=0,len=particles.length;i<len;++i){const p=particles[i];particles[j]=p;p.Tick(dt);if(p.IsActive()){++j;bbox.expandToContain(p.GetBoundingBox())}else{p.Destroy();inactiveParticles.push(p)}}C3.truncateArray(particles,j);if(inactiveParticles.length>MAX_RECYCLE_PARTICLES)C3.truncateArray(inactiveParticles,
MAX_RECYCLE_PARTICLES)}_MaybeFinishOneShot(){if(this._sprayType==="one-shot"&&this._particles.length===0&&this._isSpraying){if(this.ononeshotfinish)this.ononeshotfinish();this._isSpraying=false}}Draw(renderer,texRect,viewport,forceQuads){renderer.StartRenderingPoints(texRect);this._color.copy(renderer.GetColor());const particles=this._particles;for(let i=0,len=particles.length;i<len;++i){const p=particles[i];if(viewport.intersectsRect(p.GetBoundingBox()))p.Draw(renderer,texRect,forceQuads)}renderer.FinishRenderingPoints()}GetColor(){return this._color}SetRate(r){this._rate=
+r}GetRate(){return this._rate}SetSprayCone(c){this._sprayCone=+c}GetSprayCone(){return this._sprayCone}SetSprayType(type){if(!VALID_SPRAY_TYPES.has(type))throw new Error("invalid spray type");this._sprayType=type}GetSprayType(){return this._sprayType}SetSpraying(s){this._isSpraying=!!s}IsSpraying(){return this._isSpraying}SetMasterOpacity(o){this._masterOpacity=+o}GetMasterOpacity(){return this._masterOpacity}SetPixelRounding(r){this._isPixelRounding=!!r}IsPixelRounding(){return this._isPixelRounding}SetSpawnX(x){this._spawnX=
+x}GetSpawnX(){return this._spawnX}SetSpawnY(y){this._spawnY=+y}GetSpawnY(){return this._spawnY}SetSpawnAngle(a){this._spawnAngle=+a}GetInitAngle(){return this._spawnAngle}SetInitSpeed(s){this._initSpeed=+s}GetInitSpeed(){return this._initSpeed}SetInitSize(s){this._initSize=+s}GetInitSize(){return this._initSize}SetInitSizeScale(s){this._initSizeScale=+s}GetInitSizeScale(){return this._initSizeScale}SetInitOpacity(o){this._initOpacity=+o}GetInitOpacity(){return this._initOpacity}SetGrowRate(g){this._growRate=
+g}GetGrowRate(){return this._growRate}SetInitXRandom(x){this._xRandom=+x}GetInitXRandom(){return this._xRandom}SetInitYRandom(y){this._yRandom=+y}GetInitYRandom(){return this._yRandom}SetInitSpeedRandom(s){this._initSpeedRandom=+s}GetInitSpeedRandom(){return this._initSpeedRandom}SetInitSizeRandom(s){this._initSizeRandom=+s}GetInitSizeRandom(){return this._initSizeRandom}SetGrowRandom(g){this._growRandom=+g}GetGrowRandom(){return this._growRandom}SetAcceleration(a){this._acceleration=+a}GetAcceleration(){return this._acceleration}SetGravity(g){this._gravity=
+g}GetGravity(){return this._gravity}SetLifeAngleRandom(a){this._lifeAngleRandom=+a}GetLifeAngleRandom(){return this._lifeAngleRandom}SetLifeSpeedRandom(s){this._lifeSpeedRandom=+s}GetLifeSpeedRandom(){return this._lifeSpeedRandom}SetLifeOpacityRandom(o){this._lifeOpacityRandom=+o}GetLifeOpacityRandom(){return this._lifeOpacityRandom}SetDestroyMode(m){let i=DESTROY_MODES.indexOf(m);if(i===-1)throw new Error("invalid destroy mode");this._destroyMode=i}SetDestroyModeIndex(i){this.SetDestroyMode(DESTROY_MODES[i])}GetDestroyMode(){return DESTROY_MODES[this._destroyMode]}GetDestroyModeIndex(){return this._destroyMode}SetTimeout(t){this._timeout=
+t}GetTimeout(){return this._timeout}SetParticleScale(s){this._particleScale=+s}GetParticleScale(){return this._particleScale}GetBoundingBox(){return this._boundingBox}};

}

{
'use strict';const C3=self.C3;const ParticleEngine=self.ParticleEngine;function randomOffset(x){return Math.random()*x-x/2}const tmpQuad=new C3.Quad;const tmpColor=new C3.Color;const DPR=self.devicePixelRatio||1;let didChangeColor=false;
self.Particle=class Particle{constructor(engine){this._engine=engine;this._isActive=false;this._x=0;this._y=0;this._speed=0;this._angle=0;this._opacity=1;this._lastOpacity=0;this._grow=0;this._size=0;this._halfSize=0;this._gs=0;this._age=0;this._bbox=new C3.Rect;this._userData=null;this._updateCallback=null;this._destroyCallback=null}SetEngine(engine){this._engine=engine}Init(particleCreateCallback){const engine=this._engine;this._isActive=true;this._x=engine.GetSpawnX()+randomOffset(engine.GetInitXRandom());
this._y=engine.GetSpawnY()+randomOffset(engine.GetInitYRandom());this._speed=engine.GetInitSpeed()+randomOffset(engine.GetInitSpeedRandom());this._angle=engine.GetInitAngle()+randomOffset(engine.GetSprayCone());this._opacity=engine.GetInitOpacity();this._lastOpacity=this._opacity;this._size=(engine.GetInitSize()+randomOffset(engine.GetInitSizeRandom()))*engine.GetInitSizeScale();this._halfSize=this._size/2;this._grow=engine.GetGrowRate()+randomOffset(engine.GetGrowRandom());this._gs=0;this._age=0;
this._UpdateBoundingBox();if(particleCreateCallback){if(!this._userData)this._userData=particleCreateCallback(this)}else{this._userData=null;this._updateCallback=null;this._destroyCallback=null}}SetUpdateCallback(f){this._updateCallback=f}SetDestroyCallback(f){this._destroyCallback=f}Destroy(){const particleDestroyCallback=this._destroyCallback;if(particleDestroyCallback)particleDestroyCallback(this._userData);this._userData=null;this._updateCallback=null;this._destroyCallback=null}toJSON(){return[this._x,
this._y,this._speed,this._angle,this._opacity,this._grow,this._size,this._gs,this._age]}setFromJSON(o){this._x=o[0];this._y=o[1];this._speed=o[2];this._angle=o[3];this._opacity=o[4];this._grow=o[5];this._size=o[6];this._gs=o[7];this._age=o[8];this._halfSize=this._size/2;this._UpdateBoundingBox()}Tick(dt){const engine=this._engine;const dist=this._speed*dt;const a=this._angle;const dx=Math.cos(a)*dist;const dy=Math.sin(a)*dist+this._gs*dt;this._x+=dx;this._y+=dy;const dSize=this._grow*dt;this._size+=
dSize;this._halfSize=this._size/2;this._speed+=engine.GetAcceleration()*dt;this._gs+=engine.GetGravity()*dt;this._age+=dt;this._UpdateBoundingBox();const lifeAngleRandom=engine.GetLifeAngleRandom();const lifeSpeedRandom=engine.GetLifeSpeedRandom();const lifeOpacityRandom=engine.GetLifeOpacityRandom();let dAngle=0;if(lifeAngleRandom!==0){dAngle=randomOffset(lifeAngleRandom*dt);this._angle+=dAngle}if(lifeSpeedRandom!==0)this._speed+=randomOffset(lifeSpeedRandom*dt);if(lifeOpacityRandom!==0)this._opacity=
C3.clamp(this._opacity+randomOffset(lifeOpacityRandom*dt),0,1);const isActive=this._size>=1&&(engine.GetDestroyModeIndex()===2?this._speed>0:this._age<engine.GetTimeout());const particleUpdateCallback=this._updateCallback;if(particleUpdateCallback&&isActive){let curOpacity=engine.GetMasterOpacity()*this._opacity;if(engine.GetDestroyModeIndex()===0)curOpacity*=1-this._age/engine.GetTimeout();const dOpacity=curOpacity-this._lastOpacity;this._lastOpacity=curOpacity;particleUpdateCallback(this._userData,
dx,dy,dSize,dAngle,dOpacity)}this._isActive=isActive}IsActive(){return this._isActive}GetBoundingBox(){return this._bbox}_UpdateBoundingBox(){const x=this._x;const y=this._y;const halfSize=this._halfSize;this._bbox.set(x-halfSize,y-halfSize,x+halfSize,y+halfSize)}Draw(renderer,texRect,forceQuads){if(this._userData)return;const engine=this._engine;let opacity=engine.GetMasterOpacity()*this._opacity;if(engine.GetDestroyModeIndex()===0)opacity*=1-this._age/engine.GetTimeout();if(opacity<=0)return;const size=
this._size;const scaledSize=size*engine.GetParticleScale()*DPR;if(scaledSize<1)return;let x=this._x;let y=this._y;if(engine.IsPixelRounding()){x=x+.5|0;y=y+.5|0}if(renderer.IsWebGPU())renderer.Point(x,y,size,opacity);else if(forceQuads||scaledSize>renderer.GetMaxPointSize()||scaledSize<renderer.GetMinPointSize()){tmpColor.copy(engine.GetColor());tmpColor.multiplyAlpha(opacity);renderer.SetColor(tmpColor);didChangeColor=true;tmpQuad.setFromRect(this._bbox);renderer.Quad3(tmpQuad,texRect)}else{if(didChangeColor){renderer.SetColor(engine.GetColor());
didChangeColor=false}renderer.Point(x,y,scaledSize,opacity)}}GetUserData(){return this._userData}GetX(){return this._x}GetY(){return this._y}GetSize(){return this._size}GetAngle(){return this._angle}GetOpacity(){return this._opacity}};

}

{
'use strict';const C3=self.C3;C3.Plugins.TiledBg=class TiledBgPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;function WrapModeToStr(wrapMode){switch(wrapMode){case 0:return"clamp-to-edge";case 1:return"repeat";case 2:return"mirror-repeat"}return"repeat"}
C3.Plugins.TiledBg.Type=class TiledBgType extends C3.SDKTypeBase{constructor(objectClass,exportData){super(objectClass);this._wrapX="repeat";this._wrapY="repeat";if(exportData){this._wrapX=WrapModeToStr(exportData[0]);this._wrapY=WrapModeToStr(exportData[1])}}Release(){super.Release()}OnCreate(){this.GetImageInfo().LoadAsset(this._runtime)}LoadTextures(renderer){return this.GetImageInfo().LoadStaticTexture(renderer,{sampling:this._runtime.GetSampling(),wrapX:this._wrapX,wrapY:this._wrapY})}ReleaseTextures(){this.GetImageInfo().ReleaseTexture()}};

}

{
'use strict';const C3=self.C3;const C3X=self.C3X;const INITIALLY_VISIBLE=0;const ORIGIN=1;const IMAGE_OFFSET_X=4;const IMAGE_OFFSET_Y=5;const IMAGE_SCALE_X=6;const IMAGE_SCALE_Y=7;const IMAGE_ANGLE=8;const tempRect=C3.New(C3.Rect);const tempQuad=C3.New(C3.Quad);const rcTex=C3.New(C3.Rect);const qTex=C3.New(C3.Quad);
C3.Plugins.TiledBg.Instance=class TiledBgInstance extends C3.SDKWorldInstanceBase{constructor(inst,properties){super(inst);this._imageOffsetX=0;this._imageOffsetY=0;this._imageScaleX=1;this._imageScaleY=1;this._imageAngle=0;this._ownImageInfo=null;if(properties){this.GetWorldInfo().SetVisible(!!properties[INITIALLY_VISIBLE]);this._imageOffsetX=properties[IMAGE_OFFSET_X];this._imageOffsetY=properties[IMAGE_OFFSET_Y];this._imageScaleX=properties[IMAGE_SCALE_X];this._imageScaleY=properties[IMAGE_SCALE_Y];
this._imageAngle=C3.toRadians(properties[IMAGE_ANGLE])}}Release(){this._ReleaseOwnImage();super.Release()}_ReleaseOwnImage(){if(this._ownImageInfo){this._ownImageInfo.Release();this._ownImageInfo=null}}CalculateTextureCoordsFor3DFace(areaWidth,areaHeight,outQuad){const imageInfo=this.GetCurrentImageInfo();const imageWidth=imageInfo.GetWidth();const imageHeight=imageInfo.GetHeight();const imageOffsetX=this._imageOffsetX/imageWidth;const imageOffsetY=this._imageOffsetY/imageHeight;const imageAngle=
this._imageAngle;rcTex.set(0,0,areaWidth/(imageWidth*this._imageScaleX),areaHeight/(imageHeight*this._imageScaleY));rcTex.offset(-imageOffsetX,-imageOffsetY);if(imageAngle===0)outQuad.setFromRect(rcTex);else outQuad.setFromRotatedRect(rcTex,-imageAngle)}Draw(renderer){const imageInfo=this.GetCurrentImageInfo();const texture=imageInfo.GetTexture();if(texture===null)return;renderer.SetTexture(texture);const imageWidth=imageInfo.GetWidth();const imageHeight=imageInfo.GetHeight();const imageOffsetX=this._imageOffsetX/
imageWidth;const imageOffsetY=this._imageOffsetY/imageHeight;const wi=this.GetWorldInfo();rcTex.set(0,0,wi.GetWidth()/(imageWidth*this._imageScaleX),wi.GetHeight()/(imageHeight*this._imageScaleY));rcTex.offset(-imageOffsetX,-imageOffsetY);if(wi.HasMesh())this._DrawMesh(wi,renderer);else this._DrawStandard(wi,renderer)}_DrawStandard(wi,renderer){let quad=wi.GetBoundingQuad();if(this._runtime.IsPixelRoundingEnabled())quad=wi.PixelRoundQuad(quad);if(this._imageAngle===0)renderer.Quad3(quad,rcTex);else{qTex.setFromRotatedRect(rcTex,
-this._imageAngle);renderer.Quad4(quad,qTex)}}_DrawMesh(wi,renderer){const transformedMesh=wi.GetTransformedMesh();if(wi.IsMeshChanged()){wi.CalculateBbox(tempRect,tempQuad,false);let quad=tempQuad;if(this._runtime.IsPixelRoundingEnabled())quad=wi.PixelRoundQuad(quad);let texCoords=rcTex;if(this._imageAngle!==0){qTex.setFromRotatedRect(rcTex,-this._imageAngle);texCoords=qTex}transformedMesh.CalculateTransformedMesh(wi.GetSourceMesh(),quad,texCoords);wi.SetMeshChanged(false)}transformedMesh.Draw(renderer)}GetCurrentImageInfo(){return this._ownImageInfo||
this._objectClass.GetImageInfo()}IsOriginalSizeKnown(){return true}GetTexture(){return this.GetCurrentImageInfo().GetTexture()}_SetMeshChanged(){this.GetWorldInfo().SetMeshChanged(true)}_SetImageOffsetX(x){if(this._imageOffsetX===x)return;this._imageOffsetX=x;this._runtime.UpdateRender();this._SetMeshChanged()}_GetImageOffsetX(){return this._imageOffsetX}_SetImageOffsetY(y){if(this._imageOffsetY===y)return;this._imageOffsetY=y;this._runtime.UpdateRender();this._SetMeshChanged()}_GetImageOffsetY(){return this._imageOffsetY}_SetImageScaleX(x){if(this._imageScaleX===
x)return;this._imageScaleX=x;this._runtime.UpdateRender();this._SetMeshChanged()}_GetImageScaleX(){return this._imageScaleX}_SetImageScaleY(y){if(this._imageScaleY===y)return;this._imageScaleY=y;this._runtime.UpdateRender();this._SetMeshChanged()}_GetImageScaleY(){return this._imageScaleY}_SetImageAngle(a){if(this._imageAngle===a)return;this._imageAngle=a;this._runtime.UpdateRender();this._SetMeshChanged()}_GetImageAngle(){return this._imageAngle}GetPropertyValueByIndex(index){switch(index){case IMAGE_OFFSET_X:return this._GetImageOffsetX();
case IMAGE_OFFSET_Y:return this._GetImageOffsetY();case IMAGE_SCALE_X:return this._GetImageScaleX();case IMAGE_SCALE_Y:return this._GetImageScaleY();case IMAGE_ANGLE:return this._GetImageAngle()}}SetPropertyValueByIndex(index,value){switch(index){case IMAGE_OFFSET_X:this._SetImageOffsetX(value);break;case IMAGE_OFFSET_Y:this._SetImageOffsetY(value);break;case IMAGE_SCALE_X:this._SetImageScaleX(value);break;case IMAGE_SCALE_Y:this._SetImageScaleY(value);break;case IMAGE_ANGLE:this._SetImageAngle(value);
break}}GetScriptInterfaceClass(){return self.ITiledBackgroundInstance}};const map=new WeakMap;
self.ITiledBackgroundInstance=class ITiledBackgroundInstance extends self.IWorldInstance{constructor(){super();map.set(this,self.IInstance._GetInitInst().GetSdkInstance())}set imageOffsetX(x){C3X.RequireFiniteNumber(x);map.get(this)._SetImageOffsetX(x)}get imageOffsetX(){return map.get(this)._GetImageOffsetX()}set imageOffsetY(y){C3X.RequireFiniteNumber(y);map.get(this)._SetImageOffsetY(y)}get imageOffsetY(){return map.get(this)._GetImageOffsetY()}set imageScaleX(x){C3X.RequireFiniteNumber(x);map.get(this)._SetImageScaleX(x)}get imageScaleX(){return map.get(this)._GetImageScaleX()}set imageScaleY(y){C3X.RequireFiniteNumber(y);
map.get(this)._SetImageScaleY(y)}get imageScaleY(){return map.get(this)._GetImageScaleY()}set imageAngle(a){C3X.RequireFiniteNumber(a);map.get(this)._SetImageAngle(a)}get imageAngle(){return map.get(this)._GetImageAngle()}set imageAngleDegrees(a){C3X.RequireFiniteNumber(a);map.get(this)._SetImageAngle(C3.toRadians(a))}get imageAngleDegrees(){return C3.toDegrees(map.get(this)._GetImageAngle())}get imageWidth(){return map.get(this).GetCurrentImageInfo().GetWidth()}get imageHeight(){return map.get(this).GetCurrentImageInfo().GetHeight()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.TiledBg.Cnds={OnURLLoaded(){return true},OnURLFailed(){return true}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.TiledBg.Acts={SetImageOffsetX(x){this._SetImageOffsetX(x)},SetImageOffsetY(y){this._SetImageOffsetY(y)},SetImageScaleX(x){this._SetImageScaleX(x/100)},SetImageScaleY(y){this._SetImageScaleY(y/100)},SetImageAngle(a){this._SetImageAngle(C3.toRadians(a))},SetEffect(effect){this.GetWorldInfo().SetBlendMode(effect);this._runtime.UpdateRender()},async LoadURL(url,crossOrigin){if(this._ownImageInfo&&this._ownImageInfo.GetURL()===url)return;const runtime=this._runtime;const imageInfo=C3.New(C3.ImageInfo);
try{await imageInfo.LoadDynamicAsset(runtime,url);if(!imageInfo.IsLoaded())throw new Error("image failed to load");if(this.WasReleased()){imageInfo.Release();return null}const texture=await imageInfo.LoadStaticTexture(runtime.GetRenderer(),{sampling:this._runtime.GetSampling(),wrapX:"repeat",wrapY:"repeat"});if(!texture)return}catch(err){console.error("Load image from URL failed: ",err);this.Trigger(C3.Plugins.TiledBg.Cnds.OnURLFailed);return}if(this.WasReleased()){imageInfo.Release();return}this._ReleaseOwnImage();
this._ownImageInfo=imageInfo;runtime.UpdateRender();await this.TriggerAsync(C3.Plugins.TiledBg.Cnds.OnURLLoaded)}};

}

{
'use strict';const C3=self.C3;C3.Plugins.TiledBg.Exps={ImageWidth(){return this.GetCurrentImageInfo().GetWidth()},ImageHeight(){return this.GetCurrentImageInfo().GetHeight()},ImageOffsetX(){return this._imageOffsetX},ImageOffsetY(){return this._imageOffsetY},ImageScaleX(){return this._imageScaleX*100},ImageScaleY(){return this._imageScaleY*100},ImageAngle(){return C3.toDegrees(this._imageAngle)}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Browser=class BrowserPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Browser.Type=class BrowserType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){}};

}

{
'use strict';const C3=self.C3;const DOM_COMPONENT_ID="browser";
C3.Plugins.Browser.Instance=class BrowserInstance extends C3.SDKInstanceBase{constructor(inst,properties){super(inst,DOM_COMPONENT_ID);this._initLocationStr="";this._isOnline=false;this._referrer="";this._docTitle="";this._isCookieEnabled=false;this._screenWidth=0;this._screenHeight=0;this._windowOuterWidth=0;this._windowOuterHeight=0;this._isScirraArcade=false;this.AddDOMMessageHandlers([["online-state",e=>this._OnOnlineStateChanged(e)],["backbutton",()=>this._OnBackButton()],["sw-message",e=>this._OnSWMessage(e)],
["hashchange",e=>this._OnHashChange(e)]]);const rt=this.GetRuntime().Dispatcher();this._disposables=new C3.CompositeDisposable(C3.Disposable.From(rt,"afterfirstlayoutstart",()=>this._OnAfterFirstLayoutStart()),C3.Disposable.From(rt,"window-resize",()=>this._OnWindowResize()),C3.Disposable.From(rt,"suspend",()=>this._OnSuspend()),C3.Disposable.From(rt,"resume",()=>this._OnResume()));this._runtime.AddLoadPromise(this.PostToDOMAsync("get-initial-state",{"exportType":this._runtime.GetExportType()}).then(data=>
{this._initLocationStr=data["location"];this._isOnline=data["isOnline"];this._referrer=data["referrer"];this._docTitle=data["title"];this._isCookieEnabled=data["isCookieEnabled"];this._screenWidth=data["screenWidth"];this._screenHeight=data["screenHeight"];this._windowOuterWidth=data["windowOuterWidth"];this._windowOuterHeight=data["windowOuterHeight"];this._isScirraArcade=data["isScirraArcade"]}))}Release(){super.Release()}_OnAfterFirstLayoutStart(){this.PostToDOM("ready-for-sw-messages")}async _OnOnlineStateChanged(e){const isOnline=
!!e["isOnline"];if(this._isOnline===isOnline)return;this._isOnline=isOnline;if(this._isOnline)await this.TriggerAsync(C3.Plugins.Browser.Cnds.OnOnline);else await this.TriggerAsync(C3.Plugins.Browser.Cnds.OnOffline)}async _OnWindowResize(){await this.TriggerAsync(C3.Plugins.Browser.Cnds.OnResize)}_OnSuspend(){this.Trigger(C3.Plugins.Browser.Cnds.OnPageHidden)}_OnResume(){this.Trigger(C3.Plugins.Browser.Cnds.OnPageVisible)}async _OnBackButton(){await this.TriggerAsync(C3.Plugins.Browser.Cnds.OnBackButton)}_OnSWMessage(e){const messageType=
e["type"];if(messageType==="downloading-update")this.Trigger(C3.Plugins.Browser.Cnds.OnUpdateFound);else if(messageType==="update-ready"||messageType==="update-pending")this.Trigger(C3.Plugins.Browser.Cnds.OnUpdateReady);else if(messageType==="offline-ready")this.Trigger(C3.Plugins.Browser.Cnds.OnOfflineReady)}_OnHashChange(e){this._initLocationStr=e["location"];this.Trigger(C3.Plugins.Browser.Cnds.OnHashChange)}GetDebuggerProperties(){const prefix="plugins.browser.debugger";return[{title:"plugins.browser.name",
properties:[{name:prefix+".user-agent",value:navigator.userAgent},{name:prefix+".is-online",value:this._isOnline},{name:prefix+".is-fullscreen",value:this._runtime.GetCanvasManager().IsDocumentFullscreen()}]}]}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Browser.Cnds={IsOnline(){return this._isOnline},OnOnline(){return true},OnOffline(){return true},OnResize(){return true},CookiesEnabled(){return this._isCookieEnabled},IsFullscreen(){return this._runtime.GetCanvasManager().IsDocumentFullscreen()},OnBackButton(){return true},IsPortraitLandscape(p){const lastInnerWidth=this._runtime.GetCanvasManager().GetLastWidth();const lastInnerHeight=this._runtime.GetCanvasManager().GetLastHeight();const current=lastInnerWidth<=lastInnerHeight?0:1;return current===
p},OnUpdateFound(){return true},OnUpdateReady(){return true},OnOfflineReady(){return true},OnHashChange(){return true},PageVisible(){return!this._runtime.IsSuspended()},OnPageHidden(){return true},OnPageVisible(){return true},HasJava(){return false},IsDownloadingUpdate(){return false},OnMenuButton(){return false},OnSearchButton(){return false},IsMetered(){return false},IsCharging(){return true},SupportsFullscreen(){return true}};

}

{
'use strict';const C3=self.C3;const ORIENTATIONS=["portrait","landscape","portrait-primary","portrait-secondary","landscape-primary","landscape-secondary"];
C3.Plugins.Browser.Acts={Alert(message){this.PostToDOM("alert",{"message":message.toString()})},Close(){if(this._isScirraArcade)return;if(this._runtime.IsDebug())self.C3Debugger.CloseWindow();else this.PostToDOM("close")},Focus(){this.PostToDOM("set-focus",{"isFocus":true})},Blur(){this.PostToDOM("set-focus",{"isFocus":false})},GoBack(){if(this._isScirraArcade)return;this.PostToDOM("navigate",{"type":"back"})},GoForward(){if(this._isScirraArcade)return;this.PostToDOM("navigate",{"type":"forward"})},
GoHome(){},Reload(){if(this._isScirraArcade)return;if(this._runtime.IsDebug())this._runtime.PostToDebugger({"type":"reload"});else this.PostToDOM("navigate",{"type":"reload"})},GoToURL(url,target){this._PostToDOMMaybeSync("navigate",{"type":"url","url":url,"target":target,"exportType":this._runtime.GetExportType()})},GoToURLWindow(url,tag){this._PostToDOMMaybeSync("navigate",{"type":"new-window","url":url,"tag":tag,"exportType":this._runtime.GetExportType()})},RequestFullScreen(mode,navUi){if(mode>=
2)mode+=1;if(mode===6)mode=2;if(mode===1)mode=0;const modeStr=C3.CanvasManager._FullscreenModeNumberToString(mode);this._runtime.GetCanvasManager().SetDocumentFullscreenMode(modeStr);this._PostToDOMMaybeSync("request-fullscreen",{"navUI":navUi})},CancelFullScreen(){this._PostToDOMMaybeSync("exit-fullscreen")},Vibrate(pattern){const arr=pattern.split(",");for(let i=0,len=arr.length;i<len;++i)arr[i]=parseInt(arr[i],10);this._PostToDOMMaybeSync("vibrate",{"pattern":arr})},async InvokeDownload(url,filename){if(!url||
!filename)return;const urlToDownload=await this._runtime.GetAssetManager().GetProjectFileUrl(url);this._runtime.InvokeDownload(urlToDownload,filename)},InvokeDownloadString(str,mimeType,filename){if(!filename)return;const dataUri=`data:${mimeType},${encodeURIComponent(str)}`;this._runtime.InvokeDownload(dataUri,filename)},ConsoleLog(type,msg){msg=msg.toString();if(type===0)console.log(msg);else if(type===1)console.warn(msg);else if(type===2)console.error(msg)},ConsoleGroup(name){console.group(name)},
ConsoleGroupEnd(){console.groupEnd()},ExecJs(jsStr){try{eval(jsStr)}catch(err){console.error("Error executing JavaScript: ",err)}},LockOrientation(o){o=Math.floor(o);if(o<0||o>=ORIENTATIONS.length)return;const orientation=ORIENTATIONS[o];this._PostToDOMMaybeSync("lock-orientation",{"orientation":orientation})},UnlockOrientation(){this._PostToDOMMaybeSync("unlock-orientation")},LoadStyleSheet(url){this._runtime.GetAssetManager().LoadStyleSheet(url)},SetHash(h){this.PostToDOM("set-hash",{"hash":h})}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Browser.Exps={URL(){if(this._runtime.IsInWorker())return this._initLocationStr;else return location.toString()},Protocol(){if(this._runtime.IsInWorker())return(new URL(this._initLocationStr)).protocol;else return location.protocol},Domain(){if(this._runtime.IsInWorker())return(new URL(this._initLocationStr)).hostname;else return location.hostname},Port(){if(this._runtime.IsInWorker())return(new URL(this._initLocationStr)).port;else return location.port},PathName(){if(this._runtime.IsInWorker())return(new URL(this._initLocationStr)).pathname;else return location.pathname},
Hash(){if(this._runtime.IsInWorker())return(new URL(this._initLocationStr)).hash;else return location.hash},QueryString(){if(this._runtime.IsInWorker())return(new URL(this._initLocationStr)).search;else return location.search},QueryParam(param){const search=this._runtime.IsInWorker()?(new URL(this._initLocationStr)).search:location.search;const match=RegExp("[?&]"+param+"=([^&]*)").exec(search);if(match)return decodeURIComponent(match[1].replace(/\+/g," "));else return""},Referrer(){return this._referrer},
Title(){return this._docTitle},Language(){return navigator.language},Platform(){return navigator.platform},UserAgent(){return navigator.userAgent},ExecJS(jsStr){let result=0;try{result=eval(jsStr)}catch(err){console.error("Error executing JavaScript: ",err)}if(typeof result==="number"||typeof result==="string")return result;if(typeof result==="boolean")return result?1:0;else return 0},Name(){return navigator.appName},Version(){return navigator.appVersion},Product(){return navigator.product},Vendor(){return navigator.vendor},
BatteryLevel(){return 1},BatteryTimeLeft(){return Infinity},Bandwidth(){const connection=navigator["connection"];if(connection)return connection["downlink"]||connection["downlinkMax"]||connection["bandwidth"]||Infinity;else return Infinity},ConnectionType(){const connection=navigator["connection"];if(connection)return connection["type"]||"unknown";else return"unknown"},DevicePixelRatio(){return self.devicePixelRatio},ScreenWidth(){return this._screenWidth},ScreenHeight(){return this._screenHeight},
WindowInnerWidth(){return this._runtime.GetCanvasManager().GetLastWidth()},WindowInnerHeight(){return this._runtime.GetCanvasManager().GetLastHeight()},WindowOuterWidth(){return this._windowOuterWidth},WindowOuterHeight(){return this._windowOuterWidth}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Keyboard=class KeyboardPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;const C3X=self.C3X;C3.Plugins.Keyboard.Type=class KeyboardType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){}GetScriptInterfaceClass(){return self.IKeyboardObjectType}};let keyboardObjectType=null;function GetKeyboardSdkInstance(){return keyboardObjectType.GetSingleGlobalInstance().GetSdkInstance()}
self.IKeyboardObjectType=class IKeyboardObjectType extends self.IObjectClass{constructor(objectType){super(objectType);keyboardObjectType=objectType;objectType.GetRuntime()._GetCommonScriptInterfaces().keyboard=this}isKeyDown(keyOrCode){const keyboardInst=GetKeyboardSdkInstance();if(typeof keyOrCode==="string")return keyboardInst.IsKeyDown(keyOrCode);else if(typeof keyOrCode==="number")return keyboardInst.IsKeyCodeDown(keyOrCode);else throw new TypeError("expected string or number");}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Keyboard.Instance=class KeyboardInstance extends C3.SDKInstanceBase{constructor(inst,properties){super(inst);this._keysDownByString=new Set;this._keysDownByWhich=new Set;this._triggerWhich=0;this._triggerString="";this._triggerTypedKey="";const rt=this.GetRuntime().Dispatcher();this._disposables=new C3.CompositeDisposable(C3.Disposable.From(rt,"keydown",e=>this._OnKeyDown(e.data)),C3.Disposable.From(rt,"keyup",e=>this._OnKeyUp(e.data)),C3.Disposable.From(rt,"window-blur",()=>this._OnWindowOrKeyboardBlur()),
C3.Disposable.From(rt,"keyboard-blur",()=>this._OnWindowOrKeyboardBlur()))}Release(){super.Release()}_OnKeyDown(e){const which=e["which"];const keyString=e["code"]||which.toString();const typedKey=e["key"];if(this._keysDownByString.has(keyString))return;this._keysDownByString.add(keyString);this._keysDownByWhich.add(which);this._triggerString=keyString;this._triggerWhich=which;this._triggerTypedKey=typedKey;this.Trigger(C3.Plugins.Keyboard.Cnds.OnAnyKey);this.Trigger(C3.Plugins.Keyboard.Cnds.OnKey);
this.Trigger(C3.Plugins.Keyboard.Cnds.OnLeftRightKeyPressed);this.Trigger(C3.Plugins.Keyboard.Cnds.OnKeyCode)}_OnKeyUp(e){const which=e["which"];const keyString=e["code"]||which.toString();const typedKey=e["key"];this._keysDownByString.delete(keyString);this._keysDownByWhich.delete(which);this._triggerString=keyString;this._triggerWhich=which;this._triggerTypedKey=typedKey;this.Trigger(C3.Plugins.Keyboard.Cnds.OnAnyKeyReleased);this.Trigger(C3.Plugins.Keyboard.Cnds.OnKeyReleased);this.Trigger(C3.Plugins.Keyboard.Cnds.OnLeftRightKeyReleased);
this.Trigger(C3.Plugins.Keyboard.Cnds.OnKeyCodeReleased)}_OnWindowOrKeyboardBlur(){for(const which of this._keysDownByWhich){this._keysDownByWhich.delete(which);this._triggerWhich=which;this.Trigger(C3.Plugins.Keyboard.Cnds.OnAnyKeyReleased);this.Trigger(C3.Plugins.Keyboard.Cnds.OnKeyReleased);this.Trigger(C3.Plugins.Keyboard.Cnds.OnKeyCodeReleased)}this._keysDownByString.clear()}IsKeyDown(str){return this._keysDownByString.has(str)}IsKeyCodeDown(which){return this._keysDownByWhich.has(which)}SaveToJson(){return{"tk":this._triggerWhich,
"tkk":this._triggerTypedKey}}LoadFromJson(o){this._triggerWhich=o["tk"];if(o.hasOwnProperty("tkk"))this._triggerTypedKey=o["tkk"]}GetDebuggerProperties(){const prefix="plugins.keyboard";return[{title:prefix+".name",properties:[{name:prefix+".debugger.last-key-code",value:this._triggerWhich},{name:prefix+".debugger.last-key-string",value:C3.Plugins.Keyboard.Exps.StringFromKeyCode(this._triggerWhich)},{name:prefix+".debugger.last-typed-key",value:this._triggerTypedKey}]}]}};

}

{
'use strict';const C3=self.C3;const LEFTRIGHT_KEY_STRINGS=["ShiftLeft","ShiftRight","ControlLeft","ControlRight","AltLeft","AltRight","MetaLeft","MetaRight"];
C3.Plugins.Keyboard.Cnds={IsKeyDown(which){return this._keysDownByWhich.has(which)},OnKey(which){return this._triggerWhich===which},OnAnyKey(){return true},OnAnyKeyReleased(){return true},OnKeyReleased(which){return this._triggerWhich===which},IsKeyCodeDown(which){which=Math.floor(which);return this._keysDownByWhich.has(which)},OnKeyCode(which){return this._triggerWhich===which},OnKeyCodeReleased(which){return this._triggerWhich===which},OnLeftRightKeyPressed(index){const keyString=LEFTRIGHT_KEY_STRINGS[index];
return this._triggerString===keyString},OnLeftRightKeyReleased(index){const keyString=LEFTRIGHT_KEY_STRINGS[index];return this._triggerString===keyString},IsLeftRightKeyDown(index){const keyString=LEFTRIGHT_KEY_STRINGS[index];return this._keysDownByString.has(keyString)}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Keyboard.Acts={};

}

{
'use strict';const C3=self.C3;
function StringFromCharCode(kc){kc=Math.floor(kc);switch(kc){case 8:return"backspace";case 9:return"tab";case 13:return"enter";case 16:return"shift";case 17:return"control";case 18:return"alt";case 19:return"pause";case 20:return"capslock";case 27:return"esc";case 33:return"pageup";case 34:return"pagedown";case 35:return"end";case 36:return"home";case 37:return"\u2190";case 38:return"\u2191";case 39:return"\u2192";case 40:return"\u2193";case 45:return"insert";case 46:return"del";case 91:return"left window key";
case 92:return"right window key";case 93:return"select";case 96:return"numpad 0";case 97:return"numpad 1";case 98:return"numpad 2";case 99:return"numpad 3";case 100:return"numpad 4";case 101:return"numpad 5";case 102:return"numpad 6";case 103:return"numpad 7";case 104:return"numpad 8";case 105:return"numpad 9";case 106:return"numpad *";case 107:return"numpad +";case 109:return"numpad -";case 110:return"numpad .";case 111:return"numpad /";case 112:return"F1";case 113:return"F2";case 114:return"F3";
case 115:return"F4";case 116:return"F5";case 117:return"F6";case 118:return"F7";case 119:return"F8";case 120:return"F9";case 121:return"F10";case 122:return"F11";case 123:return"F12";case 144:return"numlock";case 145:return"scroll lock";case 186:return";";case 187:return"=";case 188:return",";case 189:return"-";case 190:return".";case 191:return"/";case 192:return"'";case 219:return"[";case 220:return"\\";case 221:return"]";case 222:return"#";case 223:return"`";default:return String.fromCharCode(kc)}}
C3.Plugins.Keyboard.Exps={LastKeyCode(){return this._triggerWhich},StringFromKeyCode(kc){return StringFromCharCode(kc)},TypedKey(){return this._triggerTypedKey}};

}

{
'use strict';const C3=self.C3;C3.Plugins.LocalStorage=class LocalStoragePlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.LocalStorage.Type=class LocalStorageType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.LocalStorage.Instance=class LocalStorageInstance extends C3.SDKInstanceBase{constructor(inst,properties){super(inst);this._currentKey="";this._lastValue="";this._keyNamesList=[];this._errorMessage="";this._pendingGets=0;this._pendingSets=0;this._storage=this._runtime._GetProjectStorage();this._debugCache=new Map;this._isLoadingDebugCache=false}Release(){super.Release()}async _TriggerStorageError(err){this._errorMessage=this._GetErrorString(err);await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnError)}_GetErrorString(err){if(!err)return"unknown error";else if(typeof err===
"string")return err;else if(typeof err.message==="string")return err.message;else if(typeof err.name==="string")return err.name;else if(typeof err.data==="string")return err.data;else return"unknown error"}GetDebuggerProperties(){if(!this._isLoadingDebugCache)this._DebugCacheStorage();return[{title:"plugins.localstorage.name",properties:[...this._debugCache.entries()].map(entry=>({name:"$"+entry[0],value:entry[1],onedit:v=>this._storage.setItem(entry[0],v)}))}]}async _DebugCacheStorage(){this._isLoadingDebugCache=
true;try{const keyList=await this._storage.keys();keyList.sort((a,b)=>{const la=a.toLowerCase();const lb=b.toLowerCase();if(la<lb)return-1;else if(lb<la)return 1;else return 0});const values=await Promise.all(keyList.map(key=>this._storage.getItem(key)));this._debugCache.clear();for(let i=0,len=keyList.length;i<len;++i)this._debugCache.set(keyList[i],values[i])}catch(err){console.warn("[C3 debugger] Error displaying local storage: ",err)}finally{this._isLoadingDebugCache=false}}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.LocalStorage.Cnds={OnItemSet(key){return this._currentKey===key},OnAnyItemSet(){return true},OnItemGet(key){return this._currentKey===key},OnAnyItemGet(){return true},OnItemRemoved(key){return this._currentKey===key},OnAnyItemRemoved(){return true},OnCleared(){return true},OnAllKeyNamesLoaded(){return true},OnError(){return true},OnItemExists(key){return this._currentKey===key},OnItemMissing(key){return this._currentKey===key},CompareKey(cmp,key){return C3.compare(this._currentKey,cmp,
key)},CompareValue(cmp,v){return C3.compare(this._lastValue,cmp,v)},IsProcessingSets(){return this._pendingSets>0},IsProcessingGets(){return this._pendingGets>0},OnAllSetsComplete(){return true},OnAllGetsComplete(){return true}};

}

{
'use strict';const C3=self.C3;function IsExpressionType(x){return typeof x==="string"||typeof x==="number"}
C3.Plugins.LocalStorage.Acts={async SetItem(key,value){this._pendingSets++;try{const valueSet=await this._storage.setItem(key,value);await this.ScheduleTriggers(async()=>{this._currentKey=key;this._lastValue=valueSet;await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnAnyItemSet);await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnItemSet)})}catch(err){await this._TriggerStorageError(err)}finally{this._pendingSets--;if(this._pendingSets===0)await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnAllSetsComplete)}},
async SetBinaryItem(key,objectClass){if(!objectClass)return;const inst=objectClass.GetFirstPicked(this._inst);if(!inst)return;const sdkInst=inst.GetSdkInstance();if(!sdkInst)return;const buffer=sdkInst.GetArrayBufferReadOnly();this._pendingSets++;try{await this._storage.setItem(key,buffer);await this.ScheduleTriggers(async()=>{this._currentKey=key;this._lastValue="";await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnAnyItemSet);await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnItemSet)})}catch(err){await this._TriggerStorageError(err)}finally{this._pendingSets--;
if(this._pendingSets===0)await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnAllSetsComplete)}},async GetItem(key){this._pendingGets++;try{const value=await this._storage.getItem(key);await this.ScheduleTriggers(async()=>{this._currentKey=key;this._lastValue=IsExpressionType(value)?value:"";await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnAnyItemGet);await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnItemGet)})}catch(err){await this._TriggerStorageError(err)}finally{this._pendingGets--;
if(this._pendingGets===0)await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnAllGetsComplete)}},async GetBinaryItem(key,objectClass){if(!objectClass)return;const inst=objectClass.GetFirstPicked(this._inst);if(!inst)return;const sdkInst=inst.GetSdkInstance();this._pendingGets++;try{let value=await this._storage.getItem(key);value=value instanceof ArrayBuffer?value:new ArrayBuffer(0);await this.ScheduleTriggers(async()=>{this._lastValue="";this._currentKey=key;sdkInst.SetArrayBufferTransfer(value);
await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnAnyItemGet);await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnItemGet)})}catch(err){await this._TriggerStorageError(err)}finally{this._pendingGets--;if(this._pendingGets===0)await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnAllGetsComplete)}},async CheckItemExists(key){try{const value=await this._storage.getItem(key);await this.ScheduleTriggers(async()=>{this._currentKey=key;if(typeof value==="undefined"||value===null){this._lastValue=
"";await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnItemMissing)}else{this._lastValue=IsExpressionType(value)?value:"";await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnItemExists)}})}catch(err){await this._TriggerStorageError(err)}},async RemoveItem(key){try{await this._storage.removeItem(key);await this.ScheduleTriggers(async()=>{this._currentKey=key;this._lastValue="";await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnAnyItemRemoved);await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnItemRemoved)})}catch(err){await this._TriggerStorageError(err)}},
async ClearStorage(){try{await this._storage.clear();await this.ScheduleTriggers(async()=>{this._currentKey="";this._lastValue="";C3.clearArray(this._keyNamesList);await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnCleared)})}catch(err){await this._TriggerStorageError(err)}},async GetAllKeyNames(){try{const keyList=await this._storage.keys();await this.ScheduleTriggers(async()=>{this._keyNamesList=keyList;await this.TriggerAsync(C3.Plugins.LocalStorage.Cnds.OnAllKeyNamesLoaded)})}catch(err){await this._TriggerStorageError(err)}}};

}

{
'use strict';const C3=self.C3;C3.Plugins.LocalStorage.Exps={ItemValue(){return this._lastValue},Key(){return this._currentKey},KeyCount(){return this._keyNamesList.length},KeyAt(i){i=Math.floor(i);if(i<0||i>=this._keyNamesList.length)return"";return this._keyNamesList[i]},ErrorMessage(){return this._errorMessage}};

}

{
'use strict';const C3=self.C3;C3.Plugins.PlatformInfo=class PlatformInfoPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.PlatformInfo.Type=class PlatformInfoType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){}};

}

{
'use strict';const C3=self.C3;const DOM_COMPONENT_ID="platform-info";
C3.Plugins.PlatformInfo.Instance=class PlatformInfoInstance extends C3.SDKInstanceBase{constructor(inst,properties){super(inst,DOM_COMPONENT_ID);this._screenWidth=0;this._screenHeight=0;this._windowOuterWidth=0;this._windowOuterHeight=0;this._safeAreaInset=[0,0,0,0];this._supportsWakeLock=false;this._isWakeLockActive=false;this.AddDOMMessageHandlers([["window-resize",e=>this._OnWindowResize(e)],["wake-lock-acquired",e=>this._OnWakeLockAcquired(e)],["wake-lock-error",e=>this._OnWakeLockError(e)],["wake-lock-released",
e=>this._OnWakeLockReleased(e)]]);if(navigator.connection)navigator.connection.addEventListener("change",()=>this._OnNetworkChange());this._runtime.AddLoadPromise(this.PostToDOMAsync("get-initial-state").then(data=>{this._screenWidth=data["screenWidth"];this._screenHeight=data["screenHeight"];this._windowOuterWidth=data["windowOuterWidth"];this._windowOuterHeight=data["windowOuterHeight"];this._safeAreaInset=data["safeAreaInset"];this._supportsWakeLock=data["supportsWakeLock"]}))}Release(){super.Release()}_OnWindowResize(e){this._windowOuterWidth=
e["windowOuterWidth"];this._windowOuterHeight=e["windowOuterHeight"];this._safeAreaInset=e["safeAreaInset"]}async _OnNetworkChange(){await this.TriggerAsync(C3.Plugins.PlatformInfo.Cnds.OnNetworkChange)}async _OnWakeLockAcquired(){this._isWakeLockActive=true;await this.TriggerAsync(C3.Plugins.PlatformInfo.Cnds.OnWakeLockAcquired)}async _OnWakeLockError(){this._isWakeLockActive=false;await this.TriggerAsync(C3.Plugins.PlatformInfo.Cnds.OnWakeLockError)}async _OnWakeLockReleased(){this._isWakeLockActive=
false;await this.TriggerAsync(C3.Plugins.PlatformInfo.Cnds.OnWakeLockReleased)}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.PlatformInfo.Cnds={IsOnMobile(){return C3.Platform.IsMobile},IsOnWindows(){return C3.Platform.OS==="Windows"},IsOnMacOS(){return C3.Platform.OS==="Mac OS X"},IsOnLinux(){return C3.Platform.OS==="Linux"},IsOnChromeOS(){return C3.Platform.OS==="Chrome OS"},IsOnAndroid(){return C3.Platform.OS==="Android"},IsOniOS(){return C3.Platform.OS==="iOS"},IsWebExport(){const exportType=this._runtime.GetExportType();return exportType==="html5"||exportType==="scirra-arcade"||exportType==="preview"||exportType===
"instant-games"},IsCordovaExport(){return this._runtime.IsCordova()},IsNWjsExport(){return this._runtime.GetExportType()==="nwjs"},IsWindowsUWPExport(){return this._runtime.GetExportType()==="windows-uwp"},IsWindowsWebView2Export(){return this._runtime.GetExportType()==="windows-webview2"},IsMacOSWKWebView2Export(){return this._runtime.GetExportType()==="macos-wkwebview"},OnNetworkChange(){return true},OnWakeLockAcquired(){return true},OnWakeLockError(){return true},OnWakeLockReleased(){return true},
IsWakeLockActive(){return this._isWakeLockActive},IsWakeLockSupported(){return this._supportsWakeLock}};

}

{
'use strict';const C3=self.C3;C3.Plugins.PlatformInfo.Acts={RequestWakeLock(){if(!this._supportsWakeLock)return;this._PostToDOMMaybeSync("request-wake-lock")},ReleaseWakeLock(){if(!this._supportsWakeLock)return;this._isWakeLockActive=false;this.PostToDOM("release-wake-lock")}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.PlatformInfo.Exps={Renderer(){let ret="";if(this._runtime.GetWebGPURenderer())ret="webgpu";else ret="webgl"+this._runtime.GetWebGLRenderer().GetWebGLVersionNumber();if(this._runtime.GetRenderer().HasMajorPerformanceCaveat())ret+="-software";return ret},RendererDetail(){return this._runtime.GetWebGLRenderer().GetUnmaskedRenderer()},DevicePixelRatio(){return self.devicePixelRatio},ScreenWidth(){return this._screenWidth},ScreenHeight(){return this._screenHeight},WindowInnerWidth(){return this._runtime.GetCanvasManager().GetLastWidth()},
WindowInnerHeight(){return this._runtime.GetCanvasManager().GetLastHeight()},WindowOuterWidth(){return this._windowOuterWidth},WindowOuterHeight(){return this._windowOuterHeight},CanvasCssWidth(){return this._runtime.GetCanvasManager().GetCssWidth()},CanvasCssHeight(){return this._runtime.GetCanvasManager().GetCssHeight()},CanvasDeviceWidth(){return this._runtime.GetCanvasManager().GetDeviceWidth()},CanvasDeviceHeight(){return this._runtime.GetCanvasManager().GetDeviceHeight()},Downlink(){if(navigator.connection)return navigator.connection["downlink"]||
0;else return 0},DownlinkMax(){if(navigator.connection)return navigator.connection["downlinkMax"]||0;else return 0},ConnectionType(){if(navigator.connection)return navigator.connection["type"]||"unknown";else return"unknown"},ConnectionEffectiveType(){if(navigator.connection)return navigator.connection["effectiveType"]||"unknown";else return"unknown"},ConnectionRTT(){if(navigator.connection)return navigator.connection["rtt"]||0;else return 0},HardwareConcurrency(){return navigator.hardwareConcurrency||
0},DeviceMemory(){return navigator.deviceMemory||0},SafeAreaInsetTop(){return this._safeAreaInset[0]},SafeAreaInsetRight(){return this._safeAreaInset[1]},SafeAreaInsetBottom(){return this._safeAreaInset[2]},SafeAreaInsetLeft(){return this._safeAreaInset[3]}};

}

{
'use strict';const C3=self.C3;C3.Plugins.advert=class MobileAdvertPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Plugins.advert.Type=class MobileAdvertType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){}};

}

{
'use strict';const C3=self.C3;const BUSY="busy";const SET="set";const DOM_COMPONENT_ID="advert";function Log(str){console.log("[C3 advert]",str)}
C3.Plugins.advert.Instance=class MobileAdvertInstance extends C3.SDKInstanceBase{constructor(inst,properties){super(inst,DOM_COMPONENT_ID);this.testMode=!!properties[0];this.keyState=null;this.bannerState=null;this.interstitialState=null;this.videoState=null;this.rewardedState=null;this.rewardedInterstitialState=null;this.consentStatus=null;this.idfaStatus="not-determined";this.isInEeaOrUnknown=true;this.rewardType="";this.rewardValue=0;this.rewardInterstitialType="";this.rewardInterstitialValue=
0;const rt=this._runtime.Dispatcher();this._disposables=new C3.CompositeDisposable(C3.Disposable.From(rt,"beforeruntimestart",()=>this._OnBeforeRuntimeStart(properties)),C3.Disposable.From(rt,"layoutchange",()=>this._OnLayoutChange()))}async _OnBeforeRuntimeStart(properties){const androidID=properties[1];const iOSID=properties[2];const pubID=properties[3];const showAdFree=properties[4];const privacyPolicy=properties[5];const showConsent=properties[6];const debugLocation=properties[7];const showOnStartUp=
properties[8];const appID=this._runtime.IsiOSCordova()?iOSID:androidID;if(appID){await this._StatusUpdate(debugLocation);this._SetPublicKey(appID,pubID,privacyPolicy,showAdFree,showConsent,debugLocation,showOnStartUp)}}_OnLayoutChange(){if(this.keyState===SET)this.TriggerAsync(C3.Plugins.advert.Cnds.OnConfigurationComplete)}async _StatusUpdate(debugLocation){try{debugLocation=["DISABLED","EEA","NOT_EEA"][debugLocation];const result=await this.PostToDOMAsync("StatusUpdate",[this.testMode,debugLocation]);
const [consentStatus,idfaStatus,inEEA]=result.split("&&");this.consentStatus=consentStatus;this.idfaStatus=idfaStatus;this.isInEeaOrUnknown=inEEA!=="false"}catch(e){this.SetError("status failed to update",e)}}async _SetPublicKey(appID,pubID,privacyPolicy,showAdFree,showConsent,debugLocation,showOnStartUp){if(this.keyState!==null)return;this.keyState=BUSY;showConsent=["eu","always","never"][showConsent];debugLocation=["DISABLED","EEA","NOT_EEA"][debugLocation];try{const result=await this.PostToDOMAsync("Configure",
[appID.trim(),pubID.trim(),privacyPolicy.trim(),showAdFree,showConsent,this.testMode,debugLocation,showOnStartUp]);const [consentStatus,idfaStatus,inEEA]=result.split("&&");this.isInEeaOrUnknown=inEEA!=="false";this.keyState=SET;this.consentStatus=consentStatus;this.idfaStatus=idfaStatus;this.SetParameters("configuration complete");await this.TriggerAsync(C3.Plugins.advert.Cnds.OnConfigurationComplete)}catch(e){this.keyState=null;this.SetError("configuration failed",e);await this.TriggerAsync(C3.Plugins.advert.Cnds.OnConfigurationFailed)}}PostToDOMAsync(name,
data=[]){return super.PostToDOMAsync(name,data)}SetError(name,err){const message=typeof err==="string"?err:err.message;this.SetParameters(name,message)}SetParameters(name,err="",type="",amount=0,adType=""){Log(`Event (${name} Error (${err}) Type (${type}) Amount (${amount}))`);this.errorMessage=err||"";switch(adType){case "rewarded":{this.rewardType=type||"";this.rewardValue=amount||0;break}case "rewarded interstitial":{this.rewardInterstitialType=type||"";this.rewardInterstitialValue=amount||0;break}default:{this.rewardType=
"";this.rewardValue=0;this.rewardInterstitialType="";this.rewardInterstitialValue=0}}}};

}

{
'use strict';const C3=self.C3;const SHOWN="shown";const LOADED="loaded";const SET="set";
C3.Plugins.advert.Cnds={OnBannerReady(){return true},OnVideoReady(){return true},OnRewardedReady(){return true},OnInterstitialReady(){return true},OnRewardedInterstitialReady(){return true},OnBannerFailedToLoad(){return true},OnVideoFailedToLoad(){return true},OnRewardedFailedToLoad(){return true},OnInterstitialFailedToLoad(){return true},OnRewardedInterstitialFailedToLoad(){return true},OnBannerShown(){return true},OnVideoComplete(){return true},OnRewardedComplete(){return true},OnInterstitialComplete(){return true},
OnRewardedInterstitialComplete(){return true},OnBannerHidden(){return true},OnVideoCancelled(){return true},OnRewardedCancelled(){return true},OnInterstitialCancelled(){return true},OnRewardedInterstitialCancelled(){return true},OnConfigurationFailed(){return true},OnConfigurationComplete(){return true},OnUserPersonalizationUpdated(){return true},IsShowingBanner(){return this.bannerState===SHOWN},IsShowingVideo(){return this.videoState===SHOWN},IsShowingRewarded(){return this.rewardedState===SHOWN},
IsShowingInterstitial(){return this.interstitialState===SHOWN},IsShowingRewardedInterstitial(){return this.rewardedInterstitialState===SHOWN},IsInEeaOrUnknown(){return this.isInEeaOrUnknown},IsBannerLoaded(){return this.bannerState===LOADED},IsVideoLoaded(){return this.videoState===LOADED},IsRewardedLoaded(){return this.rewardedState===LOADED},IsInterstitialLoaded(){return this.interstitialState===LOADED},IsRewardedInterstitialLoaded(){return this.rewardedInterstitialState===LOADED},IsConfigured(){return this.keyState===
SET},OnIDFARequestComplete(){return true}};

}

{
'use strict';const C3=self.C3;const BUSY="busy";const SHOWN="shown";const LOADED="loaded";const SET="set";const BANNER_SIZES=["portrait","landscape","standard","large","medium","full","leaderboard"];const BANNER_POSITIONS=["bottom","top"];
C3.Plugins.advert.Acts={async CreateBanner(id,size,show,position){if(this.bannerState!=null)return;this.bannerState=BUSY;try{await this.PostToDOMAsync("CreateBannerAdvert",[id.trim(),BANNER_SIZES[size],this.testMode,BANNER_POSITIONS[position]]);this.bannerState=LOADED;this.SetParameters("banner created");await this.TriggerAsync(C3.Plugins.advert.Cnds.OnBannerReady);if(show==0)C3.Plugins.advert.Acts.ShowBanner.call(this)}catch(e){this.bannerState=null;this.SetError("failed to create banner",e);await this.TriggerAsync(C3.Plugins.advert.Cnds.OnBannerFailedToLoad)}},
async ShowBanner(){if(this.bannerState!=LOADED)return;this.bannerState=BUSY;try{await this.PostToDOMAsync("ShowBannerAdvert");this.bannerState=SHOWN;this.SetParameters("banner shown");await this.TriggerAsync(C3.Plugins.advert.Cnds.OnBannerShown)}catch(e){this.bannerState=null;this.SetError("failed to show banner",e)}},async HideBanner(){if(this.bannerState!=SHOWN)return;this.bannerState=BUSY;try{await this.PostToDOMAsync("HideBannerAdvert");this.bannerState=null;this.SetParameters("banner hidden");
await this.TriggerAsync(C3.Plugins.advert.Cnds.OnBannerHidden)}catch(e){this.bannerState=null;this.SetError("failed to hide banner",e)}},async CreateInterstitial(id,show){if(this.interstitialState!=null)return;this.interstitialState=BUSY;try{await this.PostToDOMAsync("CreateInterstitialAdvert",[id.trim(),this.testMode]);this.interstitialState=LOADED;this.SetParameters("interstitial created");await this.TriggerAsync(C3.Plugins.advert.Cnds.OnInterstitialReady);if(show==0)C3.Plugins.advert.Acts.ShowInterstitial.call(this)}catch(e){this.interstitialState=
null;this.SetError("failed to create interstitial",e);await this.TriggerAsync(C3.Plugins.advert.Cnds.OnInterstitialFailedToLoad)}},async ShowInterstitial(){if(this.interstitialState!=LOADED)return;this.interstitialState=SHOWN;try{await this.PostToDOMAsync("ShowInterstitialAdvert");this.interstitialState=null;this.SetParameters("interstitial completed");await this.TriggerAsync(C3.Plugins.advert.Cnds.OnInterstitialComplete)}catch(e){this.interstitialState=null;this.SetError("interstitial cancelled",
e);await this.TriggerAsync(C3.Plugins.advert.Cnds.OnInterstitialCancelled)}},async CreateVideo(id,show){if(this.videoState!=null||this.rewardedState!=null)return;this.videoState=BUSY;try{await this.PostToDOMAsync("CreateVideoAdvert",[id.trim(),this.testMode]);this.videoState=LOADED;this.SetParameters("video created");await this.TriggerAsync(C3.Plugins.advert.Cnds.OnVideoReady);if(show==0)C3.Plugins.advert.Acts.ShowVideo.call(this)}catch(e){this.videoState=null;this.SetError("failed to create video",
e);await this.TriggerAsync(C3.Plugins.advert.Cnds.OnVideoFailedToLoad)}},async ShowVideo(){if(this.videoState!=LOADED)return;this.videoState=SHOWN;try{const result=await this.PostToDOMAsync("ShowVideoAdvert");const [type,value]=JSON.parse(result);this.videoState=null;this.SetParameters("video completed",null,type,value);await this.TriggerAsync(C3.Plugins.advert.Cnds.OnVideoComplete)}catch(e){this.videoState=null;this.SetError("video cancelled",e);await this.TriggerAsync(C3.Plugins.advert.Cnds.OnVideoCancelled)}},
async CreateRewarded(id,show){if(this.rewardedState!=null||this.videoState!=null)return;this.rewardedState=BUSY;try{await this.PostToDOMAsync("CreateRewardedAdvert",[id.trim(),this.testMode]);this.rewardedState=LOADED;this.SetParameters("rewarded created");await this.TriggerAsync(C3.Plugins.advert.Cnds.OnRewardedReady);if(show==0)C3.Plugins.advert.Acts.ShowRewarded.call(this)}catch(e){this.rewardedState=null;this.SetError("failed to create rewarded",e);await this.TriggerAsync(C3.Plugins.advert.Cnds.OnRewardedFailedToLoad)}},
async ShowRewarded(){if(this.rewardedState!=LOADED)return;this.rewardedState=SHOWN;try{const result=await this.PostToDOMAsync("ShowRewardedAdvert");const [type,value]=JSON.parse(result);this.rewardedState=null;this.SetParameters("rewarded completed",null,type,value,"rewarded");await this.TriggerAsync(C3.Plugins.advert.Cnds.OnRewardedComplete)}catch(e){this.rewardedState=null;this.SetError("rewarded cancelled",e);await this.TriggerAsync(C3.Plugins.advert.Cnds.OnRewardedCancelled)}},async CreateRewardedInterstitial(id,
show){if(this.rewardedInterstitialState!=null)return;this.rewardedInterstitialState=BUSY;try{await this.PostToDOMAsync("CreateRewardedInterstitialAdvert",[id.trim(),this.testMode]);this.rewardedInterstitialState=LOADED;this.SetParameters("rewarded interstitial created");await this.TriggerAsync(C3.Plugins.advert.Cnds.OnRewardedInterstitialReady);if(show==0)C3.Plugins.advert.Acts.ShowRewardedInterstitial.call(this)}catch(e){this.rewardedInterstitialState=null;this.SetError("failed to create rewarded interstitial",
e);await this.TriggerAsync(C3.Plugins.advert.Cnds.OnRewardedInterstitialFailedToLoad)}},async ShowRewardedInterstitial(){if(this.rewardedInterstitialState!=LOADED)return;this.rewardedInterstitialState=SHOWN;try{const result=await this.PostToDOMAsync("ShowRewardedInterstitialAdvert");const [type,value]=JSON.parse(result);this.rewardedInterstitialState=null;this.SetParameters("rewarded interstitial completed",null,type,value,"rewarded interstitial");await this.TriggerAsync(C3.Plugins.advert.Cnds.OnRewardedInterstitialComplete)}catch(e){this.rewardedInterstitialState=
null;this.SetError("rewarded interstitial cancelled",e);await this.TriggerAsync(C3.Plugins.advert.Cnds.OnRewardedInterstitialCancelled)}},SetPublicKey(appID,pubID,privacyPolicy,showAdFree,showConsent,debugLocation){showAdFree=[true,false][showAdFree];this._SetPublicKey(appID,pubID,privacyPolicy,showAdFree,showConsent,debugLocation)},async ShowConsentDialog(){if(this.keyState!==SET)return;this.keyState=BUSY;try{const lastIdfaStatus=this.idfaStatus;const result=await this.PostToDOMAsync("RequestConsent");
const [consentStatus,idfaStatus,_]=result.split("&&");this.keyState=SET;this.consentStatus=consentStatus;this.idfaStatus=idfaStatus;if(lastIdfaStatus!==this.idfaStatus)this.Trigger(C3.Plugins.advert.Cnds.OnIDFARequestComplete);this.SetParameters("configuration complete");await this.TriggerAsync(C3.Plugins.advert.Cnds.OnConfigurationComplete)}catch(e){this.keyState=SET;this.SetError("configuration failed",e);await this.TriggerAsync(C3.Plugins.advert.Cnds.OnConfigurationFailed)}},async SetUserPersonalization(newStatus){},
async SetMaxAdContentRating(label){if(this.keyState!==SET)return;try{const param=["G","PG","T","MA"][label];await this.PostToDOMAsync("SetMaxAdContentRating",[param])}catch(e){}},async TagForChildDirectedTreatment(option){if(this.keyState!==SET)return;try{await this.PostToDOMAsync("TagForChildDirectedTreatment",[option?1:0])}catch(e){}},async TagForUnderAgeOfConsent(option){if(this.keyState!==SET)return;try{await this.PostToDOMAsync("TagForUnderAgeOfConsent",[option?1:0])}catch(e){}},async RequestIDFA(){try{this.idfaStatus=
await this.PostToDOMAsync("RequestIDFA")}catch(err){console.warn("Error requesting IDFA: ",err);this.idfaStatus="error"}this.Trigger(C3.Plugins.advert.Cnds.OnIDFARequestComplete)}};

}

{
'use strict';const C3=self.C3;C3.Plugins.advert.Exps={ErrorMessage(){return this.errorMessage||""},RewardType(){return this.rewardType||""},RewardValue(){return this.rewardValue||0},RewardInterstitialType(){return this.rewardInterstitialType||""},RewardInterstitialValue(){return this.rewardInterstitialValue||0},ConsentStatus(){return this.consentStatus||"UNKNOWN"},IDFAStatus(){return this.idfaStatus}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Audio=class AudioPlugin extends C3.SDKPluginBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;const C3X=self.C3X;C3.Plugins.Audio.Type=class AudioType extends C3.SDKTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){}GetScriptInterfaceClass(){return self.IAudioObjectType}};function GetAudioDOMInterface(){if(self["C3Audio_DOMInterface"])return self["C3Audio_DOMInterface"];else throw new Error("audio scripting API cannot be used here - make sure the project is using DOM mode, not worker mode");}self.IAudioObjectType=class IAudioObjectType extends self.IObjectClass{constructor(objectType){super(objectType)}get audioContext(){return GetAudioDOMInterface().GetAudioContext()}get destinationNode(){return GetAudioDOMInterface().GetDestinationNode()}};

}

{
'use strict';const C3=self.C3;const DOM_COMPONENT_ID="audio";const LATENCY_HINTS=["interactive","balanced","playback"];
C3.Plugins.Audio.Instance=class AudioInstance extends C3.SDKInstanceBase{constructor(inst,properties){super(inst,DOM_COMPONENT_ID);this._nextPlayTime=0;this._triggerTag="";this._timeScaleMode=0;this._saveLoadMode=0;this._playInBackground=false;this._panningModel=1;this._distanceModel=1;this._listenerX=this._runtime.GetViewportWidth()/2;this._listenerY=this._runtime.GetViewportHeight()/2;this._listenerZ=-600;this._referenceDistance=600;this._maxDistance=1E4;this._rolloffFactor=1;this._listenerInst=
null;this._loadListenerUid=-1;this._masterVolume=1;this._isSilent=false;this._sampleRate=0;this._effectCount=new Map;this._preloadTotal=0;this._preloadCount=0;this._remoteUrls=new Map;let latencyHint="interactive";if(properties){this._timeScaleMode=properties[0];this._saveLoadMode=properties[1];this._playInBackground=properties[2];latencyHint=LATENCY_HINTS[properties[3]];this._panningModel=properties[4];this._distanceModel=properties[5];this._listenerZ=-properties[6];this._referenceDistance=properties[7];
this._maxDistance=properties[8];this._rolloffFactor=properties[9]}this._lastAIState=[];this._lastFxState=[];this._lastAnalysersData=[];this.AddDOMMessageHandlers([["state",e=>this._OnUpdateState(e)],["fxstate",e=>this._OnUpdateFxState(e)],["trigger",e=>this._OnTrigger(e)]]);const rt=this.GetRuntime().Dispatcher();this._disposables=new C3.CompositeDisposable(C3.Disposable.From(rt,"instancedestroy",e=>this._OnInstanceDestroyed(e.instance)),C3.Disposable.From(rt,"afterload",()=>this._OnAfterLoad()),
C3.Disposable.From(rt,"suspend",()=>this._OnSuspend()),C3.Disposable.From(rt,"resume",()=>this._OnResume()));this._runtime.AddLoadPromise(this.PostToDOMAsync("create-audio-context",{"preloadList":this._runtime.GetAssetManager().GetAudioToPreload().map(o=>({"originalUrl":o.originalUrl,"url":o.url,"type":o.type,"fileSize":o.fileSize})),"isiOSCordova":this._runtime.IsiOSCordova(),"timeScaleMode":this._timeScaleMode,"latencyHint":latencyHint,"panningModel":this._panningModel,"distanceModel":this._distanceModel,
"refDistance":this._referenceDistance,"maxDistance":this._maxDistance,"rolloffFactor":this._rolloffFactor,"listenerPos":[this._listenerX,this._listenerY,this._listenerZ]}).then(info=>{this._sampleRate=info["sampleRate"]}));this._StartTicking()}Release(){this._listenerInst=null;super.Release()}_OnInstanceDestroyed(inst){if(this._listenerInst===inst)this._listenerInst=null}DbToLinearNoCap(x){return Math.pow(10,x/20)}DbToLinear(x){const v=this.DbToLinearNoCap(x);if(!isFinite(v))return 0;return Math.max(Math.min(v,
1),0)}LinearToDbNoCap(x){return Math.log(x)/Math.log(10)*20}LinearToDb(x){return this.LinearToDbNoCap(Math.max(Math.min(x,1),0))}_OnSuspend(){if(this._playInBackground)return;this.PostToDOM("set-suspended",{"isSuspended":true})}_OnResume(){if(this._playInBackground)return;this.PostToDOM("set-suspended",{"isSuspended":false})}_OnUpdateState(e){const tickCount=e["tickCount"];const preservePlaceholders=this._lastAIState.filter(ai=>ai.hasOwnProperty("placeholder")&&(ai["placeholder"]>tickCount||ai["placeholder"]===
-1));this._lastAIState=e["audioInstances"];this._lastAnalysersData=e["analysers"];if(preservePlaceholders.length>0)C3.appendArray(this._lastAIState,preservePlaceholders)}_OnUpdateFxState(e){this._lastFxState=e["fxstate"]}_GetFirstAudioStateByTag(tag){for(const a of this._lastAIState)if(C3.equalsNoCase(a["tag"],tag))return a;return null}_IsTagPlaying(tag){return this._lastAIState.some(ai=>C3.equalsNoCase(tag,ai["tag"])&&ai["isPlaying"])}_MaybeMarkAsPlaying(tag,isMusic,isLooping,vol){if(this._IsTagPlaying(tag))return null;
const state={"tag":tag,"duration":0,"volume":vol,"isPlaying":true,"playbackTime":0,"playbackRate":1,"uid":-1,"bufferOriginalUrl":"","bufferUrl":"","bufferType":"","isMusic":isMusic,"isLooping":isLooping,"isMuted":false,"resumePosition":0,"pan":null,"placeholder":-1};this._lastAIState.push(state);return state}async _OnTrigger(e){const type=e["type"];this._triggerTag=e["tag"];const aiId=e["aiid"];if(type==="ended"){for(const aiState of this._lastAIState)if(aiState["aiid"]===aiId){aiState["isPlaying"]=
false;break}await this.TriggerAsync(C3.Plugins.Audio.Cnds.OnEnded)}else if(type==="fade-ended")await this.TriggerAsync(C3.Plugins.Audio.Cnds.OnFadeEnded)}Tick(){const o={"timeScale":this._runtime.GetTimeScale(),"gameTime":this._runtime.GetGameTimeRaw(),"instPans":this.GetInstancePans(),"tickCount":this._runtime.GetTickCountNoSave()};if(this._listenerInst){const wi=this._listenerInst.GetWorldInfo();this._listenerX=wi.GetX();this._listenerY=wi.GetY();o["listenerPos"]=[this._listenerX,this._listenerY,
this._listenerZ]}this.PostToDOM("tick",o)}rotatePtAround(px,py,a,ox,oy){if(a===0)return[px,py];const sin_a=Math.sin(a);const cos_a=Math.cos(a);px-=ox;py-=oy;const left_sin_a=px*sin_a;const top_sin_a=py*sin_a;const left_cos_a=px*cos_a;const top_cos_a=py*cos_a;px=left_cos_a-top_sin_a;py=top_cos_a+left_sin_a;px+=ox;py+=oy;return[px,py]}GetInstancePans(){return this._lastAIState.filter(ai=>ai["uid"]!==-1).map(ai=>this._runtime.GetInstanceByUID(ai["uid"])).filter(inst=>inst).map(inst=>{const wi=inst.GetWorldInfo();
const layerAngle=wi.GetLayer().GetAngle();const [x,y]=this.rotatePtAround(wi.GetX(),wi.GetY(),-layerAngle,this._listenerX,this._listenerY);return{"uid":inst.GetUID(),"x":x,"y":y,"angle":wi.GetAngle()-layerAngle}})}GetAnalyserData(tag,index){for(const o of this._lastAnalysersData)if(o.index===index&&C3.equalsNoCase(o.tag,tag))return o;return null}_IncrementEffectCount(tag){this._effectCount.set(tag,(this._effectCount.get(tag)||0)+1)}_ShouldSave(ai){if(ai.hasOwnProperty("placeholder"))return false;
if(this._saveLoadMode===3)return false;else if(ai["isMusic"]&&this._saveLoadMode===1)return false;else if(!ai["isMusic"]&&this._saveLoadMode===2)return false;else return true}SaveToJson(){return{"isSilent":this._isSilent,"masterVolume":this._masterVolume,"listenerZ":this._listenerZ,"listenerUid":this._listenerInst?this._listenerInst.GetUID():-1,"remoteUrls":[...this._remoteUrls.entries()],"playing":this._lastAIState.filter(ai=>this._ShouldSave(ai)),"effects":this._lastFxState,"analysers":this._lastAnalysersData}}LoadFromJson(o){this._isSilent=
o["isSilent"];this._masterVolume=o["masterVolume"];this._listenerZ=o["listenerZ"];this._listenerInst=null;this._loadListenerUid=o["listenerUid"];this._remoteUrls.clear();if(o["remoteUrls"])for(const [k,v]of o["remoteUrls"])this._remoteUrls.set(k,v);this._lastAIState=o["playing"];this._lastFxState=o["effects"];this._lastAnalysersData=o["analysers"]}_OnAfterLoad(){if(this._loadListenerUid!==-1){this._listenerInst=this._runtime.GetInstanceByUID(this._loadListenerUid);this._loadListenerUid=-1;if(this._listenerInst){const wi=
this._listenerInst.GetWorldInfo();this._listenerX=wi.GetX();this._listenerY=wi.GetY()}}for(const ai of this._lastAIState){const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(ai["bufferOriginalUrl"]);if(info){ai["bufferUrl"]=info.url;ai["bufferType"]=info.type}else ai["bufferUrl"]=null}for(const fxChainData of Object.values(this._lastFxState))for(const fxData of fxChainData)if(fxData.hasOwnProperty("bufferOriginalUrl")){const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(fxData["bufferOriginalUrl"]);
if(info){fxData["bufferUrl"]=info.url;fxData["bufferType"]=info.type}}this.PostToDOM("load-state",{"saveLoadMode":this._saveLoadMode,"timeScale":this._runtime.GetTimeScale(),"gameTime":this._runtime.GetGameTimeRaw(),"listenerPos":[this._listenerX,this._listenerY,this._listenerZ],"isSilent":this._isSilent,"masterVolume":this._masterVolume,"playing":this._lastAIState.filter(ai=>ai["bufferUrl"]!==null),"effects":this._lastFxState})}GetDebuggerProperties(){const fxProps=[];for(const [tag,fxChainData]of Object.entries(this._lastFxState))fxProps.push({name:"$"+
tag,value:fxChainData.map(d=>d["type"]).join(", ")});const prefix="plugins.audio.debugger";return[{title:prefix+".tag-effects",properties:fxProps},{title:prefix+".currently-playing",properties:[{name:prefix+".currently-playing-count",value:this._lastAIState.length},...this._lastAIState.map((s,index)=>({name:"$#"+index,value:`${s["bufferOriginalUrl"]} ("${s["tag"]}") ${Math.round(s["playbackTime"]*10)/10} / ${Math.round(s["duration"]*10)/10}`}))]}]}};

}

{
'use strict';const C3=self.C3;C3.Plugins.Audio.Cnds={OnEnded(tag){return C3.equalsNoCase(this._triggerTag,tag)},OnFadeEnded(tag){return C3.equalsNoCase(this._triggerTag,tag)},PreloadsComplete(){return this._preloadCount===this._preloadTotal},AdvancedAudioSupported(){return true},IsSilent(){return this._isSilent},IsAnyPlaying(){for(const ai of this._lastAIState)if(ai["isPlaying"])return true;return false},IsTagPlaying(tag){return this._IsTagPlaying(tag)}};

}

{
'use strict';const C3=self.C3;const FILTER_TYPES=["lowpass","highpass","bandpass","lowshelf","highshelf","peaking","notch","allpass"];
C3.Plugins.Audio.Acts={async Play(file,looping,vol,tag){if(this._isSilent)return;const isMusic=file[1];const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(file[0]);if(!info)return;const nextPlayTime=this._nextPlayTime;this._nextPlayTime=0;const state=this._MaybeMarkAsPlaying(tag.toLowerCase(),isMusic,looping!==0,this.DbToLinear(vol));try{await this.PostToDOMAsync("play",{"originalUrl":file[0],"url":info.url,"type":info.type,"isMusic":isMusic,"tag":tag.toLowerCase(),"isLooping":looping!==
0,"vol":this.DbToLinear(vol),"pos":0,"off":nextPlayTime,"trueClock":!!self["C3_GetAudioContextCurrentTime"]})}finally{if(state)state["placeholder"]=this._runtime.GetTickCountNoSave()}},async PlayAtPosition(file,looping,vol,x,y,angle,innerAngle,outerAngle,outerGain,tag){if(this._isSilent)return;const isMusic=file[1];const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(file[0]);if(!info)return;const nextPlayTime=this._nextPlayTime;this._nextPlayTime=0;const state=this._MaybeMarkAsPlaying(tag.toLowerCase(),
isMusic,looping!==0,this.DbToLinear(vol));try{await this.PostToDOMAsync("play",{"originalUrl":file[0],"url":info.url,"type":info.type,"isMusic":isMusic,"tag":tag.toLowerCase(),"isLooping":looping!==0,"vol":this.DbToLinear(vol),"pos":0,"off":nextPlayTime,"trueClock":!!self["C3_GetAudioContextCurrentTime"],"panning":{"x":x,"y":y,"angle":C3.toRadians(angle),"innerAngle":C3.toRadians(innerAngle),"outerAngle":C3.toRadians(outerAngle),"outerGain":this.DbToLinear(outerGain)}})}finally{if(state)state["placeholder"]=
this._runtime.GetTickCountNoSave()}},async PlayAtObject(file,looping,vol,objectClass,innerAngle,outerAngle,outerGain,tag){if(this._isSilent)return;if(!objectClass)return;const inst=objectClass.GetFirstPicked();if(!inst||!inst.GetWorldInfo())return;const wi=inst.GetWorldInfo();const layerAngle=wi.GetLayer().GetAngle();const [x,y]=this.rotatePtAround(wi.GetX(),wi.GetY(),-layerAngle,this._listenerX,this._listenerY);const isMusic=file[1];const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(file[0]);
if(!info)return;const nextPlayTime=this._nextPlayTime;this._nextPlayTime=0;const state=this._MaybeMarkAsPlaying(tag.toLowerCase(),isMusic,looping!==0,this.DbToLinear(vol));try{await this.PostToDOMAsync("play",{"originalUrl":file[0],"url":info.url,"type":info.type,"isMusic":isMusic,"tag":tag.toLowerCase(),"isLooping":looping!==0,"vol":this.DbToLinear(vol),"pos":0,"off":nextPlayTime,"trueClock":!!self["C3_GetAudioContextCurrentTime"],"panning":{"x":x,"y":y,"angle":wi.GetAngle()-layerAngle,"innerAngle":C3.toRadians(innerAngle),
"outerAngle":C3.toRadians(outerAngle),"outerGain":this.DbToLinear(outerGain),"uid":inst.GetUID()}})}finally{if(state)state["placeholder"]=this._runtime.GetTickCountNoSave()}},async PlayByName(folder,filename,looping,vol,tag){if(this._isSilent)return;const isMusic=folder===1;const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(filename)||this._remoteUrls.get(filename.toLowerCase());if(!info)return;const nextPlayTime=this._nextPlayTime;this._nextPlayTime=0;const state=this._MaybeMarkAsPlaying(tag.toLowerCase(),
isMusic,looping!==0,this.DbToLinear(vol));try{await this.PostToDOMAsync("play",{"originalUrl":filename,"url":info.url,"type":info.type,"isMusic":isMusic,"tag":tag.toLowerCase(),"isLooping":looping!==0,"vol":this.DbToLinear(vol),"pos":0,"off":nextPlayTime,"trueClock":!!self["C3_GetAudioContextCurrentTime"]})}finally{if(state)state["placeholder"]=this._runtime.GetTickCountNoSave()}},async PlayAtPositionByName(folder,filename,looping,vol,x,y,angle,innerAngle,outerAngle,outerGain,tag){if(this._isSilent)return;
const isMusic=folder===1;const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(filename)||this._remoteUrls.get(filename.toLowerCase());if(!info)return;const nextPlayTime=this._nextPlayTime;this._nextPlayTime=0;const state=this._MaybeMarkAsPlaying(tag.toLowerCase(),isMusic,looping!==0,this.DbToLinear(vol));try{await this.PostToDOMAsync("play",{"originalUrl":filename,"url":info.url,"type":info.type,"isMusic":isMusic,"tag":tag.toLowerCase(),"isLooping":looping!==0,"vol":this.DbToLinear(vol),
"pos":0,"off":nextPlayTime,"trueClock":!!self["C3_GetAudioContextCurrentTime"],"panning":{"x":x,"y":y,"angle":C3.toRadians(angle),"innerAngle":C3.toRadians(innerAngle),"outerAngle":C3.toRadians(outerAngle),"outerGain":this.DbToLinear(outerGain)}})}finally{if(state)state["placeholder"]=this._runtime.GetTickCountNoSave()}},async PlayAtObjectByName(folder,filename,looping,vol,objectClass,innerAngle,outerAngle,outerGain,tag){if(this._isSilent)return;if(this._isSilent)return;if(!objectClass)return;const inst=
objectClass.GetFirstPicked();if(!inst||!inst.GetWorldInfo())return;const wi=inst.GetWorldInfo();const layerAngle=wi.GetLayer().GetAngle();const [x,y]=this.rotatePtAround(wi.GetX(),wi.GetY(),-layerAngle,this._listenerX,this._listenerY);const isMusic=folder===1;const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(filename)||this._remoteUrls.get(filename.toLowerCase());if(!info)return;const nextPlayTime=this._nextPlayTime;this._nextPlayTime=0;const state=this._MaybeMarkAsPlaying(tag.toLowerCase(),
isMusic,looping!==0,this.DbToLinear(vol));try{await this.PostToDOMAsync("play",{"originalUrl":filename,"url":info.url,"type":info.type,"isMusic":isMusic,"tag":tag.toLowerCase(),"isLooping":looping!==0,"vol":this.DbToLinear(vol),"pos":0,"off":nextPlayTime,"trueClock":!!self["C3_GetAudioContextCurrentTime"],"panning":{"x":x,"y":y,"angle":wi.GetAngle()-layerAngle,"innerAngle":C3.toRadians(innerAngle),"outerAngle":C3.toRadians(outerAngle),"outerGain":this.DbToLinear(outerGain),"uid":inst.GetUID()}})}finally{if(state)state["placeholder"]=
this._runtime.GetTickCountNoSave()}},SetLooping(tag,looping){this.PostToDOM("set-looping",{"tag":tag.toLowerCase(),"isLooping":looping===0})},SetMuted(tag,muted){this.PostToDOM("set-muted",{"tag":tag.toLowerCase(),"isMuted":muted===0})},SetVolume(tag,vol){this.PostToDOM("set-volume",{"tag":tag.toLowerCase(),"vol":this.DbToLinear(vol)})},FadeVolume(tag,vol,duration,ending){this.PostToDOM("fade-volume",{"tag":tag.toLowerCase(),"vol":this.DbToLinear(vol),"duration":duration,"stopOnEnd":ending===0})},
async Preload(file){const isMusic=file[1];const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(file[0]);if(!info)return;this._preloadTotal++;await this.PostToDOMAsync("preload",{"originalUrl":file[0],"url":info.url,"type":info.type,"isMusic":isMusic});this._preloadCount++},async PreloadByName(folder,filename){const isMusic=folder===1;const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(filename)||this._remoteUrls.get(filename.toLowerCase());if(!info)return;this._preloadTotal++;
await this.PostToDOMAsync("preload",{"originalUrl":filename,"url":info.url,"type":info.type,"isMusic":isMusic});this._preloadCount++},SetPlaybackRate(tag,rate){this.PostToDOM("set-playback-rate",{"tag":tag.toLowerCase(),"rate":Math.max(rate,0)})},Stop(tag){this.PostToDOM("stop",{"tag":tag.toLowerCase()})},StopAll(){this.PostToDOM("stop-all")},SetPaused(tag,state){this.PostToDOM("set-paused",{"tag":tag.toLowerCase(),"paused":state===0})},Seek(tag,pos){this.PostToDOM("seek",{"tag":tag.toLowerCase(),
"pos":pos})},SetSilent(s){if(s===2)s=this._isSilent?1:0;s=s===0;if(this._isSilent===s)return;this._isSilent=s;this.PostToDOM("set-silent",{"isSilent":s})},SetMasterVolume(vol){const mv=this.DbToLinear(vol);if(this._masterVolume===mv)return;this._masterVolume=mv;this.PostToDOM("set-master-volume",{"vol":mv})},AddFilterEffect(tag,type,freq,detune,q,gain,mix){tag=tag.toLowerCase();const typeStr=FILTER_TYPES[type];this._IncrementEffectCount(tag);this.PostToDOM("add-effect",{"type":"filter","tag":tag,
"params":[typeStr,freq,detune,q,gain,C3.clamp(mix/100,0,1)]})},AddDelayEffect(tag,delay,gain,mix){tag=tag.toLowerCase();this._IncrementEffectCount(tag);this.PostToDOM("add-effect",{"type":"delay","tag":tag,"params":[delay,this.DbToLinear(gain),C3.clamp(mix/100,0,1)]})},AddFlangerEffect(tag,delay,modulation,freq,feedback,mix){tag=tag.toLowerCase();this._IncrementEffectCount(tag);this.PostToDOM("add-effect",{"type":"flanger","tag":tag,"params":[delay/1E3,modulation/1E3,freq,feedback/100,C3.clamp(mix/
100,0,1)]})},AddPhaserEffect(tag,freq,detune,q,mod,modfreq,mix){tag=tag.toLowerCase();this._IncrementEffectCount(tag);this.PostToDOM("add-effect",{"type":"phaser","tag":tag,"params":[freq,detune,q,mod,modfreq,C3.clamp(mix/100,0,1)]})},AddConvolutionEffect(tag,file,norm,mix){tag=tag.toLowerCase();const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(file[0]);if(!info)return;this._IncrementEffectCount(tag);this.PostToDOM("add-effect",{"type":"convolution","tag":tag,"bufferOriginalUrl":file[0],
"bufferUrl":info.url,"bufferType":info.type,"params":[norm===0,C3.clamp(mix/100,0,1)]})},AddGainEffect(tag,g){tag=tag.toLowerCase();this._IncrementEffectCount(tag);this.PostToDOM("add-effect",{"type":"gain","tag":tag,"params":[this.DbToLinear(g)]})},AddMuteEffect(tag){tag=tag.toLowerCase();this._IncrementEffectCount(tag);this.PostToDOM("add-effect",{"type":"gain","tag":tag,"params":[0]})},AddTremoloEffect(tag,freq,mix){tag=tag.toLowerCase();this._IncrementEffectCount(tag);this.PostToDOM("add-effect",
{"type":"tremolo","tag":tag,"params":[freq,C3.clamp(mix/100,0,1)]})},AddRingModEffect(tag,freq,mix){tag=tag.toLowerCase();this._IncrementEffectCount(tag);this.PostToDOM("add-effect",{"type":"ringmod","tag":tag,"params":[freq,C3.clamp(mix/100,0,1)]})},AddDistortionEffect(tag,threshold,headroom,drive,makeupgain,mix){tag=tag.toLowerCase();this._IncrementEffectCount(tag);this.PostToDOM("add-effect",{"type":"distortion","tag":tag,"params":[this.DbToLinearNoCap(threshold),this.DbToLinearNoCap(headroom),
drive,this.DbToLinearNoCap(makeupgain),C3.clamp(mix/100,0,1)]})},AddCompressorEffect(tag,threshold,knee,ratio,attack,release){tag=tag.toLowerCase();this._IncrementEffectCount(tag);this.PostToDOM("add-effect",{"type":"compressor","tag":tag,"params":[threshold,knee,ratio,attack/1E3,release/1E3]})},AddAnalyserEffect(tag,fftSize,smoothing){tag=tag.toLowerCase();this._IncrementEffectCount(tag);this.PostToDOM("add-effect",{"type":"analyser","tag":tag,"params":[fftSize,smoothing]})},RemoveEffects(tag){tag=
tag.toLowerCase();this._effectCount.set(tag,0);this.PostToDOM("remove-effects",{"tag":tag});this._lastFxState={}},SetEffectParameter(tag,index,param,value,ramp,time){this.PostToDOM("set-effect-param",{"tag":tag.toLowerCase(),"index":Math.floor(index),"param":param,"value":value,"ramp":ramp,"time":time})},SetListenerObject(objectClass){if(!objectClass)return;const inst=objectClass.GetFirstPicked();if(!inst||!inst.GetWorldInfo())return;this._listenerInst=inst},SetListenerZ(z){this._listenerZ=z},ScheduleNextPlay(t){this._nextPlayTime=
Math.max(t,0)},UnloadAudio(file){const isMusic=file[1];const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(file[0]);if(!info)return;this.PostToDOM("unload",{"url":info.url,"type":info.type,"isMusic":isMusic})},UnloadAudioByName(folder,filename){const isMusic=folder===1;const info=this._runtime.GetAssetManager().GetProjectAudioFileUrl(filename)||this._remoteUrls.get(filename.toLowerCase());if(!info)return;this.PostToDOM("unload",{"url":info.url,"type":info.type,"isMusic":isMusic})},UnloadAll(){this.PostToDOM("unload-all")},
AddRemoteURL(url,type,name){this._remoteUrls.set(name.toLowerCase(),{url,type})}};

}

{
'use strict';const C3=self.C3;
C3.Plugins.Audio.Exps={Duration(tag){const a=this._GetFirstAudioStateByTag(tag);return a?a["duration"]:0},PlaybackTime(tag){const a=this._GetFirstAudioStateByTag(tag);return a?a["playbackTime"]:0},PlaybackRate(tag){const a=this._GetFirstAudioStateByTag(tag);return a?a["playbackRate"]:0},Volume(tag){const a=this._GetFirstAudioStateByTag(tag);return a?this.LinearToDb(a["volume"]):0},MasterVolume(){return this.LinearToDb(this._masterVolume)},EffectCount(tag){return this._effectCount.get(tag.toLowerCase())||0},
AnalyserFreqBinCount(tag,index){const o=this.GetAnalyserData(tag,Math.floor(index));return o?o["binCount"]:0},AnalyserFreqBinAt(tag,index,bin){const o=this.GetAnalyserData(tag,Math.floor(index));if(!o)return 0;bin=Math.floor(bin);if(bin<0||bin>=o["binCount"])return 0;return o["freqBins"][bin]},AnalyserPeakLevel(tag,index){const o=this.GetAnalyserData(tag,Math.floor(index));return o?o["peak"]:0},AnalyserRMSLevel(tag,index){const o=this.GetAnalyserData(tag,Math.floor(index));return o?o["rms"]:0},SampleRate(){return this._sampleRate},
CurrentTime(){if(self["C3_GetAudioContextCurrentTime"])return self["C3_GetAudioContextCurrentTime"]();else return performance.now()/1E3}};

}

{
'use strict';
{
    C3.Plugins.Eponesh_GameScore = class GameScorePlugin extends C3.SDKPluginBase {
        constructor(opts) {
            super(opts, 'Eponesh_GameScore');
        }

        Release() {
            super.Release();
        }
    };
}

}

{
'use strict';
{
    C3.Plugins.Eponesh_GameScore.Type = class GameScoreType extends C3.SDKTypeBase {
        constructor(objectClass) {
            super(objectClass);
        }

        Release() {
            super.Release();
        }

        OnCreate() {}
    };
}

}

{
'use strict';
{
    const SERVER_HOST = 'https://gs.eponesh.com';
    // const SERVER_HOST = 'https://gs.eponesh.com';

    C3.Plugins.Eponesh_GameScore.Instance = class GameScoreInstance extends C3.SDKInstanceBase {
        constructor(inst, properties) {
            super(inst);

            this.mappers = {
                language: ['en', 'ru', 'fr', 'it', 'de', 'es', 'zh', 'pt', 'ko', 'ja'],
                avatarGenerator: [
                    'dicebear_retro',
                    'dicebear_identicon',
                    'dicebear_human',
                    'dicebear_micah',
                    'dicebear_bottts',
                    'icotar',
                    'robohash_robots',
                    'robohash_cats'
                ],
                withMe: ['none', 'first', 'last'],
                platform: ['YANDEX', 'VK', 'NONE', 'OK', 'GAME_MONETIZE', 'CRAZY_GAMES', 'GAME_DISTRIBUTION'],
                compare: [
                    (a, b) => a === b,
                    (a, b) => a !== b,
                    (a, b) => a < b,
                    (a, b) => a <= b,
                    (a, b) => a > b,
                    (a, b) => a >= b
                ]
            };

            this.conditions = C3.Plugins.Eponesh_GameScore.Cnds;
            this.actions = C3.Plugins.Eponesh_GameScore.Acts;

            this.awaiters = {
                player: {},
                gs: {}
            };
            this.awaiters.gs.ready = new Promise((res, rej) => {
                this.awaiters.gs.done = res;
                this.awaiters.gs.abort = rej;
            });
            this.awaiters.player.ready = new Promise((res, rej) => {
                this.awaiters.player.done = res;
                this.awaiters.player.abort = rej;
            });

            this.leaderboard = [];
            this.currentLeaderboardIndex = 0;
            this.currentLeaderboardPlayer = {};
            this.lastLeaderboardTag = '';
            this.lastLeaderboardPlayerRatingTag = '';
            this.leaderboardPlayerPosition = 0;

            this.currentPlayerFieldKey = '';
            this.currentPlayerFieldType = '';
            this.currentPlayerFieldName = '';
            this.currentPlayerFieldValue = '';

            this.currentPlayerFieldVariantValue = '';
            this.currentPlayerFieldVariantName = '';
            this.currentPlayerFieldVariantIndex = 0;

            this.achievements = [];
            this.achievementsGroups = [];
            this.playerAchievements = [];

            this.currentAchievementIndex = 0;
            this.currentAchievementId = 0;
            this.currentAchievementTag = '';
            this.currentAchievementName = '';
            this.currentAchievementDescription = '';
            this.currentAchievementIcon = '';
            this.currentAchievementIconSmall = '';
            this.currentAchievementRare = 'COMMON';
            this.currentAchievementUnlocked = false;

            this.currentAchievementsGroupIndex = 0;
            this.currentAchievementsGroupId = 0;
            this.currentAchievementsGroupTag = '';
            this.currentAchievementsGroupName = '';
            this.currentAchievementsGroupDescription = '';

            this.currentPlayerAchievementIndex = 0;
            this.currentPlayerAchievementId = 0;
            this.currentPlayerAchievementUnlockDate = '';

            this.isUnlockAchievementSuccess = false;
            this.unlockAchievementError = '';

            this.unlockedAchievementId = 0;
            this.unlockedAchievementTag = '';
            this.unlockedAchievementName = '';
            this.unlockedAchievementDescription = '';
            this.unlockedAchievementIcon = '';
            this.unlockedAchievementIconSmall = '';
            this.unlockedAchievementRare = 'COMMON';

            this.isLastAdSuccess = false;
            this.isLastShareSuccess = false;
            this.isReady = false;
            this.isPlayerReady = false;

            this.projectId = Number(properties[0] || 0);
            this.publicToken = properties[1];
            this.showPreloaderOnStart = properties[2];
            this.shouldWaitPlayerOnLoad = properties[3];

            this._runtime.AddLoadPromise(this.awaiters.gs.ready);
            if (this.shouldWaitPlayerOnLoad) {
                this._runtime.AddLoadPromise(this.awaiters.player.ready);
            }

            this._runtime.Dispatcher().addEventListener('afterfirstlayoutstart', () => {
                if (this.isReady) {
                    this.Trigger(this.conditions.OnReady);
                }

                if (this.isPlayerReady) {
                    this.Trigger(this.conditions.OnPlayerReady);
                }
            });

            this.loadLib();
        }

        onError() {
            const stub = () => Promise.resolve({});
            this.awaiters.gs.done();
            this.awaiters.player.done();
            this.gs = {
                on() {},
                changeLanguage: stub,
                changeAvatarGenerator: stub,
                loadOverlay: stub,
                isDev: false,
                language: 'en',
                avatarGenerator: 'dicebear_retro',
                app: {
                    title: '',
                    description: '',
                    image: '',
                    url: ''
                },
                analytics: {
                    on() {},
                    hit() {},
                    goal() {}
                },
                platform: {
                    on() {},
                    hasIntegratedAuth: false,
                    type: 'NONE'
                },
                socials: {
                    isSupportsNativeShare: false,
                    isSupportsNativePosts: false,
                    isSupportsNativeInvite: false,
                    share: stub,
                    post: stub,
                    invite: stub
                },
                leaderboard: {
                    on() {},
                    open: stub,
                    fetch: stub,
                    fetchPlayerRating: stub
                },
                achievements: {
                    on() {},
                    has() {},
                    open: stub,
                    fetch: stub,
                    unlock: stub
                },
                fullscreen: {
                    isEnabled: false,
                    on() {},
                    open() {},
                    close() {},
                    toggle() {}
                },
                ads: {
                    isFullscreenAvailable: false,
                    isRewardedAvailable: false,
                    isPreloaderAvailable: false,
                    isStickyAvailable: false,
                    isAdblockEnabled: false,
                    on() {},
                    showFullscreen: stub,
                    showRewardedVideo: stub,
                    showPreloader: stub,
                    showSticky: stub,
                    closeSticky: stub,
                    refreshSticky: stub
                },
                player: {
                    isStub: true,
                    isLoggedIn: false,
                    id: 0,
                    name: '',
                    avatar: '',
                    on() {},
                    sync: stub,
                    load: stub,
                    login: stub,
                    fetchFields: stub,
                    getField: stub,
                    getFieldName: stub,
                    getFieldVariantName: stub,
                    add: stub,
                    has: stub,
                    get: stub,
                    set: stub,
                    toggle: stub,
                    reset: stub,
                    remove: stub,
                    fields: []
                }
            };
            this.isReady = true;
            this.Trigger(this.conditions.OnReady);
            this.isPlayerReady = true;
            this.Trigger(this.conditions.OnPlayerReady);
        }

        loadLib() {
            try {
                window.onGSInit = (gs) => gs.ready.then(() => this.init(gs).catch(() => this.onError()));
                ((d) => {
                    var t = d.getElementsByTagName('script')[0];
                    var s = d.createElement('script');
                    s.src = `${SERVER_HOST}/sdk/game-score.js?projectId=${this.projectId}&publicToken=${this.publicToken}&callback=onGSInit`;
                    s.async = true;
                    s.onerror = () => this.onError();
                    t.parentNode.insertBefore(s, t);
                })(document);
            } catch (err) {
                console.error(err);
                this.onError();
            }
        }

        init(gs) {
            this.gs = gs;

            // player
            this.gs.player.on('ready', () => {
                this.isPlayerReady = true;
                this.awaiters.player.done();
                this.Trigger(this.conditions.OnPlayerReady);
            });
            this.gs.player.on('change', () => this.Trigger(this.conditions.OnPlayerChange));
            this.gs.player.on('sync', (success) => {
                this.Trigger(success ? this.conditions.OnPlayerSyncComplete : this.conditions.OnPlayerSyncError);
            });
            this.gs.player.on('load', (success) => {
                this.Trigger(success ? this.conditions.OnPlayerLoadComplete : this.conditions.OnPlayerLoadError);
            });
            this.gs.player.on('login', (success) => {
                this.Trigger(success ? this.conditions.OnPlayerLoginComplete : this.conditions.OnPlayerLoginError);
            });
            this.gs.player.on('fetchFields', (success) => {
                this.Trigger(
                    success ? this.conditions.OnPlayerFetchFieldsComplete : this.conditions.OnPlayerFetchFieldsError
                );
            });

            // leaderboard
            this.gs.leaderboard.on('open', () => this.Trigger(this.conditions.OnLeaderboardOpen));

            // achievements
            this.gs.achievements.on('open', () => this.Trigger(this.conditions.OnAchievementsOpen));
            this.gs.achievements.on('close', () => this.Trigger(this.conditions.OnAchievementsClose));

            // fullscreen
            this.gs.fullscreen.on('open', () => this.Trigger(this.conditions.OnFullscreenOpen));
            this.gs.fullscreen.on('close', () => this.Trigger(this.conditions.OnFullscreenClose));
            this.gs.fullscreen.on('change', () => this.Trigger(this.conditions.OnFullscreenChange));

            // ads
            this.gs.ads.on('start', () => this.Trigger(this.conditions.OnAdsStart));
            this.gs.ads.on('close', (success) => {
                this.isLastAdSuccess = success;
                this.Trigger(this.conditions.OnAdsClose);
            });

            this.gs.ads.on('fullscreen:start', () => this.Trigger(this.conditions.OnAdsFullscreenStart));
            this.gs.ads.on('fullscreen:close', () => this.Trigger(this.conditions.OnAdsFullscreenClose));

            this.gs.ads.on('preloader:start', () => this.Trigger(this.conditions.OnAdsPreloaderStart));
            this.gs.ads.on('preloader:close', () => this.Trigger(this.conditions.OnAdsPreloaderClose));

            this.gs.ads.on('rewarded:start', () => this.Trigger(this.conditions.OnAdsRewardedStart));
            this.gs.ads.on('rewarded:close', () => this.Trigger(this.conditions.OnAdsRewardedClose));
            this.gs.ads.on('rewarded:reward', () => this.Trigger(this.conditions.OnAdsRewardedReward));

            this.gs.ads.on('sticky:start', () => this.Trigger(this.conditions.OnAdsStickyStart));
            this.gs.ads.on('sticky:close', () => this.Trigger(this.conditions.OnAdsStickyClose));
            this.gs.ads.on('sticky:refresh', () => this.Trigger(this.conditions.OnAdsStickyRefresh));
            this.gs.ads.on('sticky:render', () => this.Trigger(this.conditions.OnAdsStickyRender));

            // socials
            this.gs.socials.on('share', (success) => {
                this.isLastShareSuccess = success;
                this.Trigger(this.conditions.OnSocialsShare);
            });
            this.gs.socials.on('post', (success) => {
                this.isLastShareSuccess = success;
                this.Trigger(this.conditions.OnSocialsPost);
            });
            this.gs.socials.on('invite', (success) => {
                this.isLastShareSuccess = success;
                this.Trigger(this.conditions.OnSocialsInvite);
            });

            // gs
            this.gs.on('change:language', () => this.Trigger(this.conditions.OnChangeLanguage));
            this.gs.on('change:avatarGenerator', () => this.Trigger(this.conditions.OnChangeAvatarGenerator));
            this.gs.on('overlay:ready', () => this.Trigger(this.conditions.OnOverlayReady));

            // ready
            this.isReady = true;
            this.Trigger(this.conditions.OnReady);
            this.awaiters.gs.done();

            if (this.showPreloaderOnStart) {
                this.gs.ads.showPreloader();
            }
        }

        Release() {
            super.Release();
        }

        SaveToJson() {
            return {
                leaderboard: this.leaderboard,
                currentLeaderboardIndex: this.currentLeaderboardIndex,
                currentLeaderboardPlayer: this.currentLeaderboardPlayer,
                lastLeaderboardTag: this.lastLeaderboardTag,
                lastLeaderboardPlayerRatingTag: this.lastLeaderboardPlayerRatingTag,
                leaderboardPlayerPosition: this.leaderboardPlayerPosition,

                currentPlayerFieldKey: this.currentPlayerFieldKey,
                currentPlayerFieldType: this.currentPlayerFieldType,
                currentPlayerFieldName: this.currentPlayerFieldName,
                currentPlayerFieldValue: this.currentPlayerFieldValue,

                currentPlayerFieldVariantValue: this.currentPlayerFieldVariantValue,
                currentPlayerFieldVariantName: this.currentPlayerFieldVariantName,
                currentPlayerFieldVariantIndex: this.currentPlayerFieldVariantIndex,

                isLastAdSuccess: this.isLastAdSuccess,
                isLastShareSuccess: this.isLastShareSuccess,
                isReady: this.isReady,
                isPlayerReady: this.isPlayerReady,

                achievements: this.achievements,
                achievementsGroups: this.achievementsGroups,
                playerAchievements: this.playerAchievements,

                currentAchievementIndex: this.currentAchievementIndex,
                currentAchievementId: this.currentAchievementId,
                currentAchievementTag: this.currentAchievementTag,
                currentAchievementName: this.currentAchievementName,
                currentAchievementDescription: this.currentAchievementDescription,
                currentAchievementIcon: this.currentAchievementIcon,
                currentAchievementIconSmall: this.currentAchievementIconSmall,
                currentAchievementRare: this.currentAchievementRare,
                currentAchievementUnlocked: this.currentAchievementUnlocked,

                currentAchievementsGroupIndex: this.currentAchievementsGroupIndex,
                currentAchievementsGroupId: this.currentAchievementsGroupId,
                currentAchievementsGroupTag: this.currentAchievementsGroupTag,
                currentAchievementsGroupName: this.currentAchievementsGroupName,
                currentAchievementsGroupDescription: this.currentAchievementsGroupDescription,

                currentPlayerAchievementIndex: this.currentPlayerAchievementIndex,
                currentPlayerAchievementId: this.currentPlayerAchievementId,
                currentPlayerAchievementUnlockDate: this.currentPlayerAchievementUnlockDate,

                isUnlockAchievementSuccess: this.isUnlockAchievementSuccess,
                unlockAchievementError: this.unlockAchievementError,

                unlockedAchievementId: this.unlockedAchievementId,
                unlockedAchievementTag: this.unlockedAchievementTag,
                unlockedAchievementName: this.unlockedAchievementName,
                unlockedAchievementDescription: this.unlockedAchievementDescription,
                unlockedAchievementIcon: this.unlockedAchievementIcon,
                unlockedAchievementIconSmall: this.unlockedAchievementIconSmall,
                unlockedAchievementRare: this.unlockedAchievementRare
            };
        }

        LoadFromJson(o) {
            this.leaderboard = o.leaderboard;
            this.currentLeaderboardIndex = o.currentLeaderboardIndex;
            this.currentLeaderboardPlayer = o.currentLeaderboardPlayer;
            this.lastLeaderboardTag = o.lastLeaderboardTag;
            this.lastLeaderboardPlayerRatingTag = o.lastLeaderboardPlayerRatingTag;
            this.leaderboardPlayerPosition = o.leaderboardPlayerPosition || 0;

            this.currentPlayerFieldKey = o.currentPlayerFieldKey;
            this.currentPlayerFieldType = o.currentPlayerFieldType;
            this.currentPlayerFieldName = o.currentPlayerFieldName;
            this.currentPlayerFieldValue = o.currentPlayerFieldValue;

            this.currentPlayerFieldVariantValue = o.currentPlayerFieldVariantValue;
            this.currentPlayerFieldVariantName = o.currentPlayerFieldVariantName;
            this.currentPlayerFieldVariantIndex = o.currentPlayerFieldVariantIndex;

            this.isLastAdSuccess = o.isLastAdSuccess;
            this.isLastShareSuccess = o.isLastShareSuccess;
            this.isReady = o.isReady;
            this.isPlayerReady = o.isPlayerReady;

            this.achievements = o.achievements || [];
            this.achievementsGroups = o.achievementsGroups || [];
            this.playerAchievements = o.playerAchievements || [];

            this.currentAchievementIndex = o.currentAchievementIndex || 0;
            this.currentAchievementId = o.currentAchievementId || 0;
            this.currentAchievementTag = o.currentAchievementTag || '';
            this.currentAchievementName = o.currentAchievementName || '';
            this.currentAchievementDescription = o.currentAchievementDescription || '';
            this.currentAchievementIcon = o.currentAchievementIcon || '';
            this.currentAchievementIconSmall = o.currentAchievementIconSmall || '';
            this.currentAchievementRare = o.currentAchievementRare || 'COMMON';
            this.currentAchievementUnlocked = o.currentAchievementUnlocked || false;

            this.currentAchievementsGroupIndex = o.currentAchievementsGroupIndex || 0;
            this.currentAchievementsGroupId = o.currentAchievementsGroupId || 0;
            this.currentAchievementsGroupTag = o.currentAchievementsGroupTag || '';
            this.currentAchievementsGroupName = o.currentAchievementsGroupName || '';
            this.currentAchievementsGroupDescription = o.currentAchievementsGroupDescription || '';

            this.currentPlayerAchievementIndex = o.currentPlayerAchievementIndex || 0;
            this.currentPlayerAchievementId = o.currentPlayerAchievementId || 0;
            this.currentPlayerAchievementUnlockDate = o.currentPlayerAchievementUnlockDate || '';

            this.isUnlockAchievementSuccess = o.isUnlockAchievementSuccess || false;
            this.unlockAchievementError = o.unlockAchievementError || '';

            this.unlockedAchievementId = o.unlockedAchievementId || 0;
            this.unlockedAchievementTag = o.unlockedAchievementTag || '';
            this.unlockedAchievementName = o.unlockedAchievementName || '';
            this.unlockedAchievementDescription = o.unlockedAchievementDescription || '';
            this.unlockedAchievementIcon = o.unlockedAchievementIcon || '';
            this.unlockedAchievementIconSmall = o.unlockedAchievementIconSmall || '';
            this.unlockedAchievementRare = o.unlockedAchievementRare || 'COMMON';
        }

        GetDebuggerProperties() {
            if (!this.isPlayerReady) {
                return [];
            }
            return [
                {
                    title: 'GameScore - Base',
                    properties: [
                        {
                            name: 'Language',
                            value: this.gs.language
                        },
                        {
                            name: 'Avatar Generator',
                            value: this.gs.avatarGenerator
                        },
                        {
                            name: 'Platform',
                            value: this.gs.platform.type
                        }
                    ]
                },
                {
                    title: 'GameScore - Ads',
                    properties: [
                        {
                            name: 'Last Ad Success',
                            value: this.isLastAdSuccess
                        },
                        {
                            name: 'Adblock Enabled',
                            value: this.gs.ads.isAdblockEnabled
                        }
                    ]
                },
                {
                    title: 'GameScore - Leaderboards',
                    properties: [
                        {
                            name: 'Player Position',
                            value: this.leaderboardPlayerPosition
                        }
                    ]
                },
                {
                    title: 'GameScore - Player',
                    properties: [
                        {
                            name: 'ID',
                            value: this.gs.player.id
                        },
                        {
                            name: 'Logged In By Platform',
                            value: this.gs.player.isLoggedInByPlatform
                        },
                        {
                            name: 'Is Stub',
                            value: this.gs.player.isStub
                        },
                        ...this.gs.player.fields.map((f) => ({
                            name: this.gs.player.getFieldName(f.key),
                            value: this.gs.player.get(f.key),
                            onedit: (v) => this.CallAction(this.actions.PlayerSet, f.key, v)
                        }))
                    ]
                },
                {
                    title: 'GameScore - Achievements Loop',
                    properties: [
                        {
                            name: 'Current Achievement Index',
                            value: this.currentAchievementIndex
                        },
                        {
                            name: 'Current Achievement ID',
                            value: this.currentAchievementId
                        },
                        {
                            name: 'Current Achievement Tag',
                            value: this.currentAchievementTag
                        },
                        {
                            name: 'Current Achievement Name',
                            value: this.currentAchievementName
                        },
                        {
                            name: 'Current Achievement Description',
                            value: this.currentAchievementDescription
                        },
                        {
                            name: 'Current Achievement Icon',
                            value: this.currentAchievementIcon
                        },
                        {
                            name: 'Current Achievement Icon Small',
                            value: this.currentAchievementIconSmall
                        },
                        {
                            name: 'Current Achievement Icon',
                            value: this.currentAchievementIcon
                        },
                        {
                            name: 'Current Achievement Rare',
                            value: this.currentAchievementRare
                        },
                        {
                            name: 'Current Achievement Unlocked',
                            value: this.currentAchievementUnlocked
                        }
                    ]
                },
                {
                    title: 'GameScore - Achievements Groups Loop',
                    properties: [
                        {
                            name: 'Current Achievements Group Index',
                            value: this.currentAchievementsGroupIndex
                        },
                        {
                            name: 'Current Achievements Group ID',
                            value: this.currentAchievementsGroupId
                        },
                        {
                            name: 'Current Achievements Group Tag',
                            value: this.currentAchievementsGroupTag
                        },
                        {
                            name: 'Current Achievements Group Name',
                            value: this.currentAchievementsGroupName
                        },
                        {
                            name: 'Current Achievements Group Description',
                            value: this.currentAchievementsGroupDescription
                        }
                    ]
                },
                {
                    title: 'GameScore - Player Achievements Loop',
                    properties: [
                        {
                            name: 'Current Player Achievement Index',
                            value: this.currentPlayerAchievementIndex
                        },
                        {
                            name: 'Current Player Achievement ID',
                            value: this.currentPlayerAchievementId
                        },
                        {
                            name: 'Current Player Achievement Unlock Date',
                            value: this.currentPlayerAchievementUnlockDate
                        }
                    ]
                },
                {
                    title: 'GameScore - Unlocked Achievement',
                    properties: [
                        {
                            name: 'Is unlock successful',
                            value: this.isUnlockAchievementSuccess
                        },
                        {
                            name: 'Unlock error',
                            value: this.unlockAchievementError
                        },
                        {
                            name: 'Unlocked Achievement ID',
                            value: this.unlockedAchievementId
                        },
                        {
                            name: 'Unlocked Achievement Tag',
                            value: this.unlockedAchievementTag
                        },
                        {
                            name: 'Unlocked Achievement Name',
                            value: this.unlockedAchievementName
                        },
                        {
                            name: 'Unlocked Achievement Description',
                            value: this.unlockedAchievementDescription
                        },
                        {
                            name: 'Unlocked Achievement Icon',
                            value: this.unlockedAchievementIcon
                        },
                        {
                            name: 'Unlocked Achievement Icon Small',
                            value: this.unlockedAchievementIconSmall
                        },
                        {
                            name: 'Unlocked Achievement Icon',
                            value: this.unlockedAchievementIcon
                        },
                        {
                            name: 'Unlocked Achievement Rare',
                            value: this.unlockedAchievementRare
                        }
                    ]
                }
            ];
        }
    };
}

}

{
'use strict';
{
    function each(runtime, array, cb) {
        const eventSheetManager = runtime.GetEventSheetManager();
        const currentEvent = runtime.GetCurrentEvent();
        const solModifiers = currentEvent.GetSolModifiers();
        const eventStack = runtime.GetEventStack();
        const oldFrame = eventStack.GetCurrentStackFrame();
        const newFrame = eventStack.Push(currentEvent);

        array.forEach((item, index) => {
            cb(item, index);

            eventSheetManager.PushCopySol(solModifiers);
            currentEvent.Retrigger(oldFrame, newFrame);
            eventSheetManager.PopSol(solModifiers);
        });

        eventStack.Pop();
    }

    C3.Plugins.Eponesh_GameScore.Cnds = {
        OnPlayerChange() {
            return true;
        },

        OnPlayerSyncComplete() {
            return true;
        },

        OnPlayerSyncError() {
            return true;
        },

        OnPlayerLoadComplete() {
            return true;
        },

        OnPlayerLoadError() {
            return true;
        },

        OnPlayerLoginComplete() {
            return true;
        },

        OnPlayerLoginError() {
            return true;
        },

        OnPlayerFetchFieldsComplete() {
            return true;
        },

        OnPlayerFetchFieldsError() {
            return true;
        },

        OnPlayerReady() {
            return true;
        },

        IsPlayerReady() {
            return this.isPlayerReady;
        },

        IsPlayerStub() {
            return this.gs.player.isStub;
        },

        IsPlayerLoggedIn() {
            return this.gs.player.isLoggedIn;
        },

        PlayerHasKey(key) {
            return this.gs.player.has(key);
        },

        PlayerFieldIsEnum(key) {
            return this.gs.player.getField(key).variants.length;
        },

        PlayerCompareScore(comparison, value) {
            return this.mappers.compare[comparison](this.gs.player.score, value);
        },

        PlayerCompare(key, comparison, value) {
            return this.mappers.compare[comparison](this.gs.player.get(key), value);
        },

        PlayerEachField() {
            each(this._runtime, this.gs.player.fields, (field) => {
                this.currentPlayerFieldKey = field.key;
                this.currentPlayerFieldType = field.type;
                this.currentPlayerFieldName = field.name;
                this.currentPlayerFieldValue = this.gs.player.get(field.key);
            });

            return false;
        },

        PlayerEachFieldVariant(key) {
            each(this._runtime, this.gs.player.getField(key).variants, (variant, index) => {
                this.currentPlayerFieldVariantValue = variant.value;
                this.currentPlayerFieldVariantName = variant.name;
                this.currentPlayerFieldVariantIndex = index;
            });

            return false;
        },

        OnLeaderboardOpen() {
            return true;
        },

        OnLeaderboardFetch(tag) {
            return this.lastLeaderboardTag === tag;
        },

        OnLeaderboardAnyFetch() {
            return true;
        },

        OnLeaderboardFetchError(tag) {
            return this.lastLeaderboardTag === tag;
        },

        OnLeaderboardAnyFetchError() {
            return true;
        },

        OnLeaderboardFetchPlayer(tag) {
            return this.lastLeaderboardPlayerRatingTag === tag;
        },

        OnLeaderboardAnyFetchPlayer() {
            return true;
        },

        OnLeaderboardFetchPlayerError(tag) {
            return this.lastLeaderboardPlayerRatingTag === tag;
        },

        OnLeaderboardAnyFetchPlayerError() {
            return true;
        },

        LeaderboardEachPlayer() {
            each(this._runtime, this.leaderboard, (player, index) => {
                this.currentLeaderboardIndex = index;
                this.currentLeaderboardPlayer = player;
            });

            return false;
        },

        OnAchievementsOpen() {
            return true;
        },

        OnAchievementsClose() {
            return true;
        },

        OnAchievementsFetch() {
            return true;
        },

        OnAchievementsFetchError() {
            return true;
        },

        OnAchievementsUnlock(idOrTag) {
            const id = parseInt(idOrTag, 10) || 0;
            return this.unlockedAchievementTag === idOrTag || this.unlockedAchievementId === id;
        },

        OnAchievementsAnyUnlock() {
            return true;
        },

        OnAchievementsAnyUnlockError() {
            return true;
        },

        AchievementsEachAchievement() {
            each(this._runtime, this.achievements, (achievement, index) => {
                this.currentAchievementIndex = index;
                this.currentAchievementId = achievement.id;
                this.currentAchievementTag = achievement.tag;
                this.currentAchievementName = achievement.name;
                this.currentAchievementDescription = achievement.description;
                this.currentAchievementIcon = achievement.icon;
                this.currentAchievementIconSmall = achievement.iconSmall;
                this.currentAchievementRare = achievement.rare;
                this.currentAchievementUnlocked = this.playerAchievements.some(
                    (a) => a.achievementId === achievement.id
                );
            });

            return false;
        },

        AchievementsEachAchievementInGroup(idOrTag) {
            const id = parseInt(idOrTag, 10) || 0;
            const group = this.achievementsGroups.find((ag) => ag.tag === idOrTag || ag.id === id);
            const achievements = group
                ? group.achievements.reduce((list, aId) => {
                      const achievement = this.achievements.find((a) => a.id === aId);
                      if (achievement) {
                          list.push(achievement);
                      }
                      return list;
                  }, [])
                : [];

            each(this._runtime, achievements, (achievement, index) => {
                this.currentAchievementIndex = index;
                this.currentAchievementId = achievement.id;
                this.currentAchievementTag = achievement.tag;
                this.currentAchievementName = achievement.name;
                this.currentAchievementDescription = achievement.description;
                this.currentAchievementIcon = achievement.icon;
                this.currentAchievementIconSmall = achievement.iconSmall;
                this.currentAchievementRare = achievement.rare;
                this.currentAchievementUnlocked = this.playerAchievements.some(
                    (a) => a.achievementId === achievement.id
                );
            });

            return false;
        },

        AchievementsEachAchievementsGroup() {
            each(this._runtime, this.achievementsGroups, (achievementsGroup, index) => {
                this.currentAchievementsGroupIndex = index;
                this.currentAchievementsGroupId = achievementsGroup.id;
                this.currentAchievementsGroupTag = achievementsGroup.tag;
                this.currentAchievementsGroupName = achievementsGroup.name;
                this.currentAchievementsGroupDescription = achievementsGroup.description;
            });

            return false;
        },

        AchievementsEachPlayerAchievements() {
            each(this._runtime, this.playerAchievements, (playerAchievement, index) => {
                this.currentPlayerAchievementIndex = index;
                this.currentPlayerAchievementId = playerAchievement.achievementId;
                this.currentPlayerAchievementUnlockDate = playerAchievement.createdAt;
            });

            return false;
        },

        IsAchievementsCurAchievementUnlocked() {
            return this.currentAchievementUnlocked;
        },

        IsAchievementsUnlockSuccessful() {
            return this.isUnlockAchievementSuccess;
        },

        AchievementsIsUnlocked(idOrTag) {
            return this.gs.achievements.has(idOrTag);
        },

        OnFullscreenOpen() {
            return true;
        },

        OnFullscreenClose() {
            return true;
        },

        OnFullscreenChange() {
            return true;
        },

        IsFullscreenMode() {
            return this.gs.fullscreen.isEnabled;
        },

        OnAdsStart() {
            return true;
        },

        OnAdsClose() {
            return true;
        },

        OnAdsFullscreenStart() {
            return true;
        },

        OnAdsFullscreenClose() {
            return true;
        },

        OnAdsPreloaderStart() {
            return true;
        },

        OnAdsPreloaderClose() {
            return true;
        },

        OnAdsRewardedStart() {
            return true;
        },

        OnAdsRewardedClose() {
            return true;
        },

        OnAdsRewardedReward() {
            return true;
        },

        OnAdsStickyStart() {
            return true;
        },

        OnAdsStickyClose() {
            return true;
        },

        OnAdsStickyRefresh() {
            return true;
        },

        OnAdsStickyRender() {
            return true;
        },

        IsAdsFullscreenAvailable() {
            return this.gs.ads.isFullscreenAvailable;
        },

        IsAdsRewardedAvailable() {
            return this.gs.ads.isRewardedAvailable;
        },

        IsAdsPreloaderAvailable() {
            return this.gs.ads.isPreloaderAvailable;
        },

        IsAdsStickyAvailable() {
            return this.gs.ads.isStickyAvailable;
        },

        IsAdsAdblockEnabled() {
            return this.gs.ads.isAdblockEnabled;
        },

        IsAdsLastAdSuccess() {
            return Boolean(this.isLastAdSuccess);
        },

        // gs
        OnChangeLanguage() {
            return true;
        },

        OnChangeAvatarGenerator() {
            return true;
        },

        OnOverlayReady() {
            return true;
        },

        IsDev() {
            return this.gs.isDev;
        },

        Language(language) {
            return this.gs.language === this.mappers.language[language];
        },

        // platform
        HasPlatformIntegratedAuth() {
            return this.gs.platform.hasIntegratedAuth;
        },

        PlatformType(type) {
            return this.gs.platform.type === this.mappers.platform[type];
        },

        // socials
        OnSocialsShare() {
            return true;
        },

        OnSocialsPost() {
            return true;
        },

        OnSocialsInvite() {
            return true;
        },

        IsSocialsLastShareSuccess() {
            return this.isLastShareSuccess;
        },

        IsSocialsSupportsNativeShare() {
            return this.gs.socials.isSupportsNativeShare;
        },

        IsSocialsSupportsNativePosts() {
            return this.gs.socials.isSupportsNativePosts;
        },

        IsSocialsSupportsNativeInvite() {
            return this.gs.socials.isSupportsNativeInvite;
        },

        OnLoadJsonError() {
            return true;
        }
    };
}

}

{
'use strict';
{
    C3.Plugins.Eponesh_GameScore.Acts = {
        PlayerSetName(name) {
            this.gs.player.name = name;
        },

        PlayerSetAvatar(src) {
            this.gs.player.avatar = src;
        },

        PlayerSetScore(score) {
            this.gs.player.score = score;
        },

        PlayerAddScore(score) {
            this.gs.player.score += score;
        },

        PlayerSet(key, value) {
            this.gs.player.set(key, value);
        },

        PlayerAdd(key, value) {
            this.gs.player.add(key, value);
        },

        PlayerToggle(key) {
            this.gs.player.toggle(key);
        },

        PlayerReset() {
            this.gs.player.reset();
        },

        PlayerRemove() {
            this.gs.player.remove();
        },

        PlayerSync(override = false) {
            return this.gs.player.sync({ override });
        },

        PlayerLoad() {
            return this.gs.player.load();
        },

        PlayerLogin() {
            return this.gs.player.login();
        },

        PlayerFetchFields() {
            return this.gs.player.fetchFields();
        },

        PlayerWaitForReady() {
            return this.awaiters.player.ready;
        },

        LeaderboardOpen(orderBy, order, limit, withMe, includeFields, displayFields) {
            return this.gs.leaderboard
                .open({
                    id: this.gs.player.id,
                    orderBy: orderBy
                        .split(',')
                        .map((o) => o.trim())
                        .filter((f) => f),
                    order: order === 0 ? 'DESC' : 'ASC',
                    limit,
                    withMe: this.mappers.withMe[withMe],
                    includeFields: includeFields
                        .split(',')
                        .map((o) => o.trim())
                        .filter((f) => f),
                    displayFields: displayFields
                        .split(',')
                        .map((o) => o.trim())
                        .filter((f) => f)
                })
                .catch(console.warn);
        },

        LeaderboardFetch(tag, orderBy, order, limit, withMe, includeFields) {
            return this.gs.leaderboard
                .fetch({
                    id: this.gs.player.id,
                    orderBy: orderBy
                        .split(',')
                        .map((o) => o.trim())
                        .filter((f) => f),
                    order: order === 0 ? 'DESC' : 'ASC',
                    limit,
                    withMe: this.mappers.withMe[withMe],
                    includeFields: includeFields
                        .split(',')
                        .map((o) => o.trim())
                        .filter((f) => f)
                })
                .then((leaderboardInfo) => {
                    this.lastLeaderboardTag = tag;
                    this.leaderboard = leaderboardInfo.players;
                    this.Trigger(this.conditions.OnLeaderboardFetch);
                    this.Trigger(this.conditions.OnLeaderboardAnyFetch);
                })
                .catch((err) => {
                    console.warn(err);
                    this.lastLeaderboardTag = tag;
                    this.Trigger(this.conditions.OnLeaderboardFetchError);
                    this.Trigger(this.conditions.OnLeaderboardAnyFetchError);
                });
        },

        LeaderboardFetchPlayerRating(tag, orderBy, order) {
            return this.gs.leaderboard
                .fetchPlayerRating({
                    id: this.gs.player.id,
                    orderBy: orderBy
                        .split(',')
                        .map((o) => o.trim())
                        .filter((f) => f),
                    order: order === 0 ? 'DESC' : 'ASC'
                })
                .then((result) => {
                    this.lastLeaderboardPlayerRatingTag = tag;
                    this.leaderboardPlayerPosition = result.player.position;
                    this.Trigger(this.conditions.OnLeaderboardFetchPlayer);
                    this.Trigger(this.conditions.OnLeaderboardAnyFetchPlayer);
                })
                .catch((err) => {
                    console.warn(err);
                    this.lastLeaderboardPlayerRatingTag = tag;
                    this.Trigger(this.conditions.OnLeaderboardFetchPlayerError);
                    this.Trigger(this.conditions.OnLeaderboardAnyFetchPlayerError);
                });
        },

        AchievementsOpen() {
            return this.gs.achievements.open().catch(console.warn);
        },

        AchievementsFetch() {
            return this.gs.achievements
                .fetch()
                .then((result) => {
                    this.achievements = result.achievements;
                    this.achievementsGroups = result.achievementsGroups;
                    this.playerAchievements = result.playerAchievements;
                    this.Trigger(this.conditions.OnAchievementsFetch);
                })
                .catch((err) => {
                    console.warn(err);
                    this.Trigger(this.conditions.OnAchievementsFetchError);
                });
        },

        AchievementsUnlock(idOrTag) {
            const id = parseInt(idOrTag, 10) || 0;
            const query = id > 0 ? { id } : { tag: idOrTag };
            return this.gs.achievements
                .unlock(query)
                .then((result) => {
                    this.isUnlockAchievementSuccess = result.success;
                    this.unlockAchievementError = result.error || '';

                    const achievement = result.achievement || {};
                    this.unlockedAchievementId = achievement.id || 0;
                    this.unlockedAchievementTag = achievement.tag || '';
                    this.unlockedAchievementName = achievement.name || '';
                    this.unlockedAchievementDescription = achievement.description || '';
                    this.unlockedAchievementIcon = achievement.icon || '';
                    this.unlockedAchievementIconSmall = achievement.iconSmall || '';
                    this.unlockedAchievementRare = achievement.rare || 'COMMON';

                    if (result.success) {
                        this.Trigger(this.conditions.OnAchievementsUnlock);
                        this.Trigger(this.conditions.OnAchievementsAnyUnlock);
                        return;
                    }

                    this.Trigger(this.conditions.OnAchievementsAnyUnlockError);
                })
                .catch((err) => {
                    console.warn(err);
                    this.Trigger(this.conditions.OnAchievementsAnyUnlockError);
                });
        },

        FullscreenOpen() {
            return this.gs.fullscreen.open();
        },

        FullscreenClose() {
            return this.gs.fullscreen.close();
        },

        FullscreenToggle() {
            return this.gs.fullscreen.toggle();
        },

        AdsShowFullscreen() {
            return this.gs.ads.showFullscreen();
        },

        AdsShowRewarded() {
            return this.gs.ads.showRewardedVideo();
        },

        AdsShowPreloader() {
            return this.gs.ads.showPreloader();
        },

        AdsShowSticky() {
            return this.gs.ads.showSticky();
        },

        AdsCloseSticky() {
            return this.gs.ads.closeSticky();
        },

        AdsRefreshSticky() {
            return this.gs.ads.refreshSticky();
        },

        AnalyticsHit(url) {
            return this.gs.analytics.hit(url);
        },

        AnalyticsGoal(event, value) {
            return this.gs.analytics.goal(event, value);
        },

        SocialsShare(text, url, image) {
            return this.gs.socials.share({ text, url, image });
        },

        SocialsPost(text, url, image) {
            return this.gs.socials.post({ text, url, image });
        },

        SocialsInvite(text, url, image) {
            return this.gs.socials.invite({ text, url, image });
        },

        ChangeLanguage(language) {
            return this.gs.changeLanguage(this.mappers.language[language]);
        },

        ChangeLanguageByCode(language = '') {
            return this.gs.changeLanguage(language.toLowerCase());
        },

        ChangeAvatarGenerator(generator) {
            return this.gs.changeAvatarGenerator(this.mappers.avatarGenerator[generator]);
        },

        LoadOverlay() {
            return this.gs.loadOverlay();
        },

        LoadFromJSON(data) {
            try {
                const parsed = JSON.parse(data);
                if (!('isReady' in parsed)) {
                    throw new Error('Data was corrupted');
                }

                this.LoadFromJson(parsed);
            } catch (error) {
                this.Trigger(this.conditions.OnLoadJsonError);
            }
        }
    };
}

}

{
'use strict';
{
    C3.Plugins.Eponesh_GameScore.Exps = {
        PlayerID() {
            return this.gs.player.id;
        },

        PlayerScore() {
            return this.gs.player.score;
        },

        PlayerName() {
            return this.gs.player.name;
        },

        PlayerAvatar() {
            return this.gs.player.avatar;
        },

        PlayerGet(key) {
            return this.gs.player.get(key);
        },

        PlayerHas(key) {
            return this.gs.player.is(key);
        },

        PlayerFieldName(key) {
            return this.gs.player.getFieldName(key);
        },

        PlayerFieldVariantName(key, value) {
            return this.gs.player.getFieldVariantName(key, value);
        },

        PlayerGetFieldVariantAt(key, index) {
            const variant = this.gs.player.getField(key).variants[index];
            return variant ? variant.value : '';
        },

        PlayerGetFieldVariantIndex(key, value) {
            return this.gs.player.getField(key).variants.findIndex((v) => v.value === value);
        },

        PlayerCurFieldKey() {
            return this.currentPlayerFieldKey || '';
        },

        PlayerCurFieldType() {
            return this.currentPlayerFieldType || '';
        },

        PlayerCurFieldName() {
            return this.currentPlayerFieldName || '';
        },

        PlayerCurFieldValue() {
            return typeof this.currentPlayerFieldValue === 'string'
                ? this.currentPlayerFieldValue
                : Number(this.currentPlayerFieldValue || 0);
        },

        PlayerCurFieldVariantValue() {
            return typeof this.currentPlayerFieldVariantValue === 'string'
                ? this.currentPlayerFieldVariantValue
                : Number(this.currentPlayerFieldVariantValue || 0);
        },

        PlayerCurFieldVariantName() {
            return this.currentPlayerFieldVariantName || '';
        },

        PlayerCurFieldVariantIndex() {
            return this.currentPlayerFieldVariantIndex || 0;
        },

        LeaderboardCurPlayerName() {
            return this.currentLeaderboardPlayer.name || '';
        },

        LeaderboardCurPlayerAvatar() {
            return this.currentLeaderboardPlayer.avatar || '';
        },

        LeaderboardCurPlayerID() {
            return this.currentLeaderboardPlayer.id || 0;
        },

        LeaderboardCurPlayerScore() {
            return this.currentLeaderboardPlayer.score || 0;
        },

        LeaderboardCurPlayerPosition() {
            return this.currentLeaderboardPlayer.position || 0;
        },

        LeaderboardCurPlayerIndex() {
            return this.currentLeaderboardIndex || 0;
        },

        LeaderboardCurPlayerField(key) {
            return key in this.currentLeaderboardPlayer ? this.currentLeaderboardPlayer[key] : 0;
        },

        LeaderboardPlayerFieldAt(index, key) {
            const player = this.leaderboard[index];
            return player && key in player ? player[key] : 0;
        },

        LeaderboardPlayerPosition() {
            return this.leaderboardPlayerPosition || 0;
        },

        IsFullscreenMode() {
            return Number(this.gs.fullscreen.isEnabled);
        },

        Language() {
            return this.gs.language;
        },

        AvatarGenerator() {
            return this.gs.avatarGenerator;
        },

        PlatformType() {
            return this.gs.platform.type;
        },

        AppTitle() {
            return this.gs.app.title;
        },

        AppDescription() {
            return this.gs.app.description;
        },

        AppImage() {
            return this.gs.app.image;
        },

        AppUrl() {
            return this.gs.app.url;
        },

        AchievementsTotalAchievements() {
            return this.achievements.length;
        },

        AchievementsTotalAchievementsGroups() {
            return this.achievementsGroups.length;
        },

        AchievementsTotalPlayerAchievements() {
            return this.playerAchievements.length;
        },

        AchievementsCurAchievementIndex() {
            return this.currentAchievementIndex;
        },

        AchievementsCurAchievementID() {
            return this.currentAchievementId;
        },

        AchievementsCurAchievementTag() {
            return this.currentAchievementTag;
        },

        AchievementsCurAchievementName() {
            return this.currentAchievementName;
        },

        AchievementsCurAchievementDescription() {
            return this.currentAchievementDescription;
        },

        AchievementsCurAchievementIcon() {
            return this.currentAchievementIcon;
        },

        AchievementsCurAchievementIconSmall() {
            return this.currentAchievementIconSmall;
        },

        AchievementsCurAchievementRare() {
            return this.currentAchievementRare;
        },

        AchievementsCurAchievementUnlocked() {
            return this.currentAchievementUnlocked;
        },

        AchievementsCurAchievementsGroupIndex() {
            return this.currentAchievementsGroupIndex;
        },

        AchievementsCurAchievementsGroupID() {
            return this.currentAchievementsGroupID;
        },

        AchievementsCurAchievementsGroupTag() {
            return this.currentAchievementsGroupTag;
        },

        AchievementsCurAchievementsGroupName() {
            return this.currentAchievementsGroupName;
        },

        AchievementsCurAchievementsGroupDescription() {
            return this.currentAchievementsGroupDescription;
        },

        AchievementsCurPlayerAchievementIndex() {
            return this.currentPlayerAchievementIndex;
        },

        AchievementsCurPlayerAchievementID() {
            return this.currentPlayerAchievementId;
        },

        AchievementsCurPlayerAchievementUnlockDate() {
            return this.currentPlayerAchievementUnlockDate;
        },

        AchievementsUnlockedAchievementSuccess() {
            return this.isUnlockAchievementSuccess;
        },

        AchievementsUnlockedAchievementError() {
            return this.unlockAchievementError;
        },

        AchievementsUnlockedAchievementID() {
            return this.unlockedAchievementID;
        },

        AchievementsUnlockedAchievementTag() {
            return this.unlockedAchievementTag;
        },

        AchievementsUnlockedAchievementName() {
            return this.unlockedAchievementName;
        },

        AchievementsUnlockedAchievementDescription() {
            return this.unlockedAchievementDescription;
        },

        AchievementsUnlockedAchievementIcon() {
            return this.unlockedAchievementIcon;
        },

        AchievementsUnlockedAchievementIconSmall() {
            return this.unlockedAchievementIconSmall;
        },

        AchievementsUnlockedAchievementRare() {
            return this.unlockedAchievementRare;
        },

        AsJSON() {
            return JSON.stringify(this.SaveToJson());
        }
    };
}

}

{
'use strict';const C3=self.C3;C3.Behaviors.Pin=class PinBehavior extends C3.SDKBehaviorBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Pin.Type=class PinType extends C3.SDKBehaviorTypeBase{constructor(behaviorType){super(behaviorType)}Release(){super.Release()}OnCreate(){}};

}

{
'use strict';const C3=self.C3;
C3.Behaviors.Pin.Instance=class PinInstance extends C3.SDKBehaviorInstanceBase{constructor(behInst,properties){super(behInst);this._pinInst=null;this._pinUid=-1;this._mode="";this._propSet=new Set;this._pinDist=0;this._pinAngle=0;this._pinImagePoint=0;this._dx=0;this._dy=0;this._dWidth=0;this._dHeight=0;this._dAngle=0;this._dz=0;this._lastKnownAngle=0;this._destroy=false;if(properties)this._destroy=properties[0];const rt=this._runtime.Dispatcher();this._disposables=new C3.CompositeDisposable(C3.Disposable.From(rt,"instancedestroy",
e=>this._OnInstanceDestroyed(e.instance)),C3.Disposable.From(rt,"afterload",e=>this._OnAfterLoad()))}Release(){this._pinInst=null;super.Release()}_SetPinInst(inst){if(inst){this._pinInst=inst;this._StartTicking2()}else{this._pinInst=null;this._StopTicking2()}}_Pin(objectClass,mode,propList){if(!objectClass)return;const otherInst=objectClass.GetFirstPicked(this._inst);if(!otherInst)return;this._mode=mode;this._SetPinInst(otherInst);const myWi=this._inst.GetWorldInfo();const otherWi=otherInst.GetWorldInfo();
if(this._mode==="properties"){const propSet=this._propSet;propSet.clear();for(const p of propList)propSet.add(p);this._dx=myWi.GetX()-otherWi.GetX();this._dy=myWi.GetY()-otherWi.GetY();this._dAngle=myWi.GetAngle()-otherWi.GetAngle();this._lastKnownAngle=myWi.GetAngle();this._dz=myWi.GetZElevation()-otherWi.GetZElevation();if(propSet.has("x")&&propSet.has("y")){this._pinAngle=C3.angleTo(otherWi.GetX(),otherWi.GetY(),myWi.GetX(),myWi.GetY())-otherWi.GetAngle();this._pinDist=C3.distanceTo(otherWi.GetX(),
otherWi.GetY(),myWi.GetX(),myWi.GetY())}if(propSet.has("width-abs"))this._dWidth=myWi.GetWidth()-otherWi.GetWidth();else if(propSet.has("width-scale"))this._dWidth=myWi.GetWidth()/otherWi.GetWidth();if(propSet.has("height-abs"))this._dHeight=myWi.GetHeight()-otherWi.GetHeight();else if(propSet.has("height-scale"))this._dHeight=myWi.GetHeight()/otherWi.GetHeight()}else this._pinDist=C3.distanceTo(otherWi.GetX(),otherWi.GetY(),myWi.GetX(),myWi.GetY())}SaveToJson(){const propSet=this._propSet;const mode=
this._mode;const ret={"uid":this._pinInst?this._pinInst.GetUID():-1,"m":mode};if(mode==="rope"||mode==="bar")ret["pd"]=this._pinDist;else if(mode==="properties"){ret["ps"]=[...this._propSet];if(propSet.has("imagepoint"))ret["ip"]=this._pinImagePoint;else if(propSet.has("x")&&propSet.has("y")){ret["pa"]=this._pinAngle;ret["pd"]=this._pinDist}else{if(propSet.has("x"))ret["dx"]=this._dx;if(propSet.has("y"))ret["dy"]=this._dy}if(propSet.has("angle")){ret["da"]=this._dAngle;ret["lka"]=this._lastKnownAngle}if(propSet.has("width-abs")||
propSet.has("width-scale"))ret["dw"]=this._dWidth;if(propSet.has("height-abs")||propSet.has("height-scale"))ret["dh"]=this._dHeight;if(propSet.has("z"))ret["dz"]=this._dz}return ret}LoadFromJson(o){const mode=o["m"];const propSet=this._propSet;propSet.clear();this._pinUid=o["uid"];if(typeof mode==="number"){this._LoadFromJson_Legacy(o);return}this._mode=mode;if(mode==="rope"||mode==="bar")this._pinDist=o["pd"];else if(mode==="properties"){for(const p of o["ps"])propSet.add(p);if(propSet.has("imagepoint"))this._pinImagePoint=
o["ip"];else if(propSet.has("x")&&propSet.has("y")){this._pinAngle=o["pa"];this._pinDist=o["pd"]}else{if(propSet.has("x"))this._dx=o["dx"];if(propSet.has("y"))this._dy=o["dy"]}if(propSet.has("angle")){this._dAngle=o["da"];this._lastKnownAngle=o["lka"]||0}if(propSet.has("width-abs")||propSet.has("width-scale"))this._dWidth=o["dw"];if(propSet.has("height-abs")||propSet.has("height-scale"))this._dHeight=o["dh"];if(propSet.has("z"))this._dz=o["dz"]}}_LoadFromJson_Legacy(o){const propSet=this._propSet;
const myStartAngle=o["msa"];const theirStartAngle=o["tsa"];const pinAngle=o["pa"];const pinDist=o["pd"];const mode=o["m"];switch(mode){case 0:this._mode="properties";propSet.add("x").add("y").add("angle");this._pinAngle=pinAngle;this._pinDist=pinDist;this._dAngle=myStartAngle-theirStartAngle;this._lastKnownAngle=o["lka"];break;case 1:this._mode="properties";propSet.add("x").add("y");this._pinAngle=pinAngle;this._pinDist=pinDist;break;case 2:this._mode="properties";propSet.add("angle");this._dAngle=
myStartAngle-theirStartAngle;this._lastKnownAngle=o["lka"];break;case 3:this._mode="rope";this._pinDist=o["pd"];break;case 4:this._mode="bar";this._pinDist=o["pd"];break}}_OnAfterLoad(){if(this._pinUid===-1)this._SetPinInst(null);else{this._SetPinInst(this._runtime.GetInstanceByUID(this._pinUid));this._pinUid=-1}}_OnInstanceDestroyed(inst){if(this._pinInst===inst){this._SetPinInst(null);if(this._destroy)this._runtime.DestroyInstance(this._inst)}}Tick2(){const pinInst=this._pinInst;if(!pinInst)return;
const pinWi=pinInst.GetWorldInfo();const myInst=this._inst;const myWi=myInst.GetWorldInfo();const mode=this._mode;let bboxChanged=false;if(mode==="rope"||mode==="bar"){const dist=C3.distanceTo(myWi.GetX(),myWi.GetY(),pinWi.GetX(),pinWi.GetY());if(dist>this._pinDist||mode==="bar"&&dist<this._pinDist){const a=C3.angleTo(pinWi.GetX(),pinWi.GetY(),myWi.GetX(),myWi.GetY());myWi.SetXY(pinWi.GetX()+Math.cos(a)*this._pinDist,pinWi.GetY()+Math.sin(a)*this._pinDist);bboxChanged=true}}else{const propSet=this._propSet;
let v=0;if(propSet.has("imagepoint")){const [newX,newY]=pinInst.GetImagePoint(this._pinImagePoint);if(!myWi.EqualsXY(newX,newY)){myWi.SetXY(newX,newY);bboxChanged=true}}else if(propSet.has("x")&&propSet.has("y")){const newX=pinWi.GetX()+Math.cos(pinWi.GetAngle()+this._pinAngle)*this._pinDist;const newY=pinWi.GetY()+Math.sin(pinWi.GetAngle()+this._pinAngle)*this._pinDist;if(!myWi.EqualsXY(newX,newY)){myWi.SetXY(newX,newY);bboxChanged=true}}else{v=pinWi.GetX()+this._dx;if(propSet.has("x")&&v!==myWi.GetX()){myWi.SetX(v);
bboxChanged=true}v=pinWi.GetY()+this._dy;if(propSet.has("y")&&v!==myWi.GetY()){myWi.SetY(v);bboxChanged=true}}if(propSet.has("angle")){if(this._lastKnownAngle!==myWi.GetAngle())this._dAngle=C3.clampAngle(this._dAngle+(myWi.GetAngle()-this._lastKnownAngle));v=C3.clampAngle(pinWi.GetAngle()+this._dAngle);if(v!==myWi.GetAngle()){myWi.SetAngle(v);bboxChanged=true}this._lastKnownAngle=myWi.GetAngle()}if(propSet.has("width-abs")){v=pinWi.GetWidth()+this._dWidth;if(v!==myWi.GetWidth()){myWi.SetWidth(v);
bboxChanged=true}}if(propSet.has("width-scale")){v=pinWi.GetWidth()*this._dWidth;if(v!==myWi.GetWidth()){myWi.SetWidth(v);bboxChanged=true}}if(propSet.has("height-abs")){v=pinWi.GetHeight()+this._dHeight;if(v!==myWi.GetHeight()){myWi.SetHeight(v);bboxChanged=true}}if(propSet.has("height-scale")){v=pinWi.GetHeight()*this._dHeight;if(v!==myWi.GetHeight()){myWi.SetHeight(v);bboxChanged=true}}if(propSet.has("z")){v=pinWi.GetZElevation()+this._dz;if(v!==myWi.GetZElevation()){myWi.SetZElevation(v);this._runtime.UpdateRender()}}}if(bboxChanged)myWi.SetBboxChanged()}GetDebuggerProperties(){const prefix=
"behaviors.pin.debugger";return[{title:"$"+this.GetBehaviorType().GetName(),properties:[{name:prefix+".is-pinned",value:!!this._pinInst},{name:prefix+".pinned-uid",value:this._pinInst?this._pinInst.GetUID():0}]}]}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Pin.Cnds={IsPinned(){return!!this._pinInst},WillDestroy(){return this._destroy}};

}

{
'use strict';const C3=self.C3;
C3.Behaviors.Pin.Acts={PinByDistance(objectClass,mode){this._Pin(objectClass,mode===0?"rope":"bar")},PinByProperties(objectClass,ex,ey,ea,ew,eh,ez){const propList=[];if(ex)propList.push("x");if(ey)propList.push("y");if(ea)propList.push("angle");if(ez)propList.push("z");if(ew===1)propList.push("width-abs");else if(ew===2)propList.push("width-scale");if(eh===1)propList.push("height-abs");else if(eh===2)propList.push("height-scale");if(propList.length===0)return;this._Pin(objectClass,"properties",propList)},
PinByImagePoint(objectClass,imgPt,ea,ew,eh,ez){const propList=["imagepoint"];if(ea)propList.push("angle");if(ez)propList.push("z");if(ew===1)propList.push("width-abs");else if(ew===2)propList.push("width-scale");if(eh===1)propList.push("height-abs");else if(eh===2)propList.push("height-scale");this._pinImagePoint=imgPt;this._Pin(objectClass,"properties",propList)},SetPinDistance(d){if(this._mode==="rope"||this._mode==="bar")this._pinDist=Math.max(d,0)},SetDestroy(d){this._destroy=d},Unpin(){this._SetPinInst(null);
this._mode="";this._propSet.clear();this._pinImagePoint=""},Pin(objectClass,mode){switch(mode){case 0:this._Pin(objectClass,"properties",["x","y","angle"]);break;case 1:this._Pin(objectClass,"properties",["x","y"]);break;case 2:this._Pin(objectClass,"properties",["angle"]);break;case 3:this._Pin(objectClass,"rope");break;case 4:this._Pin(objectClass,"bar");break}}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Pin.Exps={PinnedUID(){return this._pinInst?this._pinInst.GetUID():-1}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Bullet=class BulletBehavior extends C3.SDKBehaviorBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Bullet.Type=class BulletType extends C3.SDKBehaviorTypeBase{constructor(behaviorType){super(behaviorType)}Release(){super.Release()}OnCreate(){}};

}

{
'use strict';const C3=self.C3;const C3X=self.C3X;const IBehaviorInstance=self.IBehaviorInstance;const SPEED=0;const ACCELERATION=1;const GRAVITY=2;const BOUNCE_OFF_SOLIDS=3;const SET_ANGLE=4;const STEPPING=5;const ENABLE=6;
C3.Behaviors.Bullet.Instance=class BulletInstance extends C3.SDKBehaviorInstanceBase{constructor(behInst,properties){super(behInst);const wi=this.GetWorldInfo();this._speed=0;this._acc=0;this._g=0;this._bounceOffSolid=false;this._setAngle=false;this._isStepping=false;this._isEnabled=true;this._dx=0;this._dy=0;this._lastX=wi.GetX();this._lastY=wi.GetY();this._lastKnownAngle=wi.GetAngle();this._travelled=0;this._stepSize=Math.min(Math.abs(wi.GetWidth()),Math.abs(wi.GetHeight())/2);this._stopStepping=
false;if(properties){this._speed=properties[SPEED];this._acc=properties[ACCELERATION];this._g=properties[GRAVITY];this._bounceOffSolid=!!properties[BOUNCE_OFF_SOLIDS];this._setAngle=!!properties[SET_ANGLE];this._isStepping=!!properties[STEPPING];this._isEnabled=!!properties[ENABLE]}const a=wi.GetAngle();this._dx=Math.cos(a)*this._speed;this._dy=Math.sin(a)*this._speed;if(this._isEnabled){this._StartTicking();if(this._bounceOffSolid)this._StartPostTicking()}}Release(){super.Release()}SaveToJson(){const o=
{"dx":this._dx,"dy":this._dy,"lx":this._lastX,"ly":this._lastY,"lka":this._lastKnownAngle,"t":this._travelled};if(this._acc!==0)o["acc"]=this._acc;if(this._g!==0)o["g"]=this._g;if(this._isStepping)o["st"]=this._isStepping;if(!this._isEnabled)o["e"]=this._isEnabled;if(this._bounceOffSolid)o["bos"]=this._bounceOffSolid;if(this._setAngle)o["sa"]=this._setAngle;return o}LoadFromJson(o){this._dx=o["dx"];this._dy=o["dy"];this._lastX=o["lx"];this._lastY=o["ly"];this._lastKnownAngle=o["lka"];this._travelled=
o["t"];this._acc=o.hasOwnProperty("acc")?o["acc"]:0;this._g=o.hasOwnProperty("g")?o["g"]:0;this._isStepping=o.hasOwnProperty("st")?o["st"]:false;this._bounceOffSolid=o.hasOwnProperty("bos")?o["bos"]:false;this._setAngle=o.hasOwnProperty("sa")?o["sa"]:false;this._SetEnabled(o.hasOwnProperty("e")?o["e"]:true)}Tick(){if(!this._isEnabled)return;const dt=this._runtime.GetDt(this._inst);const wi=this._inst.GetWorldInfo();if(wi.GetAngle()!==this._lastKnownAngle){const angle=wi.GetAngle();if(this._setAngle){const s=
C3.distanceTo(0,0,this._dx,this._dy);this._dx=Math.cos(angle)*s;this._dy=Math.sin(angle)*s}this._lastKnownAngle=angle}let xacc=0;let yacc=0;if(this._acc!==0){let s=C3.distanceTo(0,0,this._dx,this._dy);let a=0;if(this._dx===0&&this._dy===0)a=wi.GetAngle();else a=C3.angleTo(0,0,this._dx,this._dy);s+=this._acc*dt;xacc=Math.cos(a)*this._acc;yacc=Math.sin(a)*this._acc;if(s<0){s=0;xacc=0;yacc=0}this._dx=Math.cos(a)*s;this._dy=Math.sin(a)*s}if(this._g!==0){this._dy+=this._g*dt;yacc+=this._g}this._lastX=
wi.GetX();this._lastY=wi.GetY();if(this._dx!==0||this._dy!==0){const mx=this._dx*dt+.5*xacc*dt*dt;const my=this._dy*dt+.5*yacc*dt*dt;const stepDist=C3.distanceTo(0,0,mx,my);this._MoveBy(mx,my,stepDist);this._travelled+=stepDist;if(this._setAngle&&(mx!==0||my!==0)){const a=C3.angleTo(0,0,mx,my);wi.SetAngle(a);this._lastKnownAngle=wi.GetAngle()}wi.SetBboxChanged()}}_MoveBy(mx,my,stepDist){const wi=this.GetWorldInfo();if(!this._isStepping||stepDist<=this._stepSize){wi.OffsetXY(mx,my);wi.SetBboxChanged();
if(this._isStepping)this.Trigger(C3.Behaviors.Bullet.Cnds.OnStep);return}this._stopStepping=false;const startX=wi.GetX();const startY=wi.GetY();const endX=startX+mx;const endY=startY+my;const a=C3.angleTo(0,0,mx,my);const stepX=Math.cos(a)*this._stepSize;const stepY=Math.sin(a)*this._stepSize;const stepCount=Math.floor(stepDist/this._stepSize);for(let i=1;i<=stepCount;++i){wi.SetXY(startX+stepX*i,startY+stepY*i);wi.SetBboxChanged();this.Trigger(C3.Behaviors.Bullet.Cnds.OnStep);if(this._inst.IsDestroyed()||
this._stopStepping)return}wi.SetXY(endX,endY);wi.SetBboxChanged();this.Trigger(C3.Behaviors.Bullet.Cnds.OnStep)}PostTick(){if(!this._isEnabled||!this._bounceOffSolid||this._dx===0&&this._dy===0)return;const dt=this._runtime.GetDt(this._inst);const wi=this._inst.GetWorldInfo();const collisionEngine=this._runtime.GetCollisionEngine();const bounceSolid=collisionEngine.TestOverlapSolid(this._inst);if(bounceSolid){collisionEngine.RegisterCollision(this._inst,bounceSolid);const s=C3.distanceTo(0,0,this._dx,
this._dy);const bounceAngle=collisionEngine.CalculateBounceAngle(this._inst,this._lastX,this._lastY);this._dx=Math.cos(bounceAngle)*s;this._dy=Math.sin(bounceAngle)*s;wi.OffsetXY(this._dx*dt,this._dy*dt);wi.SetBboxChanged();if(this._setAngle){wi.SetAngle(bounceAngle);this._lastKnownAngle=wi.GetAngle();wi.SetBboxChanged()}if(!collisionEngine.PushOutSolid(this._inst,this._dx/s,this._dy/s,Math.max(s*2.5*dt,30)))collisionEngine.PushOutSolidNearest(this._inst,100)}}GetPropertyValueByIndex(index){switch(index){case SPEED:return this._GetSpeed();
case ACCELERATION:return this._GetAcceleration();case GRAVITY:return this._GetGravity();case SET_ANGLE:return this._setAngle;case STEPPING:return this._isStepping;case ENABLE:return this._IsEnabled()}}SetPropertyValueByIndex(index,value){switch(index){case SPEED:this._SetSpeed(value);break;case ACCELERATION:this._acc=value;break;case GRAVITY:this._g=value;break;case SET_ANGLE:this._setAngle=!!value;break;case STEPPING:this._isStepping=!!value;break;case ENABLE:this._SetEnabled(!!value);break}}_SetSpeed(s){const a=
C3.angleTo(0,0,this._dx,this._dy);this._dx=Math.cos(a)*s;this._dy=Math.sin(a)*s}_GetSpeed(){return C3.round6dp(C3.distanceTo(0,0,this._dx,this._dy))}_SetAcceleration(a){this._acc=a}_GetAcceleration(){return this._acc}_SetGravity(g){this._g=g}_GetGravity(){return this._g}_SetAngleOfMotion(a){const s=C3.distanceTo(0,0,this._dx,this._dy);this._dx=Math.cos(a)*s;this._dy=Math.sin(a)*s}_GetAngleOfMotion(){return C3.angleTo(0,0,this._dx,this._dy)}_SetBounceOffSolids(b){b=!!b;if(this._bounceOffSolid===b)return;
this._bounceOffSolid=b;if(this._isEnabled)if(this._bounceOffSolid)this._StartPostTicking();else this._StopPostTicking()}_IsBounceOffSolids(){return this._bounceOffSolid}_SetDistanceTravelled(d){this._travelled=d}_GetDistanceTravelled(){return this._travelled}_SetEnabled(e){this._isEnabled=!!e;if(this._isEnabled){this._StartTicking();if(this._bounceOffSolid)this._StartPostTicking()}else{this._StopTicking();this._StopPostTicking()}}_IsEnabled(){return this._isEnabled}GetDebuggerProperties(){const prefix=
"behaviors.bullet";return[{title:"$"+this.GetBehaviorType().GetName(),properties:[{name:prefix+".debugger.vector-x",value:this._dx,onedit:v=>this._dx=v},{name:prefix+".debugger.vector-y",value:this._dy,onedit:v=>this._dy=v},{name:prefix+".properties.speed.name",value:this._GetSpeed(),onedit:v=>this._SetSpeed(v)},{name:prefix+".debugger.angle-of-motion",value:C3.toDegrees(this._GetAngleOfMotion())},{name:prefix+".properties.gravity.name",value:this._GetGravity(),onedit:v=>this._SetGravity(v)},{name:prefix+
".properties.acceleration.name",value:this._GetAcceleration(),onedit:v=>this._SetAcceleration(v)},{name:prefix+".debugger.distance-travelled",value:this._GetDistanceTravelled()},{name:prefix+".properties.enabled.name",value:this._IsEnabled(),onedit:v=>this._SetEnabled(v)}]}]}GetScriptInterfaceClass(){return self.IBulletBehaviorInstance}};const map=new WeakMap;
self.IBulletBehaviorInstance=class IBulletBehaviorInstance extends IBehaviorInstance{constructor(){super();map.set(this,IBehaviorInstance._GetInitInst().GetSdkInstance())}get speed(){return map.get(this)._GetSpeed()}set speed(s){C3X.RequireFiniteNumber(s);map.get(this)._SetSpeed(s)}get acceleration(){return map.get(this)._GetAcceleration()}set acceleration(a){C3X.RequireFiniteNumber(a);map.get(this)._SetAcceleration(a)}get gravity(){return map.get(this)._GetGravity()}set gravity(g){C3X.RequireFiniteNumber(g);
map.get(this)._SetGravity(g)}get angleOfMotion(){return map.get(this)._GetAngleOfMotion()}set angleOfMotion(a){C3X.RequireFiniteNumber(a);map.get(this)._SetAngleOfMotion(a)}get bounceOffSolids(){return map.get(this)._IsBounceOffSolids()}set bounceOffSolids(b){map.get(this)._SetBounceOffSolids(!!b)}get distanceTravelled(){return map.get(this)._GetDistanceTravelled()}set distanceTravelled(d){C3X.RequireFiniteNumber(d);map.get(this)._SetDistanceTravelled(d)}get isEnabled(){return map.get(this)._IsEnabled()}set isEnabled(e){map.get(this)._SetEnabled(e)}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Bullet.Cnds={CompareSpeed(cmp,s){const speed=Math.sqrt(this._dx*this._dx+this._dy*this._dy);return C3.compare(speed,cmp,s)},CompareTravelled(cmp,d){return C3.compare(this._GetDistanceTravelled(),cmp,d)},OnStep(){return true},IsEnabled(){return this._IsEnabled()}};

}

{
'use strict';const C3=self.C3;
C3.Behaviors.Bullet.Acts={SetSpeed(s){this._SetSpeed(s)},SetAcceleration(a){this._SetAcceleration(a)},SetGravity(g){this._SetGravity(g)},SetAngleOfMotion(a){this._SetAngleOfMotion(C3.toRadians(a))},Bounce(objectClass){if(!objectClass)return;const otherInst=objectClass.GetFirstPicked(this._inst);if(!otherInst)return;const wi=this._inst.GetWorldInfo();const collisionEngine=this._runtime.GetCollisionEngine();const dt=this._runtime.GetDt(this._inst);const s=C3.distanceTo(0,0,this._dx,this._dy);const bounceAngle=
collisionEngine.CalculateBounceAngle(this._inst,this._lastX,this._lastY,otherInst);this._dx=Math.cos(bounceAngle)*s;this._dy=Math.sin(bounceAngle)*s;wi.OffsetXY(this._dx*dt,this._dy*dt);wi.SetBboxChanged();if(this._setAngle){wi.SetAngle(bounceAngle);this._lastKnownAngle=wi.GetAngle();wi.SetBboxChanged()}if(s!==0)if(this._bounceOffSolid){if(!collisionEngine.PushOutSolid(this._inst,this._dx/s,this._dy/s,Math.max(s*2.5*dt,30)))collisionEngine.PushOutSolidNearest(this._inst,100)}else collisionEngine.PushOut(this._inst,
this._dx/s,this._dy/s,Math.max(s*2.5*dt,30),otherInst)},SetBounceOffSolids(b){this._SetBounceOffSolids(b)},SetDistanceTravelled(d){this._SetDistanceTravelled(d)},SetEnabled(e){this._SetEnabled(e)},StopStepping(){this._stopStepping=true}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Bullet.Exps={Speed(){return this._GetSpeed()},Acceleration(){return this._GetAcceleration()},AngleOfMotion(){return C3.toDegrees(this._GetAngleOfMotion())},DistanceTravelled(){return this._GetDistanceTravelled()},Gravity(){return this._GetGravity()}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Timer=class TimerBehavior extends C3.SDKBehaviorBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Timer.Type=class TimerType extends C3.SDKBehaviorTypeBase{constructor(behaviorType){super(behaviorType)}Release(){super.Release()}OnCreate(){}};

}

{
'use strict';const C3=self.C3;
C3.Behaviors.Timer.SingleTimer=class SingleTimer{constructor(current,total,duration,isRegular){this._current=C3.New(C3.KahanSum);this._current.Set(current||0);this._total=C3.New(C3.KahanSum);this._total.Set(total||0);this._duration=duration||0;this._isRegular=!!isRegular;this._isPaused=false}GetCurrentTime(){return this._current.Get()}GetTotalTime(){return this._total.Get()}GetDuration(){return this._duration}SetPaused(p){this._isPaused=!!p}IsPaused(){return this._isPaused}Add(t){this._current.Add(t);this._total.Add(t)}HasFinished(){return this._current.Get()>=
this._duration}Update(){if(this.HasFinished())if(this._isRegular)this._current.Subtract(this._duration);else return true;return false}SaveToJson(){return{"c":this._current.Get(),"t":this._total.Get(),"d":this._duration,"r":this._isRegular,"p":this._isPaused}}LoadFromJson(o){this._current.Set(o["c"]);this._total.Set(o["t"]);this._duration=o["d"];this._isRegular=!!o["r"];this._isPaused=!!o["p"]}};
C3.Behaviors.Timer.Instance=class TimerInstance extends C3.SDKBehaviorInstanceBase{constructor(behInst,properties){super(behInst);this._timers=new Map}Release(){this._timers.clear();super.Release()}_UpdateTickState(){if(this._timers.size>0){this._StartTicking();this._StartTicking2()}else{this._StopTicking();this._StopTicking2()}}SaveToJson(){const ret={};for(const [name,timer]of this._timers.entries())ret[name]=timer.SaveToJson();return ret}LoadFromJson(o){this._timers.clear();for(const [name,data]of Object.entries(o)){const timer=
new C3.Behaviors.Timer.SingleTimer;timer.LoadFromJson(data);this._timers.set(name,timer)}this._UpdateTickState()}Tick(){const dt=this._runtime.GetDt(this._inst);for(const timer of this._timers.values())if(!timer.IsPaused())timer.Add(dt)}Tick2(){for(const [name,timer]of this._timers.entries()){const shouldDelete=timer.Update();if(shouldDelete)this._timers.delete(name)}}GetDebuggerProperties(){return[{title:"behaviors.timer.debugger.timers",properties:[...this._timers.entries()].map(entry=>({name:"$"+
entry[0],value:`${Math.round(entry[1].GetCurrentTime()*10)/10} / ${Math.round(entry[1].GetDuration()*10)/10}`}))}]}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Timer.Cnds={OnTimer(name){const timer=this._timers.get(name.toLowerCase());if(!timer)return false;return timer.HasFinished()},IsTimerRunning(name){return this._timers.has(name.toLowerCase())},IsTimerPaused(name){const timer=this._timers.get(name.toLowerCase());return timer&&timer.IsPaused()}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Timer.Acts={StartTimer(duration,type,name){const timer=new C3.Behaviors.Timer.SingleTimer(0,0,duration,type===1);this._timers.set(name.toLowerCase(),timer);this._UpdateTickState()},StopTimer(name){this._timers.delete(name.toLowerCase());this._UpdateTickState()},PauseResumeTimer(name,state){const timer=this._timers.get(name.toLowerCase());if(timer)timer.SetPaused(state===0)}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Timer.Exps={CurrentTime(name){const timer=this._timers.get(name.toLowerCase());if(!timer)return 0;return timer.GetCurrentTime()},TotalTime(name){const timer=this._timers.get(name.toLowerCase());if(!timer)return 0;return timer.GetTotalTime()},Duration(name){const timer=this._timers.get(name.toLowerCase());if(!timer)return 0;return timer.GetDuration()}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Rotate=class RotateBehavior extends C3.SDKBehaviorBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Rotate.Type=class RotateType extends C3.SDKBehaviorTypeBase{constructor(objectClass){super(objectClass)}Release(){super.Release()}OnCreate(){}};

}

{
'use strict';const C3=self.C3;const SPEED=0;const ACCELERATION=1;const ENABLE=2;
C3.Behaviors.Rotate.Instance=class RotateInstance extends C3.SDKBehaviorInstanceBase{constructor(inst,properties){super(inst);this._speed=0;this._acceleration=0;this._isEnabled=true;if(properties){this._speed=C3.toRadians(properties[SPEED]);this._acceleration=C3.toRadians(properties[ACCELERATION]);this._isEnabled=properties[ENABLE]}if(this._isEnabled)this._StartTicking()}Release(){super.Release()}SaveToJson(){return{"s":this._speed,"a":this._acceleration,"e":this._isEnabled}}LoadFromJson(o){this._speed=
o["s"];this._acceleration=o["a"];this._SetEnabled(o["e"])}Tick(){if(!this._isEnabled)return;const dt=this._runtime.GetDt(this._inst);if(dt===0)return;if(this._acceleration!==0)this._speed+=this._acceleration*dt;if(this._speed!==0){const wi=this._inst.GetWorldInfo();wi.SetAngle(wi.GetAngle()+this._speed*dt);wi.SetBboxChanged()}}GetPropertyValueByIndex(index){switch(index){case SPEED:return C3.toDegrees(this._speed);case ACCELERATION:return C3.toDegrees(this._acceleration);case ENABLE:return this._isEnabled}}SetPropertyValueByIndex(index,
value){switch(index){case SPEED:this._speed=C3.toRadians(value);break;case ACCELERATION:this._acceleration=C3.toRadians(value);break;case ENABLE:this._SetEnabled(value);break}}_SetEnabled(e){this._isEnabled=!!e;if(this._isEnabled)this._StartTicking();else this._StopTicking()}GetDebuggerProperties(){const prefix="behaviors.rotate";return[{title:"$"+this.GetBehaviorType().GetName(),properties:[{name:prefix+".properties.speed.name",value:C3.toDegrees(this._speed),onedit:v=>this._speed=C3.toRadians(v)},
{name:prefix+".properties.acceleration.name",value:C3.toDegrees(this._acceleration),onedit:v=>this._acceleration=C3.toRadians(v)},{name:prefix+".properties.enabled.name",value:this._isEnabled,onedit:v=>this._SetEnabled(v)}]}]}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Rotate.Cnds={IsEnabled(){return this._isEnabled}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Rotate.Acts={SetSpeed(s){this._speed=C3.toRadians(s)},SetAcceleration(a){this._acceleration=C3.toRadians(a)},SetEnabled(e){this._SetEnabled(e)}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Rotate.Exps={Speed(){return C3.toDegrees(this._speed)},Acceleration(){return C3.toDegrees(this._acceleration)}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Tween=class TweenBehavior extends C3.SDKBehaviorBase{constructor(opts){super(opts)}Release(){super.Release()}};

}

{
'use strict';const C3=self.C3;C3.Behaviors.Tween.Type=class TweenType extends C3.SDKBehaviorTypeBase{constructor(behaviorType){super(behaviorType)}Release(){super.Release()}OnCreate(){}};

}

{
'use strict';const C3=self.C3;const NAMESPACE=C3.Behaviors.Tween;const ENABLED=0;
NAMESPACE.Instance=class TweenInstance extends C3.SDKBehaviorInstanceBase{constructor(behInst,properties){super(behInst);this._allowMultiple=false;this._enabled=true;if(properties){this._allowMultiple=false;this._enabled=!!properties[ENABLED]}this._activeTweens=new Map;this._disabledTweens=[];this._waitingForReleaseTweens=new Map;this._finishingTween=null;this._activeTweensJson=null;this._disabledTweensJson=null;this._waitingForReleaseTweensJson=null;this._finishingTweenName="";if(this._enabled)this._StartTicking2();
this._afterLoad=e=>this._OnAfterLoad(e);this.GetRuntime().Dispatcher().addEventListener("afterload",this._afterLoad)}Release(){this.GetRuntime().Dispatcher().removeEventListener("afterload",this._afterLoad);this._afterLoad=null;if(this._finishingTween){this.ReleaseAndCompleteTween(this._finishingTween);this._finishingTween=null}this.ReleaseAndCompleteTweens();this._tweens=null;this.ClearDisabledList();this._disabledTweens=null;this._ReleaseWaitingTweens();this._waitingForReleaseTweens=null;super.Release()}SetEnabled(e){this._enabled=
e;if(this._enabled)this._StartTicking2();else this._StopTicking2()}GetEnabled(){return this._enabled}AddToDisabledList(tween){this._disabledTweens.push(tween)}IsInDisabledList(tween){return this._disabledTweens.includes(tween)}ClearDisabledList(){C3.clearArray(this._disabledTweens)}GetFinishingTween(){return this._finishingTween}IsInstanceValid(){const inst=this.GetObjectInstance();if(!inst)return false;return!inst.IsDestroyed()}GetTween(tags,property,includeWaitingForRelease=false){const tweens=
property?this.PropertyTweens(property,includeWaitingForRelease):this.AllTweens(includeWaitingForRelease);if(!tweens||!tweens.length)return;for(const tween of tweens)if(tween.HasTags(tags))return tween}GetTweenIncludingWaitingForRelease(tags,property){return this.GetTween(tags,property,true)}*GetTweens(tags,property,includeWaitingForRelease=false){const tweens=property?this.PropertyTweens(property,includeWaitingForRelease):this.AllTweens(includeWaitingForRelease);if(tweens&&tweens.length)for(const tween of tweens)if(tween.HasTags(tags))yield tween}*GetTweensIncludingWaitingForRelease(tags,
property){yield*this.GetTweens(tags,property,true)}PropertyTweens(property,includeWaitingForRelease){if(includeWaitingForRelease){let active=this._activeTweens.get(property);let waitingForRelease=this._waitingForReleaseTweens.get(property);if(!active)active=[];if(!waitingForRelease)waitingForRelease=[];return active.concat(waitingForRelease).filter(t=>t)}else{let active=this._activeTweens.get(property);if(!active)active=[];return active.filter(t=>t)}}AllTweens(includeWaitingForRelease){if(includeWaitingForRelease){const active=
[...this._activeTweens.values()].flat();const waitingForRelease=[...this._waitingForReleaseTweens.values()].flat();return active.concat(waitingForRelease).filter(t=>t)}else{const active=[...this._activeTweens.values()].flat();return active.filter(t=>t)}}AllTweensIncludingWaitingForRelease(){return this.AllTweens(true)}SaveToJson(){return{"s":false,"e":!!this._enabled,"at":this._SaveActiveTweensToJson(),"dt":this._SaveDisabledTweensToJson(),"wt":this._SaveWaitingForReleaseTweensToJson(),"ft":this._SaveFinishingTweenToJson()}}LoadFromJson(o){if(!o)return;
this._activeTweensJson=o["at"];this._disabledTweensJson=o["dt"];this._waitingForReleaseTweensJson=o["wt"];this._finishingTweenName=o["ft"];this._allowMultiple=false;this._enabled=!!o["e"]}_OnAfterLoad(e){const timelineManager=this.GetRuntime().GetTimelineManager();this._PopulateTweenMap(this._activeTweensJson,this._activeTweens,timelineManager);if(this._disabledTweensJson){C3.clearArray(this._disabledTweens);for(const tweenName of this._disabledTweensJson)this._PopulateTweenArray(this._disabledTweens,
tweenName,timelineManager)}this._PopulateTweenMap(this._waitingForReleaseTweensJson,this._waitingForReleaseTweens,timelineManager);this._finishingTween=this._GetTween(this._finishingTweenName,timelineManager);this._enabled?this._StartTicking2():this._StopTicking2()}_PopulateTweenMap(restoreJson,map,timelineManager){if(!restoreJson)return;for(const property in restoreJson){let tweens=map.get(property);tweens?C3.clearArray(tweens):tweens=[];const tweensJson=restoreJson[property];for(const tweenJson of tweensJson){const success=
this._PopulateTweenArray(tweens,tweenJson["name"],timelineManager);if(!success){const tween=C3.Tween.Build({runtime:this.GetRuntime(),json:tweenJson});tween.AddCompletedCallback(tween=>this._FinishTriggers(tween));timelineManager.AddScheduledTimeline(tween);this._PopulateTweenArray(tweens,tween,timelineManager)}else this._LoadTweenFromJson(tweenJson["name"],tweenJson,timelineManager)}map.set(property,tweens)}}_GetTween(name,timelineManager){return timelineManager.GetScheduledOrPlayingTimelineByName(name)}_PopulateTweenArray(collection,
tweenOrName,timelineManager){if(typeof tweenOrName==="string"){const tween=this._GetTween(tweenOrName,timelineManager);if(tween)return!!collection.push(tween)}else return!!collection.push(tweenOrName);return false}_LoadTweenFromJson(tweenOrName,tweenJson,timelineManager){if(typeof tweenOrName==="string"){const tween=this._GetTween(tweenOrName,timelineManager);if(tween)tween._LoadFromJson(tweenJson)}else tweenOrName._LoadFromJson(tweenJson)}_SaveActiveTweensToJson(){const ret={};for(const [property,
tweens]of this._activeTweens)ret[property]=tweens.map(tween=>tween._SaveToJson());return ret}_SaveDisabledTweensToJson(){return this._disabledTweens.map(tween=>tween.GetName())}_SaveWaitingForReleaseTweensToJson(){const ret={};for(const [property,tweens]of this._waitingForReleaseTweens)ret[property]=tweens.map(tween=>tween._SaveToJson());return ret}_SaveFinishingTweenToJson(){return this._finishingTween?this._finishingTween.GetName():""}Tick2(){this._ReleaseWaitingTweens()}CreateTween(args){const propertyTracksConfig=
NAMESPACE.Config.GetPropertyTracksConfig(args.property,args.startValue,args.endValue,args.ease,args.resultMode,this.GetObjectInstance());const tweenId=NAMESPACE.Maps.GetPropertyFromIndex(args.property);if(!NAMESPACE.Maps.IsValueId(tweenId))this.ReleaseTweens(args.property);const tween=C3.Tween.Build({runtime:this.GetRuntime(),id:tweenId,tags:args.tags,time:args.time,instance:this.GetObjectInstance(),releaseOnComplete:!!args.releaseOnComplete,loop:!!args.loop,pingPong:!!args.pingPong,initialValueMode:args.initialValueMode,
propertyTracksConfig:propertyTracksConfig});tween.AddCompletedCallback(tween=>this._FinishTriggers(tween));this._AddTween(tween,args.property);return tween}ReleaseTween(tween,complete=false){const id=tween.GetId();if(this._activeTweens.has(id)){const tweenArray=this._activeTweens.get(id);if(tweenArray){const index=tweenArray.indexOf(tween);if(index!==-1)tweenArray.splice(index,1)}}if(tween.IsReleased())return;if(this._IsInWaitingList(tween))return;tween.Stop(complete);this._AddToWaitingList(tween)}ReleaseTweens(indexProperty,
complete=false){if(C3.IsFiniteNumber(indexProperty)){const stringProperty=NAMESPACE.Maps.GetPropertyFromIndex(indexProperty);if(!this._activeTweens.has(stringProperty))return;const tweenArray=this._activeTweens.get(stringProperty);const finishingTween=this.GetFinishingTween();for(const tween of tweenArray){if(tween===finishingTween)continue;if(tween.IsReleased())continue;if(this._IsInWaitingList(tween))continue;tween.Stop(complete);tween.Release()}C3.clearArray(tweenArray)}else{const finishingTween=
this.GetFinishingTween();for(const tween of this.AllTweens()){if(tween===finishingTween)continue;if(tween.IsReleased())continue;if(this._IsInWaitingList(tween))continue;tween.Stop(complete);tween.Release()}for(const property of this._activeTweens.keys()){C3.clearArray(this._activeTweens.get(property));this._activeTweens.delete(property)}this._activeTweens.clear()}}ReleaseAndCompleteTween(tween){this.ReleaseTween(tween,true)}ReleaseAndCompleteTweens(){this.ReleaseTweens(NaN,true)}GetPropertyValueByIndex(index){switch(index){case ENABLED:return this._enabled}}SetPropertyValueByIndex(index,
value){switch(index){case ENABLED:this._enabled=!!value;break}}_GetBehaviorType(tween){const instance=tween.GetInstance();const behaviorInstances=instance.GetBehaviorInstances();for(const behaviorInstance of behaviorInstances){const behaviorType=behaviorInstance.GetBehaviorType();if(behaviorType.GetInstanceSdkCtor()===this.constructor)return behaviorType}}Trigger(method,runtime,inst,behaviorType){if(this._runtime)return super.Trigger(method);else return runtime.Trigger(method,inst,behaviorType)}_FinishTriggers(tween){this._finishingTween=
tween;NAMESPACE.Cnds.SetFinishingTween(tween);let instance;let runtime;if(!this.GetRuntime()){instance=tween.GetInstance();if(!instance)return;if(instance&&instance.IsDestroyed())return;runtime=instance.GetRuntime();const behaviorType=this._GetBehaviorType(tween);this.Trigger(NAMESPACE.Cnds.OnTweensFinished,runtime,instance,behaviorType);this.Trigger(NAMESPACE.Cnds.OnAnyTweensFinished,runtime,instance,behaviorType);tween.Stop()}else{instance=this._inst;runtime=this._runtime;this.Trigger(NAMESPACE.Cnds.OnTweensFinished);
this.Trigger(NAMESPACE.Cnds.OnAnyTweensFinished);this.ReleaseTween(tween)}this._finishingTween=null;NAMESPACE.Cnds.SetFinishingTween(null);if(tween.GetDestroyInstanceOnComplete())runtime.DestroyInstance(instance)}_AddTween(tween,indexProperty){const stringProperty=NAMESPACE.Maps.GetPropertyFromIndex(indexProperty);if(!this._activeTweens.has(stringProperty))this._activeTweens.set(stringProperty,[]);const tweenArray=this._activeTweens.get(stringProperty);tweenArray.push(tween)}_AddToWaitingList(tween){const id=
tween.GetId();if(!this._waitingForReleaseTweens.has(id))this._waitingForReleaseTweens.set(id,[]);this._waitingForReleaseTweens.get(id).push(tween)}_IsInWaitingList(tween){const id=tween.GetId();if(!this._waitingForReleaseTweens.has(id))return false;return this._waitingForReleaseTweens.get(id).includes(tween)}_ReleaseWaitingTweens(){if(!this._waitingForReleaseTweens.size)return;for(const tweenArray of this._waitingForReleaseTweens.values()){for(const tween of tweenArray){if(tween.IsReleased())continue;
tween.Release()}C3.clearArray(tweenArray)}this._waitingForReleaseTweens.clear()}};

}

{
'use strict';const C3=self.C3;let finishingTween=null;
C3.Behaviors.Tween.Cnds={SetFinishingTween(tween){finishingTween=tween},OnTweensFinished(tags){return finishingTween.HasTags(tags)},OnAnyTweensFinished(){return true},IsPlaying(tags){const tweens=[...this.GetTweensIncludingWaitingForRelease(tags)];if(!tweens)return false;if(!tweens.length)return false;return tweens.some(C3.Tween.IsPlaying)},IsAnyPlaying(){const tweens=[...this.AllTweensIncludingWaitingForRelease()];if(!tweens)return false;if(!tweens.length)return false;return tweens.some(C3.Tween.IsPlaying)},
IsPaused(tags){const tweens=[...this.GetTweensIncludingWaitingForRelease(tags)];if(!tweens)return false;if(!tweens.length)return false;return tweens.some(C3.Tween.IsPaused)},IsAnyPaused(){const tweens=[...this.AllTweensIncludingWaitingForRelease()];if(!tweens)return false;if(!tweens.length)return false;return tweens.some(C3.Tween.IsPaused)}};

}

{
'use strict';const C3=self.C3;const Ease=self.Ease;const NAMESPACE=C3.Behaviors.Tween;
NAMESPACE.Acts={SetEnabled(enable){this.SetEnabled(!!enable);for(const tween of this.AllTweens())if(!!enable){if(this.IsInDisabledList(tween))tween.Resume()}else{if(tween.IsPlaying()||tween.IsScheduled())this.AddToDisabledList(tween);tween.Stop()}if(enable)this.ClearDisabledList()},async TweenOneProperty(...args){if(!this.GetEnabled()||!this.IsInstanceValid())return;const tween=this.CreateTween(NAMESPACE.TweenArguments.OneProperty(this,...args));if(tween.Play())await tween.GetPlayPromise()},async TweenTwoProperties(...args){if(!this.GetEnabled()||
!this.IsInstanceValid())return;const tween=this.CreateTween(NAMESPACE.TweenArguments.TwoProperties(this,...args));if(tween.Play())await tween.GetPlayPromise()},async TweenValue(...args){if(!this.GetEnabled()||!this.IsInstanceValid())return;const tween=this.CreateTween(NAMESPACE.TweenArguments.ValueProperty(this,...args));if(tween.Play())await tween.GetPlayPromise()},PauseTweens(tags){if(!this.GetEnabled()||!this.IsInstanceValid())return;for(const tween of this.GetTweens(tags))tween.Stop()},PauseAllTweens(){if(!this.GetEnabled()||
!this.IsInstanceValid())return;for(const tween of this.AllTweens())tween.Stop()},ResumeTweens(tags){if(!this.GetEnabled()||!this.IsInstanceValid())return;for(const tween of this.GetTweens(tags))tween.Resume()},ResumeAllTweens(){if(!this.GetEnabled()||!this.IsInstanceValid())return;for(const tween of this.AllTweens())tween.Resume()},StopTweens(tags){if(!this.GetEnabled()||!this.IsInstanceValid())return;for(const tween of this.GetTweens(tags))this.ReleaseTween(tween)},StopAllTweens(){if(!this.GetEnabled()||
!this.IsInstanceValid())return;for(const tween of this.AllTweens())this.ReleaseTween(tween)},SetOnePropertyTweensEndValue(tags,property,endValue){if(!this.GetEnabled()||!this.IsInstanceValid())return;const propertyName=C3.Behaviors.Tween.Maps.GetSinglePropertyFromIndex(property);for(const tween of this.GetTweens(tags)){tween.BeforeSetEndValues([propertyName]);tween.SetEndValue(endValue,propertyName)}},SetTwoPropertiesTweensEndValue(tags,property,endValueX,endValueY){if(!this.GetEnabled()||!this.IsInstanceValid())return;
const properties=C3.Behaviors.Tween.Maps.GetRealProperties(property);for(const tween of this.GetTweens(tags)){tween.BeforeSetEndValues(properties);tween.SetEndValue(endValueX,properties[0]);tween.SetEndValue(endValueY,properties[1])}},SetValuePropertyTweensStartValue(tags,startValue){if(!this.GetEnabled()||!this.IsInstanceValid())return;for(const tween of this.GetTweens(tags,"value"))tween.SetStartValue(startValue,"value")},SetValuePropertyTweensEndValue(tags,endValue){if(!this.GetEnabled()||!this.IsInstanceValid())return;
for(const tween of this.GetTweens(tags,"value")){tween.BeforeSetEndValues(["value"]);tween.SetEndValue(endValue,"value")}},SetTweensEase(tags,easeIndex){if(!this.GetEnabled()||!this.IsInstanceValid())return;const ease=Ease.GetEaseFromIndex(easeIndex);for(const tween of this.GetTweens(tags))tween.SetEase(ease)},SetAllTweensEase(easeIndex){if(!this.GetEnabled()||!this.IsInstanceValid())return;const ease=Ease.GetEaseFromIndex(easeIndex);for(const tween of this.AllTweens())tween.SetEase(ease)},SetTweensTime(tags,
time){if(!this.GetEnabled()||!this.IsInstanceValid())return;for(const tween of this.GetTweens(tags))tween.SetTime(time)},SetAllTweensTime(time){if(!this.GetEnabled()||!this.IsInstanceValid())return;for(const tween of this.AllTweens())tween.SetTime(time)},SetTweensPlaybackRate(tags,rate){if(!this.GetEnabled()||!this.IsInstanceValid())return;for(const tween of this.GetTweens(tags))tween.SetPlaybackRate(rate)},SetAllTweensPlaybackRate(rate){if(!this.GetEnabled()||!this.IsInstanceValid())return;for(const tween of this.AllTweens())tween.SetPlaybackRate(rate)},
SetTweensDestroyOnComplete(tags,destroyOnComplete){if(!this.GetEnabled()||!this.IsInstanceValid())return;for(const tween of this.GetTweens(tags))tween.SetDestroyInstanceOnComplete(!!destroyOnComplete)},SetAllTweensDestroyOnComplete(destroyOnComplete){if(!this.GetEnabled()||!this.IsInstanceValid())return;for(const tween of this.AllTweens())tween.SetDestroyInstanceOnComplete(!!destroyOnComplete)}};

}

{
'use strict';const C3=self.C3;
C3.Behaviors.Tween.Exps={Time(tags){const tween=this.GetTweenIncludingWaitingForRelease(tags);if(!tween)return 0;return tween.GetTime()},Progress(tags){const tween=this.GetTweenIncludingWaitingForRelease(tags);if(!tween)return 0;return tween.GetTime()/tween.GetTotalTime()},Value(tags){const tween=this.GetTweenIncludingWaitingForRelease(tags,"value");if(!tween)return 0;return tween.GetPropertyTrack("value").GetSourceAdapterValue()},Tags(){if(!this.GetFinishingTween())return"";return this.GetFinishingTween().GetStringTags()}};

}

{
'use strict';const C3=self.C3;const Ease=self.Ease;const PAIR_PROPERTIES=["position","size","scale"];const SINGLE_PROPERTIES=["offsetX","offsetY","offsetWidth","offsetHeight","offsetAngle","offsetOpacity","offsetColor","offsetZElevation","offsetScaleX","offsetScaleY"];const VALUE_PROPERTIES=["value"];const PROPERTY_INDEX_TO_NAME=[].concat(PAIR_PROPERTIES).concat(SINGLE_PROPERTIES).concat(VALUE_PROPERTIES);
const PROPERTY_PAIR_TO_REAL_PROPERTIES={"position":["offsetX","offsetY"],"size":["offsetWidth","offsetHeight"],"scale":["offsetScaleX","offsetScaleY"]};const ALL_REAL_PROPERTIES=Object.assign({},PROPERTY_INDEX_TO_NAME.reduce((o,key)=>Object.assign({},o,{[key]:[key]}),{}),PROPERTY_PAIR_TO_REAL_PROPERTIES);
C3.Behaviors.Tween.Maps=class Maps{constructor(){}static GetEases(){return[...Ease.GetRuntimeEaseNames()]}static GetEaseFromIndex(index){return[...Ease.GetRuntimeEaseNames()][index]}static GetPropertyFromIndex(index){return PROPERTY_INDEX_TO_NAME[index]}static GetPropertyIndexFromName(name){return PROPERTY_INDEX_TO_NAME.indexOf(name)}static GetPairPropertyFromIndex(index){return PAIR_PROPERTIES[index]}static GetSinglePropertyFromIndex(index){return SINGLE_PROPERTIES[index]}static GetValuePropertyFromIndex(index){return VALUE_PROPERTIES[index]}static GetPairProperties(pairId){return PROPERTY_PAIR_TO_REAL_PROPERTIES[pairId]}static GetRealProperties(id){if(C3.IsString(id))return ALL_REAL_PROPERTIES[id];else return ALL_REAL_PROPERTIES[PROPERTY_INDEX_TO_NAME[id]]}static IsPairId(id){return!!PROPERTY_PAIR_TO_REAL_PROPERTIES[id]}static IsColorId(id){return id===
"offsetColor"}static IsAngleId(id){return id==="offsetAngle"}static IsOpacityId(id){return id==="offsetOpacity"}static IsValueId(id){return id==="value"}};

}

{
'use strict';const C3=self.C3;const NAMESPACE=C3.Behaviors.Tween;const TWEEN_CONFIGURATIONS=new Map;
NAMESPACE.Config=class Config{constructor(){}static GetPropertyTracksConfig(property,startValue,endValue,ease,resultMode,instance){if(TWEEN_CONFIGURATIONS.size===0)this._CreateConfigObjects();const propertyType=NAMESPACE.PropertyTypes.Pick(property);let config=TWEEN_CONFIGURATIONS.get(propertyType);if(C3.IsFiniteNumber(property))property=NAMESPACE.Maps.GetPropertyFromIndex(property);return this._GetConfig(config,property,startValue,endValue,ease,resultMode,instance)}static TransformValue(property,
value){const configFunctionObject=C3.Behaviors.Tween.GetPropertyTracksConfig(property);return configFunctionObject.valueGetter(value)}static _CreateConfigObjects(){const types=NAMESPACE.PropertyTypes;const getters=NAMESPACE.ValueGetters;this._AddConfigObject(types.PAIR,this._GetPairConfig,getters._GetPropertyValue);this._AddConfigObject(types.COLOR,this._GetColorConfig,getters._GetColorPropertyValue);this._AddConfigObject(types.ANGLE,this._GetAngleConfig,getters._GetPropertyAngleValue);this._AddConfigObject(types.VALUE,
this._GetValueConfig,getters._GetPropertyValue);this._AddConfigObject(types.OTHER,this._GetCommonConfig,getters._GetPropertyValue)}static _AddConfigObject(name,configGetter,valueGetter){TWEEN_CONFIGURATIONS.set(name,this._CreateConfigObject(name,configGetter,valueGetter))}static _CreateConfigObject(name,configFunc,valueGetter){return{name:name,configFunc:configFunc,valueGetter:valueGetter}}static _GetConfig(config,property,startValue,endValue,ease,resultMode,instance){return config.configFunc(property,
config.valueGetter(startValue),config.valueGetter(endValue),ease,resultMode,instance)}static _GetPairConfig(property,startValues,endValues,ease,resultMode,instance){const properties=NAMESPACE.Maps.GetPairProperties(property);return properties.map((property,index)=>{return{sourceId:"world-instance",property:property,type:"float",valueType:"numeric",startValue:startValues[index],endValue:endValues[index],ease:NAMESPACE.Maps.GetEaseFromIndex(ease),resultMode:resultMode}})}static _GetColorConfig(property,
startValue,endValue,ease,resultMode,instance){if(C3.Plugins.Text&&instance.GetPlugin()instanceof C3.Plugins.Text)return{sourceId:"plugin",sourceArgs:[7],property:"color",type:"color",valueType:"color",startValue:startValue,endValue:endValue,ease:NAMESPACE.Maps.GetEaseFromIndex(ease),resultMode:resultMode};else return{sourceId:"world-instance",property:property,type:"color",valueType:"color",startValue:startValue,endValue:endValue,ease:NAMESPACE.Maps.GetEaseFromIndex(ease),resultMode:resultMode}}static _GetAngleConfig(property,
startValue,endValue,ease,resultMode,instance){return{sourceId:"world-instance",property:property,type:"angle",valueType:"angle",startValue:startValue,endValue:endValue,ease:NAMESPACE.Maps.GetEaseFromIndex(ease),resultMode:resultMode}}static _GetCommonConfig(property,startValue,endValue,ease,resultMode,instance){return{sourceId:"world-instance",property:property,type:"float",valueType:"numeric",startValue:startValue,endValue:endValue,ease:NAMESPACE.Maps.GetEaseFromIndex(ease),resultMode:resultMode}}static _GetValueConfig(property,
startValue,endValue,ease,resultMode,instance){return{sourceId:"value",property:property,type:"float",valueType:"numeric",startValue:startValue,endValue:endValue,ease:NAMESPACE.Maps.GetEaseFromIndex(ease),resultMode:resultMode}}};

}

{
'use strict';const C3=self.C3;const NAMESPACE=C3.Behaviors.Tween;const COMMON_FIXED_ARGS={resultMode:"absolute"};const COMMON_VARIABLE_ARGS=Object.assign({},COMMON_FIXED_ARGS,{tags:"",property:"",time:0,ease:0,releaseOnComplete:0,loop:false,pingPong:false});const ONE_PROPERTY_ARGS=Object.assign({},COMMON_VARIABLE_ARGS,{initialValueMode:"current-state",startValue:0,endValue:0});
const TWO_PROPERTIES_ARGS=Object.assign({},COMMON_VARIABLE_ARGS,{initialValueMode:"current-state",startValue:[0,0],endValue:[0,0]});const COLOR_PROPERTY_ARGS=Object.assign({},COMMON_VARIABLE_ARGS,{initialValueMode:"current-state",startValue:[0,0,0],endValue:[0,0,0]});const VALUE_PROPERTY_ARGS=Object.assign({},ONE_PROPERTY_ARGS,{initialValueMode:"start-value"});const X=0;const Y=1;const R=0;const G=1;const B=2;
NAMESPACE.TweenArguments=class TweenArguments{constructor(){}static _SetCommonProperties(argsObject,tags,time,ease,destroyOnComplete,loop,pingPong){argsObject.tags=tags;argsObject.time=time;argsObject.ease=ease;argsObject.releaseOnComplete=destroyOnComplete;argsObject.loop=loop;argsObject.pingPong=pingPong}static OneProperty(inst,tags,property,endValue,time,ease,destroyOnComplete,loop,pingPong){const propertyName=NAMESPACE.Maps.GetSinglePropertyFromIndex(property);const args=NAMESPACE.Maps.IsColorId(propertyName)?
COLOR_PROPERTY_ARGS:ONE_PROPERTY_ARGS;this._SetCommonProperties(args,tags,time,ease,destroyOnComplete,loop,pingPong);if(NAMESPACE.Maps.IsColorId(propertyName)){COLOR_PROPERTY_ARGS.endValue[R]=C3.GetRValue(endValue);COLOR_PROPERTY_ARGS.endValue[G]=C3.GetGValue(endValue);COLOR_PROPERTY_ARGS.endValue[B]=C3.GetBValue(endValue);COLOR_PROPERTY_ARGS.property=NAMESPACE.Maps.GetPropertyIndexFromName(propertyName)}else if(NAMESPACE.Maps.IsOpacityId(propertyName))ONE_PROPERTY_ARGS.endValue=endValue/100;else ONE_PROPERTY_ARGS.endValue=
endValue;args.property=NAMESPACE.Maps.GetPropertyIndexFromName(propertyName);return args}static TwoProperties(inst,tags,property,endValueX,endValueY,time,ease,destroyOnComplete,loop,pingPong){this._SetCommonProperties(TWO_PROPERTIES_ARGS,tags,time,ease,destroyOnComplete,loop,pingPong);const pairName=NAMESPACE.Maps.GetPairPropertyFromIndex(property);TWO_PROPERTIES_ARGS.endValue[X]=endValueX;TWO_PROPERTIES_ARGS.endValue[Y]=endValueY;TWO_PROPERTIES_ARGS.property=NAMESPACE.Maps.GetPropertyIndexFromName(pairName);
return TWO_PROPERTIES_ARGS}static ValueProperty(inst,tags,startValue,endValue,time,ease,destroyOnComplete,loop,pingPong){this._SetCommonProperties(VALUE_PROPERTY_ARGS,tags,time,ease,destroyOnComplete,loop,pingPong);VALUE_PROPERTY_ARGS.startValue=startValue;VALUE_PROPERTY_ARGS.endValue=endValue;VALUE_PROPERTY_ARGS.property=NAMESPACE.Maps.GetPropertyIndexFromName("value");return VALUE_PROPERTY_ARGS}};

}

{
'use strict';const C3=self.C3;const NAMESPACE=C3.Behaviors.Tween;const TYPE_CHECK_OBJECTS=[];
NAMESPACE.PropertyTypes=class PropertyTypes{constructor(){}static Pick(property){if(TYPE_CHECK_OBJECTS.length===0){const arr=TYPE_CHECK_OBJECTS;arr.push({checkFunc:NAMESPACE.Maps.IsPairId,result:this.PAIR});arr.push({checkFunc:NAMESPACE.Maps.IsColorId,result:this.COLOR});arr.push({checkFunc:NAMESPACE.Maps.IsAngleId,result:this.ANGLE});arr.push({checkFunc:NAMESPACE.Maps.IsValueId,result:this.VALUE});arr.push({checkFunc:()=>true,result:this.OTHER})}if(C3.IsFiniteNumber(property))property=C3.Behaviors.Tween.Maps.GetPropertyFromIndex(property);
for(const propertyTypeFunctionObject of TYPE_CHECK_OBJECTS)if(propertyTypeFunctionObject.checkFunc(property))return propertyTypeFunctionObject.result}static get PAIR(){return"pair"}static get COLOR(){return"color"}static get ANGLE(){return"angle"}static get VALUE(){return"value"}static get OTHER(){return"other"}};

}

{
'use strict';const C3=self.C3;const NAMESPACE=C3.Behaviors.Tween;NAMESPACE.ValueGetters=class ValueGetters{constructor(){}static _GetPropertyAngleValue(value){const r=C3.toRadians(parseFloat(value));return C3.clampAngle(r)}static _GetColorPropertyValue(value){return value.slice(0)}static _GetPropertyValue(value){return value}};

}

{
const C3 = self.C3;
self.C3_GetObjectRefTable = function () {
	return [
		C3.Plugins.Sprite,
		C3.Plugins.Text,
		C3.Plugins.Arr,
		C3.Plugins.Touch,
		C3.Plugins.Mouse,
		C3.Plugins.Dictionary,
		C3.Plugins.NinePatch,
		C3.Plugins.Spritefont2,
		C3.Behaviors.Pin,
		C3.Plugins.Particles,
		C3.Plugins.TiledBg,
		C3.Behaviors.Bullet,
		C3.Behaviors.Timer,
		C3.Behaviors.Rotate,
		C3.Plugins.Browser,
		C3.Plugins.Keyboard,
		C3.Plugins.LocalStorage,
		C3.Behaviors.Tween,
		C3.Plugins.PlatformInfo,
		C3.Plugins.advert,
		C3.Plugins.Audio,
		C3.Plugins.Eponesh_GameScore,
		C3.Plugins.System.Cnds.IsGroupActive,
		C3.Plugins.System.Cnds.OnLayoutStart,
		C3.Plugins.Sprite.Acts.Destroy,
		C3.Plugins.NinePatch.Acts.Destroy,
		C3.Plugins.Spritefont2.Acts.Destroy,
		C3.Plugins.System.Acts.SetLayerScale,
		C3.Plugins.Particles.Acts.Destroy,
		C3.Plugins.System.Acts.SetVar,
		C3.Plugins.System.Exps.viewporttop,
		C3.Plugins.System.Cnds.CompareVar,
		C3.Plugins.System.Exps.int,
		C3.Plugins.System.Exps.replace,
		C3.Plugins.System.Exps.max,
		C3.Plugins.System.Exps.tokencount,
		C3.Plugins.System.Exps.layoutwidth,
		C3.Plugins.System.Acts.Wait,
		C3.Plugins.Sprite.Cnds.OnCreated,
		C3.Plugins.Sprite.Acts.SetAnimFrame,
		C3.Plugins.System.Cnds.For,
		C3.Plugins.System.Cnds.Compare,
		C3.Plugins.System.Exps.len,
		C3.Plugins.System.Exps.tokenat,
		C3.Plugins.System.Exps.loopindex,
		C3.Plugins.System.Acts.SetFunctionReturnValue,
		C3.Plugins.System.Acts.CreateObject,
		C3.Plugins.Sprite.Acts.SetSize,
		C3.Plugins.Sprite.Acts.SetInstanceVar,
		C3.Plugins.System.Acts.AddVar,
		C3.Plugins.TiledBg.Exps.BBoxTop,
		C3.Plugins.Sprite.Exps.UID,
		C3.Plugins.Arr.Acts.SetSize,
		C3.Plugins.System.Cnds.Repeat,
		C3.Plugins.Arr.Exps.Width,
		C3.Plugins.Arr.Acts.SetX,
		C3.Plugins.Arr.Acts.Delete,
		C3.Plugins.System.Exps.random,
		C3.Plugins.Arr.Exps.At,
		C3.Plugins.System.Exps.choose,
		C3.Plugins.System.Cnds.ForEach,
		C3.Plugins.Sprite.Cnds.CompareInstanceVar,
		C3.Plugins.Sprite.Acts.AddInstanceVar,
		C3.Plugins.System.Cnds.PickRandom,
		C3.Plugins.Sprite.Cnds.PickInstVarHiLow,
		C3.Plugins.System.Cnds.Else,
		C3.Plugins.Sprite.Acts.SetVisible,
		C3.Plugins.System.Cnds.PickNth,
		C3.Plugins.System.Exps.right,
		C3.Plugins.Sprite.Acts.SetAnim,
		C3.Plugins.Touch.Cnds.OnTouchStart,
		C3.Plugins.Sprite.Cnds.IsOnScreen,
		C3.Plugins.Touch.Cnds.IsTouchingObject,
		C3.Plugins.Touch.Cnds.IsInTouch,
		C3.Plugins.Sprite.Cnds.PickByUID,
		C3.Plugins.Sprite.Exps.X,
		C3.Plugins.Sprite.Exps.Y,
		C3.Plugins.Touch.Cnds.OnTouchEnd,
		C3.Plugins.Sprite.Cnds.PickDistance,
		C3.Plugins.Touch.Exps.X,
		C3.Plugins.Touch.Exps.Y,
		C3.Plugins.System.Cnds.ForEachOrdered,
		C3.Plugins.System.Exps.left,
		C3.Plugins.NinePatch.Acts.SetInstanceVar,
		C3.Plugins.System.Exps.find,
		C3.Plugins.Dictionary.Exps.Get,
		C3.Plugins.LocalStorage.Acts.SetItem,
		C3.Plugins.Sprite.Exps.LayerName,
		C3.Plugins.System.Exps.canvastolayerx,
		C3.Plugins.System.Exps.layertocanvasx,
		C3.Plugins.System.Exps.layertocanvasy,
		C3.Plugins.System.Exps.canvastolayery,
		C3.Plugins.Sprite.Acts.SubInstanceVar,
		C3.Behaviors.Tween.Acts.TweenTwoProperties,
		C3.Behaviors.Tween.Cnds.IsAnyPlaying,
		C3.Plugins.Sprite.Acts.SetOpacity,
		C3.Behaviors.Pin.Acts.Pin,
		C3.Plugins.Sprite.Cnds.CompareX,
		C3.Plugins.Sprite.Acts.SetX,
		C3.Plugins.Sprite.Acts.SetY,
		C3.Plugins.Sprite.Acts.SetPos,
		C3.Behaviors.Pin.Acts.Unpin,
		C3.Plugins.Sprite.Exps.BBoxLeft,
		C3.Plugins.NinePatch.Acts.SetWidth,
		C3.Plugins.NinePatch.Exps.X,
		C3.Plugins.NinePatch.Exps.Width,
		C3.Plugins.NinePatch.Exps.Y,
		C3.Plugins.Spritefont2.Acts.SetText,
		C3.Plugins.Spritefont2.Acts.SetVisible,
		C3.Plugins.Sprite.Cnds.OnDestroyed,
		C3.Plugins.NinePatch.Cnds.CompareInstanceVar,
		C3.Plugins.NinePatch.Acts.SetVisible,
		C3.Plugins.Sprite.Acts.MoveToTop,
		C3.Behaviors.Tween.Cnds.OnTweensFinished,
		C3.Plugins.Spritefont2.Cnds.CompareText,
		C3.Plugins.Particles.Acts.SetRate,
		C3.Plugins.Spritefont2.Cnds.OnCreated,
		C3.Plugins.Arr.Acts.JSONLoad,
		C3.Plugins.Arr.Exps.Height,
		C3.Plugins.Spritefont2.Acts.SetCharacterWidth,
		C3.Plugins.System.Acts.Scroll,
		C3.Plugins.System.Exps.scrollx,
		C3.Plugins.System.Cnds.Every,
		C3.Behaviors.Timer.Acts.StartTimer,
		C3.Behaviors.Timer.Exps.CurrentTime,
		C3.Plugins.System.Acts.StopLoop,
		C3.Plugins.Sprite.Exps.Count,
		C3.Plugins.NinePatch.Exps.UID,
		C3.Plugins.NinePatch.Exps.Opacity,
		C3.Plugins.Spritefont2.Acts.SetOpacity,
		C3.Plugins.Spritefont2.Acts.MoveToTop,
		C3.Plugins.NinePatch.Cnds.IsVisible,
		C3.Plugins.NinePatch.Exps.BBoxRight,
		C3.Plugins.Spritefont2.Acts.SetPosToObject,
		C3.Plugins.Dictionary.Cnds.CompareValue,
		C3.Plugins.System.Cnds.CompareBoolVar,
		C3.Plugins.System.Acts.SubVar,
		C3.Plugins.Dictionary.Acts.SetKey,
		C3.Plugins.Sprite.Exps.BBoxRight,
		C3.Plugins.Sprite.Exps.BBoxTop,
		C3.Plugins.Spritefont2.Acts.SetPos,
		C3.Plugins.NinePatch.Cnds.CompareOpacity,
		C3.Plugins.Sprite.Cnds.IsVisible,
		C3.Plugins.Sprite.Cnds.IsOverlapping,
		C3.Plugins.Spritefont2.Exps.CharacterScale,
		C3.Plugins.Spritefont2.Acts.SetScale,
		C3.Plugins.NinePatch.Cnds.PickInstVarHiLow,
		C3.Plugins.Spritefont2.Acts.SetInstanceVar,
		C3.Plugins.Spritefont2.Exps.UID,
		C3.Plugins.Spritefont2.Exps.X,
		C3.Plugins.Spritefont2.Exps.Y,
		C3.Plugins.System.Exps.layoutheight,
		C3.Plugins.Spritefont2.Exps.BBoxBottom,
		C3.Plugins.System.Exps.viewportbottom,
		C3.Plugins.Spritefont2.Exps.Height,
		C3.Plugins.Sprite.Acts.RotateClockwise,
		C3.Plugins.Sprite.Cnds.CompareY,
		C3.Plugins.Sprite.Exps.AnimationFrameCount,
		C3.Behaviors.Bullet.Acts.SetSpeed,
		C3.Behaviors.Bullet.Acts.SetGravity,
		C3.Behaviors.Bullet.Acts.SetAngleOfMotion,
		C3.Behaviors.Bullet.Acts.SetEnabled,
		C3.Plugins.System.Acts.SetLayerOpacity,
		C3.Plugins.Sprite.Exps.Opacity,
		C3.Plugins.NinePatch.Acts.SetPos,
		C3.Plugins.Spritefont2.Exps.TextWidth,
		C3.Plugins.NinePatch.Acts.SetPosToObject,
		C3.Plugins.Sprite.Cnds.IsOnLayer,
		C3.Plugins.NinePatch.Cnds.OnCreated,
		C3.Plugins.System.Exps.min,
		C3.Plugins.Sprite.Exps.Height,
		C3.Plugins.System.Exps.uppercase,
		C3.Behaviors.Tween.Cnds.OnAnyTweensFinished,
		C3.Plugins.Sprite.Cnds.CompareOpacity,
		C3.Plugins.NinePatch.Cnds.CompareWidth,
		C3.Plugins.Sprite.Acts.ZMoveToObject,
		C3.Plugins.Sprite.Acts.SetWidth,
		C3.Plugins.Sprite.Exps.ImageWidth,
		C3.Plugins.Sprite.Exps.BBoxBottom,
		C3.Plugins.Sprite.Exps.ImagePointX,
		C3.Plugins.Sprite.Exps.ImagePointY,
		C3.Plugins.Spritefont2.Cnds.CompareInstanceVar,
		C3.Plugins.NinePatch.Acts.ZMoveToObject,
		C3.Plugins.Spritefont2.Cnds.IsVisible,
		C3.Behaviors.Tween.Acts.TweenOneProperty,
		C3.Plugins.Browser.Acts.ConsoleLog,
		C3.Behaviors.Tween.Acts.SetTweensEase,
		C3.Plugins.NinePatch.Cnds.PickByUID,
		C3.Plugins.Spritefont2.Cnds.PickByUID,
		C3.Plugins.System.Acts.ResetGlobals,
		C3.Plugins.System.Acts.RestartLayout,
		C3.Plugins.Eponesh_GameScore.Acts.AdsShowPreloader,
		C3.Plugins.System.Acts.GoToLayout,
		C3.Plugins.TiledBg.Acts.SetPos,
		C3.Plugins.TiledBg.Acts.SetSize,
		C3.Plugins.System.Exps.viewportwidth,
		C3.Plugins.System.Exps.viewportheight,
		C3.Plugins.System.Cnds.OnLoadFinished,
		C3.Plugins.LocalStorage.Acts.CheckItemExists,
		C3.Plugins.LocalStorage.Cnds.OnItemExists,
		C3.Plugins.LocalStorage.Acts.GetItem,
		C3.Plugins.LocalStorage.Cnds.OnItemGet,
		C3.Plugins.LocalStorage.Exps.ItemValue,
		C3.Plugins.LocalStorage.Cnds.OnItemMissing,
		C3.Plugins.LocalStorage.Cnds.OnItemRemoved,
		C3.Plugins.Dictionary.Acts.AddKey,
		C3.Plugins.Audio.Acts.Play,
		C3.Plugins.Audio.Acts.Stop,
		C3.Plugins.Audio.Acts.PlayByName,
		C3.Plugins.Audio.Cnds.IsTagPlaying,
		C3.Plugins.System.Exps.viewportright,
		C3.Plugins.System.Exps.viewportleft,
		C3.Plugins.TiledBg.Exps.Height,
		C3.Plugins.System.Exps.layoutname,
		C3.Plugins.Spritefont2.Acts.SetY,
		C3.Plugins.System.Acts.SetLayerVisible,
		C3.Plugins.System.Exps.scrolly,
		C3.Plugins.TiledBg.Acts.SetOpacity,
		C3.Plugins.Sprite.Exps.Width,
		C3.Plugins.Touch.Cnds.OnTapGestureObject,
		C3.Plugins.Sprite.Cnds.CompareFrame,
		C3.Plugins.System.Cnds.LayerVisible,
		C3.Plugins.System.Cnds.While,
		C3.Plugins.Touch.Exps.AbsoluteY,
		C3.Plugins.Touch.Exps.SpeedAt,
		C3.Plugins.PlatformInfo.Cnds.IsOniOS,
		C3.Plugins.PlatformInfo.Cnds.IsOnAndroid,
		C3.Plugins.advert.Acts.CreateInterstitial,
		C3.Plugins.advert.Acts.ShowInterstitial
	];
};
self.C3_JsPropNameTable = [
	{Ground: 0},
	{xx: 0},
	{yy: 0},
	{Letter: 0},
	{Word: 0},
	{Full: 0},
	{n: 0},
	{isSelected: 0},
	{HaveRealLetter: 0},
	{selectN: 0},
	{rightN: 0},
	{rightFlg: 0},
	{rightFree: 0},
	{Hint: 0},
	{MyNum: 0},
	{letterNumber: 0},
	{TargetX: 0},
	{TargetY: 0},
	{Text: 0},
	{Array_First: 0},
	{Array_Shuffled: 0},
	{Touch: 0},
	{Text2: 0},
	{Mouse: 0},
	{group: 0},
	{N: 0},
	{AllWidth: 0},
	{Row: 0},
	{myX: 0},
	{myLetter: 0},
	{myWord: 0},
	{full: 0},
	{Has9Patch: 0},
	{Flggg: 0},
	{hinted: 0},
	{LetterSpot: 0},
	{Dictionary: 0},
	{LSCam: 0},
	{letter: 0},
	{word: 0},
	{flg: 0},
	{ForHint: 0},
	{MiniLetter: 0},
	{parent: 0},
	{"9patch": 0},
	{hintnum: 0},
	{"9patch2": 0},
	{Pin: 0},
	{txtFoundWord: 0},
	{ArrayTxt: 0},
	{"9patch3": 0},
	{A_Rows: 0},
	{A_Cols: 0},
	{w: 0},
	{h: 0},
	{num: 0},
	{price: 0},
	{BtnShuffle: 0},
	{Circle: 0},
	{txtLength: 0},
	{Text3: 0},
	{Particles: 0},
	{BtnBoardHint: 0},
	{BtnLSHint: 0},
	{Bg: 0},
	{TiledBackground: 0},
	{txtDescription: 0},
	{txtCoins: 0},
	{txtLevel: 0},
	{txtLevelComplete: 0},
	{rotdir: 0},
	{rotspd: 0},
	{Bullet: 0},
	{Paper: 0},
	{BtnNext: 0},
	{Timer: 0},
	{FadeC: 0},
	{sizeN: 0},
	{BtnStar: 0},
	{BoardHintCircle: 0},
	{txtBoardHintCircle: 0},
	{ShuffleCircle: 0},
	{txtShuffleCircle: 0},
	{LSHintCircle: 0},
	{txtLSHintCircle: 0},
	{WordsList: 0},
	{MiniLetter2: 0},
	{BonusBox: 0},
	{BlackC: 0},
	{txtBonusWords: 0},
	{BigCoin: 0},
	{Pin3: 0},
	{BtnClose: 0},
	{Bar: 0},
	{BonusBg1: 0},
	{txtBonusNum: 0},
	{BonusBg2: 0},
	{BtnClaim: 0},
	{Sprite: 0},
	{Coin: 0},
	{GiftBarBg: 0},
	{Gift: 0},
	{giftNumTemp: 0},
	{GiftBar: 0},
	{txtGiftNum: 0},
	{Rotate: 0},
	{Shining: 0},
	{GiftDoor: 0},
	{GiftCoin: 0},
	{mbox: 0},
	{txtMBox: 0},
	{BtnGiftClaim: 0},
	{type: 0},
	{txtPrice: 0},
	{txtPriceBg: 0},
	{Browser: 0},
	{BtnPause: 0},
	{Keyboard: 0},
	{LocalStorage: 0},
	{BtnPlay: 0},
	{BtnSound: 0},
	{BtnInfo: 0},
	{Title: 0},
	{BtnMusic: 0},
	{Tween: 0},
	{Black: 0},
	{InfoBox: 0},
	{BtnLevel: 0},
	{txtBtnLevel: 0},
	{BtnBack: 0},
	{Sprite3: 0},
	{PlatformInfo: 0},
	{MobileAdvert: 0},
	{PauseBox: 0},
	{BtnReset: 0},
	{BtnHome: 0},
	{Audio: 0},
	{GameScore: 0},
	{FLetter: 0},
	{FLetterSpot: 0},
	{FButtons: 0},
	{FTxt: 0},
	{FTSprites: 0},
	{FTTexts: 0},
	{FT9Patchs: 0},
	{Size: 0},
	{MissedLetter: 0},
	{Description: 0},
	{Words: 0},
	{Words2: 0},
	{ShuffledWords: 0},
	{OrderedWords: 0},
	{LongestWord: 0},
	{HighestCol: 0},
	{SelectUID: 0},
	{SelectXX: 0},
	{SelectYY: 0},
	{SelectN: 0},
	{TouchDir: 0},
	{GlobalN: 0},
	{TypedWord: 0},
	{MoveN: 0},
	{LetterSpotsN: 0},
	{SpcBetweenLetters: 0},
	{SpcBetweenWords: 0},
	{SpcBetweenLettersY: 0},
	{LastLetterSpotPosX: 0},
	{StartY: 0},
	{TheRow: 0},
	{Typed: 0},
	{GRight: 0},
	{BoardWords: 0},
	{LevelFoundWords: 0},
	{AllFoundWords: 0},
	{FoundWordsNum: 0},
	{Shuffling: 0},
	{MovingFlg: 0},
	{ClickedOnButton: 0},
	{CenterX: 0},
	{LetterNumber: 0},
	{LevelDone: 0},
	{BoardHintNum: 0},
	{BarDelay: 0},
	{GiftNum: 0},
	{Coins: 0},
	{Pause: 0},
	{lv: 0},
	{length: 0},
	{pick: 0},
	{W: 0},
	{Dir: 0},
	{LetterUID: 0},
	{Direction: 0},
	{TheXX: 0},
	{Length: 0},
	{TheWord: 0},
	{abc: 0},
	{check: 0},
	{out: 0},
	{L: 0},
	{R: 0},
	{Num: 0},
	{vNum: 0},
	{WhichLine: 0},
	{Value: 0},
	{String: 0},
	{text: 0},
	{ByCoins: 0},
	{ShuffleButton: 0},
	{UID: 0},
	{Val1: 0},
	{Val2: 0},
	{Duration: 0},
	{Ease: 0},
	{vLevel: 0},
	{vSound: 0},
	{vMusic: 0},
	{vPassedLevels: 0},
	{vShuffleNum: 0},
	{vBoardHintNum: 0},
	{vLSHintNum: 0},
	{vAllFoundWords: 0},
	{vFoundWordsNum: 0},
	{vCoin: 0},
	{vGiftNum: 0},
	{Music: 0},
	{Sound: 0},
	{ScreenWidthTemp: 0},
	{ScreenHeightTemp: 0},
	{Info: 0},
	{DragScrollY: 0},
	{DragTouchY: 0},
	{DragTouchSpd: 0},
	{DragTouchDir: 0},
	{MaxTop: 0},
	{MinBottom: 0},
	{PassedLevels: 0},
	{Swipe: 0},
	{LevelSelectTimer: 0},
	{Dragging: 0},
	{AllLevels: 0},
	{AllLevelsN: 0},
	{Interstitial_ID: 0},
	{InterstitialVideo_ID: 0},
	{ShowVideoAd: 0},
	{Level: 0},
	{Name: 0},
	{SelectedN: 0},
	{vLastX: 0},
	{vLastY: 0},
	{v: 0},
	{Threes: 0},
	{Fours: 0},
	{Fives: 0},
	{Sixes: 0},
	{Sevens: 0},
	{Eights: 0},
	{Nines: 0},
	{Tens: 0}
];
}

{

const C3 = self.C3;

function unaryminus(n)
{
	return (typeof n === "number" ? -n : n);
}

function bothNumbers(a, b)
{
	return typeof a === "number" && typeof b === "number";
}

function add(l, r)
{
	if (bothNumbers(l, r))
		return l + r;
	else
		return l;
}

function subtract(l, r)
{
	if (bothNumbers(l, r))
		return l - r;
	else
		return l;
}

function multiply(l, r)
{
	if (bothNumbers(l, r))
		return l * r;
	else
		return l;
}

function divide(l, r)
{
	if (bothNumbers(l, r))
		return l / r;
	else
		return l;
}

function mod(l, r)
{
	if (bothNumbers(l, r))
		return l % r;
	else
		return l;
}

function pow(l, r)
{
	if (bothNumbers(l, r))
		return Math.pow(l, r);
	else
		return l;
}

function and(l, r)
{
	if (typeof l === "string" || typeof r === "string")
	{
		// & with either side string does string concatenation
		let lstr, rstr;

		if (typeof l === "number")
			lstr = (Math.round(l * 1e10) / 1e10).toString();
		else
			lstr = l;
		
		if (typeof r === "number")
			rstr = (Math.round(r * 1e10) / 1e10).toString();
		else
			rstr = r;
		
		return lstr + rstr;
	}
	else
	{
		// & with neither side a string does logical AND
		return (l && r ? 1 : 0);
	}
}

function or(l, r)
{
	if (bothNumbers(l, r))
		return (l || r ? 1 : 0);
	else
		return l;
}

self.C3_ExpressionFuncs = [
		() => "Start",
		() => "Game",
		() => 0.95,
		() => "Levels",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0(0) + 200);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(((v1.GetValue() + "1")).toString());
		},
		() => "BABY ANIMAL",
		() => ",LAMB,CALF,CUB,COLT,BUNNY,",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(((v1.GetValue() + "2")).toString());
		},
		() => "YOU WANT IT IN SUMMER",
		() => ",DRINK,SWIM,SHADE,RAIN,WIND,HAT,",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(((v1.GetValue() + "3")).toString());
		},
		() => "FEELS SOFT",
		() => ",PILLOW,QUILT,SILK,TISSUE,SKIN,SOFA,BREEZE,TOWEL,",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(((v1.GetValue() + "4")).toString());
		},
		() => "MAKE A PIZZA",
		() => ",ONION,BAKE,SAUSAGE,CHEESE,SAUCE,MUSHROOM,FLOUR,",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(((v1.GetValue() + "5")).toString());
		},
		() => "WISE CREATURE",
		() => ",MONKEY,FOX,HUMAN,CROW,WHALE,HORSE,",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(((v1.GetValue() + "6")).toString());
		},
		() => "IT'S SMALL",
		() => ",ANT,BEE,ATOM,FLY,DUST,KEY,BUG,PARTICLE,SEED,NAIL,",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(((v1.GetValue() + "7")).toString());
		},
		() => "MADE OF GRAIN",
		() => ",FLOUR,PIE,CAKE,COOKIE,MUFFIN,WHISKY,",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(((v1.GetValue() + "8")).toString());
		},
		() => "SMELL BEFORE BUYING",
		() => ",CANDLE,PERFUME,FLOWER,FRUIT,SOAP,FISH,LOTION,SHAMPOO,",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(((v1.GetValue() + "9")).toString());
		},
		() => "VITAMIN C ",
		() => ",STRAWBERRY,TOMATO,GRAPE,ORANGE,PEAR,SPINACH,LEMON,",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => (f0(((v1.GetValue() + "9")).toString()) + 1);
		},
		() => "PET ",
		() => ",DOG,PARROT,LIZARD,RABBIT,OTTER,CAT,",
		() => "HALLOWEEN PARTY",
		() => ",MASK,TRICK,CANDY,GHOST,TREAT,BAT,COSTUME,MAKEUP,",
		() => "IT'S AFRAID OF FIRE",
		() => ",COTTON,PAPER,TREE,ANIMAL,FOREST,GRASS,CABIN,HOUSE,SILK,",
		() => "WEDDING ",
		() => ",VOW,RING,KISS,DRESS,BLESSING,BRIDE,GROOM,MUSIC,BOUQUET,",
		() => "SHARP THINGS",
		() => ",KNIFE,MIND,TEETH,VOICE,TASTE,NOISE,",
		() => "WITH TAIL",
		() => ",FOX,CAT,FISH,PIG,GIRAFFE,COW,SQUIRREL,PANTHER,MOUSE,DINOSAUR,WOLF,",
		() => "SMELLS GOOD",
		() => ",PERFUME,ROSE,SOAP,VANILLA,PIZZA,MINT,SUNLIGHT,FOREST,",
		() => "SAILING ",
		() => ",SHIP,VESSEL,CAPTAIN,WIND,OCEAN,SAILOR,COMPASS,",
		() => "ON THE ROAD",
		() => ",SKYLINE,BIKE,PEOPLE,CAR,LIGHT,SIGN,TREE,STATION,",
		() => "TASTES SOUR",
		() => ",VINEGAR,LEMON,TOMATO,PLUM,RASPBERRY,LIME,PICKLE,ORANGE,YOGURT,",
		() => "BIRTHDAY ",
		() => ",CAKE,CARD,GIFT,BALLOON,RIBBON,PARTY,CANDLE,WISH,",
		() => "DESSERT ",
		() => ",PUDDING,CANDY,CAKE,MUFFIN,PIE,BROWNIE,TIRAMISU,",
		() => "MADE WITH GLASS",
		() => ",WINDOW,MIRROR,GOBLET,BULB,FISHBOWL,BEAKER,DECANTER,MAGNIFIER,SHOWCASE,FLASK,",
		() => "THE START",
		() => ",DAWN,SPRING,BABY,BUD,JANUARY,BIRTH,SEED,",
		() => "IT'S SLIPPERY",
		() => ",BUTTER,FISH,PEEL,SOAP,OIL,CREAM,ICE,MUD,SNAKE,",
		() => "PARTY ",
		() => ",DANCE,MUSIC,DRESS,CHAT,RELAX,DRINK,FOOD,CROWD,",
		() => "TWO ",
		() => ",CHICKEN,DUCK,GOOSE,OSTRICH,PEACOCK,CROW,SWAN,SPARROW,TURKEY,KANGAROO,",
		() => "IT'S SYMMETRIC",
		() => ",BODY,ROUND,DRAGONFLY,GLASSES,BUTTERFLY,BIRD,FACE,HEART,WINGS,",
		() => "RAINY DAY",
		() => ",MUD,CLOUD,WIND,WET,RUN,UMBRELLA,RAINCOAT,LAZY,",
		() => "ABOUT MILK",
		() => ",CHEESE,POWDER,CAKE,BREAKFAST,WHITE,CREAM,DAIRY,",
		() => "LOOKS LIKE A BALL",
		() => ",ORANGE,APPLE,PEACH,COCONUT,GRAPE,WATERMELON,EARTH,MOON,PEARL,SUN,BUBBLE,TOMATO,",
		() => "TOM AND JERRY",
		() => ",KID,FUNNY,CAT,MOUSE,CHEESE,DOG,CHILDHOOD,",
		() => "CARRY THINGS",
		() => ",CAR,TRAIN,BALLOON,BOX,SUITCASE,BAG,POCKET,",
		() => "ACCESSORY ",
		() => ",SCARF,GLOVES,HAT,BAG,WALLET,BROOCH,TIE,BELT,WATCH,GLASSES,STICK,FASHION,",
		() => "YOU MAY OFTEN LOSE IT",
		() => ",COIN,BILL,KEY,PEN,LID,NEEDLE,CARD,HAIRPIN,PASSWORD,SOCK,MIND,TIME,PHONE,",
		() => "WITH PATTERN",
		() => ",GIRAFFE,PUMPKIN,MELON,CLOTH,DEER,DRESS,",
		() => "METAL WORK",
		() => ",NAIL,SPRING,RAIL,KNIFE,COIN,PIN,STAPLE,PAN\n,",
		() => "WE CAN'T CATCH IT",
		() => ",CLOUD,LIGHTNING,WIND,TIME,SOUL,DREAM,SOUND,SECOND,TOMORROW,WILDANIMAL,",
		() => "HARD TO CLEAN",
		() => ",CHOCOLATE,OIL,BLOOD,INK,RUST,KEYBOARD,SAUCE\n,",
		() => "CAN'T BE BOUGHT",
		() => ",TALENT,FAMILY,LOVE,FRIENDSHIP,TIME,LIFE,TRUTH,",
		() => "RECORD TIME",
		() => ",CLOCK,WATCH,SUNDIAL,HISTORY,AGE,BELL,PHONE,CALENDAR,",
		() => "DELICIOUS ",
		() => ",STEAK,FISH,FRIES,DESSERT,HOTDOG,PIZZA,SOUP,PIE,BREAD,",
		() => "ON A DESK",
		() => ",PEN,NOTEBOOK,FOLDER,PAPER,TISSUE,LAPTOP,PHONE,CUP,COFFEE,INK\n,",
		() => "BIG ANIMAL",
		() => ",ELEPHANT,GIRAFFE,WHALE,DINOSAUR,BEAR,CROCODILE,CAMEL,",
		() => "BEAUTIFUL THINGS",
		() => ",DRESS,JEWELRY,SKY,PAINTING,FLOWER,DREAM,LANDSCAPE,MEMORY,SOUL,NATURE,GARDEN,",
		() => "BEACH ",
		() => ",SAND,SHELL,CHAIR,SUNSHADE,CRAB,BIKINI,SUNGLASSES,WIND\n,",
		() => "PAINT SET ",
		() => ",BRUSH,PIGMENT,ERASER,PENCIL,PALETTE,MARK,",
		() => "LIKE A LINE",
		() => ",EARPHONE,CHAIN,HAIR,BELT,LACE,RIBBON,SNAKE,WHIP,STRAW,ROPE,RIVER,PATH,TAIL,STRING,",
		() => "TOY BOX",
		() => ",DOLL,BLOCKS,CAR,BALL,TRAIN,JIGSAW,",
		() => "THINGS ABOVE YOU",
		() => ",STAR,AIRCRAFT,CLOUD,ROOF,CEILING,SKY,BOSS,SUN,MOON,BIRD,",
		() => "WARM ",
		() => ",SUMMER,FIRE,SPORT,COFFEE,TEA,BODY,LOVE,SMILE,SOUP,",
		() => "HANG ON ",
		() => ",COAT,PHOTO,CALENDAR,CLOCK,TOWEL,CURTAIN,PICTURE,MIRROR,",
		() => "WITH BUTTON",
		() => ",KEYBOARD,SWITCH,SHIRT,COMPUTER,ELEVATOR,DRYER,SUIT,LAPTOP,PHONE,WASHER,OVEN,COAT,MOUSE,",
		() => "FRIENDS ",
		() => ",MEMORY,COMEDY,TOGETHER,RACHEL,CHANDLER,MONICA,JOEY,ROSS,PHOEBE,",
		() => "FLOATING ",
		() => ",OIL,FEATHER,BOAT,ICE,BOTTLE,WOOD,BALL,LEAF,",
		() => "FOR A PICNIC",
		() => ",CLOTH,FOOD,FRUIT,JUICE,DRINK,FRIEND,FAMILY,BASKET,LAWN,",
		() => "HARD THINGS",
		() => ",COIN,STONE,STEEL,BONE,DIAMOND,SHELL,CRYSTAL,EXAM,STUDY,ROCK,SUCCESS,WIN,",
		() => "FRAGRANT FLOWERS",
		() => ",ROSE,JASMINE,LILY,LAVENDER,LILAC,TULIP,DAFFODIL,VIOLET\n,",
		() => "EAT IT IN ONE BITE",
		() => ",CANDY,SUSHI,MUSHROOM,NUT,BEAN,CHERRY,BERRY,CHOCOLATE,DUMPLING,OLIVE,ALMOND,SHRIMP,",
		() => "CAN BE CLOSED",
		() => ",CASE,DOOR,EYE,WINDOW,STORE,ROAD,",
		() => "ALLERGIC TO IT",
		() => ",POLLEN,FUR,MILK,EGG,PEANUT,DUST,FEATHER,ALCOHOL,",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(v1.GetValue(), " ", "");
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => ("," + v0.GetValue());
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			const f2 = p._GetNode(2).GetBoundMethod();
			const v3 = p._GetNode(3).GetVar();
			const f4 = p._GetNode(4).GetBoundMethod();
			return () => f0(f1((f2(v3.GetValue(), ",") / 2.5)), f4());
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => (v0.GetValue() + 2);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			const v2 = p._GetNode(2).GetVar();
			return () => (f0((f1() / (v2.GetValue() + 1))) / 1.1);
		},
		() => 0,
		() => "Starting Level",
		() => 0.1,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			return () => f0(n1.ExpInstVar());
		},
		() => "",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => (f0(v1.GetValue(), ",") - 1);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			const v2 = p._GetNode(2).GetVar();
			const f3 = p._GetNode(3).GetBoundMethod();
			return () => f0(f1(v2.GetValue(), f3(), ","));
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => v0.GetValue();
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => f0();
		},
		() => "col",
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => (v0.GetValue() - 1);
		},
		() => "row",
		p => {
			const v0 = p._GetNode(0).GetVar();
			const f1 = p._GetNode(1).GetBoundMethod();
			const v2 = p._GetNode(2).GetVar();
			return () => ((v0.GetValue() / 2) + (f1("row") * v2.GetValue()));
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => (f0(0) - (v1.GetValue() * 2));
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0("row") + 1);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0("col") + 1);
		},
		() => 1,
		p => {
			const n0 = p._GetNode(0);
			const v1 = p._GetNode(1).GetVar();
			const f2 = p._GetNode(2).GetBoundMethod();
			const v3 = p._GetNode(3).GetVar();
			return () => ((n0.ExpObject() - (v1.GetValue() / 2)) - (f2("col") * v3.GetValue()));
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpInstVar() / 100);
		},
		p => {
			const n0 = p._GetNode(0);
			return () => n0.ExpObject();
		},
		() => "pos",
		p => {
			const n0 = p._GetNode(0);
			return () => n0.ExpInstVar();
		},
		() => 0.3,
		() => "out smooth",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const f2 = p._GetNode(2).GetBoundMethod();
			return () => f0(v1.GetValue(), f2(), ",");
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			return () => Math.floor(f0(n1.ExpObject()));
		},
		p => {
			const n0 = p._GetNode(0);
			const v1 = p._GetNode(1).GetVar();
			return () => n0.ExpObject(v1.GetValue());
		},
		p => {
			const n0 = p._GetNode(0);
			const v1 = p._GetNode(1).GetVar();
			return () => and(n0.ExpObject(v1.GetValue()), ",");
		},
		() => "word",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const f2 = p._GetNode(2).GetBoundMethod();
			return () => f0(v1.GetValue(), f2("word"), ",");
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => f0("R", "L", "T", "B");
		},
		() => "R",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(v1.GetValue());
		},
		p => {
			const n0 = p._GetNode(0);
			const f1 = p._GetNode(1).GetBoundMethod();
			return () => (n0.ExpInstVar() + f1());
		},
		() => 2,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const f2 = p._GetNode(2).GetBoundMethod();
			return () => f0(v1.GetValue(), f2(), "");
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			const v2 = p._GetNode(2).GetVar();
			const f3 = p._GetNode(3).GetBoundMethod();
			return () => f0(f1(v2.GetValue(), f3(), ""));
		},
		() => "L",
		p => {
			const n0 = p._GetNode(0);
			const f1 = p._GetNode(1).GetBoundMethod();
			return () => (n0.ExpInstVar() - f1());
		},
		() => "T",
		() => "B",
		() => "Creating Missed Letters",
		() => 0.2,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(v1.GetValue(), 0, "");
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const f2 = p._GetNode(2).GetBoundMethod();
			const v3 = p._GetNode(3).GetVar();
			return () => f0(v1.GetValue(), (f2(v3.GetValue()) - 1));
		},
		() => "Touching",
		() => "selected",
		() => "Default",
		() => "SelectN",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			const n2 = p._GetNode(2);
			const v3 = p._GetNode(3).GetVar();
			return () => (f0(((n1.ExpObject() - n2.ExpObject()) / v3.GetValue())) + 1);
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpInstVar() - 1);
		},
		() => "true",
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpInstVar() + 1);
		},
		p => {
			const n0 = p._GetNode(0);
			return () => n0.ExpInstVar_Family();
		},
		() => -1,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			return () => f0(n1.ExpObject());
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			return () => Math.abs((f0() - n1.ExpObject()));
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => (v0.GetValue() + 10);
		},
		p => {
			const n0 = p._GetNode(0);
			const f1 = p._GetNode(1).GetBoundMethod();
			return () => Math.abs((n0.ExpObject() - f1()));
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const v2 = p._GetNode(2).GetVar();
			return () => f0(v1.GetValue(), (("," + v2.GetValue()) + ","));
		},
		() => "correct",
		() => "ver",
		() => "hor",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			const f2 = p._GetNode(2).GetBoundMethod();
			const v3 = p._GetNode(3).GetVar();
			const v4 = p._GetNode(4).GetVar();
			return () => f0(n1.ExpObject((f2(v3.GetValue())).toString()), (("." + v4.GetValue()) + "."));
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const v2 = p._GetNode(2).GetVar();
			return () => f0(v1.GetValue(), (("." + v2.GetValue()) + "."));
		},
		() => "extra",
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => (v0.GetValue() + ".");
		},
		() => "WordSwipe_AllFoundWords",
		() => "WordSwipe_LevelFoundWords",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			return () => f0(n1.ExpInstVar_Family());
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			const f2 = p._GetNode(2).GetBoundMethod();
			const n3 = p._GetNode(3);
			const n4 = p._GetNode(4);
			const n5 = p._GetNode(5);
			const f6 = p._GetNode(6).GetBoundMethod();
			const n7 = p._GetNode(7);
			const n8 = p._GetNode(8);
			const n9 = p._GetNode(9);
			const n10 = p._GetNode(10);
			return () => (f0(n1.ExpObject(), f2(n3.ExpObject(), n4.ExpObject(), n5.ExpObject()), f6(n7.ExpObject(), n8.ExpObject(), n9.ExpObject())) + (n10.ExpInstVar() * 35));
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			const f2 = p._GetNode(2).GetBoundMethod();
			const n3 = p._GetNode(3);
			const n4 = p._GetNode(4);
			const n5 = p._GetNode(5);
			const f6 = p._GetNode(6).GetBoundMethod();
			const n7 = p._GetNode(7);
			const n8 = p._GetNode(8);
			const n9 = p._GetNode(9);
			return () => f0(n1.ExpObject(), f2(n3.ExpObject(), n4.ExpObject(), n5.ExpObject()), f6(n7.ExpObject(), n8.ExpObject(), n9.ExpObject()));
		},
		() => 0.7,
		() => "in back",
		() => "size",
		() => 60,
		() => 0.6,
		() => "WordSwipe_FoundWordsNum",
		() => "Moving Letters (Falling)",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const v2 = p._GetNode(2).GetVar();
			return () => f0(v1.GetValue(), (("," + v2.GetValue()) + ","), ",");
		},
		p => {
			const n0 = p._GetNode(0);
			const v1 = p._GetNode(1).GetVar();
			const v2 = p._GetNode(2).GetVar();
			return () => (n0.ExpObject() + (v1.GetValue() * v2.GetValue()));
		},
		p => {
			const n0 = p._GetNode(0);
			const v1 = p._GetNode(1).GetVar();
			return () => (n0.ExpObject() + v1.GetValue());
		},
		() => "Moving Letters (Right/Left)",
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => (v0.GetValue() + 1);
		},
		p => {
			const n0 = p._GetNode(0);
			const v1 = p._GetNode(1).GetVar();
			return () => (n0.ExpInstVar() + v1.GetValue());
		},
		p => {
			const n0 = p._GetNode(0);
			const n1 = p._GetNode(1);
			const v2 = p._GetNode(2).GetVar();
			return () => (n0.ExpObject() + (n1.ExpInstVar_Family() * v2.GetValue()));
		},
		() => "out quint",
		() => "Ordering Words",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => (f0(v1.GetValue(), ",") - 2);
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => (v0.GetValue() + ",");
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => f0(v1.GetValue(), ",");
		},
		() => "Setting Letters Frame",
		() => 26,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const v2 = p._GetNode(2).GetVar();
			return () => f0(v1.GetValue(), v2.GetValue());
		},
		() => "Creating LetterSpots",
		() => "letter",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			const v2 = p._GetNode(2).GetVar();
			const v3 = p._GetNode(3).GetVar();
			return () => (f0(f1(v2.GetValue(), v3.GetValue(), ",")) - 1);
		},
		() => "LetterSpots",
		p => {
			const v0 = p._GetNode(0).GetVar();
			const f1 = p._GetNode(1).GetBoundMethod();
			const v2 = p._GetNode(2).GetVar();
			return () => (v0.GetValue() + (f1("letter") * v2.GetValue()));
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0("letter") + 1);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			const v2 = p._GetNode(2).GetVar();
			const v3 = p._GetNode(3).GetVar();
			const v4 = p._GetNode(4).GetVar();
			return () => (f0(f1(v2.GetValue(), v3.GetValue(), ",")) * v4.GetValue());
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			const v2 = p._GetNode(2).GetVar();
			const v3 = p._GetNode(3).GetVar();
			const f4 = p._GetNode(4).GetBoundMethod();
			return () => f0(f1(v2.GetValue(), v3.GetValue(), ","), f4("letter"), "");
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const v2 = p._GetNode(2).GetVar();
			return () => f0(v1.GetValue(), v2.GetValue(), ",");
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => f0("letter");
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0() - 10);
		},
		p => {
			const n0 = p._GetNode(0);
			const n1 = p._GetNode(1);
			const v2 = p._GetNode(2).GetVar();
			return () => ((n0.ExpObject() + n1.ExpInstVar_Family()) + v2.GetValue());
		},
		p => {
			const n0 = p._GetNode(0);
			const n1 = p._GetNode(1);
			const v2 = p._GetNode(2).GetVar();
			return () => ((n0.ExpObject() + n1.ExpInstVar()) + v2.GetValue());
		},
		() => 40,
		p => {
			const n0 = p._GetNode(0);
			const n1 = p._GetNode(1);
			return () => (n0.ExpObject() + n1.ExpInstVar());
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const n2 = p._GetNode(2);
			const v3 = p._GetNode(3).GetVar();
			return () => (f0(((v1.GetValue() - n2.ExpObject()) / v3.GetValue())) + 1);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => (f0(v1.GetValue(), ",") / 5);
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			const v1 = p._GetNode(1).GetVar();
			return () => ((v0.GetValue() + v1.GetValue()) / 2);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0() / 2);
		},
		() => "opacity",
		() => 20,
		() => -999,
		() => 0.5,
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpInstVar_Family() + 15);
		},
		p => {
			const n0 = p._GetNode(0);
			const n1 = p._GetNode(1);
			return () => (n0.ExpObject() + (n1.ExpObject() / 2));
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() + 3);
		},
		() => "Creating MiniLetter",
		() => "out quart",
		() => 100,
		() => 0.35,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => f0(3, 10);
		},
		() => "Texts",
		() => "{\"c2array\":true,\"size\":[2,26,1],\"data\":[[[10],[16],[17],[20],[21],[23],[24],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[38],[39],[40],[43],[44],[46],[52],[60]],[[\" \"],[\"Il'|\"],[\"i.,;:!\"],[\"`\"],[\"j1 \"],[\"\\\"[\"],[\"ft()]\"],[\"r\"],[\"-~\\\\\"],[\"s=<>\"],[\"c°\"],[\"az?_+\"],[\"Lx*\"],[\"Fbdeghknopqu\"],[\"BCDEGOQSUvy23567/$\"],[\"HJNPRZ0489£\"],[\"KT\"],[\"X\"],[\"AVY€\"],[\"M\"],[\"#&\"],[\"@\"],[\"w\"],[\"m\"],[\"W\"],[\"$\"]]]}",
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() - 1);
		},
		p => {
			const n0 = p._GetNode(0);
			const f1 = p._GetNode(1).GetBoundMethod();
			return () => n0.ExpObject(1, f1());
		},
		p => {
			const n0 = p._GetNode(0);
			const f1 = p._GetNode(1).GetBoundMethod();
			return () => n0.ExpObject(0, f1());
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => and(v0.GetValue(), "$");
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => and("LEVEL ", v0.GetValue());
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => ((and("LEVEL ", v0.GetValue()) + "\n") + " COMPLETED");
		},
		() => "Camera",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			const n2 = p._GetNode(2);
			return () => C3.lerp(f0(), ((n1.ExpObject() + n2.ExpObject()) / 2), 0.2);
		},
		() => 910,
		p => {
			const n0 = p._GetNode(0);
			const n1 = p._GetNode(1);
			return () => ((n0.ExpObject() + n1.ExpObject()) / 2);
		},
		() => "Strings",
		() => "rows",
		() => "cols",
		p => {
			const n0 = p._GetNode(0);
			const f1 = p._GetNode(1).GetBoundMethod();
			return () => and("_", n0.ExpObject(f1()));
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			const f2 = p._GetNode(2).GetBoundMethod();
			return () => and("_", f0((n1.ExpObject(f2())).toString()));
		},
		p => {
			const n0 = p._GetNode(0);
			const v1 = p._GetNode(1).GetVar();
			const n2 = p._GetNode(2);
			return () => and(n0.ExpObject(v1.GetValue()), n2.ExpInstVar());
		},
		p => {
			const n0 = p._GetNode(0);
			const v1 = p._GetNode(1).GetVar();
			return () => and(n0.ExpObject(v1.GetValue()), "-");
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			return () => (f0(v1.GetValue()) + 1);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const f2 = p._GetNode(2).GetBoundMethod();
			const v3 = p._GetNode(3).GetVar();
			const v4 = p._GetNode(4).GetVar();
			return () => f0(v1.GetValue(), (f2(v3.GetValue()) - v4.GetValue()), "");
		},
		() => 99999999999,
		() => "LevelTimer",
		p => {
			const n0 = p._GetNode(0);
			return () => n0.ExpBehavior("LevelTimer");
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const f2 = p._GetNode(2).GetBoundMethod();
			const v3 = p._GetNode(3).GetVar();
			const f4 = p._GetNode(4).GetBoundMethod();
			return () => f0(v1.GetValue(), f2(v3.GetValue(), f4(), ","));
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const f2 = p._GetNode(2).GetBoundMethod();
			const v3 = p._GetNode(3).GetVar();
			const f4 = p._GetNode(4).GetBoundMethod();
			return () => f0(v1.GetValue(), (("," + f2(v3.GetValue(), f4(), ",")) + ","));
		},
		() => "Circle + its number",
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() - 15);
		},
		() => "Shuffling ",
		() => "Shuffle",
		() => 3,
		() => "WordSwipe_Coin",
		p => {
			const n0 = p._GetNode(0);
			return () => subtract(n0.ExpObject("Shuffle"), 1);
		},
		() => "WordSwipe_Shuffle",
		p => {
			const n0 = p._GetNode(0);
			return () => n0.ExpObject("Shuffle");
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() + 15);
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() - 2);
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() + 4);
		},
		() => "item",
		() => 0.4,
		() => "BoardHint",
		() => 90,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			return () => f0(n1.ExpInstVar(), 0, "");
		},
		p => {
			const n0 = p._GetNode(0);
			return () => subtract(n0.ExpObject("BoardHint"), 1);
		},
		() => "WordSwipe_BoardHint",
		p => {
			const n0 = p._GetNode(0);
			return () => n0.ExpObject("BoardHint");
		},
		() => "LSHint",
		p => {
			const n0 = p._GetNode(0);
			return () => subtract(n0.ExpObject("LSHint"), 1);
		},
		() => "WordSwipe_LSHint",
		p => {
			const n0 = p._GetNode(0);
			return () => n0.ExpObject("LSHint");
		},
		() => "Level Done",
		() => 1.5,
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() + 0.1);
		},
		() => 2.2,
		() => ",",
		() => "complete",
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() + 120);
		},
		() => "out back",
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() + 110);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0(0) - 200);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => ((f0() / 2) - 200);
		},
		() => 483,
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() + 100);
		},
		() => 5,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			return () => (((f0() / 2) + n1.ExpObject()) + 100);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => f0(1, 2);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => f0(5, 10);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => f0(0);
		},
		() => 30,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0() / 150);
		},
		() => "HUD",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			return () => f0(100, (f1() - 100));
		},
		() => 500,
		() => 1000,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => f0(360);
		},
		() => "Fade Layer",
		() => "Fade",
		() => "Bonus Words",
		() => "txtBonus + BonusBgs",
		() => 1760,
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => and(v0.GetValue(), "/25");
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() - 4);
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() + 20);
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() + 25);
		},
		() => 25,
		() => "BonusWords",
		() => "width",
		() => 50,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			const v2 = p._GetNode(2).GetVar();
			return () => f0(50, f1(720, ((v2.GetValue() + 2) * 26.5)));
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpInstVar() + 30);
		},
		() => "Black",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			return () => (f0(0) + n1.ExpObject());
		},
		() => 70,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			return () => ((f0() / 2) + (n1.ExpObject() / 2));
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			const f2 = p._GetNode(2).GetBoundMethod();
			const v3 = p._GetNode(3).GetVar();
			const f4 = p._GetNode(4).GetBoundMethod();
			const v5 = p._GetNode(5).GetVar();
			return () => f0(f1(f2(v3.GetValue(), (f4(v5.GetValue()) - 1)), ".", "   "));
		},
		() => 2.5,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0() / 20);
		},
		p => {
			const n0 = p._GetNode(0);
			const f1 = p._GetNode(1).GetBoundMethod();
			return () => (n0.ExpObject() + f1((-100), 100));
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0() - 50);
		},
		() => "Gift Bar",
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() + 10);
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() + 6);
		},
		() => 99,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const v2 = p._GetNode(2).GetVar();
			return () => f0(v1.GetValue(), (and(",", (v2.GetValue() + 1)) + ","));
		},
		() => "WordSwipe_GiftNum",
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => and(v0.GetValue(), "/5");
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => (v0.GetValue() * 135);
		},
		() => "out circle",
		() => "angle",
		() => 110,
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() - 150);
		},
		() => 150,
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() - 100);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0(0) + 100);
		},
		p => {
			const n0 = p._GetNode(0);
			const n1 = p._GetNode(1);
			return () => ((n0.ExpObject() + n1.ExpObject()) + 50);
		},
		p => {
			const n0 = p._GetNode(0);
			return () => n0.ExpObject(1);
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => (and("+", v0.GetValue()) + "$");
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0() / 30);
		},
		() => "txtPrice",
		() => "shuffle",
		p => {
			const n0 = p._GetNode(0);
			return () => and(n0.ExpInstVar(), "$");
		},
		() => "boardhint",
		() => "lshint",
		() => "Tweens",
		() => "scale",
		() => "Buttons",
		() => 95,
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const v2 = p._GetNode(2).GetVar();
			return () => f0(v1.GetValue(), (and(",", v2.GetValue()) + ","));
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => and(v0.GetValue(), ",");
		},
		() => "WordSwipe_PassedLevels",
		() => "Pause",
		() => "LevelComplete",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const n1 = p._GetNode(1);
			return () => (f0(0) - (n1.ExpObject() * 1.5));
		},
		() => "Local Storage",
		() => "WordSwipe_Lv",
		() => ",1,",
		() => ".",
		() => "Sounds",
		() => "click",
		() => -10,
		() => -5,
		() => "select",
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => (v0.GetValue()).toString();
		},
		() => "music",
		() => "Info",
		() => "Bg + Responsive ",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			return () => (f0(0) - f1(0));
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			return () => (f0(0) + 40);
		},
		() => "Buttons ",
		() => "Menu",
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpInstVar_Family() * (90 / 100));
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpInstVar() * (90 / 100));
		},
		() => 15,
		() => "Levels_Top",
		() => "Levels Layer",
		() => "Create Level Buttons",
		() => 130,
		() => 390,
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => (v0.GetValue() + 205);
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => (v0.GetValue() + 215);
		},
		p => {
			const n0 = p._GetNode(0);
			return () => (n0.ExpObject() - 5);
		},
		() => "Swipe",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			return () => (f0(f1(0)) * 1.9);
		},
		p => {
			const v0 = p._GetNode(0).GetVar();
			return () => (v0.GetValue() / 1.06);
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			const f2 = p._GetNode(2).GetBoundMethod();
			const n3 = p._GetNode(3);
			const f4 = p._GetNode(4).GetBoundMethod();
			const n5 = p._GetNode(5);
			const v6 = p._GetNode(6).GetVar();
			const v7 = p._GetNode(7).GetVar();
			const f8 = p._GetNode(8).GetBoundMethod();
			return () => f0((f1() / 2), f2(((n3.ExpObject() - (f4() / 2)) + n5.ExpObject()), (v6.GetValue() + ((v7.GetValue() - f8()) * 3))));
		},
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const f1 = p._GetNode(1).GetBoundMethod();
			const f2 = p._GetNode(2).GetBoundMethod();
			const n3 = p._GetNode(3);
			const f4 = p._GetNode(4).GetBoundMethod();
			const n5 = p._GetNode(5);
			const f6 = p._GetNode(6).GetBoundMethod();
			const v7 = p._GetNode(7).GetVar();
			const v8 = p._GetNode(8).GetVar();
			return () => f0((f1() / 2), f2(((n3.ExpObject() - (f4() / 2)) + n5.ExpObject()), (f6() + (v7.GetValue() * (v8.GetValue() / 100)))));
		},
		() => "PassedLevels",
		p => {
			const f0 = p._GetNode(0).GetBoundMethod();
			const v1 = p._GetNode(1).GetVar();
			const n2 = p._GetNode(2);
			return () => f0(v1.GetValue(), (and(",", n2.ExpInstVar()) + ","));
		},
		() => "Level Select Timer",
		() => "Admob",
		() => ".aah.aal.aas.aba.abo.abs.aby.ace.act.add.ado.ads.adz.aff.aft.aga.age.ago.ags.aha.ahi.ahs.aid.ail.aim.ain.air.ais.ait.ala.alb.ale.all.alp.als.alt.ama.ami.amp.amu.ana.and.ane.ani.ant.any.ape.apo.app.apt.arb.arc.are.arf.ark.arm.ars.art.ash.ask.asp.ate.att.auk.ava.ave.avo.awa.awe.awl.awn.axe.aye.ays.azo.baa.bad.bag.bah.bal.bam.ban.bap.bar.bas.bat.bay.bed.bee.beg.bel.ben.bes.bet.bey.bib.bid.big.bin.bio.bis.bit.biz.boa.bob.bod.bog.boo.bop.bos.bot.bow.box.boy.bra.bro.brr.bub.bud.bug.bun.bur.bus.but.buy.bye.bys.cab.cad.cam.can.cap.car.cat.caw.cay.cee.cel.cep.chi.cig.cis.cob.cod.cog.col.con.coo.cop.cor.cos.cot.cow.coy.coz.cru.cry.cub.cud.cue.cup.cur.cut.cwm.dab.dad.dag.dah.dak.dal.dam.dan.dap.daw.day.deb.dee.def.dei.del.den.des.dev.dew.dex.dey.dib.did.die.dif.dig.dim.din.dip.dis.dit.dna.doc.doe.dog.dol.dom.don.dor.dos.dot.dow.dry.dub.dud.due.dug.duh.dui.dun.duo.dup.dux.dye.ear.eat.eau.ebb.ecu.edh.eds.eek.eel.eff.efs.eft.egg.ego.eke.eld.elf.elk.ell.elm.els.eme.emf.ems.emu.end.eng.ens.eon.era.ere.erg.ern.err.ers.ess.eta.eth.eve.ewe.eye.fab.fad.fan.far.fas.fat.fax.fay.fed.fee.feh.fem.fen.fer.fes.fet.feu.few.fey.fez.fib.fid.fie.fig.fil.fin.fir.fit.fix.fiz.flu.fly.fob.foe.fog.foh.fon.fop.for.fou.fox.foy.fro.fry.fub.fud.fug.fun.fur.gab.gad.gae.gag.gal.gam.gan.gap.gar.gas.gat.gay.ged.gee.gel.gem.gen.get.gey.ghi.gib.gid.gie.gig.gin.gip.git.gnu.goa.gob.god.goo.gor.gos.got.gox.goy.gul.gum.gun.gut.guv.guy.gym.gyp.had.hae.hag.hah.haj.ham.hao.hap.has.hat.haw.hay.heh.hem.hen.hep.her.hes.het.hew.hex.hey.hic.hid.hie.him.hin.hip.his.hit.hmm.hob.hod.hoe.hog.hon.hop.hos.hot.how.hoy.hub.hue.hug.huh.hum.hun.hup.hut.hyp.ice.ich.ick.icy.ids.iff.ifs.igg.ilk.ill.imp.ink.inn.ins.ion.ire.irk.ism.its.ivy.jab.jag.jam.jar.jaw.jay.jee.jet.jeu.jib.jig.jin.job.joe.jog.jot.jow.joy.jug.jun.jus.jut.kab.kae.kaf.kas.kat.kay.kea.ked.kef.keg.ken.kep.kev.kex.key.khi.kid.kif.kin.kip.kir.kis.kit.koa.kob.koi.kop.kor.kos.kue.kye.lab.lac.lad.lag.lam.lap.lar.las.lat.lav.law.lax.lay.lea.led.lee.leg.lei.lek.les.let.leu.lev.lex.ley.lez.lib.lid.lie.lin.lip.lis.lit.lob.log.loo.lop.lot.low.lox.lug.lum.luv.lux.lye.mac.mad.mae.mag.man.map.mar.mas.mat.maw.max.may.med.meg.mel.mem.men.met.mew.mho.mib.mic.mid.mig.mil.mim.mir.mis.mix.moa.mob.moc.mod.mog.mol.mom.mon.moo.mop.mor.mos.mot.mow.mud.mug.mum.mun.mus.mut.myc.nab.nae.nag.nah.nam.nan.nap.naw.nay.neb.nee.neg.net.new.nib.nil.nim.nip.nit.nix.nod.nog.noh.nom.noo.nor.nos.not.now.nth.nub.nun.nus.nut.oaf.oak.oar.oat.oba.obe.obi.oca.oda.odd.ode.ods.oes.off.oft.ohm.oho.ohs.oil.oka.oke.old.ole.oms.one.ono.ons.ooh.oot.ope.ops.opt.ora.orb.orc.ore.ors.ort.ose.oud.our.out.ova.owe.owl.own.oxo.oxy.pac.pad.pah.pal.pam.pan.pap.par.pas.pat.paw.pax.pay.pea.pec.ped.pee.peg.peh.pen.pep.per.pes.pet.pew.phi.pht.pia.pic.pie.pig.pin.pip.pis.pit.piu.pix.ply.pod.poh.poi.pol.pom.poo.pop.pot.pow.pox.pro.pry.psi.pst.pub.pud.pug.pul.pun.pup.pur.pus.put.pya.pye.pyx.qat.qis.qua.rad.rag.rah.rai.raj.ram.ran.rap.ras.rat.raw.rax.ray.reb.rec.red.ree.ref.reg.rei.rem.rep.res.ret.rev.rex.rho.ria.rib.rid.rif.rig.rim.rin.rip.rob.roc.rod.roe.rom.rot.row.rub.rue.rug.rum.run.rut.rya.rye.sab.sac.sad.sae.sag.sal.sap.sat.sau.saw.sax.say.sea.sec.see.seg.sei.sel.sen.ser.set.sew.sha.she.shh.shy.sib.sic.sim.sin.sip.sir.sis.sit.six.ska.ski.sky.sly.sob.sod.sol.som.son.sop.sos.sot.sou.sow.sox.soy.spa.spy.sri.sty.sub.sue.suk.sum.sun.sup.suq.syn.tab.tad.tae.tag.taj.tam.tan.tao.tap.tar.tas.tat.tau.tav.taw.tax.tea.ted.tee.teg.tel.ten.tet.tew.the.tho.thy.tic.tie.til.tin.tip.tis.tod.toe.tog.tom.ton.too.top.tor.tot.tow.toy.try.tsk.tub.tug.tui.tun.tup.tut.tux.twa.two.tye.udo.ugh.uke.ulu.umm.ump.uns.upo.ups.urb.urd.urn.urp.use.uta.ute.uts.vac.van.var.vas.vat.vau.vav.vaw.vee.veg.vet.vex.via.vid.vie.vig.vim.vin.vis.voe.von.vow.vox.vug.vum.wab.wad.wae.wag.wan.wap.war.was.wat.waw.wax.way.web.wed.wee.wen.wet.wha.who.why.wig.win.wis.wit.wiz.woe.wok.won.woo.wop.wos.wot.wow.wry.wud.wye.wyn.xis.yag.yah.yak.yam.yap.yar.yaw.yay.yea.yeh.yen.yep.yes.yet.yew.yin.yip.yob.yod.yok.yom.yon.you.yow.yuk.yum.yup.zag.zap.zas.zax.zed.zee.zek.zen.zep.zig.zin.zip.zit.zoa.zoo.zuz.zzz.",
		() => ".aahs.aals.abas.abba.abbe.abed.abet.able.ably.abos.abri.abut.abye.abys.aced.aces.ache.achy.acid.acme.acne.acre.acta.acts.acyl.adds.adit.ados.adze.aeon.aero.aery.afar.afro.agar.agas.aged.agee.ager.ages.agha.agin.agio.agly.agma.agog.agon.ague.ahed.ahem.ahis.ahoy.aide.aids.ails.aims.ains.airn.airs.airt.airy.aits.ajar.ajee.akee.akin.alae.alan.alar.alas.alba.albs.alec.alee.alef.ales.alfa.alga.alif.alit.alky.alls.ally.alma.alme.alms.aloe.alow.alps.also.alto.alts.alum.amah.amas.ambo.amen.amia.amid.amie.amin.amir.amis.ammo.amok.amps.amus.amyl.anas.ands.anes.anew.anga.anil.anis.ankh.anna.anoa.anon.ansa.anta.ante.anti.ants.aped.aper.apes.apex.apod.apos.apps.apse.aqua.arak.arbs.arch.arco.arcs.area.ares.arfs.aria.arid.aril.arks.arms.army.arts.arty.arum.arvo.aryl.asci.asea.ashy.asks.asps.atap.ates.atma.atom.atop.auks.auld.aunt.aura.auto.aver.aves.avid.avos.avow.away.awed.awee.awes.awls.awns.awny.awol.awry.axal.axed.axel.axes.axil.axis.axle.axon.ayah.ayes.ayin.azan.azon.baal.baas.baba.babe.babu.baby.bach.back.bade.bads.baff.bags.baht.bail.bait.bake.bald.bale.balk.ball.balm.bals.bams.band.bane.bang.bani.bank.bans.baps.barb.bard.bare.barf.bark.barm.barn.bars.base.bash.bask.bass.bast.bate.bath.bats.batt.baud.bawd.bawl.bays.bead.beak.beam.bean.bear.beat.beau.beck.beds.bedu.beef.been.beep.beer.bees.beet.begs.bell.bels.belt.bema.bend.bene.bens.bent.berg.berk.berm.best.beta.beth.bets.bevy.beys.bhut.bias.bibb.bibs.bice.bide.bidi.bids.bier.biff.biga.bigs.bike.bile.bilk.bill.bima.bind.bine.bins.bint.biog.bios.bird.birk.birl.biro.birr.bise.bisk.bite.bits.bitt.bize.blab.blae.blah.blam.blat.blaw.bleb.bled.blet.blew.blin.blip.blob.bloc.blog.blot.blow.blub.blue.blur.boar.boas.boat.bobs.bock.bode.bods.body.boff.bogs.bogy.boho.boil.bola.bold.bole.boll.bolo.bolt.bomb.bond.bone.bong.bonk.bony.book.boom.boon.boor.boos.boot.bops.bora.bore.bork.born.bort.bosh.bosk.boss.bota.both.bots.bott.bout.bowl.bows.boxy.boyo.boys.bozo.brad.brae.brag.bran.bras.brat.braw.bray.bred.bree.bren.brew.brie.brig.brim.brin.brio.bris.brit.broo.bros.brow.brrr.brut.brux.bubo.bubs.bubu.buck.buds.buff.bugs.buhl.buhr.bulb.bulk.bull.bumf.bump.bums.buna.bund.bung.bunk.bunn.buns.bunt.buoy.bura.burb.burd.burg.burl.burn.burp.burr.burs.bury.bush.busk.buss.bust.busy.bute.buts.buys.buzz.byes.byre.byrl.byte.cabs.caca.cade.cadi.cads.cafe.caff.cage.cagy.caid.cain.cake.caky.calf.calk.call.calm.calo.calx.came.camo.camp.cams.cane.cans.cant.cape.caph.capo.caps.carb.card.care.cark.carl.carn.carp.carr.cars.cart.casa.case.cash.cask.cast.cate.cats.caul.cave.cavy.caws.cays.ceca.cede.cedi.cees.ceil.cell.cels.celt.cent.cepe.ceps.cere.cero.cess.cete.chad.chai.cham.chao.chap.char.chat.chaw.chay.chef.chew.chez.chia.chic.chid.chin.chip.chis.chit.chon.chop.chow.chub.chug.chum.ciao.cigs.cine.cion.cire.cist.cite.city.clad.clag.clam.clan.clap.claw.clay.clef.clew.clip.clod.clog.clon.clop.clot.cloy.club.clue.coal.coat.coax.cobb.cobs.coca.coco.coda.code.cods.coed.coff.coft.cogs.coho.coif.coil.coin.coir.coke.coky.cola.cold.cole.cols.colt.coly.coma.comb.come.comp.cone.coni.conk.conn.cons.cony.coof.cook.cool.coop.coos.coot.cope.cops.copy.cord.core.corf.cork.corm.corn.cors.cory.cosh.coss.cost.cosy.cote.cots.coup.cove.cowl.cows.cowy.coxa.coys.cozy.crab.crag.cram.craw.cred.crew.crib.cris.crit.croc.crop.crow.crud.crus.crux.cube.cubs.cuds.cued.cues.cuff.cuif.cuke.cull.culm.cult.cups.curb.curd.cure.curf.curl.curn.curr.curs.curt.cusk.cusp.cuss.cute.cuts.cwms.cyan.cyma.cyme.cyst.czar.dabs.dace.dada.dado.dads.daff.daft.dago.dags.dahl.dahs.dais.daks.dale.dals.dame.damp.dams.dang.dank.dans.daps.darb.dare.dark.darn.dart.dash.data.date.dato.daub.daut.davy.dawk.dawn.daws.dawt.days.daze.dead.deaf.deal.dean.dear.debs.debt.deck.deco.deed.deem.deep.deer.dees.deet.defi.deft.defy.deil.deke.dele.delf.deli.dell.dels.delt.deme.demo.demy.dene.deni.dens.dent.deny.dere.derm.desk.deva.devs.dews.dewy.dexy.deys.dhak.dhal.dhow.dial.dibs.dice.dido.didy.died.diel.dies.diet.diff.difs.digs.dike.dill.dime.dims.dine.ding.dino.dins.dint.diol.dips.dipt.dire.dirk.dirl.dirt.disc.dish.disk.diss.dita.dite.dits.ditz.diva.dive.djin.doat.doby.dock.docs.dodo.doer.does.doff.doge.dogs.dogy.doit.dojo.dole.doll.dols.dolt.dome.doms.dona.done.dong.dons.doom.door.dopa.dope.dopy.dore.dork.dorm.dorp.dorr.dors.dory.dose.doss.dost.dote.doth.dots.doty.doum.dour.doux.dove.down.dows.doxy.doze.dozy.drab.drag.dram.drat.draw.dray.dree.dreg.drek.drew.drib.drip.drop.drub.drug.drum.drys.duad.dual.dubs.duce.duci.duck.duct.dude.duds.duel.dues.duet.duff.dugs.duit.duke.dull.duly.duma.dumb.dump.dune.dung.dunk.duns.dunt.duos.dupe.dups.dura.dure.durn.duro.durr.dusk.dust.duty.dyad.dyed.dyer.dyes.dyne.each.earl.earn.ears.ease.east.easy.eath.eats.eaux.eave.ebbs.ebon.eche.echo.echt.ecru.ecus.eddo.eddy.edge.edgy.edhs.edit.eels.eely.eery.effs.efts.egad.egal.eger.eggs.eggy.egis.egos.eide.eked.ekes.elan.elds.elhi.elks.ells.elms.elmy.else.emes.emeu.emfs.emic.emir.emit.emmy.emus.emyd.ends.engs.enol.enow.enuf.envy.eons.epee.epha.epic.epos.eras.ergo.ergs.erne.erns.eros.errs.erst.eses.esne.espy.etas.etch.eths.etic.etna.etui.euro.even.ever.eves.evil.ewer.ewes.exam.exec.exed.exes.exit.exon.expo.eyas.eyed.eyen.eyer.eyes.eyne.eyra.eyre.eyry.fabs.face.fact.fade.fado.fads.fail.fain.fair.fake.fall.falx.fame.fane.fang.fano.fans.fard.fare.farl.farm.faro.fart.fash.fast.fate.fats.faun.faux.fava.fave.fawn.fays.faze.feal.fear.feat.feds.feeb.feed.feel.fees.feet.fehs.fell.felt.feme.fems.fend.fens.feod.fere.fern.fess.fest.feta.fete.fets.feud.feus.fiar.fiat.fibs.fice.fico.fido.fids.fief.fife.figs.fila.file.fill.film.filo.fils.find.fine.fink.fino.fins.fire.firm.firn.firs.fisc.fish.fist.fits.five.fixt.fizz.flab.flag.flak.flam.flan.flap.flat.flaw.flax.flay.flea.fled.flee.flew.flex.fley.flic.flip.flir.flit.floc.floe.flog.flop.flow.flub.flue.flus.flux.foal.foam.fobs.foci.foes.fogs.fogy.fohn.foil.foin.fold.folk.fond.fons.font.food.fool.foot.fops.fora.forb.ford.fore.fork.form.fort.foss.foul.four.fowl.foxy.foys.fozy.frae.frag.frap.frat.fray.free.fret.frig.frit.friz.froe.frog.from.frow.frug.fubs.fuci.fuds.fuel.fugs.fugu.fuji.full.fume.fumy.fund.funk.funs.furl.furs.fury.fuse.fuss.futz.fuze.fuzz.fyce.fyke.gabs.gaby.gadi.gads.gaed.gaen.gaes.gaff.gaga.gage.gags.gain.gait.gala.gale.gall.gals.gama.gamb.game.gamp.gams.gamy.gane.gang.gaol.gape.gaps.gapy.garb.gars.gash.gasp.gast.gate.gats.gaud.gaum.gaun.gaur.gave.gawk.gawp.gays.gaze.gear.geck.geds.geed.geek.gees.geez.geld.gels.gelt.gems.gene.gens.gent.genu.germ.gest.geta.gets.geum.ghat.ghee.ghis.gibe.gibs.gids.gied.gien.gies.gift.giga.gigs.gild.gill.gilt.gimp.gink.gins.gips.gird.girl.girn.giro.girt.gist.gite.gits.give.glad.glam.gled.glee.gleg.glen.gley.glia.glib.glim.glob.glom.glop.glow.glue.glug.glum.glut.gnar.gnat.gnaw.gnus.goad.goal.goas.goat.gobo.gobs.goby.gods.goer.goes.gogo.gold.golf.gone.gong.good.goof.goon.goop.goos.gore.gorm.gorp.gory.gosh.goth.gout.gowd.gowk.gown.goys.grab.grad.gram.gran.grat.gray.gree.grew.grey.grid.grig.grim.grin.grip.grit.grog.grok.grow.grub.grue.grum.guan.guar.guck.gude.guff.guid.gulf.gull.gulp.guls.gums.gunk.guns.guru.gush.gust.guts.guvs.guys.gybe.gyms.gyps.gyre.gyri.gyro.gyve.haaf.haar.habu.hack.hade.hadj.haed.haem.haen.haes.haet.haft.hags.haha.hahs.haik.hail.hair.haji.hajj.hake.haku.hale.half.hall.halm.halo.halt.hame.hams.hand.hang.hank.hant.haps.hard.hare.hark.harl.harm.harp.hart.hash.hasp.hast.hate.hath.hats.haul.haut.have.hawk.haws.hays.haze.hazy.head.heal.heap.hear.heat.hebe.heck.heed.heel.heft.hehs.heil.heir.held.helm.helo.help.heme.hemi.hemp.hems.hens.hent.herb.herd.here.herl.herm.hern.hero.hers.hest.heth.hets.hewn.hews.hick.hide.hied.hies.high.hike.hila.hili.hill.hilt.hims.hind.hins.hint.hips.hire.hisn.hiss.hist.hits.hive.hoax.hobo.hobs.hock.hods.hoed.hoes.hogg.hogs.hoke.hold.hole.holk.holm.holp.hols.holt.holy.home.homy.hone.hong.honk.hons.hood.hoof.hook.hoop.hoot.hope.hops.hora.horn.hose.host.hots.hour.hove.howe.howf.howk.howl.hows.hoya.hoys.hubs.huck.hued.hues.huff.huge.hugs.huic.hula.hulk.hull.hump.hums.hung.hunh.hunk.huns.hunt.hurl.hurt.hush.husk.huts.hwan.hyla.hymn.hype.hypo.hyps.hyte.iamb.ibex.ibis.iced.ices.ichs.icky.icon.idea.idem.ides.idle.idly.idol.idyl.iffy.iggs.iglu.ikat.ikon.ilea.ilex.ilia.ilka.ilks.ills.illy.imam.imid.immy.impi.imps.inby.inch.info.inia.inks.inky.inly.inns.inro.inti.into.ions.iota.ired.ires.irid.iris.irks.iron.isba.isle.isms.itch.item.iter.iwis.ixia.izar.jabs.jack.jade.jagg.jags.jail.jake.jamb.jams.jane.jape.jarl.jars.jato.jauk.jaup.java.jaws.jays.jazz.jean.jeed.jeep.jeer.jees.jeez.jefe.jehu.jell.jeon.jerk.jess.jest.jete.jets.jeux.jiao.jibb.jibe.jibs.jiff.jigs.jill.jilt.jimp.jink.jinn.jins.jinx.jive.jivy.jobs.jock.joes.joey.jogs.john.join.joke.joky.jole.jolt.josh.joss.jota.jots.jouk.jowl.jows.joys.juba.jube.juco.judo.juga.jugs.juju.juke.juku.jump.junk.jupe.jura.jury.just.jute.juts.kaas.kabs.kadi.kaes.kafs.kagu.kaif.kail.kain.kaka.kaki.kale.kame.kami.kana.kane.kaon.kapa.kaph.karn.kart.kata.kats.kava.kayo.kays.kbar.keas.keck.keef.keek.keel.keen.keep.keet.kefs.kegs.keir.kelp.kelt.kemp.keno.kens.kent.kepi.keps.kept.kerb.kerf.kern.keto.keys.khaf.khan.khat.khet.khis.kibe.kick.kids.kief.kier.kifs.kike.kill.kiln.kilo.kilt.kina.kind.kine.king.kink.kino.kins.kips.kirk.kirn.kirs.kiss.kist.kite.kith.kits.kiva.kiwi.klik.knap.knar.knee.knew.knit.knop.knot.know.knur.koan.koas.kobo.kobs.koel.kohl.kois.koji.kola.kolo.konk.kook.koph.kops.kora.kore.kors.koss.koto.kris.kudo.kudu.kues.kufi.kuna.kune.kuru.kvas.kyak.kyar.kyat.kyes.kyte.labs.lace.lack.lacs.lacy.lade.lads.lady.lags.laic.laid.lain.lair.lake.lakh.laky.lall.lama.lamb.lame.lamp.lams.land.lane.lang.lank.laps.lard.lari.lark.lars.lase.lash.lass.last.late.lath.lati.lats.latu.laud.lava.lave.lavs.lawn.laws.lays.laze.lazy.lead.leaf.leak.leal.lean.leap.lear.leas.lech.lede.leek.leer.lees.leet.left.legs.lehr.leis.leke.leks.leku.lend.leno.lens.lent.lept.less.lest.lets.leud.leva.levo.levy.lewd.leys.liar.libs.lice.lich.lick.lido.lids.lied.lief.lien.lier.lies.lieu.life.lift.like.lilo.lilt.lily.lima.limb.lime.limn.limo.limp.limy.line.ling.link.linn.lino.lins.lint.liny.lion.lipa.lipe.lips.lira.lire.liri.lisp.list.lite.lits.litu.live.load.loaf.loam.loan.lobe.lobo.lobs.loca.loch.loci.lock.loco.lode.loft.loge.logo.logs.logy.loid.loin.loll.lone.long.loof.look.loom.loon.loop.loos.loot.lope.lops.lord.lore.lorn.lory.lose.loss.lost.lota.loth.loti.lots.loud.loup.lour.lout.love.lowe.lown.lows.luau.lube.luce.luck.lude.lues.luff.luge.lugs.lull.lulu.luma.lump.lums.luna.lune.lung.lunk.lunt.luny.lure.lurk.lush.lute.lutz.luvs.luxe.lwei.lych.lyes.lynx.lyre.lyse.maar.mabe.mace.mach.mack.macs.made.mads.maes.mage.magi.mags.maid.mail.maim.main.mair.make.mako.male.mall.malm.malt.mama.mana.mane.mano.mans.many.maps.mara.marc.mare.mark.marl.mars.mart.masa.mash.mask.mass.mast.mate.math.mats.matt.maud.maul.maun.maut.mawn.maws.maxi.maya.mayo.mays.maze.mazy.mead.meal.mean.meat.meds.meed.meek.meet.mega.megs.meld.mell.mels.melt.meme.memo.mems.mend.meno.menu.meou.meow.merc.mere.merk.merl.mesa.mesh.mess.meta.mete.meth.mewl.mews.meze.mhos.mibs.mica.mice.mick.mics.midi.mids.mien.miff.migg.migs.mike.mild.mile.milk.mill.milo.mils.milt.mime.mina.mind.mine.mini.mink.mint.minx.mips.mire.miri.mirk.mirs.miry.mise.miso.miss.mist.mite.mitt.mity.mixt.moas.moat.mobs.mock.mocs.mode.modi.mods.mogs.moil.mojo.moke.mola.mold.mole.moll.mols.molt.moly.mome.momi.moms.monk.mono.mons.mony.mood.mool.moon.moor.moos.moot.mope.mops.mopy.mora.more.morn.mors.mort.mosh.mosk.moss.most.mote.moth.mots.mott.moue.move.mown.mows.moxa.mozo.much.muck.muds.mugg.mugs.mule.mull.mumm.mump.mums.mumu.muni.muns.muon.mura.mure.murk.murr.muse.mush.musk.muss.must.mute.muts.mutt.mycs.myna.myth.naan.nabe.nabs.nada.naff.nags.naif.nail.nala.name.nana.nans.naoi.naos.napa.nape.naps.narc.nard.nark.nary.nave.navy.nays.neap.near.neat.nebs.neck.need.neem.neep.negs.neif.nema.nene.neon.nerd.ness.nest.nets.nett.neuk.neum.neve.nevi.news.newt.next.nibs.nice.nick.nide.nidi.nigh.nill.nils.nims.nine.nipa.nips.nisi.nite.nits.nixe.nixy.nobs.nock.node.nodi.nods.noel.noes.nogg.nogs.noil.noir.nolo.noma.nome.noms.nona.none.nook.noon.nope.nori.norm.nose.nosh.nosy.nota.note.noun.nous.nova.nows.nowt.nubs.nuke.null.numb.nuns.nurd.nurl.nuts.oafs.oaks.oaky.oars.oast.oath.oats.obas.obes.obey.obia.obis.obit.oboe.obol.ocas.odah.odas.odds.odea.odes.odic.odor.odyl.ofay.offs.ogam.ogee.ogle.ogre.ohed.ohia.ohms.oils.oily.oink.okas.okay.okeh.okes.okra.olds.oldy.olea.oleo.oles.olio.olla.omen.omer.omit.once.ones.only.onos.onto.onus.onyx.oohs.oops.oots.ooze.oozy.opah.opal.oped.open.opes.opts.opus.orad.oral.orbs.orby.orca.orcs.ordo.ores.orgy.orle.orra.orts.oryx.orzo.osar.oses.ossa.otic.otto.ouch.ouds.ouph.ours.oust.outs.ouzo.oval.oven.over.ovum.owed.owes.owls.owns.owse.oxen.oxes.oxid.oxim.oyer.oyes.oyez.paca.pace.pack.pacs.pact.pacy.padi.pads.page.paid.paik.pail.pain.pair.pale.pall.palm.palp.pals.paly.pams.pane.pang.pans.pant.papa.paps.para.pard.pare.park.parr.pars.part.pase.pash.pass.past.pate.path.pats.paty.pave.pawl.paws.pays.peag.peak.peal.pean.pear.peas.peat.pech.peck.pecs.peds.peed.peek.peel.peen.peep.peer.pees.pegs.pehs.pein.peke.pele.pelf.pelt.pend.pens.pent.peon.pepo.peps.pere.peri.perk.perm.perp.pert.perv.peso.pest.pets.pews.pfft.pfui.phat.phew.phis.phiz.phon.phot.phut.pial.pian.pias.pica.pice.pick.pics.pied.pier.pies.pigs.pika.pike.piki.pile.pili.pill.pily.pima.pimp.pina.pine.ping.pink.pins.pint.piny.pion.pipe.pips.pipy.pirn.pish.piso.pita.pith.pits.pity.pixy.plan.plat.play.plea.pleb.pled.plew.plex.plie.plod.plop.plot.plow.ploy.plug.plum.plus.pock.poco.pods.poem.poet.pogy.pois.poke.poky.pole.poll.polo.pols.poly.pome.pomo.pomp.poms.pond.pone.pong.pons.pony.pood.poof.pooh.pool.poon.poor.poos.poot.pope.pops.pore.pork.port.pose.posh.post.posy.pots.pouf.pour.pout.pows.poxy.pram.prao.prat.prau.pray.pree.prep.prex.prey.prez.prig.prim.proa.prod.prof.prog.prom.prop.pros.prow.psis.psst.ptui.pubs.puce.puck.puds.puff.pugh.pugs.puja.puke.pula.pule.puli.pull.pulp.puls.puma.pump.puna.pung.punk.puns.punt.puny.pupa.pups.pupu.pure.puri.purl.purr.purs.push.puss.puts.putt.putz.pyas.pyes.pyic.pyin.pyre.pyro.qadi.qaid.qats.qoph.quad.quag.quai.quay.quey.quid.quin.quip.quit.quiz.quod.race.rack.racy.rads.raff.raft.raga.rage.ragg.ragi.rags.raia.raid.rail.rain.rais.raja.rake.raki.raku.rale.rami.ramp.rams.rand.rang.rani.rank.rant.rape.raps.rapt.rare.rase.rash.rasp.rate.rath.rato.rats.rave.raws.raya.rays.raze.razz.read.real.ream.reap.rear.rebs.reck.recs.redd.rede.redo.reds.reed.reef.reek.reel.rees.refs.reft.regs.reif.rein.reis.rely.rems.rend.rent.repo.repp.reps.resh.rest.rete.rets.revs.rhea.rhos.rhus.rial.rias.ribs.rice.rich.rick.ride.rids.riel.rife.riff.rifs.rift.rigs.rile.rill.rime.rims.rimy.rind.ring.rink.rins.riot.ripe.rips.rise.risk.rite.ritz.rive.road.roam.roan.roar.robe.robs.rock.rocs.rode.rods.roes.roil.role.rolf.roll.romp.roms.rood.roof.rook.room.root.rope.ropy.rort.rose.rosy.rota.rote.roti.rotl.roto.rots.roue.roup.rout.roux.rove.rows.rube.rubs.ruby.ruck.rudd.rude.rued.ruer.rues.ruff.ruga.rugs.ruin.rule.ruly.rump.rums.rune.rung.runs.runt.ruse.rush.rusk.rust.ruth.ruts.ryas.ryes.ryke.rynd.ryot.sabe.sabs.sack.sacs.sade.sadi.safe.saga.sage.sago.sags.sagy.said.sail.sain.sake.saki.sale.sall.salp.sals.salt.same.samp.sand.sane.sang.sank.sans.saps.sard.sari.sark.sash.sass.sate.sati.saul.save.sawn.saws.says.scab.scad.scag.scam.scan.scar.scat.scop.scot.scow.scry.scud.scum.scup.scut.seal.seam.sear.seas.seat.secs.sect.seed.seek.seel.seem.seen.seep.seer.sees.sego.segs.seif.seis.self.sell.sels.seme.semi.send.sene.sent.sept.sera.sere.serf.sers.seta.sets.sett.sewn.sews.sext.sexy.shad.shah.sham.shat.shaw.shay.shea.shed.shes.shew.shim.shin.ship.shiv.shmo.shod.shoe.shog.shoo.shop.shot.show.shri.shul.shun.shut.shwa.sial.sibb.sibs.sice.sick.sics.side.sidh.sift.sigh.sign.sika.sike.sild.silk.sill.silo.silt.sima.simp.sims.sine.sing.sinh.sink.sins.sipe.sips.sire.sirs.site.sith.sits.size.sizy.skag.skas.skat.skee.skeg.skep.skew.skid.skim.skin.skip.skis.skit.skua.slab.slag.slam.slap.slat.slaw.slay.sled.slew.slid.slim.slip.slit.slob.sloe.slog.slop.slot.slow.slub.slue.slug.slum.slur.smew.smit.smog.smug.snag.snap.snaw.sned.snib.snip.snit.snob.snog.snot.snow.snub.snug.snye.soak.soap.soar.soba.sobs.soca.sock.soda.sods.sofa.soft.soil.soja.soke.sola.sold.sole.soli.solo.sols.soma.some.soms.sone.song.sons.sook.soon.soot.soph.sops.sora.sorb.sord.sore.sori.sorn.sort.soth.sots.souk.soul.soup.sour.sous.sown.sows.soya.soys.spae.spam.span.spar.spas.spat.spay.spaz.spec.sped.spew.spik.spin.spit.spiv.spot.spry.spud.spue.spun.spur.sris.stab.stag.star.stat.staw.stay.stem.step.stet.stew.stey.stir.stoa.stob.stop.stot.stow.stub.stud.stum.stun.stye.suba.subs.such.sudd.suds.sued.suer.sues.suet.sugh.suit.suks.sulk.sulu.sumo.sump.sums.sung.sunk.sunn.suns.supe.sups.suqs.sura.surd.sure.surf.suss.swab.swag.swam.swan.swap.swat.sway.swig.swim.swob.swop.swot.swum.sybo.syce.syke.syli.sync.syne.syph.tabs.tabu.tace.tach.tack.taco.tact.tads.tael.tags.tahr.tail.tain.taka.take.tala.talc.tale.tali.talk.tall.tame.tamp.tams.tang.tank.tans.taos.tapa.tape.taps.tare.tarn.taro.tarp.tars.tart.task.tass.tate.tats.taus.taut.tavs.taws.taxa.taxi.teak.teal.team.tear.teas.teat.tech.teds.teed.teel.teem.teen.tees.teff.tegg.tegs.tela.tele.tell.tels.temp.tend.tens.tent.tepa.term.tern.test.teth.tets.tews.text.thae.than.that.thaw.thee.them.then.thew.they.thin.thio.thir.this.thou.thro.thru.thud.thug.thus.tick.tics.tide.tidy.tied.tier.ties.tiff.tike.tiki.tile.till.tils.tilt.time.tine.ting.tins.tint.tiny.tipi.tips.tire.tirl.tiro.titi.tivy.toad.toby.tods.tody.toea.toed.toes.toff.toft.tofu.toga.togs.toil.toit.toke.tola.told.tole.toll.tolu.tomb.tome.toms.tone.tong.tons.tony.took.tool.toom.toon.toot.tope.toph.topi.topo.tops.tora.torc.tore.tori.torn.toro.torr.tors.tort.tory.tosh.toss.tost.tote.tots.tour.tout.town.tows.towy.toyo.toys.trad.tram.trap.tray.tree.tref.trek.tres.tret.trey.trig.trim.trio.trip.trod.trop.trot.trow.troy.true.trug.tsar.tsks.tuba.tube.tubs.tuck.tufa.tuff.tuft.tugs.tuis.tule.tump.tuna.tune.tung.tuns.tups.turf.turk.turn.tush.tusk.tuts.tutu.twae.twas.twee.twig.twin.twit.twos.tyee.tyer.tyes.tyin.tyke.tyne.type.typo.typp.typy.tyre.tyro.tzar.udon.udos.ughs.ugli.ugly.ukes.ulan.ulna.ulus.ulva.umbo.umps.unai.unau.unbe.unci.unco.unde.undo.undy.unit.unto.upas.upby.updo.upon.urbs.urds.urea.urge.uric.urns.urps.ursa.urus.used.user.uses.utas.utes.uvea.vacs.vagi.vail.vain.vair.vale.vamp.vane.vang.vans.vara.vars.vary.vasa.vase.vast.vats.vatu.vaus.vavs.vaws.veal.veep.veer.vees.veil.vein.vela.veld.vena.vend.vent.vera.verb.vert.very.vest.veto.vets.vext.vial.vibe.vice.vide.vids.vied.vier.vies.view.viga.vigs.vile.vill.vims.vina.vine.vino.vins.viny.viol.virl.visa.vise.vita.viva.vive.voes.void.vole.volt.vote.vows.vrow.vugg.vugh.vugs.wabs.wack.wade.wadi.wads.wady.waes.waff.waft.wage.wags.waif.wail.wain.wair.wait.wake.wale.walk.wall.waly.wame.wand.wane.wans.want.wany.waps.ward.ware.wark.warm.warn.warp.wars.wart.wary.wash.wasp.wast.wats.watt.wauk.waul.waur.wave.wavy.wawl.waws.waxy.ways.weak.weal.wean.wear.webs.weds.weed.week.weel.ween.weep.weer.wees.weet.weft.weir.weka.weld.well.welt.wend.wens.went.wept.were.wert.west.wets.wham.whap.what.whee.when.whet.whew.whey.whid.whig.whim.whin.whip.whir.whit.whiz.whoa.whom.whop.whup.whys.wich.wick.wide.wife.wifi.wigs.wiki.wild.wile.will.wilt.wily.wimp.wind.wine.wing.wink.wino.wins.winy.wipe.wire.wiry.wise.wish.wisp.wiss.wist.wite.with.wits.wive.woad.woes.woke.woks.wold.wolf.womb.wonk.wons.wont.wood.woof.wool.woos.wops.word.wore.work.worm.worn.wort.wost.wots.wove.wows.wrap.wren.writ.wuss.wych.wyes.wyle.wynd.wynn.wyns.wyte.xyst.yack.yaff.yagi.yags.yaks.yald.yams.yang.yank.yaps.yard.yare.yarn.yaud.yaup.yawl.yawn.yawp.yaws.yays.yeah.yean.year.yeas.yech.yegg.yeld.yelk.yell.yelp.yens.yeps.yerk.yeti.yett.yeuk.yews.yill.yins.yipe.yips.yird.yirr.ylem.yobs.yock.yodh.yods.yoga.yogh.yogi.yoke.yoks.yolk.yond.yoni.yore.your.yous.yowe.yowl.yows.yoyo.yuan.yuca.yuch.yuck.yuga.yuks.yule.yups.yurt.yutz.ywis.zags.zany.zaps.zarf.zeal.zebu.zeds.zees.zein.zeks.zeps.zerk.zero.zest.zeta.zigs.zill.zinc.zine.zing.zins.zips.ziti.zits.zoea.zoic.zona.zone.zonk.zoom.zoon.zoos.zori.zouk.zyme.",
		() => ".aahed.aalii.aargh.abaca.abaci.aback.abaft.abaka.abamp.abase.abash.abate.abaya.abbas.abbes.abbey.abbot.abeam.abele.abets.abhor.abide.abled.abler.ables.abmho.abode.abohm.aboil.aboma.aboon.abort.about.above.abris.abuse.abuts.abuzz.abyes.abysm.abyss.acari.acerb.aceta.ached.aches.achoo.acids.acidy.acing.acini.ackee.acmes.acmic.acned.acnes.acock.acold.acorn.acred.acres.acrid.acted.actin.actor.acute.acyls.adage.adapt.addax.added.adder.addle.adeem.adept.adieu.adios.adits.adman.admen.admit.admix.adobe.adobo.adopt.adore.adorn.adown.adoze.adult.adunc.adust.adyta.adzed.adzes.aecia.aedes.aegis.aeons.aerie.afars.affix.afire.afoam.afoot.afore.afoul.afrit.after.again.agama.agape.agars.agate.agave.agaze.agene.agent.agers.agger.aggie.aggro.aghas.agile.aging.agios.agism.agist.agita.aglee.aglet.agley.aglow.agmas.agone.agons.agony.agora.agree.agria.agues.ahead.ahing.ahold.ahull.aided.aider.aides.ailed.aimed.aimer.aioli.aired.airer.airns.airth.airts.aisle.aitch.aiver.ajiva.ajuga.akees.akela.akene.alack.alamo.aland.alane.alang.alans.alant.alarm.alary.alate.albas.album.alcid.alder.aldol.alecs.alefs.aleph.alert.alfas.algae.algal.algas.algid.algin.algor.algum.alias.alibi.alien.alifs.align.alike.aline.alist.alive.aliya.alkie.alkyd.alkyl.allay.allee.alley.allod.allot.allow.alloy.allyl.almah.almas.almeh.almes.almud.almug.aloes.aloft.aloha.aloin.alone.along.aloof.aloud.alpha.altar.alter.altho.altos.alula.alums.alure.alway.amahs.amain.amass.amaze.amber.ambit.amble.ambos.ambry.ameba.ameer.amend.amens.ament.amias.amice.amici.amide.amido.amids.amies.amiga.amigo.amine.amino.amins.amirs.amiss.amity.ammos.amnia.amnic.amnio.amoks.amole.among.amort.amour.amped.ample.amply.ampul.amuck.amuse.amyls.ancho.ancon.andro.anear.anele.anent.angas.angel.anger.angle.anglo.angry.angst.anile.anils.anima.anime.animi.anion.anise.ankhs.ankle.ankus.anlas.annal.annas.annex.annoy.annul.anoas.anode.anole.anomy.ansae.antae.antas.anted.antes.antic.antis.antra.antre.antsy.anvil.anyon.aorta.apace.apart.apeak.apeek.apers.apery.aphid.aphis.apian.aping.apish.apnea.apods.aport.appal.appel.apple.apply.apres.apron.apses.apsis.apter.aptly.aquae.aquas.araks.arame.arbor.arced.arcus.ardeb.ardor.areae.areal.areas.areca.areic.arena.arene.arepa.arete.argal.argil.argle.argol.argon.argot.argue.argus.arhat.arias.ariel.arils.arise.arles.armed.armer.armet.armor.aroid.aroma.arose.arpen.arras.array.arris.arrow.arses.arsis.arson.artal.artel.artsy.arums.arval.arvos.aryls.asana.ascot.ascus.asdic.ashed.ashen.ashes.aside.asked.asker.askew.askoi.askos.aspen.asper.aspic.aspis.assai.assay.asset.aster.astir.asyla.ataps.ataxy.atilt.atlas.atman.atmas.atoll.atoms.atomy.atone.atony.atopy.atria.atrip.attar.attic.audad.audio.audit.auger.aught.augur.aulic.aunts.aunty.aurae.aural.aurar.auras.aurei.aures.auric.auris.aurum.autos.auxin.avail.avant.avast.avens.avers.avert.avgas.avian.avion.aviso.avoid.avows.await.awake.award.aware.awash.awful.awing.awned.awoke.awols.axels.axial.axile.axils.axing.axiom.axion.axite.axled.axles.axman.axmen.axone.axons.ayahs.ayins.azans.azide.azido.azine.azlon.azoic.azole.azons.azote.azoth.azuki.azure.baaed.baals.babas.babel.babes.babka.baboo.babul.babus.bacca.backs.bacon.baddy.badge.badly.baffs.baffy.bagel.baggy.bahts.bails.bairn.baith.baits.baiza.baize.baked.baker.bakes.balas.balds.baldy.baled.baler.bales.balks.balky.bally.balms.balmy.balsa.banal.banco.banda.bands.bandy.baned.banes.bangs.banjo.banks.banns.banty.barbe.barbs.barca.barde.bards.bared.barer.bares.barfs.barge.baric.barks.barky.barms.barmy.barns.barny.baron.barre.barye.basal.based.baser.bases.basic.basil.basin.basis.basks.bassi.basso.bassy.baste.basts.batch.bated.bates.bathe.baths.batik.baton.batts.battu.batty.bauds.baulk.bawds.bawdy.bawls.bawty.bayed.bayou.bazar.bazoo.beach.beads.beady.beaks.beaky.beams.beamy.beano.beans.beard.bears.beast.beats.beaus.beaut.beaux.bebop.becap.becks.bedel.bedew.bedim.beech.beedi.beefs.beefy.beeps.beers.beery.beets.befit.befog.began.begat.beget.begin.begot.begum.begun.beige.beigy.being.belay.belch.belga.belie.belle.bells.belly.belon.below.belts.bemas.bemix.bench.bends.bendy.benes.benne.benni.benny.bento.bents.beret.bergs.berks.berme.berms.berry.berth.beryl.beses.beset.besom.besot.bests.betas.betel.beths.beton.betta.bevel.bevor.bewig.bezel.bezil.bhang.bhoot.bhuts.biali.bialy.bibbs.bible.bicep.bices.biddy.bided.bider.bides.bidet.bidis.bield.biers.biffs.biffy.bifid.biggy.bight.bigly.bigos.bigot.bijou.biked.biker.bikes.bikie.bilbo.bilby.biles.bilge.bilgy.bilks.bills.billy.bimah.bimas.bimbo.binal.bindi.binds.biner.bines.binge.bingo.binit.bints.biogs.biome.biont.biota.biped.bipod.birch.birds.birdy.birks.birle.birls.biros.birrs.birse.birth.bises.bisks.bison.biter.bites.bitsy.bitts.bitty.bizes.blabs.black.blade.blaff.blahs.blain.blame.blams.bland.blank.blare.blase.blast.blate.blats.blawn.blaws.blaze.bleak.blear.bleat.blebs.bleed.bleep.blend.blent.bless.blest.blets.blimp.blimy.blind.bling.blini.blink.blips.bliss.blite.blitz.bloat.blobs.block.blocs.blogs.bloke.blond.blood.bloom.bloop.blots.blown.blows.blowy.blubs.blued.bluer.blues.bluet.bluey.bluff.blume.blunt.blurb.blurs.blurt.blush.blype.board.boars.boart.boast.boats.bobby.bocce.bocci.boche.bocks.boded.bodes.boffo.boffs.bogan.bogey.boggy.bogie.bogle.bogus.bohea.bohos.boils.boing.boink.boite.bokeh.bolar.bolas.bolds.boles.bolls.bolos.bolts.bolus.bombe.bombs.bonds.boned.bones.boney.bongo.bongs.bonks.bonne.bonny.bonus.bonze.booby.boody.booed.boogy.books.booms.boomy.boons.boors.boost.booth.boots.booty.booze.boozy.boral.boras.borax.bored.borer.bores.boric.borks.borne.boron.borts.borty.bortz.bosks.bosky.bosom.boson.bossy.bosun.botas.botch.botel.bothy.botts.bough.boule.bound.bourg.bourn.bouse.bousy.bouts.bovid.bowed.bowel.bower.bowls.bowse.boxed.boxer.boxes.boyar.boyla.boyos.bozos.brace.brach.bract.brads.braes.brags.braid.brail.brain.brake.braky.brand.brank.brans.brant.brash.brass.brats.brava.brave.bravi.bravo.brawl.brawn.braws.braxy.brays.braza.braze.bread.break.bream.brede.breed.brees.brens.brent.breve.brews.briar.bribe.brick.bride.brief.brier.bries.brigs.brill.brims.brine.bring.brink.brins.briny.brios.brisk.briss.brith.brits.britt.broad.brock.broil.broke.brome.bromo.bronc.brood.brook.broom.broos.brose.brosy.broth.brown.brows.brugh.bruin.bruit.brume.brung.brunt.brush.brusk.brute.bruts.bubal.bubba.bubby.bubus.bucko.bucks.buddy.budge.buffi.buffo.buffs.buffy.buggy.bugle.buhls.buhrs.build.built.bulbs.bulge.bulgy.bulks.bulky.bulla.bulls.bully.bumfs.bumph.bumps.bumpy.bunas.bunch.bunco.bunds.bundt.bungs.bunko.bunks.bunns.bunny.bunts.bunya.buoys.buppy.buran.buras.burbs.burds.buret.burgh.burgs.burin.burka.burke.burls.burly.burns.burnt.burps.burqa.burro.burrs.burry.bursa.burse.burst.busby.bused.buses.bushy.busks.busts.busty.butch.buteo.butes.butle.butte.butts.butty.butut.butyl.buxom.buyer.bwana.bylaw.byres.byrls.byssi.bytes.byway.cabal.cabby.caber.cabin.cable.cabob.cacao.cacas.cache.cacti.caddy.cades.cadet.cadge.cadgy.cadis.cadre.caeca.cafes.caffs.caged.cager.cages.cagey.cahow.caids.cains.caird.cairn.cajon.caked.cakes.cakey.calfs.calif.calix.calks.calla.calls.calms.calos.calve.calyx.camas.camel.cameo.cames.camos.campi.campo.camps.campy.canal.candy.caned.caner.canes.canid.canna.canny.canoe.canon.canso.canst.canto.cants.canty.caped.caper.capes.caphs.capiz.capon.capos.caput.carat.carbo.carbs.cards.cared.carer.cares.caret.carex.cargo.carks.carle.carls.carns.carny.carob.carol.carom.carpi.carps.carrs.carry.carse.carte.carts.carve.casas.cased.cases.casks.casky.caste.casts.casus.catch.cater.cates.catty.cauld.caulk.cauls.cause.caved.caver.caves.cavie.cavil.cawed.cease.cebid.cecal.cecum.cedar.ceded.ceder.cedes.cedis.ceiba.ceili.ceils.celeb.cella.celli.cello.cells.celom.celts.cense.cento.cents.centu.ceorl.cepes.cerci.cered.ceres.ceria.ceric.ceros.cesta.cesti.cetes.chads.chafe.chaff.chain.chair.chais.chalk.champ.chams.chang.chant.chaos.chape.chaps.chapt.chard.chare.chark.charm.charr.chars.chart.chary.chase.chasm.chats.chaws.chays.cheap.cheat.check.cheek.cheep.cheer.chefs.chela.chemo.chert.chess.chest.cheth.chevy.chews.chewy.chiao.chias.chica.chick.chico.chics.chide.chief.chiel.child.chile.chili.chill.chimb.chime.chimp.china.chine.chino.chins.chips.chirk.chirm.chiro.chirp.chirr.chiru.chits.chive.chivy.chock.chode.choir.choke.choky.chola.cholo.chomp.chook.chops.chord.chore.chose.chott.chows.chubs.chuck.chufa.chuff.chugs.chump.chums.chunk.churl.churn.churr.chute.chyle.chyme.cibol.cider.cigar.cilia.cimex.cinch.cines.cions.circa.cires.cirri.cisco.cissy.cists.cited.citer.cites.civet.civic.civie.civil.civvy.clach.clack.clade.clads.clags.claim.clamp.clams.clang.clank.clans.claps.clapt.claro.clary.clash.clasp.class.clast.clave.clavi.claws.clays.clean.clear.cleat.cleek.clefs.cleft.clepe.clept.clerk.clews.click.cliff.clift.climb.clime.cline.cling.clink.clips.clipt.cloak.clock.clods.clogs.clomb.clomp.clone.clonk.clons.cloot.clops.close.cloth.clots.cloud.clour.clout.clove.clown.cloys.cloze.clubs.cluck.clued.clues.clump.clung.clunk.cnida.coach.coact.coala.coals.coaly.coapt.coast.coati.coats.cobbs.cobby.cobia.coble.cobra.cocas.cocci.cocky.cocoa.cocos.codas.codec.coded.coden.coder.codes.codex.codon.coeds.coffs.cogon.cohog.cohos.coifs.coign.coils.coins.coirs.coked.cokes.colas.colby.colds.coled.coles.colic.colin.colly.colog.colon.color.colts.colza.comae.comal.comas.combe.combo.combs.comer.comes.comet.comfy.comic.comix.comma.commy.compo.comps.compt.comte.conch.condo.coned.cones.coney.conga.conge.congo.conic.conin.conks.conky.conns.conte.conto.conus.cooch.cooed.cooee.cooer.cooey.coofs.cooks.cooky.cools.cooly.coomb.coons.coops.coopt.coots.copal.copay.coped.copen.coper.copes.copra.copse.coral.corby.cords.cored.corer.cores.corgi.coria.corks.corky.corms.corns.cornu.corny.corps.corse.cosec.coses.coset.cosey.cosie.costa.costs.cotan.coted.cotes.cotta.couch.coude.cough.could.count.coupe.coups.court.couth.coved.coven.cover.coves.covet.covey.covin.cowed.cower.cowls.cowry.coxae.coxal.coxed.coxes.coyed.coyer.coyly.coypu.cozen.cozes.cozey.cozie.craal.crabs.crack.craft.crags.crake.cramp.crams.crane.crank.crape.craps.crash.crass.crate.crave.crawl.craws.craze.crazy.creak.cream.credo.creds.creed.creek.creel.creep.creme.crepe.crept.crepy.cress.crest.crews.cribs.crick.cried.crier.cries.crime.crimp.cripe.crisp.crits.croak.croci.crock.crocs.croft.crone.crony.crook.croon.crops.crore.cross.croup.crowd.crown.crows.croze.cruck.crude.cruds.cruel.cruet.crumb.crump.cruor.crura.cruse.crush.crust.crwth.crypt.cubby.cubeb.cubed.cuber.cubes.cubic.cubit.cuddy.cuffs.cuifs.cuing.cuish.cukes.culch.culet.culex.culls.cully.culms.culpa.culti.cults.cumin.cupel.cupid.cuppa.cuppy.curbs.curch.curds.curdy.cured.curer.cures.curet.curfs.curia.curie.curio.curls.curly.curns.currs.curry.curse.curst.curve.curvy.cusec.cushy.cusks.cusps.cusso.cutch.cuter.cutes.cutey.cutie.cutin.cutis.cutty.cutup.cuvee.cyano.cyans.cyber.cycad.cycas.cycle.cyclo.cyder.cylix.cymae.cymar.cymas.cymes.cymol.cynic.cysts.cyton.czars.daces.dacha.dadas.daddy.dados.daffs.daffy.dagga.dagos.dahls.daily.dairy.daisy.dales.dally.daman.damar.dames.damns.damps.dance.dandy.dangs.danio.darbs.dared.darer.dares.daric.darks.darky.darns.darts.dashi.dashy.dated.dater.dates.datos.datto.datum.daube.daubs.dauby.daunt.dauts.daven.davit.dawed.dawen.dawks.dawns.dawts.dazed.dazes.deads.deair.deals.dealt.deans.dears.deary.deash.death.deave.debag.debar.debit.debts.debug.debut.debye.decaf.decal.decay.decks.decor.decos.decoy.decry.dedal.deeds.deedy.deems.deeps.deers.deets.defat.defer.defis.defog.degas.degum.deice.deify.deign.deils.deism.deist.deity.deked.dekes.dekko.delay.deled.deles.delfs.delft.delis.dells.delly.delta.delts.delve.demes.demic.demit.demob.demon.demos.demur.denar.denes.denim.dense.dents.deoxy.depot.depth.derat.deray.derby.derma.derms.derry.desex.desks.deter.detox.deuce.devas.devel.devil.devon.dewan.dewar.dewax.dewed.dexes.dexie.dhaks.dhals.dhobi.dhole.dhoti.dhows.dhuti.dials.diary.diazo.diced.dicer.dices.dicey.dicky.dicot.dicta.dicty.didie.didos.didst.diene.diets.diffs.dight.digit.diked.diker.dikes.dikey.dills.dilly.dimer.dimes.dimly.dinar.dined.diner.dines.dinge.dingo.dings.dingy.dinky.dinos.dints.diode.diols.dippy.dipso.diram.direr.dirge.dirks.dirls.dirts.dirty.disci.disco.discs.dishy.disks.disme.ditas.ditch.dites.ditsy.ditto.ditty.ditzy.divan.divas.dived.diver.dives.divot.divvy.diwan.dixie.dixit.dizen.dizzy.djinn.djins.doats.dobby.dobie.dobla.dobra.dobro.docks.dodge.dodgy.dodos.doers.doest.doeth.doffs.doges.dogey.doggo.doggy.dogie.dogma.doily.doing.doits.dojos.dolce.dolci.doled.doles.dolls.dolly.dolma.dolor.dolts.domal.domed.domes.domic.donas.donee.donga.dongs.donna.donne.donor.donsy.donut.doody.dooly.dooms.doomy.doors.doozy.dopas.doped.doper.dopes.dopey.dorks.dorky.dorms.dormy.dorps.dorrs.dorsa.dorty.dosed.doser.doses.dotal.doted.doter.dotes.dotty.doubt.douce.dough.doula.douma.doums.doura.douse.doven.doves.dowdy.dowed.dowel.dower.dowie.downs.downy.dowry.dowse.doxie.doyen.doyly.dozed.dozen.dozer.dozes.drabs.draff.draft.drags.drail.drain.drake.drama.drams.drank.drape.drats.drave.drawl.drawn.draws.drays.dread.dream.drear.dreck.dreed.drees.dregs.dreks.dress.drest.dribs.dried.drier.dries.drift.drill.drily.drink.drips.dript.drive.droid.droit.droll.drone.drool.droop.drops.dropt.dross.drouk.drove.drown.drubs.drugs.druid.drums.drunk.drupe.druse.dryad.dryer.dryly.duads.duals.ducal.ducat.duces.duchy.ducks.ducky.ducts.duddy.duded.dudes.duels.duets.duffs.dufus.duits.duked.dukes.dulia.dulls.dully.dulse.dumas.dumbo.dumbs.dumka.dumky.dummy.dumps.dumpy.dunam.dunce.dunch.dunes.dungs.dungy.dunks.dunts.duomi.duomo.duped.duper.dupes.duple.dural.duras.dured.dures.durns.duroc.duros.durra.durrs.durst.durum.dusks.dusky.dusts.dusty.dutch.duvet.dwarf.dweeb.dwell.dwelt.dwine.dyads.dyers.dying.dyked.dykes.dykey.dynel.dynes.eager.eagle.eagre.eared.earls.early.earns.earth.eased.easel.eases.easts.eaten.eater.eaved.eaves.ebbed.ebbet.ebola.ebons.ebony.ebook.eched.eches.echos.eclat.ecrus.edema.edged.edger.edges.edict.edify.edile.edits.educe.educt.eerie.egads.egers.egest.eggar.egged.egger.egret.eider.eidos.eight.eikon.eject.eking.elain.eland.elans.elate.elbow.elder.elect.elegy.elemi.elfin.elide.elint.elite.eloin.elope.elude.elute.elver.elves.email.embar.embay.embed.ember.embow.emcee.emeer.emend.emery.emeus.emirs.emits.emmer.emmet.emmys.emote.empty.emyde.emyds.enact.enate.ended.ender.endow.endue.enema.enemy.enjoy.ennui.enoki.enols.enorm.enows.enrol.ensky.ensue.enter.entia.entry.enure.envoi.envoy.enzym.eosin.epact.epees.ephah.ephas.ephod.ephor.epics.epoch.epode.epoxy.equal.equid.equip.erase.erect.ergot.erica.ernes.erode.erose.erred.error.erses.eruct.erugo.erupt.ervil.escar.escot.eskar.esker.esnes.essay.esses.ester.estop.etape.ether.ethic.ethos.ethyl.etnas.etude.etuis.etwee.etyma.euros.evade.evens.event.evert.every.evict.evils.evite.evoke.ewers.exact.exalt.exams.excel.execs.exert.exile.exine.exing.exist.exits.exons.expat.expel.expos.extol.extra.exude.exult.exurb.eyass.eyers.eying.eyras.eyres.eyrie.eyrir.fable.faced.facer.faces.facet.facia.facts.faddy.faded.fader.fades.fadge.fados.faena.faery.faggy.fagin.fails.faint.fairs.fairy.faith.faked.faker.fakes.fakey.fakir.falls.false.famed.fames.fancy.fanes.fanga.fangs.fanon.fanos.fanum.faqir.farad.farce.farci.farcy.fards.fared.farer.fares.farle.farls.farms.faros.farts.fasts.fatal.fated.fates.fatly.fatso.fatty.fatwa.faugh.fauld.fault.fauna.fauns.fauve.favas.faves.favor.favus.fawns.fawny.faxed.faxes.fayed.fazed.fazes.fears.fease.feast.feats.feaze.fecal.feces.fecks.fedex.feebs.feeds.feels.feeze.feign.feint.feist.felid.fella.fells.felly.felon.felts.femes.femme.femur.fence.fends.fenny.feods.feoff.feral.feres.feria.ferly.fermi.ferns.ferny.ferry.fesse.fests.fetal.fetas.fetch.feted.fetes.fetid.fetor.fetus.feuar.feuds.feued.fever.fewer.feyer.feyly.fezes.fezzy.fiars.fiats.fiber.fibre.fices.fiche.fichu.ficin.ficus.fidge.fidos.fiefs.field.fiend.fiery.fifed.fifer.fifes.fifth.fifty.fight.filar.filch.filed.filer.files.filet.fille.fillo.fills.filly.filmi.films.filmy.filos.filth.filum.final.finca.finch.finds.fined.finer.fines.finis.finks.finny.finos.fiord.fique.fired.firer.fires.firms.firns.firry.first.firth.fiscs.fishy.fists.fitch.fitly.fiver.fives.fixed.fixer.fixes.fixit.fizzy.fjeld.fjord.flabs.flack.flags.flail.flair.flake.flaky.flame.flams.flamy.flank.flans.flaps.flare.flash.flask.flats.flaws.flawy.flaxy.flays.fleam.fleas.fleck.fleer.flees.fleet.flesh.flews.fleys.flick.flics.flied.flier.flies.fling.flint.flips.flirs.flirt.flite.flits.float.flock.flocs.floes.flogs.flong.flood.floor.flops.flora.floss.flota.flour.flout.flown.flows.flubs.flued.flues.fluff.fluid.fluke.fluky.flume.flump.flung.flunk.fluor.flush.flute.fluty.fluyt.flyby.flyer.flyte.foals.foams.foamy.focal.focus.foehn.fogey.foggy.fogie.fohns.foils.foins.foist.folds.foley.folia.folic.folio.folks.folky.folly.fonds.fondu.fonts.foods.fools.foots.footy.foram.foray.forbs.forby.force.fordo.fords.fores.forge.forgo.forks.forky.forme.forms.forte.forth.forts.forty.forum.fossa.fosse.fouls.found.fount.fours.fovea.fowls.foxed.foxes.foyer.frags.frail.frame.franc.frank.fraps.frass.frats.fraud.frays.freak.freed.freer.frees.fremd.frena.frere.fresh.frets.friar.fried.frier.fries.frigs.frill.frise.frisk.frith.frits.fritt.fritz.frizz.frock.froes.frogs.frond.frons.front.frore.frosh.frost.froth.frown.frows.froze.frugs.fruit.frump.fryer.fubar.fubsy.fucus.fuddy.fudge.fuels.fugal.fuggy.fugio.fugle.fugue.fugus.fujis.fulls.fully.fumed.fumer.fumes.fumet.fundi.funds.fungi.fungo.funks.funky.funny.furan.furls.furor.furry.furze.furzy.fused.fusee.fusel.fuses.fusil.fussy.fusty.futon.fuzed.fuzee.fuzes.fuzil.fuzzy.fyces.fykes.fytte.gabby.gable.gaddi.gadid.gadis.gadje.gadjo.gaffe.gaffs.gaged.gager.gages.gaily.gains.gaits.galah.galas.galax.galea.gales.galls.gally.galop.gamas.gamay.gamba.gambe.gambs.gamed.gamer.games.gamey.gamic.gamin.gamma.gammy.gamps.gamut.ganef.ganev.gangs.ganja.ganof.gaols.gaped.gaper.gapes.gappy.garbs.garda.garni.garth.gases.gasps.gassy.gasts.gated.gater.gates.gator.gauds.gaudy.gauge.gault.gaums.gaunt.gaurs.gauss.gauze.gauzy.gavel.gavot.gawks.gawky.gawps.gawsy.gayal.gayer.gayly.gazar.gazed.gazer.gazes.gazoo.gears.gecko.gecks.geeks.geeky.geese.geest.gelds.gelee.gelid.gelts.gemma.gemmy.gemot.genes.genet.genic.genie.genii.genip.genoa.genom.genre.genro.gents.genua.genus.geode.geoid.gerah.germs.germy.gesso.geste.gests.getas.getup.geums.ghast.ghats.ghaut.ghazi.ghees.ghost.ghoul.ghyll.giant.gibed.giber.gibes.giddy.gifts.gigas.gighe.gigot.gigue.gilds.gills.gilly.gilts.gimel.gimme.gimps.gimpy.ginks.ginny.ginzo.gipon.gipsy.girds.girls.girly.girns.giron.giros.girsh.girth.girts.gismo.gists.gites.given.giver.gives.gizmo.glace.glade.glads.glady.glair.glams.gland.glans.glare.glary.glass.glaze.glazy.gleam.glean.gleba.glebe.glede.gleds.gleed.gleek.glees.gleet.glens.gleys.glial.glias.glide.gliff.glime.glims.glint.glitz.gloam.gloat.globe.globs.glogg.gloms.gloom.glops.glory.gloss.glost.glout.glove.glows.gloze.glued.gluer.glues.gluey.glugs.glume.glums.gluon.glute.gluts.glyph.gnarl.gnarr.gnars.gnash.gnats.gnawn.gnaws.gnome.goads.goals.goats.goban.gobos.godet.godly.goers.gofer.gogos.going.golds.golem.golfs.golly.gombo.gomer.gonad.gonef.goner.gongs.gonia.gonif.gonof.gonzo.goods.goody.gooey.goofs.goofy.gooky.goons.goony.goops.goopy.goose.goosy.gopik.goral.gored.gores.gorge.gorms.gorps.gorse.gorsy.goths.gouge.gourd.gouts.gouty.gowan.gowds.gowks.gowns.goxes.goyim.graal.grabs.grace.grade.grads.graft.grail.grain.grama.gramp.grams.grana.grand.grans.grant.grape.graph.grapy.grasp.grass.grate.grave.gravy.grays.graze.great.grebe.greed.greek.green.grees.greet.grego.greys.gride.grids.grief.griff.grift.grigs.grill.grime.grimy.grind.grins.griot.gripe.grips.gript.gripy.grist.grith.grits.groan.groat.grody.grogs.groin.groks.groom.grope.gross.grosz.grots.group.grout.grove.growl.grown.grows.grubs.gruel.grues.gruff.grume.grump.grunt.guaco.guano.guans.guard.guars.guava.gucks.gudes.guess.guest.guffs.guide.guids.guild.guile.guilt.guiro.guise.gulag.gular.gulch.gules.gulfs.gulfy.gulls.gully.gulps.gulpy.gumbo.gumma.gummy.gunks.gunky.gunny.guppy.gurge.gurry.gursh.gurus.gushy.gussy.gusto.gusts.gusty.gutsy.gutta.gutty.guyed.guyot.gwine.gybed.gybes.gyoza.gypsy.gyral.gyred.gyres.gyron.gyros.gyrus.gyved.gyves.haafs.haars.habit.habus.hacek.hacks.hadal.haded.hades.hadji.hadst.haems.haets.hafis.hafiz.hafts.hahas.haika.haiks.haiku.hails.haint.hairs.hairy.hajes.hajis.hajji.hakes.hakim.hakus.halal.haled.haler.hales.halid.hallo.halls.halma.halms.halon.halos.halts.halva.halve.hamal.hames.hammy.hamza.hance.hands.handy.hangs.hanks.hanky.hansa.hanse.hants.haole.hapax.haply.happy.hards.hardy.hared.harem.hares.harks.harls.harms.harps.harpy.harry.harsh.harts.hasps.haste.hasty.hatch.hated.hater.hates.haugh.haulm.hauls.haunt.haute.haven.haver.haves.havoc.hawed.hawks.hawse.hayed.hayer.hayey.hazan.hazed.hazel.hazer.hazes.heads.heady.heals.heaps.heapy.heard.hears.heart.heath.heats.heave.heavy.hebes.hecks.heder.hedge.hedgy.heeds.heels.heeze.hefts.hefty.heigh.heils.heirs.heist.helio.helix.hello.hells.helms.helos.helot.helps.helve.hemal.hemes.hemic.hemin.hemps.hempy.hence.henge.henna.henry.hents.herbs.herby.herds.heres.herls.herma.herms.herns.heron.heros.herry.hertz.hests.heths.heuch.heugh.hewed.hewer.hexad.hexed.hexer.hexes.hexyl.hicks.hided.hider.hides.highs.hight.hijab.hijra.hiked.hiker.hikes.hilar.hillo.hills.hilly.hilts.hilum.hilus.hinds.hinge.hinky.hinny.hints.hiply.hippo.hippy.hired.hiree.hirer.hires.hissy.hists.hitch.hived.hives.hoagy.hoard.hoars.hoary.hobby.hobos.hocks.hocus.hodad.hoers.hogan.hoggs.hoick.hoise.hoist.hoked.hokes.hokey.hokku.hokum.holds.holed.holes.holey.holks.holla.hollo.holly.holms.holts.homed.homer.homes.homey.homie.homos.honan.honda.honed.honer.hones.honey.hongi.hongs.honks.honky.honor.hooch.hoods.hoody.hooey.hoofs.hooka.hooks.hooky.hooly.hoops.hoots.hooty.hoped.hoper.hopes.hoppy.horah.horal.horas.horde.horns.horse.horst.horsy.hosed.hosel.hosen.hoser.hoses.hosey.hosta.hosts.hotch.hotel.hotly.hound.houri.hours.house.hovel.hover.howdy.howes.howff.howfs.howks.howls.hoyas.hoyle.hubby.hucks.huffs.huffy.huger.hulas.hulks.hulky.hullo.hulls.human.humic.humid.humor.humph.humps.humpy.humus.hunch.hunks.hunky.hunts.hurds.hurls.hurly.hurry.hurst.hurts.husks.husky.hussy.hutch.huzza.hydra.hydro.hyena.hying.hylas.hymen.hymns.hyoid.hyped.hyper.hypes.hypha.hypos.hyrax.hyson.iambi.iambs.ichor.icier.icily.icing.icker.icons.ictic.ictus.ideal.ideas.idiom.idiot.idled.idler.idles.idols.idyll.idyls.igged.igloo.iglus.ihram.ikats.ikons.ileac.ileal.ileum.ileus.iliac.iliad.ilial.ilium.iller.image.imago.imams.imaum.imbed.imbue.imide.imido.imids.imine.imino.immix.imped.impel.impis.imply.inane.inapt.inarm.inbox.inbye.incog.incur.incus.index.indie.indol.indow.indri.indue.inept.inert.infer.infix.infos.infra.ingle.ingot.inion.inked.inker.inkle.inlay.inlet.inned.inner.input.inrun.inset.inter.intis.intro.inure.inurn.invar.iodic.iodid.iodin.ionic.iotas.irade.irate.irids.iring.irked.iroko.irone.irons.irony.isbas.isled.isles.islet.issei.issue.istle.itchy.items.ither.ivied.ivies.ivory.ixias.ixora.ixtle.izars.jabot.jacal.jacks.jacky.jaded.jades.jager.jaggs.jaggy.jagra.jails.jakes.jalap.jalop.jambe.jambs.jammy.janes.janky.janty.japan.japed.japer.japes.jarls.jatos.jauks.jaunt.jaups.javas.jawan.jawed.jazzy.jeans.jebel.jeeps.jeers.jefes.jehad.jehus.jello.jells.jelly.jemmy.jenny.jerid.jerks.jerky.jerry.jesse.jests.jetes.jeton.jetty.jewel.jibbs.jibed.jiber.jibes.jiffs.jiffy.jiggy.jihad.jills.jilts.jimmy.jimpy.jingo.jinks.jinni.jinns.jisms.jived.jiver.jives.jivey.jnana.jocko.jocks.joeys.johns.joins.joint.joist.joked.joker.jokes.jokey.joles.jolly.jolts.jolty.jomon.jones.joram.jorum.jotas.jotty.joual.jouks.joule.joust.jowar.jowed.jowls.jowly.joyed.jubas.jubes.jucos.judas.judge.judos.jugal.jugum.juice.juicy.jujus.juked.jukes.jukus.julep.jumbo.jumps.jumpy.junco.junks.junky.junta.junto.jupes.jupon.jural.jurat.jurel.juror.justs.jutes.jutty.kabab.kabar.kabob.kadis.kafir.kagus.kaiak.kaifs.kails.kains.kakas.kakis.kalam.kales.kalif.kalpa.kames.kamik.kanas.kanes.kanji.kanzu.kaons.kapas.kaphs.kapok.kappa.kaput.karat.karma.karns.karoo.karst.karts.kasha.katas.kauri.kaury.kavas.kayak.kayos.kazoo.kbars.kebab.kebar.kebob.kecks.kedge.keefs.keeks.keels.keens.keeps.keets.keeve.kefir.keirs.kelep.kelim.kelly.kelps.kelpy.kelts.kemps.kempt.kenaf.kench.kendo.kenos.kente.kepis.kerbs.kerfs.kerne.kerns.kerry.ketch.ketol.kevel.kevil.kexes.keyed.khadi.khafs.khaki.khans.khaph.khats.kheda.kheth.khets.khoum.kiang.kibbe.kibbi.kibei.kibes.kibla.kicks.kicky.kiddo.kiddy.kiefs.kiers.kikes.kilim.kills.kilns.kilos.kilts.kilty.kinas.kinds.kines.kings.kinin.kinks.kinky.kinos.kiosk.kirks.kirns.kissy.kists.kited.kiter.kites.kithe.kiths.kitty.kivas.kiwis.klick.kliks.klong.kloof.kluge.klutz.knack.knaps.knars.knaur.knave.knawe.knead.kneed.kneel.knees.knell.knelt.knife.knish.knits.knobs.knock.knoll.knops.knosp.knots.knout.known.knows.knurl.knurs.koala.koans.kobos.koels.kohls.koine.kojis.kolas.kolos.kombu.konks.kooks.kooky.kopek.kophs.kopje.koppa.korai.koras.korat.korma.korun.kotos.kotow.kraal.kraft.krait.kraut.kreep.krewe.krill.krona.krone.kroon.krubi.kudos.kudus.kudzu.kufis.kugel.kukri.kulak.kumys.kurta.kurus.kusso.kvass.kvell.kyack.kyaks.kyars.kyats.kylix.kyrie.kytes.kythe.laari.label.labor.labra.laced.lacer.laces.lacey.lacks.laded.laden.lader.lades.ladle.laevo.lagan.lager.lahar.laich.laics.laigh.laird.lairs.laith.laity.laked.laker.lakes.lakhs.lalls.lamas.lambs.lamby.lamed.lamer.lames.lamia.lamps.lanai.lance.lands.lanes.lanky.lapel.lapin.lapis.lapse.larch.lards.lardy.laree.lares.large.largo.laris.larks.larky.larum.larva.lased.laser.lases.lassi.lasso.lasts.latch.lated.laten.later.latex.lathe.lathi.laths.lathy.latke.latte.lauan.lauds.laugh.laura.lavas.laved.laver.laves.lawed.lawns.lawny.laxer.laxes.laxly.layed.layer.layin.layup.lazar.lazed.lazes.leach.leads.leady.leafs.leafy.leaks.leaky.leans.leant.leaps.leapt.learn.lears.leary.lease.leash.least.leave.leavy.leben.ledge.ledgy.leech.leeks.leers.leery.leets.lefts.lefty.legal.leger.leges.leggy.legit.lehrs.lehua.leman.lemma.lemon.lemur.lends.lenes.lenis.lenos.lense.lento.leone.leper.lepta.lesbo.leses.letch.lethe.letup.leuds.levee.level.lever.levin.levis.lewis.lexes.lexis.lezes.lezzy.liana.liane.liang.liard.liars.libel.liber.libra.libri.lichi.licht.licit.licks.lidar.lidos.liege.liens.liers.lieus.lieve.lifer.lifts.ligan.liger.light.liked.liken.liker.likes.lilac.lilos.lilts.liman.limas.limba.limbi.limbo.limbs.limby.limed.limen.limes.limey.limit.limns.limos.limpa.limps.linac.lindy.lined.linen.liner.lines.liney.linga.lingo.lings.lingy.linin.links.linky.linns.linos.lints.linty.linum.lions.lipas.lipid.lipin.lippy.liras.lirot.lisle.lisps.lists.litai.litas.liter.lithe.litho.litre.lived.liven.liver.lives.livid.livre.llama.llano.loach.loads.loafs.loams.loamy.loans.loath.lobar.lobby.lobed.lobes.lobos.local.lochs.locks.locos.locum.locus.loden.lodes.lodge.loess.lofts.lofty.logan.loges.loggy.logia.logic.login.logoi.logon.logos.loids.loins.lolls.lolly.loner.longe.longs.looby.looed.looey.loofa.loofs.looie.looks.looms.loons.loony.loops.loopy.loose.loots.loped.loper.lopes.loppy.loral.loran.lords.lores.loris.lorry.losel.loser.loses.lossy.lotah.lotas.lotic.lotos.lotte.lotto.lotus.lough.louie.louis.louma.loupe.loups.lours.loury.louse.lousy.louts.lovat.loved.lover.loves.lowed.lower.lowes.lowly.lowse.loxed.loxes.loyal.luaus.lubed.lubes.luces.lucid.lucks.lucky.lucre.ludes.ludic.luffa.luffs.luged.luger.luges.lulls.lulus.lumas.lumen.lumps.lumpy.lunar.lunas.lunch.lunes.lunet.lunge.lungi.lungs.lunks.lunts.lupin.lupus.lurch.lured.lurer.lures.lurex.lurid.lurks.lusts.lusty.lusus.lutea.luted.lutes.luxes.lweis.lyard.lyart.lyase.lycea.lycee.lycra.lying.lymph.lynch.lyres.lyric.lysed.lyses.lysin.lysis.lyssa.lytic.lytta.maars.mabes.macaw.maced.macer.maces.mache.macho.machs.macks.macle.macon.macro.madam.madly.madre.mafia.mafic.mages.magic.magma.magot.magus.mahoe.maids.maile.maill.mails.maims.mains.mairs.maist.maize.major.makar.maker.makes.makos.malar.males.malic.malls.malms.malmy.malts.malty.mamas.mamba.mambo.mamey.mamie.mamma.mammy.manas.manat.maned.manes.manga.mange.mango.mangy.mania.manic.manly.manna.manor.manos.manse.manta.manus.maple.maqui.maras.march.marcs.mares.marge.maria.marka.marks.marls.marly.marry.marse.marsh.marts.marvy.masas.maser.mashy.masks.mason.massa.masse.massy.masts.match.mated.mater.mates.matey.maths.matin.matte.matts.matza.matzo.mauds.mauls.maund.mauts.mauve.maven.mavie.mavin.mavis.mawed.maxed.maxes.maxim.maxis.mayan.mayas.maybe.mayed.mayor.mayos.mayst.mazed.mazer.mazes.mbira.meads.meals.mealy.means.meant.meany.meats.meaty.mecca.medal.media.medic.medii.meeds.meets.meiny.melds.melee.melic.mells.melon.melts.melty.memes.memos.menad.mends.mensa.mense.mensh.menta.menus.meous.meows.merch.mercs.mercy.merde.merer.meres.merge.merit.merks.merle.merls.merry.mesas.meshy.mesic.mesne.meson.messy.metal.meted.meter.metes.meths.metis.metol.metre.metro.mewed.mewls.mezes.mezzo.miaou.miaow.miasm.miaul.micas.miche.micks.micra.micro.middy.midge.midis.midst.miens.miffs.miffy.miggs.might.miked.mikes.mikra.milch.milds.miler.miles.milia.milks.milky.mille.mills.milos.milpa.milts.milty.mimed.mimeo.mimer.mimes.mimic.minae.minas.mince.mincy.minds.mined.miner.mines.mingy.minim.minis.minke.minks.minny.minor.mints.minty.minus.mired.mires.mirex.mirid.mirin.mirks.mirky.mirth.mirza.misdo.miser.mises.misos.missy.mists.misty.miter.mites.mitis.mitre.mitts.mixed.mixer.mixes.mixup.mizen.moats.mocha.mocks.modal.model.modem.modes.modus.moggy.mogul.mohel.mohur.moils.moira.moire.moist.mojos.mokes.molal.molar.molas.molds.moldy.moles.molls.molly.molto.molts.momes.momma.mommy.momus.monad.monas.monde.mondo.money.mongo.monie.monks.monos.monte.month.mooch.moods.moody.mooed.moola.mools.moons.moony.moors.moory.moose.moots.moped.moper.mopes.mopey.morae.moral.moras.moray.morel.mores.morns.moron.morph.morro.morse.morts.mosey.mosks.mosso.mossy.moste.mosts.motel.motes.motet.motey.moths.mothy.motif.motor.motte.motto.motts.mouch.moues.mould.moult.mound.mount.mourn.mouse.mousy.mouth.moved.mover.moves.movie.mowed.mower.moxas.moxie.mozos.mucho.mucid.mucin.mucks.mucky.mucor.mucro.mucus.muddy.mudra.muffs.mufti.muggs.muggy.muhly.mujik.mulch.mulct.muled.mules.muley.mulla.mulls.multi.mumms.mummy.mumps.mumus.munch.mungo.munis.muons.mural.muras.mured.mures.murex.murid.murks.murky.murra.murre.murrs.murry.musca.mused.muser.muses.mushy.music.musks.musky.mussy.musth.musts.musty.mutch.muted.muter.mutes.muton.mutts.muzzy.mylar.mynah.mynas.myoid.myoma.myope.myopy.myrrh.mysid.myths.mythy.naans.nabes.nabis.nabob.nacho.nacre.nadas.nadir.naevi.naffs.naggy.naiad.naifs.nails.naira.nairu.naive.nakfa.nalas.naled.named.namer.names.nanas.nance.nancy.nanny.napas.napes.nappa.nappe.nappy.narco.narcs.nards.nares.naric.naris.narks.narky.nasal.nasty.natal.natch.nates.natty.naval.navar.navel.naves.navvy.nawab.neaps.nears.neath.neats.necks.neddy.needs.needy.neems.neeps.negus.neifs.neigh.neist.nelly.nemas.nenes.neons.nerds.nerdy.nerol.nerts.nertz.nerve.nervy.nests.nesty.netop.netts.netty.neuks.neume.neums.never.neves.nevus.newel.newer.newie.newly.newsy.newts.nexus.ngwee.nicad.nicer.niche.nicks.nicol.nidal.nided.nides.nidus.niece.nieve.nifty.nighs.night.nihil.nills.nimbi.nines.ninja.ninny.ninon.ninth.nipas.nippy.nisei.nisus.niter.nites.nitid.niton.nitre.nitro.nitty.nival.nixed.nixes.nixie.nizam.nobby.noble.nobly.nocks.nodal.noddy.nodes.nodus.noels.noggs.nohow.noils.noily.noirs.noise.noisy.nolos.nomad.nomas.nomen.nomes.nomoi.nomos.nonas.nonce.nones.nonet.nonyl.nooks.nooky.noons.noose.nopal.noria.noris.norms.north.nosed.noses.nosey.notal.notch.noted.noter.notes.notum.nouns.novae.novas.novel.noway.nowts.nubby.nubia.nucha.nuder.nudes.nudge.nudie.nudzh.nuked.nukes.nulls.numbs.numen.nurds.nurls.nurse.nutsy.nutty.nyala.nylon.nymph.oaken.oakum.oared.oases.oasis.oasts.oaten.oater.oaths.oaves.obeah.obeli.obese.obeys.obias.obits.objet.oboes.obole.oboli.obols.occur.ocean.ocher.ochre.ochry.ocker.ocrea.octad.octal.octan.octet.octyl.oculi.odahs.odder.oddly.odeon.odeum.odist.odium.odors.odour.odyle.odyls.ofays.offal.offed.offer.often.ofter.ogams.ogees.ogham.ogive.ogled.ogler.ogles.ogres.ohias.ohing.ohmic.oidia.oiled.oiler.oinks.okapi.okays.okehs.okras.olden.older.oldie.oleic.olein.oleos.oleum.olios.olive.ollas.ology.omasa.omber.ombre.omega.omens.omers.omits.oncet.onery.onion.onium.onlay.onset.ontic.oohed.oomph.oorie.ootid.oozed.oozes.opahs.opals.opens.opera.opine.oping.opium.opsin.opted.optic.orach.orals.orang.orate.orbed.orbit.orcas.orcin.order.ordos.oread.organ.orgic.oribi.oriel.orles.orlon.orlop.ormer.ornis.orpin.orris.ortho.orzos.osier.osmic.osmol.ossia.ostia.other.ottar.otter.ottos.ought.ounce.ouphe.ouphs.ourie.ousel.ousts.outby.outdo.outed.outer.outgo.outre.ouzel.ouzos.ovals.ovary.ovate.ovens.overs.overt.ovine.ovoid.ovoli.ovolo.ovule.owing.owlet.owned.owner.owsen.oxbow.oxeye.oxide.oxids.oxime.oxims.oxlip.oxter.oyers.ozone.pacas.paced.pacer.paces.pacey.pacha.packs.pacts.paddy.padis.padle.padre.padri.paean.paeon.pagan.paged.pager.pages.pagod.paiks.pails.pains.paint.pairs.paisa.paise.palea.paled.paler.pales.palet.palls.pally.palms.palmy.palpi.palps.palsy.pampa.panda.pandy.paned.panel.panes.panga.pangs.panic.panne.pansy.panto.pants.panty.papal.papas.papaw.paper.pappi.pappy.parae.paras.parch.pardi.pards.pardy.pared.pareo.parer.pares.pareu.parge.pargo.paris.parka.parks.parle.parol.parrs.parry.parse.parts.party.parve.parvo.paseo.pases.pasha.passe.pasta.paste.pasts.pasty.patch.pated.paten.pater.pates.paths.patin.patio.patly.patsy.patty.pause.pavan.paved.paver.paves.pavid.pavin.pavis.pawed.pawer.pawky.pawls.pawns.paxes.payed.payee.payer.payor.peace.peach.peage.peags.peaks.peaky.peals.peans.pearl.pears.peart.pease.peats.peaty.peavy.pecan.pechs.pecks.pecky.pedal.pedes.pedro.peeks.peels.peens.peeps.peers.peery.peeve.peins.peise.pekan.pekes.pekin.pekoe.peles.pelfs.pelon.pelts.penal.pence.pends.penes.pengo.penna.penne.penni.penny.peons.peony.pepla.pepos.peppy.perch.perdu.perdy.perea.peres.peril.peris.perks.perky.perms.perps.perry.perse.pervs.pesky.pesos.pesto.pests.pesty.petal.peter.petit.petti.petto.petty.pewee.pewit.phage.phase.phial.phlox.phone.phono.phons.phony.photo.phots.phpht.phuts.phyla.phyle.piano.pians.pibal.pical.picas.picks.picky.picot.picul.piece.piers.pieta.piety.piggy.pigmy.piing.pikas.piked.piker.pikes.pikis.pilaf.pilar.pilau.pilaw.pilea.piled.pilei.piles.pilis.pills.pilot.pilus.pimas.pimps.pinas.pinch.pined.pines.piney.pingo.pings.pinko.pinks.pinky.pinna.pinny.pinon.pinot.pinta.pinto.pints.pinup.pions.pious.pipal.piped.piper.pipes.pipet.pipit.pique.pirns.pirog.pisco.pisos.piste.pitas.pitch.piths.pithy.piton.pitta.pivot.pixel.pixes.pixie.pizza.place.plack.plage.plaid.plain.plait.plane.plank.plans.plant.plash.plasm.plate.plats.platy.playa.plays.plaza.plead.pleas.pleat.plebe.plebs.plena.pleon.plews.plica.plied.plier.plies.plink.plods.plonk.plops.plots.plotz.plows.ploys.pluck.plugs.plumb.plume.plump.plums.plumy.plunk.plush.plyer.poach.poboy.pocks.pocky.podgy.podia.poems.poesy.poets.pogey.poilu.poind.point.poise.poked.poker.pokes.pokey.polar.poled.poler.poles.polio.polis.polka.polls.polos.polyp.polys.pomes.pommy.pomos.pomps.ponce.ponds.pones.pongs.pooch.poods.pooed.poofs.poofy.poohs.pools.poons.poops.poori.poots.poove.popes.poppa.poppy.popsy.porch.pored.pores.porgy.porks.porky.porns.porny.ports.posed.poser.poses.posit.posse.posts.potsy.potto.potty.pouch.pouff.poufs.poult.pound.pours.pouts.pouty.power.poxed.poxes.poyou.praam.prahu.prams.prang.prank.praos.prase.prate.prats.praus.prawn.prays.preed.preen.prees.preop.preps.presa.prese.press.prest.prexy.preys.price.pricy.pride.pried.prier.pries.prigs.prill.prima.prime.primi.primo.primp.prims.prink.print.prion.prior.prise.prism.priss.privy.prize.proas.probe.prods.proem.profs.progs.prole.promo.proms.prone.prong.proof.props.prose.proso.pross.prost.prosy.proud.prove.prowl.prows.proxy.prude.prune.pruta.pryer.psalm.pseud.pshaw.psoae.psoai.psoas.psych.pubes.pubic.pubis.puces.pucka.pucks.pudge.pudgy.pudic.puffs.puffy.puggy.pujah.pujas.puked.pukes.pukka.puled.puler.pules.pulik.pulis.pulls.pulps.pulpy.pulse.pumas.pumps.punas.punch.pungs.punji.punka.punks.punky.punny.punto.punts.punty.pupae.pupal.pupas.pupil.puppy.pupus.purda.puree.purer.purge.purin.puris.purls.purrs.purse.pursy.purty.puses.pushy.puton.putti.putto.putts.putty.pygmy.pyins.pylon.pyoid.pyran.pyres.pyrex.pyric.pyros.pyxes.pyxie.pyxis.qadis.qaids.qanat.qophs.quack.quads.quaff.quags.quail.quais.quake.quaky.quale.qualm.quant.quare.quark.quart.quash.quasi.quass.quate.quays.qubit.quean.queen.queer.quell.quern.query.quest.queue.queys.quick.quids.quiet.quiff.quill.quilt.quins.quint.quips.quipu.quire.quirk.quirt.quite.quits.quods.quoin.quoit.quoll.quota.quote.quoth.qursh.rabat.rabbi.rabic.rabid.raced.racer.races.racks.racon.radar.radii.radio.radix.radon.raffs.rafts.ragas.raged.ragee.rages.raggs.raggy.ragis.raias.raids.rails.rains.rainy.raise.raita.rajah.rajas.rajes.raked.rakee.raker.rakes.rakis.rakus.rales.rally.ralph.ramal.ramee.ramen.ramet.ramie.rammy.ramps.ramus.rance.ranch.rands.randy.ranee.range.rangy.ranid.ranis.ranks.rants.raped.raper.rapes.raphe.rapid.rared.rarer.rares.rased.raser.rases.rasps.raspy.ratal.ratan.ratch.rated.ratel.rater.rates.rathe.ratio.ratos.ratty.raved.ravel.raven.raver.raves.ravin.rawer.rawin.rawly.raxed.raxes.rayah.rayas.rayed.rayon.razed.razee.razer.razes.razor.reach.react.readd.reads.ready.realm.reals.reams.reaps.rearm.rears.reata.reave.rebar.rebbe.rebec.rebel.rebid.rebop.rebus.rebut.rebuy.recap.recce.recit.recks.recon.recta.recti.recto.recur.recut.redan.redds.reded.redes.redia.redid.redip.redly.redon.redos.redox.redry.redub.redux.redye.reeds.reedy.reefs.reefy.reeks.reeky.reels.reest.reeve.refed.refel.refer.refit.refix.refly.refry.regal.reges.regma.regna.rehab.rehem.reifs.reify.reign.reink.reins.reive.rejig.rekey.relax.relay.relet.relic.relit.reman.remap.remet.remex.remit.remix.renal.rends.renew.renig.renin.rente.rents.reoil.repay.repeg.repel.repin.reply.repos.repot.repps.repro.reran.rerig.rerun.resat.resaw.resay.resee.reset.resew.resid.resin.resit.resod.resow.rests.retag.retax.retch.retem.retia.retie.retro.retry.reuse.revel.revet.revue.rewan.rewax.rewed.rewet.rewin.rewon.rexes.rheas.rheme.rheum.rhino.rhomb.rhumb.rhyme.rhyta.rials.riant.riata.ribby.ribes.riced.ricer.rices.ricin.ricks.rider.rides.ridge.ridgy.riels.rifer.riffs.rifle.rifts.right.rigid.rigor.riled.riles.riley.rille.rills.rimed.rimer.rimes.rinds.rindy.rings.rinks.rinse.rioja.riots.riped.ripen.riper.ripes.risen.riser.rises.rishi.risks.risky.risus.rites.ritzy.rival.rived.riven.river.rives.rivet.riyal.roach.roads.roams.roans.roars.roast.robed.robes.robin.roble.robot.rocks.rocky.rodeo.rodes.roger.rogue.roils.roily.roles.rolfs.rolls.roman.romeo.romps.rondo.roods.roofs.rooks.rooky.rooms.roomy.roose.roost.roots.rooty.roped.roper.ropes.ropey.roque.rosed.roses.roset.roshi.rosin.rotas.rotch.rotes.rotis.rotls.rotor.rotos.rotte.rouen.roues.rouge.rough.round.roups.roupy.rouse.roust.route.routh.routs.roved.roven.rover.roves.rowan.rowdy.rowed.rowel.rowen.rower.rowth.royal.ruana.rubby.rubel.rubes.ruble.rubus.ruche.rucks.rudds.ruddy.ruder.ruers.ruffe.ruffs.rugae.rugal.rugby.ruing.ruins.ruled.ruler.rules.rumba.rumen.rummy.rumor.rumps.runes.rungs.runic.runny.runts.runty.rupee.rural.ruses.rushy.rusks.rusts.rusty.ruths.rutin.rutty.ryked.rykes.rynds.ryots.sabal.sabed.saber.sabes.sabin.sabir.sable.sabot.sabra.sabre.sacks.sacra.sades.sadhe.sadhu.sadis.sadly.safer.safes.sagas.sager.sages.saggy.sagos.sagum.sahib.saice.saids.saiga.sails.sains.saint.saith.sajou.saker.sakes.sakis.salad.salal.salep.sales.salic.sally.salmi.salol.salon.salpa.salps.salsa.salts.salty.salve.salvo.samba.sambo.samek.samps.sands.sandy.saned.saner.sanes.sanga.sangh.santo.sapid.sapor.sappy.saran.sards.saree.sarge.sargo.sarin.saris.sarks.sarky.sarod.saros.sasin.sassy.satay.sated.satem.sates.satin.satis.satyr.sauce.sauch.saucy.saugh.sauls.sault.sauna.saury.saute.saved.saver.saves.savin.savor.savoy.savvy.sawed.sawer.saxes.sayed.sayer.sayid.sayst.scabs.scads.scags.scald.scale.scall.scalp.scaly.scamp.scams.scans.scant.scape.scare.scarf.scarp.scars.scart.scary.scats.scatt.scaup.scaur.scena.scend.scene.scent.schav.schmo.schul.schwa.scion.scoff.scold.scone.scoop.scoot.scope.scops.score.scorn.scots.scour.scout.scowl.scows.scrag.scram.scrap.scree.screw.scrim.scrip.scrod.scrub.scrum.scuba.scudi.scudo.scuds.scuff.sculk.scull.sculp.scums.scups.scurf.scuta.scute.scuts.scuzz.seals.seams.seamy.sears.seats.sebum.secco.sects.sedan.seder.sedge.sedgy.sedum.seeds.seedy.seeks.seels.seely.seems.seeps.seepy.seers.segni.segno.segos.segue.seifs.seine.seise.seism.seize.selah.selfs.selle.sells.selva.semes.semis.sends.sengi.senna.senor.sensa.sense.sente.senti.sepal.sepia.sepic.sepoy.septa.septs.serac.serai.seral.sered.serer.seres.serfs.serge.serif.serin.serow.serry.serum.serve.servo.setae.setal.seton.setts.setup.seven.sever.sewan.sewar.sewed.sewer.sexed.sexes.sexto.sexts.shack.shade.shads.shady.shaft.shags.shahs.shake.shako.shaky.shale.shall.shalt.shaly.shame.shams.shank.shape.shard.share.shark.sharn.sharp.shaul.shave.shawl.shawm.shawn.shaws.shays.sheaf.sheal.shear.sheas.sheds.sheen.sheep.sheer.sheet.sheik.shelf.shell.shend.shent.sheol.sherd.shewn.shews.shied.shiel.shier.shies.shift.shill.shily.shims.shine.shins.shiny.ships.shire.shirk.shirr.shirt.shist.shiva.shive.shivs.shlep.shlub.shoal.shoat.shock.shoed.shoer.shoes.shogi.shogs.shoji.shone.shook.shool.shoon.shoos.shoot.shops.shore.shorl.shorn.short.shote.shots.shott.shout.shove.shown.shows.showy.shoyu.shred.shrew.shris.shrub.shrug.shtik.shuck.shuln.shuls.shuns.shunt.shush.shute.shuts.shwas.shyer.shyly.sials.sibbs.sibyl.sices.sicko.sicks.sided.sides.sidhe.siege.sieur.sieve.sifts.sighs.sight.sigil.sigla.sigma.signa.signs.sikas.siker.sikes.silds.silex.silks.silky.sills.silly.silos.silts.silty.silva.simar.simas.simps.since.sines.sinew.singe.sings.sinhs.sinks.sinus.siped.sipes.sired.siree.siren.sires.sirra.sirup.sisal.sises.sissy.sitar.sited.sites.situp.situs.siver.sixes.sixmo.sixte.sixth.sixty.sizar.sized.sizer.sizes.skags.skald.skate.skats.skean.skeed.skeen.skees.skeet.skegs.skein.skell.skelm.skelp.skene.skeps.skews.skids.skied.skier.skies.skiey.skiff.skill.skimo.skimp.skims.skink.skins.skint.skips.skirl.skirr.skirt.skite.skits.skive.skoal.skort.skosh.skuas.skulk.skull.skunk.skyed.skyey.slabs.slack.slags.slain.slake.slams.slang.slank.slant.slaps.slash.slate.slats.slaty.slave.slaws.slays.sleds.sleek.sleep.sleet.slept.slews.slice.slick.slide.slier.slily.slime.slims.slimy.sling.slink.slipe.slips.slipt.slits.slobs.sloes.slogs.sloid.slojd.sloop.slope.slops.slosh.sloth.slots.slows.sloyd.slubs.slued.slues.sluff.slugs.slump.slums.slung.slunk.slurb.slurp.slurs.slush.slyer.slyly.slype.smack.small.smalt.smarm.smart.smash.smaze.smear.smeek.smell.smelt.smerk.smews.smile.smirk.smite.smith.smock.smogs.smoke.smoky.smolt.smote.smush.smuts.snack.snafu.snags.snail.snake.snaky.snaps.snare.snarf.snark.snarl.snash.snath.snaws.sneak.sneap.sneck.sneds.sneer.snell.snibs.snick.snide.sniff.snipe.snips.snits.snobs.snogs.snood.snook.snool.snoop.snoot.snore.snort.snots.snout.snows.snowy.snubs.snuck.snuff.snugs.snyes.soaks.soaps.soapy.soars.soave.sobas.sober.socas.socko.socks.socle.sodas.soddy.sodic.sodom.sofar.sofas.softa.softs.softy.soggy.soils.sojas.sokes.sokol.solan.solar.soldi.soldo.soled.solei.soles.solid.solon.solos.solum.solus.solve.soman.somas.sonar.sonde.sones.songs.sonic.sonly.sonny.sonsy.sooey.sooks.sooth.soots.sooty.sophs.sophy.sopor.soppy.soras.sorbs.sords.sored.sorel.sorer.sores.sorgo.sorns.sorry.sorta.sorts.sorus.soths.sotol.sough.souks.souls.sound.soups.soupy.sours.souse.south.sowar.sowed.sower.soyas.soyuz.sozin.space.spacy.spade.spado.spaed.spaes.spahi.spail.spait.spake.spale.spall.spams.spang.spank.spans.spare.spark.spars.spasm.spate.spats.spawn.spays.spazz.speak.spean.spear.speck.specs.speed.speel.speer.speil.speir.spell.spelt.spend.spent.spews.spica.spice.spick.spicy.spied.spiel.spier.spies.spiff.spike.spiks.spiky.spile.spill.spilt.spine.spins.spiny.spire.spirt.spiry.spite.spits.spitz.spivs.splat.splay.split.spode.spoil.spoke.spoof.spook.spool.spoon.spoor.spore.sport.spout.sprag.sprat.spray.spree.sprig.sprit.sprue.sprug.spuds.spued.spues.spume.spumy.spurn.spurs.spurt.sputa.squab.squad.squat.squaw.squeg.squib.squid.stabs.stack.stade.staff.stage.stags.stagy.staid.staig.stain.stair.stake.stale.stalk.stall.stamp.stand.stane.stang.stank.staph.stare.stark.stars.start.stash.state.stats.stave.stays.stead.steak.steal.steam.steed.steek.steel.steep.steer.stein.stela.stele.stems.steno.stent.steps.stere.stern.stets.stews.stewy.stich.stick.stied.sties.stiff.stile.still.stilt.stime.stimy.sting.stink.stint.stipe.stirk.stirp.stirs.stoae.stoai.stoas.stoat.stobs.stock.stogy.stoic.stoke.stole.stoma.stomp.stone.stony.stood.stook.stool.stoop.stope.stops.stopt.store.stork.storm.story.stoss.stots.stott.stoup.stour.stout.stove.stowp.stows.strap.straw.stray.strep.strew.stria.strid.strip.strop.strow.stroy.strum.strut.stubs.stuck.studs.study.stuff.stull.stump.stums.stung.stunk.stuns.stunt.stupa.stupe.sturt.styed.styes.style.styli.stymy.suave.subah.subas.suber.sucks.sucky.sucre.sudds.sudor.sudsy.suede.suers.suets.suety.sugar.sughs.suing.suint.suite.suits.sulci.sulfa.sulfo.sulks.sulky.sully.sulus.sumac.summa.sumos.sumps.sunna.sunns.sunny.sunup.super.supes.supra.surah.sural.suras.surds.surer.surfs.surfy.surge.surgy.surly.surra.sushi.sutra.sutta.swabs.swage.swags.swail.swain.swale.swami.swamp.swamy.swang.swank.swans.swaps.sward.sware.swarf.swarm.swart.swash.swath.swats.sways.swear.sweat.swede.sweep.sweer.sweet.swell.swept.swift.swigs.swill.swims.swine.swing.swink.swipe.swirl.swish.swiss.swith.swive.swobs.swoon.swoop.swops.sword.swore.sworn.swots.swoun.swung.sycee.syces.sykes.sylis.sylph.sylva.synch.syncs.synod.synth.syphs.syrah.syren.syrup.sysop.tabby.taber.tabes.tabid.tabla.table.taboo.tabor.tabun.tabus.taces.tacet.tache.tachs.tacit.tacks.tacky.tacos.tacts.taels.taffy.tafia.tahrs.taiga.tails.tains.taint.tajes.takas.taken.taker.takes.takin.talar.talas.talcs.taler.tales.talks.talky.talls.tally.talon.taluk.talus.tamal.tamed.tamer.tames.tamis.tammy.tamps.tanga.tango.tangs.tangy.tanka.tanks.tansy.tanto.tapas.taped.taper.tapes.tapir.tapis.tardo.tardy.tared.tares.targe.tarns.taroc.tarok.taros.tarot.tarps.tarre.tarry.tarsi.tarts.tarty.tasks.tasse.taste.tasty.tatar.tater.tates.tatty.taunt.tauon.taupe.tauts.tawed.tawer.tawie.tawny.tawse.taxed.taxer.taxes.taxis.taxol.taxon.taxus.tazza.tazze.teach.teaks.teals.teams.tears.teary.tease.teats.techs.techy.tecta.teddy.teels.teems.teens.teeny.teeth.teffs.teggs.tegua.teiid.teind.telae.telco.teles.telex.telia.telic.tells.telly.teloi.telos.tempi.tempo.temps.tempt.tench.tends.tendu.tenet.tenge.tenia.tenon.tenor.tense.tenth.tents.tenty.tepal.tepas.tepee.tepid.tepoy.terai.terce.terga.terms.terne.terns.terra.terry.terse.tesla.testa.tests.testy.teths.tetra.tetri.teuch.teugh.tewed.texas.texts.thack.thane.thank.tharm.thaws.thebe.theca.theft.thegn.thein.their.theme.thens.there.therm.these.thesp.theta.thews.thewy.thick.thief.thigh.thill.thine.thing.think.thins.thiol.third.thirl.thole.thong.thorn.thoro.thorp.those.thous.thraw.three.threw.thrip.throb.throe.throw.thrum.thuds.thugs.thuja.thumb.thump.thunk.thurl.thuya.thyme.thymi.thymy.tiara.tibia.tical.ticks.tidal.tided.tides.tiers.tiffs.tiger.tight.tigon.tikes.tikis.tikka.tilak.tilde.tiled.tiler.tiles.tills.tilth.tilts.timed.timer.times.timid.tinct.tinea.tined.tines.tinge.tings.tinny.tints.tipis.tippy.tipsy.tired.tires.tirls.tiros.titan.titer.tithe.titis.title.titre.titty.tizzy.toads.toady.toast.today.toddy.toeas.toffs.toffy.tofts.tofus.togae.togas.togue.toile.toils.toits.tokay.toked.token.toker.tokes.tolan.tolar.tolas.toled.toles.tolls.tolus.tolyl.toman.tombs.tomes.tommy.tonal.tondi.tondo.toned.toner.tones.toney.tonga.tongs.tonic.tonne.tonus.tools.toons.tooth.toots.topaz.toped.topee.toper.topes.tophe.tophi.tophs.topic.topis.topoi.topos.toque.torah.toras.torch.torcs.tores.toric.torii.toros.torot.torrs.torse.torsi.torsk.torso.torta.torte.torts.torus.total.toted.totem.toter.totes.touch.tough.tours.touse.touts.towed.towel.tower.towie.towns.towny.toxic.toxin.toyed.toyer.toyon.toyos.trace.track.tract.trade.tragi.traik.trail.train.trait.tramp.trams.trank.tranq.trans.traps.trapt.trash.trass.trave.trawl.trays.tread.treat.treed.treen.trees.treks.trend.tress.trets.trews.treys.triac.triad.trial.tribe.trice.trick.tried.trier.tries.trigo.trigs.trike.trill.trims.trine.triol.trios.tripe.trips.trite.troak.trock.trode.trogs.trois.troke.troll.tromp.trona.trone.troop.trooz.trope.troth.trots.trout.trove.trows.troys.truce.truck.trued.truer.trues.trugs.trull.truly.trump.trunk.truss.trust.truth.tryma.tryst.tsade.tsadi.tsars.tsked.tsuba.tubae.tubal.tubas.tubby.tubed.tuber.tubes.tucks.tufas.tuffs.tufts.tufty.tules.tulip.tulle.tumid.tummy.tumor.tumps.tunas.tuned.tuner.tunes.tungs.tunic.tunny.tupik.tuque.turbo.turds.turfs.turfy.turks.turns.turps.tushy.tusks.tutee.tutor.tutti.tutty.tutus.tuxes.tuyer.twaes.twain.twang.twats.tweak.tweed.tween.tweet.twerp.twice.twier.twigs.twill.twine.twins.twiny.twirl.twirp.twist.twits.twixt.twyer.tyees.tyers.tying.tyiyn.tykes.tyned.tynes.typal.typed.types.typey.typic.typos.typps.tyred.tyres.tyros.tythe.tzars.udder.udons.uglis.uhlan.ukase.ulama.ulans.ulcer.ulema.ulnad.ulnae.ulnar.ulnas.ulpan.ultra.ulvas.umami.umbel.umber.umbos.umbra.umiac.umiak.umiaq.umped.unais.unapt.unarm.unary.unaus.unban.unbar.unbid.unbox.uncap.uncia.uncle.uncos.uncoy.uncus.uncut.undee.under.undid.undue.unfed.unfit.unfix.ungot.unhat.unhip.unify.union.unite.units.unity.unjam.unlay.unled.unlet.unlit.unman.unmet.unmew.unmix.unpeg.unpen.unpin.unrig.unrip.unsay.unset.unsew.unsex.untie.until.unwed.unwet.unwit.unwon.unzip.upbow.upbye.updos.updry.upend.uplit.upped.upper.upset.uraei.urare.urari.urase.urate.urban.urbia.ureal.ureas.uredo.ureic.urged.urger.urges.urial.urine.urped.ursae.ursid.usage.users.usher.using.usnea.usque.usual.usurp.usury.uteri.utile.utter.uveal.uveas.uvula.vacua.vagal.vague.vagus.vails.vairs.vakil.vales.valet.valid.valor.valse.value.valve.vamps.vampy.vanda.vaned.vanes.vangs.vapid.vapor.varas.varia.varix.varna.varus.varve.vasal.vases.vasts.vasty.vatic.vatus.vault.vaunt.veals.vealy.veena.veeps.veers.veery.vegan.veges.vegie.veils.veins.veiny.velar.velds.veldt.velum.venae.venal.vends.venge.venin.venom.vents.venue.venus.verbs.verge.verse.verso.verst.verts.vertu.verve.vesta.vests.vetch.vexed.vexer.vexes.vexil.vials.viand.vibes.vicar.viced.vices.vichy.video.viers.views.viewy.vigas.vigia.vigil.vigor.viler.villa.villi.vills.vimen.vinal.vinas.vinca.vined.vines.vinic.vinos.vinyl.viola.viols.viper.viral.vireo.vires.virga.virid.virls.virtu.virus.visas.vised.vises.visit.visor.vista.vitae.vital.vitta.vivas.vivid.vixen.vizir.vizor.vocab.vocal.voces.vodka.vodou.vodun.vogie.vogue.voice.voids.voila.voile.volar.voled.voles.volta.volte.volti.volts.volva.vomer.vomit.voted.voter.votes.vouch.vowed.vowel.vower.voxel.vroom.vrouw.vrows.vuggs.vuggy.vughs.vulgo.vying.wacke.wacko.wacks.wacky.waddy.waded.wader.wades.wadis.wafer.waffs.wafts.waged.wager.wages.wagon.wahoo.waifs.wails.wains.wairs.waist.waits.waive.waked.waken.waker.wakes.waled.waler.wales.walks.walla.walls.wally.waltz.wames.wamus.wands.waned.wanes.waney.wanks.wanly.wants.wards.wared.wares.warks.warms.warns.warps.warts.warty.washy.wasps.waspy.waste.wasts.watap.watch.water.watts.waugh.wauks.wauls.waved.waver.waves.wavey.wawls.waxed.waxen.waxer.waxes.wazoo.weald.weals.weans.wears.weary.weave.webby.weber.wecht.wedel.wedge.wedgy.weeds.weedy.weeks.weens.weeny.weeps.weepy.weest.weets.wefts.weigh.weird.weirs.wekas.welch.welds.wells.welly.welsh.welts.wench.wends.wenny.wests.wetly.whack.whale.whamo.whams.whang.whaps.wharf.whats.whaup.wheal.wheat.wheel.wheen.wheep.whelk.whelm.whelp.whens.where.whets.whews.wheys.which.whids.whiff.whigs.while.whims.whine.whins.whiny.whips.whipt.whirl.whirr.whirs.whish.whisk.whist.white.whits.whity.whizz.whole.whomp.whoof.whoop.whops.whorl.whort.whose.whoso.whump.whups.wicca.wicks.widdy.widen.wider.wides.widow.width.wield.wifed.wifes.wifey.wifty.wigan.wiggy.wight.wilco.wilds.wiled.wiles.wills.wilts.wimps.wimpy.wince.winch.winds.windy.wined.wines.winey.wings.wingy.winks.winos.winze.wiped.wiper.wipes.wired.wirer.wires.wirra.wised.wiser.wises.wisha.wisps.wispy.wists.witan.witch.wited.wites.withe.withy.witty.wived.wiver.wives.wizen.wizes.woads.woald.wodge.woful.woken.wolds.wolfs.woman.wombs.womby.women.womyn.wonks.wonky.wonts.woods.woody.wooed.wooer.woofs.wools.wooly.woops.woosh.woozy.words.wordy.works.world.worms.wormy.worry.worse.worst.worth.worts.would.wound.woven.wowed.wrack.wrang.wraps.wrapt.wrath.wreak.wreck.wrens.wrest.wrick.wried.wrier.wries.wring.wrist.write.writs.wrong.wrote.wroth.wrung.wryer.wryly.wurst.wushu.wussy.wyled.wyles.wynds.wynns.wyted.wytes.xebec.xenia.xenic.xenon.xeric.xerox.xerus.xylan.xylem.xylol.xylyl.xysti.xysts.yabby.yacht.yacks.yaffs.yager.yagis.yahoo.yaird.yamen.yamun.yangs.yanks.yapok.yapon.yards.yarer.yarns.yauds.yauld.yaups.yawed.yawey.yawls.yawns.yawps.yclad.yeahs.yeans.yearn.years.yeast.yecch.yechs.yechy.yeggs.yelks.yells.yelps.yenta.yente.yerba.yerks.yeses.yetis.yetts.yeuks.yeuky.yield.yikes.yills.yince.yipes.yirds.yirrs.yirth.ylems.yobbo.yocks.yodel.yodhs.yodle.yogas.yogee.yoghs.yogic.yogin.yogis.yoked.yokel.yokes.yolks.yolky.yomim.yonic.yonis.yores.young.yourn.yours.youse.youth.yowed.yowes.yowie.yowls.yoyos.yuans.yucas.yucca.yucch.yucks.yucky.yugas.yukky.yulan.yules.yummy.yupon.yuppy.yurta.yurts.zaire.zamia.zanza.zappy.zarfs.zaxes.zayin.zazen.zeals.zebec.zebra.zebus.zeins.zerks.zeros.zests.zesty.zetas.zibet.zilch.zills.zincs.zincy.zineb.zines.zings.zingy.zinky.zippy.ziram.zitis.zizit.zlote.zloty.zoeae.zoeal.zoeas.zombi.zonae.zonal.zoned.zoner.zones.zonks.zooey.zooid.zooks.zooms.zoons.zooty.zoril.zoris.zouks.zowie.zuzim.zymes.",
		() => ".aahing.aaliis.aarrgh.abacas.abacus.abakas.abamps.abased.abaser.abases.abasia.abated.abater.abates.abatis.abator.abayas.abbacy.abbess.abbeys.abbots.abduce.abduct.abeles.abelia.abhors.abided.abider.abides.abject.abjure.ablate.ablaut.ablaze.ablest.ablins.abloom.ablush.abmhos.aboard.aboded.abodes.abohms.abolla.abomas.aboral.aborts.abound.aboves.abrade.abraid.abroad.abrupt.abseil.absent.absorb.absurd.abulia.abulic.abused.abuser.abuses.abvolt.abwatt.abying.abysms.acacia.acajou.acarid.acarus.accede.accent.accept.access.accord.accost.accrue.accuse.acedia.acetal.acetic.acetin.acetum.acetyl.achene.achier.aching.acidic.acidly.acinar.acinic.acinus.ackees.acnode.acorns.acquit.across.acting.actins.action.active.actors.actual.acuate.acuity.aculei.acumen.acuter.acutes.adages.adagio.adapts.addend.adders.addict.adding.addled.addles.adduce.adduct.adeems.adenyl.adepts.adhere.adieus.adieux.adipic.adjoin.adjure.adjust.admass.admire.admits.admixt.adnate.adnexa.adnoun.adobes.adobos.adonis.adopts.adored.adorer.adores.adorns.adrift.adroit.adsorb.adults.advect.advent.adverb.advert.advice.advise.adytum.adzing.adzuki.aecial.aecium.aedile.aedine.aeneus.aeonic.aerate.aerial.aeried.aerier.aeries.aerify.aerily.aerobe.aerugo.aether.afeard.affair.affect.affine.affirm.afflux.afford.affray.afghan.afield.aflame.afloat.afraid.afreet.afresh.afrits.afters.aftosa.agamas.agamic.agamid.agapae.agapai.agapes.agaric.agates.agaves.agedly.ageing.ageism.ageist.agency.agenda.agenes.agents.aggada.aggers.aggies.aggros.aghast.agings.agisms.agists.agitas.aglare.agleam.aglets.agnail.agnate.agnize.agonal.agones.agonic.agorae.agoras.agorot.agouti.agouty.agrafe.agreed.agrees.agrias.aguish.ahchoo.ahimsa.aholds.ahorse.aiders.aidful.aiding.aidman.aidmen.aiglet.aigret.aikido.ailing.aimers.aimful.aiming.aiolis.airbag.airbus.airers.airest.airier.airily.airing.airman.airmen.airted.airths.airway.aisled.aisles.aivers.ajivas.ajowan.ajugas.akelas.akenes.akimbo.alamos.alands.alanin.alants.alanyl.alarms.alarum.alaska.alated.alates.albata.albedo.albeit.albino.albite.albums.alcade.alcaic.alcids.alcove.alders.aldols.aldose.aldrin.alegar.alephs.alerts.alevin.alexia.alexin.alfaki.algins.algoid.algors.algums.alibis.alible.alidad.aliens.alight.aligns.alined.aliner.alines.aliped.aliyah.aliyas.aliyos.aliyot.alkali.alkane.alkene.alkies.alkine.alkoxy.alkyds.alkyls.alkyne.allays.allees.allege.allele.alleys.allied.allies.allium.allods.allots.allows.alloys.allude.allure.allyls.almahs.almehs.almner.almond.almost.almuce.almude.almuds.almugs.alnico.alodia.alohas.aloins.alpaca.alphas.alphyl.alpine.alsike.altars.alters.althea.aludel.alulae.alular.alumin.alumna.alumni.alvine.always.amadou.amarna.amatol.amazed.amazes.amazon.ambage.ambari.ambary.ambeer.ambers.ambery.ambits.ambled.ambler.ambles.ambush.amebae.ameban.amebas.amebic.ameers.amends.aments.amerce.amices.amicus.amides.amidic.amidin.amidol.amidst.amigas.amigos.amines.aminic.ammine.ammino.ammono.amnion.amnios.amoeba.amoles.amoral.amount.amours.ampere.amping.ampler.ampule.ampuls.amrita.amtrac.amucks.amulet.amused.amuser.amuses.amusia.amylic.amylum.anabas.anadem.anally.analog.ananke.anarch.anatto.anchor.anchos.ancone.andros.anears.aneled.aneles.anemia.anemic.anenst.anergy.angary.angels.angers.angina.angled.angler.angles.anglos.angora.angsts.anilin.animal.animas.animes.animis.animus.anions.anises.anisic.ankled.ankles.anklet.ankush.anlace.anlage.annals.anneal.annexe.annona.annoys.annual.annuli.annuls.anodal.anodes.anodic.anoint.anoles.anomic.anomie.anonym.anopia.anorak.anoxia.anoxic.ansate.answer.anteed.anthem.anther.antiar.antick.antics.anting.antler.antral.antres.antrum.anural.anuran.anuria.anuric.anuses.anvils.anyhow.anyone.anyons.anyway.aorist.aortae.aortal.aortas.aortic.aoudad.apache.apathy.apercu.apexes.aphids.aphtha.apiary.apical.apices.apiece.aplite.aplomb.apneal.apneas.apneic.apnoea.apodal.apogee.apollo.apolog.aporia.appall.appals.appeal.appear.appels.append.apples.applet.appose.aprons.aptest.arabic.arable.arames.aramid.arbors.arbour.arbute.arcade.arcana.arcane.arched.archer.arches.archil.archly.archon.arcing.arcked.arctic.ardebs.ardent.ardors.ardour.arecas.arenas.arenes.areola.areole.arepas.aretes.argala.argali.argals.argent.argils.argled.argles.argols.argons.argosy.argots.argued.arguer.argues.argufy.argyle.argyll.arhats.ariary.arider.aridly.ariels.aright.ariled.ariose.ariosi.arioso.arisen.arises.arista.aristo.arkose.armada.armers.armets.armful.armies.arming.armlet.armors.armory.armour.armpit.armure.arnica.aroids.aroint.aromas.around.arouse.aroynt.arpens.arpent.arrack.arrant.arrays.arrear.arrest.arriba.arrive.arroba.arrows.arrowy.arroyo.arseno.arshin.arsine.arsino.arsons.artels.artery.artful.artier.artily.artist.asanas.asarum.ascend.ascent.ascots.asdics.ashcan.ashier.ashing.ashlar.ashler.ashman.ashmen.ashore.ashram.asides.askant.askers.asking.aslant.asleep.aslope.aslosh.aspect.aspens.aspers.aspics.aspire.aspish.asrama.assail.assais.assays.assent.assert.assess.assets.assign.assist.assize.assoil.assort.assume.assure.astern.asters.asthma.astony.astral.astray.astute.aswarm.aswirl.aswoon.asylum.atabal.ataman.atavic.ataxia.ataxic.atelic.atlatl.atmans.atolls.atomic.atonal.atoned.atoner.atones.atonia.atonic.atopic.atrial.atrium.attach.attack.attain.attars.attend.attent.attest.attics.attire.attorn.attrit.attune.atwain.atween.atypic.aubade.auburn.aucuba.audads.audial.audile.auding.audios.audits.augend.augers.aughts.augite.augurs.augury.august.auklet.aulder.auntie.auntly.aurate.aureus.aurist.aurora.aurous.aurums.auspex.ausubo.auteur.author.autism.autist.autoed.autumn.auxins.avails.avatar.avaunt.avenge.avenue.averse.averts.avians.aviary.aviate.avidin.avidly.avions.avisos.avocet.avoids.avoset.avouch.avowal.avowed.avower.avulse.awaits.awaked.awaken.awakes.awards.aweary.aweigh.aweing.awhile.awhirl.awless.awmous.awning.awoken.axeman.axemen.axenic.axilla.axioms.axions.axised.axises.axites.axlike.axonal.axones.axonic.axseed.azalea.azides.azines.azlons.azoles.azonal.azonic.azoted.azotes.azoths.azotic.azukis.azures.azygos.baaing.baalim.baases.babble.babels.babied.babier.babies.babkas.babool.baboon.baboos.babuls.baccae.bached.baches.backed.backer.backup.bacons.bacula.badass.badder.baddie.badged.badger.badges.badman.badmen.baffed.baffle.bagass.bagels.bagful.bagged.bagger.baggie.bagman.bagmen.bagnio.baguet.bagwig.bailed.bailee.bailer.bailey.bailie.bailor.bairns.baited.baiter.baizas.baizes.bakers.bakery.baking.balata.balboa.balded.balder.baldly.baleen.balers.baling.balked.balker.ballad.balled.baller.ballet.ballon.ballot.ballsy.balsam.balsas.bamboo.bammed.banana.bancos.bandas.banded.bander.bandit.bandog.banged.banger.bangle.banian.baning.banish.banjax.banjos.banked.banker.bankit.banned.banner.bannet.bantam.banter.banyan.banzai.baobab.barbal.barbed.barbel.barber.barbes.barbet.barbie.barbut.barcas.barded.bardes.bardic.barege.barely.barest.barfed.barfly.barged.bargee.barges.barhop.baring.barite.barium.barked.barker.barley.barlow.barman.barmen.barmie.barned.barney.barong.barons.barony.barque.barred.barrel.barren.barres.barret.barrio.barrow.barter.baryes.baryon.baryta.baryte.basalt.basely.basest.bashaw.bashed.basher.bashes.basics.basify.basils.basing.basins.basion.basked.basket.basque.basses.basset.bassly.bassos.basted.baster.bastes.batboy.bateau.bathed.bather.bathes.bathos.batiks.bating.batman.batmen.batons.batted.batten.batter.battik.battle.battue.baubee.bauble.baulks.baulky.bawbee.bawdry.bawled.bawler.bawtie.bayamo.bayard.baying.bayman.baymen.bayous.bazaar.bazars.bazoos.beachy.beacon.beaded.beader.beadle.beagle.beaked.beaker.beamed.beaned.beanie.beanos.beards.bearer.beasts.beaten.beater.beauts.beauty.beaver.bebops.becalm.became.becaps.becked.becket.beckon.beclog.become.bedamn.bedaub.bedbug.bedded.bedder.bedeck.bedell.bedels.bedews.bedims.bedlam.bedpan.bedrid.bedrug.bedsit.beduin.bedumb.beebee.beechy.beefed.beeped.beeper.beetle.beeves.beezer.befall.befell.befits.beflag.beflea.befogs.befool.before.befoul.befret.begall.begaze.begets.beggar.begged.begins.begird.begirt.beglad.begone.begrim.begulf.begums.behalf.behave.beheld.behest.behind.behold.behoof.behove.behowl.beiges.beigne.beings.bekiss.beknot.belady.belaud.belays.beldam.beleap.belfry.belgas.belied.belief.belier.belies.belike.belive.belled.belles.bellow.belong.belons.belows.belted.belter.beluga.bemata.bemean.bemire.bemist.bemixt.bemoan.bemock.bemuse.bename.benday.bended.bendee.bender.bendys.benign.bennes.bennet.bennis.bentos.benumb.benzal.benzin.benzol.benzyl.berake.berate.bereft.berets.berime.berlin.bermed.bermes.bertha.berths.beryls.beseem.besets.beside.besmut.besnow.besoms.besots.bested.bestir.bestow.bestud.betake.betels.bethel.betide.betime.betise.betons.betony.betook.betray.bettas.betted.better.bettor.bevels.bevies.bevors.bewail.beware.beweep.bewept.bewigs.beworm.bewrap.bewray.beylic.beylik.beyond.bezant.bezazz.bezels.bezils.bezoar.bhakta.bhakti.bhangs.bharal.bhoots.bialis.bialys.biased.biases.biaxal.bibbed.bibber.bibles.bicarb.biceps.bicker.bicorn.bicron.bidden.bidder.biders.bidets.biding.bields.biface.biffed.biffin.biflex.bifold.biform.bigamy.bigeye.bigger.biggie.biggin.bights.bigots.bigwig.bijous.bijoux.bikers.bikies.biking.bikini.bilboa.bilbos.bilged.bilges.bilked.bilker.billed.biller.billet.billie.billon.billow.bimahs.bimbos.binary.binate.binder.bindis.bindle.biners.binged.binger.binges.bingos.binits.binned.binocs.biogas.biogen.biomes.bionic.bionts.biopic.biopsy.biotas.biotic.biotin.bipack.bipeds.bipods.birded.birder.birdie.bireme.birkie.birled.birler.birles.birred.birses.births.bisect.bishop.bisons.bisque.bister.bistre.bistro.bitchy.biters.biting.bitmap.bitted.bitten.bitter.bizone.bizzes.blabby.blacks.bladed.blader.blades.blaffs.blains.blamed.blamer.blames.blanch.blanks.blared.blares.blasts.blasty.blawed.blazed.blazer.blazes.blazon.bleach.bleaks.blears.bleary.bleats.blebby.bleeds.bleeps.blench.blende.blends.blenny.blight.blimey.blimps.blinds.blinis.blinks.blintz.blites.blithe.bloats.blocks.blocky.blokes.blonde.blonds.bloods.blooey.blooie.blooms.bloomy.bloops.blotch.blotto.blotty.blouse.blousy.blowby.blowed.blower.blowsy.blowup.blowzy.bludge.bluely.bluest.bluesy.bluets.blueys.bluffs.bluing.bluish.blumed.blumes.blunge.blunts.blurbs.blurry.blurts.blypes.boards.boarts.boasts.boated.boatel.boater.bobbed.bobber.bobbin.bobble.bobcat.bocces.boccia.boccie.boccis.boches.bodega.bodice.bodied.bodies.bodily.boding.bodkin.boffed.boffin.boffos.bogans.bogart.bogeys.bogged.boggle.bogies.bogles.boheas.bohunk.boiled.boiler.boings.boinks.boites.bolder.boldly.bolero.bolete.boleti.bolide.bolled.bollix.bollox.bolshy.bolson.bolted.bolter.bombax.bombed.bomber.bombes.bombyx.bonaci.bonbon.bonded.bonder.bonduc.boners.bonged.bongos.bonier.boning.bonita.bonito.bonked.bonnes.bonnet.bonnie.bonobo.bonsai.bonzer.bonzes.boobed.boobie.booboo.boocoo.boodle.booger.boogey.boogie.boohoo.booing.boojum.booked.booker.bookie.bookoo.boomed.boomer.boosts.booted.bootee.booths.bootie.boozed.boozer.boozes.bopeep.bopped.bopper.borage.borals.borane.borate.bordel.border.boreal.boreas.boreen.borers.boride.boring.borked.borons.borrow.borsch.borsht.borzoi.boshes.bosker.bosket.bosoms.bosomy.bosons.bosque.bossed.bosses.boston.bosuns.botany.botchy.botels.botfly.bother.bottle.bottom.boubou.boucle.boudin.bouffe.boughs.bought.bougie.boules.boulle.bounce.bouncy.bounds.bounty.bourgs.bourne.bourns.bourse.boused.bouses.bouton.bovids.bovine.bowels.bowers.bowery.bowfin.bowing.bowled.bowleg.bowler.bowman.bowmen.bowpot.bowsed.bowses.bowtie.bowwow.bowyer.boxcar.boxers.boxful.boxier.boxily.boxing.boyard.boyars.boyish.boylas.braced.bracer.braces.brachs.bracts.braggy.brahma.braids.brails.brains.brainy.braise.braize.braked.brakes.branch.brands.brandy.branks.branny.brants.brashy.brasil.brassy.bratty.bravas.braved.braver.braves.bravos.brawer.brawls.brawly.brawns.brawny.brayed.brayer.brazas.brazed.brazen.brazer.brazes.brazil.breach.breads.bready.breaks.breams.breast.breath.bredes.breech.breeds.breeks.breeze.breezy.bregma.brents.breves.brevet.brewed.brewer.brewis.briard.briars.briary.bribed.bribee.briber.bribes.bricks.bricky.bridal.brides.bridge.bridle.briefs.briers.briery.bright.brillo.brills.brined.briner.brines.brings.brinks.briony.brises.brisks.briths.britts.broach.broads.broche.brocks.brogan.brogue.broils.broken.broker.brolly.bromal.bromes.bromic.bromid.bromin.bromos.bronco.broncs.bronze.bronzy.brooch.broods.broody.brooks.brooms.broomy.broses.broths.brothy.browed.browns.browny.browse.brucin.brughs.bruins.bruise.bruits.brulot.brumal.brumby.brumes.brunch.brunet.brunts.brushy.brutal.bruted.brutes.bruxed.bruxes.bryony.bubale.bubals.bubbas.bubble.bubbly.bubkes.buboed.buboes.buccal.bucked.bucker.bucket.buckle.buckos.buckra.budded.budder.buddha.buddle.budged.budger.budges.budget.budgie.buffed.buffer.buffet.buffos.bugeye.bugged.bugled.bugler.bugles.bugout.bugsha.builds.bulbar.bulbed.bulbel.bulbil.bulbul.bulged.bulger.bulges.bulgur.bulked.bullae.bulled.bullet.bumble.bumkin.bummed.bummer.bumped.bumper.bumphs.bunchy.buncos.bundle.bundts.bunged.bungee.bungle.bunion.bunked.bunker.bunkos.bunkum.bunted.bunter.bunyas.buoyed.bupkes.bupkus.buppie.buqsha.burans.burble.burbly.burbot.burden.burdie.bureau.burets.burgee.burger.burghs.burgle.burgoo.burial.buried.burier.buries.burins.burkas.burked.burker.burkes.burlap.burled.burler.burley.burned.burner.burnet.burnie.burped.burqas.burred.burrer.burros.burrow.bursae.bursal.bursar.bursas.burses.bursts.burton.busbar.busboy.bushed.bushel.busher.bushes.bushwa.busied.busier.busies.busily.busing.busked.busker.buskin.busman.busmen.bussed.busses.busted.buster.bustic.bustle.butane.butene.buteos.butled.butler.butles.butted.butter.buttes.button.bututs.butyls.buyers.buying.buyoff.buyout.buzuki.buzzed.buzzer.buzzes.bwanas.byelaw.bygone.bylaws.byline.byname.bypass.bypast.bypath.byplay.byrled.byrnie.byroad.byssal.byssus.bytalk.byways.byword.bywork.byzant.cabala.cabals.cabana.cabbed.cabbie.cabers.cabins.cabled.cabler.cables.cablet.cabman.cabmen.cabobs.cacaos.cached.caches.cachet.cachou.cackle.cactus.caddie.caddis.cadent.cadets.cadged.cadger.cadges.cadmic.cadres.caecal.caecum.caeoma.caesar.caftan.cagers.cagier.cagily.caging.cahier.cahoot.cahows.caiman.caique.cairds.cairns.cairny.cajole.cakier.caking.calami.calash.calcar.calces.calcic.calesa.calico.califs.caliph.calked.calker.calkin.callan.callas.called.callee.caller.callet.callow.callus.calmed.calmer.calmly.calory.calpac.calque.calved.calves.calxes.camail.camass.camber.cambia.camels.cameos.camera.camion.camisa.camise.camlet.cammie.camped.camper.campos.campus.canals.canape.canard.canary.cancan.cancel.cancer.cancha.candid.candle.candor.caners.canful.cangue.canids.canine.caning.canker.cannas.canned.cannel.canner.cannie.cannon.cannot.canoed.canoer.canoes.canola.canons.canopy.cansos.cantal.canted.canter.canthi.cantic.cantle.canton.cantor.cantos.cantus.canula.canvas.canyon.capers.capful.capias.capita.caplet.caplin.capons.capote.capped.capper.capric.capris.capsid.captan.captor.carack.carafe.carate.carats.carbon.carbos.carboy.carcel.carded.carder.cardia.cardio.cardon.careen.career.carers.caress.carets.carful.cargos.carhop.caribe.caried.caries.carina.caring.carked.carles.carlin.carman.carmen.carnal.carnet.carney.carnie.carobs.caroch.caroli.carols.caroms.carpal.carped.carpel.carper.carpet.carpus.carrel.carrom.carrot.carses.carted.cartel.carter.cartes.carton.cartop.carved.carvel.carven.carver.carves.casaba.casava.casbah.casefy.caseic.casein.casern.cashaw.cashed.cashes.cashew.cashoo.casing.casini.casino.casita.casked.casket.casque.cassia.cassis.caster.castes.castle.castor.casual.catalo.catchy.catena.caters.catgut.cation.catkin.catlin.catnap.catnip.catsup.catted.cattie.cattle.caucus.caudad.caudal.caudex.caudle.caught.caulds.caules.caulis.caulks.causal.caused.causer.causes.causey.caveat.cavern.cavers.caviar.cavies.cavils.caving.cavity.cavort.cawing.cayman.cayuse.ceased.ceases.cebids.ceboid.cecity.cedarn.cedars.cedary.ceders.ceding.cedula.ceibas.ceiled.ceiler.ceilis.celebs.celery.celiac.cellae.cellar.celled.cellos.celoms.cement.cenote.censed.censer.censes.censor.census.centai.cental.centas.center.centos.centra.centre.centum.ceorls.cerate.cercal.cercis.cercus.cereal.cereus.cerias.cering.ceriph.cerise.cerite.cerium.cermet.cerous.certes.ceruse.cervid.cervix.cesium.cessed.cesses.cestas.cestoi.cestos.cestus.cesura.cetane.chabuk.chacma.chadar.chador.chadri.chaeta.chafed.chafer.chafes.chaffs.chaffy.chaine.chains.chairs.chaise.chakra.chalah.chaleh.chalet.chalks.chalky.challa.chally.chalot.chammy.champs.champy.chance.chancy.change.changs.chants.chanty.chapel.chapes.charas.chards.chared.chares.charge.charka.charks.charms.charro.charrs.charry.charts.chased.chaser.chases.chasms.chasmy.chasse.chaste.chatty.chaunt.chawed.chawer.chazan.cheapo.cheaps.cheats.chebec.checks.cheder.cheeks.cheeky.cheeps.cheero.cheers.cheery.cheese.cheesy.chefed.chegoe.chelae.chelas.chemic.chemos.cheque.cherry.cherts.cherty.cherub.chests.chesty.chetah.cheths.chevre.chewed.chewer.chiasm.chiaus.chicas.chicer.chichi.chicks.chicle.chicly.chicos.chided.chider.chides.chiefs.chield.chiels.chigoe.childe.chiles.chilis.chilli.chills.chilly.chimar.chimbs.chimed.chimer.chimes.chimla.chimps.chinas.chinch.chined.chines.chinky.chinos.chints.chintz.chippy.chiral.chirks.chirms.chiros.chirps.chirpy.chirre.chirrs.chirus.chisel.chital.chitin.chiton.chitty.chives.chivvy.choana.chocks.choice.choirs.choked.choker.chokes.chokey.cholas.choler.cholla.cholos.chomps.chooks.choose.choosy.chopin.choppy.choral.chords.chorea.chored.chores.choric.chorus.chosen.choses.chotts.chough.chouse.choush.chowed.chowse.chrism.chroma.chrome.chromo.chromy.chubby.chucks.chucky.chufas.chuffs.chuffy.chukar.chukka.chummy.chumps.chunks.chunky.chuppa.church.churls.churns.churro.churrs.chuted.chutes.chyles.chymes.chymic.cibols.cicada.cicala.cicale.cicely.cicero.ciders.cigars.cilice.cilium.cinder.cinema.cineol.cinque.cipher.circle.circus.cirque.cirrus.ciscos.cisted.cistus.citers.cither.citied.cities.citify.citing.citola.citole.citral.citric.citrin.citron.citrus.civets.civics.civies.civism.clachs.clacks.clades.claims.clammy.clamor.clamps.clangs.clanks.clanky.claque.claret.claros.clasps.claspt.classy.clasts.clause.claver.claves.clavus.clawed.clawer.claxon.clayed.clayey.cleans.clears.cleats.cleave.cleeks.clefts.clench.cleome.cleped.clepes.clergy.cleric.clerid.clerks.clever.clevis.clewed.cliche.clicks.client.cliffs.cliffy.clifts.climbs.climes.clinal.clinch.clines.clings.clingy.clinic.clinks.clique.cliquy.clitic.clivia.cloaca.cloaks.cloche.clocks.cloddy.cloggy.clomps.clonal.cloned.cloner.clones.clonic.clonks.clonus.cloots.cloque.closed.closer.closes.closet.clothe.cloths.clotty.clouds.cloudy.clough.clours.clouts.cloven.clover.cloves.clowns.cloyed.clozes.clubby.clucks.cluing.clumps.clumpy.clumsy.clunks.clunky.clutch.clypei.cnidae.coacts.coalas.coaled.coaler.coapts.coarse.coasts.coated.coatee.coater.coatis.coaxal.coaxed.coaxer.coaxes.cobalt.cobber.cobble.cobias.cobles.cobnut.cobras.cobweb.cocain.coccal.coccic.coccid.coccus.coccyx.cochin.cocked.cocker.cockle.cockup.cocoas.cocoon.codded.codder.coddle.codecs.codeia.codein.codens.coders.codger.codify.coding.codlin.codons.coedit.coelom.coempt.coerce.coeval.coffee.coffer.coffin.coffle.cogent.cogged.cogito.cognac.cogons.cogway.cohead.coheir.cohere.cohogs.cohort.cohosh.cohost.cohune.coifed.coiffe.coigne.coigns.coiled.coiler.coined.coiner.coital.coitus.cojoin.coking.colbys.colder.coldly.colead.coleus.colics.colies.colins.collar.collet.collie.collop.colobi.cologs.colone.coloni.colons.colony.colors.colour.colter.colugo.column.colure.colzas.comade.comake.comate.combat.combed.comber.combes.combos.comedo.comedy.comely.comers.cometh.comets.comfit.comics.coming.comity.commas.commie.commit.commix.common.comose.comous.compas.comped.compel.comply.compos.compts.comtes.concha.concho.conchs.conchy.concur.condom.condor.condos.coneys.confab.confer.confit.congas.congee.conger.conges.congii.congos.congou.conics.conies.conine.coning.conins.conium.conked.conker.conned.conner.conoid.consol.consul.contes.contos.contra.conure.convex.convey.convoy.coocoo.cooeed.cooees.cooers.cooeys.cooing.cooked.cooker.cookey.cookie.cooled.cooler.coolie.coolly.coolth.coombe.coombs.cooped.cooper.coopts.cooter.cootie.copalm.copals.copays.copeck.copens.copers.copied.copier.copies.coping.coplot.copout.copped.copper.coppra.coprah.copras.copses.copter.copula.coquet.corals.corban.corbel.corbie.corded.corder.cordon.corers.corgis.coring.corium.corked.corker.cormel.cornea.corned.cornel.corner.cornet.cornua.cornus.corody.corona.corpse.corpus.corral.corrie.corsac.corses.corset.cortex.cortin.corvee.corves.corvet.corvid.corymb.coryza.cosecs.cosets.coseys.coshed.cosher.coshes.cosied.cosier.cosies.cosign.cosily.cosine.cosmic.cosmid.cosmos.cosset.costae.costal.costar.costed.coster.costly.cotans.coteau.coting.cottae.cottar.cottas.cotter.cotton.cotype.cougar.coughs.coulee.coulis.counts.county.couped.coupes.couple.coupon.course.courts.cousin.couter.couths.covary.covens.covers.covert.covets.coveys.coving.covins.cowage.coward.cowboy.cowers.cowier.cowing.cowled.cowman.cowmen.cowpat.cowpea.cowpie.cowpox.cowrie.coxing.coydog.coyest.coying.coyish.coyote.coypou.coypus.cozens.cozeys.cozied.cozier.cozies.cozily.cozzes.craals.crabby.cracks.cracky.cradle.crafts.crafty.craggy.crakes.crambe.crambo.cramps.crampy.cranch.craned.cranes.crania.cranks.cranky.cranny.craped.crapes.crappy.crases.crasis.cratch.crated.crater.crates.craton.cravat.craved.craven.craver.craves.crawls.crawly.crayon.crazed.crazes.creaks.creaky.creams.creamy.crease.creasy.create.creche.credal.credit.credos.creeds.creeks.creels.creeps.creepy.creese.creesh.cremes.crenel.creole.creped.crepes.crepey.crepon.cresol.cressy.crests.cresyl.cretic.cretin.crewed.crewel.cricks.criers.crikey.crimes.crimps.crimpy.cringe.crinum.cripes.crises.crisic.crisis.crisps.crispy.crissa.crista.critic.croaks.croaky.crocks.crocus.crofts.crojik.crones.crooks.croons.crores.crosse.crotch.croton.crouch.croupe.croups.croupy.crouse.croute.crowds.crowdy.crowed.crower.crowns.crozer.crozes.cruces.crucks.cruddy.cruder.crudes.cruets.cruise.crumbs.crumby.crummy.crumps.crunch.cruors.crural.cruses.cruset.crusts.crusty.crutch.cruxes.crwths.crying.crypto.crypts.cuatro.cubage.cubebs.cubers.cubics.cubing.cubism.cubist.cubiti.cubits.cuboid.cuckoo.cuddie.cuddle.cuddly.cudgel.cueing.cuesta.cuffed.cuisse.culets.cullay.culled.culler.cullet.cullis.culmed.culpae.cultch.cultic.cultus.culver.cumber.cumbia.cumins.cummin.cumuli.cundum.cuneal.cunner.cupels.cupful.cupids.cupola.cuppas.cupped.cupper.cupric.cuprum.cupula.cupule.curacy.curagh.curara.curare.curari.curate.curbed.curber.curded.curdle.curers.curets.curfew.curiae.curial.curies.curing.curios.curite.curium.curled.curler.curlew.curran.curred.currie.cursed.curser.curses.cursor.curtal.curter.curtly.curtsy.curule.curved.curves.curvet.curvey.cuscus.cusecs.cushat.cushaw.cuspal.cusped.cuspid.cuspis.cussed.cusser.cusses.cussos.custom.custos.cutely.cutest.cutesy.cuteys.cuties.cutins.cutlas.cutler.cutlet.cutoff.cutout.cutter.cuttle.cutups.cuvees.cyanic.cyanid.cyanin.cyborg.cycads.cycled.cycler.cycles.cyclic.cyclin.cyclos.cyders.cyeses.cyesis.cygnet.cymars.cymbal.cymene.cymlin.cymoid.cymols.cymose.cymous.cynics.cypher.cypres.cyprus.cystic.cytons.dabbed.dabber.dabble.dachas.dacite.dacker.dacoit.dacron.dactyl.daddle.dadgum.dadoed.dadoes.daedal.daemon.daffed.dafter.daftly.daggas.dagger.daggle.dagoba.dagoes.dahlia.dahoon.daiker.daikon.daimen.daimio.daimon.daimyo.dainty.daises.dakoit.dalasi.daledh.daleth.dalles.dalton.damage.damans.damars.damask.dammar.dammed.dammer.dammit.damned.damner.damped.dampen.damper.damply.damsel.damson.danced.dancer.dances.dander.dandle.danged.danger.dangle.dangly.danios.danish.danker.dankly.daphne.dapped.dapper.dapple.darbar.darers.darics.daring.darked.darken.darker.darkey.darkie.darkle.darkly.darned.darnel.darner.darted.darter.dartle.dashed.dasher.dashes.dashis.dassie.datary.datcha.daters.dating.dative.dattos.datums.datura.daubed.dauber.daubes.daubry.daunts.dauted.dautie.davens.davies.davits.dawdle.dawing.dawned.dawted.dawtie.daybed.dayfly.daylit.dazing.dazzle.deacon.deaden.deader.deadly.deafen.deafer.deafly.deairs.dealer.deaned.dearer.dearie.dearly.dearth.deasil.deaths.deathy.deaved.deaves.debags.debark.debars.debase.debate.debeak.debits.debone.debris.debtor.debugs.debunk.debuts.debyes.decade.decafs.decals.decamp.decane.decant.decare.decays.deceit.decent.decern.decide.decile.decked.deckel.decker.deckle.declaw.decoct.decode.decors.decoys.decree.decury.dedans.deduce.deduct.deeded.deejay.deemed.deepen.deeper.deeply.deewan.deface.defame.defang.defats.defeat.defect.defend.defers.deffer.defied.defier.defies.defile.define.deflea.defoam.defogs.deform.defrag.defray.defter.deftly.defuel.defund.defuse.defuze.degage.degame.degami.degerm.degree.degums.degust.dehorn.dehort.deiced.deicer.deices.deific.deigns.deisms.deists.deixis.deject.dekare.deking.dekkos.delate.delays.delead.delete.delfts.delict.delime.delish.delist.deltas.deltic.delude.deluge.deluxe.delved.delver.delves.demand.demark.demast.demean.dement.demies.demise.demits.demobs.demode.demoed.demons.demote.demure.demurs.denari.denars.denary.dengue.denial.denied.denier.denies.denims.denned.denote.denser.dental.dented.dentil.dentin.denude.deodar.depart.depend.deperm.depict.deploy.depone.deport.depose.depots.depths.depute.deputy.derail.derate.derats.derays.deride.derive.dermal.dermas.dermic.dermis.derris.desalt.desand.descry.desert.design.desire.desist.desman.desmid.desorb.desoxy.despot.detach.detail.detain.detect.detent.deters.detest.detick.detour.deuced.deuces.devein.devels.devest.device.devils.devise.devoid.devoir.devons.devote.devour.devout.dewans.dewars.dewier.dewily.dewing.dewlap.dewool.deworm.dexies.dexter.dextro.dezinc.dharma.dharna.dhobis.dholes.dhooly.dhoora.dhooti.dhotis.dhurna.dhutis.diacid.diadem.dialed.dialer.dialog.diamin.diaper.diapir.diatom.diazin.dibbed.dibber.dibble.dibbuk.dicast.dicers.dicier.dicing.dicked.dicker.dickey.dickie.dicots.dictum.didact.diddle.diddly.didies.didoes.dieing.dienes.dieoff.diesel.dieses.diesis.dieted.dieter.differ.digamy.digest.digged.digger.dights.digits.diglot.dikdik.dikers.diking.diktat.dilate.dildoe.dilled.dilute.dimers.dimity.dimmed.dimmer.dimout.dimple.dimply.dimwit.dinars.dindle.dinero.diners.dinged.dinger.dinges.dingey.dinghy.dingle.dingus.dining.dinked.dinkey.dinkly.dinkum.dinned.dinner.dinted.diobol.diodes.dioecy.dioxan.dioxid.dioxin.diplex.diploe.dipnet.dipody.dipole.dipped.dipper.dipsas.dipsos.diquat.dirams.dirdum.direct.direly.direst.dirges.dirham.dirked.dirled.dirndl.disarm.disbar.disbud.disced.discos.discus.diseur.dished.dishes.disked.dismal.dismay.dismes.disown.dispel.dissed.disses.distal.distil.disuse.dither.dittos.ditzes.diuron.divans.divers.divert.divest.divide.divine.diving.divots.diwans.dixits.dizens.djebel.djinni.djinns.djinny.doable.doated.dobber.dobbin.dobies.doblas.doblon.dobras.dobros.dobson.docent.docile.docked.docker.docket.doctor.dodder.dodged.dodgem.dodger.dodges.dodoes.doffed.doffer.dogdom.dogear.dogeys.dogged.dogger.doggie.dogies.dogleg.dogmas.dognap.doiled.doings.doited.doling.dollar.dolled.dollop.dolman.dolmas.dolmen.dolors.dolour.domain.domine.doming.domino.donate.donees.dongas.dongle.donjon.donkey.donnas.donned.donnee.donors.donsie.donuts.donzel.doobie.doodad.doodle.doodoo.doofus.doolee.doolie.doomed.doowop.doozer.doozie.dopant.dopers.dopier.dopily.doping.dorado.dorbug.dories.dormer.dormie.dormin.dorper.dorsad.dorsal.dorsel.dorser.dorsum.dosage.dosers.dosing.dossal.dossed.dossel.dosser.dosses.dossil.dotage.dotard.doters.dotier.doting.dotted.dottel.dotter.dottle.double.doubly.doubts.douche.doughs.dought.doughy.doulas.doumas.dourah.douras.dourer.dourly.doused.douser.douses.dovens.dovish.dowels.dowers.dowery.dowing.downed.downer.dowsed.dowser.dowses.doxies.doyens.doyley.dozens.dozers.dozier.dozily.dozing.drably.drachm.draffs.draffy.drafts.drafty.dragee.draggy.dragon.drails.drains.drakes.dramas.draped.draper.drapes.drapey.drawee.drawer.drawls.drawly.drayed.dreads.dreams.dreamt.dreamy.drears.dreary.drecks.drecky.dredge.dreggy.dreich.dreidl.dreigh.drench.dressy.driegh.driers.driest.drifts.drifty.drills.drinks.drippy.drivel.driven.driver.drives.drogue.droids.droits.drolls.drolly.dromon.droned.droner.drones.drongo.drools.drooly.droops.droopy.dropsy.drosky.drossy.drouks.drouth.droved.drover.droves.drownd.drowns.drowse.drowsy.drudge.druggy.druids.drumly.drunks.drupes.druses.dryads.dryers.dryest.drying.dryish.drylot.dually.dubbed.dubber.dubbin.ducats.ducked.ducker.duckie.ductal.ducted.duddie.dudeen.duding.dudish.dueled.dueler.duelli.duello.duende.duenna.dueted.duffel.duffer.duffle.dugong.dugout.duiker.duking.dulcet.dulias.dulled.duller.dulses.dumbed.dumber.dumbly.dumbos.dumdum.dumped.dumper.dunams.dunces.dunged.dunite.dunked.dunker.dunlin.dunned.dunner.dunted.duolog.duomos.dupers.dupery.duping.duplex.dupped.durbar.duress.durian.during.durion.durned.durocs.durras.durrie.durums.dusked.dusted.duster.dustup.duties.duvets.dwarfs.dweebs.dweeby.dwells.dwined.dwines.dyable.dyadic.dybbuk.dyeing.dyings.dyking.dynamo.dynast.dynein.dynels.dynode.dyvour.eagers.eagled.eagles.eaglet.eagres.earbud.earful.earing.earlap.earned.earner.earths.earthy.earwax.earwig.easels.easier.easies.easily.easing.easter.eaters.eatery.eating.ebbets.ebbing.ebooks.ecarte.ecesic.ecesis.echard.eching.echini.echoed.echoer.echoes.echoey.echoic.eclair.eclats.ectype.eczema.eddied.eddies.eddoes.edemas.edenic.edgers.edgier.edgily.edging.edible.edicts.ediles.edited.editor.educed.educes.educts.eelier.eerier.eerily.efface.effect.effete.effigy.efflux.effort.effuse.egesta.egests.eggars.eggcup.eggers.egging.eggnog.egises.egoism.egoist.egress.egrets.eiders.eidola.eighth.eights.eighty.eikons.either.ejecta.ejects.ekuele.elains.elands.elapid.elapse.elated.elater.elates.elbows.elders.eldest.elects.elegit.elemis.eleven.elevon.elfins.elfish.elicit.elided.elides.elints.elites.elixir.elmier.elodea.eloign.eloins.eloped.eloper.elopes.eluant.eluate.eluded.eluder.eludes.eluent.eluted.elutes.eluvia.elvers.elvish.elytra.emails.embalm.embank.embark.embars.embays.embeds.embers.emblem.embody.emboli.emboly.embosk.emboss.embows.embrue.embryo.emceed.emcees.emdash.emeers.emends.emerge.emerod.emeses.emesis.emetic.emetin.emeute.emigre.emmers.emmets.emodin.emoted.emoter.emotes.empale.empery.empire.employ.emydes.enable.enacts.enamel.enamor.enates.enatic.encage.encamp.encase.encash.encina.encode.encore.encyst.endash.endear.enders.ending.endite.endive.endows.endrin.endued.endues.endure.enduro.enemas.energy.enface.enfold.engage.engild.engine.engird.engirt.englut.engram.engulf.enhalo.enigma.enisle.enjoin.enjoys.enlace.enlist.enmesh.enmity.ennead.ennuis.ennuye.enokis.enolic.enosis.enough.enrage.enrapt.enrich.enrobe.enroll.enrols.enroot.enserf.ensign.ensile.ensoul.ensued.ensues.ensure.entail.entera.enters.entice.entire.entity.entoil.entomb.entrap.entree.enured.enures.envied.envier.envies.enviro.envois.envoys.enwind.enwomb.enwrap.enzyme.enzyms.eocene.eolian.eolith.eonian.eonism.eosine.eosins.epacts.eparch.ephahs.ephebe.ephebi.ephods.ephori.ephors.epical.epigon.epilog.epimer.epizoa.epochs.epodes.eponym.epopee.eposes.equals.equate.equids.equine.equips.equipt.equity.erased.eraser.erases.erbium.erects.erenow.ergate.ergots.ericas.eringo.ermine.eroded.erodes.eroses.errand.errant.errata.erring.errors.ersatz.eructs.erugos.erupts.ervils.eryngo.escape.escarp.escars.eschar.eschew.escots.escrow.escudo.eskars.eskers.espial.espied.espies.esprit.essays.essoin.estate.esteem.esters.estops.estral.estray.estrin.estrum.estrus.etalon.etamin.etapes.etched.etcher.etches.eterne.ethane.ethene.ethers.ethics.ethion.ethnic.ethnos.ethoxy.ethyls.ethyne.etoile.etudes.etwees.etymon.euchre.eulogy.eunuch.eupnea.eureka.euripi.euroky.eutaxy.evaded.evader.evades.evened.evener.evenly.events.everts.evicts.eviler.evilly.evince.evited.evites.evoked.evoker.evokes.evolve.evulse.evzone.exacta.exacts.exalts.examen.exarch.exceed.excels.except.excess.excide.excise.excite.excuse.exedra.exempt.exequy.exerts.exeunt.exhale.exhort.exhume.exiled.exiler.exiles.exilic.exines.exists.exited.exodoi.exodos.exodus.exogen.exonic.exonym.exotic.expand.expats.expect.expels.expend.expert.expire.expiry.export.expose.exsect.exsert.extant.extend.extent.extern.extoll.extols.extort.extras.exuded.exudes.exults.exurbs.exuvia.eyases.eyebar.eyecup.eyeful.eyeing.eyelet.eyelid.eyries.fabber.fabled.fabler.fables.fabric.facade.facers.facete.facets.faceup.faciae.facial.facias.facies.facile.facing.factor.facula.fadein.faders.fadged.fadges.fading.faecal.faeces.faenas.faerie.fagged.fagins.failed.faille.fainer.faints.faired.fairer.fairly.faiths.fajita.fakeer.fakers.fakery.faking.fakirs.falces.falcon.fallal.fallen.faller.fallow.falser.falsie.falter.family.famine.faming.famish.famous.famuli.fandom.fanega.fanfic.fangas.fanged.fanion.fanjet.fanned.fanner.fanons.fantod.fantom.fanums.faqirs.faquir.farads.farced.farcer.farces.farcie.farded.fardel.farers.farfal.farfel.farina.faring.farles.farmed.farmer.farrow.farted.fasces.fascia.fashed.fashes.fasted.fasten.faster.father.fathom.fating.fatsos.fatted.fatten.fatter.fatwas.faucal.fauces.faucet.faulds.faults.faulty.faunae.faunal.faunas.fauves.favela.favism.favors.favour.fawned.fawner.faxing.faying.fazing.fealty.feared.fearer.feased.feases.feasts.feater.featly.feazed.feazes.fecial.feckly.fecula.fecund.fedora.feeble.feebly.feeder.feeing.feeler.feezed.feezes.feigns.feijoa.feints.feirie.feists.feisty.felids.feline.fellah.fellas.felled.feller.felloe.fellow.felons.felony.felsic.felted.female.femmes.femora.femurs.fenced.fencer.fences.fended.fender.fennec.fennel.feoffs.ferals.ferbam.feriae.ferial.ferias.ferine.ferity.ferlie.fermis.ferrel.ferret.ferric.ferrum.ferula.ferule.fervid.fervor.fescue.fessed.fesses.festal.fester.fetial.fetich.feting.fetish.fetors.fetted.fetter.fettle.feuars.feudal.feuded.feuing.fevers.fewest.feyest.fezzed.fezzes.fiacre.fiance.fiasco.fibbed.fibber.fibers.fibres.fibril.fibrin.fibula.fiches.fichus.ficins.fickle.fickly.ficoes.fiddle.fiddly.fidged.fidges.fidget.fields.fiends.fierce.fiesta.fifers.fifing.fifths.figged.fights.figure.filers.filets.filial.filing.filled.filler.filles.fillet.fillip.fillos.filmed.filmer.filmic.filmis.filose.filter.filths.filthy.fimble.finale.finals.fincas.finder.finely.finery.finest.finger.finial.fining.finish.finite.finito.finked.finned.fiords.fipple.fiques.firers.firing.firkin.firman.firmed.firmer.firmly.firsts.firths.fiscal.fished.fisher.fishes.fisted.fistic.fitchy.fitful.fitted.fitter.fivers.fixate.fixers.fixing.fixity.fixure.fizgig.fizzed.fizzer.fizzes.fizzle.fjelds.fjords.flabby.flacks.flacon.flaggy.flagon.flails.flairs.flaked.flaker.flakes.flakey.flambe.flamed.flamen.flamer.flames.flanes.flanks.flappy.flared.flares.flashy.flasks.flatly.flatus.flaunt.flauta.flavin.flavor.flawed.flaxen.flaxes.flayed.flayer.fleams.fleche.flecks.flecky.fledge.fledgy.fleece.fleech.fleecy.fleers.fleets.flench.flense.fleshy.fletch.fleury.flexed.flexes.flexor.fleyed.flicks.fliers.fliest.flight.flimsy.flinch.flings.flints.flinty.flippy.flirts.flirty.flitch.flited.flites.floats.floaty.flocci.flocks.flocky.flongs.floods.flooey.flooie.floors.floosy.floozy.floppy.florae.floral.floras.floret.florid.florin.flossy.flotas.flours.floury.flouts.flowed.flower.fluent.fluffs.fluffy.fluids.fluish.fluked.flukes.flukey.flumed.flumes.flumps.flunks.flunky.fluors.flurry.fluted.fluter.flutes.flutey.fluxed.fluxes.fluyts.flyboy.flybys.flyers.flying.flyman.flymen.flyoff.flysch.flyted.flytes.flyway.foaled.foamed.foamer.fobbed.fodder.fodgel.foehns.foeman.foemen.foetal.foetid.foetor.foetus.fogbow.fogdog.fogeys.fogged.fogger.fogies.foible.foiled.foined.foison.foists.folate.folded.folder.foldup.foleys.foliar.folios.folium.folkie.folksy.folles.follis.follow.foment.fomite.fonded.fonder.fondly.fondue.fondus.fontal.foodie.fooled.footed.footer.footie.footle.footsy.foozle.fopped.forage.forams.forays.forbad.forbid.forbye.forced.forcer.forces.forded.fordid.foreby.foredo.forego.forest.forgat.forged.forger.forges.forget.forgot.forint.forked.forker.formal.format.formed.formee.former.formes.formic.formol.formyl.fornix.forrit.fortes.fortis.forums.forwhy.fossae.fossas.fosses.fossil.foster.fought.fouled.fouler.foully.founds.founts.fourth.foveae.foveal.foveas.fowled.fowler.foxier.foxily.foxing.foyers.fozier.fracas.fracti.fraena.frails.fraise.framed.framer.frames.francs.franks.frappe.frater.frauds.frayed.frazil.freaks.freaky.freely.freers.freest.freeze.french.frenum.frenzy.freres.fresco.fretty.friars.friary.fridge.friend.friers.frieze.friges.fright.frijol.frills.frilly.fringe.fringy.frisee.frises.frisks.frisky.frites.friths.fritts.frivol.frized.frizer.frizes.frizzy.frocks.froggy.frolic.fronds.fronts.frosts.frosty.froths.frothy.frouzy.frowns.frowst.frowsy.frowzy.frozen.frugal.fruits.fruity.frumps.frumpy.frusta.fryers.frying.frypan.fubbed.fuckup.fucoid.fucose.fucous.fuddle.fudged.fudges.fueled.fueler.fugato.fugged.fugios.fugled.fugles.fugued.fugues.fuhrer.fulcra.fulfil.fulgid.fulham.fullam.fulled.fuller.fulmar.fumble.fumers.fumets.fumier.fuming.fumuli.funded.funder.fundic.fundus.funest.fungal.fungic.fungus.funked.funker.funkia.funned.funnel.funner.furane.furans.furfur.furies.furled.furler.furore.furors.furred.furrow.furzes.fusain.fusees.fusels.fusile.fusils.fusing.fusion.fussed.fusser.fusses.fustic.fusuma.futile.futons.future.futzed.futzes.fuzees.fuzils.fuzing.fuzzed.fuzzes.fylfot.fynbos.fyttes.gabbed.gabber.gabble.gabbro.gabies.gabion.gabled.gables.gaboon.gadded.gadder.gaddis.gadfly.gadget.gadids.gadoid.gaeing.gaffed.gaffer.gaffes.gagaku.gagers.gagged.gagger.gaggle.gaging.gagman.gagmen.gaiety.gaijin.gained.gainer.gainly.gainst.gaited.gaiter.galago.galahs.galaxy.galeae.galeas.galena.galere.galiot.galled.gallet.galley.gallic.gallon.gallop.gallus.galoot.galops.galore.galosh.galyac.galyak.gamays.gambas.gambes.gambia.gambir.gambit.gamble.gambol.gamely.gamers.gamest.gamete.gamier.gamily.gamine.gaming.gamins.gammas.gammed.gammer.gammon.gamuts.gander.ganefs.ganevs.ganged.ganger.gangly.gangue.ganjah.ganjas.gannet.ganofs.ganoid.gantry.gaoled.gaoler.gapers.gaping.gapped.garage.garbed.garble.garcon.gardai.garden.garget.gargle.garish.garlic.garner.garnet.garote.garred.garret.garron.garter.garths.garvey.gasbag.gascon.gashed.gasher.gashes.gasify.gasket.gaskin.gaslit.gasman.gasmen.gasped.gasper.gassed.gasser.gasses.gasted.gaster.gateau.gaters.gather.gating.gators.gauche.gaucho.gauged.gauger.gauges.gaults.gaumed.gauzes.gavage.gavels.gavial.gavots.gawked.gawker.gawped.gawper.gawsie.gayals.gaydar.gayest.gayety.gazabo.gazars.gazebo.gazers.gazing.gazoos.gazump.geared.gecked.geckos.geegaw.geeing.geeked.geests.geezer.geisha.gelada.gelant.gelate.gelati.gelato.gelcap.gelded.gelder.gelees.gelled.gemmae.gemmed.gemote.gemots.gender.genera.genets.geneva.genial.genies.genips.genius.genoas.genome.genoms.genres.genros.gentes.gentil.gentle.gently.gentoo.gentry.geodes.geodic.geoids.gerahs.gerbil.gerent.german.germen.gerund.gestes.gestic.getter.getups.gewgaw.geyser.gharri.gharry.ghauts.ghazis.gherao.ghetto.ghibli.ghosts.ghosty.ghouls.ghylls.giants.giaour.gibbed.gibber.gibbet.gibbon.gibers.gibing.giblet.gibson.giddap.gieing.gifted.giftee.gigged.giggle.giggly.giglet.giglot.gigolo.gigots.gigues.gilded.gilder.gilled.giller.gillie.gimbal.gimels.gimlet.gimmal.gimmes.gimmie.gimped.gingal.ginger.gingko.ginkgo.ginned.ginner.gipons.gipped.gipper.girded.girder.girdle.girlie.girned.girons.girted.girths.gismos.gitano.gitted.gittin.givens.givers.giving.gizmos.glaces.glacis.glades.gladly.glaire.glairs.glairy.glaive.glamor.glance.glands.glared.glares.glassy.glazed.glazer.glazes.gleams.gleamy.gleans.glebae.glebes.gledes.gleeds.gleeks.gleets.gleety.glegly.gleyed.glibly.glided.glider.glides.gliffs.glimed.glimes.glints.glinty.glioma.glitch.glitzy.gloams.gloats.global.globby.globed.globes.globin.gloggs.glomus.glooms.gloomy.gloppy.gloria.glossa.glossy.glosts.glouts.gloved.glover.gloves.glowed.glower.glozed.glozes.glucan.gluers.gluier.gluily.gluing.glumes.glumly.glumpy.glunch.gluons.glutei.gluten.glutes.glycan.glycin.glycol.glycyl.glyphs.gnarls.gnarly.gnarrs.gnatty.gnawed.gnawer.gneiss.gnomes.gnomic.gnomon.gnoses.gnosis.goaded.goaled.goalie.goanna.goatee.gobang.gobans.gobbed.gobbet.gobble.gobies.goblet.goblin.goboes.gobony.goddam.godded.godets.godown.godson.godwit.gofers.goffer.goggle.goggly.goglet.goings.goiter.goitre.golden.golder.golems.golfed.golfer.golosh.gombos.gomers.gomuti.gonads.gonefs.goners.gonged.goniff.gonifs.gonion.gonium.gonofs.gonoph.goober.goodby.goodie.goodly.goofed.google.googly.googol.gooier.gooney.goonie.gooral.goosed.gooses.goosey.gopher.gorals.gorged.gorger.gorges.gorget.gorgon.gorhen.gorier.gorily.goring.gormed.gorses.gospel.gossan.gossip.gotcha.gothic.gotten.gouged.gouger.gouges.gourde.gourds.govern.gowans.gowany.gowned.goyish.graals.grabby.graben.graced.graces.graded.grader.grades.gradin.gradus.grafts.graham.grails.grains.grainy.gramas.gramma.gramme.grampa.gramps.grands.grange.granny.grants.granum.grapes.grapey.graphs.grappa.grasps.grassy.grated.grater.grates.gratin.gratis.graved.gravel.graven.graver.graves.gravid.grayed.grayer.grayly.grazed.grazer.grazes.grease.greasy.greats.greave.grebes.greeds.greedy.greens.greeny.greets.gregos.greige.gremmy.greyed.greyer.greyly.grided.grides.griefs.grieve.griffe.griffs.grifts.grigri.grille.grills.grilse.grimed.grimes.grimly.grinch.grinds.gringa.gringo.griots.griped.griper.gripes.gripey.grippe.grippy.grisly.grison.grists.griths.gritty.grivet.groans.groats.grocer.groggy.groins.grooms.groove.groovy.groped.groper.gropes.grosze.groszy.grotto.grotty.grouch.ground.groups.grouse.grouts.grouty.groved.grovel.groves.grower.growls.growly.growth.groyne.grubby.grudge.gruels.gruffs.gruffy.grugru.grumes.grumps.grumpy.grunge.grungy.grunts.grutch.guacos.guaiac.guanay.guanin.guanos.guards.guavas.guenon.guests.guffaw.guggle.guglet.guided.guider.guides.guidon.guilds.guiled.guiles.guilts.guilty.guimpe.guinea.guiros.guised.guises.guitar.gulags.gulden.gulfed.gulled.gullet.gulley.gulped.gulper.gumbos.gummas.gummed.gummer.gundog.gunite.gunman.gunmen.gunned.gunnel.gunnen.gunner.gunsel.gurged.gurges.gurgle.gurnet.gurney.gushed.gusher.gushes.gusset.gussie.gusted.guttae.gutted.gutter.guttle.guying.guyots.guzzle.gweduc.gybing.gyozas.gypped.gypper.gypsum.gyrase.gyrate.gyrene.gyring.gyrons.gyrose.gyttja.gyving.habile.habits.haboob.haceks.hacked.hackee.hacker.hackie.hackle.hackly.hading.hadith.hadjee.hadjes.hadjis.hadron.haeing.haemal.haemic.haemin.haeres.haffet.haffit.hafted.hafter.hagbut.hagdon.hagged.haggis.haggle.haikus.hailed.hailer.haints.hairdo.haired.hajjes.hajjis.hakeem.hakims.halala.halals.halers.haleru.halest.halide.halids.haling.halite.hallah.hallal.hallel.halloa.halloo.hallos.hallot.hallow.hallux.halmas.haloed.haloes.haloid.halons.halted.halter.halutz.halvah.halvas.halved.halves.hamada.hamals.hamate.hamaul.hamlet.hammal.hammam.hammed.hammer.hamper.hamuli.hamzah.hamzas.hances.handax.handed.hander.handle.hangar.hanged.hanger.hangul.hangup.haniwa.hanked.hanker.hankie.hansas.hansel.hanses.hansom.hanted.hantle.haoles.happed.happen.hapten.haptic.harass.harbor.harden.harder.hardly.hareem.harems.haring.harked.harken.harlot.harmed.harmer.harmin.harped.harper.harpin.harrow.hartal.hashed.hashes.haslet.hasped.hassel.hassle.hasted.hasten.hastes.hatbox.haters.hatful.hating.hatpin.hatred.hatted.hatter.haughs.hauled.hauler.haulms.haulmy.haunch.haunts.hausen.havens.havers.having.havior.havocs.hawala.hawing.hawked.hawker.hawkey.hawkie.hawser.hawses.hayers.haying.haymow.hazans.hazard.hazels.hazers.hazier.hazily.hazing.hazmat.hazzan.headed.header.healed.healer.health.heaped.heaper.hearer.hearse.hearth.hearts.hearty.heated.heater.heaths.heathy.heaume.heaved.heaven.heaver.heaves.heckle.hectic.hector.heddle.heders.hedged.hedger.hedges.heeded.heeder.heehaw.heeled.heeler.heezed.heezes.hefted.hefter.hegari.hegira.heifer.height.heiled.heinie.heired.heishi.heists.hejira.heliac.helios.helium.helled.heller.hellos.helmed.helmet.helots.helped.helper.helved.helves.hemins.hemmed.hemmer.hemoid.hempen.hempie.henbit.henges.henley.hennas.henrys.hented.hepcat.hepper.heptad.herald.herbal.herbed.herded.herder.herdic.hereat.hereby.herein.hereof.hereon.heresy.hereto.heriot.hermae.hermai.hermit.hernia.heroes.heroic.heroin.herons.herpes.hetero.hetman.heuchs.heughs.hewers.hewing.hexade.hexads.hexane.hexers.hexing.hexone.hexose.hexyls.heyday.heydey.hiatal.hiatus.hiccup.hickey.hickie.hidden.hiders.hiding.hieing.hiemal.higgle.higher.highly.highth.hights.hijabs.hijack.hijrah.hijras.hikers.hiking.hilled.hiller.hilloa.hillos.hilted.hinder.hinged.hinger.hinges.hinted.hinter.hipped.hipper.hippie.hippos.hirees.hirers.hiring.hirple.hirsel.hirsle.hispid.hissed.hisser.hisses.histed.hither.hitman.hitmen.hitter.hiving.hoagie.hoards.hoarse.hoaxed.hoaxer.hoaxes.hobbed.hobber.hobbit.hobble.hobnob.hoboed.hoboes.hocked.hocker.hockey.hodads.hodden.hoddin.hoeing.hogans.hogged.hogger.hogget.hognut.hogtie.hoicks.hoiden.hoised.hoises.hoisin.hoists.hokier.hokily.hoking.hokums.holard.holden.holder.holdup.holier.holies.holily.holing.holism.holist.holked.hollas.holler.holloa.holloo.hollos.hollow.holmic.holpen.homage.hombre.homely.homers.homeys.homier.homies.homily.homing.hominy.hommos.honans.honcho.hondas.hondle.honers.honest.honeys.honied.honing.honked.honker.honkey.honkie.honors.honour.hooded.hoodie.hoodoo.hooeys.hoofed.hoofer.hookah.hookas.hooked.hooker.hookey.hookup.hoolie.hooped.hooper.hoopla.hoopoe.hoopoo.hoorah.hooray.hootch.hooted.hooter.hooved.hoover.hooves.hopers.hoping.hopped.hopper.hopple.horahs.horary.horded.hordes.horned.hornet.horrid.horror.horsed.horses.horsey.horste.horsts.hosels.hosers.hoseys.hosier.hosing.hostas.hosted.hostel.hostly.hotbed.hotbox.hotdog.hotels.hotrod.hotted.hotter.hottie.houdah.hounds.houris.hourly.housed.housel.houser.houses.hovels.hovers.howdah.howdie.howffs.howked.howled.howler.howlet.hoyden.hoyles.hryvna.hubbly.hubbub.hubcap.hubris.huckle.huddle.huffed.hugely.hugest.hugged.hugger.huipil.hulked.hulled.huller.hulloa.hulloo.hullos.humane.humans.humate.humble.humbly.humbug.humeri.hummed.hummer.hummus.humors.humour.humped.humper.humphs.humvee.hunger.hungry.hunker.hunkey.hunkie.hunted.hunter.huppah.hurdle.hurled.hurler.hurley.hurrah.hurray.hursts.hurter.hurtle.hushed.hushes.husked.husker.hussar.hustle.hutted.hutzpa.huzzah.huzzas.hyaena.hyalin.hybrid.hybris.hydrae.hydras.hydria.hydric.hydrid.hydros.hyenas.hyenic.hyetal.hymens.hymnal.hymned.hyoids.hypers.hyphae.hyphal.hyphen.hyping.hypnic.hypoed.hysons.hyssop.iambic.iambus.iatric.ibexes.ibices.ibidem.ibises.icebox.icecap.iceman.icemen.ichors.icicle.iciest.icings.ickers.ickier.ickily.icones.iconic.ideals.ideate.idiocy.idioms.idiots.idlers.idlest.idling.idylls.iffier.igging.igloos.ignify.ignite.ignore.iguana.ihrams.ilexes.iliads.illest.illite.illude.illume.imaged.imager.images.imagos.imaret.imaums.imbalm.imbark.imbeds.imbibe.imbody.imbrue.imbued.imbues.imides.imidic.imines.immane.immesh.immies.immune.immure.impact.impair.impala.impale.impark.impart.impawn.impede.impels.impend.imphee.imping.impish.impled.impone.import.impose.impost.improv.impugn.impure.impute.inaner.inanes.inarch.inarms.inborn.inbred.incage.incant.incase.incent.incept.incest.inched.incher.inches.incise.incite.inclip.incogs.income.incony.incubi.incult.incurs.incuse.indaba.indeed.indene.indent.indict.indies.indign.indigo.indite.indium.indole.indols.indoor.indows.indris.induce.induct.indued.indues.indult.inerts.infall.infamy.infant.infare.infect.infers.infest.infill.infirm.inflow.influx.infold.inform.infuse.ingate.ingest.ingles.ingots.ingulf.inhale.inhaul.inhere.inhume.inions.inject.injure.injury.inkers.inkier.inking.inkjet.inkles.inkpot.inlace.inlaid.inland.inlays.inlets.inlier.inmate.inmesh.inmost.innage.innate.inners.inning.inpour.inputs.inroad.inruns.inrush.insane.inseam.insect.insert.insets.inside.insist.insole.insoul.inspan.instal.instar.instep.instil.insult.insure.intact.intake.intend.intent.intern.inters.intima.intime.intine.intomb.intone.intort.intown.intron.intros.intuit.inturn.inulin.inured.inures.inurns.invade.invars.invent.invert.invest.invite.invoke.inwall.inward.inwind.inwove.inwrap.iodate.iodide.iodids.iodine.iodins.iodise.iodism.iodize.iodous.iolite.ionics.ionise.ionium.ionize.ionone.ipecac.irades.irater.ireful.irenic.irides.iridic.irised.irises.iritic.iritis.irking.irokos.ironed.ironer.irones.ironic.irreal.irrupt.isatin.ischia.island.islets.isling.isobar.isogon.isohel.isolog.isomer.isopod.isseis.issued.issuer.issues.isthmi.istles.italic.itched.itches.itemed.iterum.itself.ixodid.ixoras.ixtles.izzard.jabbed.jabber.jabiru.jabots.jacals.jacana.jackal.jacked.jacker.jacket.jading.jadish.jaeger.jagers.jagged.jagger.jagras.jaguar.jailed.jailer.jailor.jalaps.jalops.jalopy.jambed.jambes.jammed.jammer.jangle.jangly.japans.japers.japery.japing.jarful.jargon.jarina.jarrah.jarred.jarvey.jasmin.jasper.jassid.jauked.jaunce.jaunts.jaunty.jauped.jawans.jawing.jaygee.jayvee.jazzbo.jazzed.jazzer.jazzes.jeaned.jebels.jeeing.jeeped.jeered.jeerer.jehads.jejuna.jejune.jelled.jellos.jennet.jerboa.jereed.jerids.jerked.jerker.jerkin.jerrid.jersey.jessed.jesses.jested.jester.jesuit.jetlag.jetons.jetsam.jetsom.jetted.jetton.jetway.jewels.jezail.jibbed.jibber.jibers.jibing.jicama.jigged.jigger.jiggle.jiggly.jigsaw.jihads.jilted.jilter.jiminy.jimmie.jimper.jimply.jingal.jingko.jingle.jingly.jinked.jinker.jinnee.jinnis.jinxed.jinxes.jitney.jitter.jivers.jivier.jiving.jnanas.jobbed.jobber.jockey.jockos.jocose.jocund.jogged.jogger.joggle.johnny.joined.joiner.joints.joists.jojoba.jokers.jokier.jokily.joking.jolted.jolter.jorams.jordan.jorums.joseph.joshed.josher.joshes.josses.jostle.jotted.jotter.jouals.jouked.joules.jounce.jouncy.journo.jousts.jovial.jowars.jowing.jowled.joyful.joying.joyous.joypop.jubbah.jubhah.jubile.judder.judged.judger.judges.judoka.jugate.jugful.jugged.juggle.jugula.jugums.juiced.juicer.juices.jujube.juking.juleps.jumbal.jumble.jumbos.jumped.jumper.juncos.jungle.jungly.junior.junked.junker.junket.junkie.juntas.juntos.jupons.jurant.jurats.jurels.juried.juries.jurist.jurors.justed.juster.justle.justly.jutted.kababs.kabaka.kabala.kabars.kabaya.kabiki.kabobs.kabuki.kaffir.kafirs.kaftan.kahuna.kaiaks.kainit.kaiser.kakapo.kalams.kalian.kalifs.kaliph.kalium.kalmia.kalong.kalpac.kalpak.kalpas.kamala.kamiks.kamsin.kanaka.kanban.kanjis.kantar.kanzus.kaolin.kaonic.kapoks.kappas.kaputt.karate.karats.karmas.karmic.karoos.kaross.karroo.karsts.kasbah.kashas.kasher.kation.kauris.kavass.kayaks.kayles.kayoed.kayoes.kazoos.kebabs.kebars.kebbie.keblah.kebobs.kecked.keckle.keddah.kedged.kedges.keeked.keeled.keened.keener.keenly.keeper.keeves.kefirs.kegged.kegger.kegler.keleps.kelims.keloid.kelped.kelpie.kelson.kelter.kelvin.kenafs.kendos.kenned.kennel.kentes.kepped.keppen.kerbed.kerfed.kermes.kermis.kerned.kernel.kernes.kerria.kersey.ketene.ketols.ketone.ketose.kettle.kevels.kevils.kewpie.keying.keypad.keypal.keyset.keyway.khadis.khakis.khalif.khaphs.khazen.khedah.khedas.kheths.khoums.kiangs.kiaugh.kibbeh.kibbes.kibbis.kibble.kibeis.kibitz.kiblah.kiblas.kibosh.kicked.kicker.kickup.kidded.kidder.kiddie.kiddos.kidnap.kidney.kidvid.kilims.killed.killer.killie.kilned.kilted.kilter.kiltie.kimchi.kimono.kinara.kinase.kinder.kindle.kindly.kinema.kinged.kingly.kinins.kinked.kiosks.kipped.kippen.kipper.kirned.kirsch.kirtle.kishka.kishke.kismat.kismet.kissed.kisser.kisses.kitbag.kiters.kithed.kithes.kiting.kitsch.kitted.kittel.kitten.kittle.klatch.klaxon.klepht.klepto.klicks.klongs.kloofs.kludge.kludgy.kluged.kluges.klutzy.knacks.knarry.knaurs.knaves.knawel.knawes.kneads.kneels.knells.knifed.knifer.knifes.knight.knives.knobby.knocks.knolls.knolly.knosps.knotty.knouts.knower.knowns.knubby.knurls.knurly.koalas.kobold.koines.kolhoz.kolkoz.kombus.konked.koodoo.kookie.kopeck.kopeks.kopjes.koppas.koppie.korats.kormas.koruna.koruny.kosher.kotows.koumis.koumys.kouroi.kouros.kousso.kowtow.kraals.krafts.kraits.kraken.krater.krauts.kreeps.krewes.krills.krises.kronen.kroner.kronor.kronur.krooni.kroons.krubis.krubut.kuchen.kudzus.kugels.kukris.kulaki.kulaks.kultur.kumiss.kummel.kurgan.kurtas.kussos.kuvasz.kvases.kvells.kvetch.kwacha.kwanza.kyacks.kybosh.kyries.kythed.kythes.laager.labara.labels.labial.labile.labium.labors.labour.labret.labrum.lacers.laches.lacier.lacily.lacing.lacked.lacker.lackey.lactam.lactic.lacuna.lacune.ladder.laddie.ladens.laders.ladies.lading.ladino.ladled.ladler.ladles.ladron.lagans.lagend.lagers.lagged.lagger.lagoon.laguna.lagune.lahars.laical.laichs.laighs.lairds.laired.lakers.lakier.laking.lallan.lalled.lambda.lambed.lamber.lambie.lamedh.lameds.lamely.lament.lamest.lamiae.lamias.lamina.laming.lammed.lampad.lampas.lamped.lanais.lanate.lanced.lancer.lances.lancet.landau.landed.lander.lanely.langue.langur.lanker.lankly.lanner.lanose.lanugo.laogai.lapdog.lapels.lapful.lapins.lapped.lapper.lappet.lapsed.lapser.lapses.lapsus.laptop.larded.larder.lardon.larees.larger.larges.largos.lariat.larine.larked.larker.larrup.larums.larvae.larval.larvas.larynx.lascar.lasers.lashed.lasher.lashes.lasing.lasses.lassie.lassis.lassos.lasted.laster.lastly.lateen.lately.latens.latent.latest.lathed.lather.lathes.lathis.latigo.latina.latino.latish.latkes.latria.latten.latter.lattes.lattin.lauans.lauded.lauder.laughs.launce.launch.laurae.lauras.laurel.lavabo.lavage.lavash.laveer.lavers.laving.lavish.lawful.lawine.lawing.lawman.lawmen.lawyer.laxest.laxity.layers.laying.layins.layman.laymen.layoff.layout.layups.lazars.lazied.lazier.lazies.lazily.lazing.lazuli.leachy.leaded.leaden.leader.leafed.league.leaked.leaker.leally.lealty.leaned.leaner.leanly.leaped.leaper.learns.learnt.leased.leaser.leases.leasts.leaved.leaven.leaver.leaves.lebens.leched.lecher.leches.lechwe.lectin.lector.ledger.ledges.leered.leeway.lefter.legacy.legals.legate.legato.legend.legers.legged.leggin.legion.legist.legits.legman.legmen.legong.legume.lehuas.lekked.lekvar.lemans.lemmas.lemons.lemony.lemurs.lender.length.lenite.lenity.lensed.lenses.lenten.lentic.lentil.lentos.leones.lepers.leptin.lepton.lesbos.lesion.lessee.lessen.lesser.lesson.lessor.lethal.lethes.letted.letter.letups.leucin.leudes.leukon.levant.leveed.levees.levels.levers.levied.levier.levies.levins.levity.lewder.lewdly.lexeme.lexica.lezzes.lezzie.liable.liaise.lianas.lianes.liangs.liards.libber.libels.libers.libido.liblab.librae.libras.lichee.lichen.liches.lichis.lichts.licked.licker.lictor.lidars.lidded.lieder.liefer.liefly.lieges.lienal.lierne.liever.lifers.lifted.lifter.ligand.ligans.ligase.ligate.ligers.lights.lignan.lignin.ligula.ligule.ligure.likely.likens.likers.likest.liking.likuta.lilacs.lilied.lilies.lilted.limans.limbas.limbed.limber.limbic.limbos.limbus.limens.limeys.limier.limina.liming.limits.limmer.limned.limner.limnic.limpas.limped.limper.limpet.limpid.limply.limpsy.limuli.linacs.linage.linden.lineal.linear.linens.lineny.liners.lineup.lingam.lingas.linger.lingua.linier.lining.linins.linked.linker.linkup.linnet.linsey.linted.lintel.linter.lintol.linums.lipase.lipide.lipids.lipins.lipoid.lipoma.lipped.lippen.lipper.liquid.liquor.liroth.lisles.lisped.lisper.lissom.listed.listee.listel.listen.lister.litany.litchi.liters.lither.lithia.lithic.lithos.litmus.litres.litten.litter.little.lively.livens.livers.livery.livest.livier.living.livres.livyer.lizard.llamas.llanos.loaded.loader.loafed.loafer.loamed.loaned.loaner.loathe.loaves.lobate.lobbed.lobber.lobule.locale.locals.locate.lochan.lochia.locked.locker.locket.lockup.locoed.locoes.locule.loculi.locums.locust.lodens.lodged.lodger.lodges.lofted.lofter.logans.logged.logger.loggia.loggie.logics.logier.logily.logins.logion.logjam.logons.logway.loided.loiter.lolled.loller.lollop.lomein.loment.lonely.loners.longan.longed.longer.longes.longly.looeys.loofah.loofas.looies.looing.looked.looker.lookup.loomed.looney.loonie.looped.looper.loosed.loosen.looser.looses.looted.looter.lopers.loping.lopped.lopper.loquat.lorans.lorded.lordly.loreal.lorica.lories.losels.losers.losing.losses.lotahs.lotion.lotted.lotter.lottes.lottos.louche.louden.louder.loudly.loughs.louies.loumas.lounge.loungy.louped.loupen.loupes.loured.loused.louses.louted.louver.louvre.lovage.lovats.lovely.lovers.loving.lowboy.lowers.lowery.lowest.lowing.lowish.loxing.lubber.lubing.lubric.lucent.lucern.lucite.lucked.luckie.lucres.luetic.luffas.luffed.lugers.lugged.lugger.luggie.luging.lulled.luller.lumbar.lumber.lumens.lumina.lummox.lumped.lumpen.lumper.lunacy.lunars.lunate.lunets.lungan.lunged.lungee.lunger.lunges.lungis.lungyi.lunier.lunies.lunker.lunted.lunula.lunule.lupine.lupins.lupous.lurdan.lurers.luring.lurked.lurker.lushed.lusher.lushes.lushly.lusted.luster.lustra.lustre.luteal.lutein.luteum.luting.lutist.lutzes.luxate.luxury.lyases.lycees.lyceum.lychee.lyches.lycras.lyings.lymphs.lynxes.lyrate.lyrics.lyrism.lyrist.lysate.lysine.lysing.lysins.lyssas.lyttae.lyttas.macaco.macaws.macers.maches.machos.macing.mackle.macled.macles.macons.macron.macros.macula.macule.madame.madams.madcap.madded.madden.madder.madman.madmen.madras.madres.madtom.maduro.maenad.maffia.mafias.maftir.maggot.magian.magics.magilp.maglev.magmas.magnet.magnum.magots.magpie.maguey.mahoes.mahout.mahzor.maiden.maigre.maihem.mailed.mailer.mailes.maills.maimed.maimer.mainly.maists.maizes.majors.makars.makers.makeup.making.makuta.malady.malars.malate.malfed.malgre.malice.malign.maline.malkin.malled.mallee.mallei.mallet.mallow.maloti.malted.maltha.maltol.mambas.mambos.mameys.mamies.mamluk.mammae.mammal.mammas.mammee.mammer.mammet.mammey.mammie.mammon.mamzer.manage.manana.manats.manche.manege.manful.mangas.mangel.manger.manges.mangey.mangle.mangos.maniac.manias.manics.manila.manioc.manito.manitu.mannan.mannas.manned.manner.manors.manque.manses.mantas.mantel.mantes.mantic.mantid.mantis.mantle.mantra.mantua.manual.manure.maples.mapped.mapper.maquis.maraca.maraud.marble.marbly.marcel.margay.marges.margin.marina.marine.marish.markas.marked.marker.market.markka.markup.marled.marlin.marmot.maroon.marque.marram.marred.marrer.marron.marrow.marses.marshy.marted.marten.martin.martyr.marvel.masala.mascon.mascot.masers.mashed.masher.mashes.mashie.masjid.masked.maskeg.masker.masons.masque.massas.massed.masses.massif.masted.master.mastic.mastix.maters.mateys.matier.mating.matins.matres.matrix.matron.matsah.matted.matter.mattes.mattin.mature.matzah.matzas.matzoh.matzos.matzot.mauger.maugre.mauled.mauler.maumet.maunds.maundy.mauves.mavens.mavies.mavins.mawing.maxima.maxims.maxing.maxixe.maybes.mayday.mayest.mayfly.mayhap.mayhem.maying.mayors.maypop.mayvin.mazard.mazers.mazier.mazily.mazing.mazuma.mbiras.meadow.meager.meagre.mealie.meaner.meanie.meanly.measle.measly.meatal.meated.meatus.meccas.medaka.medals.meddle.medfly.mediad.mediae.medial.median.medias.medick.medico.medics.medina.medium.medius.medlar.medley.medusa.meeker.meekly.meeter.meetly.megara.megass.megilp.megohm.megrim.mehndi.meikle.meinie.melded.melder.melees.melena.melled.mellow.melody.meloid.melons.melted.melter.melton.member.memoir.memory.menace.menads.menage.mended.mender.menhir.menial.meninx.mensae.mensal.mensas.mensch.mensed.menses.mental.mentee.mentor.mentum.menudo.meoued.meowed.mercer.merces.merdes.merely.merest.merged.mergee.merger.merges.merino.merits.merles.merlin.merlon.merlot.merman.mermen.mescal.meshed.meshes.mesial.mesian.mesnes.mesons.messan.messed.messes.mestee.metage.metals.metate.meteor.metepa.meters.method.methyl.metier.meting.metols.metope.metred.metres.metric.metros.mettle.metump.mewing.mewled.mewler.mezcal.mezuza.mezzos.miaous.miaows.miasma.miasms.miauls.micell.miched.miches.mickey.mickle.micron.micros.midair.midcap.midday.midden.middle.midges.midget.midgut.midleg.midrib.midsts.midway.miffed.miggle.mights.mighty.mignon.mihrab.mikado.miking.mikron.mikvah.mikveh.mikvos.mikvot.miladi.milady.milage.milded.milden.milder.mildew.mildly.milers.milieu.milium.milked.milker.milled.miller.milles.millet.milneb.milord.milpas.milted.milter.mimbar.mimeos.mimers.mimics.miming.mimosa.minced.mincer.minces.minded.minder.miners.mingle.minify.minima.minims.mining.minion.minish.minium.minkes.minnow.minors.minted.minter.minuet.minute.minxes.minyan.mioses.miosis.miotic.mirage.mirids.mirier.miring.mirins.mirker.mirror.mirths.mirzas.misact.misadd.misaim.misate.miscue.miscut.misdid.miseat.misers.misery.misfed.misfit.mishap.mishit.miskal.mislay.misled.mislie.mislit.mismet.mispen.missal.missay.missed.missel.misses.misset.missis.missus.misted.mister.misuse.miters.mither.mitier.mitral.mitred.mitres.mitten.mixers.mixing.mixups.mizens.mizuna.mizzen.mizzle.mizzly.moaned.moated.mobbed.mobber.mobcap.mobile.mobled.mochas.mocked.mocker.mockup.modals.models.modems.modern.modest.modica.modify.modish.module.moduli.modulo.mogged.moggie.moghul.moguls.mohair.mohawk.mohels.mohurs.moiety.moiled.moiler.moirai.moires.mojoes.molars.molded.molder.molest.molies.moline.mollah.mollie.moloch.molted.molten.molter.moment.momism.mommas.momser.momzer.monads.mondes.mondos.moneys.monger.mongoe.mongol.mongos.mongst.monied.monies.monish.monism.monist.monkey.monody.montes.months.mooing.moolah.moolas.mooley.mooned.mooner.moored.mooted.mooter.mopeds.mopers.mopery.mopier.moping.mopish.mopoke.mopped.mopper.moppet.morale.morals.morass.morays.morbid.moreen.morels.morgan.morgen.morgue.morion.morons.morose.morpho.morphs.morris.morros.morrow.morsel.mortal.mortar.morula.mosaic.moseys.moshav.moshed.mosher.moshes.mosque.mossed.mosser.mosses.mostly.motels.motets.mother.motifs.motile.motion.motive.motley.motmot.motors.mottes.mottle.mottos.moujik.moulds.mouldy.moulin.moults.mounds.mounts.mourns.moused.mouser.mouses.mousey.mousse.mouths.mouthy.mouton.movers.movies.moving.mowers.mowing.moxies.muches.muchly.mucins.mucked.mucker.muckle.mucluc.mucoid.mucors.mucosa.mucose.mucous.mudbug.mudcap.mudcat.mudded.mudder.muddle.muddly.mudhen.mudras.muesli.muffed.muffin.muffle.muftis.mugful.muggar.mugged.muggee.mugger.muggur.mughal.mujiks.mukluk.muktuk.mulcts.muleta.muleys.muling.mulish.mullah.mullas.mulled.mullen.muller.mullet.mulley.mumble.mumbly.mummed.mummer.mumped.mumper.mungos.muntin.muonic.murals.murder.murein.murids.murine.muring.murker.murkly.murmur.murphy.murras.murres.murrey.murrha.muscae.muscat.muscid.muscle.muscly.musers.museum.mushed.musher.mushes.musick.musics.musing.musjid.muskeg.musket.muskie.muskit.muskox.muslin.mussed.mussel.musses.musted.mustee.muster.musths.mutant.mutase.mutate.mutely.mutest.mutine.muting.mutiny.mutism.mutons.mutter.mutton.mutual.mutuel.mutule.muumuu.muzhik.muzjik.muzzle.myases.myasis.mycele.myelin.mylars.mynahs.myomas.myopes.myopia.myopic.myoses.myosin.myosis.myotic.myriad.myrica.myrrhs.myrtle.myself.mysids.mysost.mystic.mythic.mythoi.mythos.myxoid.myxoma.nabbed.nabber.nabobs.nachas.naches.nachos.nacred.nacres.nadirs.naevus.naffed.nagana.nagged.nagger.naiads.nailed.nailer.nairas.nairus.naiver.naives.nakfas.naleds.namely.namers.naming.nances.nandin.nanism.nankin.nannie.napalm.napery.napkin.nappas.napped.napper.nappes.nappie.narcos.narial.narine.narked.narrow.narwal.nasals.nasial.nasion.nastic.natant.nation.native.natron.natter.nature.naught.nausea.nautch.navaid.navars.navels.navies.nawabs.naysay.nazify.nearby.neared.nearer.nearly.neaten.neater.neatly.nebula.nebule.nebuly.necked.necker.nectar.needed.needer.needle.negate.neighs.nekton.nellie.nelson.neocon.neoned.nepeta.nephew.nereid.nereis.neroli.nerols.nerved.nerves.nesses.nested.nester.nestle.nestor.nether.netops.netted.netter.nettle.nettly.neumes.neumic.neural.neuron.neuter.nevoid.newbie.newels.newest.newies.newish.newsie.newton.niacin.nibbed.nibble.nicads.nicely.nicest.nicety.niched.niches.nicked.nickel.nicker.nickle.nicols.nidate.nidget.nidify.niding.nieces.nielli.niello.nieves.niffer.niggle.niggly.nighed.nigher.nights.nighty.nihils.nilgai.nilgau.nilled.nimble.nimbly.nimbus.nimmed.nimrod.ninety.ninjas.ninons.ninths.niobic.nipped.nipper.nipple.niseis.niters.nitery.nitons.nitres.nitric.nitrid.nitril.nitros.nitwit.nixies.nixing.nizams.nobble.nobler.nobles.nobody.nocent.nocked.nodded.nodder.noddle.nodose.nodous.nodule.noesis.noetic.nogged.noggin.noised.noises.nomads.nomina.nomism.nonage.nonart.nonces.noncom.nonego.nonets.nonfan.nonfat.nongay.nonman.nonmen.nonpar.nontax.nonuse.nonwar.nonyls.noodge.noodle.noogie.nookie.noosed.nooser.nooses.nopals.nordic.norias.norite.normal.normed.norths.noshed.nosher.noshes.nosier.nosily.nosing.nostoc.notary.notate.noters.nother.notice.notify.noting.notion.nougat.nought.nounal.nouses.novels.novena.novice.noways.nowise.noyade.nozzle.nuance.nubbin.nubble.nubbly.nubias.nubile.nubuck.nuchae.nuchal.nuclei.nudely.nudest.nudged.nudger.nudges.nudies.nudism.nudist.nudity.nudnik.nugget.nuking.nullah.nulled.numbat.numbed.number.numbly.numina.nuncio.nuncle.nurled.nursed.nurser.nurses.nutant.nutate.nutlet.nutmeg.nutria.nutted.nutter.nuzzle.nyalas.nylons.nympha.nympho.nymphs.oafish.oakier.oakums.oaring.oaters.obeahs.obelia.obelus.obento.obeyed.obeyer.obiism.object.objets.oblast.oblate.oblige.oblong.oboist.oboles.obolus.obsess.obtain.obtect.obtest.obtund.obtuse.obvert.occult.occupy.occurs.oceans.ocelli.ocelot.ochers.ochery.ochone.ochrea.ochred.ochres.ocicat.ockers.ocreae.octads.octane.octans.octant.octave.octavo.octets.octopi.octroi.octyls.ocular.oculus.oddest.oddish.oddity.odeons.odeums.odious.odists.odiums.odored.odours.odyles.oedema.oeuvre.offals.offcut.offend.offers.office.offing.offish.offkey.offset.oftest.ogdoad.oghams.ogival.ogives.oglers.ogling.ogress.ogrish.ogrism.ohmage.oidium.oilcan.oilcup.oilers.oilier.oilily.oiling.oilman.oilmen.oilway.oinked.okapis.okayed.oldest.oldies.oldish.oleate.olefin.oleine.oleins.oleums.olingo.olives.omasum.ombers.ombres.omegas.omelet.omened.omenta.onager.onagri.onions.oniony.onlays.online.onload.onrush.onsets.onside.onuses.onward.onyxes.oocyst.oocyte.oodles.oogamy.oogeny.oohing.oolite.oolith.oology.oolong.oomiac.oomiak.oompah.oomphs.oorali.ootids.oozier.oozily.oozing.opaque.opened.opener.openly.operas.operon.ophite.opiate.opined.opines.opioid.opiums.oppose.oppugn.opsins.optics.optima.optime.opting.option.opuses.orache.oracle.orally.orange.orangs.orangy.orated.orates.orator.orbier.orbing.orbits.orcein.orchid.orchil.orchis.orcins.ordain.ordeal.orders.ordure.oreads.oreide.orfray.organa.organs.orgeat.orgiac.orgies.orgone.oribis.oriels.orient.origan.origin.oriole.orisha.orison.orlons.orlops.ormers.ormolu.ornate.ornery.oroide.orphan.orphic.orpine.orpins.orrery.orrice.oryxes.oscine.oscula.oscule.osetra.osiers.osmics.osmium.osmole.osmols.osmose.osmous.osmund.osprey.ossein.ossify.osteal.ostium.ostler.ostomy.otalgy.others.otiose.otitic.otitis.ottars.ottava.otters.ouched.ouches.oughts.ounces.ouphes.ourang.ourari.ourebi.ousels.ousted.ouster.outact.outadd.outage.outask.outate.outbeg.outbid.outbox.outbuy.outbye.outcry.outdid.outeat.outers.outfit.outfly.outfox.outgas.outgun.outhit.outing.outjut.outlaw.outlay.outled.outlet.outlie.outman.output.outran.outrig.outrow.outrun.outsat.outsaw.outsay.outsee.outset.outsin.outsit.outvie.outwar.outwit.ouzels.ovally.overdo.overed.overly.ovibos.ovines.ovisac.ovoids.ovolos.ovonic.ovular.ovules.owlets.owlish.owners.owning.oxalic.oxalis.oxbows.oxcart.oxeyes.oxford.oxides.oxidic.oximes.oxlike.oxlips.oxtail.oxters.oxygen.oyezes.oyster.ozalid.ozones.ozonic.pablum.pacers.pachas.pacier.pacify.pacing.packed.packer.packet.packly.padauk.padded.padder.paddle.padles.padnag.padouk.padres.paeans.paella.paeons.paesan.pagans.pagers.paging.pagoda.pagods.paiked.painch.pained.paints.painty.paired.paisan.paisas.pajama.pakeha.pakora.palace.palais.palapa.palate.paleae.paleal.palely.palest.palets.palier.paling.palish.palled.pallet.pallia.pallid.pallor.palmar.palmed.palmer.palpal.palped.palpus.palter.paltry.pampas.pamper.panada.panama.pandas.pander.pandit.panels.panfry.panful.pangas.panged.pangen.panics.panier.panini.panino.panned.panner.pannes.panted.pantie.pantos.pantry.panzer.papacy.papain.papaws.papaya.papers.papery.papism.papist.pappus.papula.papule.papyri.parade.paramo.parang.paraph.parcel.pardah.pardee.pardie.pardon.parent.pareos.parers.pareus.pareve.parged.parges.parget.pargos.pariah.parian.paries.paring.parish.parity.parkas.parked.parker.parlay.parled.parles.parley.parlor.parody.parole.parols.parous.parral.parred.parrel.parrot.parsec.parsed.parser.parses.parson.partan.parted.partly.parton.parura.parure.parvis.parvos.pascal.paseos.pashas.pashed.pashes.passed.passee.passel.passer.passes.passim.passus.pastas.pasted.pastel.paster.pastes.pastie.pastil.pastis.pastor.pastry.pataca.patchy.patens.patent.paters.pathos.patina.patine.patins.patios.patois.patrol.patron.patted.pattee.patten.patter.pattie.patzer.paulin.paunch.pauper.pausal.paused.pauser.pauses.pavane.pavans.paveed.pavers.paving.pavins.pavior.pavise.pawers.pawing.pawned.pawnee.pawner.pawnor.pawpaw.paxwax.payday.payees.payers.paying.paynim.payoff.payola.payors.payout.pazazz.peaced.peaces.peachy.peages.peahen.peaked.pealed.peanut.pearls.pearly.peasen.peases.peavey.pebble.pebbly.pecans.pechan.peched.pecked.pecten.pectic.pectin.pedalo.pedals.pedant.pedate.peddle.pedlar.pedler.pedros.peeing.peeked.peeled.peeler.peened.peeped.peeper.peepul.peered.peerie.peeved.peeves.peewee.peewit.pegbox.pegged.peined.peised.peises.pekans.pekins.pekoes.pelage.pelite.pellet.pelmet.pelota.pelted.pelter.peltry.pelves.pelvic.pelvis.penang.pencel.pencil.pended.pengos.penial.penile.penman.penmen.pennae.penned.penner.pennia.pennis.pennon.pensee.pensil.pentad.pentyl.penult.penury.peones.people.pepino.peplos.peplum.peplus.pepped.pepper.pepsin.peptic.peptid.perdie.perdue.perdus.pereia.pereon.perils.period.perish.periti.perked.permed.permit.pernio.pernod.peroxy.perron.perses.person.perter.pertly.peruke.peruse.pesade.peseta.pesewa.pester.pestle.pestos.petals.petard.peters.petite.petnap.petrel.petrol.petsai.petted.petter.pettle.pewees.pewits.pewter.peyote.peyotl.phages.phalli.pharos.phased.phases.phasic.phasis.phatic.phenix.phenol.phenom.phenyl.phials.phizes.phlegm.phloem.phobia.phobic.phoebe.phonal.phoned.phones.phoney.phonic.phonon.phonos.phooey.photic.photog.photon.photos.phrase.phreak.phylae.phylar.phylic.phyllo.phylon.phylum.physed.physes.physic.physis.phytin.phytol.phyton.piaffe.pianic.pianos.piazza.piazze.pibals.picara.picaro.pickax.picked.picker.picket.pickle.pickup.picnic.picots.picric.piculs.piddle.piddly.pidgin.pieced.piecer.pieces.pieing.pierce.pietas.piffle.pigeon.pigged.piggie.piggin.piglet.pignus.pignut.pigout.pigpen.pigsty.pikake.pikers.piking.pilaff.pilafs.pilaus.pilaws.pileum.pileup.pileus.pilfer.piling.pillar.pilled.pillow.pilose.pilots.pilous.pilule.pimped.pimple.pimply.pinang.pinata.pincer.pinder.pineal.pinene.pinery.pineta.pinged.pinger.pingos.pinier.pining.pinion.pinite.pinked.pinken.pinker.pinkey.pinkie.pinkly.pinkos.pinnae.pinnal.pinnas.pinned.pinner.pinole.pinons.pinots.pintas.pintle.pintos.pinups.pinyin.pinyon.piolet.pionic.pipage.pipals.pipers.pipets.pipier.piping.pipits.pipkin.pipped.pippin.piqued.piques.piquet.piracy.pirana.pirate.piraya.pirogi.piscos.pished.pisher.pishes.pistes.pistil.pistol.piston.pistou.pitaya.pitchy.pithed.pitied.pitier.pities.pitman.pitmen.pitons.pitsaw.pittas.pitted.pitter.pivots.pixels.pixies.pizazz.pizzas.pizzaz.pizzle.placed.placer.places.placet.placid.placks.plagal.plages.plague.plaguy.plaice.plaids.plains.plaint.plaits.planar.planch.planed.planer.planes.planet.planks.plants.plaque.plashy.plasma.plasms.platan.plated.platen.plater.plates.platys.playas.played.player.plazas.pleach.pleads.please.pleats.plebes.pledge.pleiad.plench.plenty.plenum.pleons.pleura.plexal.plexes.plexor.plexus.pliant.plicae.plical.pliers.plight.plinks.plinth.plisky.plisse.ploidy.plonks.plotty.plough.plover.plowed.plower.ployed.plucks.plucky.plumbs.plumed.plumes.plummy.plumps.plunge.plunks.plunky.plural.pluses.plushy.plutei.pluton.plyers.plying.pneuma.poachy.poboys.pocked.pocket.podded.podite.podium.podsol.podzol.poetic.poetry.pogeys.pogies.pogrom.poilus.poinds.pointe.points.pointy.poised.poiser.poises.poisha.poison.pokers.pokeys.pokier.pokies.pokily.poking.polars.polder.poleax.poleis.polers.poleyn.police.policy.polies.poling.polios.polish.polite.polity.polkas.polled.pollee.pollen.poller.pollex.polyol.polypi.polyps.pomace.pomade.pomelo.pommee.pommel.pommie.pompom.pompon.ponced.ponces.poncho.ponded.ponder.ponent.ponged.pongee.pongid.ponied.ponies.pontes.pontil.ponton.poodle.poohed.pooing.pooled.pooler.pooped.poorer.pooris.poorly.pooted.pooter.pooves.popery.popgun.popish.poplar.poplin.poppas.popped.popper.poppet.popple.popsie.poring.porism.porked.porker.porose.porous.portal.ported.porter.portly.posada.posers.poseur.posher.poshly.posies.posing.posits.posole.posses.posset.possum.postal.posted.poster.postie.postin.postop.potage.potash.potato.potboy.poteen.potent.potful.pother.pothos.potion.potman.potmen.potpie.potsie.potted.potter.pottle.pottos.potzer.pouchy.poufed.pouffe.pouffs.pouffy.poults.pounce.pounds.poured.pourer.pouted.pouter.powder.powers.powter.powwow.poxier.poxing.poyous.pozole.praams.prahus.praise.prajna.prance.prangs.pranks.prases.prated.prater.prates.prawns.praxes.praxis.prayed.prayer.preach.preact.preamp.prearm.prebid.prebuy.precis.precut.predry.preens.prefab.prefer.prefix.prelaw.prelim.preman.premed.premen.premie.premix.preops.prepay.preppy.preset.presto.prests.pretax.pretor.pretty.prevue.prewar.prexes.preyed.preyer.prezes.priapi.priced.pricer.prices.pricey.pricky.prided.prides.priers.priest.prills.primal.primas.primed.primer.primes.primly.primos.primps.primus.prince.prinks.prints.prions.priors.priory.prised.prises.prisms.prison.prissy.privet.prized.prizer.prizes.probed.prober.probes.probit.proems.profit.progun.projet.prolan.proleg.proles.prolix.prolog.promos.prompt.prongs.pronto.proofs.propel.proper.propyl.prosed.proser.proses.prosit.prosos.protea.protei.proton.protyl.proved.proven.prover.proves.prowar.prower.prowls.prudes.pruned.pruner.prunes.prunus.prutah.prutot.pryers.prying.psalms.pseudo.pseuds.pshaws.psocid.psyche.psycho.psychs.psylla.psyops.psywar.pterin.ptisan.ptooey.ptoses.ptosis.ptotic.public.pucker.puddle.puddly.pueblo.puffed.puffer.puffin.pugged.puggry.pugree.puisne.pujahs.puking.pulers.puling.pulled.puller.pullet.pulley.pullup.pulpal.pulped.pulper.pulpit.pulque.pulsar.pulsed.pulser.pulses.pumelo.pumice.pummel.pumped.pumper.punchy.pundit.pungle.punier.punily.punish.punjis.punkah.punkas.punker.punkey.punkie.punkin.punned.punner.punnet.punted.punter.puntos.pupate.pupils.pupped.puppet.purana.purdah.purdas.pureed.purees.purely.purest.purfle.purged.purger.purges.purify.purine.purins.purism.purist.purity.purled.purlin.purple.purply.purred.pursed.purser.purses.pursue.purvey.pushed.pusher.pushes.pushup.pusley.pusses.pussly.putlog.putoff.putons.putout.putrid.putsch.putted.puttee.putter.puttie.putzed.putzes.puzzle.pyemia.pyemic.pyjama.pyknic.pylons.pylori.pyoses.pyosis.pyrans.pyrene.pyrite.pyrola.pyrone.pyrope.pyrrol.python.pyuria.pyxies.qabala.qanats.qindar.qintar.qiviut.quacks.quacky.quaere.quaffs.quagga.quaggy.quahog.quaich.quaigh.quails.quaint.quaked.quaker.quakes.qualia.qualms.qualmy.quango.quanta.quants.quarks.quarry.quarte.quarto.quarts.quartz.quasar.quatre.quaver.qubits.qubyte.queans.queasy.queazy.queens.queers.quelea.quells.quench.querns.quests.queued.queuer.queues.quezal.quiche.quicks.quiets.quiffs.quills.quilts.quince.quinic.quinin.quinoa.quinol.quinsy.quinta.quinte.quints.quippu.quippy.quipus.quired.quires.quirks.quirky.quirts.quitch.quiver.quohog.quoins.quoits.quokka.quolls.quorum.quotas.quoted.quoter.quotes.quotha.qurush.qwerty.rabato.rabats.rabbet.rabbin.rabbis.rabbit.rabble.rabies.raceme.racers.rachet.rachis.racial.racier.racily.racing.racism.racist.racked.racker.racket.rackle.racons.racoon.radars.radded.raddle.radial.radian.radios.radish.radium.radius.radome.radons.radula.raffia.raffle.rafted.rafter.ragbag.ragees.ragged.raggee.raggle.raging.raglan.ragman.ragmen.ragout.ragtag.ragtop.raided.raider.railed.railer.rained.raised.raiser.raises.raisin.raitas.rajahs.rakees.rakers.raking.rakish.rallye.ralphs.ramada.ramate.rambla.ramble.ramees.ramets.ramies.ramify.ramjet.rammed.rammer.ramona.ramose.ramous.ramped.ramrod.ramson.ramtil.rances.rancho.rancid.rancor.randan.random.ranees.ranged.ranger.ranges.ranids.ranked.ranker.rankle.rankly.ransom.ranted.ranter.ranula.rapers.raphae.raphes.raphia.raphis.rapids.rapier.rapine.raping.rapini.rapist.rapped.rappee.rappel.rappen.rapper.raptly.raptor.rarefy.rarely.rarest.rarify.raring.rarity.rascal.rasers.rasher.rashes.rashly.rasing.rasped.rasper.rassle.raster.rasure.ratals.ratans.ratany.ratbag.ratels.raters.rather.ratify.ratine.rating.ration.ratios.ratite.ratlin.ratoon.rattan.ratted.ratten.ratter.rattle.rattly.ratton.raunch.ravage.ravels.ravens.ravers.ravine.raving.ravins.ravish.rawest.rawins.rawish.raxing.rayahs.raying.rayons.razeed.razees.razers.razing.razors.razzed.razzes.reacts.readds.reader.reagin.realer.reales.realia.really.realms.realty.reamed.reamer.reaped.reaper.reared.rearer.rearms.reason.reatas.reaved.reaver.reaves.reavow.rebait.rebars.rebate.rebato.rebbes.rebeck.rebecs.rebels.rebids.rebill.rebind.rebody.reboil.rebook.reboot.rebops.rebore.reborn.rebozo.rebred.rebuff.rebuke.rebury.rebuts.rebuys.recall.recane.recant.recaps.recast.recces.recede.recent.recept.recess.rechew.recipe.recite.recits.recked.reckon.reclad.recoal.recoat.recock.recode.recoil.recoin.recomb.recons.recook.recopy.record.recork.recoup.rectal.rector.rectos.rectus.recurs.recuse.recuts.redact.redans.redate.redbay.redbud.redbug.redcap.redded.redden.redder.reddle.redear.redeem.redefy.redeny.redeye.redfin.rediae.redial.redias.reding.redips.redipt.redleg.redock.redoes.redone.redons.redout.redowa.redraw.redrew.redtop.redubs.reduce.redyed.redyes.reearn.reecho.reechy.reeded.reedit.reefed.reefer.reeked.reeker.reeled.reeler.reemit.reests.reeved.reeves.reface.refall.refect.refeed.refeel.refell.refels.refelt.refers.reffed.refile.refill.refilm.refind.refine.refire.refits.reflag.reflet.reflew.reflex.reflow.reflux.refold.reform.refuel.refuge.refund.refuse.refute.regain.regale.regard.regave.regear.regent.reggae.regild.regilt.regime.regina.region.regius.regive.reglet.reglow.reglue.regnal.regnum.regret.regrew.regrow.reguli.rehabs.rehang.rehash.rehear.reheat.reheel.rehems.rehire.rehung.reigns.reined.reinks.reived.reiver.reives.reject.rejigs.rejoin.rekeys.reknit.reknot.relace.relaid.reland.relate.relays.relend.relent.relets.releve.relics.relict.relied.relief.relier.relies.reline.relink.relish.relist.relive.reload.reloan.relock.relook.reluct.relume.remade.remail.remain.remake.remand.remans.remaps.remark.remate.remedy.remeet.remelt.remend.remind.remint.remise.remiss.remits.remixt.remold.remora.remote.remove.remuda.renail.rename.rended.render.renege.renest.renews.renigs.renins.rennet.rennin.renown.rental.rented.renter.rentes.renvoi.reoils.reopen.repack.repaid.repair.repand.repark.repass.repast.repave.repays.repeal.repeat.repegs.repels.repent.reperk.repine.repins.replan.replay.repled.replot.replow.repoll.report.repose.repots.repour.repped.repros.repugn.repump.repute.requin.rerack.reread.rerent.rerigs.rerise.reroll.reroof.rerose.reruns.resaid.resail.resale.resawn.resaws.resays.rescue.reseal.reseat.reseau.resect.reseda.reseed.reseek.reseen.resees.resell.resend.resent.resets.resewn.resews.reshes.reship.reshod.reshoe.reshot.reshow.reside.resids.resift.resign.resile.resins.resiny.resist.resite.resits.resize.resoak.resods.resold.resole.resorb.resort.resown.resows.respot.rested.rester.result.resume.retack.retags.retail.retain.retake.retape.reteam.retear.retell.retems.retene.retest.retial.retied.reties.retile.retime.retina.retine.retint.retire.retold.retook.retool.retore.retorn.retort.retral.retrim.retros.retted.retune.return.retuse.retype.reused.reuses.revamp.reveal.revels.reverb.revere.revers.revert.revery.revest.revets.review.revile.revise.revive.revoke.revolt.revote.revues.revved.rewake.reward.rewarm.rewash.rewear.reweds.reweld.rewets.rewind.rewins.rewire.rewoke.reword.rewore.rework.reworn.rewove.rewrap.rexine.rezero.rezone.rhaphe.rhebok.rhemes.rhesus.rhetor.rheums.rheumy.rhinal.rhinos.rhodic.rhombi.rhombs.rhotic.rhumba.rhumbs.rhuses.rhymed.rhymer.rhymes.rhythm.rhyton.rialto.riatas.ribald.riband.ribbed.ribber.ribbon.ribier.riblet.ribose.ricers.richen.richer.riches.richly.ricing.ricins.ricked.rickey.ricrac.rictal.rictus.ridded.ridden.ridder.riddle.rident.riders.ridged.ridgel.ridges.ridgil.riding.ridley.riever.rifely.rifest.riffed.riffle.rifled.rifler.rifles.riflip.rifted.rigged.rigger.righto.rights.righty.rigors.rigour.riling.rilled.rilles.rillet.rimers.rimier.riming.rimmed.rimmer.rimose.rimous.rimple.rinded.ringed.ringer.rinsed.rinser.rinses.riojas.rioted.rioter.ripely.ripens.ripest.riping.ripoff.ripost.ripped.ripper.ripple.ripply.riprap.ripsaw.risers.rishis.rising.risked.risker.risque.ristra.ritard.ritter.ritual.ritzes.rivage.rivals.rivers.rivets.riving.riyals.roadeo.roadie.roamed.roamer.roared.roarer.roasts.robalo.roband.robbed.robber.robbin.robing.robins.robles.robots.robust.rochet.rocked.rocker.rocket.rococo.rodded.rodent.rodeos.rodman.rodmen.rogers.rogued.rogues.roiled.rolfed.rolfer.rolled.roller.romaji.romano.romans.romeos.romped.romper.rondel.rondos.ronion.ronnel.ronyon.roofed.roofer.roofie.rooked.rookie.roomed.roomer.roomie.roosed.rooser.rooses.roosts.rooted.rooter.rootle.ropers.ropery.ropier.ropily.roping.roques.roquet.rosary.roscoe.rosery.rosets.roshis.rosier.rosily.rosing.rosins.rosiny.roster.rostra.rotary.rotate.rotche.rotgut.rotors.rotted.rotten.rotter.rottes.rotund.rouble.rouche.rouens.rouged.rouges.roughs.roughy.rounds.rouped.roupet.roused.rouser.rouses.rousts.routed.router.routes.rouths.rovers.roving.rowans.rowels.rowens.rowers.rowing.rowths.royals.rozzer.ruanas.rubace.rubati.rubato.rubbed.rubber.rubble.rubbly.rubels.rubied.rubier.rubies.rubigo.rubles.ruboff.rubout.rubric.ruched.ruches.rucked.ruckle.ruckus.rudder.ruddle.rudely.rudery.rudest.rueful.ruffed.ruffes.ruffle.ruffly.rufous.rugate.rugged.rugger.rugola.rugosa.rugose.rugous.ruined.ruiner.rulers.rulier.ruling.rumaki.rumbas.rumble.rumbly.rumens.rumina.rummer.rumors.rumour.rumple.rumply.rumpus.rundle.runkle.runlet.runnel.runner.runoff.runout.runway.rupees.rupiah.rurban.rushed.rushee.rusher.rushes.rusine.russet.rusted.rustic.rustle.rutile.rutins.rutted.ryking.ryokan.sabals.sabbat.sabbed.sabers.sabine.sabins.sabirs.sables.sabots.sabras.sabred.sabres.sacbut.sachem.sachet.sacked.sacker.sacque.sacral.sacred.sacrum.sadden.sadder.saddhu.saddle.sadhes.sadhus.sadism.safari.safely.safest.safety.safrol.sagbut.sagely.sagest.saggar.sagged.sagger.sagier.sahibs.saices.saigas.sailed.sailer.sailor.saimin.sained.saints.saithe.saiyid.sajous.sakers.salaam.salads.salals.salami.salary.saleps.salify.salina.saline.saliva.sallet.sallow.salmis.salmon.salols.salons.saloon.saloop.salpae.salpas.salpid.salsas.salted.salter.saltie.saluki.salute.salved.salver.salves.salvia.salvor.salvos.samara.sambal.sambar.sambas.sambos.sambur.samech.samekh.sameks.samiel.samite.samlet.samosa.sampan.sample.samshu.sancta.sandal.sanded.sander.sandhi.sanely.sanest.sangar.sangas.sanger.sanghs.sanies.saning.sanity.sanjak.sannop.sannup.sansar.sansei.santir.santol.santos.santur.sapors.sapota.sapote.sapour.sapped.sapper.sarans.sarape.sardar.sarees.sarges.sargos.sarins.sarode.sarods.sarong.sarsar.sarsen.sartor.sashay.sashed.sashes.sasins.sassed.sasses.satang.satara.satays.sateen.sating.satins.satiny.satire.satori.satrap.satyrs.sauced.saucer.sauces.sauchs.sauger.saughs.saughy.saults.saunas.saurel.sauted.sautes.savage.savant.savate.savers.savine.saving.savins.savior.savors.savory.savour.savoys.sawers.sawfly.sawing.sawlog.sawney.sawyer.saxony.sayeds.sayers.sayest.sayids.saying.sayyid.scabby.scalar.scalds.scaled.scaler.scales.scalls.scalps.scampi.scamps.scants.scanty.scaped.scapes.scarab.scarce.scared.scarer.scares.scarey.scarfs.scarph.scarps.scarry.scarts.scathe.scatts.scatty.scaups.scaurs.scenas.scends.scenes.scenic.scents.schavs.schema.scheme.schism.schist.schizo.schizy.schlep.schlub.schmoe.schmos.schnoz.school.schorl.schrik.schrod.schtik.schuit.schuln.schuls.schuss.schwas.scilla.scions.sclaff.sclera.scoffs.scolds.scolex.sconce.scones.scooch.scoops.scoots.scoped.scopes.scorch.scored.scorer.scores.scoria.scorns.scotch.scoter.scotia.scours.scouse.scouth.scouts.scowed.scowls.scrags.scrams.scrape.scraps.scrawl.screak.scream.screed.screen.screes.screws.screwy.scribe.scried.scries.scrimp.scrims.scrips.script.scrive.scrods.scroll.scroop.scrota.scrubs.scruff.scrums.scubas.scuffs.sculch.sculks.sculls.sculps.sculpt.scummy.scurfs.scurfy.scurry.scurvy.scutch.scutes.scutum.scuzzy.scyphi.scythe.seabag.seabed.seadog.sealed.sealer.seaman.seamed.seamen.seamer.seance.search.seared.searer.season.seated.seater.seawan.seaway.sebums.secant.seccos.secede.secern.second.secpar.secret.sector.secund.secure.sedans.sedate.seders.sedges.sedile.seduce.sedums.seeded.seeder.seeing.seeker.seeled.seemed.seemer.seemly.seeped.seesaw.seethe.seggar.segnos.segued.segues.seiche.seidel.seined.seiner.seines.seised.seiser.seises.seisin.seisms.seisor.seitan.seized.seizer.seizes.seizin.seizor.sejant.selahs.seldom.select.selfed.selkie.seller.selles.selsyn.selvas.selves.sememe.semens.semina.semple.sempre.senary.senate.sendal.sended.sender.sendup.seneca.senega.senhor.senile.senior.seniti.sennas.sennet.sennit.senora.senors.senryu.sensed.sensei.senses.sensor.sensum.sentry.sepals.sepias.sepoys.sepses.sepsis.septal.septet.septic.septum.sequel.sequin.seracs.serail.serais.serape.seraph.serdab.serein.serene.serest.serged.serger.serges.serial.series.serifs.serine.sering.serins.sermon.serosa.serous.serows.serums.serval.served.server.serves.servos.sesame.sestet.setoff.setons.setose.setous.setout.settee.setter.settle.setups.sevens.severe.severs.sewage.sewans.sewars.sewers.sewing.sexier.sexily.sexing.sexism.sexist.sexpot.sextan.sextet.sexton.sextos.shabby.shacko.shacks.shaded.shader.shades.shadow.shaduf.shafts.shaggy.shaird.shairn.shaken.shaker.shakes.shakos.shaled.shales.shaley.shalom.shaman.shamas.shamed.shames.shammy.shamos.shamoy.shamus.shandy.shanks.shanny.shanti.shanty.shaped.shapen.shaper.shapes.shards.shared.sharer.shares.sharia.sharif.sharks.sharns.sharny.sharps.sharpy.shaugh.shauls.shaved.shaven.shaver.shaves.shavie.shawed.shawls.shawms.shazam.sheafs.sheals.shears.sheath.sheave.sheens.sheeny.sheers.sheesh.sheets.sheeve.sheikh.sheiks.sheila.shekel.shells.shelly.shelta.shelty.shelve.shelvy.shends.sheols.sheqel.sherds.sherif.sherpa.sherry.sheuch.sheugh.shewed.shewer.shibah.shield.shiels.shiers.shiest.shifts.shifty.shikar.shiksa.shikse.shills.shimmy.shindy.shined.shiner.shines.shinny.shires.shirks.shirrs.shirts.shirty.shists.shivah.shivas.shiver.shives.shlepp.shleps.shlock.shlubs.shlump.shmear.shmoes.shmuck.shnaps.shnook.shoals.shoaly.shoats.shocks.shoddy.shoers.shofar.shogis.shogun.shojis.sholom.shooed.shooks.shools.shoots.shoppe.shoran.shored.shores.shorls.shorts.shorty.shotes.shotts.should.shouts.shoved.shovel.shover.shoves.showed.shower.shoyus.shrank.shreds.shrewd.shrews.shriek.shrift.shrike.shrill.shrimp.shrine.shrink.shrive.shroff.shroud.shrove.shrubs.shrugs.shrunk.shtetl.shtick.shtiks.shucks.shunts.shuted.shutes.shyers.shyest.shying.sialic.sialid.sibyls.siccan.sicced.sicked.sickee.sicken.sicker.sickie.sickle.sickly.sickos.siddur.siding.sidled.sidler.sidles.sieged.sieges.sienna.sierra.siesta.sieurs.sieved.sieves.sifaka.sifted.sifter.sighed.sigher.sights.sigils.sigloi.siglos.siglum.sigmas.signal.signed.signee.signer.signet.signor.silage.silane.sileni.silent.silica.silked.silken.silkie.siller.siloed.silted.silvae.silvan.silvas.silver.silvex.simars.simian.simile.simlin.simmer.simnel.simony.simoom.simoon.simper.simple.simply.sinews.sinewy.sinful.singed.singer.singes.single.singly.sinker.sinned.sinner.sinter.siphon.siping.sipped.sipper.sippet.sirdar.sirees.sirens.siring.sirrah.sirras.sirree.sirups.sirupy.sisals.siskin.sisses.sister.sistra.sitars.sitcom.siting.sitten.sitter.situps.sivers.sixmos.sixtes.sixths.sizars.sizers.sizier.sizing.sizzle.skalds.skanks.skanky.skated.skater.skates.skatol.skeane.skeans.skeens.skeets.skeigh.skeins.skells.skelms.skelps.skenes.skerry.sketch.skewed.skewer.skibob.skiddy.skidoo.skiers.skiffs.skiing.skills.skimos.skimps.skimpy.skinks.skinny.skirls.skirrs.skirts.skited.skites.skived.skiver.skives.skivvy.sklent.skoals.skorts.skulks.skulls.skunks.skunky.skybox.skycap.skying.skylit.skyman.skymen.skyway.slacks.slaggy.slaked.slaker.slakes.slalom.slangs.slangy.slants.slanty.slatch.slated.slater.slates.slatey.slaved.slaver.slaves.slavey.slayed.slayer.sleave.sleaze.sleazo.sleazy.sledge.sleeks.sleeky.sleeps.sleepy.sleets.sleety.sleeve.sleigh.sleuth.slewed.sliced.slicer.slices.slicks.slider.slides.sliest.slieve.slight.slimed.slimes.slimly.slimsy.slings.slinks.slinky.sliped.slipes.slippy.slipup.slitty.sliver.slobby.slogan.sloids.slojds.sloops.sloped.sloper.slopes.sloppy.sloshy.sloths.slouch.slough.sloven.slowed.slower.slowly.sloyds.sludge.sludgy.sluffs.sluice.sluicy.sluing.slummy.slumps.slurbs.slurps.slurry.slushy.slutty.slyest.slypes.smacks.smalls.smalti.smalto.smalts.smarms.smarmy.smarts.smarty.smazes.smears.smeary.smeeks.smells.smelly.smelts.smerks.smidge.smilax.smiled.smiler.smiles.smiley.smirch.smirks.smirky.smiter.smites.smiths.smithy.smocks.smoggy.smoked.smoker.smokes.smokey.smolts.smooch.smoosh.smooth.smudge.smudgy.smugly.smutch.smutty.snacks.snafus.snaggy.snails.snaked.snakes.snakey.snappy.snared.snarer.snares.snarfs.snarks.snarky.snarls.snarly.snathe.snaths.snawed.snazzy.sneaks.sneaky.sneaps.snecks.sneers.sneery.sneesh.sneeze.sneezy.snells.snicks.snider.sniffs.sniffy.sniped.sniper.snipes.snippy.snitch.snivel.snobby.snoods.snooks.snools.snoops.snoopy.snoots.snooty.snooze.snoozy.snored.snorer.snores.snorts.snotty.snouts.snouty.snowed.snubby.snuffs.snuffy.snugly.soaked.soaker.soaped.soaper.soared.soarer.soaves.sobbed.sobber.sobeit.sobers.sobful.socage.soccer.social.socked.socket.socles.socman.socmen.sodded.sodden.sodium.sodoms.sodomy.soever.sofars.soffit.softas.soften.softer.softie.softly.sogged.soigne.soiled.soiree.sokols.solace.soland.solano.solans.solate.soldan.solder.solely.solemn.soleus.solgel.solidi.solids.soling.solion.soloed.solons.solums.solute.solved.solver.solves.somans.somata.somber.sombre.somite.somoni.sonant.sonars.sonata.sonder.sondes.sonics.sonnet.sonsie.sooner.sooted.soothe.sooths.sopite.sopors.sopped.sorbed.sorbet.sorbic.sordid.sordor.sorels.sorely.sorest.sorgho.sorgos.soring.sorned.sorner.sorrel.sorrow.sorted.sorter.sortie.sotols.sotted.souari.soucar.soudan.soughs.sought.souled.sounds.souped.source.soured.sourer.sourly.soused.souses.souter.souths.soviet.sovran.sowans.sowars.sowcar.sowens.sowers.sowing.sozine.sozins.spaced.spacer.spaces.spacey.spaded.spader.spades.spadix.spahee.spahis.spails.spaits.spales.spalls.spanks.spared.sparer.spares.sparge.sparid.sparks.sparky.sparry.sparse.spasms.spates.spathe.spavie.spavin.spawns.spayed.spazes.speaks.speans.spears.specie.specks.speech.speedo.speeds.speedy.speels.speers.speils.speirs.speise.speiss.spells.spelts.speltz.spence.spends.spendy.spense.spewed.spewer.sphene.sphere.sphery.sphinx.sphynx.spicae.spicas.spiced.spicer.spices.spicey.spicks.spider.spiels.spiers.spiffs.spiffy.spigot.spiked.spiker.spikes.spikey.spiled.spiles.spills.spilth.spinal.spined.spinel.spines.spinet.spinny.spinor.spinto.spiral.spirea.spired.spirem.spires.spirit.spirts.spital.spited.spites.spivvy.splake.splash.splats.splays.spleen.splent.splice.spliff.spline.splint.splits.splore.splosh.spodes.spoils.spoilt.spoked.spoken.spokes.sponge.spongy.spoofs.spoofy.spooks.spooky.spools.spoons.spoony.spoors.sporal.spored.spores.sports.sporty.spotty.spouse.spouts.sprags.sprain.sprang.sprats.sprawl.sprays.spread.sprees.sprent.sprier.sprigs.spring.sprint.sprite.sprits.spritz.sprout.spruce.sprucy.sprues.sprugs.sprung.spryer.spryly.spuing.spumed.spumes.spunks.spunky.spurge.spurns.spurry.spurts.sputum.spying.squabs.squads.squall.squama.square.squark.squash.squats.squawk.squaws.squeak.squeal.squegs.squibs.squids.squill.squint.squire.squirm.squirt.squish.squush.sradha.stable.stably.stacks.stacte.stades.stadia.staffs.staged.stager.stages.stagey.staggy.staigs.stains.stairs.staked.stakes.stalag.staled.staler.stales.stalks.stalky.stalls.stamen.stamps.stance.stanch.stands.staned.stanes.stangs.stanks.stanol.stanza.stapes.staphs.staple.starch.stared.starer.stares.starry.starts.starve.stases.stasis.statal.stated.stater.states.static.statin.stator.statue.status.staved.staves.stayed.stayer.steads.steady.steaks.steals.steams.steamy.steeds.steeks.steels.steely.steeps.steers.steeve.steins.stelae.stelai.stelar.steles.stelic.stella.stemma.stemmy.stench.stenos.stents.steppe.stereo.steres.steric.sterna.sterns.sterol.stewed.stichs.sticks.sticky.stiffs.stifle.stigma.stiles.stills.stilly.stilts.stimes.stingo.stings.stingy.stinko.stinks.stinky.stints.stiped.stipel.stipes.stirks.stirps.stitch.stithy.stiver.stoats.stocks.stocky.stodge.stodgy.stogey.stogie.stoics.stoked.stoker.stokes.stoled.stolen.stoles.stolid.stolon.stomal.stomas.stomps.stoned.stoner.stones.stoney.stooge.stooks.stools.stoops.stoped.stoper.stopes.storax.stored.storer.stores.storey.storks.storms.stormy.stotin.stotts.stound.stoups.stoure.stours.stoury.stouts.stover.stoves.stowed.stowps.strafe.strain.strait.strake.strand.strang.straps.strass.strata.strath.strati.straws.strawy.strays.streak.stream.streek.streel.street.streps.stress.strewn.strews.striae.strick.strict.stride.strife.strike.string.stripe.strips.stript.stripy.strive.strobe.strode.stroke.stroll.stroma.strong.strook.strops.stroud.strove.strown.strows.stroys.struck.struma.strums.strung.strunt.struts.stubby.stucco.studio.studly.stuffs.stuffy.stulls.stumps.stumpy.stunts.stupas.stupes.stupid.stupor.sturdy.sturts.stying.stylar.styled.styler.styles.stylet.stylus.stymie.styrax.suable.suably.suaver.subahs.subbed.subdeb.subdue.subers.subfix.subgum.subito.sublet.sublot.submit.subnet.suborn.subpar.subsea.subset.subtle.subtly.suburb.subway.succah.succor.sucked.suckle.sucres.sudary.sudden.sudors.sudsed.sudser.sudses.sueded.suedes.suffer.suffix.sugars.sugary.sughed.suints.suited.suiter.suites.suitor.sukkah.sukkot.sulcal.sulcus.suldan.sulfas.sulfid.sulfur.sulked.sulker.sullen.sulpha.sultan.sultry.sumach.sumacs.summae.summas.summed.summer.summit.summon.sunbow.sundae.sunder.sundew.sundog.sundry.sunken.sunket.sunlit.sunnah.sunnas.sunned.sunray.sunset.suntan.sunups.superb.supers.supine.supped.supper.supple.supply.surahs.surely.surest.surety.surfed.surfer.surged.surger.surges.surimi.surras.surrey.surtax.survey.sushis.suslik.sussed.susses.sutler.sutras.suttas.suttee.suture.svaraj.svelte.swabby.swaged.swager.swages.swails.swains.swales.swamis.swamps.swampy.swanks.swanky.swanny.swaraj.swards.swarfs.swarms.swarth.swarty.swatch.swathe.swaths.swayed.swayer.swears.sweats.sweaty.swedes.sweeny.sweeps.sweepy.sweets.swells.swerve.sweven.swifts.swills.swimmy.swinge.swings.swingy.swinks.swiped.swipes.swiple.swirls.swirly.swishy.switch.swithe.swived.swivel.swives.swivet.swoons.swoony.swoops.swoopy.swoosh.swords.swound.swouns.syboes.sycees.sylphs.sylphy.sylvae.sylvan.sylvas.sylvin.symbol.synced.synchs.syncom.syndet.syndic.syngas.synods.syntax.synths.synura.sypher.syphon.syrens.syrinx.syrups.syrupy.sysops.system.syzygy.tabard.tabbed.tabbis.tabers.tablas.tabled.tables.tablet.taboos.tabors.tabour.tabued.tabuli.tabuns.taches.tacked.tacker.tacket.tackey.tackle.tactic.taenia.taffia.tafias.tagged.tagger.tagrag.tahini.tahsil.taigas.tailed.tailer.taille.tailor.taints.taipan.takahe.takers.takeup.taking.takins.talars.talced.talcky.talcum.talent.talers.talion.talked.talker.talkie.taller.tallis.tallit.tallol.tallow.talons.taluka.taluks.tamale.tamals.tamari.tambac.tambak.tambur.tamein.tamely.tamers.tamest.taming.tammie.tampan.tamped.tamper.tampon.tandem.tanged.tangle.tangly.tangos.tanist.tankas.tanked.tanker.tanned.tanner.tannic.tannin.tannoy.tanrec.tantra.tanuki.tapalo.tapers.tapeta.taping.tapirs.tapped.tapper.tappet.tarama.targes.target.tariff.taring.tarmac.tarnal.tarocs.taroks.tarots.tarpan.tarpon.tarred.tarres.tarsal.tarsia.tarsus.tartan.tartar.tarted.tarter.tartly.tarzan.tasked.tassel.tasses.tasset.tassie.tasted.taster.tastes.tatami.tatars.taters.tatsoi.tatted.tatter.tattie.tattle.tattoo.taught.taunts.tauons.taupes.tauted.tauten.tauter.tautly.tautog.tavern.tawdry.tawers.tawing.tawney.tawpie.tawsed.tawses.taxeme.taxers.taxied.taxies.taxing.taxite.taxman.taxmen.taxols.taxons.tazzas.teabox.teacup.teamed.teapot.teapoy.teared.tearer.teased.teasel.teaser.teases.teated.teazel.teazle.teched.techie.techno.tectal.tectum.tedded.tedder.tedium.teeing.teemed.teemer.teener.teensy.teepee.teeter.teethe.teflon.tegmen.teguas.teiids.teinds.tekkie.telcos.teledu.telega.telfer.telial.telium.teller.tellys.telnet.telome.telson.temped.tempeh.temper.temple.tempos.tempts.tenace.tenail.tenant.tended.tender.tendon.tendus.tenets.teniae.tenias.tenner.tennis.tenons.tenors.tenour.tenpin.tenrec.tensed.tenser.tenses.tensor.tented.tenter.tenths.tentie.tenues.tenuis.tenure.tenuti.tenuto.teopan.tepals.tepees.tepefy.tephra.tepoys.terais.teraph.terbia.terbic.tercel.terces.tercet.teredo.terete.tergal.tergum.termed.termer.termly.termor.ternes.terrae.terras.terret.territ.terror.terser.teslas.testae.tested.testee.tester.testes.testis.teston.tetany.tetchy.tether.tetrad.tetras.tetris.tetryl.tetter.tewing.texted.thacks.thairm.thaler.thalli.thanes.thanks.tharms.thatch.thawed.thawer.thebes.thecae.thecal.thefts.thegns.theine.theins.theirs.theism.theist.themed.themes.thenal.thenar.thence.theory.theres.therme.therms.theses.thesis.thesps.thetas.thetic.thicks.thieve.thighs.thills.things.thinks.thinly.thiols.thiram.thirds.thirls.thirst.thirty.tholed.tholes.tholoi.tholos.thongs.thorax.thoria.thoric.thorns.thorny.thoron.thorpe.thorps.thoued.though.thrall.thrash.thrave.thrawn.thraws.thread.threap.threat.threep.threes.thresh.thrice.thrift.thrill.thrips.thrive.throat.throbs.throes.throne.throng.throve.thrown.throws.thrums.thrush.thrust.thujas.thulia.thumbs.thumps.thunks.thurls.thusly.thuyas.thwack.thwart.thymes.thymey.thymic.thymol.thymus.thyrse.thyrsi.tiaras.tibiae.tibial.tibias.ticals.ticced.ticked.ticker.ticket.tickle.tictac.tictoc.tidbit.tiddly.tidied.tidier.tidies.tidily.tiding.tieing.tiepin.tierce.tiered.tiffed.tiffin.tigers.tights.tiglon.tigons.tikkas.tilaks.tildes.tilers.tiling.tilled.tiller.tilted.tilter.tilths.timbal.timber.timbre.timely.timers.timing.tincal.tincts.tinder.tineal.tineas.tineid.tinful.tinged.tinges.tingle.tingly.tinier.tinily.tining.tinker.tinkle.tinkly.tinman.tinmen.tinned.tinner.tinpot.tinsel.tinted.tinter.tipcat.tipoff.tipped.tipper.tippet.tipple.tiptoe.tiptop.tirade.tiring.tirled.tisane.tissue.titans.titbit.titers.titfer.tithed.tither.tithes.titian.titled.titles.titman.titmen.titres.titter.tittie.tittle.tittup.tmeses.tmesis.toasts.toasty.tobies.tocher.tocsin.todays.toddle.todies.toecap.toeing.toffee.togaed.togate.togged.toggle.togues.toiled.toiler.toiles.toilet.toited.tokays.tokens.tokers.toking.tolane.tolans.tolars.toledo.toling.tolled.toller.toluic.toluid.toluol.toluyl.tolyls.tomans.tomato.tombac.tombak.tombal.tombed.tomboy.tomcat.tomcod.tommed.tomtit.tondos.toneme.toners.tongas.tonged.tonger.tongue.tonics.tonier.toning.tonish.tonlet.tonner.tonnes.tonsil.tooled.tooler.toonie.tooted.tooter.tooths.toothy.tootle.tootsy.topees.topers.topful.tophes.tophus.topics.toping.topped.topper.topple.toques.toquet.torahs.torchy.torero.torics.tories.toroid.torose.toroth.torous.torpid.torpor.torque.torrid.torses.torsks.torsos.tortas.torten.tortes.torula.toshes.tossed.tosses.tossup.totals.totems.toters.tother.toting.totted.totter.toucan.touche.touchy.toughs.toughy.toupee.toured.tourer.toused.touses.tousle.touted.touter.touzle.towage.toward.towels.towers.towery.towhee.towies.towing.townee.townie.toxics.toxine.toxins.toxoid.toyers.toying.toyish.toyons.traced.tracer.traces.tracks.tracts.traded.trader.trades.tragic.tragus.traiks.trails.trains.traits.tramel.tramps.trampy.trance.tranks.tranny.tranqs.trapan.trapes.trashy.trauma.travel.traves.trawls.treads.treats.treaty.treble.trebly.treens.trefah.tremor.trench.trends.trendy.trepan.trepid.tressy.trevet.triacs.triads.triage.trials.tribal.tribes.triced.tricep.trices.tricks.tricky.tricot.triene.triens.triers.trifid.trifle.trigly.trigon.trigos.trijet.trikes.trilby.trills.trimer.trimly.trinal.trined.trines.triode.triols.triose.tripes.triple.triply.tripod.tripos.trippy.triste.triter.triton.triune.trivet.trivia.troaks.trocar.troche.trocks.trogon.troika.troked.trokes.trolls.trolly.trompe.tromps.tronas.trones.troops.tropes.trophy.tropic.tropin.troths.trotyl.trough.troupe.trouts.trouty.trover.troves.trowed.trowel.trowth.truant.truced.truces.trucks.trudge.truest.truffe.truing.truism.trulls.trumps.trunks.trusts.trusty.truths.trying.tryout.tryste.trysts.tsades.tsadis.tsetse.tsking.tsktsk.tsores.tsoris.tsuris.tubate.tubbed.tubber.tubers.tubful.tubing.tubist.tubule.tuchun.tucked.tucker.tucket.tuffet.tufoli.tufted.tufter.tugged.tugger.tugrik.tuille.tuladi.tulips.tulles.tumble.tumefy.tumors.tumour.tumped.tumuli.tumult.tundra.tuners.tuneup.tunica.tunics.tuning.tunned.tunnel.tupelo.tupiks.tupped.tuques.turaco.turban.turbid.turbit.turbos.turbot.tureen.turfed.turgid.turgor.turion.turkey.turned.turner.turnip.turnon.turnup.turret.turtle.turves.tusche.tushed.tushes.tushie.tusked.tusker.tussah.tussal.tussar.tusseh.tusser.tusses.tussis.tussle.tussor.tussur.tutees.tutors.tutted.tuttis.tutued.tuxedo.tuyere.tuyers.twains.twangs.twangy.twanky.tweaks.tweaky.tweeds.tweedy.tweens.tweeny.tweets.tweeze.twelve.twenty.twerps.twibil.twiers.twiggy.twilit.twills.twined.twiner.twines.twinge.twirls.twirly.twirps.twists.twisty.twitch.twofer.twyers.tycoon.tymbal.tympan.tyning.typhon.typhus.typier.typify.typing.typist.tyrant.tyring.tythed.tythes.tzetze.tzuris.uakari.ubiety.ubique.udders.uglier.uglies.uglify.uglily.ugsome.uhlans.ukases.ulamas.ulcers.ulemas.ullage.ulster.ultima.ultimo.ultras.umamis.umbels.umbers.umbles.umbrae.umbral.umbras.umiack.umiacs.umiaks.umiaqs.umlaut.umping.umpire.unable.unaged.unakin.unarms.unawed.unaxed.unbale.unbans.unbars.unbear.unbelt.unbend.unbent.unbind.unbolt.unborn.unbred.unbusy.uncage.uncake.uncaps.uncase.uncast.unchic.unciae.uncial.uncini.unclad.uncles.unclip.unclog.uncock.uncoil.uncool.uncork.uncuff.uncurb.uncurl.uncute.undead.undies.undine.undock.undoer.undoes.undone.undraw.undrew.unduly.undyed.unease.uneasy.uneven.unfair.unfelt.unfits.unfixt.unfold.unfond.unfree.unfurl.ungird.ungirt.unglue.ungual.ungues.unguis.ungula.unhair.unhand.unhang.unhats.unhelm.unhewn.unholy.unhood.unhook.unhung.unhurt.unhusk.unific.unions.unipod.unique.unisex.unison.united.uniter.unites.unjams.unjust.unkend.unkent.unkept.unkind.unkink.unknit.unknot.unlace.unlade.unlaid.unlash.unlays.unlead.unless.unlike.unlink.unlive.unload.unlock.unmade.unmake.unmans.unmask.unmeet.unmesh.unmews.unmixt.unmold.unmoor.unmown.unnail.unopen.unpack.unpaid.unpegs.unpens.unpent.unpick.unpile.unpins.unplug.unpure.unread.unreal.unreel.unrent.unrest.unrigs.unripe.unrips.unrobe.unroll.unroof.unroot.unrove.unruly.unsafe.unsaid.unsawn.unsays.unseal.unseam.unseat.unseen.unsell.unsent.unsets.unsewn.unsews.unsexy.unshed.unship.unshod.unshut.unsnag.unsnap.unsold.unsown.unspun.unstep.unstop.unsung.unsunk.unsure.untack.untame.untidy.untied.unties.untold.untorn.untrim.untrod.untrue.untuck.untune.unused.unveil.unvext.unwary.unwell.unwept.unwind.unwise.unwish.unwits.unworn.unwove.unwrap.unyoke.unzips.upases.upbear.upbeat.upbind.upboil.upbore.upbows.upcast.upcoil.upcurl.updart.update.updive.updove.upends.upflow.upfold.upgaze.upgird.upgirt.upgrew.upgrow.upheap.upheld.uphill.uphold.uphove.uphroe.upkeep.upland.upleap.uplift.uplink.upload.upmost.uppers.uppile.upping.uppish.uppity.upprop.uprate.uprear.uprise.uproar.uproot.uprose.uprush.upsend.upsent.upsets.upshot.upside.upsize.upsoar.upstep.upstir.uptake.uptalk.uptear.uptick.uptilt.uptime.uptore.uptorn.uptoss.uptown.upturn.upwaft.upward.upwell.upwind.uracil.uraeus.urania.uranic.uranyl.urares.uraris.urases.urates.uratic.urbane.urbias.urchin.urease.uredia.uredos.ureide.uremia.uremic.ureter.uretic.urgent.urgers.urging.urials.urinal.urines.uropod.urping.ursids.ursine.urtext.uruses.usable.usably.usages.usance.useful.ushers.usneas.usques.usuals.usurer.usurps.uterus.utmost.utopia.utters.uveous.uvulae.uvular.uvulas.vacant.vacate.vacuum.vadose.vagary.vagile.vagrom.vaguer.vahine.vailed.vainer.vainly.vakeel.vakils.valets.valgus.valine.valise.valkyr.valley.valors.valour.valses.valued.valuer.values.valuta.valval.valvar.valved.valves.vamose.vamped.vamper.vandal.vandas.vanish.vanity.vanman.vanmen.vanned.vanner.vapors.vapory.vapour.varias.varied.varier.varies.varlet.varnas.varoom.varved.varves.vassal.vaster.vastly.vatful.vatted.vaults.vaulty.vaunts.vaunty.vaward.vealed.vealer.vector.veejay.veenas.veepee.veered.vegans.vegete.vegged.veggie.vegies.veiled.veiler.veinal.veined.veiner.velars.velate.velcro.veldts.vellum.veloce.velour.velure.velvet.vended.vendee.vender.vendor.vendue.veneer.venene.venery.venged.venges.venial.venine.venins.venire.venoms.venose.venous.vented.venter.venues.venule.verbal.verbid.verdin.verged.verger.verges.verier.verify.verily.verism.verist.verite.verity.vermes.vermin.vermis.vernal.vernix.versal.versed.verser.verses.verset.versos.verste.versts.versus.vertex.vertus.verves.vervet.vesica.vesper.vespid.vessel.vestal.vestas.vested.vestee.vestry.vetoed.vetoer.vetoes.vetted.vetter.vexers.vexils.vexing.viable.viably.vialed.viands.viatic.viator.vibist.vibrio.vicars.vicing.victim.victor.vicuna.videos.viewed.viewer.vigias.vigils.vigors.vigour.viking.vilely.vilest.vilify.villae.villas.villus.vimina.vinals.vincas.vineal.vinery.vinier.vinify.vining.vinous.vinyls.violas.violet.violin.vipers.virago.vireos.virgas.virgin.virile.virion.viroid.virtue.virtus.visaed.visage.visard.viscid.viscus.viseed.vising.vision.visits.visive.visors.vistas.visual.vitals.vitric.vittae.vittle.vivace.vivary.vivers.vivify.vixens.vizard.vizier.vizirs.vizors.vizsla.vocabs.vocals.vodkas.vodoun.vodous.voduns.vogued.voguer.vogues.voiced.voicer.voices.voided.voider.voiles.volant.volery.voling.volley.volost.voltes.volume.volute.volvas.volvox.vomers.vomica.vomito.vomits.voodoo.vortex.votary.voters.voting.votive.voudon.vowels.vowers.vowing.voxels.voyage.voyeur.vrooms.vrouws.vulgar.vulgus.vulvae.vulval.vulvar.vulvas.wabble.wabbly.wacker.wackes.wackos.wadded.wadder.waddie.waddle.waddly.waders.wadies.wading.wadmal.wadmel.wadmol.wadset.waeful.wafers.wafery.waffed.waffie.waffle.waffly.wafted.wafter.wagers.wagged.wagger.waggle.waggly.waggon.waging.wagons.wahine.wahoos.waifed.wailed.wailer.waired.waists.waited.waiter.waived.waiver.waives.wakame.wakens.wakers.wakiki.waking.walers.walies.waling.walked.walker.walkup.wallah.wallas.walled.wallet.wallie.wallop.wallow.walnut.walrus.wamble.wambly.wammus.wampum.wampus.wander.wandle.wangan.wangle.wangun.wanier.waning.wanion.wanked.wanned.wanner.wanted.wanter.wanton.wapiti.wapped.warble.warded.warden.warder.warier.warily.waring.warked.warmed.warmer.warmly.warmth.warmup.warned.warner.warped.warper.warred.warren.warsaw.warsle.warted.wasabi.washed.washer.washes.washup.wasted.waster.wastes.wastry.watape.wataps.waters.watery.watter.wattle.waucht.waught.wauked.wauled.wavers.wavery.waveys.wavier.wavies.wavily.waving.wawled.waxers.waxier.waxily.waxing.waylay.wazoos.weaken.weaker.weakly.weakon.wealds.wealth.weaned.weaner.weapon.wearer.weasel.weason.weaved.weaver.weaves.webbed.webcam.webers.webfed.weblog.wechts.wedded.wedder.wedeln.wedels.wedged.wedges.wedgie.weeded.weeder.weekly.weened.weenie.weensy.weeper.weepie.weeted.weever.weevil.weewee.weighs.weight.weiner.weirdo.weirds.weirdy.welded.welder.weldor.welkin.welled.wellie.welted.welter.wended.weskit.wester.wether.wetted.wetter.whacko.whacks.whacky.whaled.whaler.whales.whammo.whammy.whangs.wharfs.wharve.whaups.wheals.wheats.wheels.wheens.wheeps.wheeze.wheezy.whelks.whelky.whelms.whelps.whenas.whence.wheres.wherry.wherve.wheyey.whidah.whiffs.whiled.whiles.whilom.whilst.whimsy.whined.whiner.whines.whiney.whinge.whinny.whippy.whirls.whirly.whirrs.whirry.whisht.whisks.whisky.whists.whited.whiten.whiter.whites.whitey.whizzy.wholes.wholly.whomps.whomso.whoofs.whoops.whoosh.whored.whores.whorls.whorts.whosis.whumps.whydah.wiccan.wiccas.wiches.wicked.wicker.wicket.wicopy.widder.widdie.widdle.widely.widens.widest.widget.widish.widows.widths.wields.wieldy.wiener.wienie.wifely.wifeys.wifing.wigans.wigeon.wigged.wiggle.wiggly.wights.wiglet.wigwag.wigwam.wikiup.wilded.wilder.wildly.wilful.wilier.wilily.wiling.willed.willer.willet.willie.willow.wilted.wimble.wimmin.wimped.wimple.winced.wincer.winces.wincey.winded.winder.windle.window.windup.winery.winged.winger.winier.wining.winish.winked.winker.winkle.winned.winner.winnow.winoes.winter.wintle.wintry.winzes.wipers.wiping.wirers.wirier.wirily.wiring.wisdom.wisely.wisent.wisest.wished.wisher.wishes.wising.wisped.wissed.wisses.wisted.witans.witchy.withal.withed.wither.withes.within.witing.witney.witted.wittol.wivern.wivers.wiving.wizard.wizens.wizzen.wizzes.woaded.woalds.wobble.wobbly.wodges.woeful.wolfed.wolfer.wolver.wolves.womans.wombat.wombed.womera.wonder.wonned.wonner.wonted.wonton.wooded.wooden.woodie.woodsy.wooers.woofed.woofer.wooing.wooled.woolen.wooler.woolie.woolly.worded.worked.worker.workup.worlds.wormed.wormer.wormil.worrit.worsen.worser.worses.worset.worsts.worths.worthy.wotted.wounds.wovens.wowing.wowser.wracks.wraith.wrangs.wrasse.wraths.wrathy.wreaks.wreath.wrecks.wrench.wrests.wretch.wricks.wriest.wright.wrings.wrists.wristy.writer.writes.writhe.wrongs.wryest.wrying.wursts.wurzel.wusses.wuther.wyches.wyling.wyting.wyvern.xebecs.xenial.xenias.xenons.xylans.xylems.xylene.xyloid.xylols.xylose.xylyls.xyster.xystoi.xystos.xystus.yabber.yabbie.yachts.yacked.yaffed.yagers.yahoos.yairds.yakked.yakker.yakuza.yamens.yammer.yamuns.yanked.yanqui.yantra.yapock.yapoks.yapons.yapped.yapper.yarded.yarder.yarely.yarest.yarned.yarner.yarrow.yasmak.yatter.yauped.yauper.yaupon.yautia.yawing.yawled.yawned.yawner.yawped.yawper.yclept.yeaned.yearly.yearns.yeasts.yeasty.yecchs.yeelin.yelled.yeller.yellow.yelped.yelper.yenned.yentas.yentes.yeoman.yeomen.yerbas.yerked.yessed.yesses.yester.yeuked.yields.yipped.yippee.yippie.yirred.yirths.yobbos.yocked.yodels.yodled.yodler.yodles.yogees.yogini.yogins.yogurt.yoicks.yokels.yoking.yolked.yonder.yonker.youngs.youpon.youths.yowies.yowing.yowled.yowler.yttria.yttric.yuccas.yucked.yukked.yulans.yupons.yuppie.yutzes.zaddik.zaffar.zaffer.zaffir.zaffre.zaftig.zagged.zaikai.zaires.zamias.zanana.zander.zanier.zanies.zanily.zanzas.zapped.zapper.zareba.zariba.zayins.zazens.zealot.zeatin.zebeck.zebecs.zebras.zechin.zenana.zenith.zephyr.zeroed.zeroes.zeroth.zested.zester.zeugma.zibeth.zibets.zigged.zigzag.zillah.zinced.zincic.zincky.zinebs.zinged.zinger.zinnia.zipped.zipper.zirams.zircon.zither.zizith.zizzle.zlotys.zoaria.zocalo.zodiac.zoecia.zoftig.zombie.zombis.zonary.zonate.zoners.zoning.zonked.zonula.zonule.zooids.zooier.zoomed.zoonal.zooned.zorils.zoster.zouave.zounds.zoysia.zydeco.zygoid.zygoma.zygose.zygote.zymase.",
		() => ".aarrghh.abalone.abandon.abasers.abashed.abashes.abasias.abasing.abaters.abating.abators.abattis.abaxial.abaxile.abbotcy.abdomen.abduced.abduces.abducts.abelian.abelias.abettal.abetted.abetter.abettor.abeyant.abfarad.abhenry.abiders.abiding.abigail.ability.abioses.abiosis.abiotic.abjured.abjurer.abjures.ablated.ablates.ablator.ablauts.ableism.ableist.ablings.abluent.abluted.aboding.abolish.abollae.abomasa.abomasi.aborted.aborter.abortus.abought.aboulia.aboulic.abounds.abraded.abrader.abrades.abraids.abreact.abreast.abridge.abroach.abrosia.abscess.abscise.abscond.abseils.absence.absents.absinth.absolve.absorbs.abstain.absurds.abubble.abulias.abusers.abusing.abusive.abuttal.abutted.abutter.abvolts.abwatts.abysmal.abyssal.abysses.acacias.academe.academy.acajous.acaleph.acantha.acanthi.acapnia.acarids.acarine.acaroid.acaudal.acceded.acceder.accedes.accents.accepts.accidia.accidie.acclaim.accords.accosts.account.accrete.accrual.accrued.accrues.accurst.accusal.accused.accuser.accuses.acedias.acequia.acerate.acerber.acerbic.acerola.acerose.acerous.acetals.acetate.acetify.acetins.acetone.acetose.acetous.acetyls.achenes.achiest.achieve.achiote.achiral.acholia.acicula.acidify.acidity.aciform.acinose.acinous.aclinic.acmatic.acnodes.acolyte.aconite.acorned.acquest.acquire.acquits.acrasia.acrasin.acreage.acrider.acridly.acrobat.acrogen.acromia.acronic.acronym.acrotic.acrylic.actable.actinal.actings.actinia.actinic.actinon.actions.actives.actorly.actress.actuary.actuate.aculeus.acumens.acutely.acutest.acyclic.acylate.acyloin.adagial.adagios.adamant.adapted.adapter.adaptor.adaxial.addable.addaxes.addedly.addenda.addends.addible.addicts.addling.address.addrest.adduced.adducer.adduces.adducts.adeemed.adenine.adenoid.adenoma.adenyls.adepter.adeptly.adhered.adherer.adheres.adhibit.adipose.adipous.adjoins.adjoint.adjourn.adjudge.adjunct.adjured.adjurer.adjures.adjuror.adjusts.admiral.admired.admirer.admires.admixed.admixes.adnexal.adnouns.adopted.adoptee.adopter.adorers.adoring.adorned.adorner.adrenal.adsorbs.adulate.adultly.advance.advects.advents.adverbs.adverse.adverts.advices.advised.advisee.adviser.advises.advisor.adwoman.adwomen.adzukis.aecidia.aediles.aegises.aeneous.aeolian.aeonian.aerated.aerates.aerator.aerials.aeriest.aerobat.aerobes.aerobia.aerobic.aerogel.aerosat.aerosol.aerugos.aethers.afeared.affable.affably.affaire.affairs.affects.affiant.affiche.affinal.affined.affines.affirms.affixal.affixed.affixer.affixes.afflict.affords.affrays.affront.afghani.afghans.afreets.aftmost.aftosas.against.agamete.agamids.agamous.agapeic.agarics.agarose.agatize.agatoid.ageings.ageisms.ageists.ageless.agelong.agemate.agendas.agendum.agenize.agented.agentry.aggadah.aggadas.aggadic.aggadot.aggrade.aggress.agilely.agility.aginner.agisted.agitate.agitato.aglycon.agnails.agnates.agnatic.agnized.agnizes.agnomen.agnosia.agonies.agonise.agonist.agonize.agoroth.agoutis.agrafes.agraffe.agrapha.agravic.aground.ahimsas.aiblins.aidless.aiglets.aigrets.aikidos.aileron.ailment.aimless.ainsell.airbags.airboat.aircrew.airdate.airdrop.airfare.airflow.airfoil.airglow.airhead.airhole.airiest.airings.airless.airlift.airlike.airline.airmail.airpark.airplay.airport.airpost.airshed.airship.airshot.airshow.airsick.airthed.airtime.airting.airward.airwave.airways.airwise.aitches.ajowans.akvavit.alameda.alamode.alanine.alanins.alanyls.alarmed.alarums.alaskas.alastor.alation.albatas.albedos.albinal.albinic.albinos.albites.albitic.albizia.albumen.albumin.alcades.alcaics.alcaide.alcalde.alcayde.alcazar.alchemy.alchymy.alcohol.alcoved.alcoves.aldoses.aldrins.alegars.alembic.alencon.alerted.alerter.alertly.aleuron.alevins.alewife.alexias.alexine.alexins.alfakis.alfalfa.alfaqui.alforja.alfredo.algebra.aliases.alibied.alibies.alidade.alidads.aliened.alienee.aliener.alienly.alienor.aliform.alights.aligned.aligner.aliment.alimony.aliners.alining.alipeds.aliquot.aliunde.aliyahs.alkalic.alkalin.alkalis.alkanes.alkanet.alkenes.alkines.alkylic.alkynes.allayed.allayer.alleged.alleger.alleges.allegro.alleles.allelic.allergy.allheal.allicin.alliums.allobar.allodia.allonge.allonym.allover.allowed.alloxan.alloyed.allseed.alluded.alludes.allured.allurer.allures.alluvia.allying.allylic.almanac.almemar.almners.almonds.almondy.almoner.almonry.almsman.almsmen.almuces.almudes.alnicos.alodial.alodium.aloetic.aloofly.alpacas.alphorn.alphyls.alpines.already.alright.alsikes.altered.alterer.althaea.altheas.althorn.altoist.aludels.alumina.alumine.alumins.alumnae.alumnus.alunite.alveoli.alyssum.amadous.amalgam.amanita.amarone.amassed.amasser.amasses.amateur.amative.amatols.amatory.amazing.amazons.ambages.ambaris.ambeers.ambient.amblers.ambling.amboina.ambones.amboyna.ambries.ambroid.ambsace.amebean.ameboid.amended.amender.amenity.amentia.amerced.amercer.amerces.amesace.amiable.amiably.amidase.amidine.amidins.amidols.amidone.aminity.amirate.amities.ammeter.ammines.ammonal.ammonia.ammonic.amnesia.amnesic.amnesty.amnions.amniote.amoebae.amoeban.amoebas.amoebic.amongst.amorini.amorino.amorist.amoroso.amorous.amosite.amotion.amounts.amperes.amphora.amplest.amplify.ampoule.ampules.ampulla.amputee.amreeta.amritas.amtrack.amtracs.amulets.amusers.amusias.amusing.amusive.amylase.amylene.amyloid.amylose.amylums.anadems.anaemia.anaemic.anagoge.anagogy.anagram.analgia.anality.analogs.analogy.analyse.analyst.analyte.analyze.anankes.anapest.anaphor.anarchs.anarchy.anatase.anatomy.anattos.anchors.anchovy.anchusa.ancient.ancilla.anconal.ancones.ancress.andante.andiron.android.aneared.aneling.anemias.anemone.anergia.anergic.aneroid.anestri.anethol.aneurin.angakok.angaria.angeled.angelic.angelus.angered.angerly.anginal.anginas.angioma.anglers.anglice.angling.angoras.angrier.angrily.anguine.anguish.angular.anhinga.aniline.anilins.anility.animacy.animals.animate.animato.animism.animist.anionic.aniseed.anisole.anklets.ankling.ankuses.anlaces.anlagen.anlages.anlases.annates.annatto.anneals.annelid.annexed.annexes.annonas.annoyed.annoyer.annuals.annuity.annular.annulet.annulus.anodize.anodyne.anoints.anolyte.anomaly.anomies.anonyms.anopias.anopsia.anoraks.anorexy.anosmia.anosmic.another.anoxias.ansated.answers.antacid.antbear.antefix.anteing.antenna.anthems.anthers.anthill.anthoid.anthrax.antiair.antiars.antibug.anticar.anticks.anticly.antifat.antiflu.antifog.antifur.antigay.antigen.antigun.antijam.antilog.antiman.antings.antipot.antique.antired.antisag.antisex.antitax.antiwar.antlers.antlike.antlion.antonym.antrums.antsier.anurans.anurias.anurous.anviled.anxiety.anxious.anybody.anymore.anytime.anyways.anywise.aorists.aoudads.apaches.apagoge.apanage.aparejo.apatite.apelike.apercus.aperies.apetaly.aphagia.aphasia.aphasic.aphelia.apheses.aphesis.aphetic.aphides.aphonia.aphonic.aphotic.aphthae.aphylly.apicals.apiculi.apishly.aplasia.aplenty.aplites.aplitic.aplombs.apnoeal.apnoeas.apnoeic.apocarp.apocope.apodous.apogamy.apogeal.apogean.apogees.apogeic.apollos.apologs.apology.apolune.apomict.aporias.apostil.apostle.apothem.appalls.apparat.apparel.appeals.appears.appease.appends.applaud.applets.applied.applier.applies.appoint.apposed.apposer.apposes.apprise.apprize.approve.appulse.apraxia.apraxic.apricot.aproned.apropos.aprotic.apsidal.apsides.apteral.apteria.apteryx.aptness.apyrase.aquaria.aquatic.aquavit.aqueous.aquifer.aquiver.arabesk.arabica.arabize.arables.aramids.araneid.araroba.arbiter.arbored.arbores.arbours.arbutes.arbutus.arcaded.arcades.arcadia.arcanum.archaea.archaic.archean.archers.archery.archfoe.archils.archine.arching.archive.archons.archway.arcking.arcsine.arctics.arcuate.arcuses.ardency.ardours.arduous.areally.areaway.arenite.arenose.arenous.areolae.areolar.areolas.areoles.argalas.argalis.argents.argling.argotic.arguers.arguing.arguses.argyles.argylls.aridest.aridity.arietta.ariette.ariosos.arising.aristae.aristas.aristos.arkoses.arkosic.armadas.armband.armfuls.armhole.armiger.armilla.armings.armless.armlets.armlike.armload.armlock.armoire.armored.armorer.armours.armoury.armpits.armrest.armsful.armures.arnatto.arnicas.arnotto.aroints.arousal.aroused.arouser.arouses.aroynts.arpents.arracks.arraign.arrange.arrased.arrases.arrayal.arrayed.arrayer.arrears.arrests.arrises.arrival.arrived.arriver.arrives.arrobas.arrowed.arroyos.arsenal.arsenic.arshins.arsines.article.artiest.artisan.artiste.artists.artless.artsier.artwork.arugola.arugula.aruspex.asarums.ascared.ascarid.ascaris.ascends.ascents.asceses.ascesis.ascetic.ascidia.ascites.ascitic.ascribe.asepses.asepsis.aseptic.asexual.ashamed.ashcake.ashcans.ashfall.ashiest.ashlars.ashlers.ashless.ashrams.ashtray.asinine.askance.askeses.askesis.askings.asocial.aspects.asperse.asphalt.asphyxy.aspired.aspirer.aspires.aspirin.aspises.asquint.asramas.assagai.assails.assault.assayed.assayer.assegai.assents.asserts.assigns.assists.assizes.asslike.assoils.assorts.assuage.assumed.assumer.assumes.assured.assurer.assures.assuror.asswage.astasia.astatic.asteria.astheny.asthmas.astilbe.astound.astrals.astrict.astride.astylar.asunder.asylums.atabals.atactic.ataghan.atalaya.atamans.ataraxy.atavism.atavist.ataxias.ataxics.ataxies.atelier.atemoya.atheism.atheist.athirst.athlete.athodyd.athwart.atingle.atlases.atlatls.atomics.atomies.atomise.atomism.atomist.atomize.atoners.atonias.atonics.atonies.atoning.atopies.atresia.atresic.atretic.atriums.atrophy.atropin.attaboy.attache.attacks.attains.attaint.attempt.attends.attests.attired.attires.attorns.attract.attrite.attrits.attuned.attunes.aubades.auberge.auburns.auction.aucubas.audible.audibly.audient.audiles.audings.audited.auditee.auditor.augends.augites.augitic.augment.augural.augured.augurer.auklets.auldest.aunties.aurally.aurated.aureate.aureola.aureole.auricle.aurists.aurochs.aurorae.auroral.auroras.ausform.auspice.austere.austral.ausubos.autarch.autarky.auteurs.authors.autisms.autists.autobus.autoing.automan.automat.automen.autonym.autopen.autopsy.autumns.auxeses.auxesis.auxetic.auxinic.availed.avarice.avatars.avellan.avenged.avenger.avenges.avenses.avenues.average.averred.averted.averter.avgases.aviated.aviates.aviatic.aviator.avidins.avidity.avionic.avocado.avocets.avodire.avoided.avoider.avosets.avowals.avowers.avowing.avulsed.avulses.awaited.awaiter.awakens.awaking.awarded.awardee.awarder.aweless.awesome.awfully.awkward.awlwort.awnings.awnless.axially.axillae.axillar.axillas.axolotl.axoneme.axseeds.azaleas.azimuth.azotise.azotize.azulejo.azurite.azygous.baalism.baaskap.babassu.babbitt.babbled.babbler.babbles.babesia.babiche.babiest.babools.baboons.babying.babyish.babysat.babysit.bacalao.baccara.baccate.bacchic.bacchii.baching.bacilli.backbit.backers.backfit.backhoe.backing.backlit.backlog.backout.backsaw.backset.backups.baculum.baddest.baddies.badgers.badging.badland.badness.baffies.baffing.baffled.baffler.baffles.bagasse.bagfuls.baggage.baggers.baggier.baggies.baggily.bagging.baglike.bagnios.bagpipe.bagsful.baguets.bagwigs.bagworm.bahadur.bailees.bailers.baileys.bailies.bailiff.bailing.bailors.bailout.bairnly.baiters.baiting.bakings.baklava.baklawa.balance.balases.balatas.balboas.balcony.baldest.baldies.balding.baldish.baldric.baleens.baleful.balkers.balkier.balkily.balking.ballade.ballads.ballast.ballers.ballets.ballies.balling.ballons.balloon.ballots.ballute.balmier.balmily.balneal.baloney.balsams.bambini.bambino.bamboos.bamming.banally.bananas.bandage.bandaid.bandana.bandbox.bandeau.banders.bandied.bandies.banding.bandito.bandits.bandogs.bandora.bandore.bandsaw.baneful.bangers.banging.bangkok.bangles.banians.banjoes.bankers.banking.bankits.banksia.banners.bannets.banning.bannock.banquet.banshee.banshie.bantams.banteng.banters.banties.banyans.banzais.baobabs.baptise.baptism.baptist.baptize.barbate.barbell.barbels.barbers.barbets.barbies.barbing.barbule.barbuts.barchan.barding.barefit.bareges.barfing.bargain.bargees.barging.barhops.barilla.barista.barites.bariums.barkeep.barkers.barkier.barking.barless.barleys.barlows.barmaid.barmier.barneys.barnier.barning.baronet.barongs.baronne.baroque.barques.barrack.barrage.barrels.barrens.barrets.barrier.barring.barrios.barroom.barrows.bartend.barters.barware.baryons.barytas.barytes.barytic.baryton.basally.basalts.bascule.baseman.basemen.basenji.bashaws.bashers.bashful.bashing.bashlyk.basidia.basilar.basilic.basinal.basined.basinet.basions.baskets.basking.basmati.basques.bassets.bassett.bassist.bassoon.basters.bastile.basting.bastion.batboys.batched.batcher.batches.bateaux.batfish.batfowl.batgirl.bathers.bathing.bathmat.bathtub.bathyal.batiked.batiste.batlike.batsman.batsmen.batteau.battens.batters.battery.battier.battiks.batting.battled.battler.battles.battues.batwing.baubees.baubles.baulked.bausond.bauxite.bawbees.bawcock.bawdier.bawdies.bawdily.bawdric.bawlers.bawling.bawsunt.bawties.bayamos.bayards.bayonet.baywood.bazaars.bazooka.bazooms.beached.beaches.beacons.beaders.beadier.beadily.beading.beadles.beadman.beadmen.beagles.beakers.beakier.beamier.beamily.beaming.beamish.beanbag.beanery.beanies.beaning.bearcat.bearded.bearers.bearhug.bearing.bearish.beastie.beastly.beaters.beatify.beating.beatnik.beauish.beavers.bebeeru.beblood.becalms.because.bechalk.becharm.beckets.becking.beckons.beclasp.becloak.beclogs.becloud.beclown.becomes.becrawl.becrime.becrowd.becrust.becurse.becurst.bedamns.bedaubs.bedbugs.bedders.bedding.bedecks.bedells.bedeman.bedemen.bedevil.bedewed.bedfast.bedgown.bedight.bedirty.bedizen.bedlamp.bedlams.bedless.bedlike.bedmate.bedouin.bedpans.bedpost.bedrail.bedrape.bedrock.bedroll.bedroom.bedrugs.bedside.bedsits.bedsore.bedtick.bedtime.beduins.bedumbs.bedunce.bedward.bedwarf.beebees.beechen.beeches.beedies.beefalo.beefier.beefily.beefing.beehive.beelike.beeline.beepers.beeping.beerier.beeswax.beetled.beetler.beetles.beeyard.beezers.befalls.beflags.befleas.befleck.befools.befouls.befrets.begalls.begazed.begazes.beggars.beggary.begging.begirds.beglads.begloom.begonia.begorah.begorra.begrime.begrims.begroan.beguile.beguine.begulfs.behaved.behaver.behaves.beheads.behests.behinds.beholds.behoove.behoved.behoves.behowls.beignes.beignet.bejesus.bejewel.beknots.belabor.belaced.belated.belauds.belayed.belayer.belched.belcher.belches.beldame.beldams.beleaps.beleapt.beliefs.beliers.believe.bellboy.belleek.bellhop.bellied.bellies.belling.bellman.bellmen.bellows.belongs.beloved.belters.belting.beltway.belugas.belying.bemadam.bemeans.bemired.bemires.bemists.bemixed.bemixes.bemoans.bemocks.bemused.bemuses.benamed.benames.benched.bencher.benches.bendays.bendees.benders.bendier.bending.beneath.benefic.benefit.benempt.benison.bennets.bennies.benomyl.benthal.benthic.benthon.benthos.benumbs.benzene.benzine.benzins.benzoic.benzoin.benzole.benzols.benzoyl.benzyls.bepaint.bequest.beraked.berakes.berated.berates.bereave.beretta.bergere.berhyme.berimed.berimes.berline.berlins.berming.berobed.berried.berries.berseem.berserk.berthas.berthed.bescour.beseech.beseems.beshame.beshout.beshrew.besides.besiege.beslime.besmear.besmile.besmoke.besmuts.besnows.bespake.bespeak.bespoke.bestead.besting.bestirs.bestows.bestrew.bestrid.bestrow.bestuds.beswarm.betaine.betaken.betakes.betaxed.bethank.bethels.bethink.bethorn.bethump.betided.betides.betimes.betises.betoken.betrays.betroth.betters.betting.bettors.between.betwixt.beveled.beveler.bevomit.bewails.bewared.bewares.beweary.beweeps.bewitch.beworms.beworry.bewraps.bewrapt.bewrays.beylics.beyliks.beyonds.bezants.bezique.bezoars.bezzant.bhaktas.bhaktis.bhangra.bharals.bheesty.bhistie.bialies.biasing.biassed.biasses.biaxial.bibasic.bibbers.bibbery.bibbing.bibcock.bibelot.bibless.biblike.biblist.bicarbs.bickers.bicolor.bicorne.bicorns.bicrons.bicycle.bidarka.bidders.biddies.bidding.bielded.biennia.bifaces.biffies.biffing.biffins.bifidly.bifilar.bifocal.bigeyes.bigfeet.bigfoot.biggest.biggety.biggies.bigging.biggins.biggish.biggity.bighead.bighorn.bighted.bigness.bigoses.bigoted.bigotry.bigtime.bigwigs.bikeway.bikinis.bilayer.bilbies.bilboas.bilboes.bilevel.bilgier.bilging.biliary.bilious.bilkers.bilking.billbug.billers.billets.billies.billing.billion.billons.billows.billowy.bilobed.bilsted.biltong.bimboes.bimetal.bimodal.bimorph.binders.bindery.binding.bindles.bingers.binging.bingoes.binning.binocle.biochip.biocide.biofilm.biofuel.biogens.biogeny.bioherm.biology.biomass.bionics.bionomy.biontic.biopics.biopsic.bioptic.biotech.biotics.biotins.biotite.biotope.biotron.biotype.bipacks.biparty.bipedal.biplane.bipolar.birched.birchen.birches.birddog.birders.birdied.birdies.birding.birdman.birdmen.biremes.biretta.biriani.birkies.birlers.birling.birring.birthed.biryani.biscuit.bisects.bishops.bismuth.bisnaga.bisques.bistate.bisters.bistort.bistred.bistres.bistros.bitable.bitched.bitchen.bitmaps.bitsier.bittern.bitters.bittier.bitting.bittock.bitumen.bivalve.bivinyl.bivouac.bizarre.bizarro.biznaga.bizonal.bizones.blabbed.blabber.blacked.blacken.blacker.blackly.bladder.bladers.blading.blamers.blaming.blander.blandly.blanked.blanker.blanket.blankly.blaring.blarney.blasted.blaster.blastie.blatant.blather.blatted.blatter.blaubok.blawing.blazers.blazing.blazons.bleaker.bleakly.bleared.bleated.bleater.bleeder.bleeped.bleeper.blellum.blemish.blended.blender.blendes.blesbok.blessed.blesser.blesses.blether.blights.blighty.blinded.blinder.blindly.blinked.blinker.blintze.blipped.blissed.blisses.blister.blither.blitzed.blitzer.blitzes.bloated.bloater.blobbed.blocked.blocker.blogger.blonder.blondes.blooded.bloomed.bloomer.blooped.blooper.blossom.blotchy.blotted.blotter.bloused.blouses.blouson.blowbys.blowers.blowfly.blowgun.blowier.blowing.blowoff.blowout.blowsed.blowups.blowzed.blubbed.blubber.blucher.bludged.bludger.bludges.bluecap.bluefin.bluegum.blueing.blueish.bluejay.bluffed.bluffer.bluffly.bluings.bluming.blunder.blunged.blunger.blunges.blunted.blunter.bluntly.blurbed.blurred.blurted.blurter.blushed.blusher.blushes.bluster.boarded.boarder.boarish.boasted.boaster.boatels.boaters.boatful.boating.boatman.boatmen.bobbers.bobbery.bobbies.bobbing.bobbins.bobbled.bobbles.bobcats.bobeche.bobsled.bobstay.bobtail.boccias.boccies.bodegas.bodhran.bodices.bodings.bodkins.bodying.boffing.boffins.boffola.bogarts.bogbean.bogeyed.boggier.bogging.boggish.boggled.boggler.boggles.bogusly.bogwood.bogyism.bogyman.bogymen.bohemia.bohrium.bohunks.boilers.boiling.boiloff.boinked.bolases.boldest.boleros.boletes.boletus.bolides.bolivar.bolivia.bollard.bolling.bologna.boloney.bolshie.bolsons.bolster.bolters.bolting.boluses.bombard.bombast.bombers.bombing.bomblet.bonacis.bonanza.bonbons.bondage.bonders.bonding.bondman.bondmen.bonducs.boneset.boneyer.bonfire.bonging.bongoes.boniato.boniest.bonitas.bonitos.bonkers.bonking.bonnets.bonnier.bonnily.bonnock.bonobos.bonuses.boobies.boobing.boobird.boobish.booboos.boocoos.boodies.boodled.boodler.boodles.boogers.boogeys.boogied.boogies.boohoos.boojums.bookend.bookers.bookful.bookies.booking.bookish.booklet.bookman.bookmen.bookoos.boombox.boomers.boomier.booming.boomkin.boomlet.boonies.boorish.boosted.booster.bootees.bootery.booties.booting.bootleg.boozers.boozier.boozily.boozing.bopeeps.boppers.bopping.boraces.boracic.borages.boranes.borated.borates.boraxes.bordels.borders.bordure.boredom.boreens.borides.borings.borking.borneol.bornite.boronic.borough.borrows.borscht.borshts.borstal.bortzes.borzois.boscage.boshbok.boskage.boskets.boskier.bosomed.bosonic.bosques.bosquet.bossdom.bossier.bossies.bossily.bossing.bossism.bostons.botanic.botched.botcher.botches.bothers.bothies.bothria.botonee.bottled.bottler.bottles.bottoms.botulin.boubous.bouchee.boucles.boudins.boudoir.bouffes.boughed.bougies.boulder.boulles.bounced.bouncer.bounces.bounded.bounden.bounder.bouquet.bourbon.bourdon.bournes.bourree.bourses.boursin.bousing.boutons.bouvier.bovines.boweled.bowered.bowfins.bowhead.bowings.bowknot.bowlder.bowlegs.bowlers.bowless.bowlful.bowlike.bowline.bowling.bowpots.bowshot.bowsing.bowties.bowwows.bowyers.boxball.boxcars.boxfish.boxfuls.boxhaul.boxiest.boxings.boxlike.boxwood.boyards.boychik.boycott.boyhood.brabble.bracero.bracers.braches.brachet.brachia.bracing.bracken.bracket.bracted.bradawl.bradded.bradoon.bragged.bragger.brahmas.braided.braider.brailed.braille.brained.braised.braises.braizes.brakier.braking.braless.bramble.brambly.branchy.branded.brander.branned.branner.brasher.brashes.brashly.brasier.brasils.brassed.brasses.brassie.brattle.bravado.bravely.bravers.bravery.bravest.braving.bravoed.bravoes.bravura.bravure.brawest.brawled.brawler.brawlie.braxies.brayers.braying.brazens.brazers.brazier.brazils.brazing.breaded.breadth.breaker.breakup.breamed.breathe.breaths.breathy.breccia.brecham.brechan.breeder.breezed.breezes.brevets.brevier.brevity.brewage.brewers.brewery.brewing.brewpub.brewski.briards.bribees.bribers.bribery.bribing.bricked.brickle.bricole.bridals.bridged.bridges.bridled.bridler.bridles.bridoon.briefed.briefer.briefly.brigade.brigand.brights.brillos.brimful.brimmed.brimmer.brinded.brindle.briners.bringer.brinier.brinies.brining.brinish.brioche.briquet.brisant.brisked.brisker.brisket.briskly.brisses.bristle.bristly.bristol.britska.brittle.brittly.britzka.broadax.broaden.broader.broadly.brocade.brocket.brocoli.brogans.brogues.broider.broiled.broiler.brokage.brokers.broking.bromals.bromate.bromide.bromids.bromine.bromins.bromism.bromize.bronchi.broncho.broncos.bronzed.bronzer.bronzes.brooded.brooder.brooked.brookie.broomed.brothel.brother.brought.browned.browner.brownie.browsed.browser.browses.brucine.brucins.bruised.bruiser.bruises.bruited.bruiter.brulots.brulyie.brulzie.brumous.brunets.brushed.brusher.brushes.brushup.brusker.brusque.brutely.brutify.bruting.brutish.brutism.bruxing.bruxism.bubales.bubalis.bubbies.bubbled.bubbler.bubbles.bubinga.bubonic.buckeen.buckers.buckets.buckeye.bucking.buckish.buckled.buckler.buckles.buckoes.buckram.buckras.bucksaw.bucolic.budders.buddhas.buddied.buddies.budding.buddles.budgers.budgets.budgies.budging.budless.budlike.budworm.buffalo.buffers.buffest.buffets.buffier.buffing.buffoon.bugaboo.bugbane.bugbear.bugeyes.buggers.buggery.buggier.buggies.bugging.buglers.bugling.bugloss.bugouts.bugseed.bugshas.builded.builder.buildup.buirdly.bulbels.bulbils.bulblet.bulbous.bulbuls.bulgers.bulghur.bulgier.bulging.bulgurs.bulimia.bulimic.bulkage.bulkier.bulkily.bulking.bullace.bullate.bullbat.bulldog.bullets.bullied.bullier.bullies.bulling.bullion.bullish.bullock.bullous.bullpen.bulrush.bulwark.bumbled.bumbler.bumbles.bumboat.bumelia.bumkins.bummalo.bummers.bummest.bumming.bumpers.bumpier.bumpily.bumping.bumpkin.bunched.bunches.buncoed.bundist.bundled.bundler.bundles.bungees.bunging.bungled.bungler.bungles.bunions.bunkers.bunking.bunkoed.bunkums.bunnies.bunraku.bunters.bunting.buoyage.buoyant.buoying.buppies.buqshas.burbled.burbler.burbles.burbots.burdens.burdies.burdock.bureaus.bureaux.burette.burgage.burgees.burgeon.burgers.burgess.burghal.burgher.burglar.burgled.burgles.burgoos.burgout.burials.buriers.burkers.burking.burkite.burlaps.burlers.burlesk.burleys.burlier.burlily.burling.burners.burnets.burnies.burning.burnish.burnous.burnout.burping.burrers.burrier.burring.burrito.burrows.bursars.bursary.bursate.burseed.bursera.bursted.burster.burthen.burtons.burweed.burying.busbars.busbies.busboys.busgirl.bushels.bushers.bushido.bushier.bushily.bushing.bushman.bushmen.bushpig.bushtit.bushwah.bushwas.busiest.busings.buskers.busking.buskins.busload.bussing.bustard.busters.bustics.bustier.busting.bustled.bustler.bustles.busying.butanes.butanol.butcher.butches.butenes.butlers.butlery.butling.buttals.butters.buttery.butties.butting.buttock.buttons.buttony.butyral.butyric.butyrin.butyryl.buxomer.buxomly.buyable.buyback.buyoffs.buyouts.buzukia.buzukis.buzzard.buzzcut.buzzers.buzzing.buzzwig.bycatch.byelaws.bygones.bylined.byliner.bylines.bynames.bypaths.byplays.byrling.byrnies.byroads.bytalks.bywords.byworks.byzants.cabalas.cabanas.cabaret.cabbage.cabbagy.cabbala.cabbies.cabbing.cabezon.cabildo.cabined.cabinet.cablers.cablets.cabling.cabomba.caboose.cachets.cachexy.caching.cachous.cacique.cackled.cackler.cackles.cacodyl.caconym.cactoid.cadaver.caddice.caddied.caddies.caddish.cadelle.cadence.cadency.cadenza.cadgers.cadging.cadmium.caducei.caeomas.caesars.caesium.caestus.caesura.caffein.caftans.cageful.cagiest.cahiers.cahoots.caimans.caiques.cairned.caisson.caitiff.cajaput.cajeput.cajoled.cajoler.cajoles.cajones.cajuput.cakiest.calamar.calamus.calando.calathi.calcars.calcify.calcine.calcite.calcium.calculi.caldera.caldron.caleche.calends.calesas.caliber.calibre.calices.caliche.calicle.calicos.calipee.caliper.caliphs.calkers.calking.calkins.callans.callant.callboy.callees.callers.callets.calling.callose.callous.calmest.calming.calomel.caloric.calorie.calotte.caloyer.calpack.calpacs.calpain.calqued.calques.caltrap.caltrop.calumet.calumny.calvary.calving.calyces.calycle.calypso.calyxes.calzone.camails.camases.cambers.cambial.cambism.cambist.cambium.cambric.camelia.camelid.cameoed.camerae.cameral.cameras.camions.camisas.camises.camisia.camlets.cammies.camorra.campers.camphol.camphor.campier.campily.camping.campion.campong.campout.canakin.canaled.canapes.canards.canasta.cancans.cancels.cancers.canchas.candela.candent.candida.candids.candied.candies.candled.candler.candles.candors.candour.canella.canfuls.cangues.canikin.canines.cankers.cannels.canners.cannery.cannier.cannily.canning.cannoli.cannons.cannula.canoers.canolas.canonic.canonry.canopic.cansful.cantala.cantals.cantata.cantdog.canteen.canters.canthal.canthus.cantina.canting.cantles.cantons.cantors.cantrap.cantrip.canulae.canular.canulas.canvass.canyons.canzona.canzone.canzoni.capable.capably.capelan.capelet.capelin.capered.caperer.capfuls.capital.capitol.capizes.capless.caplets.caplins.caporal.capotes.capouch.cappers.capping.caprice.caprine.caprock.capsids.capsize.capstan.capsule.captain.captans.caption.captive.captors.capture.capuche.carabao.carabid.carabin.caracal.caracks.caracol.caracul.carafes.caramba.caramel.carapax.carates.caravan.caravel.caraway.carbarn.carbide.carbine.carbons.carbora.carboys.carcase.carcass.carcels.carders.cardiac.cardiae.cardias.carding.cardons.cardoon.careens.careers.careful.carfare.carfuls.cargoes.carhops.caribes.caribou.carices.carinae.carinal.carinas.carioca.cariole.carious.caritas.carjack.carking.carless.carline.carling.carlins.carlish.carload.carmine.carnage.carnets.carneys.carnies.carnify.caroach.caroche.caroled.caroler.carolus.caromed.carotid.carotin.carouse.carpale.carpals.carpels.carpers.carpets.carping.carpool.carport.carrack.carrell.carrels.carried.carrier.carries.carrion.carroch.carroms.carrots.carroty.carryon.carsick.cartage.cartels.carters.carting.cartons.cartoon.carvels.carvers.carving.carwash.casabas.casavas.casbahs.cascade.cascara.casease.caseate.caseins.caseose.caseous.caserne.caserns.casette.cashaws.cashbox.cashews.cashier.cashing.cashoos.casings.casinos.casitas.caskets.casking.casqued.casques.cassaba.cassata.cassava.cassena.cassene.cassias.cassina.cassine.cassino.cassock.casters.casting.castled.castles.castoff.castors.casuals.casuist.catalog.catalos.catalpa.catarrh.catawba.catbird.catboat.catcall.catcher.catches.catchup.catclaw.catechu.catenae.catenas.cateran.catered.caterer.catface.catfall.catfish.catguts.cathead.cathect.cathode.cations.catjang.catkins.catlike.catling.catlins.catmint.catnaps.catnips.catspaw.catsuit.catsups.cattail.cattalo.cattery.cattier.catties.cattily.catting.cattish.catwalk.caudate.caudles.cauline.caulked.caulker.causals.causers.causeys.causing.caustic.cautery.caution.cavalla.cavally.cavalry.caveats.caveman.cavemen.caverns.cavetti.cavetto.caviare.caviars.caviled.caviler.cavings.cavorts.cayenne.caymans.cayuses.cazique.ceasing.ceboids.cecally.cedilla.cedulas.ceilers.ceilidh.ceiling.celadon.celesta.celeste.celiacs.cellars.celling.cellist.cellule.celosia.celotex.cembali.cembalo.cementa.cements.cenacle.cenotes.censers.censing.censors.censual.censure.centals.centare.centaur.centavo.centers.centile.centime.centimo.centner.central.centred.centres.centric.centrum.centums.century.cepheid.ceramal.ceramic.cerated.cerates.ceratin.cereals.cerebra.ceriphs.cerises.cerites.ceriums.cermets.cerotic.certain.certify.cerumen.ceruses.cerveza.cervine.cesiums.cessing.cession.cesspit.cestode.cestoid.cesurae.cesuras.cetanes.ceviche.chablis.chabouk.chabuks.chachka.chacmas.chadars.chadors.chaebol.chaetae.chaetal.chafers.chaffed.chaffer.chafing.chagrin.chained.chaines.chaired.chaises.chakras.chalahs.chalaza.chalcid.chalehs.chalets.chalice.chalked.challah.challas.challie.challis.challot.chalone.chaloth.chalupa.chalutz.chamade.chamber.chamfer.chamisa.chamise.chamiso.chamois.chamoix.champac.champak.champed.champer.chanced.chancel.chancer.chances.chancre.changed.changer.changes.channel.chanoyu.chanson.chanted.chanter.chantey.chantor.chantry.chaoses.chaotic.chapati.chapeau.chapels.chaplet.chapman.chapmen.chapped.chappie.chapter.charade.charged.charger.charges.charier.charily.charing.chariot.charism.charity.charkas.charked.charkha.charley.charlie.charmed.charmer.charnel.charpai.charpoy.charqui.charred.charros.charted.charter.chasers.chasing.chasmal.chasmed.chasmic.chassed.chasses.chassis.chasten.chaster.chateau.chatted.chattel.chatter.chaufer.chaunts.chawers.chawing.chayote.chazans.chazzan.chazzen.cheapen.cheaper.cheapie.cheaply.cheapos.cheated.cheater.chebecs.checked.checker.checkup.cheddar.cheders.chedite.cheeked.cheeped.cheeper.cheered.cheerer.cheerio.cheerly.cheeros.cheesed.cheeses.cheetah.chefdom.cheffed.chefing.chegoes.chelate.cheloid.chemics.chemise.chemism.chemist.chequer.cheques.cherish.cheroot.cherubs.chervil.chesses.chested.chetahs.chetrum.chevied.chevies.cheviot.chevres.chevret.chevron.chewers.chewier.chewing.chewink.chianti.chiasma.chiasmi.chiasms.chibouk.chicane.chicano.chicest.chichis.chickee.chicken.chicles.chicory.chidden.chiders.chiding.chiefer.chiefly.chields.chiffon.chigger.chignon.chigoes.childes.childly.chiliad.chilies.chilled.chiller.chillis.chillum.chimars.chimbly.chimera.chimere.chimers.chiming.chimlas.chimley.chimney.chinchy.chining.chinked.chinned.chinone.chinook.chintzy.chinwag.chipped.chipper.chippie.chirked.chirker.chirmed.chirped.chirper.chirred.chirren.chirres.chirrup.chisels.chitins.chitlin.chitons.chitter.chivari.chivied.chivies.chlamys.chloral.chloric.chlorid.chlorin.choanae.chocked.choicer.choices.choired.chokers.chokier.choking.cholate.cholent.cholera.cholers.choline.chollas.chomped.chomper.chooser.chooses.choosey.chopine.chopins.chopped.chopper.choragi.chorale.chorals.chordal.chorded.choreal.choreas.choregi.choreic.chorial.chorine.choring.chorion.chorizo.choroid.chorten.chortle.choughs.choused.chouser.chouses.chowder.chowing.chowsed.chowses.chrisma.chrisms.chrisom.christy.chromas.chromed.chromes.chromic.chromos.chromyl.chronic.chronon.chucked.chuckle.chuddah.chuddar.chudder.chuffed.chuffer.chugged.chugger.chukars.chukkar.chukkas.chukker.chummed.chumped.chunked.chunnel.chunter.chuppah.chuppas.churchy.churned.churner.churred.churros.chuting.chutist.chutnee.chutney.chutzpa.chylous.chymics.chymist.chymous.chytrid.ciboria.ciboule.cicadae.cicadas.cicalas.ciceros.cichlid.cicoree.cigaret.ciliary.ciliate.cilices.cimices.cinched.cinches.cinders.cindery.cineast.cinemas.cineole.cineols.cinerin.cingula.cinques.ciphers.ciphony.cipolin.circled.circler.circles.circlet.circuit.circusy.cirques.cirrate.cirrose.cirrous.cirsoid.ciscoes.cissies.cissoid.cistern.cistron.citable.citadel.citator.cithara.cithern.cithers.cithren.citizen.citolas.citoles.citrals.citrate.citrine.citrins.citrons.citrous.citrusy.cittern.civilly.civisms.civvies.clabber.clachan.clacked.clacker.cladded.cladism.cladist.cladode.clagged.claimed.claimer.clamant.clamber.clammed.clammer.clamors.clamour.clamped.clamper.clanged.clanger.clangor.clanked.clapped.clapper.claquer.claques.clarets.claries.clarify.clarion.clarity.clarkia.claroes.clashed.clasher.clashes.clasped.clasper.classed.classer.classes.classic.classis.classon.clastic.clatter.claucht.claught.clausal.clauses.clavate.clavers.clavier.clawers.clawing.claxons.clayier.claying.clayish.claypan.cleaned.cleaner.cleanly.cleanse.cleanup.cleared.clearer.clearly.cleated.cleaved.cleaver.cleaves.cleeked.clefted.clement.cleomes.cleping.clerics.clerids.clerisy.clerked.clerkly.clewing.cliched.cliches.clicked.clicker.clients.climate.climbed.climber.clinged.clinger.clinics.clinked.clinker.clipped.clipper.cliqued.cliques.cliquey.clitics.clivers.clivias.cloacae.cloacal.cloacas.cloaked.clobber.cloches.clocked.clocker.clogged.clogger.clomped.cloners.cloning.clonism.clonked.clopped.cloques.closely.closers.closest.closets.closeup.closing.closure.clothed.clothes.clotted.cloture.clouded.cloughs.cloured.clouted.clouter.clovers.clovery.clowder.clowned.cloying.clubbed.clubber.clubman.clubmen.clucked.clueing.clumber.clumped.clunked.clunker.clupeid.cluster.clutchy.clutter.clypeal.clypeus.clyster.coached.coacher.coaches.coacted.coactor.coadmit.coaeval.coagent.coagula.coalbin.coalbox.coalers.coalier.coalify.coaling.coalpit.coaming.coannex.coapted.coarsen.coarser.coastal.coasted.coaster.coatees.coaters.coating.coaxers.coaxial.coaxing.cobalts.cobbers.cobbier.cobbled.cobbler.cobbles.cobnuts.cobwebs.cocaine.cocains.coccids.coccoid.coccous.cochair.cochins.cochlea.cockade.cockers.cockeye.cockier.cockily.cocking.cockish.cockled.cockles.cockney.cockpit.cockshy.cockups.cocomat.coconut.cocoons.cocotte.cocoyam.codable.codders.codding.coddled.coddler.coddles.codeias.codeina.codeine.codeins.codfish.codgers.codices.codicil.codling.codlins.codrive.codrove.coedits.coeliac.coelome.coeloms.coempts.coenact.coenure.coenuri.coequal.coerced.coercer.coerces.coerect.coesite.coevals.coexert.coexist.coffees.coffers.coffing.coffins.coffled.coffles.coffret.cofound.cogency.cogging.cogitos.cognacs.cognate.cognise.cognize.cogways.cohabit.coheads.coheirs.cohered.coherer.coheres.cohorts.cohosts.cohunes.coiffed.coiffes.coifing.coigned.coignes.coilers.coiling.coinage.coiners.coinfer.coining.cointer.coition.cojoins.cojones.coldest.coldish.coleads.colicin.colicky.colitic.colitis.collage.collard.collars.collate.collect.colleen.college.collets.collide.collied.collier.collies.collins.colloid.collops.collude.colobus.cologne.colonel.colones.colonic.colonus.colored.colorer.colossi.colours.colters.coltish.colugos.columel.columns.colures.comaker.comakes.comates.comatic.comatik.combats.combers.combine.combing.combust.comedic.comedos.cometic.comfier.comfits.comfort.comfrey.comical.comings.comitia.command.commata.commend.comment.commies.commits.commixt.commode.commons.commove.commune.commute.compact.company.compare.compart.compass.compeer.compels.compend.compere.compete.compile.comping.complex.complin.complot.compone.compony.comport.compose.compost.compote.compted.compute.comrade.comsymp.conatus.concave.conceal.concede.conceit.concent.concept.concern.concert.conchae.conchal.conchas.conches.conchie.conchos.concise.concoct.concord.concurs.concuss.condemn.condign.condoes.condole.condoms.condone.condors.conduce.conduct.conduit.condyle.confabs.confect.confers.confess.confide.confine.confirm.confits.conflux.conform.confuse.confute.congaed.congeal.congeed.congees.congers.congest.congius.congoes.congous.conical.conidia.conifer.coniine.conines.coniums.conjoin.conjure.conkers.conking.connate.connect.conners.conning.connive.connote.conoids.conquer.consent.consign.consist.console.consols.consort.consuls.consult.consume.contact.contain.contemn.contend.content.contest.context.contort.contour.contras.control.contuse.convect.convene.convent.convert.conveys.convict.convoke.convoys.cooches.cooeyed.cookers.cookery.cookeys.cookies.cooking.cookoff.cookout.cooktop.coolant.coolers.coolest.coolies.cooling.coolish.coolths.coombes.cooncan.coontie.coopers.coopery.cooping.coopted.cooters.cooties.copaiba.copalms.copecks.copepod.copiers.copihue.copilot.copings.copious.coplots.copouts.coppers.coppery.coppice.copping.coppras.coprahs.copters.copulae.copular.copulas.copyboy.copycat.copying.copyist.coquets.coquina.coquito.coracle.coranto.corbans.corbeil.corbels.corbies.corbina.cordage.cordate.corders.cordial.cording.cordite.cordoba.cordons.coreign.coremia.corkage.corkers.corkier.corking.cormels.cormoid.cormous.corncob.corneal.corneas.cornels.corners.cornets.cornfed.cornice.cornier.cornify.cornily.corning.cornrow.cornual.cornute.cornuto.corolla.coronae.coronal.coronas.coronel.coroner.coronet.corpora.corpses.corrade.corrals.correct.corrida.corries.corrode.corrody.corrupt.corsacs.corsage.corsair.corsets.corslet.cortege.cortina.cortins.coruler.corvees.corvets.corvids.corvina.corvine.corymbs.coryzal.coryzas.coshers.coshing.cosiest.cosigns.cosines.cosmids.cosmism.cosmist.cossack.cossets.costard.costars.costate.costers.costing.costive.costrel.costume.cosying.coteaux.coterie.cothurn.cotidal.cotinga.cottage.cottars.cotters.cottier.cottons.cottony.cotypes.couched.coucher.couches.cougars.coughed.cougher.couldst.coulees.couloir.coulomb.coulter.council.counsel.counted.counter.country.couping.coupled.coupler.couples.couplet.coupons.courage.courant.courier.courlan.coursed.courser.courses.courted.courter.courtly.cousins.couteau.couters.couther.couthie.couture.couvade.covered.coverer.coverts.coverup.coveted.coveter.covings.cowages.cowards.cowbane.cowbell.cowbind.cowbird.cowboys.cowedly.cowered.cowfish.cowflap.cowflop.cowgirl.cowhage.cowhand.cowherb.cowherd.cowhide.cowiest.cowlick.cowling.cowpats.cowpeas.cowpies.cowplop.cowpoke.cowries.cowrite.cowrote.cowshed.cowskin.cowslip.coxalgy.coxcomb.coxitis.coxless.coydogs.coyness.coyotes.coypous.cozened.cozener.coziest.cozying.craaled.crabbed.crabber.cracked.cracker.crackle.crackly.crackup.cradled.cradler.cradles.crafted.crafter.cragged.crambes.crambos.crammed.crammer.cramped.crampit.crampon.cranial.craning.cranium.cranked.cranker.crankle.crankly.crannog.craping.crapola.crapped.crapper.crappie.crashed.crasher.crashes.crasser.crassly.craters.crating.cratons.craunch.cravats.cravens.cravers.craving.crawdad.crawled.crawler.crayons.crazier.crazies.crazily.crazing.creaked.creamed.creamer.creased.creaser.creases.created.creates.creatin.creator.creches.credent.credits.creedal.creeled.creeped.creeper.creepie.creeses.cremate.cremini.crenate.crenels.creoles.creosol.crepier.creping.crepons.cresols.cresses.cresset.crestal.crested.cresyls.cretics.cretins.crevice.crewcut.crewels.crewing.crewman.crewmen.cribbed.cribber.cricked.cricket.crickey.cricoid.crimine.crimini.criminy.crimmer.crimped.crimper.crimple.crimson.cringed.cringer.cringes.cringle.crinite.crinkle.crinkly.crinoid.crinums.criollo.cripple.crisped.crispen.crisper.crisply.crissal.crissum.cristae.critics.critter.crittur.croaked.croaker.crocein.crochet.crocine.crocked.crocket.crofter.crojiks.cronies.cronish.crooked.crooker.crooned.crooner.cropped.cropper.croppie.croquet.croquis.crosier.crossed.crosser.crosses.crossly.crotons.croupes.croutes.crouton.crowbar.crowded.crowder.crowdie.crowers.crowing.crowned.crowner.crownet.crozers.crozier.crucial.crucian.crucify.crudded.crudely.crudest.crudity.crueler.cruelly.cruelty.cruised.cruiser.cruises.cruller.crumbed.crumber.crumble.crumbly.crumbum.crummie.crumped.crumpet.crumple.crumply.crunchy.crunode.crupper.crusade.crusado.crusets.crushed.crusher.crushes.crusily.crustal.crusted.cruzado.crybaby.cryogen.cryonic.cryptal.cryptic.cryptos.crystal.ctenoid.cuatros.cubages.cubbies.cubbish.cubical.cubicle.cubicly.cubisms.cubists.cubital.cubitus.cuboids.cuckold.cuckoos.cudbear.cuddies.cuddled.cuddler.cuddles.cudgels.cudweed.cuestas.cuffing.cuirass.cuishes.cuisine.cuisses.cuittle.culches.culexes.culices.culicid.cullays.cullers.cullets.cullied.cullies.culling.cullion.culming.culotte.culprit.cultish.cultism.cultist.culture.culvers.culvert.cumarin.cumbers.cumbias.cummers.cummins.cumquat.cumshaw.cumulus.cundums.cuneate.cunners.cunning.cupcake.cupeled.cupeler.cupfuls.cuplike.cupolas.cuppers.cuppier.cupping.cuprite.cuprous.cuprums.cupsful.cupulae.cupular.cupules.curable.curably.curacao.curacoa.curaghs.curaras.curares.curaris.curated.curates.curator.curbers.curbing.curches.curcuma.curdier.curding.curdled.curdler.curdles.curette.curfews.curiosa.curious.curites.curiums.curlers.curlews.curlier.curlily.curling.currach.curragh.currans.currant.current.curried.currier.curries.curring.currish.cursers.cursing.cursive.cursors.cursory.curtail.curtain.curtals.curtate.curtest.curtesy.curtsey.curvets.curvier.curving.cushats.cushaws.cushier.cushily.cushion.cuspate.cuspids.cussers.cussing.custard.custody.customs.cutaway.cutback.cutbank.cutches.cutdown.cutesie.cuticle.cutises.cutlass.cutlers.cutlery.cutlets.cutline.cutoffs.cutouts.cutover.cuttage.cutters.cutties.cutting.cuttled.cuttles.cutwork.cutworm.cuvette.cyanate.cyanide.cyanids.cyanine.cyanins.cyanite.cyborgs.cycases.cycasin.cyclase.cyclers.cyclery.cycling.cyclins.cyclist.cyclize.cycloid.cyclone.cyclops.cygnets.cylices.cymatia.cymbals.cymenes.cymling.cymlins.cynical.cyphers.cypress.cyprian.cypsela.cystein.cystine.cystoid.cytosol.czardas.czardom.czarina.czarism.czarist.dabbers.dabbing.dabbled.dabbler.dabbles.dabster.dacites.dackers.dacoits.dacoity.dacrons.dactyli.dactyls.dadaism.dadaist.daddies.daddled.daddles.dadoing.daemons.daffier.daffily.daffing.daftest.daggers.daggled.daggles.daglock.dagobas.dagwood.dahlias.dahoons.daikers.daikons.dailies.daimios.daimons.daimyos.dairies.daisied.daisies.dakoits.dakoity.dalapon.dalasis.daledhs.daleths.dallied.dallier.dallies.daltons.damaged.damager.damages.damasks.damiana.dammars.dammers.damming.damners.damnify.damning.damosel.damozel.dampens.dampers.dampest.damping.dampish.damsels.damsons.danazol.dancers.dancing.danders.dandier.dandies.dandify.dandily.dandled.dandler.dandles.dangers.danging.dangled.dangler.dangles.dankest.danseur.daphnes.daphnia.dapping.dappled.dapples.dapsone.darbars.darbies.dareful.daresay.darings.dariole.darkens.darkest.darkeys.darkies.darking.darkish.darkled.darkles.darling.darnels.darners.darning.darshan.darters.darting.dartled.dartles.dasheen.dashers.dashier.dashiki.dashing.dashpot.dassies.dastard.dasyure.datable.datchas.datedly.datival.datives.daturas.daturic.daubers.daubery.daubier.daubing.daunder.daunted.daunter.dauphin.dauties.dauting.davened.dawdled.dawdler.dawdles.dawning.dawties.dawting.daybeds.daybook.daycare.dayglow.daylily.daylong.daymare.dayroom.dayside.daysman.daysmen.daystar.daytime.daywork.dazedly.dazzled.dazzler.dazzles.deacons.deadens.deadest.deadeye.deadman.deadmen.deadpan.deafens.deafest.deafish.deaired.dealate.dealers.dealing.deanery.deaning.dearest.dearies.dearths.deashed.deashes.deathly.deaving.debacle.debarks.debased.debaser.debases.debated.debater.debates.debauch.debeaks.debeard.debited.deboned.deboner.debones.debouch.debride.debrief.debtors.debunks.debuted.decadal.decades.decagon.decalog.decamps.decanal.decanes.decants.decapod.decares.decayed.decayer.decease.deceits.deceive.decency.decerns.deciare.decibel.decided.decider.decides.decidua.deciles.decimal.deckels.deckers.decking.deckles.declaim.declare.declass.declaws.decline.decocts.decoded.decoder.decodes.decolor.decorum.decoyed.decoyer.decreed.decreer.decrees.decrial.decried.decrier.decries.decrown.decrypt.decuman.decuple.decurve.deduced.deduces.deducts.deedier.deeding.deejays.deeming.deepens.deepest.deerfly.deewans.defaced.defacer.defaces.defamed.defamer.defames.defangs.default.defeats.defects.defence.defends.defense.deffest.defiant.deficit.defiers.defiled.defiler.defiles.defined.definer.defines.deflate.defleas.deflect.defoams.defocus.deforce.deforms.defrags.defraud.defrays.defrock.defrost.deftest.defuels.defunct.defunds.defused.defuser.defuses.defuzed.defuzes.defying.degames.degamis.degases.degauss.degerms.deglaze.degrade.degreed.degrees.degusts.dehisce.dehorns.dehorts.deicers.deicide.deicing.deictic.deified.deifier.deifies.deiform.deigned.deistic.deities.dejecta.dejects.dekares.dekeing.delaine.delated.delates.delator.delayed.delayer.deleads.deleave.deleing.deleted.deletes.delicts.delight.delimed.delimes.delimit.deliria.delists.deliver.dellies.delouse.delphic.deltaic.deltoid.deluded.deluder.deludes.deluged.deluges.delvers.delving.demagog.demands.demarks.demasts.demeans.dements.demerge.demerit.demesne.demeton.demigod.demirep.demised.demises.demoded.demoing.demonic.demoses.demoted.demotes.demotic.demount.demurer.denarii.dendron.dengues.denials.deniers.denimed.denizen.denning.denoted.denotes.densely.densest.densify.density.dentals.dentate.dentils.dentine.denting.dentins.dentist.dentoid.denture.denuded.denuder.denudes.denying.deodand.deodara.deodars.deontic.deorbit.depaint.departs.depends.deperms.depicts.deplane.deplete.deplore.deploys.deplume.deponed.depones.deports.deposal.deposed.deposer.deposes.deposit.deprave.depress.deprive.depside.deputed.deputes.deraign.derails.derange.derated.derates.derbies.derided.derider.derides.derived.deriver.derives.dermoid.dernier.derrick.derries.dervish.desalts.desands.descant.descend.descent.deserts.deserve.desexed.desexes.designs.desired.desirer.desires.desists.deskman.deskmen.desktop.desmans.desmids.desmoid.desorbs.despair.despise.despite.despoil.despond.despots.dessert.destain.destine.destiny.destroy.desugar.details.detains.detects.detente.detents.deterge.detests.deticks.detinue.detours.detoxed.detoxes.detract.detrain.detrude.deucing.deutzia.devalue.deveins.develed.develop.devests.deviant.deviate.devices.deviled.devilry.devious.devisal.devised.devisee.deviser.devises.devisor.devoice.devoirs.devolve.devoted.devotee.devotes.devours.dewater.dewaxed.dewaxes.dewclaw.dewdrop.dewfall.dewiest.dewlaps.dewless.dewools.deworms.dextral.dextran.dextrin.dezincs.dharmas.dharmic.dharnas.dhooras.dhootie.dhootis.dhourra.dhurnas.dhurrie.diabase.diabolo.diacids.diadems.diagram.dialect.dialers.dialing.dialist.dialled.diallel.dialler.dialogs.dialyse.dialyze.diamide.diamine.diamins.diamond.diapers.diapirs.diapsid.diarchy.diaries.diarist.diastem.diaster.diatoms.diatron.diazine.diazins.diazole.dibasic.dibbers.dibbing.dibbled.dibbler.dibbles.dibbuks.dicamba.dicasts.diciest.dickens.dickers.dickeys.dickier.dickies.dicking.dicliny.dicotyl.dictate.dictier.diction.dictums.dicycly.didacts.diddled.diddler.diddles.diddley.dieback.diehard.dieoffs.diesels.diester.dietary.dieters.diether.dieting.differs.diffuse.digamma.digests.diggers.digging.dighted.digital.diglots.dignify.dignity.digoxin.digraph.digress.dikdiks.diktats.dilated.dilater.dilates.dilator.dildoes.dilemma.dillies.diluent.diluted.diluter.dilutes.dilutor.diluvia.dimeric.dimeter.dimmers.dimmest.dimming.dimness.dimorph.dimouts.dimpled.dimples.dimwits.dindled.dindles.dineric.dineros.dinette.dingbat.dingers.dingeys.dingier.dingies.dingily.dinging.dingles.dingoes.dinitro.dinkeys.dinkier.dinkies.dinking.dinkums.dinners.dinning.dinting.diobols.diocese.diopter.dioptre.diorama.diorite.dioxane.dioxans.dioxide.dioxids.dioxins.diphase.diploes.diploic.diploid.diploma.diplont.dipnets.dipnoan.dipodic.dipolar.dipoles.dippers.dippier.dipping.dipshit.diptera.diptyca.diptych.diquats.dirdums.directs.direful.dirhams.dirking.dirling.dirndls.dirtbag.dirtied.dirtier.dirties.dirtily.disable.disarms.disavow.disband.disbars.disbuds.discant.discard.discase.discept.discern.discing.discoed.discoid.discord.discuss.disdain.disease.diseurs.diseuse.disgust.dishelm.dishful.dishier.dishing.dishpan.dishrag.disject.disjoin.disking.dislike.dislimn.dismals.dismast.dismays.dismiss.disobey.disomic.disowns.dispart.dispels.dispend.display.disport.dispose.dispute.disrate.disrobe.disroot.disrupt.dissave.disseat.dissect.dissent.dissert.dissing.distaff.distain.distant.distend.distent.distich.distill.distils.distome.distort.disturb.disused.disuses.disyoke.ditched.ditcher.ditches.dithers.dithery.dithiol.ditsier.dittany.ditties.dittoed.ditzier.diurnal.diurons.diverge.diverse.diverts.divests.divided.divider.divides.divined.diviner.divines.divisor.divorce.divulge.divulse.divvied.divvies.dizened.dizzied.dizzier.dizzies.dizzily.djebels.doating.dobbers.dobbies.dobbins.doblons.dobsons.docents.docetic.dockage.dockers.dockets.docking.doctors.dodders.doddery.dodgems.dodgers.dodgery.dodgier.dodging.dodoism.doeskin.doffers.doffing.dogbane.dogcart.dogdoms.dogears.dogedom.dogface.dogfish.doggers.doggery.doggier.doggies.doggish.doggone.doggrel.doglegs.doglike.dogmata.dognaps.dogsled.dogtrot.dogvane.dogwood.doilies.doleful.dollars.dollied.dollies.dolling.dollish.dollops.dolmans.dolmens.dolours.dolphin.doltish.domaine.domains.domical.domicil.domines.dominie.dominos.donated.donates.donator.dongles.dongola.donjons.donkeys.donnees.donnerd.donnert.donning.donnish.donzels.doobies.doodads.doodies.doodled.doodler.doodles.doodoos.doolees.doolies.doomful.doomier.doomily.dooming.doorman.doormat.doormen.doorway.doowops.doozers.doozies.dopants.dopiest.dopings.dorados.dorbugs.dorhawk.dorkier.dormant.dormers.dormice.dormins.dorneck.dornick.dornock.dorpers.dorsals.dorsels.dorsers.dosages.dossals.dossels.dossers.dossier.dossils.dossing.dotages.dotards.dotiest.dottels.dotters.dottier.dottily.dotting.dottles.dottrel.doubled.doubler.doubles.doublet.doubted.doubter.doucely.douceur.douched.douches.doughty.dourahs.dourest.dourine.dousers.dousing.dovecot.dovekey.dovekie.dovened.dowable.dowager.dowdier.dowdies.dowdily.doweled.dowered.downbow.downers.downier.downing.dowries.dowsers.dowsing.doyenne.doyleys.doylies.dozened.dozenth.doziest.drabbed.drabber.drabbet.drabble.dracena.drachma.drachms.drafted.draftee.drafter.dragees.dragged.dragger.draggle.dragnet.dragons.dragoon.drained.drainer.dramady.dramedy.drammed.drapers.drapery.draping.drastic.dratted.draught.drawbar.drawees.drawers.drawing.drawled.drawler.drayage.draying.drayman.draymen.dreaded.dreamed.dreamer.dredged.dredger.dredges.dreeing.dreidel.dreidls.dressed.dresser.dresses.dribbed.dribble.dribbly.driblet.drifted.drifter.drilled.driller.drinker.dripped.dripper.drivels.drivers.driving.drizzle.drizzly.drogues.drolled.droller.dromond.dromons.droners.drongos.droning.dronish.drooled.drooped.droplet.dropout.dropped.dropper.drosera.droshky.drosses.drought.drouked.drouths.drouthy.drovers.droving.drownds.drowned.drowner.drowsed.drowses.drubbed.drubber.drudged.drudger.drudges.drugged.drugget.druggie.druidic.drumble.drumlin.drummed.drummer.drunken.drunker.dryable.dryades.dryadic.dryland.drylots.dryness.drywall.drywell.dualism.dualist.duality.dualize.dubbers.dubbing.dubbins.dubiety.dubious.dubnium.ducally.duchess.duchies.duckers.duckier.duckies.ducking.duckpin.ductile.ducting.ductule.dudeens.dudgeon.duelers.dueling.duelist.duelled.dueller.duellos.duendes.dueness.duennas.dueting.duetted.duffels.duffers.duffles.dufuses.dugongs.dugouts.duikers.dukedom.dulcets.dulcify.dullard.dullest.dulling.dullish.dulness.dumbest.dumbing.dumdums.dummied.dummies.dumpers.dumpier.dumpily.dumping.dumpish.dunches.duncish.dungeon.dungier.dunging.dunites.dunitic.dunkers.dunking.dunlins.dunnage.dunness.dunnest.dunning.dunnite.dunting.duodena.duologs.duopoly.duotone.dupable.dupping.durable.durably.duramen.durance.durbars.durians.durions.durmast.durning.durries.duskier.duskily.dusking.duskish.dustbin.dusters.dustier.dustily.dusting.dustman.dustmen.dustoff.dustpan.dustrag.dustups.duteous.dutiful.duumvir.duvetyn.dwarfed.dwarfer.dwarves.dwelled.dweller.dwindle.dwining.dyadics.dyarchy.dybbuks.dyeable.dyeings.dyeweed.dyewood.dynamic.dynamos.dynasts.dynasty.dyneins.dynodes.dyspnea.dysuria.dysuric.dyvours.eagerer.eagerly.eaglets.eagling.eanling.earache.earbuds.eardrop.eardrum.earflap.earfuls.earings.earlaps.earldom.earless.earlier.earlobe.earlock.earmark.earmuff.earners.earnest.earning.earplug.earring.earshot.earthed.earthen.earthly.earwigs.earworm.easeful.easeled.easiest.eastern.easters.easting.eatable.eatings.ebonics.ebonies.ebonise.ebonite.ebonize.ecartes.ecbolic.eccrine.ecdyses.ecdysis.ecdyson.echards.echelle.echelon.echidna.echinus.echoers.echoing.echoism.eclairs.eclipse.eclogue.ecocide.ecology.economy.ecotage.ecotone.ecotour.ecotype.ecstasy.ectases.ectasis.ectatic.ecthyma.ectopia.ectopic.ectozoa.ectypal.ectypes.eczemas.edacity.edaphic.eddying.edemata.edgiest.edgings.edibles.edictal.edifice.edified.edifier.edifies.editing.edition.editors.editrix.educate.educing.eductor.eeliest.eellike.eelpout.eelworm.eeriest.effable.effaced.effacer.effaces.effects.effendi.efforts.effulge.effused.effuses.eftsoon.egalite.egested.eggcups.egghead.eggless.eggnogs.egoisms.egoists.egoless.egotism.egotist.eidetic.eidolic.eidolon.eighths.eightvo.eikones.einkorn.eirenic.eiswein.ejected.ejector.ekistic.ekpwele.elapids.elapine.elapsed.elapses.elastic.elastin.elaters.elating.elation.elative.elbowed.elderly.eldress.eldrich.elected.electee.elector.electro.elegant.elegiac.elegies.elegise.elegist.elegits.elegize.element.elenchi.elevate.elevens.elevons.elflike.elflock.elicits.eliding.elision.elitism.elitist.elixirs.ellipse.elmiest.elodeas.eloigns.eloined.eloiner.elopers.eloping.eluants.eluates.eluders.eluding.eluents.elusion.elusive.elusory.eluting.elution.eluvial.eluvium.elysian.elytron.elytrum.emailed.emanant.emanate.embalms.embanks.embargo.embarks.embassy.embayed.emblaze.emblems.embolic.embolus.embosks.embosom.embowed.embowel.embower.embrace.embroil.embrown.embrued.embrues.embrute.embryon.embryos.emended.emender.emerald.emerged.emerges.emeries.emerita.emeriti.emerods.emeroid.emersed.emetics.emetine.emetins.emeutes.emigres.eminent.emirate.emitted.emitter.emodins.emoters.emoting.emotion.emotive.empaled.empaler.empales.empanel.empathy.emperor.empires.empiric.emplace.emplane.employe.employs.emporia.empower.empress.emprise.emprize.emptied.emptier.empties.emptily.emptins.empyema.emulate.emulous.enabled.enabler.enables.enacted.enactor.enamels.enamine.enamors.enamour.enation.encaged.encages.encamps.encased.encases.enchain.enchant.enchase.encinal.encinas.enclasp.enclave.enclose.encoded.encoder.encodes.encomia.encored.encores.encrust.encrypt.encysts.endarch.endears.endemic.endgame.endings.endited.endites.endives.endleaf.endless.endlong.endmost.endnote.endogen.endopod.endorse.endowed.endower.endplay.endrins.enduing.endured.endurer.endures.enduros.endways.endwise.enemata.enemies.energid.enfaced.enfaces.enfeoff.enfever.enflame.enfolds.enforce.enframe.engaged.engager.engages.engilds.engined.engines.engirds.english.engluts.engorge.engraft.engrail.engrain.engrams.engrave.engross.engulfs.enhalos.enhance.enigmas.enisled.enisles.enjoins.enjoyed.enjoyer.enlaced.enlaces.enlarge.enlists.enliven.enneads.ennoble.ennuyee.enolase.enology.enoughs.enounce.enplane.enquire.enquiry.enraged.enrages.enrobed.enrober.enrobes.enrolls.enroots.enserfs.ensigns.ensiled.ensiles.enskied.enskies.enskyed.enslave.ensnare.ensnarl.ensouls.ensuing.ensured.ensurer.ensures.entails.entases.entasia.entasis.entente.enteral.entered.enterer.enteric.enteron.enthral.enthuse.enticed.enticer.entices.entires.entitle.entoils.entombs.entopic.entozoa.entrain.entrant.entraps.entreat.entrees.entries.entropy.entrust.entwine.entwist.enuring.envelop.envenom.enviers.envious.environ.enviros.envying.enwheel.enwinds.enwombs.enwound.enwraps.enzymes.enzymic.eobiont.eoliths.eonisms.eosines.eosinic.eparchs.eparchy.epaulet.epazote.epeeist.epeiric.epergne.ephebes.ephebic.epheboi.ephebos.ephebus.ephedra.ephoral.epiboly.epicarp.epicene.epicure.epiderm.epidote.epigeal.epigean.epigeic.epigene.epigone.epigoni.epigons.epigram.epigyny.epilate.epilogs.epimere.epimers.epinaoi.epinaos.episcia.episode.episome.epistle.epitaph.epitaxy.epithet.epitome.epitope.epizoic.epizoon.epochal.eponyms.eponymy.epopees.epoxide.epoxied.epoxies.epoxyed.epsilon.equable.equably.equaled.equally.equated.equates.equator.equerry.equines.equinox.equites.erasers.erasing.erasion.erasure.erbiums.erected.erecter.erectly.erector.erelong.eremite.eremuri.erepsin.erethic.ergates.ergodic.ergotic.ericoid.eringos.eristic.erlking.ermined.ermines.erodent.eroding.erosely.erosion.erosive.erotica.erotics.erotism.erotize.errable.errancy.errands.errants.erratas.erratic.erratum.errhine.eructed.erudite.erupted.eryngos.escalop.escaped.escapee.escaper.escapes.escarps.eschars.escheat.eschews.escolar.escorts.escoted.escrows.escuage.escudos.eserine.espanol.esparto.espials.espouse.esprits.espying.esquire.essayed.essayer.essence.essoins.estated.estates.esteems.esthete.estival.estrays.estreat.estrins.estriol.estrone.estrous.estrual.estrums.estuary.etagere.etalons.etamine.etamins.etatism.etatist.etchant.etchers.etching.eternal.etesian.ethanes.ethanol.ethenes.etheric.ethical.ethinyl.ethions.ethmoid.ethnics.ethoses.ethoxyl.ethylic.ethynes.ethynyl.etoiles.etymons.eucaine.euchred.euchres.euclase.eucrite.eudemon.eugenia.eugenic.eugenol.euglena.eulogia.eunuchs.eupepsy.euphony.euphroe.euploid.eupneas.eupneic.eupnoea.euripus.euryoky.eustacy.eustasy.eustele.evacuee.evaders.evading.evangel.evanish.evasion.evasive.eveners.evenest.evening.everted.evertor.evicted.evictee.evictor.evident.evilest.eviller.evinced.evinces.eviting.evokers.evoking.evolute.evolved.evolver.evolves.evulsed.evulses.evzones.exabyte.exactas.exacted.exacter.exactly.exactor.exalted.exalter.examens.examine.example.exapted.exarchs.exarchy.exceeds.excepts.excerpt.excided.excides.excimer.exciple.excised.excises.excited.exciter.excites.exciton.excitor.exclaim.exclave.exclude.excreta.excrete.excused.excuser.excuses.execute.exedrae.exegete.exempla.exempts.exergue.exerted.exhaled.exhales.exhaust.exhedra.exhibit.exhorts.exhumed.exhumer.exhumes.exigent.exilers.exilian.exiling.existed.exiting.exocarp.exoderm.exogamy.exogens.exonyms.exordia.exosmic.exotica.exotics.exotism.expands.expanse.expects.expends.expense.experts.expiate.expired.expirer.expires.explain.explant.explode.exploit.explore.exports.exposal.exposed.exposer.exposes.exposit.expound.express.expulse.expunge.exscind.exsects.exserts.extends.extents.externe.externs.extinct.extolls.extorts.extract.extrema.extreme.extrude.exudate.exuding.exulted.exurban.exurbia.exuviae.exuvial.exuvium.eyasses.eyeable.eyeball.eyebars.eyebeam.eyebolt.eyebrow.eyecups.eyefold.eyefuls.eyehole.eyehook.eyelash.eyeless.eyelets.eyelids.eyelift.eyelike.eyeshot.eyesome.eyesore.eyespot.eyewash.eyewear.eyewink.fabbest.fablers.fabliau.fabling.fabrics.fabular.facades.faceted.facials.faciend.facings.factful.faction.factoid.factors.factory.factual.facture.faculae.facular.faculty.fadable.faddier.faddish.faddism.faddist.fadedly.fadeins.fadeout.fadging.fadings.fadlike.faeries.faggier.faggots.faggoty.fagoted.fagoter.faience.failing.failles.failure.fainest.fainted.fainter.faintly.fairest.fairies.fairing.fairish.fairway.faithed.faitour.fajitas.fakeers.falafel.falbala.falcate.falcons.fallacy.fallals.fallers.falling.falloff.fallout.fallows.falsely.falsest.falsies.falsify.falsity.falters.famines.famulus.fanatic.fancied.fancier.fancies.fancify.fancily.fandoms.fanegas.fanfare.fanfics.fanfold.fanions.fanjets.fanlike.fanners.fannies.fanning.fantail.fantasm.fantast.fantasy.fantods.fantoms.fanwise.fanwort.fanzine.faquirs.faraday.faradic.faraway.farcers.farceur.farcies.farcing.fardels.farding.farebox.farfals.farfels.farinas.farinha.farmers.farming.farness.farrago.farrier.farrows.farside.farther.farting.fartlek.fasciae.fascial.fascias.fascine.fascism.fascist.fashing.fashion.fastens.fastest.fasting.fatally.fatback.fatbird.fateful.fathead.fathers.fathoms.fatidic.fatigue.fatless.fatlike.fatling.fatness.fatsoes.fattens.fattest.fattier.fatties.fattily.fatting.fattish.fatuity.fatuous.fatwood.faucals.faucets.faucial.faulted.fauvism.fauvist.favelas.favella.favisms.favored.favorer.favours.favuses.fawners.fawnier.fawning.fazenda.fearers.fearful.fearing.feasing.feasted.feaster.featest.feather.feature.feazing.febrile.fecials.feculae.fedayee.federal.fedexed.fedexes.fedoras.feebler.feedbag.feedbox.feeders.feeding.feedlot.feelers.feeless.feeling.feezing.feigned.feigner.feijoas.feinted.felafel.felines.fellahs.fellers.fellest.fellies.felling.felloes.fellows.felonry.felsite.felspar.felting.felucca.felwort.females.feminie.femoral.fenagle.fencers.fencing.fenders.fending.fenland.fennecs.fennels.fennier.fenuron.feodary.feoffed.feoffee.feoffer.feoffor.ferbams.ferlies.fermata.fermate.ferment.fermion.fermium.fernery.fernier.ferrate.ferrels.ferrets.ferrety.ferried.ferries.ferrite.ferrous.ferrule.ferrums.fertile.ferulae.ferulas.feruled.ferules.fervent.fervors.fervour.fescues.fessing.festers.festive.festoon.fetched.fetcher.fetches.fetials.fetidly.fetlock.fetters.fetting.fettled.fettles.fetuses.feudary.feuding.feudist.fevered.fewness.feyness.fiacres.fiancee.fiances.fiaschi.fiascos.fibbers.fibbing.fibered.fibrils.fibrins.fibroid.fibroin.fibroma.fibrous.fibster.fibulae.fibular.fibulas.fickler.fictile.fiction.fictive.ficuses.fiddled.fiddler.fiddles.fideism.fideist.fidgets.fidgety.fidging.fiefdom.fielded.fielder.fiercer.fierier.fierily.fiestas.fifteen.fifthly.fifties.figging.fighter.figment.figural.figured.figurer.figures.figwort.filaree.filaria.filbert.filched.filcher.filches.filemot.fileted.filiate.filibeg.filings.fillers.fillets.fillies.filling.fillips.filmdom.filmers.filmier.filmily.filming.filmset.filters.fimbles.fimbria.finable.finagle.finales.finalis.finally.finance.finback.finches.finders.finding.finesse.finfish.finfoot.fingers.finials.finical.finicky.finikin.finings.finises.finites.finking.finless.finlike.finmark.finnier.finning.fipples.firearm.firebox.firebug.firedog.firefly.firelit.fireman.firemen.firepan.firepot.firings.firkins.firmans.firmers.firmest.firming.firrier.firstly.fiscals.fishers.fishery.fisheye.fishgig.fishier.fishily.fishing.fishnet.fishway.fissate.fissile.fission.fissure.fistful.fisting.fistula.fitchee.fitches.fitchet.fitchew.fitment.fitness.fitters.fittest.fitting.fixable.fixated.fixates.fixatif.fixedly.fixings.fixture.fixures.fizgigs.fizzers.fizzier.fizzing.fizzled.fizzles.fjordic.flaccid.flacked.flacons.flagged.flagger.flagman.flagmen.flagons.flailed.flakers.flakier.flakily.flaking.flambee.flambes.flamens.flamers.flamier.flaming.flammed.flaneur.flanged.flanger.flanges.flanked.flanken.flanker.flannel.flapped.flapper.flareup.flaring.flashed.flasher.flashes.flasket.flatbed.flatcap.flatcar.flatlet.flatted.flatten.flatter.flattop.flaunts.flaunty.flautas.flavine.flavins.flavone.flavors.flavory.flavour.flawier.flawing.flaxier.flayers.flaying.fleabag.fleapit.fleches.flecked.fledged.fledges.fleeced.fleecer.fleeces.fleeing.fleered.fleeted.fleeter.fleetly.flehmen.flemish.flensed.flenser.flenses.fleshed.flesher.fleshes.fleshly.fleuron.flexile.flexing.flexion.flexors.flexure.fleying.flicked.flicker.flights.flighty.flinder.flinger.flinted.flipped.flipper.flirted.flirter.fliting.flitted.flitter.flivver.floated.floatel.floater.flocced.floccus.flocked.flogged.flogger.flokati.flooded.flooder.floored.floorer.floosie.floozie.flopped.flopper.florals.florets.florins.florist.floruit.flossed.flosser.flosses.flossie.flotage.flotsam.flounce.flouncy.floured.flouted.flouter.flowage.flowers.flowery.flowing.flubbed.flubber.flubdub.fluency.flueric.fluffed.fluffer.fluidal.fluidic.fluidly.flukier.flukily.fluking.fluming.flummox.flumped.flunked.flunker.flunkey.flunkie.fluoric.fluorid.fluorin.flushed.flusher.flushes.fluster.fluters.flutier.fluting.flutist.flutter.fluvial.fluxing.fluxion.flyable.flyaway.flybelt.flyblew.flyblow.flyboat.flyboys.flyings.flyleaf.flyless.flyoffs.flyover.flypast.flytier.flyting.flytrap.flyways.foaling.foamers.foamier.foamily.foaming.fobbing.focally.focused.focuser.focuses.fodders.foetors.fogbows.fogdogs.foggage.foggers.foggier.foggily.fogging.foghorn.fogless.fogyish.fogyism.foibles.foiling.foining.foisons.foisted.folacin.folates.folders.folding.foldout.foldups.foliage.foliate.folioed.foliose.folious.foliums.folkier.folkies.folkish.folkmot.folkway.follies.follows.foments.fomites.fondant.fondest.fonding.fondled.fondler.fondles.fondued.fondues.fontina.foodies.foolery.fooling.foolish.footage.footbag.footboy.footers.footier.footies.footing.footled.footler.footles.footman.footmen.footpad.footsie.footway.foozled.foozler.foozles.foppery.fopping.foppish.foraged.forager.forages.foramen.forayed.forayer.forbade.forbare.forbear.forbids.forbode.forbore.forceps.forcers.forcing.fording.fordoes.fordone.forearm.forebay.forebye.foredid.foregut.foreign.foreleg.foreman.foremen.forepaw.foreran.forerun.foresaw.foresee.forests.foretop.forever.forfeit.forfend.forgave.forgers.forgery.forgets.forging.forgive.forgoer.forgoes.forgone.forints.forkers.forkful.forkier.forking.forlorn.formals.formant.formate.formats.formers.formful.formica.forming.formols.formula.formyls.fornent.forsake.forsook.forties.fortify.fortune.forward.forwent.forworn.fossate.fossick.fossils.fosters.fouette.foulard.foulest.fouling.founded.founder.foundry.fourgon.fourths.foveate.foveola.foveole.fowlers.fowling.fowlpox.foxfire.foxfish.foxhole.foxhunt.foxiest.foxings.foxlike.foxskin.foxtail.foxtrot.foziest.fractal.fracted.fractur.fractus.fraenum.fragged.fragile.frailer.frailly.frailty.fraises.fraktur.framers.framing.franked.franker.frankly.frantic.frapped.frappes.frasses.fraters.fraught.fraying.frazils.frazzle.freaked.freckle.freckly.freebee.freebie.freedom.freeing.freeman.freemen.freesia.freeway.freezer.freezes.freight.frenula.frenums.frescos.freshed.freshen.fresher.freshes.freshet.freshly.fresnel.fretful.fretsaw.fretted.fretter.friable.friarly.fribble.fridges.friends.friezes.frigate.frigged.frights.frijole.frilled.friller.fringed.fringes.frisbee.frisees.friseur.frisked.frisker.frisket.frisson.fritted.fritter.fritzes.frivols.frizers.frizing.frizzed.frizzer.frizzes.frizzle.frizzly.frocked.frogeye.frogged.froglet.frogman.frogmen.frolics.fromage.fronded.frontal.fronted.fronter.frontes.fronton.frosted.frothed.frother.frounce.froward.frowned.frowner.frowsts.frowsty.frugged.fruited.fruiter.frustum.fryable.frypans.fubbing.fubsier.fuchsia.fuchsin.fuckoff.fuckups.fucoids.fucoses.fucuses.fuddies.fuddled.fuddles.fudging.fuehrer.fuelers.fueling.fuelled.fueller.fugally.fugatos.fuggier.fuggily.fugging.fugling.fuguing.fuguist.fuhrers.fulcrum.fulfill.fulfils.fulgent.fulhams.fullams.fullers.fullery.fullest.fulling.fulmars.fulmine.fulness.fulsome.fulvous.fumaric.fumbled.fumbler.fumbles.fumette.fumiest.fumulus.functor.funders.funding.funeral.funfair.funfest.fungals.fungoes.fungoid.fungous.funicle.funkers.funkias.funkier.funkily.funking.funnels.funnest.funnier.funnies.funnily.funning.funplex.furanes.furbish.furcate.furcula.furioso.furious.furlers.furless.furling.furlong.furmety.furmity.furnace.furnish.furores.furrier.furrily.furring.furrows.furrowy.further.furtive.furzier.fusains.fusaria.fuscous.fusible.fusibly.fusilli.fusions.fussers.fussier.fussily.fussing.fusspot.fustian.fustics.fustier.fustily.futharc.futhark.futhorc.futhork.futtock.futural.futures.futzing.fuzzier.fuzzily.fuzzing.fylfots.gabbard.gabbart.gabbers.gabbier.gabbing.gabbled.gabbler.gabbles.gabbros.gabelle.gabfest.gabions.gabling.gaboons.gadders.gadding.gadgets.gadgety.gadoids.gadroon.gadwall.gaffers.gaffing.gagakus.gaggers.gagging.gaggled.gaggles.gagster.gahnite.gainers.gainful.gaining.gainsay.gaiters.gaiting.galabia.galagos.galanga.galatea.galaxes.galeate.galenas.galenic.galeres.galette.galilee.galiots.galipot.gallant.gallate.gallein.galleon.gallery.galleta.gallets.galleys.gallfly.gallica.gallied.gallies.galling.galliot.gallium.gallnut.gallons.galloon.galloot.gallops.gallous.gallows.galoots.galoped.galores.galoshe.galumph.galyacs.galyaks.gambade.gambado.gambias.gambier.gambirs.gambits.gambled.gambler.gambles.gamboge.gambols.gambrel.gamelan.gametal.gametes.gametic.gamiest.gamines.gamings.gammers.gammier.gamming.gammons.ganache.ganders.gangers.ganging.ganglia.gangrel.gangsta.gangues.gangway.ganjahs.gannets.ganoids.gantlet.gaolers.gaoling.gapless.gaposis.gappier.gapping.garaged.garages.garbage.garbagy.garbing.garbled.garbler.garbles.garboil.garcons.gardant.gardens.garfish.gargets.gargety.gargled.gargler.gargles.garigue.garland.garlics.garment.garners.garnets.garnish.garoted.garotes.garotte.garpike.garrets.garring.garrons.garrote.garters.garveys.gasbags.gascons.gaseity.gaseous.gashest.gashing.gaskets.gasking.gaskins.gasless.gasohol.gaspers.gasping.gassers.gassier.gassily.gassing.gasters.gasting.gastral.gastrea.gastric.gastrin.gateaus.gateaux.gateman.gatemen.gateway.gathers.gatings.gaucher.gauchos.gaudery.gaudier.gaudies.gaudily.gauffer.gaugers.gauging.gauming.gaunter.gauntly.gauntry.gausses.gauzier.gauzily.gavages.gaveled.gavials.gavotte.gawkers.gawkier.gawkies.gawkily.gawking.gawkish.gawpers.gawping.gaydars.gayness.gazabos.gazania.gazebos.gazelle.gazette.gazumps.gearbox.gearing.gecking.geckoes.geegaws.geekdom.geekier.geezers.geishas.gelable.geladas.gelants.gelated.gelates.gelatin.gelatis.gelatos.gelcaps.gelders.gelding.gelidly.gellant.gelling.geminal.gemlike.gemmate.gemmier.gemmily.gemming.gemmule.gemotes.gemsbok.genders.general.generic.geneses.genesis.genetic.genette.genevas.genipap.genital.genitor.genoise.genomes.genomic.genseng.genteel.gentian.gentile.gentled.gentler.gentles.gentoos.genuine.genuses.geodesy.geoduck.geoidal.geology.georgic.gerbera.gerbils.gerents.gerenuk.germane.germans.germens.germier.germina.gerunds.gessoed.gessoes.gestalt.gestapo.gestate.gesture.getable.getaway.getters.getting.gewgaws.geysers.gharial.gharris.ghastly.ghazies.gherkin.ghettos.ghiblis.ghillie.ghosted.ghostly.ghoulie.giaours.giardia.gibbers.gibbets.gibbing.gibbons.gibbose.gibbous.giblets.gibsons.giddied.giddier.giddies.giddily.giddyap.giddyup.giftees.gifting.gigabit.gigaton.gigging.giggled.giggler.giggles.giglets.giglots.gigolos.gilbert.gilders.gilding.gillers.gillied.gillies.gilling.gillnet.gimbals.gimlets.gimmals.gimmick.gimmies.gimpier.gimping.gingall.gingals.gingeli.gingely.gingers.gingery.gingham.gingili.gingiva.gingkos.ginkgos.ginners.ginnier.ginning.ginseng.ginzoes.gippers.gipping.gipsied.gipsies.giraffe.girasol.girders.girding.girdled.girdler.girdles.girlier.girlies.girlish.girning.girolle.girosol.girshes.girthed.girting.gisarme.gitanos.gittern.gitting.gizzard.gjetost.glaceed.glacial.glacier.gladded.gladden.gladder.gladier.glaiket.glaikit.glaired.glaires.glaived.glaives.glamors.glamour.glanced.glancer.glances.glandes.glarier.glaring.glassed.glasses.glassie.glazers.glazier.glazily.glazing.gleamed.gleamer.gleaned.gleaner.gleeful.gleeked.gleeman.gleemen.gleeted.glenoid.gleying.gliadin.glibber.gliders.gliding.gliming.glimmer.glimpse.glinted.gliomas.glisten.glister.glitchy.glitter.glitzed.glitzes.gloated.gloater.globate.globing.globins.globoid.globose.globous.globule.glochid.glomera.glommed.glonoin.gloomed.glopped.glorias.gloried.glories.glorify.glossae.glossal.glossas.glossed.glosser.glosses.glottal.glottic.glottis.glouted.glovers.gloving.glowers.glowfly.glowing.glozing.glucans.glucose.glueing.gluepot.glugged.gluiest.glummer.gluteal.glutens.gluteus.glutted.glutton.glycans.glycine.glycins.glycols.glycyls.glyphic.glyptic.gnarled.gnarred.gnashed.gnashes.gnathal.gnathic.gnawers.gnawing.gnocchi.gnomish.gnomist.gnomons.gnostic.goading.goalies.goaling.goannas.goateed.goatees.goatish.gobangs.gobbets.gobbing.gobbled.gobbler.gobbles.gobioid.goblets.goblins.gobonee.goddams.goddess.godding.godetia.godhead.godhood.godless.godlier.godlike.godlily.godling.godowns.godroon.godsend.godship.godsons.godwits.goffers.goggled.goggler.goggles.goglets.goiters.goitres.goldarn.goldbug.goldest.goldeye.goldurn.golfers.golfing.goliard.goliath.goloshe.gombeen.gomeral.gomerel.gomeril.gomutis.gonadal.gonadic.gondola.gonging.gonidia.gonidic.goniffs.gonophs.goobers.goodbye.goodbys.goodies.goodish.goodman.goodmen.goofier.goofily.goofing.googled.googols.gooiest.goombah.goombay.gooneys.goonier.goonies.goopier.goorals.goosier.goosing.gophers.gorcock.gordita.gorgers.gorgets.gorging.gorgons.gorhens.goriest.gorilla.gormand.gorming.gorsier.goshawk.gosling.gospels.gosport.gossans.gossips.gossipy.gossoon.gotchas.gothics.gothite.gouache.gougers.gouging.goulash.gourami.gourdes.gourmet.goutier.goutily.governs.gowaned.gowning.grabbed.grabber.grabble.grabens.gracile.gracing.grackle.gradate.graders.gradine.grading.gradins.gradual.grafted.grafter.grahams.grained.grainer.gramary.grammar.grammas.grammes.grampas.grampus.granary.grandad.grandam.grandee.grander.grandly.grandma.grandpa.granger.granges.granita.granite.grannie.granola.granted.grantee.granter.grantor.granule.grapery.graphed.graphic.grapier.graplin.grapnel.grappas.grapple.grasped.grasper.grassed.grasses.graters.gratify.gratine.grating.gratins.graupel.gravels.gravely.gravers.gravest.gravida.gravies.graving.gravity.gravlax.gravure.grayest.graying.grayish.graylag.grayout.grazers.grazier.grazing.greased.greaser.greases.greaten.greater.greatly.greaved.greaves.grecize.greeing.greened.greener.greenie.greenly.greenth.greeted.greeter.greiges.greisen.gremial.gremlin.gremmie.grenade.greyest.greyhen.greying.greyish.greylag.gribble.gridded.gridder.griddle.griding.grieved.griever.grieves.griffes.griffin.griffon.grifted.grifter.grigris.grilled.griller.grilles.grilses.grimace.grimier.grimily.griming.grimmer.grinded.grinder.gringas.gringos.grinned.grinner.gripers.gripier.griping.gripman.gripmen.gripped.gripper.grippes.gripple.griskin.grisons.grister.gristle.gristly.gritted.gritter.grivets.grizzle.grizzly.groaned.groaner.grocers.grocery.grodier.grogram.groined.grokked.grommet.groomed.groomer.grooved.groover.grooves.gropers.groping.grossed.grosser.grosses.grossly.grottos.grouchy.grounds.grouped.grouper.groupie.groused.grouser.grouses.grouted.grouter.grovels.growers.growing.growled.growler.grownup.growths.growthy.groynes.grubbed.grubber.grudged.grudger.grudges.grueled.grueler.gruffed.gruffer.gruffly.grugrus.grumble.grumbly.grummer.grummet.grumose.grumous.grumped.grumphy.grunger.grunges.grunion.grunted.grunter.gruntle.grushie.grutten.gruyere.gryphon.guaiacs.guanaco.guanase.guanays.guanine.guanins.guarana.guarani.guarded.guarder.guayule.gudgeon.guenons.guerdon.guessed.guesser.guesses.guested.guffaws.guggled.guggles.guglets.guiders.guiding.guidons.guilder.guiling.guimpes.guineas.guipure.guisard.guising.guitars.gulches.guldens.gulfier.gulfing.gullets.gulleys.gullied.gullies.gulling.gulpers.gulpier.gulping.gumball.gumboil.gumboot.gumdrop.gumless.gumlike.gumline.gummata.gummers.gummier.gumming.gummite.gummose.gummous.gumshoe.gumtree.gumweed.gumwood.gunboat.gundogs.gunfire.gunites.gunkier.gunless.gunlock.gunnels.gunners.gunnery.gunnies.gunning.gunplay.gunroom.gunsels.gunship.gunshot.gunwale.guppies.gurging.gurgled.gurgles.gurglet.gurnard.gurnets.gurneys.gurries.gurshes.gushers.gushier.gushily.gushing.gussets.gussied.gussies.gustier.gustily.gusting.gustoes.gutless.gutlike.gutsier.gutsily.guttate.gutters.guttery.guttier.gutting.guttled.guttler.guttles.guyline.guzzled.guzzler.guzzles.gweduck.gweducs.gymnast.gynecia.gynecic.gyplure.gyppers.gypping.gypsied.gypsies.gypster.gypsums.gyrally.gyrases.gyrated.gyrates.gyrator.gyrenes.gyttjas.habitan.habitat.habited.habitue.habitus.haboobs.hachure.hackbut.hackees.hackers.hackies.hacking.hackled.hackler.hackles.hackman.hackmen.hackney.hacksaw.hadarim.haddest.haddock.hadiths.hadjees.hadrons.haemins.haemoid.haffets.haffits.hafizes.hafnium.haftara.hafters.hafting.hagadic.hagborn.hagbush.hagbuts.hagdons.hagfish.haggada.haggard.hagging.haggish.haggled.haggler.haggles.hagride.hagrode.hahnium.hailers.hailing.haimish.haircap.haircut.hairdos.hairier.hairnet.hairpin.hakeems.halacha.halakah.halakha.halakic.halalah.halalas.halavah.halberd.halbert.halcyon.halfway.halibut.halides.halidom.halites.halitus.hallahs.hallels.halloas.halloed.halloes.halloos.halloth.hallows.hallway.halogen.haloids.haloing.haltere.halters.halting.halvahs.halvers.halving.halyard.hamadas.hamates.hamauls.hambone.hamburg.hamlets.hammada.hammals.hammams.hammers.hammier.hammily.hamming.hammock.hampers.hamster.hamular.hamulus.hamzahs.hanaper.handbag.handcar.handers.handful.handgun.handier.handily.handing.handled.handler.handles.handoff.handout.handsaw.handsel.handset.hangars.hangdog.hangers.hanging.hangman.hangmen.hangout.hangtag.hanguls.hangups.hankers.hankies.hanking.hansels.hansoms.hanting.hantles.hanuman.hapaxes.hapkido.hapless.haplite.haploid.haplont.happens.happier.happily.happing.haptene.haptens.harbors.harbour.hardass.hardens.hardest.hardhat.hardier.hardies.hardily.hardpan.hardset.hardtop.hareems.harelip.hariana.haricot.harijan.harissa.harkens.harking.harlots.harmers.harmful.harmine.harming.harmins.harmony.harness.harpers.harpies.harping.harpins.harpist.harpoon.harried.harrier.harries.harrows.harshen.harsher.harshly.harslet.hartals.harumph.harvest.hashing.hashish.haslets.hasping.hassels.hassium.hassled.hassles.hassock.hastate.hastens.hastier.hastily.hasting.hatable.hatband.hatched.hatchel.hatcher.hatches.hatchet.hateful.hatfuls.hatless.hatlike.hatpins.hatrack.hatreds.hatsful.hatters.hatting.hauberk.haughty.haulage.haulers.haulier.hauling.haunted.haunter.hausens.hautboy.hauteur.havarti.havened.havered.haverel.haviors.haviour.hawalas.hawkers.hawkeys.hawkies.hawking.hawkish.hawsers.haycock.hayfork.hayings.haylage.hayloft.haymows.hayrack.hayrick.hayride.hayseed.hayward.haywire.hazanim.hazards.hazelly.haziest.hazings.hazmats.hazzans.headend.headers.headful.headier.headily.heading.headman.headmen.headpin.headset.headway.healers.healing.healths.healthy.heapers.heaping.hearers.hearing.hearken.hearsay.hearsed.hearses.hearted.hearten.hearths.heaters.heathen.heather.heating.heaumes.heavens.heavers.heavier.heavies.heavily.heaving.hebetic.heckled.heckler.heckles.hectare.hectors.heddles.hedgers.hedgier.hedging.hedonic.heeders.heedful.heeding.heehaws.heelers.heeling.heeltap.heezing.hefters.heftier.heftily.hefting.hegaris.hegemon.hegiras.hegumen.heifers.heighth.heights.heiling.heimish.heinies.heinous.heirdom.heiress.heiring.heisted.heister.hejiras.hektare.heliast.helical.helices.helicon.helipad.heliums.helixes.hellbox.hellcat.helleri.hellers.hellery.helling.hellion.hellish.helloed.helloes.helluva.helmets.helming.helotry.helpers.helpful.helping.helving.hemagog.hematal.hematic.hematin.hemiola.hemline.hemlock.hemmers.hemming.hempier.henbane.henbits.hencoop.henleys.henlike.hennaed.hennery.hennish.henpeck.henries.henting.heparin.hepatic.hepcats.heppest.heptads.heptane.heptose.heralds.herbage.herbals.herbier.herders.herdics.herding.herdman.herdmen.heredes.heretic.heriots.heritor.hermits.herniae.hernial.hernias.heroics.heroine.heroins.heroism.heroize.heronry.herried.herries.herring.herself.hertzes.hessian.hessite.hetaera.hetaira.heteros.hetmans.hewable.hexades.hexadic.hexagon.hexanes.hexapla.hexapod.hexerei.hexones.hexosan.hexoses.hexylic.heydays.heydeys.hibachi.hiccups.hickeys.hickies.hickish.hickory.hidable.hidalgo.hideous.hideout.hidings.higgled.higgler.higgles.highboy.highest.highted.highths.hightop.highway.hijacks.hijinks.hijrahs.hilding.hillers.hillier.hilling.hilloas.hillock.hilloed.hilloes.hilltop.hilting.himatia.himself.hinders.hindgut.hingers.hinging.hinkier.hinnied.hinnies.hinters.hinting.hipbone.hipless.hiplike.hipline.hipness.hippest.hippier.hippies.hipping.hippish.hipshot.hipster.hirable.hircine.hirpled.hirples.hirsels.hirsled.hirsles.hirsute.hirudin.hisself.hissers.hissier.hissies.hissing.histing.histoid.histone.history.hitched.hitcher.hitches.hitless.hitters.hitting.hoagies.hoarded.hoarder.hoarier.hoarily.hoarsen.hoarser.hoatzin.hoaxers.hoaxing.hobbers.hobbies.hobbing.hobbits.hobbled.hobbler.hobbles.hoblike.hobnail.hobnobs.hoboing.hoboism.hockers.hockeys.hocking.hocused.hocuses.hodaddy.hoddens.hoddins.hoecake.hoedown.hoelike.hogback.hogfish.hoggers.hoggets.hogging.hoggish.hoglike.hogmane.hognose.hognuts.hogtied.hogties.hogwash.hogweed.hoicked.hoidens.hoising.hoisted.hoister.hokiest.holards.holdall.holders.holding.holdout.holdups.holibut.holiday.holiest.holisms.holists.holking.hollaed.holland.hollers.hollies.holloas.holloed.holloes.holloos.hollows.holmium.holster.holyday.homaged.homager.homages.hombres.homburg.homeboy.homered.homeric.homiest.homines.hominid.hommock.homolog.homonym.homosex.honchos.hondled.hondles.honesty.honeyed.hongied.hongies.honkers.honkeys.honkies.honking.honored.honoree.honorer.honours.hooches.hoochie.hoodier.hoodies.hooding.hoodlum.hoodoos.hoofers.hoofing.hookahs.hookers.hookeys.hookier.hookies.hooking.hooklet.hookups.hoopers.hooping.hooplas.hoopoes.hoopoos.hoorahs.hoorays.hoosgow.hooters.hootier.hooting.hoovers.hopeful.hophead.hoplite.hoppers.hoppier.hopping.hoppled.hopples.hopsack.hoptoad.hordein.hording.horizon.hormone.hornets.hornier.hornily.horning.hornist.hornito.horrent.horrify.horrors.horsier.horsily.horsing.horstes.hosanna.hoseyed.hosiers.hosiery.hospice.hostage.hostels.hostess.hostile.hosting.hostler.hotbeds.hotcake.hotched.hotches.hotdogs.hotfoot.hothead.hotline.hotlink.hotness.hotrods.hotshot.hotspot.hotspur.hottest.hotties.hotting.hottish.houdahs.hounded.hounder.housels.housers.housing.hoveled.hovered.hoverer.howbeit.howdahs.howdied.howdies.however.howking.howlers.howlets.howling.hoydens.hryvnas.hryvnia.hubbies.hubbubs.hubcaps.huckles.huddled.huddler.huddles.hueless.huffier.huffily.huffing.huffish.hugeous.huggers.hugging.huipils.hulkier.hulking.hullers.hulling.hulloas.hulloed.hulloes.hulloos.humaner.humanly.humates.humbled.humbler.humbles.humbugs.humdrum.humeral.humerus.humidex.humidly.humidor.hummers.humming.hummock.humoral.humored.humours.humpers.humphed.humpier.humping.humuses.humvees.hunched.hunches.hundred.hungers.hunkers.hunkeys.hunkier.hunkies.hunnish.hunters.hunting.huppahs.hurdies.hurdled.hurdler.hurdles.hurlers.hurleys.hurlies.hurling.hurrahs.hurrays.hurried.hurrier.hurries.hurters.hurtful.hurting.hurtled.hurtles.husband.hushaby.hushful.hushing.huskers.huskier.huskies.huskily.husking.hussars.hussies.hustled.hustler.hustles.huswife.hutched.hutches.hutlike.hutment.hutting.hutzpah.hutzpas.huzzaed.huzzahs.hyaenas.hyaenic.hyaline.hyalins.hyalite.hyaloid.hybrids.hydatid.hydrant.hydrase.hydrate.hydriae.hydride.hydrids.hydroid.hydrops.hydrous.hydroxy.hyenine.hyenoid.hygeist.hygiene.hymenal.hymenia.hymnals.hymnary.hymning.hymnist.hymnody.hyoidal.hyperon.hyphens.hypnoid.hypogea.hypoing.hyponea.hyponym.hypoxia.hypoxic.hyraces.hyraxes.hyssops.iambics.iceberg.iceboat.icecaps.icefall.iceless.icelike.ichnite.icicled.icicles.iciness.ickiest.icteric.icterus.ictuses.ideally.ideated.ideates.identic.idiotic.idlesse.idolise.idolism.idolize.idylist.idyllic.iffiest.ignatia.igneous.ignited.igniter.ignites.ignitor.ignoble.ignobly.ignored.ignorer.ignores.iguanas.iguanid.ikebana.ileitis.ileuses.illegal.illicit.illites.illitic.illness.illogic.illuded.illudes.illumed.illumes.illuvia.imagers.imagery.imagine.imaging.imagism.imagist.imagoes.imamate.imarets.imbalms.imbarks.imbibed.imbiber.imbibes.imblaze.imbosom.imbower.imbrown.imbrued.imbrues.imbrute.imbuing.imitate.immense.immerge.immerse.immixed.immixes.immoral.immunes.immured.immures.impacts.impaint.impairs.impalas.impaled.impaler.impales.impanel.imparks.imparts.impasse.impaste.impasto.impavid.impawns.impeach.impearl.impeded.impeder.impedes.impends.imperia.imperil.impetus.imphees.impiety.impinge.impings.impious.implant.implead.implied.implies.implode.implore.imponed.impones.imports.imposed.imposer.imposes.imposts.impound.impower.impregn.impresa.imprese.impress.imprest.imprint.improve.improvs.impugns.impulse.impurer.imputed.imputer.imputes.inanely.inanest.inanity.inaptly.inarmed.inbeing.inboard.inbound.inbreds.inbreed.inbuilt.inburst.incaged.incages.incants.incased.incases.incense.incents.incepts.incests.inchers.inching.incipit.incisal.incised.incises.incisor.incited.inciter.incites.incivil.inclasp.incline.inclips.inclose.include.incomer.incomes.inconnu.incross.incrust.incubus.incudal.incudes.incurve.incused.incuses.indabas.indamin.indenes.indents.indexed.indexer.indexes.indican.indices.indicia.indicts.indigen.indigos.indited.inditer.indites.indiums.indoles.indoors.indorse.indowed.indoxyl.indraft.indrawn.induced.inducer.induces.inducts.induing.indulge.indulin.indults.indusia.indwell.indwelt.inearth.inedita.ineptly.inertia.inertly.inexact.infalls.infancy.infanta.infante.infants.infarct.infares.infauna.infects.infeoff.inferno.infests.infidel.infield.infight.infirms.infixed.infixes.inflame.inflate.inflect.inflict.inflows.infolds.informs.infract.infused.infuser.infuses.ingates.ingenue.ingesta.ingests.ingoing.ingoted.ingraft.ingrain.ingrate.ingress.ingroup.ingrown.ingulfs.inhabit.inhaled.inhaler.inhales.inhauls.inhered.inheres.inherit.inhibin.inhibit.inhuman.inhumed.inhumer.inhumes.initial.injects.injured.injurer.injures.inkblot.inkhorn.inkiest.inkless.inklike.inkling.inkpots.inkwell.inkwood.inlaced.inlaces.inlands.inlayer.inliers.inlying.inmates.innages.innards.innerly.innerve.innings.innless.inocula.inosine.inosite.inphase.inpours.inquest.inquiet.inquire.inquiry.inroads.insaner.inscape.insculp.inseams.insects.inserts.inshore.insider.insides.insight.insigne.insipid.insists.insnare.insofar.insoles.insouls.inspans.inspect.inspire.install.instals.instant.instars.instate.instead.insteps.instill.instils.insular.insulin.insults.insured.insurer.insures.inswept.intagli.intakes.integer.intends.intense.intents.interim.interne.interns.inthral.intimae.intimal.intimas.intines.intitle.intombs.intoned.intoner.intones.intorts.intrant.intreat.introfy.introit.introns.intrude.intrust.intuits.inturns.intwine.intwist.inulase.inulins.inuring.inurned.inutile.invaded.invader.invades.invalid.inveigh.invents.inverse.inverts.invests.invital.invited.invitee.inviter.invites.invoice.invoked.invoker.invokes.involve.inwalls.inwards.inweave.inwinds.inwound.inwoven.inwraps.iodated.iodates.iodides.iodines.iodised.iodises.iodisms.iodized.iodizer.iodizes.iolites.ionised.ionises.ioniums.ionized.ionizer.ionizes.ionogen.ionomer.ionones.ipecacs.ipomoea.iracund.irately.iratest.ireless.irenics.iridium.irising.irksome.ironers.ironies.ironing.ironist.ironize.ironman.ironmen.irrupts.isagoge.isatine.isatins.ischial.ischium.islands.isleted.isobare.isobars.isobath.isochor.isodose.isoform.isogamy.isogeny.isogone.isogons.isogony.isogram.isogriv.isohels.isohyet.isolate.isolead.isoline.isologs.isomers.isonomy.isopach.isopods.isospin.isotach.isotone.isotope.isotopy.isotype.isozyme.issuant.issuers.issuing.isthmic.isthmus.italics.itchier.itchily.itching.iteming.itemise.itemize.iterant.iterate.ivories.ivylike.ixodids.izzards.jabbers.jabbing.jabirus.jacales.jacamar.jacanas.jacinth.jackals.jackass.jackdaw.jackers.jackets.jackies.jacking.jackleg.jackpot.jacobin.jacobus.jaconet.jacuzzi.jadedly.jadeite.jaditic.jaegers.jaggary.jaggers.jaggery.jaggier.jaggies.jagging.jagless.jaguars.jailers.jailing.jailors.jalapic.jalapin.jaloppy.jambeau.jambing.jamlike.jammers.jammier.jammies.jamming.jangled.jangler.jangles.janitor.jarfuls.jargons.jargony.jargoon.jarhead.jarinas.jarldom.jarrahs.jarring.jarsful.jarveys.jasmine.jasmins.jaspers.jaspery.jassids.jauking.jaunced.jaunces.jaunted.jauping.javelin.jawbone.jawless.jawlike.jawline.jaybird.jaygees.jayvees.jaywalk.jazzbos.jazzers.jazzier.jazzily.jazzing.jazzman.jazzmen.jealous.jeepers.jeeping.jeepney.jeerers.jeering.jejunal.jejunum.jellaba.jellied.jellies.jellify.jelling.jemadar.jemidar.jemmied.jemmies.jennets.jennies.jeopard.jerboas.jereeds.jerkers.jerkier.jerkies.jerkily.jerking.jerkins.jerreed.jerrids.jerries.jerseys.jessant.jessing.jesters.jestful.jesting.jesuits.jetbead.jetfoil.jetlags.jetlike.jetport.jetsams.jetsoms.jettied.jettier.jetties.jetting.jettons.jetways.jeweled.jeweler.jewelry.jewfish.jezails.jezebel.jibbers.jibbing.jibboom.jicamas.jiffies.jigaboo.jiggers.jiggier.jigging.jiggish.jiggled.jiggles.jiglike.jigsawn.jigsaws.jillion.jilters.jilting.jimjams.jimmied.jimmies.jimminy.jimpest.jingall.jingals.jingled.jingler.jingles.jingoes.jinkers.jinking.jinxing.jitneys.jitters.jittery.jiveass.jiviest.joannes.jobbers.jobbery.jobbing.jobless.jobname.jockeys.jocular.jodhpur.joggers.jogging.joggled.joggler.joggles.johnnie.johnson.joinder.joiners.joinery.joining.jointed.jointer.jointly.joisted.jojobas.jokiest.jollied.jollier.jollies.jollify.jollily.jollity.jolters.joltier.joltily.jolting.jonesed.joneses.jonquil.jordans.josephs.joshers.joshing.jostled.jostler.jostles.jotters.jotting.jouking.jounced.jounces.journal.journey.journos.jousted.jouster.jowlier.joyance.joyless.joypops.joyride.joyrode.jubbahs.jubhahs.jubilee.jubiles.judases.judders.judgers.judging.judoist.judokas.jugfuls.jugging.juggled.juggler.juggles.jughead.juglone.jugsful.jugular.jugulum.juicers.juicier.juicily.juicing.jujitsu.jujubes.jujuism.jujuist.jujutsu.jukebox.jumbals.jumbled.jumbler.jumbles.jumbuck.jumpers.jumpier.jumpily.jumping.jumpoff.juncoes.jungled.jungles.juniors.juniper.junkers.junkets.junkier.junkies.junking.junkman.junkmen.jurally.jurants.juridic.jurists.jurying.juryman.jurymen.jussive.justers.justest.justice.justify.justing.justled.justles.juttied.jutties.jutting.juvenal.kabakas.kabalas.kabayas.kabbala.kabikis.kabukis.kachina.kaddish.kaffirs.kaftans.kahunas.kainite.kainits.kaisers.kajeput.kakapos.kalends.kalians.kalimba.kaliphs.kaliums.kalmias.kalongs.kalpacs.kalpaks.kamalas.kampong.kamseen.kamsins.kanakas.kanbans.kantars.kantele.kaoline.kaolins.karakul.karaoke.karates.karroos.karstic.karting.kasbahs.kashers.kashmir.kashrut.katcina.kathode.kations.katsura.katydid.kauries.kayaked.kayaker.kayoing.kebbies.kebbock.kebbuck.keblahs.kecking.keckled.keckles.keddahs.kedging.keeking.keelage.keeling.keelson.keeners.keenest.keening.keepers.keeping.keester.kegeler.keggers.kegging.keglers.kegling.keister.keitloa.kellies.keloids.kelpies.kelping.kelsons.kelters.kelvins.kenches.kennels.kenning.kenosis.kenotic.kepping.keramic.keratin.kerbing.kerchoo.kerfing.kermess.kernels.kerning.kernite.kerogen.kerrias.kerries.kerseys.kerygma.kestrel.ketches.ketchup.ketenes.ketones.ketonic.ketoses.ketosis.ketotic.kettles.kewpies.keycard.keyhole.keyless.keynote.keypads.keypals.keysets.keyster.keyways.keyword.khaddar.khalifa.khalifs.khamsin.khanate.khazens.khedahs.khedive.khirkah.kiaughs.kibbehs.kibbitz.kibbled.kibbles.kibbutz.kiblahs.kickbox.kickers.kickier.kicking.kickoff.kickups.kidders.kiddies.kidding.kiddish.kiddoes.kiddush.kidlike.kidnaps.kidneys.kidskin.kidvids.kiester.killdee.killers.killick.killies.killing.killjoy.killock.kilning.kilobar.kilobit.kilorad.kiloton.kilters.kilties.kilting.kimchee.kimchis.kimonos.kinaras.kinases.kindest.kindled.kindler.kindles.kindred.kinemas.kineses.kinesic.kinesis.kinetic.kinetin.kinfolk.kingcup.kingdom.kinging.kinglet.kingpin.kinkier.kinkily.kinking.kinless.kinship.kinsman.kinsmen.kippers.kipping.kipskin.kirkman.kirkmen.kirmess.kirning.kirtled.kirtles.kishkas.kishkes.kismats.kismets.kissers.kissing.kistful.kitbags.kitchen.kithara.kithing.kitling.kitschy.kittens.kitties.kitting.kittled.kittler.kittles.klatsch.klavern.klaxons.kleagle.kleenex.klephts.kleptos.klezmer.klister.kludged.kludges.kludgey.kluging.klutzes.knacked.knacker.knapped.knapper.knarred.knavery.knavish.knawels.kneaded.kneader.kneecap.kneeing.kneeled.kneeler.kneepad.kneepan.knelled.knesset.knifers.knifing.knights.knishes.knitted.knitter.knobbed.knobbly.knocked.knocker.knolled.knoller.knopped.knotted.knotter.knouted.knowers.knowing.knuckle.knuckly.knurled.kobolds.kokanee.kolacky.kolbasi.kolhozy.kolkhos.kolkhoz.kolkozy.komatik.konking.koodoos.kookier.kopecks.kopiyka.koppies.korunas.koshers.kotowed.kotower.koumiss.koumyss.kouprey.koussos.kowtows.kraaled.krakens.kraters.kremlin.kreuzer.krimmer.krubuts.kruller.krypton.kuchens.kulturs.kummels.kumquat.kumyses.kunzite.kurbash.kurgans.kvasses.kvelled.kvetchy.kwachas.kwanzas.kyanise.kyanite.kyanize.kylikes.kything.laagers.labarum.labeled.labeler.labella.labials.labiate.labored.laborer.labours.labrets.labroid.labrums.laciest.lacings.lackers.lackeys.lacking.laconic.lacquer.lacquey.lactams.lactary.lactase.lactate.lacteal.lactean.lactone.lactose.lacunae.lacunal.lacunar.lacunas.lacunes.ladanum.ladders.laddies.laddish.ladened.ladhood.ladings.ladinos.ladlers.ladling.ladrone.ladrons.ladybug.ladyish.ladykin.lagends.lagered.laggard.laggers.lagging.lagoons.lagunas.lagunes.laicise.laicism.laicize.lairdly.lairing.laithly.laities.lakebed.lakiest.lakings.lalique.lalland.lallans.lalling.lambada.lambast.lambdas.lambent.lambers.lambert.lambier.lambies.lambing.lambkin.lamedhs.lamella.laments.laminae.laminal.laminar.laminas.laminin.lamming.lampads.lampers.lamping.lampion.lampoon.lamprey.lamster.lanated.lancers.lancets.lancing.landaus.landers.landing.landler.landman.landmen.laneway.langley.langrel.langues.languet.languid.languor.langurs.laniard.laniary.lanital.lankest.lankier.lankily.lanners.lanolin.lantana.lantern.lanugos.lanyard.laogais.lapdogs.lapeled.lapfuls.lapides.lapilli.lapises.lappers.lappets.lapping.lapsers.lapsing.laptops.lapwing.larceny.larchen.larches.larders.lardier.larding.lardons.lardoon.largely.largess.largest.largish.lariats.larkers.larkier.larking.larkish.larrups.lasagna.lasagne.lascars.lashers.lashing.lashins.lashkar.lassies.lassoed.lassoer.lassoes.lasters.lasting.latakia.latched.latches.latchet.lateens.latency.latened.latents.laterad.lateral.latests.latexes.lathers.lathery.lathier.lathing.latices.latigos.latilla.latinas.latinos.latosol.latrias.latrine.lattens.lattice.lattins.lauders.lauding.laughed.laugher.launces.launder.laundry.laurels.lauwine.lavabos.lavages.laveers.lavrock.lawbook.lawines.lawings.lawless.lawlike.lawsuit.lawyers.laxness.layaway.layered.layette.layoffs.layouts.layover.lazaret.laziest.lazulis.lazying.lazyish.leached.leacher.leaches.leadens.leaders.leadier.leading.leadman.leadmen.leadoff.leafage.leafier.leafing.leaflet.leagued.leaguer.leagues.leakage.leakers.leakier.leakily.leaking.leaners.leanest.leaning.leapers.leaping.learier.learned.learner.leasers.leashed.leashes.leasing.leather.leavens.leavers.leavier.leaving.lechers.lechery.leching.lechwes.lectern.lectins.lection.lectors.lecture.lecythi.ledgers.ledgier.leeched.leeches.leerier.leerily.leering.leeward.leeways.leftest.lefties.leftish.leftism.leftist.legally.legated.legatee.legates.legator.legatos.legends.leggier.legging.leggins.leghorn.legible.legibly.legions.legists.legless.leglike.legongs.legroom.legumes.legumin.legwork.lehayim.leister.leisure.lekking.lekvars.lekythi.lemmata.lemming.lempira.lemures.lenders.lending.lengths.lengthy.lenient.lenited.lenites.lensing.lensman.lensmen.lentigo.lentils.lentisk.lentoid.leonine.leopard.leotard.leporid.leprose.leprosy.leprous.leptins.leptons.lesbian.lesions.lessees.lessens.lessons.lessors.letched.letches.letdown.lethals.lethean.letters.letting.lettuce.leucine.leucins.leucite.leucoma.leukoma.leukons.levants.levator.leveled.leveler.levelly.levered.leveret.leviers.levulin.levying.lewdest.lewises.lexemes.lexemic.lexical.lexicon.lezzies.liaised.liaises.liaison.lianoid.libbers.libeled.libelee.libeler.liberal.liberty.libidos.liblabs.library.librate.licence.license.licente.licenti.lichees.lichens.lichted.lichtly.licitly.lickers.licking.lictors.lidding.lidless.liefest.liernes.lievest.lifeful.lifeway.lifters.lifting.liftman.liftmen.liftoff.ligands.ligases.ligated.ligates.lighted.lighten.lighter.lightly.lignans.lignify.lignins.lignite.ligroin.ligulae.ligular.ligulas.ligules.ligures.likable.likened.likings.lilting.limacon.limbate.limbeck.limbers.limbier.limbing.limeade.limiest.liminal.limited.limiter.limites.limmers.limners.limning.limpers.limpest.limpets.limping.limpkin.limpsey.limulus.linable.linages.linalol.lindane.lindens.lindies.lineage.lineate.linecut.lineman.linemen.lineups.lingams.lingcod.lingers.lingier.lingoes.linguae.lingual.lingula.liniest.linings.linkage.linkboy.linkers.linking.linkman.linkmen.linkups.linnets.linocut.linsang.linseed.linseys.lintels.linters.lintier.linting.lintols.linuron.lioness.lionise.lionize.lipases.lipides.lipidic.lipless.liplike.lipoids.lipomas.lippens.lippers.lippier.lipping.lipread.liquate.liquefy.liqueur.liquids.liquify.liquors.liriope.lisente.lispers.lisping.lissome.listees.listels.listens.listers.listing.litchis.literal.lithely.lithest.lithias.lithify.lithium.lithoed.lithoid.lithops.litoral.litotes.litotic.litters.littery.littler.littles.liturgy.livable.livened.livener.livered.lividly.liviers.livings.livyers.lixivia.lizards.loaches.loaders.loading.loafers.loafing.loamier.loaming.loaners.loaning.loathed.loather.loathes.loathly.lobated.lobbers.lobbied.lobbies.lobbing.lobbyer.lobefin.lobelia.lobster.lobular.lobules.lobworm.locales.locally.located.locater.locates.locator.lochans.lochial.lockage.lockbox.lockers.lockets.locking.lockjaw.locknut.lockout.lockram.lockset.lockups.locoing.locoism.locular.loculed.locules.loculus.locusta.locusts.lodgers.lodging.loessal.loesses.lofters.loftier.loftily.lofting.logania.logbook.loggats.loggers.loggets.loggias.loggier.logging.loggish.logical.logiest.logions.logjams.logroll.logways.logwood.loiding.loiters.lollers.lollies.lolling.lollops.lollopy.lomeins.lomenta.loments.longans.longbow.longers.longest.longies.longing.longish.loobies.loofahs.lookers.looking.lookism.lookist.lookout.lookups.looming.looneys.loonier.loonies.loonily.loopers.loopier.loopily.looping.loosely.loosens.loosest.loosing.looters.looting.loppers.loppier.lopping.loquats.lording.lordoma.lorgnon.loricae.lorimer.loriner.lorises.lorries.losable.losings.lotions.lotoses.lotters.lottery.lotting.lotuses.loudens.loudest.loudish.lounged.lounger.lounges.louping.louring.lousier.lousily.lousing.louting.loutish.louvers.louvred.louvres.lovable.lovably.lovages.lovebug.loverly.lowball.lowborn.lowboys.lowbred.lowbrow.lowdown.lowered.lowings.lowland.lowlier.lowlife.lowlily.lowness.loyaler.loyally.loyalty.lozenge.lubbers.lucarne.lucence.lucency.lucerne.lucerns.lucidly.lucifer.lucites.luckier.luckies.luckily.lucking.luetics.luffing.lugeing.luggage.luggers.luggies.lugging.lugsail.lugworm.lullaby.lullers.lulling.lumbago.lumbars.lumbers.lumenal.luminal.lumpens.lumpers.lumpier.lumpily.lumping.lumpish.lunated.lunatic.lunched.luncher.lunches.lunette.lungans.lungees.lungers.lungful.lunging.lungyis.luniest.lunkers.lunting.lunulae.lunular.lunules.lupanar.lupines.lupulin.lupuses.lurched.lurcher.lurches.lurdane.lurdans.lurexes.luridly.lurkers.lurking.lushest.lushing.lusters.lustful.lustier.lustily.lustral.lustred.lustres.lustrum.lususes.luteins.luteous.lutfisk.luthern.luthier.lutings.lutists.luxated.luxates.lyceums.lychees.lychnis.lycopod.lyddite.lyingly.lyncean.lynched.lyncher.lynches.lyrated.lyrical.lyricon.lyrisms.lyrists.lysates.lysines.lysogen.macaber.macabre.macacos.macadam.macaque.macchia.macchie.machete.machine.machree.machzor.mackled.mackles.macrame.macrons.maculae.macular.maculas.maculed.macules.macumba.madames.madcaps.maddens.madders.maddest.madding.maddish.madeira.madness.madonna.madrasa.madrona.madrone.madrono.madtoms.maduros.madwort.madzoon.maenads.maestri.maestro.maffias.maffick.mafiosi.mafioso.maftirs.magalog.magenta.maggots.maggoty.magians.magical.magilps.maglevs.magmata.magnate.magneto.magnets.magnify.magnums.magpies.magueys.mahatma.mahjong.mahonia.mahouts.mahuang.mahzors.maidens.maidish.maihems.mailbag.mailbox.mailers.mailing.maillot.mailman.mailmen.maimers.maiming.maintop.majagua.majesty.majored.majorly.makable.makeups.makings.malacca.malaise.malanga.malaria.malarky.malates.maleate.malefic.malices.maligns.malines.malison.malkins.mallard.mallees.mallets.malleus.malling.mallows.malmier.malmsey.malodor.maltase.malteds.malthas.maltier.malting.maltols.maltose.mamboed.mamboes.mameyes.mamluks.mammals.mammary.mammate.mammati.mammees.mammers.mammets.mammeys.mammies.mammock.mammons.mammoth.mamzers.manacle.managed.manager.manages.manakin.mananas.manatee.manches.manchet.mandala.mandate.mandola.mandrel.mandril.maneges.mangaby.mangels.mangers.mangier.mangily.mangled.mangler.mangles.mangoes.mangold.manhole.manhood.manhunt.maniacs.manihot.manikin.manilas.manilla.manille.manioca.maniocs.maniple.manitos.manitou.manitus.mankind.manless.manlier.manlike.manlily.manmade.mannans.manners.manning.mannish.mannite.mannose.manpack.manrope.mansard.mansion.manteau.mantels.mantids.mantled.mantles.mantlet.mantram.mantrap.mantras.mantric.mantuas.manuals.manuary.manumit.manured.manurer.manures.manward.manwise.maplike.mappers.mapping.maquila.marabou.maracas.maranta.marasca.marauds.marbled.marbler.marbles.marcato.marcels.marched.marchen.marcher.marches.maremma.maremme.marengo.margays.margent.margins.marimba.marinas.mariner.marines.marital.markers.markets.markhor.marking.markkaa.markkas.markups.marlier.marline.marling.marlins.marlite.marmite.marmots.maroons.marplot.marquee.marques.marquis.marrams.marrano.marrers.married.marrier.marries.marring.marrons.marrows.marrowy.marsala.marshal.marshes.martens.martial.martian.marting.martini.martins.martlet.martyrs.martyry.marvels.masalas.mascara.mascons.mascots.mashers.mashies.mashing.masjids.maskegs.maskers.masking.masoned.masonic.masonry.masquer.masques.massage.masseur.massier.massifs.massing.massive.mastaba.masters.mastery.mastics.mastiff.masting.mastoid.matador.matched.matcher.matches.matchup.matelot.matiest.matilda.matinal.matinee.matings.matless.matrass.matrons.matsahs.matters.mattery.matting.mattins.mattock.mattoid.matured.maturer.matures.matzahs.matzohs.matzoon.matzoth.maudlin.maulers.mauling.maumets.maunder.mavises.mawkish.maxilla.maximal.maximin.maximum.maxixes.maxwell.maybird.maybush.maydays.mayhems.mayings.mayoral.maypole.maypops.mayvins.mayweed.mazards.mazedly.maziest.mazumas.mazurka.mazzard.meadows.meadowy.mealier.mealies.meander.meaners.meanest.meanies.meaning.measled.measles.measure.meatier.meatily.meatman.meatmen.medakas.medaled.meddled.meddler.meddles.medevac.mediacy.medials.medians.mediant.mediate.medical.medicks.medicos.medigap.medinas.mediums.medivac.medlars.medleys.medulla.medusae.medusal.medusan.medusas.meekest.meerkat.meeters.meeting.megabar.megabit.megahit.megapod.megaron.megasse.megaton.megilla.megilph.megilps.megohms.megrims.mehndis.meinies.meioses.meiosis.meiotic.meister.melamed.melange.melanic.melanin.melders.melding.melenas.melilot.melisma.melling.mellows.melodia.melodic.meloids.meltage.melters.melting.meltons.members.memento.memoirs.menaced.menacer.menaces.menages.menazon.menders.mendigo.mending.menfolk.menhirs.menials.menisci.menorah.menschy.menshen.menshes.mensing.mentees.menthol.mention.mentors.menudos.meouing.meowing.mercers.mercery.merches.mercies.mercury.mergees.mergers.merging.merinos.merises.merisis.merited.merlins.merlons.merlots.mermaid.meropia.meropic.merrier.merrily.mesally.mesarch.mescals.mesclun.meseems.meshier.meshing.meshuga.mesonic.mesquit.message.messans.messiah.messier.messily.messing.messman.messmen.mestees.mesteso.mestino.mestiza.mestizo.metages.metaled.metamer.metatag.metates.metazoa.meteors.metepas.metered.methane.methods.methoxy.methyls.metical.metiers.metisse.metonym.metopae.metopes.metopic.metopon.metrics.metrify.metring.metrist.mettled.mettles.metumps.mewlers.mewling.mezcals.mezquit.mezuzah.mezuzas.mezuzot.miaoued.miaowed.miasmal.miasmas.miasmic.miauled.micella.micelle.micells.miching.mickeys.mickler.mickles.micrify.microbe.microhm.microns.midairs.midcult.middays.middens.middies.middled.middler.middles.midgets.midguts.midiron.midland.midlegs.midlife.midline.midlist.midmost.midnoon.midrash.midribs.midriff.midship.midsize.midsole.midterm.midtown.midways.midweek.midwife.midyear.miffier.miffing.miggles.mignons.migrant.migrate.mihrabs.mikados.mikrons.mikvahs.mikvehs.mikvoth.miladis.milages.milchig.mildens.mildest.mildews.mildewy.milding.mileage.milfoil.miliary.milieus.milieux.militia.milkers.milkier.milkily.milking.milkman.milkmen.milksop.millage.milldam.millers.millets.millier.millime.milline.milling.million.millrun.milnebs.milords.milreis.milters.miltier.milting.mimbars.mimeoed.mimeses.mimesis.mimetic.mimical.mimicry.mimosas.minable.minaret.mincers.mincier.mincing.minders.mindful.minding.mindset.mineral.mingier.mingled.mingler.mingles.minibar.minibus.minicab.minicam.minicar.minikin.minilab.minimal.minimax.minimum.minings.minions.miniski.miniums.minivan.miniver.minnies.minnows.minorca.minored.minster.mintage.minters.mintier.minting.minuend.minuets.minuses.minuted.minuter.minutes.minutia.minxish.minyans.miocene.miotics.miracle.mirador.mirages.mirexes.miriest.mirkest.mirkier.mirkily.mirrors.misacts.misadds.misaims.misally.misaver.misbias.misbill.misbind.miscall.miscast.miscite.miscode.miscoin.miscook.miscopy.miscued.miscues.miscuts.misdate.misdeal.misdeed.misdeem.misdial.misdoer.misdoes.misdone.misdraw.misdrew.misease.miseats.misedit.miserly.misfeed.misfile.misfire.misfits.misform.misgave.misgive.misgrew.misgrow.mishaps.mishear.mishits.misjoin.miskals.miskeep.miskept.miskick.misknew.misknow.mislaid.mislain.mislays.mislead.mislies.mislike.mislive.mismade.mismake.mismark.mismate.mismeet.mismove.misname.mispage.mispart.mispens.misplan.misplay.mispled.misrate.misread.misrely.misrule.missaid.missals.missays.misseat.missels.missend.missent.missets.misshod.missies.missile.missing.mission.missive.missort.missout.misstep.misstop.missuit.mistake.mistbow.mistend.misterm.misters.misteuk.mistier.mistily.mistime.misting.mistook.mistral.mistune.mistype.misused.misuser.misuses.misword.miswrit.misyoke.mitered.miterer.mithers.mitiest.mitises.mitogen.mitoses.mitosis.mitotic.mitring.mitsvah.mittens.mitzvah.mixable.mixedly.mixible.mixture.mizunas.mizzens.mizzled.mizzles.moanful.moaning.moating.mobbers.mobbing.mobbish.mobbism.mobcaps.mobiles.mobster.mochila.mockers.mockery.mocking.mockups.modally.modeled.modeler.modemed.moderne.moderns.modesty.modicum.modioli.modiste.modular.modules.modulus.mofette.moggies.mogging.moghuls.moguled.mohairs.mohalim.mohawks.mohelim.moidore.moilers.moiling.moisten.moister.moistly.mojarra.molders.moldier.molding.molests.mollahs.mollies.mollify.mollusc.mollusk.molochs.molters.molting.momenta.momento.moments.momisms.mommies.momsers.momuses.momzers.monacid.monadal.monades.monadic.monarch.monarda.monaxon.moneran.moneyed.moneyer.mongers.mongoes.mongols.mongrel.moniker.monisms.monists.monitor.monkery.monkeys.monkish.monocle.monocot.monodic.monoecy.monofil.monolog.monomer.monopod.monsoon.monster.montage.montane.montero.monthly.monuron.mooched.moocher.mooches.moodier.moodily.moolahs.mooleys.moonbow.mooners.mooneye.moonier.moonily.mooning.moonish.moonlet.moonlit.moonset.moorage.moorhen.moorier.mooring.moorish.mooters.mooting.mopiest.mopokes.moppers.moppets.mopping.moraine.morales.morally.morassy.morceau.mordant.mordent.moreens.morelle.morello.morgans.morgens.morgues.morions.morning.morocco.moronic.morphed.morphia.morphic.morphin.morphos.morrion.morrows.morsels.mortals.mortars.mortary.mortice.mortify.mortise.morulae.morular.morulas.mosaics.moseyed.moshers.moshing.mosques.mossers.mossier.mossing.mostest.mothers.mothery.mothier.motific.motiles.motions.motived.motives.motivic.motleys.motlier.motmots.motored.motoric.mottled.mottler.mottles.mottoes.mouched.mouches.mouflon.mouille.moujiks.moulage.moulded.moulder.moulins.moulted.moulter.mounded.mounted.mounter.mourned.mourner.mousaka.mousers.mousier.mousily.mousing.moussed.mousses.mouthed.mouther.moutons.movable.movably.moviola.mowings.mozetta.mozette.muckers.muckier.muckily.mucking.muckles.muclucs.mucoids.mucosae.mucosal.mucosas.mucuses.mudbugs.mudcaps.mudcats.mudders.muddied.muddier.muddies.muddily.mudding.muddled.muddler.muddles.mudfish.mudflap.mudflat.mudflow.mudhens.mudhole.mudlark.mudpack.mudrock.mudroom.mudsill.mueddin.mueslis.muezzin.muffing.muffins.muffled.muffler.muffles.mugfuls.muggars.muggees.muggers.muggier.muggily.mugging.muggins.muggurs.mughals.mugwort.mugwump.muhlies.mukluks.muktuks.mulatto.mulched.mulches.mulcted.muletas.mullahs.mullein.mullens.mullers.mullets.mulleys.mulling.mullion.mullite.mullock.multure.mumbled.mumbler.mumbles.mummers.mummery.mummied.mummies.mummify.mumming.mumpers.mumping.munched.muncher.munches.mundane.mungoes.munnion.munster.munting.muntins.muntjac.muntjak.muonium.muraled.murders.mureins.murexes.muriate.murices.murines.murkest.murkier.murkily.murmurs.murrain.murreys.murrhas.murries.murrine.murther.muscats.muscids.muscled.muscles.museful.musette.museums.mushers.mushier.mushily.mushing.musical.musicks.musings.musjids.muskegs.muskets.muskier.muskies.muskily.muskits.muskrat.muslins.muspike.mussels.mussier.mussily.mussing.mustang.mustard.mustees.musters.mustier.mustily.musting.mutable.mutably.mutagen.mutants.mutases.mutated.mutates.mutches.mutedly.mutined.mutines.mutisms.mutters.muttons.muttony.mutuals.mutuels.mutular.mutules.muumuus.muzhiks.muzjiks.muzzier.muzzily.muzzled.muzzler.muzzles.myalgia.myalgic.myceles.mycelia.mycoses.mycosis.mycotic.myeline.myelins.myeloid.myeloma.myiases.myiasis.mynheer.myology.myomata.myopias.myopies.myosins.myosote.myotics.myotome.myriads.myricas.myrrhic.myrtles.mysosts.mystery.mystics.mystify.mythier.myxomas.nabbers.nabbing.nacelle.nadiral.naevoid.naffing.naganas.naggers.naggier.nagging.naiades.nailers.nailing.nailset.naively.naivest.naivete.naivety.nakeder.nakedly.namable.nametag.nancies.nandina.nandins.nanisms.nankeen.nankins.nannies.napalms.naphtha.naphtol.napkins.napless.nappers.nappier.nappies.napping.narcein.narcism.narcist.narcoma.narcose.nardine.nargile.narking.narrate.narrows.narthex.narwals.narwhal.nasally.nascent.nasions.nastier.nasties.nastily.nations.natives.natrium.natrons.natters.nattier.nattily.natural.natured.natures.naughts.naughty.nauplii.nauseas.nautili.navaids.navally.navette.navvies.naysaid.naysays.nearest.nearing.neatens.neatest.neatnik.nebbish.nebulae.nebular.nebulas.neckers.necking.necktie.necrose.nectars.nectary.neddies.needers.needful.needier.needily.needing.needled.needler.needles.negated.negater.negates.negaton.negator.neglect.neglige.negroid.negroni.neguses.neighed.neither.nektons.nellies.nelsons.nelumbo.nematic.nemeses.nemesis.neocons.neogene.neolith.neology.neonate.neoteny.neotype.nepetas.nephews.nephric.nephron.nepotic.nerdier.nerdish.nereids.neritic.nerolis.nervate.nervier.nervily.nervine.nerving.nervous.nervule.nervure.nesters.nesting.nestled.nestler.nestles.nestors.netizen.netless.netlike.netsuke.netters.nettier.netting.nettled.nettler.nettles.network.neurine.neuroid.neuroma.neurone.neurons.neurula.neustic.neuston.neuters.neutral.neutron.newbies.newborn.newmown.newness.newsboy.newsier.newsies.newsman.newsmen.newtons.nexuses.niacins.nibbing.nibbled.nibbler.nibbles.niblick.niblike.niching.nickels.nickers.nicking.nickled.nickles.nicoise.nicotin.nictate.nidated.nidates.nidgets.niduses.niellos.niffers.niftier.nifties.niftily.nigella.niggard.niggled.niggler.niggles.nighest.nighing.nightie.nightly.nigrify.nilgais.nilgaus.nilghai.nilghau.nilling.nimbler.nimiety.nimious.nimming.nimrods.ninepin.ninnies.ninthly.niobate.niobite.niobium.niobous.nippers.nippier.nippily.nipping.nippled.nipples.nirvana.nitchie.niterie.nitinol.nitpick.nitrate.nitride.nitrids.nitrify.nitrile.nitrils.nitrite.nitroso.nitrous.nittier.nitwits.niveous.nobbier.nobbily.nobbled.nobbler.nobbles.noblest.nocking.noctuid.noctule.nocturn.nocuous.nodally.nodders.noddies.nodding.noddled.noddles.nodical.nodular.nodules.nogging.noggins.noirish.noisier.noisily.noising.noisome.nomadic.nomarch.nombles.nombril.nominal.nominee.nomisms.nonacid.nonages.nonagon.nonarts.nonbank.nonbody.nonbook.noncash.noncola.noncoms.noncore.nondrip.nondrug.nonegos.nonfact.nonfans.nonfarm.nonfood.nonfuel.nongame.nongays.nonheme.nonhero.nonhome.noniron.nonjury.nonlife.nonmeat.nonnews.nonoily.nonoral.nonpaid.nonpast.nonpeak.nonplay.nonplus.nonpoor.nonpros.nonself.nonsked.nonskid.nonslip.nonstop.nonsuch.nonsuit.nonuple.nonuser.nonuses.nonwage.nonwars.nonwool.nonword.nonwork.nonzero.noodged.noodges.noodled.noodles.noogies.nookies.noonday.nooning.noosers.noosing.nopales.noplace.norites.noritic.norland.normals.norther.nosebag.nosegay.noshers.noshing.nosiest.nosings.nostocs.nostril.nostrum.notable.notably.notated.notates.notched.notcher.notches.notedly.notepad.nothing.noticed.noticer.notices.notions.nougats.noughts.noumena.nourish.nouveau.novella.novelle.novelly.novelty.novenae.novenas.novices.nowhere.nowness.noxious.noyades.nozzles.nuanced.nuances.nubbier.nubbins.nubbles.nubucks.nucelli.nuchals.nucleal.nuclear.nuclein.nucleon.nucleus.nuclide.nudgers.nudging.nudisms.nudists.nudnick.nudniks.nudzhed.nudzhes.nuggets.nuggety.nullahs.nullify.nulling.nullity.numbats.numbers.numbest.numbing.numbles.numeral.numeric.nummary.nunatak.nuncios.nuncles.nunlike.nunnery.nunnish.nuptial.nurling.nursers.nursery.nursing.nurture.nutated.nutates.nutcase.nutgall.nutlets.nutlike.nutmeat.nutmegs.nutpick.nutrias.nutsier.nutters.nuttier.nuttily.nutting.nutwood.nuzzled.nuzzler.nuzzles.nylghai.nylghau.nymphae.nymphal.nymphet.nymphos.oakiest.oaklike.oakmoss.oarfish.oarless.oarlike.oarlock.oarsman.oarsmen.oatcake.oatlike.oatmeal.obconic.obelias.obelise.obelisk.obelism.obelize.obentos.obesely.obesity.obeyers.obeying.obiisms.objects.oblasti.oblasts.oblates.obliged.obligee.obliger.obliges.obligor.oblique.oblongs.obloquy.oboists.obovate.obovoid.obscene.obscure.obsequy.observe.obtains.obtests.obtrude.obtunds.obtuser.obverse.obverts.obviate.obvious.ocarina.occiput.occlude.occults.oceanic.ocellar.ocellus.oceloid.ocelots.ochered.ochreae.ochring.ochroid.ochrous.ocicats.ocreate.octadic.octagon.octanes.octanol.octants.octaval.octaves.octavos.octette.octopod.octopus.octrois.octuple.octuply.oculars.oculist.odalisk.oddball.oddment.oddness.odonate.odorant.odorful.odorize.odorous.odyssey.oedemas.oedipal.oenomel.oersted.oestrin.oestrum.oestrus.oeuvres.offbeat.offcast.offcuts.offence.offends.offense.offered.offerer.offeror.offhand.officer.offices.offings.offline.offload.offramp.offsets.offside.oftener.ogdoads.oghamic.ogreish.ogreism.ogrisms.ohmages.oidioid.oilbird.oilcamp.oilcans.oilcups.oilhole.oiliest.oilseed.oilskin.oilways.oinking.oinomel.okaying.oldness.oldster.oldwife.oleates.olefine.olefins.oleines.olestra.olicook.olingos.olivary.olivine.ologies.ologist.oloroso.omelets.omening.omental.omentum.omicron.omikron.ominous.omitted.omitter.omnibus.omnific.omphali.onagers.onanism.onanist.onboard.onefold.oneiric.oneness.onerier.onerous.oneself.onetime.ongoing.onloads.onshore.onstage.onwards.oocysts.oocytes.oodlins.oogonia.oolites.ooliths.oolitic.oologic.oolongs.oomiack.oomiacs.oomiaks.oompahs.oophyte.ooralis.oosperm.oospore.ootheca.ooziest.opacify.opacity.opaline.opaqued.opaquer.opaques.openers.openest.opening.operand.operant.operate.operons.operose.ophites.ophitic.opiated.opiates.opining.opinion.opioids.opossum.oppidan.opposed.opposer.opposes.oppress.oppugns.opsonic.opsonin.optical.optimal.optimes.optimum.options.opulent.opuntia.oquassa.oraches.oracles.oralism.oralist.orality.oranges.orangey.orating.oration.orators.oratory.oratrix.orbiest.orbital.orbited.orbiter.orbless.orceins.orchard.orchids.orchils.orcinol.ordains.ordeals.ordered.orderer.orderly.ordinal.ordines.ordures.orectic.oregano.oreides.orfrays.organdy.organic.organon.organum.organza.orgeats.orgiast.orgones.orients.orifice.origami.origans.origins.orioles.orishas.orisons.ormolus.orogeny.oroides.orology.orotund.orphans.orphism.orphrey.orpines.orrices.orrises.ortolan.oscines.oscular.oscules.osculum.osetras.osiered.osmatic.osmious.osmiums.osmolal.osmolar.osmoles.osmosed.osmoses.osmosis.osmotic.osmunda.osmunds.ospreys.osseins.osseous.ossetra.ossicle.ossific.ossuary.osteoid.osteoma.ostiary.ostiole.ostlers.ostmark.ostoses.ostosis.ostraca.ostraka.ostrich.otalgia.otalgic.otocyst.otolith.otology.ottavas.ottoman.ouabain.ouching.oughted.ouguiya.ourangs.ouraris.ourebis.ourself.ousters.ousting.outacts.outadds.outages.outasks.outback.outbake.outbark.outbawl.outbeam.outbegs.outbids.outbrag.outbred.outbulk.outburn.outbuys.outcall.outcast.outchid.outcity.outcome.outcook.outcrop.outcrow.outdare.outdate.outdoer.outdoes.outdone.outdoor.outdrag.outdraw.outdrew.outdrop.outduel.outearn.outeats.outecho.outface.outfall.outfast.outfawn.outfeel.outfelt.outfind.outfire.outfish.outfits.outflew.outflow.outfool.outfoot.outgain.outgave.outgaze.outgive.outglow.outgnaw.outgoes.outgone.outgrew.outgrin.outgrow.outguns.outgush.outhaul.outhear.outhits.outhowl.outhunt.outings.outjinx.outjump.outjuts.outkeep.outkept.outkick.outkill.outkiss.outlaid.outlain.outland.outlast.outlaws.outlays.outlead.outleap.outlets.outlier.outlies.outline.outlive.outlook.outlove.outmans.outmode.outmost.outmove.outpace.outpass.outpity.outplan.outplay.outplod.outplot.outpoll.outport.outpost.outpour.outpray.outpull.outpush.outputs.outrace.outrage.outrang.outrank.outrate.outrave.outread.outride.outrigs.outring.outroar.outrock.outrode.outroll.outroot.outrows.outrung.outruns.outrush.outsaid.outsail.outsang.outsays.outseen.outsees.outsell.outsert.outsets.outshot.outside.outsing.outsins.outsits.outsize.outsoar.outsold.outsole.outspan.outsped.outstay.outsulk.outsung.outswam.outswim.outswum.outtake.outtalk.outtask.outtell.outtold.outtrot.outturn.outvied.outvies.outvote.outwait.outwalk.outward.outwars.outwash.outwear.outweep.outwent.outwept.outwile.outwill.outwind.outwish.outwith.outwits.outwore.outwork.outworn.outwrit.outyell.outyelp.ovality.ovarial.ovarian.ovaries.ovately.ovation.overact.overage.overall.overapt.overarm.overate.overawe.overbed.overbet.overbid.overbig.overbuy.overcoy.overcut.overdid.overdog.overdry.overdub.overdue.overdye.overeat.overfar.overfat.overfed.overfit.overfly.overhot.overing.overjoy.overlap.overlax.overlay.overlet.overlie.overlit.overman.overmen.overmix.overnew.overpay.overply.overran.overrun.oversad.oversaw.oversea.oversee.overset.oversew.oversup.overtax.overtip.overtly.overtop.overuse.overwet.ovicide.oviduct.oviform.ovipara.ovisacs.ovoidal.ovonics.ovulary.ovulate.owllike.ownable.oxalate.oxazine.oxblood.oxcarts.oxfords.oxheart.oxidant.oxidase.oxidate.oxidise.oxidize.oxtails.oxyacid.oxygens.oxymora.oxyphil.oxysalt.oxysome.oxytone.oyesses.oysters.ozalids.ozonate.ozonide.ozonise.ozonize.ozonous.pablums.pabular.pabulum.pachisi.pachuco.paciest.pacific.package.packers.packets.packing.packman.packmen.packwax.paction.padauks.padders.paddies.padding.paddled.paddler.paddles.paddock.padlock.padnags.padouks.padrone.padroni.padshah.paellas.paesani.paesano.paesans.pageant.pageboy.pageful.paginal.pagings.pagodas.pagurid.pahlavi.paiking.pailful.painful.paining.painted.painter.pairing.paisana.paisano.paisans.paisley.pajamas.pakehas.pakoras.palabra.palaced.palaces.paladin.palapas.palatal.palates.palaver.palazzi.palazzo.paleate.paletot.palette.palfrey.paliest.palikar.palings.pallets.pallial.pallier.palling.pallium.pallors.palmary.palmate.palmers.palmful.palmier.palming.palmist.palmtop.palmyra.palooka.palpate.palping.palship.palsied.palsies.palters.paludal.pampean.pampero.pampers.panacea.panache.panadas.panamas.pancake.panchax.pandani.pandect.panders.pandied.pandies.pandits.pandoor.pandora.pandore.pandour.pandura.paneled.panfish.panfuls.pangene.pangens.panging.pangram.panicky.panicle.panicum.paniers.paninis.panners.pannier.panning.panocha.panoche.panoply.panpipe.pansies.panther.panties.pantile.panting.pantoum.panzers.papadam.papadom.papadum.papains.papally.papayan.papayas.papered.paperer.paphian.papilla.papisms.papists.papoose.pappier.pappies.pappose.pappous.paprica.paprika.papulae.papular.papules.papyral.papyrus.parable.paraded.parader.parades.parador.parados.paradox.paragon.paramos.parangs.parapet.paraphs.parasol.parbake.parboil.parcels.parched.parches.pardahs.pardine.pardner.pardons.pareira.parents.parerga.pareses.paresis.paretic.parfait.pargets.parging.pariahs.parians.parings.parises.parkade.parkers.parking.parkway.parlays.parleys.parling.parlors.parlour.parlous.parodic.parodoi.parodos.paroled.parolee.paroles.paronym.parotic.parotid.parquet.parrals.parrels.parried.parrier.parries.parring.parrots.parroty.parsecs.parsers.parsing.parsley.parsnip.parsons.partake.partans.partial.partied.partier.parties.parting.partita.partite.partlet.partner.partons.partook.partway.partyer.paruras.parures.parvenu.parvise.pascals.paschal.pashing.pasquil.passade.passado.passage.passant.passels.passers.passing.passion.passive.passkey.pastels.pastern.pasters.pasteup.pastier.pasties.pastils.pastime.pastina.pasting.pastors.pasture.patacas.patagia.patamar.patched.patcher.patches.patella.patency.patents.pathway.patient.patinae.patinas.patined.patines.patness.patriot.patrols.patrons.patroon.patsies.pattens.pattern.patters.patties.patting.patzers.paucity.paughty.paulins.paunchy.paupers.pausers.pausing.pavanes.pavings.paviors.paviour.paviser.pavises.pavisse.pavlova.pawkier.pawkily.pawnage.pawnees.pawners.pawning.pawnors.pawpaws.payable.payably.payback.paydays.payload.payment.paynims.payoffs.payolas.payouts.payroll.peached.peacher.peaches.peacing.peacoat.peacock.peafowl.peahens.peakier.peaking.peakish.pealike.pealing.peanuts.pearled.pearler.pearter.peartly.peasant.peascod.peatier.peaveys.peavies.pebbled.pebbles.peccant.peccary.peccavi.pechans.peching.peckers.peckier.pecking.peckish.pectase.pectate.pectens.pectins.pectize.peculia.pedagog.pedaled.pedaler.pedalos.pedants.peddled.peddler.peddles.pedicab.pedicel.pedicle.pedlars.pedlary.pedlers.pedlery.pedocal.peebeen.peeking.peelers.peeling.peening.peepers.peeping.peepuls.peerage.peeress.peeries.peering.peeving.peevish.peewees.peewits.pegging.pegless.peglike.peining.peising.pekepoo.pelages.pelagic.pelican.pelisse.pelites.pelitic.pellets.pelmets.peloria.peloric.pelorus.pelotas.peloton.peltast.peltate.pelters.pelting.pelvics.pembina.pemican.pemphix.penally.penalty.penance.penangs.penates.pencels.pencils.pendant.pendent.pending.penguin.penicil.penises.penlite.penname.pennant.pennate.penners.pennies.pennine.penning.pennons.penoche.pensees.pensile.pensils.pension.pensive.penster.pentads.pentane.pentene.pentode.pentose.pentyls.penuche.penuchi.penults.peonage.peonies.peonism.peopled.peopler.peoples.pepinos.peplums.peppers.peppery.peppier.peppily.pepping.pepsine.pepsins.peptalk.peptics.peptide.peptids.peptize.peptone.peracid.percale.percent.percept.perched.percher.perches.percoid.percuss.perdues.perdure.pereion.pereons.perfect.perfidy.perform.perfume.perfumy.perfuse.pergola.perhaps.periapt.peridia.peridot.perigee.perigon.periled.perilla.perinea.periods.perique.peritus.periwig.perjure.perjury.perkier.perkily.perking.perkish.perlite.permian.perming.permits.permute.pernods.peroral.peroxid.perpend.perpent.perplex.perries.perrons.persalt.persist.persona.persons.perspex.pertain.pertest.perturb.peruked.perukes.perusal.perused.peruser.peruses.pervade.pervert.pesades.pesetas.pesewas.peskier.peskily.pessary.pesters.pestier.pestled.pestles.petaled.petards.petasos.petasus.petcock.petered.petiole.petites.petnaps.petrale.petrels.petrify.petrols.petrous.petsais.petters.pettier.pettily.petting.pettish.pettled.pettles.petunia.pewters.peyotes.peyotls.peytral.peytrel.pfennig.phaeton.phalanx.phallic.phallus.phantom.pharaoh.pharynx.phaseal.phasing.phasmid.phatter.phellem.phenate.phenols.phenoms.phenoxy.phenyls.philter.philtra.philtre.phlegms.phlegmy.phloems.phloxes.phobias.phobics.phocine.phoebes.phoebus.phoenix.phonate.phoneme.phoneys.phonics.phonied.phonier.phonies.phonily.phoning.phonons.phorate.phoresy.photics.photoed.photogs.photons.phrasal.phrased.phrases.phratry.phreaks.phrenic.phrensy.phyllos.physeds.physics.phytane.phytins.phytoid.phytols.phytons.piaffed.piaffer.piaffes.pianism.pianist.piasaba.piasava.piaster.piastre.piazzas.pibroch.picacho.picador.picante.picaras.picaros.piccata.piccolo.piceous.pickaxe.pickeer.pickers.pickets.pickier.picking.pickled.pickles.pickoff.pickups.picnics.picolin.picoted.picotee.picquet.picrate.picrite.picture.piddled.piddler.piddles.piddock.pidgins.piebald.piecers.piecing.piefort.piehole.pierced.piercer.pierces.pierogi.pierrot.pieties.pietism.pietist.piffled.piffles.pigboat.pigeons.pigfish.piggery.piggier.piggies.pigging.piggins.piggish.piglets.piglike.pigment.pigmies.pignoli.pignora.pignuts.pigouts.pigpens.pigskin.pigsney.pigtail.pigweed.pikakes.pikeman.pikemen.pilaffs.pileate.pileous.pileups.pilfers.pilgrim.pilings.pillage.pillars.pillbox.pilling.pillion.pillory.pillows.pillowy.piloted.pilsner.pilular.pilules.pimento.pimping.pimpled.pimples.pinangs.pinatas.pinball.pinbone.pincers.pinched.pincher.pinches.pinders.pineals.pinenes.pinesap.pinetum.pinfish.pinfold.pingers.pinging.pingoes.pinguid.pinhead.pinhole.piniest.pinions.pinites.pinitol.pinkens.pinkers.pinkest.pinkeye.pinkeys.pinkies.pinking.pinkish.pinkoes.pinnace.pinnate.pinners.pinnies.pinning.pinnula.pinnule.pinocle.pinoles.pinones.pintada.pintado.pintail.pintano.pintles.pintoes.pinwale.pinweed.pinwork.pinworm.pinyons.piolets.pioneer.piosity.piously.pipages.pipeage.pipeful.pipette.pipiest.pipings.pipkins.pipping.pippins.piquant.piquets.piquing.piragua.piranas.piranha.pirated.pirates.piratic.pirayas.pirogen.piroghi.pirogue.pirojki.piroque.piscary.piscina.piscine.pishers.pishing.pishoge.pismire.pissant.pissoir.pistils.pistole.pistols.pistons.pistous.pitapat.pitayas.pitched.pitcher.pitches.piteous.pitfall.pithead.pithier.pithily.pithing.pitiers.pitiful.pitmans.pitsaws.pitters.pittery.pitting.pitying.pivotal.pivoted.pixyish.pizazzy.pizzazz.pizzles.placard.placate.placebo.placers.placets.placing.placket.placoid.plafond.plagued.plaguer.plagues.plaguey.plaices.plaided.plained.plainer.plainly.plaints.plaited.plaiter.planate.planche.planers.planets.planing.planish.planked.planned.planner.plantar.planted.planter.planula.plaques.plashed.plasher.plashes.plasmas.plasmic.plasmid.plasmin.plasmon.plaster.plastic.plastid.platane.platans.plateau.platens.platers.platier.platies.platina.plating.platoon.platted.platter.platypi.plaudit.playact.playday.players.playful.playing.playlet.playoff.playpen.pleaded.pleader.pleased.pleaser.pleases.pleated.pleater.plectra.pledged.pledgee.pledger.pledges.pledget.pledgor.pleiads.plenary.plenish.plenism.plenist.plenums.pleonal.pleonic.pleopod.plessor.pleurae.pleural.pleuras.pleuron.plexors.pliable.pliably.pliancy.plicate.plights.plimsol.plinked.plinker.plinths.pliskie.plisses.plodded.plodder.plonked.plopped.plosion.plosive.plotted.plotter.plotzed.plotzes.ploughs.plovers.plowboy.plowers.plowing.plowman.plowmen.ploying.plucked.plucker.plugged.plugger.plugola.plumage.plumate.plumbed.plumber.plumbic.plumbum.plumier.pluming.plummer.plummet.plumose.plumped.plumpen.plumper.plumply.plumule.plunder.plunged.plunger.plunges.plunked.plunker.plurals.plusher.plushes.plushly.plusses.pluteus.plutons.pluvial.pluvian.plywood.pneumas.poached.poacher.poaches.poblano.pochard.pockets.pockier.pockily.pocking.pocosen.pocosin.pocoson.podagra.podcast.podding.podesta.podgier.podgily.podites.poditic.podiums.podlike.podsols.podzols.poesies.poetess.poetics.poetise.poetize.pogonia.pogonip.pogroms.poinded.pointed.pointer.pointes.poisers.poising.poisons.poitrel.pokable.pokiest.polaron.polders.poleaxe.polecat.polemic.polenta.poleyns.policed.policer.polices.politer.politic.polkaed.pollack.pollard.pollees.pollens.pollers.polling.pollist.pollock.pollute.poloist.polycot.polyene.polygon.polymer.polynya.polynyi.polyols.polyoma.polyped.polypod.polypus.pomaces.pomaded.pomades.pomatum.pomelos.pomfret.pommels.pommies.pompano.pompoms.pompons.pompous.ponchos.poncing.ponders.ponding.pongees.pongids.ponging.poniard.pontiff.pontils.pontine.pontons.pontoon.ponying.pooched.pooches.poodles.pooftah.poofter.poohing.poolers.pooling.pooping.poorest.poorish.pooters.pooting.popcorn.popedom.popeyed.popguns.poplars.poplins.popover.poppers.poppets.poppied.poppies.popping.poppled.popples.popsies.popular.porches.porcine.porcini.porcino.porgies.porisms.porkers.porkier.porkies.porking.porkpie.pornier.porrect.portage.portals.portend.portent.porters.portico.porting.portion.portray.posable.posadas.poseurs.poshest.posited.posoles.possess.possets.possums.postage.postals.postbag.postbox.postboy.postdoc.posteen.postern.posters.postfix.posties.posting.postins.postman.postmen.postops.posttax.posture.postwar.potable.potages.potamic.potboil.potboys.poteens.potence.potency.potfuls.pothead.potheen.potherb.pothers.pothole.pothook.potiche.potions.potlach.potlike.potline.potluck.potpies.potshot.potsies.pottage.potteen.potters.pottery.pottier.potties.potting.pottles.potzers.pouched.pouches.pouffed.pouffes.poulard.poulter.poultry.pounced.pouncer.pounces.poundal.pounded.pounder.pourers.pouring.poussie.pouters.poutful.poutier.poutine.pouting.poverty.powders.powdery.powered.powters.powwows.poxiest.pozoles.practic.praetor.prairie.praised.praiser.praises.prajnas.praline.pranced.prancer.prances.pranged.pranked.praters.prating.prattle.prawned.prawner.prayers.praying.preachy.preacts.preaged.preamps.preanal.prearms.preaver.prebade.prebake.prebend.prebids.prebill.prebind.preboil.prebook.preboom.prebuys.precast.precava.precede.precent.precept.precess.precipe.precise.precode.precook.precool.precoup.precure.precuts.predate.predawn.predial.predict.predive.predusk.preedit.preeing.preemie.preempt.preened.preener.prefabs.preface.prefade.prefect.prefers.prefile.prefire.preform.prefund.pregame.preheat.prelacy.prelate.prelect.prelife.prelims.preload.prelude.premade.premeal.premeds.premeet.premier.premies.premise.premiss.premium.premixt.premold.premolt.premune.prename.prenoon.preoral.prepack.prepaid.prepare.prepave.prepays.prepill.preplan.prepped.preppie.prepreg.prepuce.prepupa.prequel.prerace.preriot.prerock.presage.presale.presell.present.presets.preship.preshow.preside.presift.presoak.presold.presong.presort.pressed.presser.presses.pressor.prester.prestos.presume.pretape.preteen.pretell.pretend.preterm.pretest.pretext.pretold.pretors.pretrim.pretype.pretzel.prevail.prevent.preverb.preview.previse.prevued.prevues.prewarm.prewarn.prewash.prewire.prework.preworn.prewrap.prexies.preyers.preying.priapic.priapus.pricers.pricier.pricily.pricing.pricked.pricker.pricket.prickle.prickly.priding.priests.prigged.prilled.primacy.primage.primary.primate.primely.primero.primers.primine.priming.primmed.primmer.primped.primsie.primula.princes.princox.prinked.prinker.printed.printer.priorly.prisere.prising.prisons.prissed.prisses.prithee.privacy.private.privets.privier.privies.privily.privity.prizers.prizing.proband.probang.probate.probers.probing.probits.probity.problem.procarp.proceed.process.proctor.procure.prodded.prodder.prodigy.prodrug.produce.product.proette.profane.profess.proffer.profile.profits.profuse.progeny.progged.progger.program.project.projets.prolans.prolate.prolegs.proline.prologs.prolong.promine.promise.promoed.promote.prompts.pronate.pronely.pronged.pronota.pronoun.proofed.proofer.propane.propels.propend.propene.propers.prophet.propine.propjet.propman.propmen.propone.propose.propped.propria.propyla.propyls.prorate.prosaic.prosect.prosers.prosier.prosily.prosing.prosody.prosoma.prosper.prosses.prossie.prostie.protean.proteas.protect.protege.proteid.protein.protend.protest.proteus.protist.protium.protons.protyle.protyls.prouder.proudly.proverb.provers.provide.proving.proviso.provoke.provost.prowess.prowest.prowled.prowler.proxies.proximo.prudent.prudery.prudish.pruners.pruning.prurigo.prussic.prutoth.prythee.psalmed.psalmic.psalter.psaltry.psammon.pschent.pseudos.pshawed.psoatic.psocids.psyched.psyches.psychic.psychos.psyllas.psyllid.psywars.pterins.pteryla.ptisans.ptomain.ptyalin.puberal.puberty.publics.publish.puccoon.puckers.puckery.puckish.pudding.puddled.puddler.puddles.pudency.pudenda.pudgier.pudgily.pueblos.puerile.puffers.puffery.puffier.puffily.puffing.puffins.pugaree.puggier.pugging.puggish.puggree.pugmark.pugrees.puisnes.pulings.pullers.pullets.pulleys.pulling.pullman.pullout.pullups.pulpers.pulpier.pulpily.pulping.pulpits.pulpous.pulques.pulsant.pulsars.pulsate.pulsers.pulsing.pulsion.pulvini.pumelos.pumiced.pumicer.pumices.pummelo.pummels.pumpers.pumping.pumpkin.punched.puncher.punches.pundits.pungent.pungled.pungles.puniest.punkahs.punkers.punkest.punkeys.punkier.punkies.punkins.punkish.punners.punnets.punnier.punning.punster.punters.punties.punting.puparia.pupated.pupates.pupfish.pupilar.puppets.puppies.pupping.puranas.puranic.purdahs.purfled.purfler.purfles.purgers.purging.purines.purisms.purists.puritan.purlieu.purline.purling.purlins.purloin.purpled.purpler.purples.purport.purpose.purpura.purpure.purring.pursers.pursier.pursily.pursing.pursued.pursuer.pursues.pursuit.purtier.purveys.purview.pushers.pushful.pushier.pushily.pushing.pushpin.pushrod.pushups.pusleys.puslike.pussier.pussley.pustule.putamen.putdown.putlogs.putoffs.putouts.putrefy.puttees.putters.puttied.puttier.putties.putting.putzing.puzzled.puzzler.puzzles.pyaemia.pyaemic.pyemias.pygidia.pygmean.pygmies.pygmoid.pyjamas.pyknics.pyloric.pylorus.pyralid.pyramid.pyrenes.pyretic.pyrexes.pyrexia.pyrexic.pyridic.pyrites.pyritic.pyrogen.pyrolas.pyrones.pyropes.pyrosis.pyrrhic.pyrrole.pyrrols.pythons.pyurias.pyxides.pyxidia.qabalah.qabalas.qindars.qintars.qiviuts.quacked.quadded.quadrat.quadric.quaeres.quaffed.quaffer.quaggas.quahaug.quahogs.quaichs.quaighs.quailed.quakers.quakier.quakily.quaking.qualify.quality.quamash.quangos.quantal.quanted.quantic.quantum.quarrel.quartan.quarter.quartes.quartet.quartic.quartos.quasars.quashed.quasher.quashes.quasses.quassia.quassin.quatres.quavers.quavery.quayage.qubytes.queened.queenly.queered.queerer.queerly.queleas.quelled.queller.querida.queried.querier.queries.querist.quested.quester.questor.quetzal.queuers.queuing.quezals.quibble.quiches.quicken.quicker.quickie.quickly.quieted.quieten.quieter.quietly.quietus.quillai.quilled.quillet.quilted.quilter.quinary.quinate.quinces.quinela.quinina.quinine.quinins.quinnat.quinoas.quinoid.quinols.quinone.quintal.quintan.quintar.quintas.quintes.quintet.quintic.quintin.quipped.quipper.quippus.quiring.quirked.quirted.quitted.quitter.quittor.quivers.quivery.quixote.quizzed.quizzer.quizzes.quohogs.quoined.quoited.quokkas.quomodo.quondam.quorums.quoters.quoting.qurshes.qwertys.rabatos.rabbets.rabbies.rabbins.rabbits.rabbity.rabbled.rabbler.rabbles.rabboni.rabidly.raccoon.racemed.racemes.racemic.raceway.rachets.rachial.raciest.racings.racisms.racists.rackers.rackets.rackety.rackful.racking.racoons.racquet.radding.raddled.raddles.radiale.radials.radians.radiant.radiate.radical.radicel.radices.radicle.radioed.radiums.radixes.radomes.radulae.radular.radulas.raffias.raffish.raffled.raffler.raffles.rafters.rafting.ragbags.raggedy.raggees.raggies.ragging.raggles.raglans.ragouts.ragtags.ragtime.ragtops.ragweed.ragwort.raiders.raiding.railbus.railcar.railers.railing.railway.raiment.rainbow.rainier.rainily.raining.rainout.raisers.raising.raisins.raisiny.rakeoff.rallied.rallier.rallies.ralline.rallyes.ralphed.ramadas.ramblas.rambled.rambler.rambles.ramekin.ramenta.ramilie.ramjets.rammers.rammier.ramming.rammish.ramonas.rampage.rampant.rampart.rampike.ramping.rampion.rampole.ramrods.ramsons.ramtils.ranched.rancher.ranches.ranchos.rancors.rancour.randans.randier.randies.randoms.rangers.rangier.ranging.rankers.rankest.ranking.rankish.rankled.rankles.ranpike.ransack.ransoms.ranters.ranting.ranular.ranulas.raphias.raphide.rapider.rapidly.rapiers.rapines.rapists.rappees.rappels.rappers.rapping.rappini.rapport.raptors.rapture.rarebit.rasbora.rascals.rashers.rashest.raspers.raspier.rasping.raspish.rassled.rassles.rasters.rasures.ratable.ratably.ratafee.ratafia.ratatat.ratbags.ratches.ratchet.ratfink.ratfish.rathole.ratines.ratings.rations.ratites.ratlike.ratline.ratlins.ratoons.rattail.rattans.ratteen.rattens.ratters.rattier.ratting.rattish.rattled.rattler.rattles.rattons.rattoon.rattrap.raucity.raucous.raunchy.ravaged.ravager.ravages.raveled.raveler.ravelin.ravelly.ravened.ravener.ravined.ravines.ravings.ravioli.rawhide.rawness.rayless.raylike.razored.razzing.reached.reacher.reaches.reacted.reactor.readapt.readded.readers.readied.readier.readies.readily.reading.readmit.readopt.readorn.readout.reaffix.reagent.reagins.realest.realgar.realign.realise.realism.realist.reality.realize.reallot.realter.realtor.reamers.reaming.reannex.reapers.reaping.reapply.rearers.reargue.rearing.rearmed.reasons.reavail.reavers.reaving.reavows.reawake.reawoke.rebaits.rebated.rebater.rebates.rebatos.rebecks.rebegan.rebegin.rebegun.rebills.rebinds.rebirth.reblend.reblent.rebloom.reboant.reboard.reboils.rebooks.reboots.rebored.rebores.rebound.rebozos.rebreed.rebuffs.rebuild.rebuilt.rebuked.rebuker.rebukes.rebuses.recalls.recaned.recanes.recants.recarry.recasts.receded.recedes.receipt.receive.recency.recepts.rechart.recheat.recheck.rechews.rechose.recipes.recital.recited.reciter.recites.recking.reckons.reclads.reclaim.reclame.reclasp.reclean.recline.recluse.recoals.recoats.recocks.recoded.recodes.recoils.recoins.recolor.recombs.recooks.records.recorks.recount.recoupe.recoups.recover.recrate.recross.recrown.recruit.rectify.rectors.rectory.rectrix.rectums.recurve.recusal.recused.recuses.recycle.redacts.redated.redates.redbait.redbays.redbird.redbone.redbuds.redbugs.redcaps.redcoat.reddens.redders.reddest.redding.reddish.reddled.reddles.redears.redeems.redeyes.redfins.redfish.redhead.redials.redlegs.redline.redneck.redness.redocks.redoing.redoubt.redound.redouts.redowas.redoxes.redpoll.redraft.redrawn.redraws.redream.redress.redried.redries.redrill.redrive.redroot.redrove.redskin.redtail.redtops.reduced.reducer.reduces.redware.redwing.redwood.reearns.reedier.reedify.reedily.reeding.reedits.reedman.reedmen.reefers.reefier.reefing.reeject.reekers.reekier.reeking.reelect.reelers.reeling.reemits.reenact.reendow.reenjoy.reenter.reentry.reequip.reerect.reested.reeving.reevoke.reexpel.refaced.refaces.refalls.refects.refeeds.refeels.refence.referee.reffing.refight.refiled.refiles.refills.refilms.refinds.refined.refiner.refines.refired.refires.refixed.refixes.reflags.reflate.reflect.reflets.reflies.refloat.reflood.reflown.reflows.refocus.refolds.reforge.reforms.refound.refract.refrain.reframe.refresh.refried.refries.refront.refroze.refuels.refuged.refugee.refuges.refugia.refunds.refusal.refused.refuser.refuses.refutal.refuted.refuter.refutes.regains.regaled.regaler.regales.regalia.regally.regards.regatta.regauge.regears.regency.regents.reggaes.regilds.regimen.regimes.reginae.reginal.reginas.regions.regiven.regives.reglaze.reglets.regloss.reglows.reglued.reglues.regmata.regnant.regorge.regosol.regrade.regraft.regrant.regrate.regreen.regreet.regress.regrets.regrind.regroom.regroup.regrown.regrows.regular.regulus.rehangs.reheard.rehears.reheats.reheels.rehinge.rehired.rehires.rehouse.reified.reifier.reifies.reigned.reimage.reincur.reindex.reining.reinked.reinter.reissue.reitbok.reivers.reiving.rejects.rejoice.rejoins.rejudge.rekeyed.reknits.reknots.relabel.relaced.relaces.relands.relapse.related.relater.relates.relator.relaxed.relaxer.relaxes.relaxin.relayed.relearn.release.relends.relents.releves.reliant.relicts.reliefs.reliers.relieve.relievo.relight.relined.relines.relinks.relique.relists.relived.relives.relleno.reloads.reloans.relocks.relooks.relucts.relumed.relumes.relying.remails.remains.remaker.remakes.remands.remarks.remarry.rematch.remated.remates.remeets.remelts.remends.remerge.remiges.reminds.remints.remised.remises.remixed.remixes.remnant.remodel.remolds.remoras.remorid.remorse.remoter.remotes.remount.removal.removed.remover.removes.remudas.renails.renamed.renames.renders.rending.reneged.reneger.reneges.renests.renewal.renewed.renewer.rennase.rennets.rennins.renowns.rentals.renters.rentier.renting.renvois.reoccur.reoffer.reoiled.reopens.reorder.repacks.repaint.repairs.repanel.repaper.reparks.repasts.repatch.repaved.repaves.repeals.repeats.repents.reperks.repined.repiner.repines.replace.replans.replant.replate.replays.replead.replete.replevy.replica.replied.replier.replies.replots.replows.replumb.repolls.reports.reposal.reposed.reposer.reposes.reposit.repours.repower.repping.repress.reprice.reprint.reprise.reprobe.reproof.reprove.reptant.reptile.repugns.repulse.repumps.reputed.reputes.request.requiem.requins.require.requite.reracks.reraise.rereads.reredos.rerents.rerisen.rerises.rerolls.reroofs.reroute.resails.resales.resawed.rescale.rescind.rescore.rescued.rescuer.rescues.reseals.reseats.reseaus.reseaux.resects.resedas.reseeds.reseeks.reseize.resells.resends.resents.reserve.resewed.reshape.reshave.reshine.reships.reshoed.reshoes.reshone.reshoot.reshown.reshows.resided.resider.resides.residua.residue.resifts.resight.resigns.resiled.resiles.resilin.resined.resists.resited.resites.resized.resizes.reslate.resmelt.resoaks.resojet.resoled.resoles.resolve.resorbs.resorts.resound.resowed.respace.respade.respeak.respect.respell.respelt.respire.respite.resplit.respoke.respond.respool.respots.respray.restack.restaff.restage.restamp.restart.restate.resters.restful.resting.restive.restock.restoke.restore.restudy.restuff.restyle.results.resumed.resumer.resumes.resurge.retable.retacks.retails.retains.retaken.retaker.retakes.retally.retaped.retapes.retards.retaste.retaxed.retaxes.retched.retches.reteach.reteams.retears.retells.retenes.retests.rethink.retiary.reticle.retiled.retiles.retimed.retimes.retinae.retinal.retinas.retines.retinol.retints.retinue.retired.retiree.retirer.retires.retitle.retools.retorts.retotal.retouch.retrace.retrack.retract.retrain.retread.retreat.retrial.retried.retries.retrims.retsina.retting.retuned.retunes.returns.retwist.retying.retyped.retypes.reunify.reunion.reunite.reusing.reutter.revalue.revamps.reveals.reveled.reveler.revelry.revenge.revenue.reverbs.revered.reverer.reveres.reverie.reverse.reverso.reverts.revests.reviews.reviled.reviler.reviles.revisal.revised.reviser.revises.revisit.revisor.revival.revived.reviver.revives.revoice.revoked.revoker.revokes.revolts.revolve.revoted.revotes.revuist.revving.rewaked.rewaken.rewakes.rewards.rewarms.rewaxed.rewaxes.rewears.reweave.reweigh.rewelds.rewiden.rewinds.rewired.rewires.rewoken.rewords.reworks.rewound.rewoven.rewraps.rewrapt.rewrite.rewrote.rexines.reynard.rezeros.rezoned.rezones.rhabdom.rhachis.rhamnus.rhaphae.rhaphes.rhatany.rheboks.rhenium.rhetors.rheumic.rhizoid.rhizoma.rhizome.rhizopi.rhodium.rhodora.rhombic.rhombus.rhonchi.rhubarb.rhumbas.rhymers.rhyming.rhythms.rhytons.rialtos.riantly.ribalds.ribands.ribband.ribbers.ribbier.ribbing.ribbons.ribbony.ribiers.ribless.riblets.riblike.riboses.ribwort.richens.richest.ricinus.rickets.rickety.rickeys.ricking.ricksha.ricotta.ricracs.ridable.ridders.ridding.riddled.riddler.riddles.ridgels.ridgier.ridgils.ridging.ridings.ridleys.ridotto.rievers.riffing.riffled.riffler.riffles.riflers.riflery.rifling.riflips.rifting.riggers.rigging.righted.righter.rightly.rigidly.rigours.rikisha.rikshaw.rilievi.rilievo.rillets.rilling.rimfire.rimiest.rimland.rimless.rimmers.rimpled.rimples.rimrock.rimshot.ringent.ringers.ringgit.ringing.ringlet.ringtaw.rinning.rinsers.rinsing.rioters.rioting.riotous.ripcord.ripened.ripener.ripieni.ripieno.ripoffs.riposte.riposts.rippers.ripping.rippled.rippler.ripples.ripplet.ripraps.ripsawn.ripsaws.ripstop.riptide.risible.risibly.risings.riskers.riskier.riskily.risking.risotto.rissole.ristras.risuses.ritards.ritters.rituals.ritzier.ritzily.rivages.rivaled.rivalry.riveted.riveter.riviera.riviere.rivulet.roached.roaches.roadbed.roadeos.roadies.roadway.roamers.roaming.roarers.roaring.roasted.roaster.robalos.robands.robbers.robbery.robbing.robbins.robotic.robotry.robusta.rochets.rockaby.rockers.rockery.rockets.rockier.rocking.rockoon.rococos.rodding.rodents.rodeoed.rodless.rodlike.rodsman.rodsmen.roebuck.rogered.roguery.roguing.roguish.roilier.roiling.roister.rolfers.rolfing.rollers.rollick.rolling.rollmop.rollout.rolltop.rollway.romaine.romajis.romance.romanos.romaunt.rompers.romping.rompish.rondeau.rondels.rondure.ronions.ronnels.rontgen.ronyons.roofers.roofies.roofing.rooftop.rookery.rookier.rookies.rooking.roomers.roomful.roomier.roomies.roomily.rooming.roosers.roosing.roosted.rooster.rootage.rootcap.rooters.rootier.rooting.rootled.rootles.rootlet.ropable.ropeway.ropiest.roquets.rorqual.rosacea.rosaria.roscoes.roseate.rosebay.rosebud.rosehip.roselle.roseola.rosette.rosiest.rosined.rosinol.rosolio.rosters.rostral.rostrum.rotated.rotates.rotator.rotches.rotguts.rotifer.rotters.rotting.rotunda.roubles.rouches.roughed.roughen.rougher.roughly.rouging.rouille.roulade.rouleau.rounded.roundel.rounder.roundly.roundup.roupier.roupily.rouping.rousers.rousing.rousted.rouster.routers.routine.routing.rovings.rowable.rowboat.rowdier.rowdies.rowdily.roweled.rowings.rowlock.royally.royalty.royster.rozzers.rubaboo.rubaces.rubasse.rubatos.rubbers.rubbery.rubbies.rubbing.rubbish.rubbled.rubbles.rubdown.rubella.rubeola.rubidic.rubiest.rubigos.rubious.ruboffs.rubouts.rubrics.rubying.ruching.rucking.ruckled.ruckles.ruction.rudders.ruddier.ruddily.ruddled.ruddles.ruddock.ruderal.rudesby.ruffian.ruffing.ruffled.ruffler.ruffles.rufiyaa.rugbies.ruggers.rugging.ruglike.rugolas.rugosas.ruinate.ruiners.ruining.ruinous.rulable.ruliest.rulings.rumakis.rumbaed.rumbled.rumbler.rumbles.ruminal.rummage.rummers.rummest.rummier.rummies.rumored.rumours.rumpled.rumples.runaway.runback.rundles.rundlet.rundown.runkled.runkles.runless.runlets.runnels.runners.runnier.running.runoffs.runouts.runover.runtier.runtish.runways.rupiahs.rupture.rurally.rushees.rushers.rushier.rushing.russets.russety.russify.rustics.rustier.rustily.rusting.rustled.rustler.rustles.ruthful.rutiles.ruttier.ruttily.rutting.ruttish.ryokans.sabaton.sabayon.sabbath.sabbats.sabbing.sabeing.sabered.sabines.sabring.sacaton.sacbuts.saccade.saccate.saccule.sacculi.sachems.sachets.sackbut.sackers.sackful.sacking.saclike.sacques.sacrals.sacring.sacrist.sacrums.saddens.saddest.saddhus.saddled.saddler.saddles.sadiron.sadisms.sadists.sadness.safaris.saffron.safrole.safrols.sagaman.sagamen.sagbuts.saggard.saggars.saggers.saggier.sagging.sagiest.saguaro.sahiwal.sahuaro.sailers.sailing.sailors.saimins.saining.sainted.saintly.saiyids.salaams.salable.salably.salamis.salchow.salicin.salient.salinas.salines.salivas.sallets.sallied.sallier.sallies.sallows.sallowy.salmons.saloons.saloops.salpian.salpids.salpinx.salsify.saltant.saltbox.saltern.salters.saltest.saltier.salties.saltily.saltine.salting.saltire.saltish.saltpan.salukis.saluted.saluter.salutes.salvage.salvers.salvias.salving.salvoed.salvoes.salvors.samadhi.samaras.sambaed.sambals.sambars.sambhar.sambhur.sambuca.sambuke.samburs.samechs.samekhs.samiels.samisen.samites.samlets.samosas.samovar.samoyed.sampans.sampled.sampler.samples.samsara.samshus.samurai.sanctum.sandals.sandbag.sandbar.sandbox.sandbur.sanddab.sanders.sandfly.sandhis.sandhog.sandier.sanding.sandlot.sandman.sandmen.sandpit.sangars.sangers.sangria.sanicle.sanious.sanjaks.sannops.sannups.sansars.sanseis.santera.santero.santimi.santims.santimu.santirs.santols.santoor.santour.santurs.sapajou.saphead.saphena.sapiens.sapient.sapless.sapling.saponin.sapotas.sapotes.sapours.sappers.sapphic.sappier.sappily.sapping.saprobe.sapsago.sapwood.sarapes.sarcasm.sarcina.sarcoid.sarcoma.sarcous.sardana.sardars.sardine.sardius.sarkier.sarment.sarodes.sarongs.saroses.sarsars.sarsens.sarsnet.sartors.sashays.sashimi.sashing.sassaby.sassier.sassies.sassily.sassing.satangs.satanic.sataras.satchel.sateens.satiate.satiety.satinet.satires.satiric.satisfy.satoris.satraps.satrapy.satsuma.satyric.satyrid.saucers.saucier.saucily.saucing.saugers.saunaed.saunter.saurels.saurian.sauries.sausage.sauteed.sautoir.savable.savaged.savager.savages.savanna.savants.savarin.savates.saveloy.savines.savings.saviors.saviour.savored.savorer.savours.savoury.savvied.savvier.savvies.savvily.sawbill.sawbuck.sawdust.sawfish.sawlike.sawlogs.sawmill.sawneys.sawyers.saxhorn.saxtuba.sayable.sayings.sayyids.scabbed.scabble.scabies.scalade.scalado.scalage.scalare.scalars.scalded.scaldic.scalene.scaleni.scalers.scaleup.scalier.scaling.scallop.scalped.scalpel.scalper.scammed.scammer.scamped.scamper.scandal.scandia.scandic.scanned.scanner.scanted.scanter.scantly.scaping.scapose.scapula.scarabs.scarcer.scarers.scarfed.scarfer.scarier.scarify.scarily.scaring.scarlet.scarped.scarper.scarphs.scarred.scarted.scarves.scathed.scathes.scatted.scatter.scauper.scended.scenery.scenics.scented.scepter.sceptic.sceptre.schappe.schemas.schemed.schemer.schemes.scherzi.scherzo.schisms.schists.schizos.schizzy.schlepp.schleps.schlock.schlubs.schlump.schmalz.schmear.schmeer.schmoes.schmoos.schmuck.schnaps.schnook.schnozz.scholar.scholia.schools.schorls.schriks.schrods.schtick.schtiks.schuits.sciatic.science.scillas.scirrhi.scissor.sciurid.sclaffs.sclerae.scleral.scleras.scoffed.scoffer.scolded.scolder.scollop.sconced.sconces.scooped.scooper.scootch.scooted.scooter.scoping.scopula.scorers.scoriae.scorify.scoring.scorned.scorner.scoters.scotias.scotoma.scottie.scoured.scourer.scourge.scouses.scouted.scouter.scouths.scowder.scowing.scowled.scowler.scraggy.scraich.scraigh.scraped.scraper.scrapes.scrapie.scrappy.scratch.scrawls.scrawly.scrawny.screaks.screaky.screams.screech.screeds.screens.screwed.screwer.screwup.scribal.scribed.scriber.scribes.scrieve.scrimps.scrimpy.scripts.scrived.scrives.scroggy.scrolls.scrooch.scrooge.scroops.scrotal.scrouge.scrubby.scruffs.scruffy.scrunch.scruple.scrying.scubaed.scudded.scuffed.scuffer.scuffle.sculked.sculker.sculled.sculler.sculped.sculpin.sculpts.scultch.scumbag.scumble.scummed.scummer.scunner.scupper.scurril.scutage.scutate.scutter.scuttle.scuzzes.scyphus.scythed.scythes.seabags.seabeds.seabird.seaboot.seacock.seadogs.seafood.seafowl.seagirt.seagull.sealant.sealers.sealery.sealift.sealing.seamark.seamers.seamier.seaming.seances.seaport.searest.searing.seasick.seaside.seasons.seaters.seating.seawall.seawans.seawant.seaward.seaware.seaways.seaweed.sebacic.sebasic.secants.seceded.seceder.secedes.secerns.seclude.seconal.seconde.secondi.secondo.seconds.secpars.secrecy.secrete.secrets.sectary.sectile.section.sectors.secular.secured.securer.secures.sedarim.sedated.sedater.sedates.sedgier.sedilia.seduced.seducer.seduces.seeable.seedbed.seeders.seedier.seedily.seeding.seedman.seedmen.seedpod.seeings.seekers.seeking.seeling.seemers.seeming.seepage.seepier.seeping.seeress.seesaws.seethed.seethes.segetal.seggars.segment.seiches.seidels.seiners.seining.seisers.seising.seisins.seismal.seismic.seisors.seisure.seitans.seizers.seizing.seizins.seizors.seizure.sejeant.selects.selenic.selfdom.selfing.selfish.selkies.sellers.selling.selloff.sellout.selsyns.seltzer.selvage.sematic.sememes.sememic.semidry.semifit.semilog.semimat.seminal.seminar.semipro.semiraw.semises.senarii.senates.senator.sendals.senders.sending.sendoff.sendups.senecas.senecio.senegas.senhora.senhors.seniles.seniors.sennets.sennits.senopia.senoras.senores.sensate.senseis.sensing.sensors.sensory.sensual.sentimo.sepaled.seppuku.septage.septate.septets.septics.septime.septums.sequela.sequels.sequent.sequins.sequoia.serails.serapes.seraphs.serdabs.sereins.serener.serenes.serfage.serfdom.serfish.sergers.serging.serials.seriate.sericin.seriema.serifed.serines.seringa.serious.sermons.serosae.serosal.serosas.serovar.serpent.serpigo.serrano.serrate.serried.serries.serumal.servals.servant.servers.service.servile.serving.sesames.sessile.session.sestets.sestina.sestine.setback.setline.setoffs.setouts.settees.setters.setting.settled.settler.settles.settlor.seventh.seventy.several.severed.severer.seviche.sevruga.sewable.sewages.sewered.sewings.sexiest.sexisms.sexists.sexless.sexpots.sextain.sextans.sextant.sextets.sextile.sextons.sferics.sfumato.shacked.shackle.shackos.shaders.shadfly.shadier.shadily.shading.shadoof.shadows.shadowy.shadufs.shafted.shagged.shahdom.shairds.shairns.shaitan.shakers.shakeup.shakier.shakily.shaking.shakoes.shalier.shallop.shallot.shallow.shaloms.shamans.shamble.shaming.shammas.shammed.shammer.shammes.shammos.shamois.shamoys.shampoo.shanked.shantey.shantih.shantis.shapely.shapers.shapeup.shaping.sharers.shariah.sharias.sharifs.sharing.sharked.sharker.sharped.sharpen.sharper.sharpie.sharply.shaslik.shatter.shaughs.shauled.shavers.shavies.shaving.shawing.shawled.sheafed.sheared.shearer.sheathe.sheaths.sheaved.sheaves.shebang.shebean.shebeen.shedded.shedder.sheened.sheeney.sheenie.sheered.sheerer.sheerly.sheeted.sheeter.sheeves.shegetz.sheikhs.sheilas.sheitan.shekels.shellac.shelled.sheller.sheltas.shelter.sheltie.shelved.shelver.shelves.sheqels.sherbet.shereef.sheriff.sherifs.sheroot.sherpas.sherris.sheuchs.sheughs.shewers.shewing.shiatsu.shiatzu.shibahs.shicker.shicksa.shields.shifted.shifter.shikari.shikars.shikker.shiksas.shikseh.shikses.shilled.shilpit.shimmed.shimmer.shindig.shindys.shiners.shingle.shingly.shinier.shinily.shining.shinned.shinney.shiplap.shipman.shipmen.shipped.shippen.shipper.shippon.shipway.shirked.shirker.shirred.shitake.shittah.shittim.shivahs.shivers.shivery.shiviti.shlepps.shlocks.shlocky.shlumps.shlumpy.shmaltz.shmears.shmooze.shmucks.shnapps.shnooks.shoaled.shoaler.shocked.shocker.shodden.shoebox.shoeing.shoepac.shofars.shogged.shoguns.sholoms.shoofly.shooing.shooled.shooter.shopboy.shophar.shopman.shopmen.shopped.shopper.shoppes.shorans.shoring.shorted.shorten.shorter.shortia.shortie.shortly.shotgun.shotted.shotten.shouted.shouter.shovels.shovers.shoving.showbiz.showers.showery.showier.showily.showing.showman.showmen.showoff.shrewed.shrieks.shrieky.shrieve.shrifts.shrikes.shrills.shrilly.shrimps.shrimpy.shrined.shrines.shrinks.shrived.shrivel.shriven.shriver.shrives.shroffs.shrouds.shrubby.shtetel.shtetls.shticks.shticky.shucked.shucker.shudder.shuffle.shunned.shunner.shunted.shunter.shushed.shusher.shushes.shuteye.shuting.shutoff.shutout.shutter.shuttle.shylock.shyness.shyster.sialids.sialoid.siamang.siamese.sibling.sibylic.siccing.sickbay.sickbed.sickees.sickens.sickest.sickies.sicking.sickish.sickled.sickles.sickout.siddurs.sidearm.sidebar.sidecar.sideman.sidemen.sideway.sidings.sidlers.sidling.sieging.siemens.sienite.siennas.sierran.sierras.siestas.sievert.sieving.sifakas.sifters.sifting.siganid.sighers.sighing.sighted.sighter.sightly.sigmate.sigmoid.signage.signals.signees.signers.signets.signify.signing.signior.signora.signore.signori.signors.signory.silages.silanes.silence.silents.silenus.silesia.silexes.silicas.silicic.silicle.silicon.siliqua.silique.silkier.silkies.silkily.silking.sillers.sillier.sillies.sillily.siloing.siltier.silting.silurid.silvans.silvern.silvers.silvery.silvics.simians.similar.similes.simioid.simious.simitar.simlins.simmers.simnels.simooms.simoons.simpers.simpler.simples.simplex.simular.sincere.sinewed.singers.singing.singled.singles.singlet.sinkage.sinkers.sinking.sinless.sinners.sinning.sinopia.sinopie.sinsyne.sinters.sinuate.sinuous.sinuses.siphons.sippers.sippets.sipping.sirdars.sirloin.sirocco.sirrahs.sirrees.siruped.siskins.sissier.sissies.sisters.sistrum.sitcoms.sithens.sitters.sitting.situate.situses.sixfold.sixteen.sixthly.sixties.sizable.sizably.siziest.sizings.sizzled.sizzler.sizzles.sjambok.skaldic.skanked.skanker.skaters.skating.skatole.skatols.skeanes.skeeing.skeeter.skeined.skellum.skelped.skelpit.skelter.skepsis.skeptic.sketchy.skewers.skewing.skiable.skibobs.skidded.skidder.skiddoo.skidoos.skidway.skiffle.skiings.skilful.skilled.skillet.skimmed.skimmer.skimped.skinful.skinked.skinker.skinned.skinner.skipped.skipper.skippet.skirled.skirred.skirret.skirted.skirter.skiting.skitter.skittle.skivers.skiving.skiwear.sklents.skoaled.skookum.skoshes.skreegh.skreigh.skulked.skulker.skulled.skunked.skycaps.skydive.skydove.skyhook.skyjack.skylark.skylike.skyline.skyphoi.skyphos.skysail.skysurf.skywalk.skyward.skyways.slabbed.slabber.slacked.slacken.slacker.slackly.slagged.slainte.slakers.slaking.slaloms.slammed.slammer.slander.slanged.slanted.slantly.slapped.slapper.slashed.slasher.slashes.slaters.slather.slatier.slating.slatted.slavers.slavery.slaveys.slaving.slavish.slayers.slaying.sleaved.sleaves.sleazes.sledded.sledder.sledged.sledges.sleeked.sleeken.sleeker.sleekit.sleekly.sleeper.sleeted.sleeved.sleeves.sleighs.sleight.slender.sleuths.slewing.slicers.slicing.slicked.slicken.slicker.slickly.slidden.sliders.sliding.slieves.slights.slimier.slimily.sliming.slimmed.slimmer.slimpsy.slinger.slinked.sliping.slipout.slipped.slipper.slipups.slipway.slither.slitted.slitter.slivers.slobber.slogans.slogged.slogger.slopers.sloping.slopped.sloshed.sloshes.slotted.slotter.slouchy.sloughs.sloughy.slovens.slowest.slowing.slowish.slubbed.slubber.sludged.sludges.sluffed.slugged.slugger.sluiced.sluices.slumber.slumgum.slumism.slummed.slummer.slumped.slurban.slurped.slurred.slushed.slushes.slyness.smacked.smacker.smaller.smaltos.smaragd.smarted.smarten.smarter.smartie.smartly.smashed.smasher.smashes.smashup.smatter.smeared.smearer.smectic.smeddum.smeeked.smegmas.smelled.smeller.smelted.smelter.smerked.smidgen.smidges.smidgin.smilers.smileys.smiling.smirked.smirker.smiters.smiting.smitten.smocked.smokers.smokier.smokily.smoking.smolder.smoochy.smooths.smoothy.smother.smudged.smudges.smugger.smuggle.smushed.smushes.smutchy.smutted.snacked.snacker.snaffle.snafued.snagged.snailed.snakier.snakily.snaking.snapped.snapper.snarers.snarfed.snaring.snarled.snarler.snashes.snatchy.snathes.snawing.sneaked.sneaker.sneaped.snedded.sneered.sneerer.sneezed.sneezer.sneezes.snelled.sneller.snibbed.snicked.snicker.snidely.snidest.sniffed.sniffer.sniffle.sniffly.snifter.snigger.sniggle.sniglet.snipers.sniping.snipped.snipper.snippet.snivels.snogged.snooded.snooked.snooker.snooled.snooped.snooper.snooted.snoozed.snoozer.snoozes.snoozle.snorers.snoring.snorkel.snorted.snorter.snouted.snowcap.snowcat.snowier.snowily.snowing.snowman.snowmen.snubbed.snubber.snuffed.snuffer.snuffle.snuffly.snugged.snugger.snuggle.soakage.soakers.soaking.soapbox.soapers.soapier.soapily.soaping.soarers.soaring.sobbers.sobbing.sobered.soberer.soberly.socager.socages.soccage.soccers.socials.society.sockets.sockeye.socking.sockman.sockmen.soddens.soddies.sodding.sodiums.sofabed.soffits.softens.softest.softies.softish.soggier.soggily.soignee.soilage.soiling.soilure.soirees.sojourn.sokeman.sokemen.solaced.solacer.solaces.solands.solanin.solanos.solanum.solaria.solated.solates.solatia.soldans.solders.soldier.soleret.solfege.solicit.solider.solidly.solidus.solions.soliton.soloing.soloist.soluble.solubly.solunar.solutes.solvate.solvent.solvers.solving.somatic.someday.somehow.someone.someway.somital.somites.somitic.sonance.sonants.sonatas.sonders.songful.sonhood.sonless.sonlike.sonnets.sonnies.sonovox.sonship.sonsier.sooners.soonest.soothed.soother.soothes.soothly.sootier.sootily.sooting.sophies.sophism.sophist.sopited.sopites.soppier.sopping.soprani.soprano.sorbate.sorbent.sorbets.sorbing.sorbose.sorcery.sordine.sordini.sordino.sordors.sorghos.sorghum.sorings.sorites.soritic.sorners.sorning.soroche.sororal.soroses.sorosis.sorrels.sorrier.sorrily.sorrows.sorters.sortied.sorties.sorting.sottish.souaris.soubise.soucars.soudans.souffle.soughed.soukous.soulful.sounded.sounder.soundly.soupcon.soupier.souping.sourced.sources.sourest.souring.sourish.soursop.sousing.souslik.soutane.souters.southed.souther.soviets.sovkhoz.sovrans.sowable.sowcars.soybean.soymilk.soyuzes.sozines.sozzled.spacers.spacial.spacier.spacing.spackle.spaders.spading.spaeing.spahees.spalled.spaller.spambot.spammed.spammer.spancel.spandex.spangle.spangly.spaniel.spanked.spanker.spanned.spanner.sparely.sparers.sparest.sparged.sparger.sparges.sparids.sparing.sparked.sparker.sparkle.sparkly.sparoid.sparred.sparrow.sparser.spartan.spasmed.spastic.spathal.spathed.spathes.spathic.spatial.spatted.spatter.spatula.spatzle.spavies.spaviet.spavins.spawned.spawner.spaying.spazzes.speaker.speaned.speared.spearer.specced.special.species.specify.specked.speckle.specter.spectra.spectre.specula.speeded.speeder.speedos.speedup.speeled.speered.speiled.speired.speises.spelean.spelled.speller.spelter.spelunk.spencer.spences.spender.spenses.spermic.spewers.spewing.sphenes.sphenic.spheral.sphered.spheres.spheric.spicate.spicers.spicery.spicier.spicily.spicing.spicula.spicule.spiders.spidery.spiegel.spieled.spieler.spiered.spiffed.spigots.spikers.spikier.spikily.spiking.spiling.spilled.spiller.spilths.spinach.spinage.spinals.spinate.spindle.spindly.spinels.spinets.spinier.spinner.spinney.spinoff.spinors.spinose.spinous.spinout.spintos.spinula.spinule.spiraea.spirals.spirant.spireas.spireme.spirems.spirier.spiring.spirits.spiroid.spirted.spirula.spitals.spiting.spitted.spitter.spittle.spitzes.splakes.splashy.splayed.spleens.spleeny.splenia.splenic.splenii.splents.spliced.splicer.splices.spliffs.splined.splines.splints.splodge.splores.splotch.splurge.splurgy.spoiled.spoiler.spoking.spondee.sponged.sponger.sponges.spongin.sponsal.sponson.sponsor.spoofed.spoofer.spooked.spooled.spooler.spooned.spooney.spoored.sporing.sporoid.sporran.sported.sporter.sportif.sporule.spotlit.spotted.spotter.spousal.spoused.spouses.spouted.spouter.sprains.sprangs.sprawls.sprawly.sprayed.sprayer.spreads.spriest.spriggy.spright.springe.springs.springy.sprints.sprites.sprouts.spruced.sprucer.spruces.spryest.spudded.spudder.spumier.spuming.spumone.spumoni.spumous.spunked.spunkie.spurges.spurned.spurner.spurred.spurrer.spurrey.spurted.spurter.spurtle.sputnik.sputter.squabby.squalid.squalls.squally.squalor.squamae.squared.squarer.squares.squarks.squashy.squatly.squatty.squawks.squeaks.squeaky.squeals.squeeze.squelch.squiffy.squilla.squills.squinch.squinny.squints.squinty.squired.squires.squirms.squirmy.squirts.squishy.squoosh.sraddha.sradhas.stabbed.stabber.stabile.stabled.stabler.stables.stacked.stacker.stackup.stactes.staddle.stadias.stadium.staffed.staffer.stagers.stagged.stagger.staggie.stagier.stagily.staging.staider.staidly.stained.stainer.staithe.staking.stalags.stalely.stalest.staling.stalked.stalker.stalled.stamens.stamina.stammel.stammer.stamped.stamper.stances.standby.standee.stander.standup.stanged.stanine.staning.stannic.stannum.stanols.stanzas.stapled.stapler.staples.starchy.stardom.starers.starets.staring.starker.starkly.starlet.starlit.starred.started.starter.startle.startsy.startup.starved.starver.starves.stashed.stashes.stasima.statant.stately.staters.statice.statics.stating.statins.station.statism.statist.stative.stators.statued.statues.stature.statusy.statute.staunch.staving.stayers.staying.steaded.stealer.stealth.steamed.steamer.stearic.stearin.steeked.steeled.steelie.steeped.steepen.steeper.steeple.steeply.steered.steerer.steeved.steeves.stelene.stellar.stellas.stemmas.stemmed.stemmer.stemson.stenchy.stencil.stengah.stenoky.stentor.stepped.stepper.steppes.stepson.stereos.sterile.sterlet.sternal.sterner.sternly.sternum.steroid.sterols.stertor.stetson.stetted.steward.stewbum.stewing.stewpan.sthenia.sthenic.stibial.stibine.stibium.stichic.sticked.sticker.stickit.stickle.stickum.stickup.stiffed.stiffen.stiffer.stiffie.stiffly.stifled.stifler.stifles.stigmal.stigmas.stilled.stiller.stilted.stimied.stimies.stimuli.stinger.stingos.stinker.stinted.stinter.stipels.stipend.stipple.stipule.stirpes.stirred.stirrer.stirrup.stivers.stobbed.stocked.stocker.stodged.stodges.stogeys.stogies.stoical.stokers.stoking.stollen.stolons.stomach.stomata.stomate.stomped.stomper.stoners.stonier.stonily.stoning.stonish.stooged.stooges.stooked.stooker.stooled.stoolie.stooped.stooper.stopers.stopgap.stoping.stopoff.stopped.stopper.stopple.storage.storers.storeys.storied.stories.storing.stormed.stotins.stotted.stounds.stoures.stourie.stouten.stouter.stoutly.stovers.stowage.stowing.strafed.strafer.strafes.strains.straits.straked.strakes.strands.strange.strappy.stratal.stratas.straths.stratum.stratus.strawed.strayed.strayer.streaks.streaky.streams.streamy.streeks.streels.streets.stretch.stretta.strette.stretti.stretto.strewed.strewer.striata.striate.stricks.strider.strides.stridor.strifes.strigil.striker.strikes.strings.stringy.striped.striper.stripes.strived.striven.striver.strives.strobes.strobic.strobil.stroked.stroker.strokes.strolls.stromal.strophe.stroppy.strouds.strowed.stroyed.stroyer.strudel.strumae.strumas.strunts.stubbed.stubble.stubbly.stuccos.studded.studdie.student.studied.studier.studies.studios.stuffed.stuffer.stuiver.stumble.stummed.stumped.stumper.stunned.stunner.stunted.stupefy.stupids.stupors.stutter.stygian.stylate.stylers.stylets.styling.stylise.stylish.stylist.stylite.stylize.styloid.stymied.stymies.stypsis.styptic.styrene.suasion.suasive.suasory.suavely.suavest.suavity.subacid.subadar.subalar.subarea.subarid.subatom.subbase.subbass.subbing.subcell.subclan.subcode.subcool.subcult.subdean.subdebs.subdual.subduce.subduct.subdued.subduer.subdues.subecho.subedit.suberic.suberin.subfile.subfusc.subgoal.subgums.subhead.subidea.subitem.subject.subjoin.sublate.sublets.sublime.subline.sublots.submenu.submiss.submits.subnets.suboral.suborns.suboval.subpart.subpena.subplot.subrace.subrent.subring.subrule.subsale.subsect.subsere.subsets.subside.subsidy.subsist.subsite.subsoil.subsume.subtask.subtaxa.subteen.subtend.subtest.subtext.subtile.subtler.subtone.subtype.subunit.suburbs.subvene.subvert.subways.subzero.subzone.succahs.succeed.success.succors.succory.succoth.succour.succuba.succubi.succumb.succuss.suckier.suckled.suckler.suckles.sucrase.sucrose.suction.sudaria.suddens.sudoral.sudsers.sudsier.sudsing.sueding.suffari.suffers.suffice.suffuse.sugared.sugarer.suggest.sughing.suicide.suiters.suiting.suitors.sukkahs.sukkoth.sulcate.suldans.sulfate.sulfide.sulfids.sulfite.sulfone.sulfurs.sulfury.sulkers.sulkier.sulkies.sulkily.sulking.sullage.sullied.sullies.sulphas.sulphid.sulphur.sultana.sultans.sumachs.sumless.summand.summary.summate.summers.summery.summing.summits.summons.sumoist.sumpter.sunback.sunbath.sunbeam.sunbelt.sunbird.sunbows.sunburn.sundaes.sundeck.sunders.sundews.sundial.sundogs.sundown.sunfast.sunfish.sunglow.sunkets.sunlamp.sunland.sunless.sunlike.sunnahs.sunnier.sunnily.sunning.sunrays.sunrise.sunroof.sunroom.sunsets.sunspot.sunsuit.suntans.sunward.sunwise.supered.supines.suppers.supping.suppled.suppler.supples.support.suppose.supreme.supremo.surbase.surcoat.surface.surfeit.surfers.surfier.surfing.surfman.surfmen.surgeon.surgers.surgery.surging.surimis.surlier.surlily.surmise.surname.surpass.surplus.surreal.surreys.surtout.surveil.surveys.survive.susliks.suspect.suspend.suspire.sussing.sustain.sutlers.suttees.sutural.sutured.sutures.svelter.swabbed.swabber.swabbie.swacked.swaddle.swagers.swagged.swagger.swaggie.swaging.swagman.swagmen.swallow.swamies.swamped.swamper.swanked.swanker.swanned.swanpan.swapped.swapper.swarded.swarmed.swarmer.swarths.swarthy.swashed.swasher.swashes.swathed.swather.swathes.swatted.swatter.swayers.swayful.swaying.swearer.sweated.sweater.sweeney.sweeper.sweeten.sweeter.sweetie.sweetly.swelled.sweller.swelter.sweltry.swerved.swerver.swerves.swevens.swidden.swifter.swiftly.swigged.swigger.swilled.swiller.swimmer.swindle.swingby.swinged.swinger.swinges.swingle.swinish.swinked.swinney.swiping.swiples.swipple.swirled.swished.swisher.swishes.swisses.swither.swithly.swivels.swivets.swiving.swizzle.swobbed.swobber.swollen.swooned.swooner.swooped.swooper.swopped.swotted.swotter.swounds.swouned.syconia.sycoses.sycosis.syenite.syllabi.sylphic.sylphid.sylvans.sylvine.sylvins.sylvite.symbion.symbiot.symbols.symptom.synagog.synanon.synapse.syncarp.synched.synchro.syncing.syncoms.syncope.syndets.syndics.synergy.synesis.synfuel.syngamy.synodal.synodic.synonym.synovia.syntagm.syntony.synurae.syphers.syphons.syrette.syringa.syringe.syrphid.syruped.systems.systole.syzygal.tabanid.tabards.tabaret.tabbied.tabbies.tabbing.tabered.tabetic.tableau.tablets.tabling.tabloid.tabooed.tabored.taborer.taboret.taborin.tabouli.tabours.tabuing.tabular.tabulis.tachism.tachist.tachyon.tacitly.tackers.tackets.tackier.tackify.tackily.tacking.tackled.tackler.tackles.tacnode.tacrine.tactful.tactics.tactile.taction.tactual.tadpole.taeniae.taenias.taffeta.taffias.taffies.taggant.taggers.tagging.taglike.tagline.tagmeme.tagrags.tahinis.tahsils.tailers.tailfan.tailfin.tailing.tailles.tailors.tainted.taipans.takable.takahes.takeoff.takeout.takeups.takings.talaria.talcing.talcked.talcose.talcous.talcums.talents.talions.taliped.talipes.talipot.talkers.talkier.talkies.talking.tallage.tallboy.tallest.tallied.tallier.tallies.tallish.tallith.tallits.tallols.tallows.tallowy.tallyho.taloned.talooka.talukas.taluses.tamable.tamales.tamandu.tamarao.tamarau.tamarin.tamaris.tamasha.tambacs.tambaks.tambala.tambour.tambura.tamburs.tameins.tamises.tammies.tampala.tampans.tampers.tamping.tampion.tampons.tanager.tanbark.tandems.tandoor.tangelo.tangent.tangier.tanging.tangled.tangler.tangles.tangoed.tangram.tanists.tankage.tankard.tankers.tankful.tanking.tankini.tannage.tannate.tanners.tannery.tannest.tanning.tannins.tannish.tannoys.tanrecs.tansies.tantara.tantivy.tantras.tantric.tantrum.tanukis.tanyard.tapalos.tapered.taperer.tapetal.tapetum.taphole.tapioca.tapises.tappers.tappets.tapping.taproom.taproot.tapster.taramas.tarbush.tardier.tardies.tardily.tardive.tardyon.targets.tariffs.tarmacs.tarnish.tarpans.tarpons.tarried.tarrier.tarries.tarring.tarsals.tarsias.tarsier.tartana.tartans.tartare.tartars.tartest.tartier.tartily.tarting.tartish.tartlet.tartufe.tarweed.tarzans.taskbar.tasking.tassels.tassets.tassies.tasters.tastier.tastily.tasting.tatamis.tatouay.tatsois.tatters.tattier.tatties.tattily.tatting.tattled.tattler.tattles.tattoos.taunted.taunter.taurine.tautaug.tautens.tautest.tauting.tautogs.taverna.taverns.tawneys.tawnier.tawnies.tawnily.tawpies.tawsing.taxable.taxably.taxemes.taxemic.taxicab.taxiing.taximan.taximen.taxites.taxitic.taxiway.taxless.taxpaid.taxwise.taxying.teabowl.teacake.teacart.teacher.teaches.teacups.tealike.teaming.teapots.teapoys.tearers.tearful.teargas.tearier.tearily.tearing.tearoom.teasels.teasers.teashop.teasing.teatime.teaware.teazels.teazled.teazles.techier.techies.techily.technic.technos.tectite.tectrix.tectums.tedders.teddies.tedding.tedious.tediums.teemers.teeming.teenage.teeners.teenful.teenier.teentsy.teepees.teeters.teethed.teether.teethes.teflons.tegmina.tegular.tegumen.tekkies.tektite.telamon.telecom.teledus.telefax.telegas.teleman.telemen.teleost.teleran.teleses.telesis.telexed.telexes.telfers.telford.tellers.tellies.telling.telnets.telomes.telomic.telpher.telsons.temblor.tempehs.tempera.tempers.tempest.temping.templar.templed.temples.templet.tempted.tempter.tempura.tenable.tenably.tenaces.tenails.tenancy.tenants.tenches.tenders.tending.tendons.tendril.tenfold.tenners.tennies.tennist.tenoned.tenoner.tenours.tenpins.tenrecs.tensely.tensest.tensile.tensing.tension.tensity.tensive.tensors.tentage.tenters.tenthly.tentier.tenting.tenuity.tenuous.tenured.tenures.tenutos.teopans.tephras.tepidly.tequila.teraohm.terbias.terbium.tercels.tercets.terebic.teredos.terefah.tergite.termers.terming.termini.termite.termors.ternary.ternate.ternion.terpene.terrace.terrain.terrane.terreen.terrene.terrets.terrier.terries.terrify.terrine.territs.terrors.tersely.tersest.tertial.tertian.tessera.testacy.testate.testees.testers.testier.testify.testily.testing.testons.testoon.testudo.tetanal.tetanic.tetanus.tetched.tethers.tetotum.tetrads.tetrode.tetryls.tetters.teughly.texases.textile.texting.textual.texture.thacked.thairms.thalami.thalers.thallic.thallus.thalweg.thanage.thanked.thanker.thatchy.thawers.thawing.theater.theatre.thecate.theelin.theelol.thegnly.theines.theisms.theists.theming.thenage.thenars.theolog.theorbo.theorem.therapy.thereat.thereby.therein.thereof.thereon.thereto.theriac.therian.thermae.thermal.thermel.thermes.thermic.thermit.thermos.theroid.theurgy.thewier.thiamin.thiazin.thiazol.thicken.thicker.thicket.thickly.thieved.thieves.thighed.thimble.thinker.thinned.thinner.thiolic.thionic.thionin.thionyl.thirams.thirdly.thirled.thirsts.thirsty.thistle.thistly.thither.tholing.thonged.thorias.thorite.thorium.thorned.thorons.thorpes.thought.thouing.thralls.thraves.thrawed.threads.thready.threaps.threats.threeps.thrifts.thrifty.thrills.thrived.thriven.thriver.thrives.throats.throaty.thrombi.throned.thrones.throngs.through.thrower.thrummy.thruput.thrusts.thruway.thudded.thuggee.thulias.thulium.thumbed.thumped.thumper.thunder.thunked.thwacks.thwarts.thymier.thymine.thymols.thyroid.thyrses.thyrsus.thyself.tiaraed.ticcing.tickers.tickets.ticking.tickled.tickler.tickles.tictacs.tictocs.tidally.tidbits.tiddler.tiderip.tideway.tidiers.tidiest.tidings.tidying.tieback.tieless.tiepins.tierced.tiercel.tierces.tiering.tiffany.tiffing.tiffins.tighter.tightly.tiglons.tigress.tigrish.tilapia.tilbury.tilings.tillage.tillers.tilling.tillite.tilters.tilting.timarau.timbale.timbals.timbers.timbery.timbral.timbrel.timbres.timeous.timeout.timider.timidly.timings.timolol.timothy.timpana.timpani.timpano.tinamou.tincals.tincted.tinders.tindery.tineids.tinfoil.tinfuls.tinging.tingled.tingler.tingles.tinhorn.tiniest.tinkers.tinkled.tinkler.tinkles.tinlike.tinners.tinnier.tinnily.tinning.tinsels.tinters.tinting.tintype.tinware.tinwork.tipcart.tipcats.tipless.tipoffs.tippers.tippets.tippier.tipping.tippled.tippler.tipples.tipsier.tipsily.tipster.tiptoed.tiptoes.tiptops.tirades.tireder.tiredly.tirling.tisanes.tissual.tissued.tissues.tissuey.titania.titanic.titbits.titfers.tithers.tithing.titians.titlark.titling.titlist.titmice.titrant.titrate.titters.tittles.tittups.titular.tizzies.toadied.toadies.toadish.toasted.toaster.tobacco.toccata.toccate.tochers.tocsins.toddies.toddled.toddler.toddles.toecaps.toehold.toeless.toelike.toenail.toeshoe.toffees.toffies.tofutti.togated.toggery.togging.toggled.toggler.toggles.toilers.toilets.toilful.toiling.toiting.tokamak.tokened.tokomak.tolanes.toledos.tolidin.tollage.tollbar.tollers.tolling.tollman.tollmen.tollway.toluate.toluene.toluide.toluids.toluole.toluols.toluyls.tomback.tombacs.tombaks.tombing.tombola.tombolo.tomboys.tomcats.tomcods.tomenta.tomfool.tommies.tomming.tompion.tomtits.tonally.tonearm.tonemes.tonemic.tonetic.tonette.tongers.tonging.tongman.tongmen.tongued.tongues.toniest.tonight.tonlets.tonnage.tonneau.tonners.tonnish.tonsils.tonsure.tontine.tonuses.toolbar.toolbox.toolers.tooling.toonies.tooters.toothed.tooting.tootled.tootler.tootles.tootses.tootsie.topazes.topcoat.topfull.topiary.topical.topkick.topknot.topline.topmast.topmost.toponym.toppers.topping.toppled.topples.topsail.topside.topsoil.topspin.topwork.toquets.torched.torches.torchon.toreros.torment.tornado.toroids.torpedo.torpids.torpors.torqued.torquer.torques.torrefy.torrent.torrify.torsade.torsion.tortile.tortoni.tortrix.torture.torulae.torulas.tossers.tossing.tosspot.tossups.tostada.tostado.totable.totaled.totally.totemic.totters.tottery.totting.toucans.touched.toucher.touches.touchup.toughed.toughen.tougher.toughie.toughly.toupees.touraco.tourers.touring.tourism.tourist.tourney.tousing.tousled.tousles.touters.touting.touzled.touzles.towable.towages.towards.towaway.towboat.toweled.towered.towhead.towhees.towline.towmond.towmont.townees.townies.townish.townlet.towpath.towrope.towsack.toxemia.toxemic.toxical.toxines.toxoids.toyless.toylike.toyshop.tracers.tracery.trachea.trachle.tracing.tracked.tracker.tractor.traders.trading.traduce.traffic.tragedy.tragics.traiked.trailed.trailer.trained.trainee.trainer.traipse.traitor.traject.tramcar.tramell.tramels.trammed.trammel.tramped.tramper.trample.tramway.tranced.trances.tranche.trangam.transit.transom.trapans.trapeze.trapped.trapper.trashed.trasher.trashes.trasses.traumas.travail.travels.travois.trawled.trawler.trawley.trayful.treacle.treacly.treaded.treader.treadle.treason.treated.treater.trebled.trebles.treddle.treeing.treetop.trefoil.trehala.trekked.trekker.trellis.tremble.trembly.tremolo.tremors.trenail.trended.trepang.trepans.tressed.tressel.tresses.trestle.trevets.triable.triacid.triadic.triaged.triages.triazin.tribade.tribals.tribune.tribute.triceps.tricing.tricked.tricker.trickie.trickle.trickly.tricksy.triclad.tricorn.tricots.trident.triduum.trienes.trifled.trifler.trifles.trifold.triform.trigged.trigger.trigons.trigram.trijets.trilith.trilled.triller.trilogy.trimers.trimmed.trimmer.trinary.trindle.trining.trinity.trinket.triodes.triolet.trioses.trioxid.tripack.tripart.tripled.triples.triplet.triplex.tripods.tripody.tripoli.tripped.tripper.trippet.triptan.trireme.trisect.triseme.trishaw.trismic.trismus.trisome.trisomy.tritely.tritest.tritium.tritoma.tritone.tritons.triumph.triunes.trivets.trivial.trivium.troaked.trocars.trochal.trochar.trochee.troches.trochil.trocked.trodden.troffer.trogons.troikas.troilus.troking.troland.trolled.troller.trolley.trollop.trommel.tromped.trompes.trooped.trooper.trophic.tropics.tropine.tropins.tropism.trothed.trotted.trotter.trotyls.trouble.troughs.trounce.trouped.trouper.troupes.trouser.trovers.trowels.trowing.trowths.truancy.truants.trucing.trucked.trucker.truckle.trudged.trudgen.trudger.trudges.trueing.truffes.truffle.truisms.trumeau.trumped.trumpet.trundle.trunked.trunnel.trussed.trusser.trusses.trusted.trustee.truster.trustor.trymata.tryouts.trypsin.tryptic.trysail.trysted.tryster.trystes.tsaddik.tsardom.tsarina.tsarism.tsarist.tsatske.tsetses.tsimmes.tsktsks.tsooris.tsouris.tsunami.tuatara.tuatera.tubaist.tubbers.tubbier.tubbing.tubfuls.tubifex.tubings.tubists.tublike.tubular.tubules.tubulin.tuchuns.tuckers.tuckets.tucking.tuffets.tufters.tuftier.tuftily.tufting.tugboat.tuggers.tugging.tughrik.tugless.tugriks.tuilles.tuition.tuladis.tumbled.tumbler.tumbles.tumbrel.tumbril.tumesce.tumidly.tummies.tummler.tumoral.tumours.tumping.tumular.tumults.tumulus.tunable.tunably.tundish.tundras.tuneful.tuneups.tunicae.tunicle.tunnage.tunnels.tunnies.tunning.tupelos.tupping.turacos.turacou.turbans.turbary.turbeth.turbine.turbith.turbits.turbots.turdine.tureens.turfier.turfing.turfman.turfmen.turfski.turgent.turgite.turgors.turions.turista.turkeys.turkois.turmoil.turners.turnery.turning.turnips.turnkey.turnoff.turnons.turnout.turnups.turpeth.turrets.turtled.turtler.turtles.tusches.tushery.tushies.tushing.tuskers.tusking.tussahs.tussars.tussehs.tussers.tussive.tussled.tussles.tussock.tussore.tussors.tussuck.tussurs.tutelar.tutored.tutoyed.tutoyer.tutties.tutting.tuxedos.tuyeres.twaddle.twanged.twanger.twangle.twasome.twattle.tweaked.tweedle.tweener.tweeted.tweeter.tweezed.tweezer.tweezes.twelfth.twelves.twibill.twibils.twiddle.twiddly.twigged.twiggen.twilled.twiners.twinged.twinges.twinier.twining.twinjet.twinkie.twinkle.twinkly.twinned.twinset.twirled.twirler.twisted.twister.twitchy.twitted.twitter.twofers.twofold.twoonie.twosome.tycoons.tylosin.tymbals.tympana.tympani.tympano.tympans.tympany.typable.typebar.typeset.typhoid.typhons.typhoon.typhose.typhous.typical.typiest.typists.tyranny.tyrants.tyronic.tything.tzaddik.tzardom.tzarina.tzarism.tzarist.tzetzes.tzigane.tzimmes.tzitzis.tzitzit.uakaris.ufology.ugliest.ukelele.ukulele.ulcered.ulexite.ullaged.ullages.ulpanim.ulsters.ultimas.ululant.ululate.umbeled.umbered.umbonal.umbones.umbonic.umbrage.umiacks.umlauts.umpired.umpires.umpteen.unacted.unadded.unadept.unadult.unagile.unaging.unaided.unaimed.unaired.unakite.unalike.unaptly.unarmed.unasked.unawake.unaware.unbaked.unbaled.unbales.unbased.unbated.unbears.unbeing.unbelts.unbends.unbinds.unblest.unblock.unbolts.unboned.unbosom.unbound.unbowed.unboxed.unboxes.unbrace.unbraid.unbrake.unbroke.unbuild.unbuilt.unbulky.unburnt.uncaged.uncages.uncaked.uncakes.uncanny.uncased.uncases.unceded.unchain.unchair.unchary.unchoke.uncials.uncinal.uncinus.uncivil.unclamp.unclasp.unclean.unclear.uncleft.unclips.uncloak.unclogs.unclose.uncloud.uncocks.uncoded.uncoils.uncomic.uncorks.uncouth.uncover.uncrate.uncrazy.uncross.uncrown.unction.uncuffs.uncurbs.uncured.uncurls.undated.underdo.undergo.undines.undocks.undoers.undoing.undrape.undrawn.undraws.undress.undrest.undried.undrunk.undular.undying.uneager.unearth.uneases.uneaten.unended.unequal.unfaded.unfaith.unfaked.unfancy.unfazed.unfence.unfired.unfitly.unfixed.unfixes.unfolds.unfound.unfreed.unfrees.unfrock.unfroze.unfunny.unfurls.unfused.unfussy.ungated.ungirds.unglove.unglued.unglues.ungodly.unguard.unguent.ungulae.ungular.unhairs.unhands.unhandy.unhangs.unhappy.unhasty.unheard.unhelms.unhinge.unhired.unhitch.unhoods.unhooks.unhoped.unhorse.unhouse.unhuman.unhusks.unibody.unicorn.unideal.uniface.unified.unifier.unifies.uniform.unipods.uniquer.uniques.unisize.unisons.unitage.unitard.unitary.uniters.unities.uniting.unitive.unitize.unjaded.unjoint.unkempt.unkinks.unknits.unknots.unknown.unlaced.unlaces.unladed.unladen.unlades.unlatch.unleads.unlearn.unleash.unlevel.unliked.unlined.unlinks.unlived.unlives.unloads.unlobed.unlocks.unloose.unloved.unlucky.unmacho.unmaker.unmakes.unmanly.unmasks.unmated.unmeant.unmerry.unmewed.unmined.unmiter.unmitre.unmixed.unmixes.unmolds.unmoors.unmoral.unmoved.unnails.unnamed.unnerve.unnoisy.unnoted.unoiled.unowned.unpacks.unpaged.unpaved.unpicks.unpiled.unpiles.unplait.unplugs.unposed.unquiet.unquote.unraked.unrated.unravel.unrazed.unready.unreels.unreeve.unrests.unrimed.unriper.unrisen.unrobed.unrobes.unrolls.unroofs.unroots.unroped.unrough.unround.unroven.unruled.unsated.unsaved.unsawed.unscrew.unseals.unseams.unseats.unsells.unsewed.unsexed.unsexes.unsharp.unshell.unshift.unships.unshorn.unshowy.unsight.unsized.unslick.unsling.unslung.unsmart.unsnags.unsnaps.unsnarl.unsober.unsolid.unsoncy.unsonsy.unsound.unsowed.unspeak.unspent.unspilt.unsplit.unspoke.unspool.unstack.unstate.unsteel.unsteps.unstick.unstops.unstrap.unstuck.unstung.unswear.unswept.unswore.unsworn.untacks.untaken.untamed.untaxed.unteach.unthink.untimed.untired.untrack.untread.untried.untrims.untruer.untruly.untruss.untruth.untucks.untuned.untunes.untwine.untwist.untying.unurged.unusual.unveils.unvexed.unvocal.unvoice.unwaxed.unweary.unweave.unwhite.unwinds.unwiser.unwooed.unwound.unwoven.unwraps.unwrung.unyoked.unyokes.unyoung.unzoned.upbears.upbeats.upbinds.upboils.upborne.upbound.upbraid.upbuild.upbuilt.upcasts.upchuck.upclimb.upcoast.upcoils.upcourt.upcurls.upcurve.updarts.updated.updater.updates.updived.updives.updraft.updried.updries.upended.upfield.upfling.upflows.upflung.upfolds.upfront.upgazed.upgazes.upgirds.upgoing.upgrade.upgrown.upgrows.upheaps.upheave.uphills.uphoard.upholds.uphroes.upkeeps.uplands.upleaps.upleapt.uplifts.uplight.uplinks.uploads.uppiled.uppiles.uppings.upprops.upraise.uprated.uprates.upreach.uprears.upright.uprisen.upriser.uprises.upriver.uproars.uproots.uprouse.upscale.upsends.upshift.upshoot.upshots.upsides.upsilon.upsized.upsizes.upslope.upsoars.upstage.upstair.upstand.upstare.upstart.upstate.upsteps.upstirs.upstood.upsurge.upsweep.upswell.upswept.upswing.upswung.uptakes.uptalks.uptears.uptempo.upthrew.upthrow.upticks.uptight.uptilts.uptimes.uptowns.uptrend.upturns.upwafts.upwards.upwells.upwinds.uracils.uraemia.uraemic.uralite.uranias.uranide.uranism.uranite.uranium.uranous.uranyls.urbaner.urchins.ureases.uredial.uredium.ureides.uremias.ureters.urethan.urethra.urgency.uridine.urinals.urinary.urinate.urinose.urinous.urnlike.urodele.urolith.urology.uropods.urtexts.usances.usaunce.useable.useably.useless.ushered.usually.usurers.usuries.usurped.usurper.utensil.uterine.utilise.utility.utilize.utmosts.utopian.utopias.utopism.utopist.utricle.uttered.utterer.utterly.uveitic.uveitis.uvulars.uxorial.vacancy.vacated.vacates.vaccina.vaccine.vacuity.vacuole.vacuous.vacuums.vagally.vaginae.vaginal.vaginas.vagrant.vaguely.vaguest.vahines.vailing.vainest.vakeels.valance.valence.valency.valeric.valeted.valgoid.valiant.validly.valines.valises.valkyrs.vallate.valleys.valonia.valours.valuate.valuers.valuing.valutas.valvate.valving.valvula.valvule.vamoose.vamosed.vamoses.vampers.vampier.vamping.vampire.vampish.vanadic.vandals.vandyke.vanilla.vanload.vanners.vanning.vanpool.vantage.vanward.vapidly.vapored.vaporer.vapours.vapoury.vaquero.variant.variate.varices.variers.variety.variola.variole.various.varlets.varment.varmint.varnish.varooms.varsity.varuses.varying.vascula.vassals.vastest.vastier.vastity.vatfuls.vatical.vatting.vaulted.vaulter.vaunted.vaunter.vauntie.vavasor.vawards.vawntie.vealers.vealier.vealing.vectors.vedalia.vedette.veejays.veepees.veeries.veering.vegetal.veggies.vegging.vehicle.veilers.veiling.veiners.veinier.veining.veinlet.veinule.velamen.velaria.velcros.veliger.velites.vellums.velours.veloute.velured.velures.velvets.velvety.venally.venatic.vendace.vendees.venders.vending.vendors.vendues.veneers.venenes.venging.venines.venires.venison.venomed.venomer.ventage.ventail.venters.venting.ventral.venture.venturi.venular.venules.venuses.veranda.verbals.verbena.verbids.verbify.verbile.verbose.verdant.verdict.verdins.verdure.vergers.verging.verglas.veridic.veriest.verismo.verisms.verists.veritas.verites.vermeil.vermian.vermuth.vernier.verruca.versant.versers.versets.versify.versine.versing.version.verstes.vertigo.vervain.vervets.vesicae.vesical.vesicle.vespers.vespids.vespine.vessels.vestals.vestees.vestige.vesting.vestral.vesture.vetches.veteran.vetiver.vetoers.vetoing.vetters.vetting.vexedly.vexilla.viaduct.vialing.vialled.viatica.viators.vibists.vibrant.vibrate.vibrato.vibrion.vibrios.vicarly.viceroy.vichies.vicinal.vicious.vicomte.victims.victors.victory.victual.vicugna.vicunas.vidette.vidicon.viduity.viewers.viewier.viewing.vigours.vikings.vilayet.village.villain.villein.villose.villous.viminal.vinasse.vincula.vinegar.viniest.vintage.vintner.vinylic.violate.violent.violets.violins.violist.violone.viragos.virally.virelai.virelay.viremia.viremic.virgate.virgins.virgule.virions.viroids.viroses.virosis.virtual.virtues.viruses.visaged.visages.visaing.visards.viscera.viscoid.viscose.viscous.viseing.visible.visibly.visions.visited.visiter.visitor.visored.vistaed.visuals.vitally.vitamer.vitamin.vitesse.vitiate.vitrain.vitrics.vitrify.vitrine.vitriol.vittate.vittled.vittles.vivaces.vivaria.vivider.vividly.vivific.vixenly.vizards.viziers.vizored.vizslas.vocable.vocably.vocalic.vocally.vocoder.vodouns.voguers.voguing.voguish.voicers.voicing.voiders.voiding.volante.volcano.volleys.volosts.voltage.voltaic.voluble.volubly.volumed.volumes.voluted.volutes.volutin.volvate.volvuli.vomicae.vomited.vomiter.vomitos.vomitus.voodoos.vorlage.votable.votives.votress.vouched.vouchee.voucher.vouches.voudons.voudoun.vouvray.vowless.voyaged.voyager.voyages.voyeurs.vroomed.vuggier.vulgars.vulgate.vulpine.vulture.vulvate.vyingly.wabbled.wabbler.wabbles.wackest.wackier.wackily.wadable.wadders.waddied.waddies.wadding.waddled.waddler.waddles.wadmaal.wadmals.wadmels.wadmoll.wadmols.wadsets.waeness.waesuck.wafered.waffies.waffing.waffled.waffler.waffles.waftage.wafters.wafting.wafture.wagered.wagerer.waggers.waggery.wagging.waggish.waggled.waggles.waggons.wagoned.wagoner.wagsome.wagtail.wahines.waifing.waifish.wailers.wailful.wailing.wairing.waisted.waister.waiters.waiting.waitron.waivers.waiving.wakames.wakanda.wakeful.wakened.wakener.wakikis.walkers.walking.walkout.walkups.walkway.wallaby.wallahs.wallets.walleye.wallies.walling.wallops.wallows.walnuts.waltzed.waltzer.waltzes.wambled.wambles.wamefou.wameful.wampish.wampums.wamuses.wanders.wangans.wangled.wangler.wangles.wanguns.waniest.wanigan.wanions.wankers.wanking.wannabe.wanness.wannest.wanning.wantage.wanters.wanting.wantons.wapitis.wapping.warbled.warbler.warbles.wardens.warders.warding.warfare.warhead.wariest.warison.warking.warless.warlike.warlock.warlord.warmers.warmest.warming.warmish.warmths.warmups.warners.warning.warpage.warpath.warpers.warping.warrant.warrens.warring.warrior.warsaws.warship.warsled.warsler.warsles.warstle.warthog.wartier.wartime.warwork.warworn.wasabis.washday.washers.washier.washing.washout.washrag.washtub.washups.waspier.waspily.waspish.wassail.wastage.wasters.wastery.wasting.wastrel.wastrie.watapes.watched.watcher.watches.watered.waterer.wattage.wattape.wattest.wattled.wattles.wauchts.waughts.wauking.wauling.wavelet.waveoff.wavered.waverer.wavicle.waviest.wawling.waxable.waxbill.waxiest.waxings.waxlike.waxweed.waxwing.waxwork.waxworm.waybill.waylaid.waylays.wayless.wayside.wayward.wayworn.weakens.weakest.weakish.weakons.wealths.wealthy.weaners.weaning.weapons.wearers.wearied.wearier.wearies.wearily.wearing.wearish.weasand.weasels.weasely.weasons.weather.weavers.weaving.weazand.webbier.webbing.webcams.webcast.webfeet.webfoot.webless.weblike.weblogs.webpage.website.webster.webwork.webworm.wedders.wedding.wedeled.wedelns.wedgier.wedgies.wedging.wedlock.weeders.weedier.weedily.weeding.weekday.weekend.weenier.weenies.weening.weepers.weepier.weepies.weeping.weeting.weevers.weevils.weevily.weeweed.weewees.weigela.weighed.weigher.weights.weighty.weiners.weirded.weirder.weirdie.weirdly.weirdos.welched.welcher.welches.welcome.welders.welding.weldors.welfare.welkins.wellies.welling.welshed.welsher.welshes.welters.welting.wenched.wencher.wenches.wendigo.wending.wennier.wennish.wergeld.wergelt.wergild.werwolf.weskits.wessand.western.westers.westing.wethers.wetland.wetness.wetsuit.wetters.wettest.wetting.wettish.wetware.whacked.whacker.whackos.whalers.whaling.whammed.whanged.whangee.whapped.whapper.wharfed.wharves.whatnot.whatsis.whatsit.wheaten.wheedle.wheeled.wheeler.wheelie.wheeped.wheeple.wheezed.wheezer.wheezes.whelmed.whelped.whereas.whereat.whereby.wherein.whereof.whereon.whereto.wherves.whether.whetted.whetter.wheyish.whicker.whidahs.whidded.whiffed.whiffer.whiffet.whiffle.whiling.whimper.whimsey.whiners.whinged.whinger.whinges.whinier.whining.whipped.whipper.whippet.whipray.whipsaw.whirled.whirler.whirred.whished.whishes.whishts.whisked.whisker.whiskey.whisper.whisted.whistle.whitely.whitens.whitest.whiteys.whither.whitier.whities.whiting.whitish.whitlow.whitter.whittle.whizzed.whizzer.whizzes.whoever.wholism.whomped.whoofed.whooped.whoopee.whooper.whoopie.whoopla.whoosis.whopped.whopper.whoring.whorish.whorled.whortle.whumped.whupped.whydahs.wiccans.wickape.wickers.wickets.wicking.wickiup.wickyup.widders.widdies.widdled.widdles.widened.widener.wideout.widgeon.widgets.widowed.widower.wielded.wielder.wieners.wienies.wifedom.wiftier.wigeons.wiggery.wiggier.wigging.wiggled.wiggler.wiggles.wigless.wiglets.wiglike.wigwags.wigwams.wikiups.wildcat.wilders.wildest.wilding.wildish.wiliest.willers.willets.willful.willied.willing.willows.willowy.wilting.wimbled.wimbles.wimpier.wimping.wimpish.wimpled.wimples.wincers.winceys.winched.wincher.winches.wincing.windage.windbag.winders.windier.windigo.windily.winding.windled.windles.windows.windowy.windrow.windups.windway.winesap.winesop.wingbow.wingers.wingier.winging.winglet.wingman.wingmen.wingtip.winiest.winkers.winking.winkled.winkles.winless.winners.winning.winnock.winnows.winsome.winters.wintery.wintled.wintles.wipeout.wirable.wireman.wiremen.wiretap.wireway.wiriest.wirings.wisdoms.wiseass.wiseguy.wisents.wishers.wishful.wishing.wispier.wispily.wisping.wispish.wissing.wistful.wisting.witched.witches.withers.withier.withies.withing.withins.without.witless.witling.witloof.witness.witneys.wittier.wittily.witting.wittols.wiverns.wizards.wizened.wizzens.woadwax.wobbled.wobbler.wobbles.woeness.woesome.wofully.woggish.wolfers.wolfing.wolfish.wolfram.wolvers.womaned.womanly.wombats.wombier.womeras.wommera.wonders.wonkier.wonners.wonning.wonting.wontons.woodbin.woodbox.woodcut.woodhen.woodier.woodies.wooding.woodlot.woodman.woodmen.woodsia.woodwax.woofers.woofing.woolens.woolers.woolhat.woolier.woolies.woolled.woollen.woolman.woolmen.woomera.woopsed.woopses.woorali.woorari.wooshed.wooshes.woozier.woozily.wordage.wordier.wordily.wording.workbag.workbox.workday.workers.working.workman.workmen.workout.workups.worldly.wormers.wormier.wormils.worming.wormish.worried.worrier.worries.worrits.worsens.worsets.worship.worsted.worthed.wotting.wouldst.wounded.wowsers.wracked.wraiths.wrangle.wrapped.wrapper.wrasses.wrassle.wrastle.wrathed.wreaked.wreaker.wreathe.wreaths.wreathy.wrecked.wrecker.wrested.wrester.wrestle.wricked.wriggle.wriggly.wrights.wringed.wringer.wrinkle.wrinkly.writers.writhed.writhen.writher.writhes.writing.written.wronged.wronger.wrongly.wrought.wryneck.wryness.wurzels.wussier.wussies.wuthers.wyverns.xanthan.xanthic.xanthin.xenopus.xerarch.xeroses.xerosis.xerotic.xeroxed.xeroxes.xeruses.xiphoid.xylenes.xylidin.xylitol.xyloses.xysters.yabbers.yabbies.yachted.yachter.yacking.yaffing.yakkers.yakking.yamalka.yammers.yamulka.yanking.yanquis.yantras.yapocks.yappers.yapping.yardage.yardarm.yarders.yarding.yardman.yardmen.yarners.yarning.yarrows.yashmac.yashmak.yasmaks.yatagan.yatters.yaupers.yauping.yaupons.yautias.yawling.yawners.yawning.yawpers.yawping.ycleped.yealing.yeaning.yearend.yearned.yearner.yeasted.yeelins.yeggman.yeggmen.yellers.yelling.yellows.yellowy.yelpers.yelping.yenning.yerking.yeshiva.yessing.yestern.yeuking.yielded.yielder.yippies.yipping.yirring.yobboes.yocking.yodeled.yodeler.yodlers.yodling.yoghurt.yoginis.yogurts.yohimbe.yolkier.yonkers.younger.younker.youpons.youthen.yowlers.yowling.yperite.yttrias.yttrium.yuckier.yucking.yukkier.yukking.yummier.yummies.yuppies.yuppify.zacaton.zaddick.zaffars.zaffers.zaffirs.zaffres.zagging.zaikais.zamarra.zamarro.zananas.zanders.zaniest.zanyish.zapateo.zappers.zappier.zapping.zaptiah.zaptieh.zarebas.zareeba.zaribas.zealots.zealous.zeatins.zebecks.zebraic.zebrano.zebrass.zebrine.zebroid.zecchin.zechins.zedoary.zelkova.zemstva.zemstvo.zenaida.zenanas.zeniths.zeolite.zephyrs.zeppole.zeppoli.zeroing.zesters.zestful.zestier.zestily.zesting.zeugmas.zibeths.zigging.zigzags.zikurat.zilches.zillahs.zillion.zincate.zincify.zincing.zincite.zincked.zincoid.zincous.zingani.zingano.zingara.zingare.zingari.zingaro.zingers.zingier.zinging.zinkify.zinnias.zipless.ziplock.zippers.zippier.zipping.zircons.zithern.zithers.zizzled.zizzles.zloties.zlotych.zoarial.zoarium.zocalos.zodiacs.zoecium.zoisite.zombies.zombify.zonally.zonated.zonking.zonulae.zonular.zonulas.zonules.zooecia.zoogeny.zooglea.zooidal.zooiest.zoology.zooming.zooning.zootier.zootomy.zorilla.zorille.zorillo.zosters.zouaves.zoysias.zydecos.zygomas.zygoses.zygosis.zygotes.zygotic.zymases.zymogen.zymosan.zymoses.zymosis.zymotic.zymurgy.zyzzyva.",
		() => ".aardvark.aardwolf.aasvogel.abacuses.abalones.abampere.abandons.abapical.abasedly.abashing.abatable.abatises.abattoir.abbacies.abbatial.abbesses.abdicate.abdomens.abdomina.abducens.abducent.abducing.abducted.abductee.abductor.abegging.abelmosk.aberrant.abetment.abettals.abetters.abetting.abettors.abeyance.abeyancy.abfarads.abhenrys.abhorred.abhorrer.abidance.abigails.abjectly.abjurers.abjuring.ablating.ablation.ablative.ablators.ablegate.ableisms.ableists.abluents.ablution.abnegate.abnormal.aboideau.aboiteau.abomasal.abomasum.abomasus.aborally.aborning.aborters.aborting.abortion.abortive.aboulias.abounded.abrachia.abradant.abraders.abrading.abrasion.abrasive.abreacts.abridged.abridger.abridges.abrogate.abrosias.abrupter.abruptly.abscised.abscises.abscisin.abscissa.absconds.abseiled.absences.absented.absentee.absenter.absently.absinthe.absinths.absolute.absolved.absolver.absolves.absonant.absorbed.absorber.abstains.absterge.abstract.abstrict.abstruse.absurder.absurdly.abundant.abusable.abutilon.abutment.abuttals.abutters.abutting.academes.academia.academic.acalephe.acalephs.acanthae.acanthus.acapnias.acarbose.acaridan.acarines.acarpous.acaudate.acauline.acaulose.acaulous.acceders.acceding.accented.accentor.accepted.acceptee.accepter.acceptor.accessed.accesses.accident.accidias.accidies.acclaims.accolade.accorded.accorder.accosted.accounts.accouter.accoutre.accredit.accreted.accretes.accruals.accruing.accuracy.accurate.accursed.accusals.accusant.accusers.accusing.accustom.aceldama.acentric.acequias.acerated.acerbate.acerbest.acerbity.acerolas.acervate.acervuli.acescent.acetamid.acetated.acetates.acetones.acetonic.acetoxyl.acetylic.achenial.achieved.achiever.achieves.achillea.achiness.achingly.achiotes.acholias.achromat.achromic.aciculae.acicular.aciculas.aciculum.acidemia.acidhead.acidness.acidoses.acidosis.acidotic.aciduria.acierate.acoelous.acolytes.aconites.aconitic.aconitum.acoustic.acquaint.acquests.acquired.acquiree.acquirer.acquires.acrasias.acrasins.acreages.acridest.acridine.acridity.acrimony.acrobats.acrodont.acrogens.acrolect.acrolein.acrolith.acromial.acromion.acronyms.acrosome.acrostic.acrotism.acrylate.acrylics.actiniae.actinian.actinias.actinide.actinism.actinium.actinoid.actinons.actioner.activate.actively.activism.activist.activity.activize.actorish.actressy.actually.actuated.actuates.actuator.acuities.aculeate.acutance.acylated.acylates.acyloins.adamance.adamancy.adamants.adamsite.adapters.adapting.adaption.adaptive.adaptors.addendum.addicted.addition.additive.additory.adducent.adducers.adducing.adducted.adductor.adeeming.adenines.adenitis.adenoids.adenomas.adenoses.adenosis.adeptest.adequacy.adequate.adherend.adherent.adherers.adhering.adhesion.adhesive.adhibits.adiposes.adiposis.adjacent.adjoined.adjoints.adjourns.adjudged.adjudges.adjuncts.adjurers.adjuring.adjurors.adjusted.adjuster.adjustor.adjutant.adjuvant.admasses.admirals.admirers.admiring.admitted.admittee.admitter.admixing.admonish.adnation.adonises.adoptees.adopters.adopting.adoption.adoptive.adorable.adorably.adorners.adorning.adrenals.adroiter.adroitly.adscript.adsorbed.adsorber.adularia.adulated.adulates.adulator.adultery.adumbral.aduncate.aduncous.advanced.advancer.advances.advected.adverted.advisees.advisers.advising.advisors.advisory.advocacy.advocate.advowson.adynamia.adynamic.aecidial.aecidium.aequorin.aerating.aeration.aerators.aerially.aerified.aerifies.aeriform.aerobats.aerobics.aerobium.aeroduct.aerodyne.aerofoil.aerogels.aerogram.aerolite.aerolith.aerology.aeronaut.aeronomy.aerosats.aerosols.aerostat.aesthete.aestival.aetheric.afebrile.affaires.affected.affecter.afferent.affiance.affiants.affiches.affinely.affinity.affirmed.affirmer.affixers.affixial.affixing.afflatus.afflicts.affluent.affluxes.afforded.afforest.affrayed.affrayer.affright.affronts.affusion.afghanis.aflutter.aftertax.agalloch.agalwood.agametes.agaroses.agatized.agatizes.agedness.agemates.agencies.agendums.ageneses.agenesia.agenesis.agenetic.agenized.agenizes.agential.agenting.agentive.ageratum.aggadahs.aggadoth.aggraded.aggrades.aggrieve.aginners.agiotage.agisting.agitable.agitated.agitates.agitator.agitprop.aglimmer.aglitter.aglycone.aglycons.agminate.agnation.agnizing.agnomens.agnomina.agnosias.agnostic.agonised.agonises.agonists.agonized.agonizes.agouties.agraffes.agraphia.agraphic.agrarian.agreeing.agrestal.agrestic.agrimony.agrology.agronomy.agrypnia.aguacate.aguelike.agueweed.aguishly.aigrette.aiguille.ailerons.ailments.aimfully.ainsells.airboats.airborne.airbound.airbrush.airburst.airbuses.aircheck.aircoach.aircraft.aircrews.airdates.airdrome.airdrops.airfares.airfield.airflows.airfoils.airframe.airglows.airheads.airholes.airiness.airlifts.airliner.airlines.airmails.airparks.airplane.airplays.airports.airposts.airpower.airproof.airscape.airscrew.airsheds.airships.airshots.airshows.airspace.airspeed.airstrip.airthing.airtight.airtimes.airwaves.airwoman.airwomen.aisleway.akinesia.akinetic.akvavits.alachlor.alacrity.alamedas.alamodes.alanines.alarming.alarmism.alarmist.alarumed.alastors.alations.albacore.albedoes.albicore.albinism.albizias.albizzia.albumens.albumins.albumose.alburnum.alcahest.alcaides.alcaldes.alcaydes.alcazars.alchemic.alcidine.alcohols.aldehyde.alderfly.alderman.aldermen.aldicarb.aldolase.aleatory.alehouse.alembics.alencons.alertest.alerting.aleurone.aleurons.alewives.alexines.alfalfas.alfaquin.alfaquis.alforjas.alfresco.algaroba.algebras.algerine.algicide.algidity.alginate.algology.algorism.aliasing.alibiing.alidades.alienage.alienate.alienees.alieners.aliening.alienism.alienist.alienors.alighted.aligners.aligning.aliments.aliquant.aliquots.alizarin.alkahest.alkalies.alkalify.alkaline.alkalise.alkalize.alkaloid.alkanets.alkoxide.alkylate.allanite.allayers.allaying.allegers.alleging.allegory.allegros.allelism.alleluia.allergen.allergic.allergin.alleyway.allheals.alliable.alliance.allicins.allobars.allocate.allodial.allodium.allogamy.allonges.allonyms.allopath.allosaur.allotted.allottee.allotter.allotype.allotypy.allovers.allowing.alloxans.alloying.allseeds.allsorts.allspice.alluding.allurers.alluring.allusion.allusive.alluvial.alluvion.alluvium.almagest.almanack.almanacs.almemars.almighty.almoners.alogical.alopecia.alopecic.alphabet.alphorns.alphosis.alpinely.alpinism.alpinist.alterant.alterers.altering.alterity.althaeas.althorns.although.altitude.altoists.altruism.altruist.aluminas.alumines.aluminic.aluminum.alumroot.alunites.alveolar.alveolus.alyssums.amadavat.amalgams.amandine.amanitas.amanitin.amaranth.amarelle.amaretti.amaretto.amarones.amassers.amassing.amateurs.amazedly.ambaries.amberies.amberina.amberoid.ambiance.ambience.ambients.ambition.ambivert.amboinas.amboynas.ambroids.ambrosia.ambsaces.ambulant.ambulate.ambushed.ambusher.ambushes.ameerate.amelcorn.amenable.amenably.amenders.amending.amentias.amercers.amercing.amesaces.amethyst.amiantus.amicable.amicably.amidases.amidines.amidogen.amidones.amidship.amirates.amitoses.amitosis.amitotic.amitrole.ammeters.ammocete.ammonals.ammoniac.ammonias.ammonify.ammonite.ammonium.ammonoid.amnesiac.amnesias.amnesics.amnestic.amnionic.amniotes.amniotic.amoebean.amoeboid.amorally.amoretti.amoretto.amorists.amortise.amortize.amosites.amotions.amounted.amperage.amphibia.amphioxi.amphipod.amphorae.amphoral.amphoras.amplexus.ampoules.ampullae.ampullar.amputate.amputees.amreetas.amtracks.amusable.amusedly.amygdala.amygdale.amygdule.amylases.amylenes.amylogen.amyloids.amyloses.anabaena.anabases.anabasis.anabatic.anableps.anabolic.anaconda.anaemias.anaerobe.anaglyph.anagoges.anagogic.anagrams.analcime.analcite.analecta.analects.analemma.analgias.analogic.analogue.analysed.analyser.analyses.analysis.analysts.analytes.analytic.analyzed.analyzer.analyzes.anapaest.anapests.anaphase.anaphora.anaphors.anarchic.anasarca.anatases.anathema.anatomic.anatoxin.ancestor.ancestry.anchored.anchoret.anchusas.anchusin.ancients.ancillae.ancillas.anconeal.anconoid.andantes.andesite.andesyte.andirons.androgen.androids.anearing.anecdota.anecdote.anechoic.anemones.anemoses.anemosis.anergias.anergies.aneroids.anestrus.anethole.anethols.aneurins.aneurism.aneurysm.angakoks.angarias.angaries.angelica.angeling.angering.anginose.anginous.angiomas.anglepod.anglings.angriest.angstrom.angulate.angulose.angulous.anhingas.anilines.animalic.animally.animated.animater.animates.animator.animisms.animists.animuses.aniseeds.anisette.anisoles.ankerite.ankushes.ankylose.annalist.annattos.annealed.annealer.annelids.annexing.annotate.announce.annoyers.annoying.annually.annulate.annulets.annulled.annulose.anodally.anodized.anodizes.anodynes.anodynic.anointed.anointer.anolytes.anoopsia.anopsias.anoretic.anorexia.anorexic.anorthic.anosmias.anovular.anoxemia.anoxemic.anserine.anserous.answered.answerer.antacids.antalgic.antbears.anteater.antecede.antedate.antefixa.antelope.antennae.antennal.antennas.antepast.anterior.anteroom.antetype.antevert.anthelia.anthelix.anthemed.anthemia.anthemic.antheral.antherid.antheses.anthesis.anthills.anthodia.antiacne.antiarin.antiatom.antibias.antibody.antiboss.anticity.anticked.anticold.anticult.antidora.antidote.antidrug.antifoam.antigang.antigene.antigens.antihero.antiking.antileak.antileft.antilife.antilock.antilogs.antilogy.antimale.antimask.antimere.antimine.antimony.antinode.antinome.antinomy.antinuke.antiphon.antipill.antipode.antipole.antipope.antiporn.antipyic.antiqued.antiquer.antiques.antirape.antiriot.antirock.antiroll.antirust.antisera.antiship.antiskid.antislip.antismog.antismut.antisnob.antispam.antistat.antitank.antitype.antiwear.antiweed.antlered.antlions.antonyms.antonymy.antrorse.antsiest.anureses.anuresis.anuretic.anviling.anvilled.anviltop.anyplace.anything.anywhere.aoristic.apagoges.apagogic.apanages.aparejos.apatetic.apathies.apatites.aperient.aperitif.aperture.aphagias.aphanite.aphasiac.aphasias.aphasics.aphelian.aphelion.aphidian.apholate.aphonias.aphonics.aphorise.aphorism.aphorist.aphorize.aphthous.apiarian.apiaries.apiarist.apically.apiculus.apimania.apiology.aplasias.aplastic.apoapses.apoapsis.apocarps.apocarpy.apocopes.apocopic.apocrine.apodoses.apodosis.apogamic.apologal.apologia.apologue.apolunes.apomicts.apomixes.apomixis.apophony.apophyge.apoplexy.apospory.apostacy.apostasy.apostate.apostils.apostles.apothece.apothegm.apothems.appalled.appanage.apparats.apparels.apparent.appealed.appealer.appeared.appeased.appeaser.appeases.appellee.appellor.appended.appendix.appestat.appetent.appetite.applauds.applause.appliers.applique.applying.appoints.apposers.apposing.apposite.appraise.apprised.appriser.apprises.apprized.apprizer.apprizes.approach.approval.approved.approver.approves.appulses.apractic.apraxias.apricots.aproning.apterium.apterous.aptitude.apyrases.apyretic.aquacade.aquafarm.aqualung.aquanaut.aquarial.aquarian.aquarist.aquarium.aquatics.aquatint.aquatone.aquavits.aqueduct.aquifers.aquiline.arabesks.arabicas.arabized.arabizes.araceous.arachnid.araneids.arapaima.ararobas.arbalest.arbalist.arbelest.arbiters.arbitral.arboreal.arboreta.arborist.arborize.arborous.arboured.arbuscle.arbutean.arcadian.arcadias.arcading.arcanums.arcature.archaeal.archaean.archaeon.archaise.archaism.archaist.archaize.archduke.archfoes.archines.archings.archival.archived.archives.archness.archways.arciform.arcsines.arcuated.ardently.areaways.arenites.areolate.areology.arethusa.argental.argentic.argentum.arginase.arginine.argonaut.argosies.arguable.arguably.argufied.argufier.argufies.argument.aridness.ariettas.ariettes.arillate.arillode.arilloid.aristate.armagnac.armament.armature.armbands.armchair.armholes.armigero.armigers.armillae.armillas.armloads.armlocks.armoires.armonica.armorers.armorial.armories.armoring.armoured.armourer.armrests.armyworm.arnattos.arnottos.arointed.aromatic.arousals.arousers.arousing.aroynted.arpeggio.arquebus.arraigns.arranged.arranger.arranges.arrantly.arrayals.arrayers.arraying.arrested.arrestee.arrester.arrestor.arrhizal.arrivals.arrivers.arriving.arrogant.arrogate.arrowing.arsenals.arsenate.arsenics.arsenide.arsenite.arsenous.arsonist.arsonous.artefact.arterial.arteries.artfully.articled.articles.artifact.artifice.artiness.artisans.artistes.artistic.artistry.artsiest.artworks.arugolas.arugulas.arythmia.arythmic.asbestic.asbestos.asbestus.ascarids.ascended.ascender.ascetics.ascidian.ascidium.ascocarp.ascorbic.ascribed.ascribes.ashcakes.ashfalls.ashiness.ashlared.ashlered.ashplant.ashtrays.asocials.asparkle.asperate.asperges.asperity.aspersed.asperser.asperses.aspersor.asphalts.aspheric.asphodel.asphyxia.aspirant.aspirata.aspirate.aspirers.aspiring.aspirins.assagais.assailed.assailer.assassin.assaults.assayers.assaying.assegais.assemble.assembly.assented.assenter.assentor.asserted.asserter.assertor.assessed.assesses.assessor.assholes.assignat.assigned.assignee.assigner.assignor.assisted.assister.assistor.assoiled.assonant.assorted.assorter.assuaged.assuager.assuages.assumers.assuming.assureds.assurers.assuring.assurors.asswaged.asswages.astasias.astatine.asterias.asterisk.asterism.asternal.asteroid.asthenia.asthenic.astigmia.astilbes.astomous.astonied.astonies.astonish.astounds.astragal.astrally.astricts.astringe.astutely.asyndeta.atabrine.ataghans.atalayas.atamasco.ataraxia.ataraxic.atavisms.atavists.atechnic.ateliers.atemoyas.atenolol.athanasy.atheisms.atheists.atheling.atheneum.atheroma.athetoid.athletes.athletic.athodyds.atlantes.atomical.atomised.atomiser.atomises.atomisms.atomists.atomized.atomizer.atomizes.atonable.atonally.atrazine.atremble.atresias.atrocity.atrophia.atrophic.atropine.atropins.atropism.attached.attacher.attaches.attacked.attacker.attagirl.attained.attainer.attaints.attemper.attempts.attended.attendee.attender.attested.attester.attestor.atticism.atticist.atticize.attiring.attitude.attorned.attorney.attracts.attrited.attrites.attuning.atwitter.atypical.auberges.aubretia.aubrieta.auctions.audacity.audibled.audibles.audience.audients.auditees.auditing.audition.auditive.auditors.auditory.augments.augurers.auguries.auguring.auguster.augustly.aunthood.auntlier.auntlike.aurality.aureolae.aureolas.aureoled.aureoles.auricled.auricles.auricula.auriform.aurorean.ausforms.auspices.austerer.australs.autacoid.autarchs.autarchy.autarkic.autecism.authored.autistic.autobahn.autocade.autocoid.autocrat.autodyne.autogamy.autogeny.autogiro.autogyro.autoharp.autolyse.autolyze.automata.automate.automats.autonomy.autonyms.autopens.autopsic.autosome.autotomy.autotype.autotypy.autumnal.autunite.auxetics.avadavat.availing.avarices.avellane.avengers.avenging.aventail.averaged.averages.averment.averring.aversely.aversion.aversive.averters.averting.avgasses.avianize.aviaries.aviarist.aviating.aviation.aviators.aviatrix.avicular.avidness.avifauna.avigator.avionics.avocados.avodires.avoiders.avoiding.avouched.avoucher.avouches.avowable.avowably.avowedly.avulsing.avulsion.awaiters.awaiting.awakened.awakener.awardees.awarders.awarding.awayness.aweather.awfuller.awlworts.awninged.axiality.axillars.axillary.axiology.axletree.axolotls.axonemal.axonemes.axoplasm.ayurveda.azimuths.azotemia.azotemic.azotised.azotises.azotized.azotizes.azoturia.azulejos.azurites.azygoses.baalisms.baaskaap.baaskaps.baasskap.babassus.babbitry.babbitts.babblers.babbling.babesias.babiches.babirusa.babushka.babydoll.babyhood.babysits.bacalaos.baccaras.baccarat.baccated.bacchant.bacchius.bachelor.bacillar.bacillus.backache.backbeat.backbend.backbite.backbone.backcast.backchat.backdate.backdoor.backdrop.backfill.backfire.backfits.backflip.backflow.backhand.backhaul.backhoed.backhoes.backings.backland.backlash.backless.backlist.backload.backlogs.backmost.backouts.backpack.backrest.backroom.backrush.backsaws.backseat.backsets.backside.backslap.backslid.backspin.backstab.backstay.backstop.backward.backwash.backwood.backwrap.backyard.baclofen.bacteria.bacterin.baculine.baculums.badassed.badasses.badgered.badgerly.badinage.badlands.badmouth.bafflers.baffling.bagasses.baggages.baggiest.baggings.baghouse.bagpiped.bagpiper.bagpipes.baguette.bagworms.bahadurs.baidarka.bailable.bailiffs.bailment.bailouts.bailsman.bailsmen.bairnish.baitfish.bakelite.bakemeat.bakeries.bakeshop.bakeware.baklavas.baklawas.bakshish.balanced.balancer.balances.baldhead.baldness.baldpate.baldrick.baldrics.balefire.balisaur.balkiest.balkline.ballades.balladic.balladry.ballasts.balletic.ballgame.ballhawk.ballista.ballonet.ballonne.balloons.balloted.balloter.ballpark.ballroom.ballsier.ballutes.ballyard.ballyhoo.ballyrag.balmiest.balmlike.balmoral.baloneys.balsamed.balsamic.baluster.bambinos.banality.banalize.banausic.bandaged.bandager.bandages.bandanas.bandanna.bandeaus.bandeaux.banderol.banditos.banditry.banditti.bandmate.bandoras.bandores.bandsaws.bandsman.bandsmen.bandying.bangkoks.bangtail.banished.banisher.banishes.banister.banjaxed.banjaxes.banjoist.bankable.bankbook.bankcard.bankerly.bankings.banknote.bankroll.bankrupt.banksias.bankside.bannable.bannered.banneret.bannerol.bannocks.banquets.banshees.banshies.bantengs.bantered.banterer.bantling.baptised.baptises.baptisia.baptisms.baptists.baptized.baptizer.baptizes.barathea.barbaric.barbasco.barbecue.barbells.barbeque.barbered.barberry.barbette.barbican.barbicel.barbital.barbless.barbules.barbwire.barchans.bareback.bareboat.barefoot.barehand.barehead.bareness.baresark.barflies.bargains.bargello.bargeman.bargemen.barghest.barguest.barillas.baristas.baritone.barkeeps.barkiest.barkless.barleduc.barmaids.barmiest.barnacle.barniest.barnlike.barnyard.barogram.baronage.baroness.baronets.baronial.baronies.baronnes.baroques.barosaur.barouche.barrable.barracks.barraged.barrages.barranca.barranco.barrater.barrator.barratry.barreled.barrener.barrenly.barretor.barretry.barrette.barriers.barrooms.barstool.bartends.bartered.barterer.bartisan.bartizan.barwares.baryonic.barytone.barytons.basaltes.basaltic.bascules.baseball.baseborn.baseless.baseline.basement.baseness.basenjis.bashings.bashlyks.basicity.basidial.basidium.basified.basifier.basifies.basilary.basilect.basilica.basilisk.basinets.basinful.basketry.basmatis.basophil.basseted.bassetts.bassinet.bassists.bassness.bassoons.basswood.bastards.bastardy.bastiles.bastille.bastings.bastions.batchers.batching.batfowls.batgirls.bathetic.bathless.bathmats.bathoses.bathrobe.bathroom.bathtubs.batiking.batistes.battalia.batteaux.battened.battener.battered.batterer.batterie.battiest.battings.battlers.battling.baudekin.baudrons.bauhinia.baulkier.baulking.bauxites.bauxitic.bawcocks.bawdiest.bawdrics.bawdries.bayadeer.bayadere.bayberry.bayonets.baywoods.bazookas.bdellium.beachboy.beachier.beaching.beaconed.beadiest.beadings.beadlike.beadroll.beadsman.beadsmen.beadwork.beakiest.beakless.beaklike.beamiest.beamless.beamlike.beanbags.beanball.beanlike.beanpole.bearable.bearably.bearcats.bearding.bearhugs.bearings.bearlike.bearskin.bearwood.beasties.beatable.beatific.beatings.beatless.beatniks.beaucoup.beauties.beautify.beavered.bebeerus.bebloods.bebopper.becalmed.becapped.becarpet.bechalks.bechamel.bechance.becharms.beckoned.beckoner.beclamor.beclasps.becloaks.beclothe.beclouds.beclowns.becoming.becoward.becrawls.becrimed.becrimes.becrowds.becrusts.becudgel.becursed.becurses.bedabble.bedamned.bedarken.bedaubed.bedazzle.bedboard.bedchair.bedcover.beddable.beddings.bedeafen.bedecked.bedesman.bedesmen.bedevils.bedewing.bedframe.bedgowns.bediaper.bedights.bedimmed.bedimple.bedizens.bedlamps.bedmaker.bedmates.bedotted.bedouins.bedplate.bedposts.bedquilt.bedrails.bedraped.bedrapes.bedrench.bedrivel.bedrocks.bedrolls.bedrooms.bedsheet.bedsides.bedsonia.bedsores.bedstand.bedstead.bedstraw.bedticks.bedtimes.bedumbed.bedunced.bedunces.bedwards.bedwarfs.beebread.beechier.beechnut.beefalos.beefcake.beefiest.beefless.beefwood.beehives.beelined.beelines.beeriest.beeswing.beetlers.beetling.beetroot.beeyards.befallen.befinger.befitted.befleaed.beflecks.beflower.befogged.befooled.befouled.befouler.befriend.befringe.befuddle.begalled.begazing.begetter.beggared.beggarly.beginner.begirded.begirdle.beglamor.beglooms.begonias.begorrah.begotten.begrimed.begrimes.begroans.begrudge.beguiled.beguiler.beguiles.beguines.begulfed.behalves.behavers.behaving.behavior.beheadal.beheaded.beheader.behemoth.beholden.beholder.behooved.behooves.behoving.behowled.beignets.bejabers.bejeezus.bejewels.bejumble.bekissed.bekisses.beknight.belabors.belabour.beladied.beladies.belauded.belayers.belaying.belchers.belching.beldames.beleaped.belfried.belfries.believed.believer.believes.beliquor.belittle.bellbird.bellboys.belleeks.bellhops.bellings.bellowed.bellower.bellpull.bellwort.bellyful.bellying.belonged.beloveds.beltings.beltless.beltline.beltways.bemadams.bemadden.bemeaned.bemingle.bemiring.bemisted.bemixing.bemoaned.bemocked.bemuddle.bemurmur.bemusing.bemuzzle.benadryl.benaming.benchers.benching.benchtop.bendable.bendayed.bendiest.bendways.bendwise.benedick.benedict.benefice.benefits.benignly.benisons.benjamin.benomyls.benthons.bentwood.benumbed.benzenes.benzidin.benzines.benzoate.benzoins.benzoles.benzoyls.benzylic.bepaints.bepimple.bequeath.bequests.beraking.berascal.berating.berberin.berberis.berceuse.berdache.bereaved.bereaver.bereaves.berettas.bergamot.bergeres.berhymed.berhymes.beriberi.berimbau.beriming.beringed.berlines.bermudas.bernicle.berouged.berretta.berrying.berseems.berserks.berthing.beryline.bescorch.bescours.bescreen.beseemed.besetter.beshadow.beshamed.beshames.beshiver.beshouts.beshrews.beshroud.besieged.besieger.besieges.beslaved.beslimed.beslimes.besmears.besmiled.besmiles.besmirch.besmoked.besmokes.besmooth.besmudge.besnowed.besoothe.besotted.besought.bespeaks.bespoken.bespouse.bespread.besprent.besteads.bestiary.bestowal.bestowed.bestower.bestrewn.bestrews.bestride.bestrode.bestrown.bestrows.beswarms.betaines.betaking.betatron.betatter.betelnut.bethanks.bethesda.bethinks.bethorns.bethumps.betiding.betokens.betonies.betrayal.betrayed.betrayer.betroths.bettered.beuncled.bevatron.bevelers.beveling.bevelled.beveller.beverage.bevomits.bewailed.bewailer.bewaring.bewigged.bewilder.bewinged.bewormed.bewrayed.bewrayer.bezazzes.beziques.bezzants.bhangras.bheestie.bhisties.biacetyl.biannual.biasedly.biasness.biassing.biathlon.bibcocks.bibelots.biblical.biblists.bibulous.bicaudal.bicepses.bichrome.bickered.bickerer.bicolors.bicolour.biconvex.bicornes.bicuspid.bicycled.bicycler.bicycles.bicyclic.bidarkas.bidarkee.biddable.biddably.biddings.bidental.bielding.biennale.biennial.biennium.bifacial.bifidity.bifocals.biforate.biforked.biformed.bigamies.bigamist.bigamous.bigarade.bigaroon.bigeminy.bigfoots.biggings.bigheads.bighorns.bighting.bigmouth.bignonia.bigstick.bihourly.bijugate.bijugous.bikeways.bikinied.bilabial.bilander.bilayers.bilberry.bilevels.bilgiest.bilinear.billable.billbugs.billeted.billeter.billfish.billfold.billhead.billhook.billiard.billings.billions.billowed.billycan.bilobate.bilsteds.biltongs.bimanous.bimanual.bimbette.bimensal.bimester.bimetals.bimethyl.bimorphs.binaries.binarism.binately.binaural.bindable.bindings.bindweed.bingeing.binnacle.binocles.binomial.bioassay.biochips.biocidal.biocides.bioclean.biocycle.bioethic.biofilms.biofuels.biogases.biogenic.bioherms.biologic.biolyses.biolysis.biolytic.biometer.biometry.biomorph.bionomic.bioplasm.biopsied.biopsies.bioscope.bioscopy.biosolid.biotechs.biotical.biotites.biotitic.biotopes.biotoxin.biotrons.biotypes.biotypic.biovular.biparous.biparted.biphasic.biphenyl.biplanes.biracial.biradial.biramose.biramous.birching.birdbath.birdcage.birdcall.birddogs.birdfarm.birdfeed.birdings.birdlife.birdlike.birdlime.birdseed.birdseye.birdshot.birdsong.birettas.birianis.birlings.birretta.birrotch.birthday.birthing.biryanis.biscotti.biscotto.biscuits.biscuity.bisected.bisector.bisexual.bishoped.bismuths.bisnagas.bistered.bistorts.bistoury.bistroic.bitchery.bitchier.bitchily.bitching.biteable.bitewing.bitingly.bitsiest.bitstock.bittered.bitterer.bitterly.bitterns.bittiest.bittings.bittocks.bitumens.biunique.bivalent.bivalved.bivalves.bivinyls.bivouacs.biweekly.biyearly.bizarres.bizarros.biznagas.blabbers.blabbing.blackboy.blackcap.blackens.blackest.blackfin.blackfly.blackgum.blacking.blackish.blackleg.blackout.blacktop.bladders.bladdery.bladings.blagging.blamable.blamably.blameful.blanched.blancher.blanches.blandest.blandish.blankest.blankets.blanking.blarneys.blastema.blasters.blastier.blasties.blasting.blastoff.blastoma.blastula.blatancy.blathers.blatters.blatting.blauboks.blazered.blazoned.blazoner.blazonry.bleached.bleacher.bleaches.bleakest.bleakish.blearier.blearily.blearing.bleaters.bleating.blebbing.bleeders.bleeding.bleepers.bleeping.blellums.blenched.blencher.blenches.blenders.blending.blennies.blesboks.blesbuck.blessers.blessing.blethers.blighted.blighter.blimpish.blindage.blinders.blindest.blindgut.blinding.blinkard.blinkers.blinking.blintzes.blipping.blissful.blissing.blisters.blistery.blithely.blithers.blithest.blitzers.blitzing.blizzard.bloaters.bloating.blobbing.blockade.blockage.blockers.blockier.blocking.blockish.bloggers.blogging.blondest.blondine.blondish.bloodfin.bloodied.bloodier.bloodies.bloodily.blooding.bloodred.bloomers.bloomery.bloomier.blooming.bloopers.blooping.blossoms.blossomy.blotched.blotches.blotless.blotters.blottier.blotting.blousier.blousily.blousing.blousons.bloviate.blowback.blowball.blowdown.blowfish.blowguns.blowhard.blowhole.blowiest.blowjobs.blowoffs.blowouts.blowpipe.blowsier.blowsily.blowtube.blowzier.blowzily.blubbers.blubbery.blubbing.bluchers.bludgeon.bludgers.bludging.blueball.bluebeat.bluebell.bluebill.bluebird.bluebook.bluecaps.bluecoat.bluefins.bluefish.bluegill.bluegums.bluehead.blueings.bluejack.bluejays.blueline.blueness.bluenose.bluesier.bluesman.bluesmen.bluestem.bluetick.blueweed.bluewood.bluffers.bluffest.bluffing.blunders.blungers.blunging.bluntest.blunting.blurbing.blurbist.blurrier.blurrily.blurring.blurters.blurting.blushers.blushful.blushing.blusters.blustery.boarders.boarding.boardman.boardmen.boarfish.boasters.boastful.boasting.boatable.boatbill.boatfuls.boathook.boatings.boatlift.boatlike.boatload.boatneck.boatsman.boatsmen.boatyard.bobbinet.bobbling.bobbysox.bobeches.bobolink.bobsleds.bobstays.bobtails.bobwhite.bocaccio.bodement.bodhrans.bodiless.bodingly.bodysuit.bodysurf.bodywork.boehmite.boffolas.bogarted.bogbeans.bogeying.bogeyman.bogeymen.boggiest.bogglers.boggling.bogwoods.bogyisms.bohemian.bohemias.bohriums.boilable.boiloffs.boilover.boinking.boiserie.boldface.boldness.bolivars.bolivias.bollards.bollixed.bollixes.bollocks.bolloxed.bolloxes.bollworm.bolognas.boloneys.bolshies.bolsters.bolthead.bolthole.boltless.boltlike.boltonia.boltrope.bombable.bombards.bombasts.bombesin.bombings.bomblets.bombload.bombycid.bombyxes.bonanzas.bondable.bondages.bondings.bondless.bondmaid.bondsman.bondsmen.bonefish.bonehead.boneless.bonemeal.bonesets.boneyard.boneyest.bonfires.bongoist.bonhomie.boniatos.boniface.boniness.bonitoes.bonneted.bonniest.bonnocks.bonspell.bonspiel.bontebok.boobirds.boodlers.boodling.boogeyed.boogying.boogyman.boogymen.boohooed.bookable.bookcase.bookends.bookfuls.bookings.booklets.booklice.booklore.bookmark.bookrack.bookrest.bookshop.bookworm.boomiest.boomkins.boomlets.boomtown.boondock.boonless.boosters.boosting.bootable.bootjack.bootlace.bootlegs.bootless.bootlick.booziest.boracite.borating.bordeaux.bordello.bordered.borderer.bordures.boreases.borecole.boredoms.borehole.boresome.boringly.borneols.bornites.bornitic.boroughs.borrelia.borrowed.borrower.borsches.borschts.borstals.boscages.boschbok.boshboks.boshvark.boskages.boskiest.bosoming.bosquets.bossdoms.bossiest.bossisms.botanica.botanies.botanise.botanist.botanize.botchers.botchery.botchier.botchily.botching.botflies.bothered.bothrium.botonnee.botryoid.botryose.botrytis.bottlers.bottling.bottomed.bottomer.bottomry.botulins.botulism.bouchees.boudoirs.bouffant.boughpot.boughten.bouillon.boulders.bouldery.bouncers.bouncier.bouncily.bouncing.boundary.bounders.bounding.bountied.bounties.bouquets.bourbons.bourdons.bourgeon.bourrees.bourride.boursins.bourtree.bousouki.boutique.bouviers.bouzouki.bovinely.bovinity.boweling.bowelled.boweries.bowering.bowfront.bowheads.bowingly.bowknots.bowlders.bowlfuls.bowlines.bowlings.bowllike.bowshots.bowsprit.bowwowed.boxballs.boxberry.boxboard.boxhauls.boxiness.boxthorn.boxwoods.boyarism.boychick.boychiks.boycotts.boyhoods.boyishly.brabbled.brabbler.brabbles.bracelet.braceros.brachets.brachial.brachium.bracings.braciola.braciole.brackens.brackets.brackish.braconid.bracteal.bractlet.bradawls.bradding.bradoons.braggart.braggers.braggest.braggier.bragging.braiders.braiding.brailing.brailled.brailler.brailles.brainiac.brainier.brainily.braining.brainish.brainpan.braising.brakeage.brakeman.brakemen.brakiest.brambled.brambles.branched.branches.branchia.branders.brandied.brandies.branding.brandish.branners.brannier.branning.brantail.brashest.brashier.brasiers.brasilin.brassage.brassard.brassart.brassica.brassier.brassies.brassily.brassing.brassish.brattice.brattier.brattish.brattled.brattles.braunite.bravados.bravoing.bravuras.brawlers.brawlier.brawling.brawnier.brawnily.brazened.brazenly.braziers.brazilin.breached.breacher.breaches.breadbox.breading.breadnut.breadths.breakage.breakers.breaking.breakout.breakups.breaming.breasted.breathed.breather.breathes.breccial.breccias.brechams.brechans.breeched.breeches.breeders.breeding.breezier.breezily.breezing.bregmata.bregmate.brethren.brevetcy.breveted.breviary.breviers.brewages.brewings.brewises.brewpubs.brewskis.bribable.brickbat.brickier.bricking.brickles.bricoles.bridally.bridging.bridlers.bridling.bridoons.briefers.briefest.briefing.brigaded.brigades.brigands.brighten.brighter.brightly.brimfull.brimless.brimmers.brimming.brindled.brindles.bringers.bringing.briniest.brioches.brionies.briquets.brisance.briskest.briskets.brisking.brisling.bristled.bristles.bristols.britches.britskas.brittled.brittler.brittles.britzkas.britzska.broached.broacher.broaches.broadaxe.broadens.broadest.broadish.brocaded.brocades.brocatel.broccoli.brochure.brockage.brockets.brocolis.broguery.broguish.broiders.broidery.broilers.broiling.brokages.brokenly.brokered.brokings.brollies.bromated.bromates.bromelin.bromides.bromidic.bromines.bromisms.bromized.bromizes.bronchia.bronchos.bronchus.bronzers.bronzier.bronzing.brooches.brooders.broodier.broodily.brooding.brookies.brooking.brookite.brooklet.broomier.brooming.brothels.brothers.brougham.brouhaha.browband.browbeat.browless.brownest.brownier.brownies.browning.brownish.brownout.browsers.browsing.brucella.brucines.bruisers.bruising.bruiters.bruiting.brulyies.brulzies.brumbies.brunched.bruncher.brunches.brunette.brunizem.brushers.brushier.brushing.brushoff.brushups.bruskest.brusquer.brutally.brutisms.bruxisms.bryology.bryonies.bryozoan.bubaline.bubblers.bubblier.bubblies.bubbling.bubingas.buccally.buckaroo.buckayro.buckbean.buckeens.buckeroo.bucketed.buckeyes.bucklers.buckling.buckrams.bucksaws.buckshee.buckshot.buckskin.bucktail.bucolics.buddings.buddleia.buddying.budgeted.budgeter.budworms.buffable.buffalos.buffered.buffeted.buffeter.buffiest.buffoons.bugaboos.bugbanes.bugbears.buggered.buggiest.bughouse.bugseeds.buhlwork.builders.building.buildups.bulblets.bulghurs.bulgiest.bulimiac.bulimias.bulimics.bulkages.bulkhead.bulkiest.bullaces.bullbats.bulldogs.bulldoze.bulldyke.bulleted.bulletin.bullfrog.bullhead.bullhorn.bulliest.bullions.bullneck.bullnose.bullocks.bullocky.bullpens.bullpout.bullring.bullrush.bullshat.bullshit.bullshot.bullweed.bullwhip.bullyboy.bullying.bullyrag.bulwarks.bumblers.bumbling.bumboats.bumelias.bummalos.bumpered.bumpiest.bumpkins.bunchier.bunchily.bunching.buncoing.buncombe.bundists.bundlers.bundling.bungalow.bunghole.bunglers.bungling.bunkered.bunkmate.bunkoing.bunrakus.buntings.buntline.buoyages.buoyance.buoyancy.burblers.burblier.burbling.burdened.burdener.burdocks.burettes.burgages.burgeons.burghers.burglars.burglary.burgling.burgonet.burgouts.burgrave.burgundy.burkites.burlesks.burliest.burnable.burnings.burnoose.burnouts.burriest.burritos.burrowed.burrower.burseeds.bursitis.bursters.bursting.burstone.burthens.burweeds.busgirls.bushbuck.busheled.busheler.bushfire.bushgoat.bushidos.bushiest.bushings.bushland.bushless.bushlike.bushpigs.bushtits.bushveld.bushwahs.business.buskined.busloads.bussings.bustards.bustiers.bustiest.bustlers.bustline.bustling.busulfan.busybody.busyness.busywork.butanols.butanone.butchers.butchery.buttered.butthead.buttocks.buttoned.buttoner.buttress.butylate.butylene.butyrals.butyrate.butyrins.butyrous.butyryls.buxomest.buybacks.buzzards.buzzcuts.buzzwigs.buzzword.byliners.bylining.bypassed.bypasses.byssuses.bystreet.cabalism.cabalist.caballed.cabarets.cabbaged.cabbages.cabbagey.cabbalah.cabbalas.cabernet.cabestro.cabezone.cabezons.cabildos.cabinets.cabining.cableway.caboched.cabochon.cabombas.caboodle.cabooses.caboshed.cabotage.cabresta.cabresto.cabretta.cabrilla.cabriole.cabstand.cachalot.cachepot.cacheted.cachexia.cachexic.cachucha.caciques.cacklers.cackling.cacodyls.cacomixl.caconyms.caconymy.cactuses.cadaster.cadastre.cadavers.caddices.caddised.caddises.caddying.cadelles.cadenced.cadences.cadenzas.cadmiums.caducean.caduceus.caducity.caducous.caecally.caesiums.caesurae.caesural.caesuras.caesuric.caffeine.caffeins.caftaned.cagefuls.cagelike.cageling.caginess.caissons.caitiffs.cajaputs.cajeputs.cajolers.cajolery.cajoling.cajuputs.cakewalk.cakiness.calabash.calabaza.caladium.calamari.calamars.calamary.calamata.calamine.calamint.calamite.calamity.calashes.calathos.calathus.calcanea.calcanei.calcaria.calceate.calcific.calcined.calcines.calcites.calcitic.calciums.calcspar.calctufa.calctuff.calculus.caldaria.calderas.caldrons.caleches.calendal.calendar.calender.calflike.calfskin.calibers.calibred.calibres.caliches.calicles.calicoes.califate.calipash.calipees.calipers.caliphal.calisaya.calkings.callable.callaloo.callants.callback.callboys.callings.calliope.callipee.calliper.calloses.callower.callused.calluses.calmness.calomels.calorics.calories.calorize.calottes.calotype.caloyers.calpacks.calpains.calquing.calthrop.caltraps.caltrops.calumets.calutron.calvados.calvaria.calycate.calyceal.calycine.calycles.calyculi.calypsos.calypter.calyptra.calzones.camailed.camasses.cambered.cambisms.cambists.cambiums.cambogia.cambrics.cameleer.camelias.camelids.camellia.cameoing.camisade.camisado.camisias.camisole.camomile.camorras.campagna.campagne.campaign.campfire.camphene.camphine.camphire.camphols.camphors.campiest.campings.campions.campongs.camporee.campouts.campsite.campused.campuses.camshaft.canaille.canakins.canaling.canalise.canalize.canalled.canaller.canaries.canastas.canceled.canceler.cancered.cancroid.candelas.candidal.candidas.candider.candidly.candlers.candling.candours.candying.canellas.canephor.caneware.canfield.canikins.caninity.canistel.canister.canities.cankered.cannabic.cannabin.cannabis.cannelon.cannibal.canniest.cannikin.cannings.cannolis.cannoned.cannonry.cannulae.cannular.cannulas.canoeing.canoeist.canoness.canonise.canonist.canonize.canoodle.canopied.canopies.canorous.cantalas.cantatas.cantdogs.canteens.cantered.canticle.cantinas.cantonal.cantoned.cantraip.cantraps.cantrips.canulate.canvased.canvaser.canvases.canzonas.canzones.canzonet.capabler.capacity.capelans.capelets.capelins.caperers.capering.capeskin.capework.capiases.capitals.capitate.capitols.capitula.capmaker.capoeira.caponata.caponier.caponize.caporals.cappings.capricci.caprices.caprifig.capriole.caprocks.capsicin.capsicum.capsidal.capsized.capsizes.capsomer.capstans.capstone.capsular.capsuled.capsules.captains.captions.captious.captives.captured.capturer.captures.capuched.capuches.capuchin.capybara.carabaos.carabids.carabine.carabins.caracals.caracara.caracole.caracols.caraculs.caragana.carageen.caramels.carangid.carapace.carassow.caravans.caravels.caraways.carbamic.carbamyl.carbarns.carbaryl.carbides.carbines.carbinol.carbolic.carbonic.carbonyl.carboras.carboxyl.carboyed.carburet.carcajou.carcanet.carcases.carceral.cardamom.cardamon.cardamum.cardcase.cardiacs.cardigan.cardinal.cardings.cardioid.carditic.carditis.cardoons.careened.careener.careered.careerer.carefree.careless.caressed.caresser.caresses.caretake.caretook.careworn.carfares.caribous.carillon.carinate.cariocas.carioles.carjacks.carlines.carlings.carloads.carmaker.carmines.carnages.carnally.carnauba.carnival.caroches.carolers.caroling.carolled.caroller.caroming.carotene.carotids.carotins.carousal.caroused.carousel.carouser.carouses.carpalia.carpeted.carpings.carpools.carports.carracks.carrells.carriage.carriers.carriole.carrions.carritch.carromed.carrotin.carryall.carrying.carryons.carryout.cartable.cartages.cartload.cartoned.cartoons.cartoony.cartouch.caruncle.carvings.caryatic.caryatid.caryotin.cascabel.cascable.cascaded.cascades.cascaras.caseases.caseated.caseates.casebook.casefied.casefies.caseload.casemate.casement.caseoses.casernes.casettes.casework.caseworm.cashable.cashbook.cashiers.cashless.cashmere.casimere.casimire.casketed.cassabas.cassatas.cassavas.cassenas.cassenes.cassette.cassinas.cassines.cassinos.cassises.cassocks.castable.castanet.castaway.casteism.castings.castling.castoffs.castrate.castrati.castrato.casually.casualty.casuists.catacomb.catalase.cataloes.catalogs.catalpas.catalyst.catalyze.catamite.catapult.cataract.catarrhs.catawbas.catbirds.catboats.catbrier.catcalls.catchall.catchers.catchfly.catchier.catching.catchups.catclaws.catechin.catechol.catechus.category.catenary.catenate.catenoid.caterans.caterers.cateress.catering.catfaces.catfalls.catfight.catheads.cathects.cathedra.catheter.cathexes.cathexis.cathodal.cathodes.cathodic.catholic.cathouse.cationic.catjangs.catlings.catmints.catnaper.catspaws.catsuits.cattails.cattalos.cattiest.cattleya.catwalks.caucused.caucuses.caudally.caudated.caudates.caudexes.caudices.caudillo.cauldron.caulicle.caulkers.caulking.causable.causally.causerie.causeway.caustics.cautions.cautious.cavalero.cavalier.cavallas.cavatina.cavatine.caveated.caveator.cavefish.cavelike.caverned.cavettos.caviares.cavicorn.cavilers.caviling.cavilled.caviller.cavitary.cavitate.cavitied.cavities.cavorted.cavorter.cayenned.cayennes.caziques.cecities.cecropia.cedillas.ceilidhs.ceilings.ceinture.celadons.celeriac.celeries.celerity.celestas.celestes.celibacy.celibate.cellared.cellarer.cellaret.cellists.cellmate.cellular.cellules.celomata.celosias.cembalos.cemented.cementer.cementum.cemetery.cenacles.cenobite.cenotaph.cenozoic.censored.censured.censurer.censures.censused.censuses.centares.centaurs.centaury.centavos.centered.centeses.centesis.centiare.centiles.centimes.centimos.centners.centones.centrals.centring.centrism.centrist.centroid.centrums.centuple.ceorlish.cephalad.cephalic.cephalin.cepheids.ceramals.ceramics.ceramide.ceramist.cerastes.ceratins.ceratoid.cercaria.cercises.cerebral.cerebric.cerebrum.cerement.ceremony.cereuses.cernuous.cerotype.cerulean.cerumens.cerusite.cervelas.cervelat.cervezas.cervical.cervices.cervixes.cesarean.cesarian.cessions.cesspits.cesspool.cestodes.cestoids.cestuses.cetacean.cetology.ceviches.chabouks.chachkas.chaconne.chadarim.chadless.chaebols.chaffers.chaffier.chaffing.chagrins.chaining.chainman.chainmen.chainsaw.chairing.chairman.chairmen.chalazae.chalazal.chalazas.chalazia.chalcids.chaldron.chaliced.chalices.chalkier.chalking.challahs.challies.challoth.chalones.chalupas.chamades.chambers.chambray.chamfers.chamfron.chamisas.chamises.chamisos.chammied.chammies.champaca.champacs.champaks.champers.champing.champion.chancels.chancers.chancery.chancier.chancily.chancing.chancres.chandler.chanfron.changers.changeup.changing.channels.chanoyus.chansons.chantage.chanters.chanteys.chanties.chanting.chantors.chapatis.chapatti.chapbook.chapeaus.chapeaux.chaperon.chapiter.chaplain.chaplets.chappati.chappies.chapping.chapters.chaqueta.characid.characin.charades.charases.charcoal.chargers.charging.chariest.chariots.charisma.charisms.charkhas.charking.charlady.charleys.charlies.charlock.charmers.charming.charnels.charpais.charpoys.charquid.charquis.charrier.charring.charters.charting.chartist.chasings.chasseur.chastely.chastens.chastest.chastise.chastity.chasuble.chatchka.chatchke.chateaus.chateaux.chatroom.chattels.chatters.chattery.chattier.chattily.chatting.chaufers.chauffer.chaunted.chaunter.chausses.chayotes.chazanim.chazzans.chazzens.cheapens.cheapest.cheapies.cheapish.cheaters.cheating.chechako.checkers.checking.checkoff.checkout.checkrow.checksum.checkups.cheddars.cheddary.cheddite.chedites.cheekful.cheekier.cheekily.cheeking.cheepers.cheeping.cheerers.cheerful.cheerier.cheerily.cheering.cheerios.cheerled.cheesier.cheesily.cheesing.cheetahs.chefdoms.cheffing.chelated.chelates.chelator.cheliped.cheloids.chemical.chemises.chemisms.chemists.chemurgy.chenille.chenopod.chequers.cheroots.cherries.chertier.cherubic.cherubim.chervils.cheshire.chessman.chessmen.chestful.chestier.chestily.chestnut.chetrums.chevalet.cheveron.cheviots.chevrets.chevrons.chevying.chewable.chewiest.chewinks.chiantis.chiasmal.chiasmas.chiasmic.chiasmus.chiastic.chiauses.chibouks.chicaned.chicaner.chicanes.chicanos.chiccory.chichier.chickees.chickens.chickory.chickpea.chicness.chiefdom.chiefest.chiffons.chigetai.chiggers.chignons.childbed.childing.childish.children.chiliads.chiliasm.chiliast.chilidog.chillers.chillest.chillier.chillies.chillily.chilling.chillums.chilopod.chimaera.chimbley.chimeras.chimeres.chimeric.chimleys.chimneys.chinbone.chinches.chinkier.chinking.chinless.chinning.chinones.chinooks.chintses.chintzes.chinwags.chipmuck.chipmunk.chipotle.chippers.chippier.chippies.chipping.chirkest.chirking.chirming.chirpers.chirpier.chirpily.chirping.chirring.chirrups.chirrupy.chiseled.chiseler.chitchat.chitling.chitlins.chitosan.chitters.chitties.chivalry.chivaree.chivvied.chivvies.chivying.chloasma.chlorals.chlorate.chlordan.chloride.chlorids.chlorine.chlorins.chlorite.chlorous.chockful.chocking.choicely.choicest.choirboy.choiring.chokiest.cholates.cholents.choleras.choleric.cholines.chompers.chomping.choosers.choosier.choosing.chopines.choppers.choppier.choppily.chopping.choragic.choragus.chorales.chorally.chordate.chording.choregus.choreman.choremen.choreoid.choriamb.chorines.chorioid.chorions.chorizos.choroids.chortens.chortled.chortler.chortles.chorused.choruses.chousers.choushes.chousing.chowchow.chowders.chowsing.chowtime.chresard.chrismal.chrismon.chrisoms.christen.christie.chromate.chromide.chromier.chroming.chromite.chromium.chromize.chromous.chromyls.chronaxy.chronics.chronons.chthonic.chubasco.chubbier.chubbily.chuckies.chucking.chuckled.chuckler.chuckles.chuddahs.chuddars.chudders.chuffest.chuffier.chuffing.chugalug.chuggers.chugging.chukkars.chukkers.chummier.chummily.chumming.chumping.chumship.chunkier.chunkily.chunking.chunnels.chunters.chuppahs.churched.churches.churchly.churlish.churners.churning.churring.chutists.chutnees.chutneys.chutzpah.chutzpas.chymists.chymosin.chytrids.ciborium.ciboules.cicatrix.cicelies.cicerone.ciceroni.cichlids.cicisbei.cicisbeo.cicorees.cigarets.cilantro.ciliated.ciliates.cimbalom.cinching.cinchona.cincture.cindered.cineaste.cineasts.cineoles.cinerary.cinerins.cingular.cingulum.cinnabar.cinnamic.cinnamon.cinnamyl.cinquain.cioppino.ciphered.cipherer.cipolins.circlers.circlets.circling.circuits.circuity.circular.circuses.cirriped.cislunar.cissoids.cisterna.cisterns.cistrons.cistuses.citadels.citation.citators.citatory.citeable.citharas.citherns.cithrens.citified.citifies.citizens.citrated.citrates.citreous.citrines.citrinin.citruses.citterns.cityfied.cityward.citywide.civicism.civilian.civilise.civility.civilize.clabbers.clachans.clackers.clacking.claddagh.cladding.cladisms.cladists.cladodes.clafouti.clagging.claimant.claimers.claiming.clambake.clambers.clamlike.clammers.clammier.clammily.clamming.clamored.clamorer.clamours.clampers.clamping.clamworm.clangers.clanging.clangors.clangour.clankier.clanking.clannish.clansman.clansmen.clappers.clapping.claptrap.claquers.claqueur.clarence.clarinet.clarions.clarkias.clashers.clashing.claspers.clasping.classers.classico.classics.classier.classify.classily.classing.classism.classist.classons.clastics.clatters.clattery.claughts.claustra.clavered.clavicle.claviers.clawback.clawless.clawlike.claybank.clayiest.claylike.claymore.claypans.clayware.cleaners.cleanest.cleaning.cleansed.cleanser.cleanses.cleanups.clearcut.clearers.clearest.clearing.cleating.cleavage.cleavers.cleaving.cleeking.clefting.cleidoic.clematis.clemency.clenched.clencher.clenches.clergies.clerical.clerihew.clerkdom.clerking.clerkish.cleveite.cleverer.cleverly.clevises.clickers.clicking.cliental.cliffier.climatal.climates.climatic.climaxed.climaxes.climbers.climbing.clinally.clinched.clincher.clinches.clingers.clingier.clinging.clinical.clinkers.clinking.clippers.clipping.cliquier.cliquing.cliquish.clitella.clitoral.clitoric.clitoris.cloaking.clobbers.clochard.clockers.clocking.cloddier.cloddish.clodpate.clodpole.clodpoll.cloggers.cloggier.cloggily.clogging.cloister.clomping.clonally.clonings.clonisms.clonking.clonuses.clopping.closable.closeout.closeted.closeups.closings.closured.closures.clothier.clothing.clotting.clotured.clotures.cloudier.cloudily.clouding.cloudlet.clouring.clouters.clouting.clovered.clowders.clownery.clowning.clownish.clubable.clubbers.clubbier.clubbing.clubbish.clubface.clubfeet.clubfoot.clubhand.clubhaul.clubhead.clubroom.clubroot.clucking.clueless.clumbers.clumpier.clumping.clumpish.clumsier.clumsily.clunkers.clunkier.clunking.clupeids.clupeoid.clusters.clustery.clutched.clutches.clutters.cluttery.clypeate.clysters.coachers.coaching.coachman.coachmen.coacting.coaction.coactive.coactors.coadmire.coadmits.coaevals.coagency.coagents.coagulum.coalbins.coalesce.coalfish.coalhole.coaliest.coalless.coalpits.coalsack.coalshed.coalyard.coamings.coanchor.coappear.coapting.coarsely.coarsens.coarsest.coassist.coassume.coasters.coasting.coatings.coatless.coatrack.coatroom.coattail.coattend.coattest.coauthor.cobaltic.cobbiest.cobblers.cobbling.cobwebby.cocaines.coccidia.coccoids.coccyges.coccyxes.cochairs.cochleae.cochlear.cochleas.cocinera.cockaded.cockades.cockapoo.cockatoo.cockbill.cockboat.cockcrow.cockered.cockerel.cockeyed.cockeyes.cockiest.cocklike.cockling.cockloft.cockneys.cockpits.cockshut.cockspur.cocksure.cocktail.cocoanut.cocobola.cocobolo.cocomats.coconuts.cocooned.cocoplum.cocottes.cocoyams.cocreate.coddlers.coddling.codebook.codebtor.codeinas.codeines.codeless.coderive.codesign.codicils.codified.codifier.codifies.codirect.codlings.codpiece.codriven.codriver.codrives.coedited.coeditor.coeffect.coelomes.coelomic.coembody.coemploy.coempted.coenacts.coenamor.coendure.coenures.coenurus.coenzyme.coequals.coequate.coercers.coercing.coercion.coercive.coerects.coesites.coevally.coevolve.coexerts.coexists.coextend.cofactor.coffered.coffined.coffling.coffrets.cofounds.cogently.cogitate.cognates.cognised.cognises.cognized.cognizer.cognizes.cognomen.cognovit.cogwheel.cohabits.coheaded.coherent.coherers.cohering.cohesion.cohesive.cohobate.coholder.cohoshes.cohosted.coiffeur.coiffing.coiffure.coigning.coinable.coinages.coincide.coinfect.coinfers.coinhere.coinmate.coinsure.cointers.coinvent.coistrel.coistril.coitally.coitions.coituses.cojoined.cokehead.cokelike.colander.coldcock.coldness.coleader.coleseed.coleslaw.colessee.colessor.coleuses.colewort.colicine.colicins.coliform.colinear.coliseum.colistin.collaged.collagen.collages.collapse.collards.collared.collaret.collated.collates.collator.collects.colleens.colleger.colleges.collegia.colleted.collided.collider.collides.colliers.colliery.collogue.colloids.colloquy.colluded.colluder.colludes.colluvia.collying.collyria.coloboma.colocate.cologned.colognes.colonels.colonial.colonics.colonies.colonise.colonist.colonize.colophon.colorado.colorant.coloreds.colorers.colorful.coloring.colorism.colorist.colorize.colorman.colormen.colorway.colossal.colossus.colotomy.coloured.colourer.colpitis.colubrid.columbic.columels.columnal.columnar.columnea.columned.comakers.comaking.comanage.comatiks.comatose.comatula.combated.combater.combined.combiner.combines.combings.comblike.combusts.comeback.comedian.comedies.comedown.comelier.comelily.comember.cometary.comether.comfiest.comforts.comfreys.comingle.comitial.comities.commando.commands.commence.commends.comments.commerce.commixed.commixes.commodes.commoner.commonly.commoved.commoves.communal.communed.communer.communes.commuted.commuter.commutes.comorbid.compacts.compadre.compared.comparer.compares.comparts.compeers.compends.compered.comperes.competed.competes.compiled.compiler.compiles.complain.compleat.complect.complete.complice.complied.complier.complies.compline.complins.complots.comports.composed.composer.composes.composts.compotes.compound.compress.comprise.comprize.compting.computed.computer.computes.comrades.comsymps.conation.conative.concaved.concaves.conceals.conceded.conceder.concedes.conceits.conceive.concents.concepti.concepts.concerns.concerti.concerto.concerts.conchies.conchoid.conciser.conclave.conclude.concocts.concords.concours.concrete.condemns.condense.condoled.condoler.condoles.condoned.condoner.condones.condores.conduced.conducer.conduces.conducts.conduits.condylar.condyles.conelrad.conenose.conepate.conepatl.confects.conferee.conferva.confetti.confetto.confided.confider.confides.confined.confiner.confines.confirms.conflate.conflict.confocal.conforms.confound.confrere.confront.confused.confuses.confuted.confuter.confutes.congaing.congeals.congener.congests.conglobe.congrats.congress.conicity.conidial.conidian.conidium.conifers.coniines.conioses.coniosis.conjoins.conjoint.conjugal.conjunct.conjunto.conjured.conjurer.conjures.conjuror.connects.connived.conniver.connives.connoted.connotes.conodont.conoidal.conquers.conquest.conquian.consents.conserve.consider.consigns.consists.consoled.consoler.consoles.consomme.consorts.conspire.constant.construe.consular.consults.consumed.consumer.consumes.contacts.contagia.contains.contemns.contempo.contempt.contends.contents.contessa.contests.contexts.continua.continue.continuo.contorts.contours.contract.contrail.contrary.contrast.contrite.contrive.controls.contused.contuses.convects.convened.convener.convenes.convenor.convents.converge.converse.converso.converts.convexes.convexly.conveyed.conveyer.conveyor.convicts.convince.convoked.convoker.convokes.convolve.convoyed.convulse.cooeeing.cooeying.cooingly.cookable.cookbook.cookings.cookless.cookoffs.cookouts.cookshop.cooktops.cookware.coolants.cooldown.coolness.cooncans.coonskin.coonties.coopered.coopting.cooption.copaibas.coparent.copastor.copatron.copemate.copepods.copihues.copilots.coplanar.copperah.copperas.coppered.coppiced.coppices.copremia.copremic.coprince.copulate.copurify.copyable.copybook.copyboys.copycats.copydesk.copyedit.copygirl.copyhold.copyists.copyleft.copyread.coquetry.coquette.coquille.coquinas.coquitos.coracles.coracoid.corantos.corbeils.corbeled.corbinas.cordages.cordelle.cordials.cordings.cordites.cordless.cordlike.cordobas.cordoned.cordovan.corduroy.cordwain.cordwood.coredeem.coreigns.corelate.coreless.coremium.corkages.corkiest.corklike.corkwood.cormlike.cornball.corncake.corncobs.corncrib.corneous.cornered.cornetcy.cornhusk.corniced.cornices.corniche.cornicle.corniest.cornmeal.cornpone.cornrows.cornuses.cornuted.cornutos.corodies.corollas.coronach.coronals.coronary.coronate.coronels.coroners.coronets.coronoid.corotate.corporal.corpsman.corpsmen.corpuses.corraded.corrades.corrects.corridas.corridor.corrival.corroded.corrodes.corrupts.corsages.corsairs.corselet.corseted.corsetry.corslets.corteges.cortexes.cortical.cortices.cortinas.cortisol.corulers.corundum.corvette.corvinas.corybant.corymbed.coryphee.coscript.cosecant.coshered.cosigned.cosigner.cosiness.cosmetic.cosmical.cosmisms.cosmists.cosmoses.cossacks.cosseted.costally.costards.costless.costlier.costmary.costrels.costumed.costumer.costumes.costumey.cotenant.coteries.cothurni.cothurns.cotillon.cotingas.cotinine.cotquean.cottager.cottages.cottagey.cottered.cottiers.cottoned.coturnix.cotyloid.couchant.couchers.couching.coughers.coughing.couldest.coulisse.couloirs.coulombs.coulters.coumaric.coumarin.coumarou.councils.counsels.counters.countess.countian.counties.counting.couplers.couplets.coupling.courages.courante.couranto.courants.couriers.courlans.coursers.coursing.courters.courtesy.courtier.courting.couscous.cousinly.cousinry.couteaux.couthest.couthier.coutures.couvades.covalent.covaried.covaries.covenant.coverage.coverall.coverers.covering.coverlet.coverlid.covertly.coverups.coveters.coveting.covetous.cowardly.cowbanes.cowbells.cowberry.cowbinds.cowbirds.cowboyed.cowering.cowflaps.cowflops.cowgirls.cowhages.cowhands.cowherbs.cowherds.cowhided.cowhides.cowinner.cowlicks.cowlings.coworker.cowplops.cowpokes.cowpoxes.cowriter.cowrites.cowsheds.cowskins.cowslips.coxalgia.coxalgic.coxcombs.coxswain.cozenage.cozeners.cozening.coziness.craaling.crabbers.crabbier.crabbily.crabbing.crablike.crabmeat.crabwise.crackers.cracking.crackled.crackles.cracknel.crackpot.crackups.cradlers.cradling.crafters.craftier.craftily.crafting.craggier.craggily.cragsman.cragsmen.cramboes.crammers.cramming.cramoisy.crampier.cramping.crampits.crampons.crampoon.cranched.cranches.craniate.craniums.crankest.crankier.crankily.cranking.crankish.crankled.crankles.crankous.crankpin.crannied.crannies.crannoge.crannogs.crapolas.crappers.crappier.crappies.crapping.crashers.crashing.crassest.cratches.cratered.cratonic.cravened.cravenly.cravings.crawdads.crawfish.crawlers.crawlier.crawling.crawlway.crayfish.crayoned.crayoner.craziest.creakier.creakily.creaking.creamers.creamery.creamier.creamily.creaming.creasers.creasier.creasing.creatine.creating.creatins.creation.creative.creators.creature.credence.credenda.credenza.credible.credibly.credited.creditor.creeling.creepage.creepers.creepier.creepies.creepily.creeping.creeshed.creeshes.cremains.cremated.cremates.cremator.creminis.crenated.creneled.crenelle.crenshaw.creodont.creolise.creolize.creosols.creosote.crepiest.crescent.crescive.cressets.cresting.cresylic.cretonne.crevalle.crevasse.creviced.crevices.crewcuts.crewless.crewmate.crewneck.cribbage.cribbers.cribbing.cribbled.cribrous.cribwork.cricetid.crickets.cricking.cricoids.criminal.criminis.crimmers.crimpers.crimpier.crimping.crimpled.crimples.crimsons.cringers.cringing.cringles.crinites.crinkled.crinkles.crinoids.criollos.crippled.crippler.cripples.crispate.crispens.crispers.crispest.crispier.crispily.crisping.cristate.criteria.critical.critique.critters.critturs.croakers.croakier.croakily.croaking.croceine.croceins.crochets.crockery.crockets.crocking.crockpot.crocoite.crocuses.crofters.cromlech.cronyism.crookery.crookest.crooking.crooners.crooning.cropland.cropless.croppers.croppies.cropping.croquets.crosiers.crossarm.crossbar.crossbow.crosscut.crossers.crossest.crossing.crosslet.crosstie.crossway.crostini.crostino.crotched.crotches.crotchet.crouched.crouches.croupier.croupily.croupous.crousely.croutons.crowbars.crowders.crowdies.crowding.crowfeet.crowfoot.crowners.crownets.crowning.crowstep.croziers.crucians.cruciate.crucible.crucifer.crucifix.cruddier.crudding.crudites.cruelest.crueller.cruisers.cruising.crullers.crumbers.crumbier.crumbing.crumbled.crumbles.crumbums.crumhorn.crummier.crummies.crumpets.crumping.crumpled.crumples.crunched.cruncher.crunches.crunodal.crunodes.cruppers.crusaded.crusader.crusades.crusados.crushers.crushing.crustier.crustily.crusting.crustose.crutched.crutches.cruzados.cruzeiro.cryingly.cryobank.cryogens.cryogeny.cryolite.cryonics.cryostat.cryotron.crystals.ctenidia.cubature.cubicity.cubicles.cubicula.cubiform.cubistic.cuboidal.cuckolds.cuckooed.cucumber.cucurbit.cudbears.cuddlers.cuddlier.cuddling.cudgeled.cudgeler.cudweeds.cuffless.cufflink.cuisines.cuittled.cuittles.culicids.culicine.culinary.cullions.cullises.cullying.culottes.culpable.culpably.culprits.cultches.cultigen.cultisms.cultists.cultivar.cultlike.cultrate.cultural.cultured.cultures.cultuses.culverin.culverts.cumarins.cumbered.cumberer.cumbrous.cumquats.cumshaws.cumulate.cumulous.cuneated.cuneatic.cuniform.cunnings.cupboard.cupcakes.cupelers.cupeling.cupelled.cupeller.cupidity.cupolaed.cuppiest.cuppings.cupreous.cuprites.cupulate.curacaos.curacies.curacoas.curarine.curarize.curassow.curating.curative.curators.curbable.curbings.curbside.curculio.curcumas.curdiest.curdlers.curdling.cureless.curetted.curettes.curlicue.curliest.curlings.curlycue.currachs.curraghs.currants.currency.currents.curricle.curriers.curriery.currying.curseder.cursedly.cursives.curtails.curtains.curtalax.curtness.curtseys.curtsied.curtsies.curvedly.curveted.curviest.cuscuses.cushiest.cushions.cushiony.cuspated.cuspidal.cuspides.cuspidor.cussedly.cussword.custards.custardy.custodes.customer.custumal.cutaways.cutbacks.cutbanks.cutchery.cutdowns.cuteness.cutesier.cutgrass.cuticles.cuticula.cutinise.cutinize.cutlases.cutlines.cutovers.cutpurse.cuttable.cuttages.cuttings.cuttling.cutwater.cutworks.cutworms.cuvettes.cyanamid.cyanates.cyanided.cyanides.cyanines.cyanites.cyanitic.cyanogen.cyanosed.cyanoses.cyanosis.cyanotic.cybersex.cycasins.cyclamen.cyclases.cyclecar.cycleway.cyclical.cyclicly.cyclings.cyclists.cyclitol.cyclized.cyclizes.cycloids.cyclonal.cyclones.cyclonic.cyclopes.cycloses.cyclosis.cylinder.cymatium.cymbaler.cymbalom.cymbidia.cymbling.cymlings.cymogene.cymosely.cynicism.cynosure.cyphered.cypreses.cyprians.cyprinid.cypruses.cypselae.cysteine.cysteins.cystines.cystitis.cystoids.cytaster.cytidine.cytogeny.cytokine.cytology.cytosine.cytosols.czardoms.czarevna.czarinas.czarisms.czarists.czaritza.dabblers.dabbling.dabchick.dabsters.dackered.dactylic.dactylus.dadaisms.dadaists.daddling.daemones.daemonic.daffiest.daffodil.daftness.daggered.daggling.daglocks.dagwoods.dahabeah.dahabiah.dahabieh.dahabiya.daidzein.daikered.daimones.daimonic.daintier.dainties.daintily.daiquiri.dairying.dairyman.dairymen.daishiki.dakerhen.dalapons.dalesman.dalesmen.dalliers.dallying.dalmatic.daltonic.damagers.damaging.damasked.damewort.damianas.damnable.damnably.damndest.damneder.damosels.damozels.dampened.dampener.dampings.dampness.danazols.dandered.dandiest.dandlers.dandling.dandriff.dandruff.dandyish.dandyism.danegeld.danegelt.daneweed.danewort.dangered.danglers.danglier.dangling.danishes.dankness.danseurs.danseuse.daphnias.dapperer.dapperly.dappling.dapsones.daringly.darioles.darkened.darkener.darklier.darkling.darkness.darkroom.darksome.darlings.darndest.darneder.darnings.darshans.dartling.dasheens.dashiest.dashikis.dashpots.dastards.dasyures.databank.database.dataries.dateable.datebook.dateless.dateline.datively.daubiest.daubries.daughter.daunders.daunters.daunting.dauphine.dauphins.davening.dawdlers.dawdling.dawnlike.daybooks.daybreak.daycares.daydream.dayflies.dayglows.daylight.daymares.dayrooms.daysides.daystars.daytimes.dayworks.dazzlers.dazzling.deaconed.deaconry.deadbeat.deadbolt.deadened.deadener.deadeyes.deadfall.deadhead.deadlier.deadlift.deadline.deadlock.deadness.deadpans.deadwood.deaerate.deafened.deafness.deairing.dealated.dealates.dealfish.dealings.deanship.dearness.deashing.deathbed.deathcup.deathful.debacles.debagged.debarked.debarker.debarred.debasers.debasing.debaters.debating.debeaked.debeards.debility.debiting.debonair.deboners.deboning.debouche.debrided.debrides.debriefs.debruise.debtless.debugged.debugger.debunked.debunker.debutant.debuting.decadent.decagons.decagram.decalogs.decamped.decanted.decanter.decapods.decayers.decaying.deceased.deceases.decedent.deceived.deceiver.deceives.decemvir.decenary.decennia.decenter.decently.decentre.decerned.deciares.decibels.deciders.deciding.deciduae.decidual.deciduas.decigram.decimals.decimate.decipher.decision.decisive.deckhand.deckings.declaims.declared.declarer.declares.declasse.declawed.declined.decliner.declines.decocted.decoders.decoding.decolors.decolour.decorate.decorous.decorums.decouple.decoyers.decoying.decrease.decreers.decrepit.decretal.decrials.decriers.decrowns.decrying.decrypts.decupled.decuples.decuries.decurion.decurved.decurves.dedicate.deducing.deducted.deediest.deedless.deejayed.deemster.deepened.deepener.deepness.deerlike.deerskin.deerweed.deeryard.defacers.defacing.defamers.defaming.defanged.defatted.defaults.defeated.defeater.defecate.defected.defector.defenced.defences.defended.defender.defensed.defenses.deferent.deferral.deferred.deferrer.defiance.deficits.defilade.defilers.defiling.definers.defining.definite.deflated.deflater.deflates.deflator.defleaed.deflects.deflexed.deflower.defoamed.defoamer.defogged.defogger.deforced.deforcer.deforces.deforest.deformed.deformer.defrauds.defrayal.defrayed.defrayer.defrocks.defrosts.deftness.defueled.defunded.defusers.defusing.defuzing.degassed.degasser.degasses.degender.degermed.deglazed.deglazes.degraded.degrader.degrades.degrease.degummed.degusted.dehisced.dehisces.dehorned.dehorner.dehorted.deicidal.deicides.deictics.deifical.deifiers.deifying.deigning.deionize.deixises.dejected.dejeuner.dekagram.delaines.delating.delation.delators.delayers.delaying.deleaded.deleaved.deleaves.delegacy.delegate.deleting.deletion.delicacy.delicate.delights.deliming.delimits.delirium.delisted.delivers.delivery.deloused.delouser.delouses.deltoids.deluders.deluding.deluging.delusion.delusive.delusory.deluster.demagogs.demagogy.demanded.demander.demarche.demarked.demasted.demeaned.demeanor.demented.dementia.demerara.demerged.demerger.demerges.demerits.demersal.demesnes.demetons.demigods.demijohn.demilune.demireps.demising.demister.demitted.demiurge.demivolt.demobbed.democrat.demolish.demoness.demoniac.demonian.demonise.demonism.demonist.demonize.demotics.demoting.demotion.demotist.demounts.dempster.demurely.demurest.demurral.demurred.demurrer.denarius.denature.denazify.dendrite.dendroid.dendrons.deniable.deniably.denizens.denoting.denotive.denounce.dentalia.dentally.dentated.denticle.dentiled.dentinal.dentines.dentists.dentural.dentures.denudate.denuders.denuding.deodands.deodaras.deorbits.depaints.departed.departee.depended.depeople.depermed.depicted.depicter.depictor.depilate.deplaned.deplanes.depleted.depleter.depletes.deplored.deplorer.deplores.deployed.deployer.deplumed.deplumes.depolish.deponent.deponing.deported.deportee.deporter.deposals.deposers.deposing.deposits.depraved.depraver.depraves.deprenyl.deprival.deprived.depriver.deprives.depsides.depurate.deputies.deputing.deputize.deraigns.derailed.deranged.deranger.deranges.derating.deratted.derelict.deriders.deriding.deringer.derision.derisive.derisory.derivate.derivers.deriving.dermises.dermoids.derogate.derricks.derriere.derrises.desalted.desalter.desanded.descants.descends.descents.describe.descried.descrier.descries.deselect.deserted.deserter.desertic.deserved.deserver.deserves.desexing.designed.designee.designer.desilver.desinent.desirers.desiring.desirous.desisted.desktops.desmoids.desolate.desorbed.despairs.despatch.despisal.despised.despiser.despises.despited.despites.despoils.desponds.despotic.desserts.destains.destined.destines.destrier.destroys.destruct.desugars.desulfur.detached.detacher.detaches.detailed.detailer.detained.detainee.detainer.detassel.detected.detecter.detector.detentes.deterged.deterger.deterges.deterred.deterrer.detested.detester.dethatch.dethrone.deticked.deticker.detinues.detonate.detoured.detoxify.detoxing.detracts.detrains.detrital.detritus.detruded.detrudes.deucedly.deuteric.deuteron.deutzias.devalued.devalues.deveined.develing.develope.develops.deverbal.devested.deviance.deviancy.deviants.deviated.deviates.deviator.deviling.devilish.devilkin.devilled.deviltry.devisals.devisees.devisers.devising.devisors.devoiced.devoices.devolved.devolves.devonian.devotees.devoting.devotion.devoured.devourer.devouter.devoutly.dewaters.dewaxing.dewberry.dewclaws.dewdrops.dewfalls.dewiness.dewooled.dewormed.dewormer.dextrans.dextrine.dextrins.dextrose.dextrous.dezinced.dhoolies.dhooties.dhourras.dhurries.diabases.diabasic.diabetes.diabetic.diablery.diabolic.diabolos.diacetyl.diacidic.diaconal.diademed.diagnose.diagonal.diagrams.diagraph.dialects.dialings.dialists.diallage.diallers.dialling.diallist.dialoged.dialoger.dialogic.dialogue.dialysed.dialyser.dialyses.dialysis.dialytic.dialyzed.dialyzer.dialyzes.diamante.diameter.diamides.diamines.diamonds.dianthus.diapason.diapause.diapered.diaphone.diaphony.diapiric.diapsids.diarchic.diarists.diarrhea.diaspora.diaspore.diastase.diastema.diastems.diasters.diastole.diastral.diatomic.diatonic.diatribe.diatrons.diazepam.diazines.diazinon.diazoles.dibblers.dibbling.dibbukim.dicambas.dicastic.dicentra.dichasia.dichotic.dichroic.dickered.dickhead.dickiest.dicotyls.dicrotal.dicrotic.dictated.dictates.dictator.dictiest.dictions.dicyclic.didactic.didactyl.didapper.diddlers.diddleys.diddlies.diddling.didymium.didymous.didynamy.diebacks.diecious.diehards.dieldrin.diemaker.diereses.dieresis.dieretic.dieseled.diesters.diestock.diestrum.diestrus.dietetic.diethers.differed.diffract.diffused.diffuser.diffuses.diffusor.digamies.digamist.digammas.digamous.digerati.digested.digester.digestif.digestor.diggings.dighting.digitals.digitate.digitize.digoxins.digraphs.dihedral.dihedron.dihybrid.dihydric.dilatant.dilatate.dilaters.dilating.dilation.dilative.dilators.dilatory.dilemmas.dilemmic.diligent.diluents.diluters.diluting.dilution.dilutive.dilutors.diluvial.diluvian.diluvion.diluvium.dimerism.dimerize.dimerous.dimeters.dimethyl.dimetric.diminish.dimities.dimmable.dimorphs.dimplier.dimpling.dindling.dinettes.dingbats.dingdong.dinghies.dingiest.dinguses.dinkiest.dinosaur.diobolon.diocesan.dioceses.dioecies.dioecism.dioicous.diolefin.diopside.dioptase.diopters.dioptral.dioptres.dioptric.dioramas.dioramic.diorites.dioritic.dioxanes.dioxides.diphasic.diphenyl.diplegia.diplegic.diplexer.diploids.diploidy.diplomas.diplomat.diplonts.diplopia.diplopic.diplopod.diploses.diplosis.dipnoans.dipodies.dippable.dippiest.diprotic.dipsades.dipshits.dipstick.dipteral.dipteran.dipteron.diptycas.diptychs.directed.directer.directly.director.direness.dirgeful.diriment.dirtbags.dirtiest.dirtying.disabled.disabler.disables.disabuse.disagree.disallow.disannul.disarmed.disarmer.disarray.disaster.disavows.disbands.disbosom.disbound.disbowel.disburse.discants.discards.discased.discases.discepts.discerns.disciple.disclaim.disclike.disclose.discoids.discoing.discolor.discords.discount.discover.discreet.discrete.discrown.discuses.disdains.diseased.diseases.disendow.diseuses.disfavor.disfrock.disgorge.disgrace.disguise.disgusts.dishelms.disherit.dishevel.dishfuls.dishiest.dishlike.dishonor.dishpans.dishrags.dishware.disinter.disjects.disjoins.disjoint.disjunct.diskette.disklike.disliked.disliker.dislikes.dislimns.dislodge.disloyal.dismaler.dismally.dismasts.dismayed.dismount.disobeys.disorder.disowned.disparts.dispatch.dispends.dispense.disperse.dispirit.displace.displant.displays.displode.displume.disports.disposal.disposed.disposer.disposes.dispread.disprize.disproof.disprove.disputed.disputer.disputes.disquiet.disrated.disrates.disrobed.disrober.disrobes.disroots.disrupts.dissaved.dissaves.disseats.dissects.disseise.disseize.dissents.disserts.disserve.dissever.dissolve.dissuade.distaffs.distains.distally.distance.distaste.distaves.distends.distichs.distills.distinct.distomes.distorts.distract.distrain.distrait.distress.district.distrust.disturbs.disulfid.disunion.disunite.disunity.disusing.disvalue.disyoked.disyokes.ditchers.ditching.ditheism.ditheist.dithered.ditherer.ditsiest.dittoing.ditziest.diureses.diuresis.diuretic.diurnals.divagate.divalent.divebomb.diverged.diverges.diverted.diverter.divested.dividend.dividers.dividing.dividual.divinely.diviners.divinest.divining.divinise.divinity.divinize.division.divisive.divisors.divorced.divorcee.divorcer.divorces.divulged.divulger.divulges.divulsed.divulses.divvying.dizening.dizygous.dizziest.dizzying.djellaba.doblones.docilely.docility.dockages.docketed.dockhand.dockland.dockside.dockyard.doctoral.doctored.doctorly.doctrine.document.doddered.dodderer.dodgiest.dodoisms.doeskins.dogbanes.dogberry.dogcarts.dogeared.dogedoms.dogeship.dogfaces.dogfight.doggedly.doggerel.doggiest.doggoned.doggoner.doggones.doggrels.doghouse.dogmatic.dognaped.dognaper.dogsbody.dogsleds.dogteeth.dogtooth.dogtrots.dogvanes.dogwatch.dogwoods.dolcetto.doldrums.dolerite.dolesome.dolloped.dollying.dolmades.dolmenic.dolomite.doloroso.dolorous.dolphins.domaines.domelike.domesday.domestic.domicile.domicils.dominant.dominate.domineer.dominick.dominies.dominion.dominium.dominoes.donating.donation.donative.donators.doneness.dongolas.donnered.donniker.doodlers.doodling.doofuses.doomiest.doomsday.doomster.doorbell.doorjamb.doorknob.doorless.doormats.doornail.doorpost.doorsill.doorstep.doorstop.doorways.dooryard.dopamine.dopehead.dopester.dopiness.dorhawks.dorkiest.dormancy.dormered.dormient.dormouse.dornecks.dornicks.dornocks.dorsally.dosseret.dossiers.dotardly.dotation.dotingly.dotterel.dottiest.dottrels.doublers.doublets.doubling.doubloon.doublure.doubters.doubtful.doubting.douceurs.douching.doughboy.doughier.doughnut.doupioni.dourines.dourness.douzeper.dovecote.dovecots.dovekeys.dovekies.dovelike.dovening.dovetail.dowagers.dowdiest.dowdyish.doweling.dowelled.doweries.dowering.downbeat.downbows.downcast.downcome.downfall.downhaul.downhill.downiest.downland.downless.downlike.downlink.download.downpipe.downplay.downpour.downside.downsize.downspin.downtick.downtime.downtown.downtrod.downturn.downward.downwash.downwind.downzone.dowsabel.doxology.doyennes.dozening.dozenths.doziness.drabbest.drabbets.drabbing.drabbled.drabbles.drabness.dracaena.dracenas.drachmae.drachmai.drachmas.draconic.draffier.draffish.draftees.drafters.draftier.draftily.drafting.draggers.draggier.dragging.draggled.draggles.dragline.dragnets.dragoman.dragomen.dragonet.dragoons.dragrope.dragster.drainage.drainers.draining.dramatic.dramming.drammock.dramshop.drapable.dratting.draughts.draughty.drawable.drawback.drawbars.drawbore.drawdown.drawings.drawlers.drawlier.drawling.drawtube.drayages.dreadful.dreading.dreamers.dreamful.dreamier.dreamily.dreaming.drearier.drearies.drearily.dredgers.dredging.dreggier.dreggish.dreidels.drenched.drencher.drenches.dressage.dressers.dressier.dressily.dressing.dribbing.dribbled.dribbler.dribbles.dribblet.driblets.driftage.drifters.driftier.drifting.driftpin.drillers.drilling.drinkers.drinking.dripless.drippers.drippier.drippily.dripping.drivable.driveled.driveler.driveway.drivings.drizzled.drizzles.drollery.drollest.drolling.dromonds.droolier.drooling.droopier.droopily.drooping.drophead.dropkick.droplets.dropouts.droppers.dropping.dropshot.dropsied.dropsies.dropwort.droseras.droskies.drossier.droughts.droughty.drouking.drownded.drowners.drowning.drowsier.drowsily.drowsing.drubbers.drubbing.drudgers.drudgery.drudging.druggets.druggier.druggies.drugging.druggist.druidess.druidism.drumbeat.drumbled.drumbles.drumfire.drumfish.drumhead.drumlier.drumlike.drumlins.drummers.drumming.drumroll.drunkard.drunkest.drupelet.druthers.drypoint.drystone.drywalls.drywells.dualisms.dualists.dualized.dualizes.dubbings.dubniums.dubonnet.duckbill.duckiest.duckling.duckpins.ducktail.duckwalk.duckweed.ductings.ductless.ductules.ductwork.dudgeons.dudishly.duecento.duelists.duellers.duelling.duellist.duetting.duettist.dukedoms.dulcetly.dulciana.dulcimer.dulcinea.dullards.dullness.dumbbell.dumbcane.dumbhead.dumbness.dumfound.dummkopf.dummying.dumpcart.dumpiest.dumpings.dumpling.dumpsite.dumpster.duncical.duneland.dunelike.dungaree.dungeons.dunghill.dungiest.dunnages.dunnites.duodenal.duodenum.duologue.duopsony.duotones.duperies.duplexed.duplexer.duplexes.durables.duramens.durances.duration.durative.duresses.durmasts.durndest.durneder.duskiest.dustbins.dustheap.dustiest.dustings.dustless.dustlike.dustoffs.dustpans.dustrags.dutchman.dutchmen.dutiable.duumviri.duumvirs.duvetine.duvetyne.duvetyns.duxelles.dwarfest.dwarfing.dwarfish.dwarfism.dweebier.dweebish.dwellers.dwelling.dwindled.dwindles.dyarchic.dybbukim.dyestuff.dyeweeds.dyewoods.dynamics.dynamism.dynamist.dynamite.dynastic.dynatron.dysgenic.dyslexia.dyslexic.dyspepsy.dyspneal.dyspneas.dyspneic.dyspnoea.dyspnoic.dystaxia.dystocia.dystonia.dystonic.dystopia.dysurias.eagerest.eanlings.earaches.eardrops.eardrums.earflaps.earldoms.earliest.earlobes.earlocks.earlship.earmarks.earmuffs.earnests.earnings.earphone.earpiece.earplugs.earrings.earshots.earstone.earthier.earthily.earthing.earthman.earthmen.earthnut.earthpea.earthset.earwaxes.earworms.easement.easiness.easterly.eastings.eastward.eatables.eateries.ebonised.ebonises.ebonites.ebonized.ebonizes.ecaudate.ecbolics.ecclesia.ecdysial.ecdysone.ecdysons.ecesises.echelles.echelons.echidnae.echidnas.echinate.echinoid.echogram.echoisms.echoless.eclectic.eclipsed.eclipser.eclipses.eclipsis.ecliptic.eclogite.eclogues.eclosion.ecocidal.ecocides.ecofreak.ecologic.econobox.economic.ecotages.ecotonal.ecotones.ecotours.ecotypes.ecotypic.ecraseur.ecstatic.ectoderm.ectomere.ectopias.ectosarc.ectozoan.ectozoon.ecumenic.edacious.edentate.edgeless.edgeways.edgewise.edginess.edifices.edifiers.edifying.editable.editions.editress.educable.educated.educates.educator.educible.eduction.eductive.eductors.eelgrass.eelpouts.eelworms.eeriness.effacers.effacing.effected.effecter.effector.effendis.efferent.effetely.efficacy.effigial.effigies.effluent.effluvia.effluxes.effulged.effulges.effusing.effusion.effusive.eftsoons.egalites.egesting.egestion.egestive.eggfruit.eggheads.eggplant.eggshell.eglatere.eglomise.egoistic.egomania.egotisms.egotists.egressed.egresses.egyptian.eidolons.eighteen.eighthly.eighties.eightvos.einkorns.einstein.eisweins.ejecting.ejection.ejective.ejectors.ekistics.ekpweles.ektexine.elaphine.elapsing.elastase.elastics.elastins.elatedly.elaterid.elaterin.elations.elatives.elbowing.eldritch.electees.electing.election.elective.electors.electret.electric.electron.electros.electrum.elegance.elegancy.elegiacs.elegised.elegises.elegists.elegized.elegizes.elements.elenchic.elenchus.elenctic.elephant.elevated.elevates.elevator.eleventh.elfishly.elflocks.elicited.elicitor.elidible.eligible.eligibly.elisions.elitisms.elitists.elkhound.ellipses.ellipsis.elliptic.eloigned.eloigner.eloiners.eloining.elongate.eloquent.elusions.elutions.eluviate.eluviums.elvishly.elytroid.elytrous.emaciate.emailing.emanated.emanates.emanator.embalmed.embalmer.embanked.embarked.embarred.embattle.embaying.embedded.embezzle.embitter.emblazed.emblazer.emblazes.emblazon.emblemed.embodied.embodier.embodies.embolden.embolies.embolism.emborder.embosked.embosoms.embossed.embosser.embosses.embowels.embowers.embowing.embraced.embracer.embraces.embroils.embrowns.embruing.embruted.embrutes.embryoid.embryons.emceeing.emdashes.emeerate.emendate.emenders.emending.emeralds.emergent.emerging.emeritae.emeritas.emeritus.emeroids.emersion.emetines.emigrant.emigrate.eminence.eminency.emirates.emissary.emission.emissive.emitters.emitting.emoticon.emotions.empalers.empaling.empanada.empanels.empathic.emperies.emperors.emphases.emphasis.emphatic.empirics.emplaced.emplaces.emplaned.emplanes.employed.employee.employer.employes.empoison.emporium.empowers.emprises.emprizes.emptiers.emptiest.emptings.emptying.empurple.empyemas.empyemic.empyreal.empyrean.emulated.emulates.emulator.emulsify.emulsion.emulsive.emulsoid.enablers.enabling.enacting.enactive.enactors.enactory.enameled.enameler.enamines.enamored.enamours.enations.encaenia.encaging.encamped.encashed.encashes.encasing.enceinte.enchains.enchants.enchased.enchaser.enchases.enchoric.encipher.encircle.enclasps.enclaved.enclaves.enclitic.enclosed.encloser.encloses.encoders.encoding.encomium.encoring.encroach.encrusts.encrypts.encumber.encyclic.encysted.endamage.endameba.endanger.endarchy.endashes.endbrain.endeared.endeavor.endemial.endemics.endemism.endermic.endexine.endgames.enditing.endleafs.endnotes.endocarp.endocast.endoderm.endogamy.endogens.endogeny.endopods.endorsed.endorsee.endorser.endorses.endorsor.endosarc.endosmos.endosome.endostea.endowers.endowing.endozoic.endpaper.endplate.endplays.endpoint.endurers.enduring.energids.energies.energise.energize.enervate.enfacing.enfeeble.enfeoffs.enfetter.enfevers.enfilade.enflamed.enflames.enfolded.enfolder.enforced.enforcer.enforces.enframed.enframes.engagers.engaging.engender.engilded.engineer.enginery.engining.enginous.engirded.engirdle.engorged.engorges.engrafts.engrails.engrains.engramme.engraved.engraver.engraves.engulfed.enhaloed.enhaloes.enhanced.enhancer.enhances.enigmata.enisling.enjambed.enjoined.enjoiner.enjoyers.enjoying.enkindle.enlacing.enlarged.enlarger.enlarges.enlisted.enlistee.enlister.enlivens.enmeshed.enmeshes.enmities.enneadic.enneagon.ennobled.ennobler.ennobles.enolases.enophile.enormity.enormous.enosises.enounced.enounces.enplaned.enplanes.enquired.enquires.enraging.enravish.enriched.enricher.enriches.enrobers.enrobing.enrolled.enrollee.enroller.enrooted.ensample.ensconce.enscroll.ensemble.enserfed.ensheath.enshrine.enshroud.ensiform.ensigncy.ensilage.ensiling.enskying.enslaved.enslaver.enslaves.ensnared.ensnarer.ensnares.ensnarls.ensorcel.ensouled.ensphere.ensurers.ensuring.enswathe.entailed.entailer.entameba.entangle.entasias.entastic.entellus.ententes.enterers.enterics.entering.enterons.enthalpy.enthetic.enthrall.enthrals.enthrone.enthused.enthuses.enticers.enticing.entirely.entirety.entities.entitled.entitles.entoderm.entoiled.entombed.entozoal.entozoan.entozoic.entozoon.entrails.entrains.entrance.entrants.entreats.entreaty.entrench.entrepot.entresol.entropic.entrusts.entryway.entwined.entwines.entwists.enureses.enuresis.enuretic.envelope.envelops.envenoms.enviable.enviably.environs.envisage.envision.enwheels.enwombed.enzootic.eobionts.eohippus.eolipile.eolithic.eolopile.epaulets.epazotes.epeeists.ependyma.epergnes.ephedras.ephedrin.ephemera.ephorate.epiblast.epibolic.epically.epicalyx.epicarps.epicedia.epicenes.epiclike.epicotyl.epicures.epicycle.epidemic.epiderms.epidotes.epidotic.epidural.epifauna.epifocal.epigenic.epigeous.epigones.epigonic.epigonus.epigrams.epigraph.epilated.epilates.epilator.epilepsy.epilogue.epimeres.epimeric.epimysia.epinasty.epiphany.epiphyte.episcias.episcope.episodes.episodic.episomal.episomes.epistasy.epistler.epistles.epistome.epistyle.epitaphs.epitases.epitasis.epitaxic.epithets.epitomes.epitomic.epitopes.epizoism.epizoite.epizooty.eponymic.epopoeia.epoxides.epoxying.epsilons.equaling.equalise.equality.equalize.equalled.equating.equation.equators.equinely.equinity.equipage.equipped.equipper.equiseta.equitant.equities.equivoke.eradiate.erasable.erasions.erasures.erecters.erectile.erecting.erection.erective.erectors.eremites.eremitic.eremurus.erepsins.erethism.erewhile.ergastic.ergative.ergotism.erigeron.eringoes.eristics.erlkings.erodable.erodible.erogenic.erosible.erosions.erotical.erotisms.erotized.erotizes.errantly.errantry.erratics.errhines.erringly.ersatzes.eructate.eructing.erumpent.erupting.eruption.eruptive.eryngoes.erythema.erythron.escalade.escalate.escallop.escalope.escalops.escapade.escapees.escapers.escaping.escapism.escapist.escargot.escarole.escarped.eschalot.escheats.eschewal.eschewed.eschewer.escolars.escorted.escoting.escrowed.escuages.esculent.eserines.esophagi.esoteric.espalier.espartos.especial.espiegle.espousal.espoused.espouser.espouses.espresso.esquired.esquires.essayers.essaying.essayist.essences.essonite.estancia.estating.esteemed.esterase.esterify.estheses.esthesia.esthesis.esthetes.esthetic.estimate.estivate.estopped.estoppel.estovers.estragon.estrange.estrayed.estreats.estriols.estrogen.estrones.estruses.esurient.etageres.etamines.etatisms.etcetera.etchants.etchings.eternals.eternise.eternity.eternize.etesians.ethanols.ethephon.ethereal.etherify.etherish.etherize.ethicals.ethician.ethicist.ethicize.ethinyls.ethmoids.ethnarch.ethnical.ethnonym.ethnoses.ethogram.ethology.ethoxies.ethoxyls.ethylate.ethylene.ethynyls.etiolate.etiology.etouffee.eucaines.eucalypt.eucharis.euchring.euclases.eucrites.eucritic.eudaemon.eudaimon.eudemons.eugenias.eugenics.eugenist.eugenols.euglenas.euglenid.eulachan.eulachon.eulogiae.eulogias.eulogies.eulogise.eulogist.eulogium.eulogize.euonymus.eupatrid.eupepsia.eupeptic.euphenic.euphonic.euphoria.euphoric.euphotic.euphrasy.euphroes.euphuism.euphuist.euploids.euploidy.eupnoeas.eupnoeic.eurokies.eurokous.europium.eurybath.eurythmy.eusocial.eustatic.eusteles.eutaxies.eutectic.eutrophy.euxenite.evacuant.evacuate.evacuees.evadable.evadible.evaluate.evanesce.evangels.evasions.evection.evenfall.evenings.evenness.evensong.eventful.eventide.eventual.evermore.eversion.everting.evertors.everyday.everyman.everymen.everyone.everyway.evictees.evicting.eviction.evictors.evidence.evildoer.evillest.evilness.evincing.evincive.evitable.evocable.evocator.evolutes.evolvers.evolving.evonymus.evulsing.evulsion.exabytes.exacters.exactest.exacting.exaction.exactors.exahertz.exalters.exalting.examined.examinee.examiner.examines.exampled.examples.exanthem.exaptive.exarchal.excavate.exceeded.exceeder.excelled.excepted.excerpts.excessed.excesses.exchange.exciding.excimers.exciples.excising.excision.excitant.exciters.exciting.excitons.excitors.exclaims.exclaves.excluded.excluder.excludes.excretal.excreted.excreter.excretes.excursus.excusers.excusing.execrate.executed.executer.executes.executor.exegeses.exegesis.exegetes.exegetic.exemplar.exemplum.exempted.exequial.exequies.exercise.exergual.exergues.exerting.exertion.exertive.exhalant.exhalent.exhaling.exhausts.exhedrae.exhibits.exhorted.exhorter.exhumers.exhuming.exigence.exigency.exigible.exiguity.exiguous.exilable.eximious.existent.existing.exitless.exocarps.exocrine.exocytic.exoderms.exoduses.exoergic.exogamic.exonumia.exorable.exorcise.exorcism.exorcist.exorcize.exordial.exordium.exosmose.exospore.exoteric.exotisms.exotoxic.exotoxin.expanded.expander.expandor.expanses.expected.expecter.expedite.expelled.expellee.expeller.expended.expender.expensed.expenses.experted.expertly.expiable.expiated.expiates.expiator.expirers.expiries.expiring.explains.explants.explicit.exploded.exploder.explodes.exploits.explored.explorer.explores.exponent.exported.exporter.exposals.exposers.exposing.exposits.exposure.expounds.expresso.expulsed.expulses.expunged.expunger.expunges.exscinds.exsecant.exsected.exserted.extended.extender.extensor.exterior.external.externes.extincts.extolled.extoller.extorted.extorter.extracts.extrados.extranet.extremer.extremes.extremum.extrorse.extruded.extruder.extrudes.extubate.exudates.exultant.exulting.exurbias.exuviate.eyeballs.eyebeams.eyeblack.eyeblink.eyebolts.eyebrows.eyedness.eyedrops.eyefolds.eyeglass.eyeholes.eyehooks.eyelifts.eyeliner.eyepiece.eyepoint.eyeshade.eyeshine.eyeshots.eyesight.eyesores.eyespots.eyestalk.eyestone.eyeteeth.eyetooth.eyewater.eyewinks.fabliaux.fabulate.fabulist.fabulous.faceable.facedown.faceless.facelift.facemask.facetely.facetiae.faceting.facetted.facially.faciends.facilely.facility.factions.factious.factoids.factored.factotum.factures.faddiest.faddisms.faddists.fadeaway.fadeless.fadeouts.faggiest.faggoted.faggotry.fagoters.fagoting.fahlband.faiences.failings.failures.faineant.fainters.faintest.fainting.faintish.fairgoer.fairings.fairlead.fairness.fairways.fairyism.faithful.faithing.faitours.fakeries.falafels.falbalas.falcated.falchion.falconer.falconet.falconry.falderal.falderol.fallaway.fallback.fallfish.fallible.fallibly.falloffs.fallouts.fallowed.falsetto.faltboat.faltered.falterer.fameless.familial.familiar.families.familism.famished.famishes.famously.fanatics.fanciers.fanciest.fanciful.fancying.fandango.fanegada.fanfares.fanfaron.fanfolds.fangless.fanglike.fanlight.fantails.fantasia.fantasie.fantasms.fantasts.fanworts.fanzines.faradaic.faradays.faradise.faradism.faradize.farceurs.farcical.farewell.farfalle.farinhas.farinose.farmable.farmhand.farmings.farmland.farmwife.farmwork.farmyard.farnesol.farolito.farouche.farriers.farriery.farrowed.farsides.farthest.farthing.fartleks.fasciate.fascicle.fascines.fascisms.fascists.fascitis.fashions.fashious.fastback.fastball.fastened.fastener.fastings.fastness.fastuous.fatalism.fatalist.fatality.fatbacks.fatbirds.fatheads.fathered.fatherly.fathomed.fathomer.fatigued.fatigues.fatlings.fatstock.fattened.fattener.fattiest.fatwoods.faubourg.faultier.faultily.faulting.faunally.faunlike.fauteuil.fauvisms.fauvists.favellas.favonian.favorers.favoring.favorite.favoured.favourer.fawniest.fawnlike.fayalite.fazendas.fealties.fearless.fearsome.feasance.feasible.feasibly.feasters.feastful.feasting.feathers.feathery.featlier.featured.features.febrific.feckless.feculent.fedayeen.federacy.federals.federate.fedexing.feeblest.feeblish.feedable.feedback.feedbags.feedhole.feedlots.feedyard.feelings.feetless.feigners.feigning.feinting.feistier.feistily.felafels.feldsher.feldspar.felicity.felinely.felinity.fellable.fellahin.fellated.fellates.fellatio.fellator.fellness.fellowed.fellowly.felonies.felsites.felsitic.felspars.felstone.feltings.feltlike.feluccas.felworts.feminacy.feminazi.feminine.feminise.feminism.feminist.feminity.feminize.fenagled.fenagles.fencerow.fencible.fencings.fendered.fenestra.fenlands.fenniest.fentanyl.fenthion.fenurons.feoffees.feoffers.feoffing.feoffors.feracity.feretory.ferities.fermatas.ferments.fermions.fermiums.ferniest.ferninst.fernless.fernlike.ferocity.ferrates.ferreled.ferreous.ferreted.ferreter.ferriage.ferrites.ferritic.ferritin.ferruled.ferrules.ferrying.ferryman.ferrymen.feruling.fervency.fervidly.fervours.fesswise.festally.festered.festival.festoons.fetation.fetchers.fetching.feterita.fetiales.fetialis.fetiches.feticide.fetidity.fetishes.fetlocks.fetology.fettered.fetterer.fettling.feudally.feudists.feverfew.fevering.feverish.feverous.fewtrils.fiancees.fiascoes.fiberize.fibranne.fibrilla.fibroids.fibroins.fibromas.fibroses.fibrosis.fibrotic.fibsters.ficklest.fictions.fiddlers.fiddling.fideisms.fideists.fidelity.fidgeted.fidgeter.fiducial.fiefdoms.fielders.fielding.fiendish.fiercely.fiercest.fieriest.fifteens.fiftieth.fiftyish.figeater.fighters.fighting.figments.figuline.figurant.figurate.figurers.figurine.figuring.figworts.filagree.filament.filarees.filariae.filarial.filarian.filariid.filature.filberts.filchers.filching.fileable.filefish.filename.fileting.filially.filiated.filiates.filibegs.filicide.filiform.filigree.filister.fillable.filleted.fillings.filliped.filmable.filmcard.filmdoms.filmgoer.filmiest.filmland.filmless.filmlike.filmsets.filtered.filterer.filthier.filthily.filtrate.fimbriae.fimbrial.finagled.finagler.finagles.finalise.finalism.finalist.finality.finalize.financed.finances.finbacks.findable.findings.fineable.fineness.fineries.finespun.finessed.finesses.finfoots.fingered.fingerer.finialed.finickin.finiking.finished.finisher.finishes.finitely.finitude.finmarks.finnicky.finniest.finnmark.finochio.fireable.firearms.fireback.fireball.firebase.firebird.fireboat.firebomb.firebrat.firebugs.fireclay.firedamp.firedogs.firefang.firehall.fireless.firelock.firepans.firepink.fireplug.firepots.fireroom.fireship.fireside.firetrap.firewall.fireweed.firewood.firework.fireworm.firmness.firmware.firriest.fiscally.fishable.fishbolt.fishbone.fishbowl.fisheyes.fishgigs.fishhook.fishiest.fishings.fishkill.fishless.fishlike.fishline.fishmeal.fishnets.fishpole.fishpond.fishtail.fishways.fishwife.fishworm.fissions.fissiped.fissural.fissured.fissures.fistfuls.fistnote.fistulae.fistular.fistulas.fitchets.fitchews.fitfully.fitments.fittable.fittings.fivefold.fivepins.fixatifs.fixating.fixation.fixative.fixities.fixtures.fizziest.fizzling.flabbier.flabbily.flabella.flackery.flacking.flagella.flaggers.flaggier.flagging.flagless.flagpole.flagrant.flagship.flailing.flakiest.flambeau.flambeed.flamenco.flameout.flamiest.flamines.flamingo.flamming.flancard.flanerie.flaneurs.flangers.flanging.flankers.flanking.flannels.flaperon.flapjack.flapless.flappers.flappier.flapping.flareups.flashers.flashgun.flashier.flashily.flashing.flaskets.flatbeds.flatboat.flatcaps.flatcars.flatfeet.flatfish.flatfoot.flathead.flatiron.flatland.flatlets.flatline.flatling.flatlong.flatmate.flatness.flattens.flatters.flattery.flattest.flatting.flattish.flattops.flatuses.flatware.flatwash.flatways.flatwise.flatwork.flatworm.flaunted.flaunter.flautist.flavanol.flavines.flavones.flavonol.flavored.flavorer.flavours.flavoury.flawiest.flawless.flaxiest.flaxseed.fleabags.fleabane.fleabite.fleapits.fleawort.flecking.flection.fledgier.fledging.fleecers.fleeched.fleeches.fleecier.fleecily.fleecing.fleering.fleetest.fleeting.flehmens.fleishig.flenched.flenches.flensers.flensing.fleshers.fleshier.fleshily.fleshing.fleshpot.fletched.fletcher.fletches.fleurons.flexagon.flexible.flexibly.flexions.flextime.flexuose.flexuous.flexural.flexures.flichter.flickers.flickery.flicking.flighted.flimflam.flimsier.flimsies.flimsily.flinched.flincher.flinches.flinders.flingers.flinging.flinkite.flintier.flintily.flinting.flipbook.flipflop.flippant.flippers.flippest.flipping.flirters.flirtier.flirting.flitched.flitches.flitters.flitting.flivvers.floatage.floatels.floaters.floatier.floating.floccing.floccose.floccule.flocculi.flockier.flocking.floggers.flogging.flokatis.flooders.flooding.floodlit.floodway.floorage.floorers.flooring.floosies.floozies.flopover.floppers.floppier.floppies.floppily.flopping.florally.florence.floridly.florigen.florists.floruits.flossers.flossier.flossies.flossily.flossing.flotages.flotilla.flotsams.flounced.flounces.flounder.flouring.flourish.flouters.flouting.flowages.flowered.flowerer.floweret.flubbers.flubbing.flubdubs.fluently.fluerics.fluffers.fluffier.fluffily.fluffing.fluidics.fluidise.fluidity.fluidize.fluidram.flukiest.flummery.flumping.flunkers.flunkeys.flunkies.flunking.fluorene.fluoride.fluorids.fluorine.fluorins.fluorite.flurried.flurries.flushers.flushest.flushing.flusters.flutiest.flutings.flutists.flutters.fluttery.fluxgate.fluxions.flyaways.flybelts.flyblown.flyblows.flyboats.flyovers.flypaper.flypasts.flysches.flysheet.flyspeck.flytiers.flytings.flytraps.flywheel.foamable.foamiest.foamless.foamlike.focaccia.focalise.focalize.focusers.focusing.focussed.focusses.foddered.foetuses.fogbound.fogeyish.fogeyism.fogfruit.foggages.foggiest.foghorns.fogyisms.foilable.foilsman.foilsmen.foisting.folacins.foldable.foldaway.foldboat.folderol.foldouts.foliaged.foliages.foliated.foliates.folioing.folkiest.folklife.folklike.folklore.folkmoot.folkmote.folkmots.folksier.folksily.folksong.folktale.folkways.follicle.followed.follower.followup.fomented.fomenter.fondants.fondlers.fondling.fondness.fonduing.fontanel.fontinas.foodless.foodways.foofaraw.foolfish.foolscap.foosball.footages.footbags.football.footbath.footboys.footfall.footgear.foothill.foothold.footiest.footings.footlers.footless.footlike.footling.footmark.footnote.footpace.footpads.footpath.footrace.footrest.footrope.footsies.footslog.footsore.footstep.footwall.footways.footwear.footwork.footworn.foozlers.foozling.foragers.foraging.foramens.foramina.forayers.foraying.forbears.forbidal.forboded.forbodes.forborne.forcedly.forceful.forcible.forcibly.forcipes.fordable.fordless.fordoing.forearms.forebays.forebear.forebode.forebody.foreboom.forecast.foredate.foredeck.foredoes.foredone.foredoom.foreface.forefeel.forefeet.forefelt.forefend.forefoot.foregoer.foregoes.foregone.foreguts.forehand.forehead.forehoof.foreknew.foreknow.forelady.foreland.forelegs.forelimb.forelock.foremast.foremilk.foremost.forename.forenoon.forensic.forepart.forepast.forepaws.forepeak.foreplay.forerank.foreruns.foresaid.foresail.foreseen.foreseer.foresees.foreshow.foreside.foreskin.forestal.forestay.forested.forester.forestry.foretell.foretime.foretold.foretops.forevers.forewarn.forewent.forewing.foreword.foreworn.foreyard.forfeits.forfends.forgings.forgiven.forgiver.forgives.forgoers.forgoing.forjudge.forkball.forkedly.forkfuls.forkiest.forkless.forklift.forklike.forksful.formable.formably.formalin.formally.formants.formates.formerly.formicas.formless.formulae.formulas.formwork.fornical.fornices.forrader.forsaken.forsaker.forsakes.forsooth.forspent.forswear.forswore.forsworn.fortieth.fortress.fortuity.fortuned.fortunes.fortyish.forwards.forzandi.forzando.fossette.fossicks.fostered.fosterer.fouettes.foughten.foulards.foulings.foulness.founders.founding.fountain.fourchee.foureyed.fourfold.fourgons.fourplex.foursome.fourteen.fourthly.foveated.foveolae.foveolar.foveolas.foveoles.foveolet.fowlings.foxfires.foxglove.foxholes.foxhound.foxhunts.foxiness.foxskins.foxtails.foxtrots.foziness.frabjous.fracases.fractals.fraction.fracture.fracturs.fraenums.fragging.fragment.fragrant.frailest.frakturs.framable.framings.francium.francize.frankers.frankest.franking.franklin.frapping.fraughts.fraulein.frayings.frazzled.frazzles.freakier.freakily.freaking.freakish.freakout.freckled.freckles.freebase.freebees.freebies.freeboot.freeborn.freedman.freedmen.freedoms.freeform.freehand.freehold.freeload.freeness.freesias.freeware.freeways.freewill.freezers.freezing.freights.fremitus.frenched.frenches.frenetic.frenular.frenulum.frenzied.frenzies.frenzily.frequent.frescoed.frescoer.frescoes.freshens.freshest.freshets.freshing.freshman.freshmen.fresnels.fretless.fretsaws.fretsome.fretters.frettier.fretting.fretwork.friaries.fribbled.fribbler.fribbles.fricando.friction.friended.friendly.frigates.frigging.frighted.frighten.frigidly.frijoles.frillers.frillier.frilling.fringier.fringing.frippery.frisbees.frisette.friseurs.friskers.friskets.friskier.friskily.frisking.frissons.frittata.fritters.fritting.frivoled.frivoler.frizette.frizzers.frizzier.frizzies.frizzily.frizzing.frizzled.frizzler.frizzles.frocking.frogeyed.frogeyes.frogfish.froggier.frogging.froglets.froglike.frolicky.fromages.fromenty.frondeur.frondose.frontage.frontals.frontier.fronting.frontlet.frontman.frontmen.frontons.frostbit.frosteds.frostier.frostily.frosting.frostnip.frothers.frothier.frothily.frothing.frottage.frotteur.froufrou.frounced.frounces.frouzier.frowners.frowning.frowsier.frowsted.frowzier.frowzily.frozenly.fructify.fructose.frugally.frugging.fruitage.fruiters.fruitful.fruitier.fruitily.fruiting.fruition.fruitlet.frumenty.frumpier.frumpily.frumpish.frustule.frustums.frybread.fubsiest.fuchsias.fuchsine.fuchsins.fuckoffs.fucoidal.fuddling.fuehrers.fuellers.fuelling.fuelwood.fugacity.fuggiest.fugitive.fugleman.fuglemen.fuguists.fulcrums.fulfills.fullback.fullered.fullface.fullness.fulmined.fulmines.fulminic.fumarase.fumarate.fumarole.fumatory.fumblers.fumbling.fumeless.fumelike.fumettes.fumigant.fumigate.fumingly.fumitory.function.functors.funerals.funerary.funereal.funfairs.funfests.fungible.fungoids.funguses.funhouse.funicles.funiculi.funkiest.funneled.funniest.funnyman.funnymen.furanose.furbelow.furcated.furcates.furcraea.furculae.furcular.furculum.furfural.furfuran.furfures.furibund.furlable.furlongs.furlough.furmenty.furnaced.furnaces.furriers.furriery.furriest.furriner.furrings.furrowed.furrower.furthers.furthest.furuncle.furziest.fusarium.fuselage.fuseless.fuselike.fusiform.fusileer.fusilier.fusillis.fusional.fussiest.fusspots.fustians.fustiest.futharcs.futharks.futhorcs.futhorks.futilely.futility.futtocks.futurism.futurist.futurity.fuzziest.fuzztone.gabbards.gabbarts.gabbiest.gabblers.gabbling.gabbroic.gabbroid.gabelled.gabelles.gabfests.gadabout.gadarene.gadflies.gadgetry.gadroons.gadwalls.gadzooks.gaggling.gagsters.gahnites.gaieties.gainable.gainless.gainlier.gainsaid.gainsays.galabias.galabieh.galabiya.galactic.galangal.galangas.galateas.galavant.galaxies.galbanum.galeated.galenite.galettes.galilees.galipots.galivant.gallants.gallates.galleass.galleins.galleons.galleria.galletas.galleted.galliard.galliass.gallican.gallicas.galliots.gallipot.galliums.gallnuts.galloons.galloots.galloped.galloper.gallused.galluses.gallying.galopade.galoping.galoshed.galoshes.galumphs.galvanic.gamashes.gambades.gambados.gambeson.gambiers.gamblers.gambling.gamboges.gamboled.gambrels.gambusia.gamecock.gamelans.gamelike.gameness.gamesman.gamesmen.gamesome.gamester.gaminess.gammadia.gammiest.gammoned.gammoner.gamodeme.ganaches.gandered.gangbang.gangland.ganglial.gangliar.ganglier.gangling.ganglion.gangplow.gangrels.gangrene.gangstas.gangster.gangways.ganister.gantlets.gantline.gantlope.gantries.ganymede.gapeseed.gapeworm.gapingly.gappiest.garaging.garbages.garbagey.garbanzo.garblers.garbless.garbling.garboard.garboils.gardened.gardener.gardenia.gardyloo.garganey.garglers.gargling.gargoyle.garigues.garishly.garlands.garlicky.garments.garnered.garoting.garotted.garotter.garottes.garpikes.garreted.garrison.garroted.garroter.garrotes.garrotte.gartered.gasalier.gaselier.gashouse.gasified.gasifier.gasifies.gasiform.gaskings.gaslight.gasogene.gasohols.gasolene.gasolier.gasoline.gassiest.gassings.gastight.gastness.gastraea.gastreas.gastrins.gastrula.gasworks.gatefold.gateless.gatelike.gatepost.gateways.gathered.gatherer.gauchely.gauchest.gaudiest.gauffers.gauntest.gauntlet.gauziest.gaveling.gavelled.gavelock.gavotted.gavottes.gawkiest.gayeties.gaywings.gazaboes.gazanias.gazeboes.gazelles.gazetted.gazettes.gazogene.gazpacho.gazumped.gazumper.gearcase.gearhead.gearings.gearless.geekdoms.geekiest.geepound.gelatine.gelating.gelatins.gelation.geldings.gelidity.gellants.gelsemia.gematria.geminate.gemmated.gemmates.gemmiest.gemmules.gemology.gemsboks.gemsbuck.gemstone.gendarme.gendered.generals.generate.generics.generous.genetics.genettes.genially.genipaps.genitals.genitive.genitors.geniture.geniuses.gennaker.genocide.genogram.genoises.genomics.genotype.gensengs.gentians.gentiles.gentlest.gentling.gentrice.gentries.gentrify.geodesic.geodetic.geoducks.geognosy.geologer.geologic.geomancy.geometer.geometry.geophagy.geophone.geophyte.geoponic.geoprobe.georgics.geotaxes.geotaxis.geranial.geraniol.geranium.gerardia.gerberas.gerbille.gerenuks.germanic.germfree.germiest.germinal.germlike.gerontic.gesneria.gestalts.gestapos.gestated.gestates.gestical.gestural.gestured.gesturer.gestures.getaways.gettable.gettered.gewgawed.gharials.gharries.ghastful.gheraoed.gheraoes.gherkins.ghettoed.ghettoes.ghillies.ghostier.ghosting.ghoulies.ghoulish.giantess.giantism.giardias.gibbered.gibbeted.gibbsite.gibingly.giddiest.giddying.giftable.giftedly.giftless.giftware.giftwrap.gigabits.gigabyte.gigaflop.gigantic.gigatons.gigawatt.gigglers.gigglier.giggling.gilberts.gildhall.gildings.gillnets.gillying.gilthead.gimbaled.gimcrack.gimleted.gimmicks.gimmicky.gimpiest.gingalls.gingeley.gingelis.gingelli.gingelly.gingered.gingerly.ginghams.gingilis.gingilli.gingivae.gingival.gingkoes.ginkgoes.ginniest.ginnings.ginsengs.gipsying.giraffes.girasole.girasols.girdlers.girdling.girlhood.girliest.girolles.girosols.girthing.gisarmes.gitterns.giveable.giveaway.giveback.gizzards.gjetosts.glabella.glabrate.glabrous.glaceing.glaciate.glaciers.glacises.gladdens.gladdest.gladding.gladiate.gladiest.gladiola.gladioli.gladlier.gladness.gladsome.glairier.glairing.glamours.glancers.glancing.glanders.glandule.glariest.glasnost.glassful.glassier.glassies.glassily.glassine.glassing.glassman.glassmen.glaucoma.glaucous.glaziers.glaziery.glaziest.glazings.gleamers.gleamier.gleaming.gleaners.gleaning.gleeking.gleesome.gleetier.gleeting.glegness.glenlike.gleyings.gliadine.gliadins.glibbest.glibness.glimmers.glimpsed.glimpser.glimpses.glintier.glinting.gliomata.glissade.glistens.glisters.glitches.glitters.glittery.glitzier.glitzing.gloaming.gloaters.gloating.globally.globated.globbier.globoids.globular.globules.globulin.glochids.glomming.glonoins.gloomful.gloomier.gloomily.glooming.gloppier.glopping.gloriole.glorious.glorying.glossary.glosseme.glossers.glossier.glossies.glossily.glossina.glossing.glouting.glowered.glowworm.gloxinia.glucagon.glucinic.glucinum.glucoses.glucosic.gluelike.gluepots.glugging.gluhwein.gluiness.glummest.glumness.glumpier.glumpily.glunched.glunches.glutelin.glutenin.glutting.gluttons.gluttony.glyceric.glycerin.glycerol.glyceryl.glycines.glycogen.glycolic.glyconic.glycosyl.glyptics.gnarlier.gnarling.gnarring.gnashing.gnathion.gnathite.gnatlike.gnattier.gnawable.gnawings.gneisses.gneissic.gnomical.gnomists.gnomonic.gnostics.goadlike.goalless.goalpost.goalward.goatfish.goatherd.goatlike.goatskin.gobblers.gobbling.gobioids.gobshite.godchild.goddamns.godetias.godheads.godhoods.godliest.godlings.godroons.godsends.godships.goethite.goffered.gogglers.gogglier.goggling.goitrous.golconda.goldarns.goldbugs.goldener.goldenly.goldeyes.goldfish.goldtone.goldurns.golfings.golgotha.goliards.goliaths.golliwog.gollywog.goloshes.gombeens.gombroon.gomerals.gomerels.gomerils.gonadial.gondolas.goneness.gonfalon.gonfanon.gonglike.gonidial.gonidium.gonocyte.gonopore.goodbyes.goodlier.goodness.goodwife.goodwill.goofball.goofiest.googlies.goombahs.goombays.gooniest.goopiest.goosiest.gorbelly.gorblimy.gorcocks.gorditas.gorgedly.gorgeous.gorgerin.gorgeted.gorillas.goriness.gormands.gormless.gorsiest.goshawks.goslings.gospeler.gospelly.gosports.gossamer.gossiped.gossiper.gossipry.gossoons.gossypol.gothites.gouaches.gouramis.gourmand.gourmets.goutiest.governed.governor.gownsman.gownsmen.grabbers.grabbier.grabbing.grabbled.grabbler.grabbles.graceful.graciles.gracilis.gracioso.gracious.grackles.gradable.gradated.gradates.gradient.gradines.graduals.graduand.graduate.graduses.graecize.graffiti.graffito.graftage.grafters.grafting.grainers.grainier.graining.gramarye.gramercy.grammars.grandads.grandame.grandams.granddad.granddam.grandees.grandest.grandeur.grandkid.grandmas.grandpas.grandsir.grandson.grangers.granitas.granites.granitic.grannies.granolas.grantees.granters.granting.grantors.granular.granules.grapheme.graphics.graphing.graphite.grapiest.grapline.graplins.grapnels.grappled.grappler.grapples.graspers.grasping.grassier.grassily.grassing.grateful.gratinee.gratings.gratuity.graupels.gravamen.graveled.gravelly.gravidae.gravidas.gravidly.gravitas.graviton.gravlaks.gravures.grayback.grayfish.graylags.grayling.graymail.grayness.grayouts.grazable.graziers.grazings.grazioso.greasers.greasier.greasily.greasing.greatens.greatest.grecized.grecizes.greedier.greedily.greegree.greenbug.greenery.greenest.greenfly.greenier.greenies.greening.greenish.greenlet.greenlit.greenths.greenway.greeters.greeting.greisens.gremials.gremlins.gremmies.grenades.grewsome.greyhens.greylags.greyness.gribbles.gridders.griddled.griddles.gridiron.gridlock.grievant.grievers.grieving.grievous.griffins.griffons.grifters.grifting.grillade.grillage.grillers.grillery.grilling.grimaced.grimacer.grimaces.grimiest.grimmest.grimness.grinches.grinders.grindery.grinding.grinners.grinning.gripiest.grippers.grippier.gripping.gripsack.griseous.grisette.griskins.grislier.gristers.gristles.gritters.grittier.grittily.gritting.grizzled.grizzler.grizzles.groaners.groaning.grodiest.groggery.groggier.groggily.grograms.grogshop.groining.grokking.grommets.gromwell.groomers.grooming.groovers.groovier.grooving.grosbeak.groschen.grossers.grossest.grossing.grottier.grottoed.grottoes.grouched.grouches.grounded.grounder.groupers.groupies.grouping.groupoid.grousers.grousing.grouters.groutier.grouting.groveled.groveler.growable.growlers.growlier.growling.grownups.grubbers.grubbier.grubbily.grubbing.grubworm.grudgers.grudging.gruelers.grueling.gruelled.grueller.gruesome.gruffest.gruffier.gruffily.gruffing.gruffish.gruiform.grumbled.grumbler.grumbles.grummest.grummets.grumphie.grumpier.grumpily.grumping.grumpish.grungers.grungier.grunions.grunters.grunting.gruntled.gruntles.grutched.grutches.gruyeres.gryphons.guacharo.guaiacol.guaiacum.guaiocum.guanacos.guanases.guanidin.guanines.guaranas.guaranis.guaranty.guardant.guarddog.guarders.guardian.guarding.guayules.gudgeons.guerdons.gueridon.guerilla.guernsey.guessers.guessing.guesting.guffawed.guggling.guidable.guidance.guideway.guilders.guileful.guiltier.guiltily.guipures.guisards.guitguit.gulfiest.gulflike.gulfweed.gullable.gullably.gullible.gullibly.gullwing.gullying.gulosity.gulpiest.gumballs.gumboils.gumboots.gumbotil.gumdrops.gumlines.gummiest.gummites.gummoses.gummosis.gumption.gumshoed.gumshoes.gumtrees.gumweeds.gumwoods.gunboats.gunfight.gunfires.gunflint.gunkhole.gunkiest.gunlocks.gunmetal.gunnings.gunnybag.gunpaper.gunplays.gunpoint.gunrooms.gunships.gunshots.gunsmith.gunstock.gunwales.gurglets.gurgling.gurnards.guruship.gushiest.gusseted.gussying.gustable.gustiest.gustless.gutsiest.guttated.guttered.guttiest.guttlers.guttling.guttural.guylines.guzzlers.guzzling.gweducks.gymkhana.gymnasia.gymnasts.gynaecea.gynaecia.gynandry.gynarchy.gynecium.gynecoid.gyniatry.gynoecia.gyplures.gypseian.gypseous.gypsters.gypsydom.gypsying.gypsyish.gypsyism.gyrating.gyration.gyrators.gyratory.gyroidal.gyrostat.habanera.habanero.habdalah.habitans.habitant.habitats.habiting.habitual.habitude.habitues.hachured.hachures.hacienda.hackable.hackbuts.hacklers.hacklier.hackling.hackneys.hacksawn.hacksaws.hackwork.haddocks.hadronic.haematal.haematic.haematin.haeredes.hafniums.haftarah.haftaras.haftarot.haftorah.haftoros.haftorot.hagadist.hagberry.haggadah.haggadas.haggadic.haggadot.haggards.haggises.hagglers.haggling.hagrider.hagrides.hahniums.hairball.hairband.haircaps.haircuts.hairiest.hairless.hairlike.hairline.hairlock.hairnets.hairpins.hairwork.hairworm.halachas.halachic.halachot.halakahs.halakhah.halakhas.halakhic.halakhot.halakist.halakoth.halalahs.halation.halavahs.halazone.halberds.halberts.halcyons.haleness.halfback.halfbeak.halflife.halfness.halfpipe.halftime.halftone.halibuts.halidome.halidoms.halliard.hallmark.halloaed.halloing.hallooed.hallowed.hallower.hallucal.halluces.hallways.halogens.halolike.haltered.halteres.haltless.halutzim.halyards.hamartia.hamboned.hambones.hamburgs.hammadas.hammered.hammerer.hammiest.hammocks.hampered.hamperer.hamsters.hamulate.hamulose.hamulous.hanapers.handaxes.handbags.handball.handbell.handbill.handbook.handcars.handcart.handclap.handcuff.handfast.handfuls.handgrip.handguns.handheld.handhold.handicap.handiest.handlers.handless.handlike.handling.handlist.handloom.handmade.handmaid.handoffs.handouts.handover.handpick.handrail.handsaws.handsels.handsets.handsewn.handsful.handsome.handwork.handwrit.handyman.handymen.hangable.hangared.hangbird.hangdogs.hangfire.hangings.hangnail.hangnest.hangouts.hangover.hangtags.hankered.hankerer.hanseled.hanumans.haphtara.hapkidos.haplites.haploids.haploidy.haplonts.haplopia.haploses.haplosis.happened.happiest.haptenes.haptenic.haptical.harangue.harassed.harasser.harasses.harbored.harborer.harbours.hardback.hardball.hardboot.hardcase.hardcore.hardedge.hardened.hardener.hardhack.hardhats.hardhead.hardiest.hardline.hardness.hardnose.hardpack.hardpans.hardship.hardtack.hardtops.hardware.hardwire.hardwood.harebell.harelike.harelips.harianas.haricots.harijans.harissas.harkened.harkener.harlotry.harmines.harmless.harmonic.harpings.harpists.harpoons.harridan.harriers.harrowed.harrower.harrumph.harrying.harshens.harshest.harslets.harumphs.haruspex.harvests.hasheesh.hashhead.hassiums.hassling.hassocks.hasteful.hastened.hastener.hastiest.hatbands.hatboxes.hatcheck.hatchels.hatchers.hatchery.hatchets.hatching.hatchway.hateable.hatmaker.hatracks.hatteria.hauberks.haulages.hauliers.haulmier.haulyard.haunched.haunches.haunters.haunting.hausfrau.hautbois.hautboys.hauteurs.havartis.havdalah.havelock.havening.haverels.havering.haviours.havocked.havocker.hawfinch.hawkbill.hawkeyed.hawkings.hawklike.hawkmoth.hawknose.hawkshaw.hawkweed.hawthorn.haycocks.hayfield.hayforks.haylages.haylofts.haymaker.hayracks.hayricks.hayrides.hayseeds.haystack.haywards.haywires.hazarded.hazarder.hazelhen.hazelnut.haziness.hazzanim.headache.headachy.headband.headends.headfish.headfuls.headgate.headgear.headhunt.headiest.headings.headlamp.headland.headless.headline.headlock.headlong.headmost.headnote.headpins.headrace.headrest.headroom.headsail.headsets.headship.headsman.headsmen.headstay.headways.headwind.headword.headwork.healable.hearable.hearings.hearkens.hearsays.hearsing.heartens.heartier.hearties.heartily.hearting.heatable.heatedly.heathens.heathers.heathery.heathier.heatless.heavenly.heaviest.heavyset.hebdomad.hebetate.hebetude.hebraize.hecatomb.hecklers.heckling.hectares.hectical.hecticly.hectored.hedgehog.hedgehop.hedgepig.hedgerow.hedgiest.hedonics.hedonism.hedonist.heedless.heehawed.heelball.heelings.heelless.heelpost.heeltaps.heftiest.hegemons.hegemony.hegumene.hegumens.hegumeny.heighten.heighths.heirdoms.heirless.heirloom.heirship.heisters.heisting.hektares.heliacal.heliasts.helicity.helicoid.helicons.helicopt.helilift.helipads.heliport.helistop.hellbent.hellcats.helleris.hellfire.hellhole.hellions.hellkite.helloing.helmeted.helminth.helmless.helmsman.helmsmen.helotage.helotism.helpable.helpings.helpless.helpmate.helpmeet.hemagogs.hematein.hematics.hematine.hematins.hematite.hematoid.hematoma.hemiolas.hemiolia.hemipter.hemlines.hemlocks.hemocoel.hemocyte.hemolyze.hemostat.hempiest.hemplike.hempseed.hempweed.henbanes.henchman.henchmen.hencoops.henequen.henequin.henhouse.heniquen.hennaing.henpecks.heparins.hepatica.hepatics.hepatize.hepatoma.heptagon.heptanes.heptarch.heptoses.heralded.heraldic.heraldry.herbaged.herbages.herbaria.herbiest.herbless.herblike.hercules.herdlike.herdsman.herdsmen.hereaway.heredity.hereinto.heresies.heretics.heretrix.hereunto.hereupon.herewith.heritage.heritors.heritrix.hermaean.hermetic.hermitic.hermitry.herniate.heroical.heroines.heroisms.heroized.heroizes.herpetic.herrings.herrying.herstory.hesitant.hesitate.hessians.hessites.hetaerae.hetaeras.hetaeric.hetairai.hetairas.hexagons.hexagram.hexamine.hexaplar.hexaplas.hexapods.hexapody.hexarchy.hexereis.hexosans.hiatuses.hibachis.hibernal.hibiscus.hiccough.hiccuped.hidalgos.hiddenly.hideaway.hideless.hideouts.hidroses.hidrosis.hidrotic.hierarch.hieratic.hierurgy.higglers.higgling.highball.highborn.highboys.highbred.highbrow.highbush.highjack.highland.highlife.highness.highrise.highroad.highspot.hightail.highting.hightops.highways.hijacked.hijacker.hilarity.hildings.hilliest.hilloaed.hillocks.hillocky.hilloing.hillside.hilltops.hiltless.himation.hindered.hinderer.hindguts.hindmost.hinkiest.hinnying.hipbones.hiplines.hipparch.hippiest.hipsters.hiragana.hireable.hireling.hirpling.hirseled.hirsling.hirudins.hissiest.hissings.histamin.histidin.histogen.histones.historic.hitchers.hitching.hitherto.hittable.hiveless.hizzoner.hoactzin.hoarders.hoarding.hoariest.hoarsely.hoarsens.hoarsest.hoatzins.hobblers.hobbling.hobbyist.hobnails.hoboisms.hockshop.hocusing.hocussed.hocusses.hoecakes.hoedowns.hogbacks.hogmanay.hogmanes.hogmenay.hognoses.hogshead.hogtying.hogweeds.hoicking.hoidened.hoisters.hoisting.hokiness.hokypoky.holdable.holdalls.holdback.holddown.holdfast.holdings.holdouts.holdover.holeless.holibuts.holidays.holiness.holistic.hollaing.hollands.hollered.holloaed.holloing.hollooed.hollowed.hollower.hollowly.holmiums.holocene.hologamy.hologram.hologyny.holotype.holozoic.holstein.holsters.holydays.holytide.homagers.homaging.homburgs.homebody.homeboys.homebred.homebrew.homegirl.homeland.homeless.homelier.homelike.homemade.homeobox.homeotic.homepage.homeport.homering.homeroom.homesick.homesite.homespun.homestay.hometown.homeward.homework.homicide.homilies.homilist.hominess.hominian.hominids.hominies.hominine.hominize.hominoid.hommocks.hommoses.homogamy.homogeny.homogony.homologs.homology.homonyms.homonymy.honchoed.hondling.honester.honestly.honewort.honeybee.honeybun.honeydew.honeyful.honeying.honeypot.hongiing.honorand.honorary.honorees.honorers.honoring.honoured.honourer.hoochies.hoodiest.hoodless.hoodlike.hoodlums.hoodmold.hoodooed.hoodwink.hoofbeat.hoofless.hooflike.hookiest.hookless.hooklets.hooklike.hooknose.hookworm.hooligan.hoopless.hooplike.hoopster.hoorahed.hoorayed.hoosegow.hoosgows.hootches.hootiest.hoovered.hopefuls.hopeless.hopheads.hopingly.hoplites.hoplitic.hoppiest.hoppings.hoppling.hopsacks.hoptoads.hordeins.hordeola.horizons.hormonal.hormones.hormonic.hornbeam.hornbill.hornbook.hornfels.horniest.hornings.hornists.hornitos.hornless.hornlike.hornpipe.hornpout.horntail.hornworm.hornwort.horologe.horology.horrible.horribly.horrider.horridly.horrific.horsecar.horsefly.horseman.horsemen.horsepox.horsiest.hosannah.hosannas.hoselike.hosepipe.hoseying.hospices.hospital.hospitia.hospodar.hostages.hosteled.hosteler.hostelry.hostiles.hostlers.hotblood.hotboxes.hotcakes.hotching.hotchpot.hoteldom.hotelier.hotelman.hotelmen.hotfoots.hotheads.hothouse.hotlines.hotlinks.hotpress.hotshots.hotspots.hotspurs.hounders.hounding.hourlies.hourlong.houseboy.housefly.houseful.houseled.houseman.housemen.housesat.housesit.housetop.housings.hoveling.hovelled.hoverers.hoverfly.hovering.howdying.howitzer.hoydened.hryvnias.huarache.huaracho.hubrises.huckster.huddlers.huddling.huffiest.hugeness.huggable.huipiles.huisache.hulkiest.hulloaed.hulloing.hullooed.humanely.humanest.humanise.humanism.humanist.humanity.humanize.humanoid.humblers.humblest.humbling.humdrums.humerals.humidify.humidity.humidors.humified.humility.humiture.hummable.hummocks.hummocky.hummuses.humorful.humoring.humorist.humorous.humoured.humpback.humphing.humpiest.humpless.hunching.hundreds.hungered.hungover.hungrier.hungrily.hunkered.hunkiest.huntable.huntedly.huntings.huntress.huntsman.huntsmen.hurdlers.hurdling.hurlings.hurrahed.hurrayed.hurriers.hurrying.hurtless.hurtling.husbands.hushedly.huskiest.huskings.husklike.hustings.hustlers.hustling.huswifes.huswives.hutching.hutments.hutzpahs.huzzahed.huzzaing.hyacinth.hyalines.hyalites.hyalogen.hyaloids.hybrises.hydatids.hydracid.hydragog.hydranth.hydrants.hydrases.hydrated.hydrates.hydrator.hydrides.hydrilla.hydrogel.hydrogen.hydroids.hydromel.hydronic.hydropic.hydropsy.hydroski.hydrosol.hydroxyl.hygeists.hygieist.hygienes.hygienic.hylozoic.hymeneal.hymenial.hymenium.hymnbook.hymnists.hymnless.hymnlike.hyoidean.hyoscine.hypergol.hyperons.hyperope.hyphemia.hyphened.hyphenic.hypnoses.hypnosis.hypnotic.hypoacid.hypoderm.hypogeal.hypogean.hypogene.hypogeum.hypogyny.hyponeas.hyponoia.hyponyms.hyponymy.hypopnea.hypopyon.hypothec.hypoxias.hyracoid.hysteria.hysteric.iambuses.iatrical.ibogaine.icebergs.iceblink.iceboats.icebound.iceboxes.icefalls.icehouse.icekhana.icemaker.ichnites.ichorous.ichthyic.ickiness.iconical.icterics.idealess.idealise.idealism.idealist.ideality.idealize.idealogy.ideating.ideation.ideative.identify.identity.ideogram.ideology.idiocies.idiolect.idiotism.idiotype.idleness.idlesses.idocrase.idolater.idolator.idolatry.idolised.idoliser.idolises.idolisms.idolized.idolizer.idolizes.idoneity.idoneous.idylists.idyllist.iffiness.ignatias.ignified.ignifies.igniters.igniting.ignition.ignitors.ignitron.ignominy.ignorami.ignorant.ignorers.ignoring.iguanian.iguanids.ikebanas.illation.illative.illegals.illinium.illiquid.illogics.illuding.illumine.illuming.illusion.illusive.illusory.illuvial.illuvium.ilmenite.imaginal.imagined.imaginer.imagines.imagings.imagisms.imagists.imamates.imbalmed.imbalmer.imbarked.imbecile.imbedded.imbibers.imbibing.imbitter.imblazed.imblazes.imbodied.imbodies.imbolden.imbosoms.imbowers.imbrowns.imbruing.imbruted.imbrutes.imitable.imitated.imitates.imitator.immanent.immature.immenser.immerged.immerges.immersed.immerses.immeshed.immeshes.imminent.immingle.immixing.immobile.immodest.immolate.immortal.immotile.immunise.immunity.immunize.immuring.impacted.impacter.impactor.impaints.impaired.impairer.impalers.impaling.impanels.imparity.imparked.imparted.imparter.impasses.impasted.impastes.impastos.impawned.impearls.impeders.impeding.impelled.impeller.impellor.impended.imperial.imperils.imperium.impetigo.impinged.impinger.impinges.impishly.implants.impleads.impledge.implicit.imploded.implodes.implored.implorer.implores.implying.impolicy.impolite.imponing.imporous.imported.importer.imposers.imposing.imposted.imposter.impostor.impotent.impounds.impowers.impregns.impresas.impreses.imprests.imprimis.imprints.imprison.improper.improved.improver.improves.impudent.impugned.impugner.impulsed.impulses.impunity.impurely.impurest.impurity.imputers.imputing.inaction.inactive.inarable.inarched.inarches.inarming.inbeings.inboards.inbounds.inbreeds.inbursts.incaging.incanted.incasing.incensed.incenses.incented.incenter.incepted.inceptor.inchmeal.inchoate.inchworm.incident.incipits.incising.incision.incisive.incisors.incisory.incisure.incitant.inciters.inciting.inclasps.inclined.incliner.inclines.inclosed.incloser.incloses.included.includes.incomers.incoming.inconnus.incorpse.increase.increate.incrusts.incubate.incudate.incumber.incurred.incurved.incurves.incusing.indagate.indamine.indamins.indebted.indecent.indented.indenter.indentor.indevout.indexers.indexing.indicans.indicant.indicate.indicias.indicium.indicted.indictee.indicter.indictor.indigene.indigens.indigent.indignly.indigoes.indigoid.indirect.inditers.inditing.indocile.indolent.indorsed.indorsee.indorser.indorses.indorsor.indowing.indoxyls.indrafts.inducers.inducing.inducted.inductee.inductor.indulged.indulger.indulges.induline.indulins.indurate.indusial.indusium.industry.indwells.inearths.inedible.inedibly.inedited.inequity.inerrant.inertiae.inertial.inertias.inexpert.infamies.infamous.infantas.infantes.infantry.infarcts.infaunae.infaunal.infaunas.infected.infecter.infector.infecund.infeoffs.inferior.infernal.infernos.inferred.inferrer.infested.infester.infidels.infields.infights.infinite.infinity.infirmed.infirmly.infixing.infixion.inflamed.inflamer.inflames.inflated.inflater.inflates.inflator.inflects.inflexed.inflicts.inflight.influent.influxes.infobahn.infolded.infolder.informal.informed.informer.infought.infracts.infrared.infringe.infrugal.infusers.infusing.infusion.infusive.ingather.ingenues.ingested.ingoting.ingrafts.ingrains.ingrates.inground.ingroups.ingrowth.inguinal.ingulfed.inhabits.inhalant.inhalers.inhaling.inhauler.inherent.inhering.inherits.inhesion.inhibins.inhibits.inholder.inhumane.inhumers.inhuming.inimical.iniquity.initials.initiate.injected.injector.injurers.injuries.injuring.inkberry.inkblots.inkhorns.inkiness.inklings.inkstand.inkstone.inkwells.inkwoods.inlacing.inlander.inlayers.inlaying.inmeshed.inmeshes.innately.innerved.innerves.innocent.innovate.innuendo.inoculum.inosines.inosites.inositol.inpoured.inputted.inputter.inquests.inquiets.inquired.inquirer.inquires.inrushes.insanely.insanest.insanity.inscapes.inscribe.inscroll.insculps.insectan.insecure.inserted.inserter.insetted.insetter.insheath.inshrine.insiders.insights.insignia.insisted.insister.insnared.insnarer.insnares.insolate.insolent.insomnia.insomuch.insouled.inspects.insphere.inspired.inspirer.inspires.inspirit.instable.installs.instance.instancy.instants.instated.instates.instills.instinct.instroke.instruct.insulant.insulars.insulate.insulins.insulted.insulter.insurant.insureds.insurers.insuring.inswathe.intactly.intaglio.intarsia.integers.integral.intended.intender.intenser.intently.interact.interage.interbed.intercom.intercut.interest.interims.interior.interlap.interlay.intermat.intermit.intermix.internal.interned.internee.internes.interred.interrex.interrow.intersex.intertie.interval.interwar.inthrall.inthrals.inthrone.intifada.intimacy.intimate.intimist.intitled.intitles.intitule.intombed.intonate.intoners.intoning.intorted.intraday.intrados.intranet.intrants.intreats.intrench.intrepid.intrigue.introits.intromit.introrse.intruded.intruder.intrudes.intrusts.intubate.intuited.inturned.intwined.intwines.intwists.inulases.inundant.inundate.inurbane.inurning.invaders.invading.invalids.invasion.invasive.invected.inveighs.inveigle.invented.inventer.inventor.inverity.inversed.inverses.inverted.inverter.invertin.invertor.invested.investor.inviable.inviably.invirile.inviscid.invitees.inviters.inviting.invocate.invoiced.invoices.invokers.invoking.involute.involved.involver.involves.inwalled.inwardly.inweaved.inweaves.iodating.iodation.iodinate.iodising.iodizers.iodizing.iodoform.iodophor.iodopsin.ionicity.ionising.ionizers.ionizing.ionogens.ionomers.iotacism.ipomoeas.irefully.irenical.iridiums.iritises.ironbark.ironclad.ironical.ironings.ironists.ironized.ironizes.ironlike.ironness.ironside.ironware.ironweed.ironwood.ironwork.irrigate.irritant.irritate.irrupted.isagoges.isagogic.isarithm.isatines.isatinic.ischemia.ischemic.islanded.islander.isleless.isobares.isobaric.isobaths.isobutyl.isocheim.isochime.isochore.isochors.isochron.isocline.isocracy.isoforms.isogenic.isogloss.isogonal.isogones.isogonic.isograft.isograms.isograph.isogrivs.isohyets.isolable.isolated.isolates.isolator.isoleads.isolines.isologue.isomeric.isometry.isomorph.isonomic.isopachs.isophote.isopleth.isopodan.isoprene.isospins.isospory.isostacy.isostasy.isotachs.isothere.isotherm.isotones.isotonic.isotopes.isotopic.isotropy.isotypes.isotypic.isozymes.isozymic.issuable.issuably.issuance.isthmian.isthmoid.itchiest.itchings.itemised.itemises.itemized.itemizer.itemizes.iterance.iterated.iterates.jabbered.jabberer.jacamars.jacinthe.jacinths.jackaroo.jackboot.jackdaws.jackeroo.jacketed.jackfish.jacklegs.jackpots.jackroll.jackstay.jacobins.jaconets.jacquard.jaculate.jacuzzis.jadeites.jadelike.jadishly.jaggeder.jaggedly.jagghery.jaggiest.jailable.jailbait.jailbird.jalapeno.jalapins.jalopies.jalousie.jambeaux.jamboree.jammable.jammiest.janglers.janglier.jangling.janiform.janisary.janitors.janizary.japanize.japanned.japanner.japeries.japingly.japonica.jargoned.jargonel.jargoons.jarheads.jarldoms.jarosite.jarovize.jasmines.jauncing.jaundice.jauntier.jauntily.jaunting.javelina.javelins.jawboned.jawboner.jawbones.jawlines.jaybirds.jaywalks.jazziest.jazzlike.jealousy.jeepneys.jejunely.jejunity.jellabas.jellying.jelutong.jemadars.jemidars.jemmying.jeopards.jeopardy.jeremiad.jerkiest.jeroboam.jerreeds.jerrican.jerrycan.jerseyed.jestings.jesuitic.jesuitry.jetbeads.jetfoils.jetliner.jetports.jettiest.jettison.jettying.jewelers.jeweling.jewelled.jeweller.jezebels.jibbooms.jibingly.jigaboos.jiggered.jiggiest.jigglier.jiggling.jigsawed.jillions.jimmying.jingalls.jingkoes.jinglers.jinglier.jingling.jingoish.jingoism.jingoist.jipijapa.jittered.jiujitsu.jiujutsu.jobnames.jockette.jockeyed.jocosely.jocosity.jocundly.jodhpurs.joggings.jogglers.joggling.johannes.johnboat.johnnies.johnsons.joinable.joinders.joinings.jointers.jointing.jointure.joisting.jokester.jokiness.jokingly.jolliers.jolliest.jollying.joltiest.jonesing.jongleur.jonquils.jostlers.jostling.jottings.jouncier.jouncing.journals.journeys.jousters.jousting.jovially.jovialty.jowliest.joyances.joyfully.joyously.joyrider.joyrides.joystick.jubilant.jubilate.jubilees.juddered.judgment.judicial.judoists.jugglers.jugglery.juggling.jugheads.jugulars.jugulate.juiciest.jujitsus.jujuisms.jujuists.jujutsus.julienne.jumblers.jumbling.jumbucks.jumpable.jumpiest.jumpoffs.jumpsuit.junction.juncture.junglier.junipers.junketed.junketer.junkiest.junkyard.jurassic.juratory.juristic.juryless.jussives.justices.justling.justness.jutelike.juttying.juvenals.juvenile.kabalism.kabalist.kabbalah.kabbalas.kabeljou.kachinas.kaffiyah.kaffiyeh.kailyard.kainites.kaiserin.kajeputs.kakemono.kakiemon.kalamata.kalewife.kaleyard.kalifate.kalimbas.kallidin.kalyptra.kamaaina.kamacite.kamikaze.kampongs.kamseens.kangaroo.kanteles.kaoliang.kaolines.kaolinic.karakuls.karaokes.karosses.kartings.karyotin.kashered.kashmirs.kashruth.kashruts.katakana.katchina.katcinas.kathodal.kathodes.kathodic.katsuras.katydids.kavakava.kavasses.kayakers.kayaking.kazachki.kazachok.kazatski.kazatsky.kebbocks.kebbucks.keckling.kedgeree.keelages.keelboat.keelhale.keelhaul.keelless.keelsons.keenness.keepable.keepings.keepsake.keeshond.keesters.keffiyah.keffiyeh.kegelers.keglings.keiretsu.keisters.keitloas.keloidal.kenneled.kennings.kenotron.kephalin.keramics.keratins.keratoid.keratoma.keratose.kerchief.kermesse.kermises.kerneled.kernelly.kernites.kerogens.kerosene.kerosine.kerplunk.kerygmas.kestrels.ketamine.ketchups.keyboard.keycards.keyholes.keynoted.keynoter.keynotes.keypunch.keysters.keystone.keywords.khaddars.khalifas.khamseen.khamsins.khanates.khazenim.khedival.khedives.khirkahs.kibbling.kibitzed.kibitzer.kibitzes.kiboshed.kiboshes.kickable.kickback.kickball.kickiest.kickoffs.kickshaw.kidnaped.kidnapee.kidnaper.kidskins.kielbasa.kielbasi.kielbasy.kiesters.killable.killdeer.killdees.killicks.killings.killjoys.killocks.kilobars.kilobase.kilobaud.kilobits.kilobyte.kilogram.kilomole.kilorads.kilotons.kilovolt.kilowatt.kiltings.kiltlike.kimchees.kimonoed.kindlers.kindless.kindlier.kindling.kindness.kindreds.kinesics.kinetics.kinetins.kinfolks.kingbird.kingbolt.kingcups.kingdoms.kingfish.kinghood.kingless.kinglets.kinglier.kinglike.kingpins.kingpost.kingship.kingside.kingwood.kinkajou.kinkiest.kinsfolk.kinships.kippered.kipperer.kipskins.kirigami.kirsches.kismetic.kissable.kissably.kistfuls.kitchens.kitelike.kitharas.kitlings.kitsches.kittened.kittlest.kittling.klatches.klaverns.kleagles.klephtic.klezmers.klisters.klondike.kludgier.kludging.klutzier.klystron.knackers.knackery.knacking.knappers.knapping.knapsack.knapweed.kneaders.kneading.kneecaps.kneehole.kneelers.kneeling.kneepads.kneepans.kneesies.kneesock.knelling.knessets.knickers.knighted.knightly.knitters.knitting.knitwear.knobbier.knoblike.knockers.knocking.knockoff.knockout.knollers.knolling.knothole.knotless.knotlike.knotters.knottier.knottily.knotting.knotweed.knouting.knowable.knowings.knubbier.knuckled.knuckler.knuckles.knurlier.knurling.kohlrabi.kokanees.kolbasis.kolbassi.kolhozes.kolinski.kolinsky.kolkhosy.kolkhozy.kolkozes.komatiks.komondor.kookiest.kopiykas.koshered.kotowers.kotowing.koumises.koumyses.koupreys.kowtowed.kowtower.kraaling.kremlins.kreplach.kreplech.kreutzer.kreuzers.krimmers.krullers.krumhorn.krumkake.kryolite.kryolith.kryptons.kumisses.kumquats.kunzites.kurtoses.kurtosis.kuvaszok.kvelling.kvetched.kvetcher.kvetches.kyanised.kyanises.kyanites.kyanized.kyanizes.kyboshed.kyboshes.kymogram.kyphoses.kyphosis.kyphotic.laagered.labarums.labdanum.labelers.labeling.labelled.labeller.labellum.labially.labiated.labiates.lability.laborers.laboring.laborite.laboured.labourer.labrador.labroids.labrusca.laburnum.laceless.lacelike.lacerate.lacertid.lacewing.lacewood.lacework.laciness.lackaday.lackered.lackeyed.laconism.lacquers.lacqueys.lacrimal.lacrosse.lactases.lactated.lactates.lacteals.lacteous.lactones.lactonic.lactoses.lacunars.lacunary.lacunate.lacunose.ladanums.laddered.ladening.ladhoods.ladleful.ladrones.ladybird.ladybugs.ladyfish.ladyhood.ladykins.ladylike.ladylove.ladypalm.ladyship.laetrile.lagering.laggards.laggings.lagnappe.lagoonal.laically.laicised.laicises.laicisms.laicized.laicizes.laitance.lakebeds.lakelike.lakeport.lakeside.laliques.lallands.lallygag.lamasery.lambadas.lambaste.lambasts.lambdoid.lambency.lamberts.lambiest.lambkill.lambkins.lamblike.lambskin.lamellae.lamellar.lamellas.lameness.lamented.lamenter.laminals.laminary.laminate.laminins.laminose.laminous.lamister.lampases.lampions.lampoons.lamppost.lampreys.lampyrid.lamsters.lancelet.lanceted.lanciers.landfall.landfill.landform.landgrab.landings.landlady.landlers.landless.landline.landlord.landmark.landmass.landside.landskip.landslid.landslip.landsman.landsmen.landward.laneways.langlauf.langleys.langrage.langrels.langshan.langsyne.language.languets.languish.languors.laniards.lanitals.lankiest.lankness.lanneret.lanoline.lanolins.lanosity.lantanas.lanterns.lanthorn.lanyards.lapboard.lapelled.lapidary.lapidate.lapidify.lapidist.lapillus.lappered.lappeted.lapsable.lapsible.lapwings.larboard.larcener.lardiest.lardlike.lardoons.largando.largesse.lariated.larkiest.larksome.larkspur.larrigan.larrikin.larruped.larruper.laryngal.larynges.larynxes.lasagnas.lasagnes.lashings.lashkars.lassoers.lassoing.lastborn.lastings.latakias.latchets.latching.latchkey.lateener.lateness.latening.latently.laterals.laterite.laterize.latewood.lathered.latherer.lathiest.lathings.lathwork.latigoes.latillas.latinity.latinize.latitude.latosols.latrines.latterly.latticed.lattices.laudable.laudably.laudanum.laudator.laughers.laughing.laughter.launched.launcher.launches.launders.laureate.laureled.lauwines.lavaboes.lavalava.lavalier.lavalike.lavashes.lavation.lavatory.laveered.lavender.laverock.lavished.lavisher.lavishes.lavishly.lavrocks.lawbooks.lawfully.lawgiver.lawmaker.lawsuits.lawyered.lawyerly.laxation.laxative.laxities.layabout.layaways.layerage.layering.layettes.layovers.laywoman.laywomen.lazarets.laziness.lazulite.lazurite.leachate.leachers.leachier.leaching.leadened.leadenly.leadiest.leadings.leadless.leadoffs.leadsman.leadsmen.leadwork.leadwort.leafages.leafiest.leafless.leaflets.leaflike.leafworm.leaguers.leaguing.leakages.leakiest.leakless.lealties.leanings.leanness.leapfrog.leariest.learners.learning.leasable.leashing.leasings.leathern.leathers.leathery.leavened.leaviest.leavings.lechayim.lechered.lecithin.lecterns.lections.lectured.lecturer.lectures.lecythis.lecythus.ledgiest.leeboard.leeching.leeriest.leewards.leftisms.leftists.leftmost.leftover.leftward.leftwing.legacies.legalese.legalise.legalism.legalist.legality.legalize.legatees.legatine.legating.legation.legators.legendry.legerity.leggiero.leggiest.leggings.leghorns.legrooms.legumins.legworks.lehayims.leisters.leisured.leisures.lekythoi.lekythos.lekythus.lemmings.lemnisci.lemonade.lemonish.lempiras.lemurine.lemuroid.lendable.lengthen.lenience.leniency.lenities.leniting.lenition.lenitive.lensless.lentando.lenticel.lentisks.lentoids.leopards.leotards.lepidote.leporids.leporine.leprotic.leptonic.lesbians.lesioned.lessened.lessoned.letching.letdowns.lethally.lethargy.lettered.letterer.lettuces.leucemia.leucemic.leucines.leucites.leucitic.leucomas.leukemia.leukemic.leukomas.leukoses.leukosis.leukotic.levanted.levanter.levators.leveeing.levelers.leveling.levelled.leveller.leverage.leverets.levering.leviable.levigate.levirate.levitate.levities.levodopa.levogyre.levulins.levulose.lewdness.lewisite.lewisson.lexicons.liaising.liaisons.libation.libeccio.libelant.libelees.libelers.libeling.libelist.libelled.libellee.libeller.libelous.liberals.liberate.librated.librates.libretti.libretto.licenced.licencee.licencer.licences.licensed.licensee.licenser.licenses.licensor.lichened.lichenin.lichting.lickings.lickspit.licorice.liegeman.liegemen.lienable.lientery.lifeboat.lifecare.lifeless.lifelike.lifeline.lifelong.lifespan.lifetime.lifeways.lifework.liftable.liftgate.liftoffs.ligament.ligating.ligation.ligative.ligature.lightens.lighters.lightest.lightful.lighting.lightish.ligneous.lignites.lignitic.ligroine.ligroins.ligulate.liguloid.likeable.likelier.likeness.likening.likewise.lilliput.lilylike.limacine.limacons.limbecks.limbered.limberer.limberly.limbiest.limbless.limbuses.limeades.limekiln.limeless.limerick.liminess.limitary.limiteds.limiters.limiting.limnetic.limonene.limonite.limpidly.limpkins.limpness.limpsier.limuloid.linalols.linalool.linchpin.lindanes.lineable.lineages.lineally.linearly.lineated.linebred.linecuts.lineless.linelike.linesman.linesmen.lingcods.lingered.lingerer.lingerie.lingiest.linguals.linguica.linguine.linguini.linguisa.linguist.lingulae.lingular.liniment.linkable.linkages.linkboys.linksman.linksmen.linkwork.linocuts.linoleum.linotype.linsangs.linseeds.linstock.lintiest.lintless.linurons.lionfish.lionised.lioniser.lionises.lionized.lionizer.lionizes.lionlike.lipocyte.lipoidal.lipomata.liposome.lippened.lippered.lippiest.lippings.lipreads.lipstick.liquated.liquates.liqueurs.liquidly.liquored.liriopes.liripipe.lissomly.listable.listened.listener.listeria.listings.listless.litanies.liteness.literacy.literals.literary.literate.literati.litharge.lithemia.lithemic.lithiums.lithoing.lithosol.litigant.litigate.litmuses.littered.litterer.littlest.littlish.littoral.liturgic.liveable.livelier.livelily.livelong.liveners.liveness.livening.liveried.liveries.livering.liverish.livetrap.lividity.livingly.lixivial.lixivium.loadings.loadstar.loamiest.loamless.loanable.loanings.loanword.loathers.loathful.loathing.lobately.lobation.lobbyers.lobbygow.lobbying.lobbyism.lobbyist.lobefins.lobelias.lobeline.loblolly.lobotomy.lobsters.lobstick.lobulate.lobulose.lobworms.localise.localism.localist.localite.locality.localize.locaters.locating.location.locative.locators.lockable.lockages.lockdown.lockjaws.locknuts.lockouts.lockrams.locksets.lockstep.locofoco.locoisms.locomote.locoweed.loculate.locustae.locustal.locution.locutory.lodestar.lodgings.lodgment.lodicule.loessial.loftiest.loftless.loftlike.logbooks.loggiest.loggings.logician.logicise.logicize.loginess.logistic.logogram.logomach.logotype.logotypy.logrolls.logwoods.loitered.loiterer.lollipop.lolloped.lollygag.lollypop.lomentum.lonelier.lonelily.loneness.lonesome.longboat.longbows.longeing.longeron.longhair.longhand.longhead.longhorn.longings.longjump.longleaf.longline.longneck.longness.longship.longsome.longspur.longtime.longueur.longways.longwise.lookdown.lookisms.lookists.lookouts.looksism.looniest.loophole.loopiest.loosened.loosener.loppered.loppiest.lopsided.lopstick.lordings.lordless.lordlier.lordlike.lordling.lordomas.lordoses.lordosis.lordotic.lordship.lorgnons.loricate.lorikeet.lorimers.loriners.lornness.losingly.lossless.lostness.lothario.lothsome.loudened.loudlier.loudness.loungers.lounging.lousiest.louvered.loveable.loveably.lovebird.lovebugs.lovefest.loveless.lovelier.lovelies.lovelily.lovelock.lovelorn.loveseat.lovesick.lovesome.lovevine.lovingly.lowballs.lowbrows.lowdowns.lowering.lowlands.lowliest.lowlifer.lowlifes.lowlight.lowlives.lowrider.loyalest.loyalism.loyalist.lozenges.lubberly.lubrical.lucarnes.lucences.lucently.lucernes.lucidity.lucifers.luckiest.luckless.luculent.luggages.lugsails.lugworms.lukewarm.lumbagos.lumbered.lumberer.lumberly.luminary.luminism.luminist.luminous.lummoxes.lumpfish.lumpiest.lunacies.lunarian.lunately.lunatics.lunation.lunchbox.luncheon.lunchers.lunching.lunettes.lungfish.lungfuls.lungworm.lungwort.lunkhead.lunulate.lupanars.lupulins.lurchers.lurching.lurdanes.luringly.luscious.lushness.lustered.lustiest.lustrate.lustring.lustrous.lustrums.lutanist.lutecium.lutefisk.lutenist.luteolin.lutetium.lutfisks.lutherns.luthiers.luxating.luxation.luxuries.lycopene.lycopods.lyddites.lymphoid.lymphoma.lynchers.lynching.lynchpin.lyophile.lyrately.lyrebird.lyricise.lyricism.lyricist.lyricize.lyricons.lyriform.lysogens.lysogeny.lysosome.lysozyme.macadams.macaques.macaroni.macaroon.maccabaw.maccaboy.maccoboy.macerate.machetes.machined.machines.machismo.machoism.machrees.machzors.mackerel.mackinaw.mackling.macrames.macrural.macruran.maculate.maculing.macumbas.maddened.madeiras.maderize.madhouse.madonnas.madrasah.madrasas.madrases.madrassa.madrigal.madronas.madrones.madronos.madwoman.madwomen.madworts.madzoons.maenades.maenadic.maestoso.maestros.mafficks.mafiosos.magalogs.magazine.magdalen.magentas.magician.magicked.magister.magmatic.magnates.magnesia.magnesic.magnetic.magneton.magnetos.magnific.magnolia.maharaja.maharani.mahatmas.mahimahi.mahjongg.mahjongs.mahogany.mahonias.mahuangs.mahzorim.maiasaur.maidenly.maidhood.maieutic.mailable.mailbags.mailgram.mailings.mailless.maillots.mailroom.mainland.mainline.mainmast.mainsail.mainstay.maintain.maintops.maiolica.majaguas.majestic.majolica.majoring.majority.makeable.makebate.makefast.makeover.makimono.malaccas.maladies.malaises.malamute.malangas.malapert.malaprop.malarial.malarian.malarias.malarkey.malaroma.maleates.maledict.malemiut.malemute.maleness.maligned.maligner.malignly.malihini.malinger.malisons.mallards.malleoli.mallings.malmiest.malmseys.malodors.malposed.maltases.maltiest.maltoses.maltreat.maltster.malvasia.mamaliga.mamboing.mameluke.mammatus.mammered.mammilla.mammitis.mammocks.mammoths.manacled.manacles.managers.managing.manakins.manatees.manatoid.manchets.manciple.mandalas.mandalic.mandamus.mandarin.mandated.mandates.mandator.mandible.mandioca.mandolas.mandolin.mandrake.mandrels.mandrill.mandrils.maneless.maneuver.manfully.mangabey.manganic.manganin.mangiest.manglers.mangling.mangolds.mangonel.mangrove.manholes.manhoods.manhunts.maniacal.manicure.manifest.manifold.manihots.manikins.manillas.manilles.maniocas.maniples.manitous.manliest.mannered.mannerly.mannikin.mannites.mannitic.mannitol.mannoses.manorial.manpower.manropes.mansards.mansions.manteaus.manteaux.mantelet.mantilla.mantises.mantissa.mantlets.mantling.mantrams.mantraps.manually.manubria.manumits.manurers.manurial.manuring.manwards.manyfold.mapmaker.mappable.mappings.maquette.maquilas.marabous.marabout.marantas.marascas.marasmic.marasmus.marathon.marauded.marauder.maravedi.marblers.marblier.marbling.marcatos.marchers.marchesa.marchese.marchesi.marching.margaric.margarin.margents.marginal.margined.margrave.mariachi.marigold.marimbas.marinade.marinara.marinate.mariners.mariposa.marishes.maritime.marjoram.markdown.markedly.marketed.marketer.markhoor.markhors.markings.marksman.marksmen.marliest.marlines.marlings.marlites.marlitic.marmites.marmoset.marocain.marooned.marplots.marquees.marquess.marquise.marranos.marriage.marrieds.marriers.marrowed.marrying.marsalas.marshall.marshals.marshier.marsupia.martagon.martello.martians.martinet.martinis.martlets.martyred.martyrly.marveled.maryjane.marzipan.mascaras.mashgiah.maskable.maskings.masklike.masoning.masonite.masquers.massacre.massaged.massager.massages.masscult.massedly.masseter.masseurs.masseuse.massicot.massiest.massless.mastabah.mastabas.mastered.masterly.masthead.mastiche.mastiffs.mastitic.mastitis.mastixes.mastless.mastlike.mastodon.mastoids.masurium.matadors.matchbox.matchers.matching.matchups.mateless.matelote.matelots.material.materiel.maternal.mateship.matildas.matinees.matiness.matrices.matrixes.matronal.matronly.mattedly.mattered.mattings.mattocks.mattoids.mattrass.mattress.maturate.maturely.maturers.maturest.maturing.maturity.matzoons.maumetry.maunders.maundies.mausolea.maverick.maxicoat.maxillae.maxillas.maximals.maximins.maximise.maximite.maximize.maximums.maxwells.mayapple.maybirds.mayflies.mayoress.maypoles.mayweeds.mazaedia.mazelike.mazeltov.maziness.mazourka.mazurkas.mazzards.mbaqanga.meagerly.meagrely.mealiest.mealless.mealtime.mealworm.mealybug.meanders.meanings.meanness.meantime.measlier.measured.measurer.measures.meatball.meathead.meatiest.meatless.meatloaf.meatuses.mechanic.mechitza.meconium.medaling.medalist.medalled.medallic.meddlers.meddling.medevacs.medflies.medially.medianly.mediants.mediated.mediates.mediator.medicaid.medicals.medicant.medicare.medicate.medicide.medicine.medieval.medigaps.mediocre.meditate.medivacs.medullae.medullar.medullas.medusans.medusoid.meekness.meerkats.meetings.meetness.megabars.megabits.megabuck.megabyte.megacity.megadeal.megadose.megadyne.megaflop.megahits.megalith.megalops.megaplex.megapode.megapods.megasses.megastar.megatons.megavolt.megawatt.megillah.megillas.megilphs.meisters.melamdim.melamine.melanges.melanian.melanics.melanins.melanism.melanist.melanite.melanize.melanoid.melanoma.melanous.melilite.melilots.melinite.melismas.mellific.mellowed.mellower.mellowly.melodeon.melodias.melodica.melodies.melodise.melodist.melodize.meltable.meltages.meltdown.membered.membrane.mementos.memetics.memorial.memories.memorise.memorize.memsahib.menacers.menacing.menarche.menazons.mendable.mendigos.mendings.menfolks.menhaden.menially.meninges.meniscal.meniscus.menology.menorahs.menschen.mensches.menseful.menstrua.mensural.menswear.mentally.menthene.menthols.mentions.mentored.mephitic.mephitis.mercapto.merchant.merciful.mercuric.merengue.mergence.meridian.meringue.meristem.meristic.meriting.mermaids.meropias.merriest.mescluns.mesdames.meseemed.meshiest.meshugah.meshugga.meshugge.meshwork.mesially.mesmeric.mesnalty.mesocarp.mesoderm.mesoglea.mesomere.mesophyl.mesosome.mesotron.mesozoan.mesozoic.mesquite.mesquits.messaged.messages.messiahs.messiest.messmate.messuage.mestesos.mestinos.mestizas.mestizos.metaling.metalise.metalist.metalize.metalled.metallic.metamere.metamers.metaphor.metatags.metazoal.metazoan.metazoic.metazoon.meteoric.meterage.metering.methadon.methanes.methanol.methinks.methodic.methoxyl.methylal.methylic.meticais.meticals.metisses.metonyms.metonymy.metopons.metrazol.metrical.metrists.metritis.meuniere.mezereon.mezereum.mezquite.mezquits.mezuzahs.mezuzoth.miaouing.miaowing.miasmata.miauling.micawber.micellae.micellar.micelles.micklest.microbar.microbes.microbic.microbus.microcap.microdot.microhms.microlux.micromho.micrurgy.midbrain.midcults.middlers.middling.midfield.midirons.midlands.midlifer.midlines.midlists.midlives.midmonth.midmosts.midnight.midnoons.midpoint.midrange.midriffs.midships.midsized.midsoles.midspace.midstory.midterms.midtowns.midwatch.midweeks.midwifed.midwifes.midwived.midwives.midyears.miffiest.mightier.mightily.mignonne.migraine.migrants.migrated.migrates.migrator.mijnheer.miladies.mildened.mildewed.mildness.mileages.milepost.milesian.milesimo.milfoils.miliaria.militant.military.militate.militias.milkfish.milkiest.milkless.milkmaid.milkshed.milksops.milkweed.milkwood.milkwort.millable.millages.millcake.milldams.milleped.milliard.milliare.milliary.millibar.millieme.milliers.milligal.millilux.millimes.millimho.milliner.millines.millings.milliohm.millions.milliped.millirem.millpond.millrace.millruns.millwork.miltiest.mimeoing.mimetite.mimicked.mimicker.minacity.minarets.minatory.minciest.mindless.mindsets.mineable.minerals.mingiest.minglers.mingling.minibars.minibike.minicabs.minicamp.minicams.minicars.minidisc.minified.minifies.minikins.minilabs.minimals.minimill.minimise.minimize.minimums.minipark.minipill.minished.minishes.miniskis.minister.ministry.minivans.minivers.minorcas.minoring.minority.minsters.minstrel.mintages.mintiest.minuends.minutely.minutest.minutiae.minutial.minuting.minyanim.miquelet.miracles.miradors.mirepoix.miriness.mirkiest.mirliton.mirrored.mirthful.misacted.misadapt.misadded.misagent.misaimed.misalign.misallot.misalter.misandry.misapply.misassay.misatone.misavers.misaward.misbegan.misbegin.misbegot.misbegun.misbills.misbinds.misbound.misbrand.misbuild.misbuilt.miscalls.miscarry.miscasts.mischief.mischose.miscible.miscited.miscites.misclaim.misclass.miscoded.miscodes.miscoins.miscolor.miscooks.miscount.miscuing.misdated.misdates.misdeals.misdealt.misdeeds.misdeems.misdials.misdoers.misdoing.misdoubt.misdrawn.misdraws.misdrive.misdrove.miseases.miseaten.misedits.misenrol.misenter.misentry.miserere.miseries.misevent.misfaith.misfeeds.misfield.misfiled.misfiles.misfired.misfires.misfocus.misforms.misframe.misgauge.misgiven.misgives.misgrade.misgraft.misgrown.misgrows.misguess.misguide.misheard.mishears.mishmash.mishmosh.misinfer.misinter.misjoins.misjudge.miskeeps.miskicks.misknown.misknows.mislabel.mislabor.mislayer.misleads.mislearn.mislight.misliked.misliker.mislikes.mislived.mislives.mislodge.mislying.mismakes.mismarks.mismatch.mismated.mismates.mismeets.mismoved.mismoves.misnamed.misnames.misnomer.misogamy.misogyny.misology.misorder.mispaged.mispages.mispaint.misparse.misparts.mispatch.misplace.misplans.misplant.misplays.misplead.mispoint.mispoise.misprice.misprint.misprize.misquote.misraise.misrated.misrates.misreads.misrefer.misroute.misruled.misrules.missable.misseats.missends.missense.misshape.missiles.missilry.missions.missises.missives.missorts.missound.missouts.misspace.misspeak.misspell.misspelt.misspend.misspent.misspoke.misstamp.misstart.misstate.missteer.missteps.misstops.misstyle.missuits.missuses.mistaken.mistaker.mistakes.mistbows.misteach.mistends.misterms.misthink.misthrew.misthrow.mistiest.mistimed.mistimes.mistitle.mistouch.mistrace.mistrain.mistrals.mistreat.mistress.mistrial.mistrust.mistruth.mistryst.mistuned.mistunes.mistutor.mistyped.mistypes.misunion.misusage.misusers.misusing.misvalue.miswords.miswrite.miswrote.misyoked.misyokes.miterers.mitering.miticide.mitigate.mitogens.mitsvahs.mitsvoth.mittened.mittimus.mitzvahs.mitzvoth.mixology.mixtures.mizzling.mnemonic.moatlike.mobbisms.mobilise.mobility.mobilize.mobocrat.mobsters.moccasin.mochilas.mockable.mocktail.modality.modelers.modeling.modelist.modelled.modeller.modeming.moderate.moderato.moderner.modernes.modernly.modester.modestly.modicums.modified.modifier.modifies.modiolus.modishly.modistes.modulars.modulate.mofettes.moffette.moidores.moieties.moistens.moistest.moistful.moisture.mojarras.molality.molarity.molasses.moldable.moldered.moldiest.moldings.moldwarp.molecule.molehill.moleskin.molested.molester.mollusca.molluscs.mollusks.moltenly.molybdic.momently.momentos.momentum.monachal.monacids.monadism.monandry.monarchs.monarchy.monardas.monastic.monaural.monaxial.monaxons.monazite.monecian.monellin.monerans.monetary.monetise.monetize.moneybag.moneyers.moneyman.moneymen.mongeese.mongered.mongoose.mongrels.monicker.monikers.monished.monishes.monistic.monition.monitive.monitors.monitory.monkeyed.monkfish.monkhood.monoacid.monocarp.monocled.monocles.monocots.monocrat.monocyte.monodies.monodist.monofils.monofuel.monogamy.monogeny.monogerm.monoglot.monogram.monogyny.monohull.monokine.monolith.monologs.monology.monomers.monomial.monopode.monopods.monopody.monopole.monopoly.monorail.monosome.monosomy.monotint.monotone.monotony.monotype.monoxide.monsieur.monsoons.monstera.monsters.montaged.montages.montanes.monteith.monteros.monument.monurons.moochers.mooching.moodiest.moonbeam.moonbows.mooncalf.moondust.mooneyes.moonfish.mooniest.moonless.moonlets.moonlike.moonport.moonrise.moonroof.moonsail.moonseed.moonsets.moonshot.moonwalk.moonward.moonwort.moorages.moorcock.moorfowl.moorhens.mooriest.moorings.moorland.moorwort.mootness.mopboard.moperies.mopiness.mopingly.mopishly.moquette.morainal.moraines.morainic.moralise.moralism.moralist.morality.moralize.morasses.moratory.morbidly.morbific.morbilli.morceaux.mordancy.mordants.mordents.morelles.morellos.moreness.moreover.moresque.moribund.mornings.moroccos.moronism.moronity.morosely.morosity.morpheme.morphias.morphine.morphing.morphins.morrions.morrises.morseled.mortally.mortared.mortgage.morticed.mortices.mortised.mortiser.mortises.mortmain.mortuary.mosasaur.moschate.moseying.moshavim.moshings.mosquito.mossback.mossiest.mosslike.mostests.mothball.mothered.motherly.mothiest.mothlike.motility.motional.motioned.motioner.motivate.motiving.motivity.motleyer.motliest.motorbus.motorcar.motordom.motoring.motorise.motorist.motorize.motorman.motormen.motorway.mottlers.mottling.mouching.mouchoir.moufflon.mouflons.moulages.moulders.mouldier.moulding.moulters.moulting.mounding.mountain.mounters.mounting.mourners.mournful.mourning.mousakas.mousepad.mousiest.mousings.moussaka.moussing.mouthers.mouthful.mouthier.mouthily.mouthing.movables.moveable.moveably.moveless.movement.moviedom.movieola.movingly.moviolas.mozettas.mozzetta.mozzette.mridanga.muchacho.muchness.mucidity.mucilage.mucinoid.mucinous.muckiest.muckluck.muckrake.muckworm.mucoidal.mucosity.mucrones.muddiest.muddlers.muddling.muddying.mudflaps.mudflats.mudflows.mudguard.mudholes.mudlarks.mudpacks.mudpuppy.mudrocks.mudrooms.mudsills.mudslide.mudstone.mueddins.muenster.muezzins.mufflers.muffling.muggiest.muggings.mugworts.mugwumps.mulattos.mulberry.mulching.mulcting.muleteer.mulishly.mulleins.mulligan.mullions.mullites.mullocks.mullocky.multiage.multicar.multiday.multifid.multijet.multiped.multiple.multiply.multiton.multiuse.multures.mumblers.mumbling.mummying.munchers.munchies.munching.munchkin.mundungo.mungoose.muniment.munition.munnions.munsters.muntings.muntjacs.muntjaks.muoniums.muraenid.muralist.muralled.murdered.murderee.murderer.muriated.muriates.muricate.murkiest.murmured.murmurer.murphies.murrains.murrelet.murrhine.murthers.muscadel.muscadet.muscatel.muscling.muscular.musettes.mushiest.mushroom.musicale.musicals.musician.musicked.musingly.musketry.muskiest.muskoxen.muskrats.muskroot.muspikes.musquash.mussiest.mustache.mustangs.mustards.mustardy.mustelid.mustered.mustiest.mutagens.mutating.mutation.mutative.mutchkin.muteness.muticous.mutilate.mutineer.mutinied.mutinies.mutining.mutinous.muttered.mutterer.mutually.muzziest.muzzlers.muzzling.myalgias.mycelial.mycelian.mycelium.myceloid.mycetoma.mycology.myelines.myelinic.myelitis.myelomas.mylonite.mynheers.myoblast.myogenic.myograph.myologic.myopathy.myoscope.myositis.myosotes.myosotis.myotomes.myotonia.myotonic.myriapod.myriopod.myrmidon.mystagog.mystical.mysticly.mystique.mythical.mythiest.myxameba.myxedema.myxocyte.myxomata.nabobery.nabobess.nabobish.nabobism.nacelles.nacreous.naething.naggiest.nailfold.nailhead.nailsets.nainsook.naivetes.nakedest.naloxone.nameable.nameless.namesake.nametags.nandinas.nankeens.nannyish.nanogram.nanotech.nanotube.nanowatt.napalmed.naperies.naphthas.naphthol.naphthyl.naphtols.napiform.napoleon.nappiest.naproxen.narceine.narceins.narcisms.narcissi.narcists.narcomas.narcoses.narcosis.narcotic.narghile.nargileh.nargiles.narrated.narrater.narrates.narrator.narrowed.narrower.narrowly.narwhale.narwhals.nasalise.nasalism.nasality.nasalize.nascence.nascency.nastiest.natality.natantly.natation.natatory.nathless.national.natively.nativism.nativist.nativity.natriums.nattered.nattiest.naturals.naturism.naturist.naumachy.nauplial.nauplius.nauseant.nauseate.nauseous.nautches.nautical.nautilus.navettes.navicert.navigate.naysayer.nazified.nazifies.nearlier.nearness.nearside.neatened.neatherd.neatness.neatniks.nebbishy.nebulise.nebulize.nebulose.nebulous.neckband.neckings.necklace.neckless.necklike.neckline.neckties.neckwear.necropsy.necrosed.necroses.necrosis.necrotic.needfuls.neediest.needlers.needless.needling.negaters.negating.negation.negative.negatons.negators.negatron.neglects.negligee.negliges.negroids.negronis.neighbor.neighing.nektonic.nelumbos.nematode.neoliths.neologic.neomorph.neomycin.neonatal.neonates.neophyte.neoplasm.neoprene.neotenic.neoteric.neotypes.nepenthe.nephrism.nephrite.nephrons.nepotism.nepotist.nerdiest.nereides.nerviest.nervines.nervings.nervules.nervures.nescient.nestable.nestlers.nestlike.nestling.netizens.netsukes.nettable.nettiest.nettings.nettlers.nettlier.nettling.networks.neumatic.neurally.neuraxon.neurines.neuritic.neuritis.neuromas.neuronal.neurones.neuronic.neurosal.neuroses.neurosis.neurotic.neurulae.neurular.neurulas.neustons.neutered.neutrals.neutrino.neutrons.newborns.newcomer.newfound.newlywed.newsbeat.newsboys.newscast.newsdesk.newsgirl.newshawk.newsiest.newsless.newspeak.newsreel.newsroom.newswire.newwaver.nextdoor.ngultrum.nibblers.nibbling.niblicks.niceness.niceties.nickeled.nickelic.nickered.nickling.nicknack.nickname.nicotine.nicotins.nictated.nictates.nidating.nidation.nidering.nidified.nidifies.niellist.nielloed.niffered.niftiest.nigellas.niggards.nigglers.nigglier.niggling.nighness.nightcap.nighties.nightjar.nigrosin.nihilism.nihilist.nihility.nilghais.nilghaus.nimblest.nimbused.nimbuses.ninebark.ninefold.ninepins.nineteen.nineties.ninnyish.niobates.niobites.niobiums.nippiest.nirvanas.nirvanic.nitchies.niteries.nitinols.nitpicks.nitpicky.nitrated.nitrates.nitrator.nitrided.nitrides.nitriles.nitrites.nitrogen.nitrolic.nitrosyl.nittiest.nizamate.nobbiest.nobblers.nobbling.nobelium.nobility.nobleman.noblemen.noblesse.nobodies.noctuids.noctules.noctuoid.nocturne.nocturns.nodality.noddling.nodosity.nodulose.nodulous.noesises.noggings.noisette.noisiest.nomadism.nomarchs.nomarchy.nombrils.nominals.nominate.nominees.nomistic.nomogram.nomology.nonacids.nonactor.nonadult.nonagons.nonbanks.nonbasic.nonbeing.nonblack.nonbooks.nonbrand.nonclass.noncling.noncolas.noncolor.noncrime.nondairy.nondance.nonelect.nonelite.nonempty.nonentry.nonequal.nonesuch.nonevent.nonfacts.nonfatal.nonfatty.nonfinal.nonfluid.nonfocal.nonglare.nongreen.nonguest.nonguilt.nonhardy.nonhuman.nonideal.nonimage.noninert.nonionic.nonissue.nonjuror.nonlabor.nonleafy.nonlegal.nonlevel.nonlives.nonlocal.nonloyal.nonlyric.nonmajor.nonmetal.nonmetro.nonmodal.nonmoney.nonmoral.nonmusic.nonnasal.nonnaval.nonnoble.nonnovel.nonobese.nonohmic.nonowner.nonpagan.nonpapal.nonparty.nonpasts.nonplays.nonpoint.nonpolar.nonprint.nonquota.nonrated.nonrigid.nonrival.nonroyal.nonrural.nonsense.nonskeds.nonskier.nonsolar.nonsolid.nonstick.nonstops.nonstory.nonstyle.nonsugar.nonsuits.nontaxes.nontidal.nontitle.nontonal.nontonic.nontoxic.nontrump.nontruth.nonunion.nonuples.nonurban.nonusers.nonusing.nonvalid.nonviral.nonvital.nonvocal.nonvoter.nonwhite.nonwoody.nonwords.nonwoven.noodging.noodling.nooklike.noondays.noonings.noontide.noontime.nopalito.norlands.normalcy.normally.normande.normless.northern.northers.northing.nosebags.noseband.nosedive.nosedove.nosegays.noseless.noselike.nosiness.nosology.nostrils.nostrums.notables.notarial.notaries.notarize.notating.notation.notchers.notching.notebook.notecard.notecase.noteless.notepads.nothings.noticers.noticing.notified.notifier.notifies.notional.notornis.notturni.notturno.noumenal.noumenon.nounally.nounless.nouvelle.novalike.novation.novelise.novelist.novelize.novellas.novercal.nowadays.nowheres.nubbiest.nubblier.nubility.nubilose.nubilous.nucellar.nucellus.nuclease.nucleate.nucleins.nucleoid.nucleole.nucleoli.nucleons.nuclides.nuclidic.nudeness.nudicaul.nudities.nudnicks.nudzhing.nugatory.nuisance.numbered.numberer.numbfish.numbness.numchuck.numeracy.numerals.numerary.numerate.numerics.numerous.numinous.nummular.numskull.nunataks.nunchaku.nuptials.nursings.nursling.nurtural.nurtured.nurturer.nurtures.nutating.nutation.nutbrown.nutcases.nutgalls.nutgrass.nuthatch.nuthouse.nutmeats.nutpicks.nutrient.nutsedge.nutshell.nutsiest.nuttiest.nuttings.nutwoods.nuzzlers.nuzzling.nylghais.nylghaus.nymphean.nymphets.nystatin.oafishly.oarlocks.oatcakes.oatmeals.obduracy.obdurate.obeahism.obedient.obeisant.obelised.obelises.obelisks.obelisms.obelized.obelizes.obeyable.obituary.objected.objector.oblately.oblation.oblatory.obligate.obligati.obligato.obligees.obligers.obliging.obligors.obliqued.obliques.oblivion.oblongly.obscener.obscured.obscurer.obscures.observed.observer.observes.obsessed.obsesses.obsessor.obsidian.obsolete.obstacle.obstruct.obtained.obtainer.obtected.obtested.obtruded.obtruder.obtrudes.obtunded.obturate.obtusely.obtusest.obtusity.obverses.obverted.obviable.obviated.obviates.obviator.obvolute.ocarinas.occasion.occident.occipita.occiputs.occluded.occludes.occlusal.occulted.occulter.occultly.occupant.occupied.occupier.occupies.occurred.oceanaut.ocellate.ochering.ocherous.ochreous.ocotillo.octagons.octangle.octanols.octantal.octarchy.octettes.octonary.octopods.octoroon.octupled.octuples.octuplet.octuplex.ocularly.oculists.odalisks.oddballs.oddities.oddments.odiously.odograph.odometer.odometry.odonates.odontoid.odorants.odorized.odorizes.odorless.odourful.odysseys.oecology.oedemata.oedipean.oeillade.oenology.oenomels.oersteds.oestrins.oestriol.oestrone.oestrous.oestrums.offbeats.offcasts.offences.offended.offender.offenses.offerers.offering.offerors.officers.official.offishly.offloads.offprint.offramps.offshoot.offshore.offsides.offstage.offtrack.oftenest.ofttimes.oghamist.ogreisms.ogresses.ogrishly.ohmmeter.oilbirds.oilcamps.oilcloth.oilholes.oiliness.oilpaper.oilproof.oilseeds.oilskins.oilstone.oiltight.oinology.oinomels.ointment.oiticica.okeydoke.oldsquaw.oldsters.oldstyle.oldwives.oleander.oleaster.olefines.olefinic.olestras.olibanum.olicooks.oligarch.oligomer.oliguria.olivines.olivinic.ologists.olorosos.olympiad.omelette.omentums.omicrons.omikrons.omission.omissive.omitters.omitting.omniarch.omniform.omnimode.omnivora.omnivore.omophagy.omphalos.onanisms.onanists.oncidium.oncogene.oncology.oncoming.ondogram.oneriest.onloaded.onlooker.onrushes.onscreen.onstream.ontogeny.ontology.oogamete.oogamies.oogamous.oogenies.oogonial.oogonium.oolachan.oologies.oologist.oomiacks.oompahed.oophytes.oophytic.oosperms.oosphere.oospores.oosporic.oothecae.oothecal.ooziness.opalesce.opalines.opaquely.opaquest.opaquing.openable.opencast.openings.openness.openwork.operable.operably.operands.operants.operated.operates.operatic.operator.opercele.opercula.opercule.operetta.ophidian.opiating.opinions.opiumism.opossums.oppidans.oppilant.oppilate.opponent.opposers.opposing.opposite.oppugned.oppugner.opsonify.opsonins.opsonize.optative.optician.opticist.optimise.optimism.optimist.optimize.optimums.optional.optioned.optionee.opulence.opulency.opuntias.opuscula.opuscule.oquassas.oracular.oralisms.oralists.orangery.orangier.orangish.orations.oratorio.oratress.orbitals.orbiters.orbiting.orchards.orchises.orchitic.orchitis.orcinols.ordained.ordainer.orderers.ordering.ordinals.ordinand.ordinary.ordinate.ordnance.ordurous.orective.oreganos.oreodont.organdie.organics.organise.organism.organist.organize.organons.organums.organzas.orgasmed.orgasmic.orgastic.orgiasts.orgulous.oribatid.oriental.oriented.orienter.orifices.origamis.origanum.original.orinasal.ornament.ornately.ornerier.ornithes.ornithic.orogenic.orometer.orphaned.orphical.orphisms.orphreys.orpiment.orreries.orthicon.orthodox.orthoepy.orthoses.orthosis.orthotic.ortolans.oscinine.oscitant.osculant.osculate.osmosing.osmundas.osnaburg.ossature.ossetras.ossicles.ossified.ossifier.ossifies.osteitic.osteitis.osteoids.osteomas.osteoses.osteosis.ostinati.ostinato.ostiolar.ostioles.ostmarks.ostomate.ostomies.ostracod.ostracon.ostrakon.otalgias.otalgies.otiosely.otiosity.otitides.otitises.otocysts.otoliths.otoscope.otoscopy.ototoxic.ottomans.ouabains.oughting.ouguiyas.ouistiti.outacted.outadded.outargue.outasked.outbacks.outbaked.outbakes.outbarks.outbawls.outbeams.outbitch.outblaze.outbleat.outbless.outbloom.outbluff.outblush.outboard.outboast.outbound.outboxed.outboxes.outbrags.outbrave.outbrawl.outbreak.outbreed.outbribe.outbuild.outbuilt.outbulge.outbulks.outbully.outburns.outburnt.outburst.outcalls.outcaper.outcaste.outcasts.outcatch.outcavil.outcharm.outcheat.outchide.outclass.outclimb.outclomb.outcoach.outcomes.outcooks.outcount.outcrawl.outcried.outcries.outcrops.outcross.outcrowd.outcrows.outcurse.outcurve.outdance.outdared.outdares.outdated.outdates.outdodge.outdoers.outdoing.outdoors.outdrags.outdrank.outdrawn.outdraws.outdream.outdress.outdrink.outdrive.outdrops.outdrove.outdrunk.outduels.outearns.outeaten.outfable.outfaced.outfaces.outfalls.outfasts.outfawns.outfeast.outfeels.outfence.outfield.outfight.outfinds.outfired.outfires.outflank.outflies.outfloat.outflown.outflows.outfools.outfoots.outfound.outfoxed.outfoxes.outfrown.outgains.outgazed.outgazes.outgiven.outgives.outglare.outgleam.outglows.outgnawn.outgnaws.outgoing.outgrins.outgross.outgroup.outgrown.outgrows.outguess.outguide.outhauls.outheard.outhears.outhomer.outhouse.outhowls.outhumor.outhunts.outjumps.outkeeps.outkicks.outkills.outlands.outlasts.outlaugh.outlawed.outlawry.outleads.outleaps.outleapt.outlearn.outliers.outlined.outliner.outlines.outlived.outliver.outlives.outlooks.outloved.outloves.outlying.outmarch.outmatch.outmoded.outmodes.outmoved.outmoves.outpaced.outpaces.outpaint.outpitch.outplace.outplans.outplays.outplods.outplots.outpoint.outpolls.outports.outposts.outpours.outpower.outprays.outpreen.outpress.outprice.outpulls.outpunch.outpupil.outquote.outraced.outraces.outraged.outrages.outraise.outrance.outrange.outranks.outrated.outrates.outraved.outraves.outreach.outreads.outrider.outrides.outright.outrings.outrival.outroars.outrocks.outrolls.outroots.outrowed.outsails.outsavor.outscold.outscoop.outscore.outscorn.outsells.outserts.outserve.outshame.outshine.outshone.outshoot.outshout.outsider.outsides.outsight.outsings.outsized.outsizes.outskate.outskirt.outsleep.outslept.outslick.outsmart.outsmell.outsmelt.outsmile.outsmoke.outsnore.outsoars.outsoles.outspans.outspeak.outspeed.outspell.outspelt.outspend.outspent.outspoke.outstand.outstare.outstart.outstate.outstays.outsteer.outstood.outstrip.outstudy.outstunt.outsulks.outsware.outswear.outsweep.outswept.outswims.outswing.outswore.outsworn.outswung.outtakes.outtalks.outtasks.outtells.outthank.outthink.outthrew.outthrob.outthrow.outtower.outtrade.outtrick.outtrots.outtrump.outturns.outvalue.outvaunt.outvoice.outvoted.outvotes.outvying.outwaits.outwalks.outwards.outwaste.outwatch.outwears.outweary.outweeps.outweigh.outwhirl.outwiled.outwiles.outwills.outwinds.outworks.outwrite.outwrote.outyells.outyelps.outyield.ovalness.ovariole.ovaritis.ovations.ovenbird.ovenlike.ovenware.overable.overacts.overaged.overages.overalls.overarch.overarms.overawed.overawes.overbake.overbear.overbeat.overbets.overbids.overbill.overbite.overblew.overblow.overboil.overbold.overbook.overbore.overborn.overbred.overburn.overbusy.overbuys.overcall.overcame.overcast.overcoat.overcold.overcome.overcook.overcool.overcram.overcrop.overcure.overcuts.overdare.overdear.overdeck.overdoer.overdoes.overdogs.overdone.overdose.overdraw.overdrew.overdubs.overdyed.overdyer.overdyes.overeasy.overeats.overedit.overfast.overfear.overfeed.overfill.overfish.overflew.overflow.overfond.overfoul.overfree.overfull.overfund.overgild.overgilt.overgird.overgirt.overglad.overgoad.overgrew.overgrow.overhand.overhang.overhard.overhate.overhaul.overhead.overheap.overhear.overheat.overheld.overhigh.overhold.overholy.overhope.overhung.overhunt.overhype.overidle.overjoys.overjust.overkeen.overkill.overkind.overlade.overlaid.overlain.overland.overlaps.overlate.overlays.overleaf.overleap.overlend.overlent.overlets.overlewd.overlies.overlive.overload.overlong.overlook.overlord.overloud.overlove.overlush.overmans.overmany.overmeek.overmelt.overmild.overmilk.overmine.overmuch.overnear.overneat.overnice.overpack.overpaid.overpass.overpast.overpays.overpert.overplan.overplay.overplot.overplus.overpump.overrank.overrash.overrate.overrich.override.overrife.overripe.overrode.overrude.overruff.overrule.overruns.oversale.oversalt.oversave.overseas.overseed.overseen.overseer.oversees.oversell.oversets.oversewn.oversews.overshoe.overshot.oversick.overside.oversize.overslip.overslow.oversoak.oversoft.oversold.oversoon.oversoul.overspin.overstay.overstep.overstir.oversuds.oversups.oversure.overtake.overtalk.overtame.overtart.overtask.overthin.overtime.overtips.overtire.overtoil.overtone.overtook.overtops.overtrim.overture.overturn.overurge.overused.overuses.overview.overvote.overwarm.overwary.overweak.overwear.overween.overwets.overwide.overwily.overwind.overwise.overword.overwore.overwork.overworn.overzeal.ovicidal.ovicides.oviducal.oviducts.oviposit.ovoidals.ovulated.ovulates.owlishly.oxalated.oxalates.oxalises.oxazepam.oxazines.oxbloods.oxhearts.oxidable.oxidants.oxidases.oxidasic.oxidated.oxidates.oxidised.oxidiser.oxidises.oxidized.oxidizer.oxidizes.oximeter.oximetry.oxpecker.oxtongue.oxyacids.oxygenic.oxymoron.oxyphile.oxyphils.oxysalts.oxysomes.oxytocic.oxytocin.oxytones.oystered.oysterer.ozonated.ozonates.ozonides.ozonised.ozonises.ozonized.ozonizer.ozonizes.pabulums.pachadom.pachalic.pachinko.pachisis.pachouli.pachucos.pacified.pacifier.pacifies.pacifism.pacifist.packable.packaged.packager.packages.packeted.packings.packness.packsack.pactions.paddings.paddlers.paddling.paddocks.padishah.padlocks.padrones.padshahs.paduasoy.paeanism.paesanos.pagandom.paganise.paganish.paganism.paganist.paganize.pageants.pageboys.pagefuls.paginate.pagurian.pagurids.pahlavis.pahoehoe.pailfuls.paillard.pailsful.painches.painless.painters.paintier.painting.pairings.paisanas.paisanos.paisleys.pajamaed.palabras.paladins.palatals.palatial.palatine.palavers.palazzos.paleface.paleness.paleosol.palestra.paletots.palettes.paleways.palewise.palfreys.palikars.palimony.palinode.palisade.palladia.palladic.palleted.pallette.palliate.pallidly.palliest.palliums.palmated.palmette.palmetto.palmfuls.palmiest.palmists.palmitin.palmlike.palmtops.palmyras.palomino.palookas.palpable.palpably.palpated.palpates.palpator.palpebra.palships.palsying.paltered.palterer.paltrier.paltrily.paludism.pampeans.pampered.pamperer.pamperos.pamphlet.panacean.panaceas.panaches.panatela.panbroil.pancaked.pancakes.pancetta.pancreas.pandanus.pandects.pandemic.pandered.panderer.pandoors.pandoras.pandores.pandours.pandowdy.panduras.pandying.paneless.paneling.panelist.panelled.panetela.panfried.panfries.pangenes.pangolin.pangrams.panhuman.panicked.panicled.panicles.panicums.panmixes.panmixia.panmixis.panniers.pannikin.panochas.panoches.panoptic.panorama.panpipes.pansophy.pantalet.pantheon.panthers.pantiled.pantiles.pantofle.pantoums.pantries.pantsuit.papacies.papadams.papadoms.papadums.paperboy.paperers.papering.paphians.papillae.papillar.papillon.papistic.papistry.papooses.pappadam.pappiest.pappoose.papricas.paprikas.papulose.papyrian.papyrine.parables.parabola.parachor.paraders.paradigm.parading.paradise.paradors.paradrop.paraffin.parafoil.paraform.paragoge.paragons.parakeet.parakite.parallax.parallel.paralyse.paralyze.parament.paramour.paranoea.paranoia.paranoic.paranoid.parapets.paraquat.paraquet.parasail.parasang.parashah.parashot.parasite.parasols.paravane.parawing.parazoan.parbaked.parbakes.parboils.parceled.parcener.parchesi.parching.parchisi.parclose.pardners.pardoned.pardoner.parecism.pareiras.parental.parented.parergon.paretics.parfaits.parflesh.parfocal.pargeted.pargings.parhelia.parhelic.parietal.parietes.parishes.parities.parkades.parkette.parkings.parkland.parklike.parkways.parlance.parlando.parlante.parlayed.parleyed.parleyer.parlours.parmesan.parodied.parodies.parodist.parolees.paroling.paronyms.paroquet.parosmia.parotids.parotoid.paroxysm.parquets.parridge.parriers.parritch.parroket.parroted.parroter.parrying.parsable.parsleys.parslied.parsnips.parsonic.partaken.partaker.partakes.parterre.partials.partible.particle.partiers.partings.partisan.partitas.partizan.partlets.partners.partyers.partying.parvenue.parvenus.parvises.parvolin.paschals.pashadom.pashalic.pashalik.pashmina.pasquils.passable.passably.passades.passados.passaged.passages.passband.passbook.passerby.passible.passings.passions.passives.passkeys.passless.passover.passport.passuses.password.pasterns.pasteups.pasticci.pastiche.pastiest.pastille.pastimes.pastinas.pastises.pastitso.pastless.pastness.pastoral.pastored.pastorly.pastrami.pastries.pastromi.pastural.pastured.pasturer.pastures.patagial.patagium.patamars.patchers.patchier.patchily.patching.patellae.patellar.patellas.patented.patentee.patently.patentor.paternal.pathetic.pathless.pathogen.pathoses.pathways.patience.patients.patinaed.patinate.patining.patinize.patootie.patriate.patriots.patronal.patronly.patroons.pattamar.pattened.pattered.patterer.patterns.pattypan.patulent.patulous.pauldron.paunched.paunches.paupered.pavement.pavilion.pavillon.paviours.pavisers.pavisses.pavlovas.pavonine.pawkiest.pawnable.pawnages.pawnshop.paxwaxes.payables.paybacks.paycheck.paygrade.payloads.payments.payrolls.pazazzes.peaceful.peacenik.peachers.peachier.peaching.peacoats.peacocks.peacocky.peafowls.peakiest.peakless.peaklike.pearlash.pearlers.pearlier.pearling.pearlite.pearmain.peartest.pearwood.peasants.peascods.peasecod.peatiest.pebblier.pebbling.peccable.peccancy.peccavis.peckiest.pecorini.pecorino.pectases.pectates.pectines.pectized.pectizes.pectoral.peculate.peculiar.peculium.pedagogs.pedagogy.pedalers.pedalfer.pedalier.pedaling.pedalled.pedaller.pedantic.pedantry.pedately.peddlers.peddlery.peddling.pederast.pedestal.pedicabs.pedicels.pedicled.pedicles.pedicure.pediform.pedigree.pediment.pedipalp.pedocals.pedology.peduncle.peebeens.peekaboo.peekapoo.peelable.peelings.peephole.peepshow.peerages.peerless.peesweep.peetweet.pegboard.pegboxes.peignoir.pekepoos.pelagial.pelagics.pelerine.pelicans.pelisses.pellagra.pelletal.pelleted.pellicle.pellmell.pellucid.pelorian.pelorias.pelotons.peltasts.peltered.peltless.peltries.pelvises.pembinas.pemicans.pemmican.pemoline.penalise.penality.penalize.penanced.penances.penchant.penciled.penciler.pendants.pendency.pendents.pendular.pendulum.penguins.penicils.penitent.penknife.penlight.penlites.pennames.pennants.pennated.pennines.pennoned.penoches.penology.penoncel.penpoint.pensione.pensions.pensters.penstock.pentacle.pentagon.pentanes.pentanol.pentarch.pentenes.pentodes.pentomic.pentosan.pentoses.penuches.penuchis.penuchle.penuckle.penumbra.penuries.peonages.peonisms.peoplers.peopling.peperoni.peploses.peplumed.pepluses.peponida.peponium.peppered.pepperer.peppiest.pepsines.peptalks.peptides.peptidic.peptized.peptizer.peptizes.peptones.peptonic.peracids.percales.perceive.percents.percepts.perchers.perching.percoids.perdured.perdures.peregrin.pereions.pereopod.perfecta.perfecto.perfects.perforce.performs.perfumed.perfumer.perfumes.perfused.perfuses.pergolas.perianth.periapts.periblem.pericarp.pericope.periderm.peridial.peridium.peridots.perigeal.perigean.perigees.perigons.perigyny.periling.perillas.perilled.perilous.perilune.perineal.perineum.periodic.periodid.periotic.peripety.peripter.periques.perisarc.perished.perishes.periwigs.perjured.perjurer.perjures.perkiest.perlites.perlitic.permeant.permease.permeate.permuted.permutes.peroneal.perorate.peroxide.peroxids.perpends.perpents.persalts.persists.personae.personal.personas.perspire.perspiry.persuade.pertains.pertness.perturbs.perusals.perusers.perusing.pervaded.pervader.pervades.perverse.perverts.pervious.peskiest.pestered.pesterer.pesthole.pestiest.pestling.petabyte.petaline.petalled.petalody.petaloid.petalous.petcocks.petechia.petering.petiolar.petioled.petioles.petition.petnaper.petrales.petrolic.petronel.petrosal.pettable.pettedly.pettiest.pettifog.pettings.pettling.petulant.petunias.petuntse.petuntze.pewterer.peytrals.peytrels.pfennige.pfennigs.phaetons.phalange.phallism.phallist.phantasm.phantast.phantasy.phantoms.pharaohs.pharisee.pharmacy.pharming.pharoses.phaseout.phasmids.phattest.pheasant.phellems.phelonia.phenates.phenazin.phenetic.phenetol.phenixes.phenolic.phenylic.phereses.pheresis.philabeg.philibeg.philomel.philters.philtred.philtres.philtrum.phimoses.phimosis.phimotic.phonated.phonates.phonemes.phonemic.phonetic.phoneyed.phoniest.phonying.phorates.phoronid.phosgene.phosphid.phosphin.phosphor.photoing.photomap.photonic.photopia.photopic.photoset.phrasing.phratral.phratric.phreaked.phreaker.phreatic.phthalic.phthalin.phthises.phthisic.phthisis.phylaxis.phyleses.phylesis.phyletic.phyllary.phyllite.phyllode.phylloid.phyllome.physical.physique.phytanes.phytonic.piacular.piaffers.piaffing.pianisms.pianists.piasabas.piasavas.piassaba.piassava.piasters.piastres.pibrochs.picachos.picadors.picaroon.picayune.piccolos.piciform.pickadil.pickaxed.pickaxes.pickeers.pickerel.picketed.picketer.pickiest.pickings.pickling.picklock.pickoffs.pickwick.picloram.picnicky.picogram.picoline.picolins.picomole.picotees.picoting.picowave.picquets.picrated.picrates.picrites.picritic.pictured.pictures.piddlers.piddling.piddocks.piebalds.piecings.piecrust.piedfort.piedmont.pieforts.pieholes.pieplant.piercers.piercing.pierrots.pietisms.pietists.piffling.pigboats.piggiest.pigments.pignolia.pignolis.pigskins.pigsneys.pigstick.pigsties.pigtails.pigweeds.pilaster.pilchard.pileated.pileless.pilewort.pilfered.pilferer.pilgrims.piliform.pillaged.pillager.pillages.pillared.pillions.pillowed.pilosity.pilotage.piloting.pilsener.pilsners.pimentos.pimiento.pimplier.pinafore.pinaster.pinballs.pinbones.pinchbug.pincheck.pinchers.pinching.pindling.pinecone.pineland.pinelike.pineries.pinesaps.pinewood.pinfolds.pingrass.pinheads.pinholes.pinioned.pinitols.pinkened.pinkeyes.pinkings.pinkness.pinkroot.pinnaces.pinnacle.pinnated.pinniped.pinnulae.pinnular.pinnules.pinochle.pinocles.pinpoint.pinprick.pinscher.pintadas.pintados.pintails.pintanos.pintsize.pinwales.pinweeds.pinwheel.pinworks.pinworms.pioneers.pipeages.pipefish.pipefuls.pipeless.pipelike.pipeline.piperine.pipestem.pipetted.pipettes.pipiness.pipingly.piquance.piquancy.piracies.piraguas.piranhas.pirarucu.pirating.piriform.pirogies.pirogues.piroques.piroshki.pirozhki.pirozhok.piscator.piscinae.piscinal.piscinas.pishoges.pishogue.pisiform.pismires.pisolite.pisolith.pissants.pissoirs.pistache.pistoled.pistoles.pitahaya.pitapats.pitchers.pitchier.pitchily.pitching.pitchman.pitchmen.pitchout.pitfalls.pitheads.pithiest.pithless.pitiable.pitiably.pitiless.pittance.pittings.pivoting.pivotman.pivotmen.pixieish.pixiness.pizazzes.pizzazes.pizzazzy.pizzelle.pizzeria.placable.placably.placards.placated.placater.placates.placebos.placeman.placemen.placenta.placidly.plackets.placoids.plafonds.plagiary.plaguers.plaguily.plaguing.plainest.plaining.plaister.plaiters.plaiting.planaria.planches.planchet.planform.plangent.planking.plankter.plankton.planless.planners.planning.planosol.plantain.planters.planting.plantlet.planulae.planular.plashers.plashier.plashing.plasmids.plasmins.plasmoid.plasmons.plasters.plastery.plastics.plastids.plastral.plastron.plastrum.platanes.plateaus.plateaux.plateful.platelet.platform.platiest.platinas.platings.platinic.platinum.platonic.platoons.platters.platting.platypus.plaudits.plausive.playable.playacts.playback.playbill.playbook.playboys.playdate.playdays.playdown.playgirl.playgoer.playland.playless.playlets.playlike.playlist.playmate.playoffs.playpens.playroom.playsuit.playtime.playwear.pleached.pleaches.pleaders.pleading.pleasant.pleasers.pleasing.pleasure.pleaters.pleather.pleating.plebeian.plectron.plectrum.pledgees.pledgeor.pledgers.pledgets.pledging.pledgors.pleiades.plenches.plenisms.plenists.plenties.pleonasm.pleopods.plessors.plethora.pleurisy.pleuston.plexuses.pliantly.plicated.plighted.plighter.plimsole.plimsoll.plimsols.plinkers.plinking.pliocene.pliofilm.pliotron.pliskies.plodders.plodding.ploidies.plonking.plopping.plosions.plosives.plotless.plotline.plottage.plotters.plottier.plotties.plotting.plotzing.ploughed.plougher.plowable.plowback.plowboys.plowhead.plowland.pluckers.pluckier.pluckily.plucking.pluggers.plugging.plugless.plugolas.plugugly.plumaged.plumages.plumbago.plumbers.plumbery.plumbing.plumbism.plumbous.plumbums.plumelet.plumeria.plumiest.plumiped.plumlike.plummest.plummets.plummier.plumpens.plumpers.plumpest.plumping.plumpish.plumular.plumules.plunders.plungers.plunging.plunkers.plunkier.plunking.plurally.plushest.plushier.plushily.plussage.plutonic.pluvials.pluviose.pluvious.plyingly.plywoods.poaceous.poachers.poachier.poaching.poblanos.pochards.pocketed.pocketer.pockiest.pockmark.pocosens.pocosins.pocosons.podagral.podagras.podagric.podestas.podgiest.podiatry.podocarp.podomere.podsolic.podzolic.poechore.poetical.poetised.poetiser.poetises.poetized.poetizer.poetizes.poetless.poetlike.poetries.pogonias.pogonips.pogromed.poignant.poinding.pointers.pointier.pointing.pointman.pointmen.poisoned.poisoner.poitrels.pokeroot.pokeweed.pokiness.polarise.polarity.polarize.polarons.poleaxed.poleaxes.polecats.poleless.polemics.polemist.polemize.polentas.polestar.poleward.policers.policies.policing.polished.polisher.polishes.politely.politest.politick.politico.politics.polities.polkaing.pollacks.pollards.pollened.pollical.pollices.pollinia.pollinic.pollists.polliwog.pollocks.pollster.polluted.polluter.pollutes.pollywog.poloists.polonium.poltroon.polybrid.polycots.polyenes.polyenic.polygala.polygamy.polygene.polyglot.polygons.polygony.polygyny.polymath.polymers.polynyas.polyomas.polypary.polypeds.polypide.polypnea.polypods.polypody.polypoid.polypore.polypous.polysemy.polysome.polytene.polyteny.polytype.polyuria.polyuric.polyzoan.polyzoic.pomading.pomander.pomatums.pomfrets.pommeled.pomology.pompanos.ponchoed.pondered.ponderer.pondweed.poniards.pontifex.pontiffs.pontific.pontoons.ponytail.pooching.pooftahs.poofters.poolhall.poolroom.poolside.poontang.poorness.poortith.popcorns.popedoms.popeless.popelike.poperies.popinjay.popishly.poplitei.poplitic.popovers.poppadom.poppadum.poppling.popsicle.populace.populate.populism.populist.populous.porcinis.porkiest.porkpies.porkwood.porniest.porosity.porously.porphyry.porpoise.porridge.porridgy.portable.portably.portaged.portages.portaled.portance.portapak.portends.portents.portered.porthole.porticos.portiere.portions.portless.portlier.portrait.portrays.portress.portside.poshness.posingly.positing.position.positive.positron.posology.possible.possibly.postages.postally.postanal.postbags.postbase.postboys.postburn.postcard.postcava.postcode.postcoup.postdate.postdive.postdocs.postdrug.posteens.posterns.postface.postfire.postform.postgame.postgrad.postheat.posthole.postiche.postings.postique.postlude.postmark.postoral.postpaid.postpone.postpose.postpunk.postrace.postriot.postshow.postsync.postteen.posttest.postural.postured.posturer.postures.potables.potashes.potassic.potation.potatoes.potatory.potbelly.potboils.potbound.potences.potently.potheads.potheens.potherbs.pothered.potholed.potholes.pothooks.pothouse.potiches.potlache.potlatch.potlines.potlucks.potshard.potsherd.potshots.potstone.pottages.potteens.pottered.potterer.pottiest.pouchier.pouching.poularde.poulards.poulters.poultice.pouncers.pouncing.poundage.poundals.pounders.pounding.pourable.poussies.poutiest.poutines.powdered.powderer.powerful.powering.powwowed.poxvirus.pozzolan.practice.practise.praecipe.praedial.praefect.praelect.praetors.prairies.praisers.praising.pralines.prancers.prancing.prandial.pranging.pranking.prankish.pratfall.pratique.prattled.prattler.prattles.prawners.prawning.praxises.preached.preacher.preaches.preacted.preadapt.preadmit.preadopt.preadult.preallot.prealter.preamble.preapply.prearmed.preaudit.preavers.preaxial.prebaked.prebakes.prebasal.prebends.prebills.prebinds.prebirth.prebless.preboard.preboils.prebooks.prebound.prebuild.prebuilt.precasts.precavae.precaval.preceded.precedes.precents.precepts.precheck.prechill.prechose.precieux.precinct.precious.precipes.precised.preciser.precises.precited.preclean.preclear.preclude.precoded.precodes.precooks.precools.precrash.precured.precures.predated.predates.predator.predawns.predeath.predella.predicts.predraft.predried.predries.predrill.predusks.preedits.preelect.preemies.preempts.preenact.preeners.preening.preerect.preexist.prefaced.prefacer.prefaces.prefaded.prefades.prefects.prefight.prefiled.prefiles.prefired.prefires.prefixal.prefixed.prefixes.preflame.prefocus.preforms.prefrank.prefroze.prefunds.pregames.preggers.pregnant.preguide.preheats.prehuman.prejudge.prelates.prelatic.prelects.prelegal.prelimit.prelives.preloads.preluded.preluder.preludes.prelunch.premedic.premiere.premiers.premised.premises.premiums.premixed.premixes.premolar.premolds.premoral.premorse.prenames.prenatal.prenomen.prentice.preorder.preowned.prepacks.prepared.preparer.prepares.prepaste.prepaved.prepaves.prepense.preplace.preplans.preplant.preppier.preppies.preppily.prepping.prepregs.prepress.preprice.preprint.prepubes.prepubis.prepuces.prepunch.prepupae.prepupal.prepupas.prequels.preradio.prerenal.prerinse.presaged.presager.presages.presales.prescind.prescore.presells.presence.presents.preserve.preshape.preships.preshown.preshows.presided.presider.presides.presidia.presidio.presifts.presleep.preslice.presoaks.presolve.presorts.presplit.pressers.pressing.pressman.pressmen.pressors.pressrun.pressure.prestamp.presters.prestige.prestore.presumed.presumer.presumes.pretaped.pretapes.pretaste.preteens.pretells.pretence.pretends.pretense.preterit.preterms.pretests.pretexts.pretrain.pretreat.pretrial.pretrims.prettied.prettier.pretties.prettify.prettily.pretyped.pretypes.pretzels.preunion.preunite.prevails.prevalue.prevents.preverbs.previews.previous.prevised.previses.previsit.previsor.prevuing.prewarms.prewarns.preweigh.prewired.prewires.preworks.prewraps.priapean.priapism.priciest.prickers.prickets.prickier.pricking.prickled.prickles.prideful.priedieu.priested.priestly.priggery.prigging.priggish.priggism.prilling.primages.primatal.primates.primeros.primeval.primines.primings.primmest.primming.primness.primping.primrose.primulas.primuses.princely.princess.principe.principi.princock.prinkers.prinking.printers.printery.printing.printout.priorate.prioress.priories.priority.priseres.prismoid.prisoned.prisoner.prissier.prissies.prissily.prissing.pristane.pristine.privater.privates.priviest.probable.probably.probands.probangs.probated.probates.problems.procaine.procarps.proceeds.prochain.prochein.proclaim.proctors.procural.procured.procurer.procures.prodders.prodding.prodigal.prodrome.prodrugs.produced.producer.produces.products.proemial.proettes.profaned.profaner.profanes.proffers.profiled.profiler.profiles.profited.profiter.proforma.profound.progeria.proggers.progging.prognose.prograde.programs.progress.prohibit.projects.prolabor.prolamin.prolapse.prolific.prolines.prolixly.prologed.prologue.prolonge.prolongs.promines.promised.promisee.promiser.promises.promisor.promoing.promoted.promoter.promotes.prompted.prompter.promptly.promulge.pronated.pronates.pronator.pronging.pronotum.pronouns.proofers.proofing.propanes.propends.propenes.propenol.propense.propenyl.properer.properly.property.prophage.prophase.prophecy.prophesy.prophets.propined.propines.propjets.propolis.proponed.propones.proposal.proposed.proposer.proposes.propound.propping.proprium.propylic.propylon.prorated.prorates.prorogue.prosaism.prosaist.prosects.prosiest.prosodic.prosomal.prosomas.prospect.prospers.prossies.prostate.prosties.prostyle.protamin.protases.protasis.protatic.proteans.protease.protects.protegee.proteges.proteide.proteids.proteins.protends.proteome.proteose.protests.protists.protiums.protocol.protonic.protopod.protoxid.protozoa.protract.protrade.protrude.protyles.proudest.proudful.prounion.provable.provably.provenly.proverbs.provided.provider.provides.province.proviral.provirus.provisos.provoked.provoker.provokes.provosts.prowlers.prowling.proxemic.proximal.prudence.pruinose.prunable.prunella.prunelle.prunello.prunuses.prurient.prurigos.pruritic.pruritus.pryingly.psalming.psalmist.psalmody.psalters.psaltery.psammite.psammons.pschents.psephite.pshawing.psilocin.psiloses.psilosis.psilotic.psoralea.psoralen.psychics.psyching.psyllids.psyllium.pteropod.pterygia.pterylae.ptomaine.ptomains.ptyalins.ptyalism.pubertal.publican.publicly.puccoons.puckered.puckerer.puddings.puddlers.puddlier.puddling.pudendal.pudendum.pudgiest.pudibund.puerpera.puffball.puffiest.pugarees.puggaree.puggiest.puggrees.puggries.pugilism.pugilist.pugmarks.puissant.pulicene.pulicide.pulingly.pullback.pullmans.pullouts.pullover.pulmonic.pulmotor.pulpally.pulpiest.pulpital.pulpless.pulpwood.pulsated.pulsates.pulsator.pulsejet.pulsions.pulsojet.pulvilli.pulvinar.pulvinus.pumicers.pumicing.pumicite.pummeled.pummelos.pumpkins.pumpless.pumplike.puncheon.punchers.punchier.punchily.punching.punctate.punctual.puncture.punditic.punditry.pungency.pungling.puniness.punished.punisher.punishes.punition.punitive.punitory.punkiest.punniest.punsters.puparial.puparium.pupating.pupation.pupilage.pupilary.puppetry.puppydom.puppyish.purblind.purchase.purebred.pureeing.pureness.purflers.purfling.purgings.purified.purifier.purifies.puristic.puritans.purities.purlieus.purlines.purlings.purloins.purplest.purpling.purplish.purports.purposed.purposes.purpuras.purpures.purpuric.purpurin.pursiest.purslane.pursuant.pursuers.pursuing.pursuits.purtiest.purulent.purveyed.purveyor.purviews.pushball.pushcart.pushdown.pushiest.pushover.pushpins.pushrods.pussiest.pussleys.pusslies.pusslike.pussycat.pustular.pustuled.pustules.putamina.putative.putdowns.putridly.putsches.puttered.putterer.puttiers.puttying.puzzlers.puzzling.pyaemias.pycnidia.pycnoses.pycnosis.pycnotic.pyelitic.pyelitis.pygidial.pygidium.pygmaean.pygmyish.pygmyism.pyknoses.pyknosis.pyknotic.pyoderma.pyogenic.pyorrhea.pyralids.pyramids.pyranoid.pyranose.pyrenoid.pyrexial.pyrexias.pyridine.pyriform.pyritous.pyrogens.pyrolize.pyrology.pyrolyze.pyronine.pyrostat.pyroxene.pyrrhics.pyrroles.pyrrolic.pyruvate.pythonic.pyxidium.qabalahs.qindarka.quaalude.quackery.quackier.quacking.quackish.quackism.quadding.quadplex.quadrans.quadrant.quadrate.quadrats.quadrics.quadriga.quadroon.quaestor.quaffers.quaffing.quaggier.quagmire.quagmiry.quahaugs.quaiches.quailing.quainter.quaintly.quakiest.qualmier.qualmish.quandang.quandary.quandong.quantics.quantify.quantile.quanting.quantity.quantize.quantong.quarrels.quarried.quarrier.quarries.quartans.quartern.quarters.quartets.quartics.quartier.quartile.quartzes.quashers.quashing.quassias.quassins.quatorze.quatrain.quavered.quaverer.quayages.quaylike.quayside.queasier.queasily.queazier.queendom.queening.queerest.queering.queerish.quellers.quelling.quenched.quencher.quenches.quenelle.quercine.queridas.queriers.querists.querying.questers.questing.question.questors.quetzals.queueing.quezales.quibbled.quibbler.quibbles.quickens.quickest.quickies.quickset.quiddity.quidnunc.quietens.quieters.quietest.quieting.quietism.quietist.quietude.quillaia.quillais.quillaja.quillets.quilling.quilters.quilting.quincunx.quinelas.quinella.quiniela.quininas.quinines.quinnats.quinoids.quinolin.quinones.quinsied.quinsies.quintain.quintals.quintans.quintars.quintets.quintics.quintile.quintins.quippers.quippier.quipping.quippish.quipster.quirkier.quirkily.quirking.quirkish.quirting.quisling.quitches.quitrent.quitters.quitting.quittors.quivered.quiverer.quixotes.quixotic.quixotry.quizzers.quizzing.quoining.quoiting.quomodos.quotable.quotably.quotient.qurushes.rabbeted.rabbinic.rabbited.rabbiter.rabbitry.rabblers.rabbling.rabbonis.rabidity.rabietic.raccoons.racemate.racemism.racemize.racemoid.racemose.racemous.racewalk.raceways.racheted.rachides.rachilla.rachises.rachitic.rachitis.racially.raciness.racketed.rackfuls.rackwork.raclette.racquets.raddling.radiable.radialia.radially.radiance.radiancy.radiants.radiated.radiates.radiator.radicals.radicand.radicate.radicels.radicles.radioing.radioman.radiomen.radishes.radiuses.radwaste.rafflers.raffling.raftered.raftsman.raftsmen.raggeder.raggedly.ragingly.ragouted.ragtimes.ragweeds.ragworts.railbird.railcars.railhead.railings.raillery.railroad.railways.raiments.rainband.rainbird.rainbows.raincoat.raindrop.rainfall.rainiest.rainless.rainouts.rainwash.rainwear.raisable.raisings.raisonne.rakehell.rakeoffs.rakishly.ralliers.rallying.rallyist.ralphing.ramblers.rambling.rambutan.ramekins.ramentum.ramequin.ramified.ramifies.ramiform.ramilies.ramillie.rammiest.ramosely.ramosity.rampaged.rampager.rampages.rampancy.ramparts.rampikes.rampions.rampoles.ramshorn.ramtilla.ramulose.ramulous.ranchero.ranchers.ranching.ranchman.ranchmen.rancidly.rancored.rancours.randiest.randomly.rangiest.rankings.rankless.rankling.rankness.ranpikes.ransacks.ransomed.ransomer.rapacity.rapeseed.raphides.rapidest.rapidity.rapiered.rapparee.rappeled.rapports.raptness.raptured.raptures.rarebits.rarefied.rarefier.rarefies.rareness.rareripe.rarified.rarifies.rarities.rasboras.rascally.rashlike.rashness.rasorial.raspiest.raspings.rassling.ratables.ratafees.ratafias.ratanies.rataplan.ratatats.ratchets.rateable.rateably.ratfinks.ratholes.raticide.ratified.ratifier.ratifies.rational.rationed.ratlines.ratooned.ratooner.ratsbane.rattails.ratteens.rattened.rattener.rattiest.rattlers.rattling.rattoons.rattraps.raunches.ravagers.ravaging.ravelers.raveling.ravelins.ravelled.raveller.raveners.ravening.ravenous.ravigote.ravingly.ravining.raviolis.ravished.ravisher.ravishes.rawboned.rawhided.rawhides.raygrass.razeeing.razoring.reabsorb.reaccede.reaccent.reaccept.reaccuse.reachers.reaching.reactant.reacting.reaction.reactive.reactors.readable.readably.readapts.readdict.readding.readerly.readiest.readings.readjust.readmits.readopts.readorns.readouts.readying.reaffirm.reagents.reaginic.realgars.realigns.realised.realiser.realises.realisms.realists.realized.realizer.realizes.reallots.realness.realters.realties.realtors.reanoint.reapable.reaphook.reappear.reargued.reargues.rearmice.rearming.rearmost.rearouse.rearrest.rearward.reascend.reascent.reasoned.reasoner.reassail.reassert.reassess.reassign.reassort.reassume.reassure.reattach.reattack.reattain.reavails.reavowed.reawaked.reawaken.reawakes.reawoken.rebaited.rebaters.rebating.rebegins.rebeldom.rebelled.rebidden.rebilled.rebirths.reblends.reblooms.reboards.rebodied.rebodies.reboiled.rebooked.rebooted.reboring.rebottle.rebought.rebounds.rebranch.rebreeds.rebuffed.rebuilds.rebukers.rebuking.reburial.reburied.reburies.rebuttal.rebutted.rebutter.rebutton.rebuying.recalled.recaller.recamier.recaning.recanted.recanter.recapped.recarpet.receding.receipts.received.receiver.receives.recement.recensor.recenter.recently.receptor.recessed.recesses.rechange.recharge.recharts.recheats.rechecks.rechewed.rechoose.rechosen.recircle.recision.recitals.reciters.reciting.reckless.reckoned.reckoner.reclaims.reclames.reclasps.recleans.reclined.recliner.reclines.reclothe.recluses.recoaled.recoated.recocked.recodify.recoding.recoiled.recoiler.recoined.recolors.recombed.recommit.reconfer.reconned.reconvey.recooked.recopied.recopies.recorded.recorder.recorked.recounts.recouped.recouple.recourse.recovers.recovery.recrated.recrates.recreant.recreate.recrowns.recruits.rectally.recurred.recurved.recurves.recusals.recusant.recusing.recycled.recycler.recycles.redacted.redactor.redamage.redargue.redating.redbaits.redbirds.redbones.redbrick.redcoats.reddened.reddling.redecide.redeemed.redeemer.redefeat.redefect.redefied.redefies.redefine.redemand.redenied.redenies.redeploy.redesign.redheads.redhorse.redialed.redigest.redipped.redirect.redivide.redlined.redliner.redlines.rednecks.redocked.redolent.redonned.redouble.redoubts.redounds.redpolls.redrafts.redrawer.redreams.redreamt.redrills.redriven.redrives.redroots.redrying.redshank.redshift.redshirt.redskins.redstart.redtails.redubbed.reducers.reducing.reductor.reduviid.redwares.redwings.redwoods.redyeing.reearned.reechier.reechoed.reechoes.reedbird.reedbuck.reediest.reedings.reedited.reedlike.reedling.reefable.reefiest.reejects.reekiest.reelable.reelects.reelings.reembark.reembody.reemerge.reemploy.reenacts.reendows.reengage.reenjoys.reenlist.reenroll.reenters.reequips.reerects.reesting.reevoked.reevokes.reexpels.reexport.reexpose.refacing.refallen.refasten.refected.refelled.refenced.refences.refereed.referees.referent.referral.referred.referrer.refights.refigure.refiling.refilled.refilmed.refilter.refiners.refinery.refining.refinish.refiring.refitted.refixing.reflated.reflates.reflects.reflexed.reflexes.reflexly.refloats.refloods.reflowed.reflower.refluent.refluxed.refluxes.reflying.refolded.reforest.reforged.reforges.reformat.reformed.reformer.refought.refounds.refracts.refrains.reframed.reframes.refreeze.refronts.refrozen.refrying.refueled.refugees.refuging.refugium.refunded.refunder.refusals.refusers.refusing.refusnik.refutals.refuters.refuting.regained.regainer.regalers.regaling.regality.regarded.regather.regattas.regauged.regauges.regeared.regelate.regental.regicide.regilded.regimens.regiment.regional.register.registry.regiving.reglazed.reglazes.reglowed.regluing.regnancy.regolith.regorged.regorges.regosols.regraded.regrades.regrafts.regrants.regrated.regrates.regreens.regreets.regrinds.regrooms.regroove.reground.regroups.regrowth.regulars.regulate.reguline.rehabbed.rehabber.rehammer.rehandle.rehanged.reharden.rehashed.rehashes.rehearse.reheated.reheater.reheeled.rehemmed.rehinged.rehinges.rehiring.rehoboam.rehoused.rehouses.reifiers.reifying.reigning.reignite.reimaged.reimages.reimport.reimpose.reincite.reincurs.reindeer.reindict.reinduce.reinduct.reinfect.reinform.reinfuse.reinject.reinjure.reinjury.reinking.reinless.reinsert.reinsman.reinsmen.reinsure.reinters.reinvade.reinvent.reinvest.reinvite.reinvoke.reissued.reissuer.reissues.reitboks.rejacket.rejected.rejectee.rejecter.rejector.rejigged.rejigger.rejoiced.rejoicer.rejoices.rejoined.rejudged.rejudges.rejuggle.rekeying.rekindle.relabels.relacing.relanded.relapsed.relapser.relapses.relaters.relating.relation.relative.relators.relaunch.relaxant.relaxers.relaxing.relaxins.relaying.relearns.relearnt.released.releaser.releases.relegate.relented.reletter.relevant.reliable.reliably.reliance.relieved.reliever.relieves.relievos.relights.religion.relining.relinked.reliques.relished.relishes.relisted.reliving.rellenos.reloaded.reloader.reloaned.relocate.relocked.relooked.relucent.relucted.relumine.reluming.remailed.remained.remakers.remaking.remanded.remanent.remanned.remapped.remarked.remarker.remarket.remarque.remaster.remating.remedial.remedied.remedies.remelted.remember.remended.remerged.remerges.remigial.reminded.reminder.reminted.remising.remissly.remittal.remitted.remitter.remittor.remixing.remnants.remodels.remodify.remolade.remolded.remorses.remotely.remotest.remotion.remounts.removals.removers.removing.renailed.renaming.renature.rendered.renderer.rendible.rendzina.renegade.renegado.renegers.reneging.renested.renewals.renewers.renewing.reniform.renigged.renitent.renminbi.rennases.renogram.renotify.renounce.renovate.renowned.rentable.rentiers.renumber.reobject.reobtain.reoccupy.reoccurs.reoffers.reoiling.reopened.reoppose.reordain.reorders.reorient.reoutfit.reovirus.repacify.repacked.repaints.repaired.repairer.repandly.repanels.repapers.reparked.repartee.repassed.repasses.repasted.repaving.repaying.repealed.repealer.repeated.repeater.repegged.repelled.repeller.repented.repenter.repeople.reperked.repetend.rephrase.repiners.repining.repinned.replaced.replacer.replaces.replants.replated.replates.replayed.repleads.repledge.repletes.replevin.replicas.replicon.repliers.replowed.replumbs.replunge.replying.repolish.repolled.reported.reporter.reposals.reposers.reposing.reposits.repotted.repoured.repousse.repowers.repriced.reprices.reprieve.reprints.reprisal.reprised.reprises.reproach.reprobed.reprobes.reproofs.reproval.reproved.reprover.reproves.reptiles.reptilia.republic.repugned.repulsed.repulser.repulses.repumped.repurify.repursue.reputing.requests.requiems.required.requirer.requires.requital.requited.requiter.requites.reracked.reraised.reraises.rerecord.reremice.reremind.rerented.rerepeat.rereview.rereward.rerigged.rerising.rerolled.reroller.reroofed.rerouted.reroutes.resaddle.resailed.resalute.resample.resawing.resaying.rescaled.rescales.reschool.rescinds.rescored.rescores.rescreen.rescript.rescuers.rescuing.resculpt.resealed.research.reseason.reseated.resected.resecure.reseeded.reseeing.reseized.reseizes.reselect.reseller.resemble.resented.reserved.reserver.reserves.resetter.resettle.resewing.reshaped.reshaper.reshapes.reshaved.reshaven.reshaves.reshined.reshines.reshoots.reshowed.reshower.resident.residers.residing.residual.residues.residuum.resifted.resights.resigned.resigner.resiling.resilins.resilver.resinate.resinify.resining.resinoid.resinous.resisted.resister.resistor.resiting.resizing.resketch.reslated.reslates.resmelts.resmooth.resoaked.resodded.resoften.resojets.resolder.resoling.resolute.resolved.resolver.resolves.resonant.resonate.resorbed.resorcin.resorted.resorter.resought.resounds.resource.resowing.respaced.respaces.respaded.respades.respeaks.respects.respells.respired.respires.respited.respites.resplice.resplits.respoken.responds.responsa.response.respools.resprang.resprays.respread.respring.resprout.resprung.restable.restacks.restaffs.restaged.restages.restamps.restarts.restated.restates.restitch.restless.restocks.restoked.restokes.restoral.restored.restorer.restores.restrain.restress.restrict.restrike.restring.restrive.restroom.restrove.restruck.restrung.restuffs.restyled.restyles.resubmit.resulted.resumers.resuming.resummon.resupine.resupply.resurged.resurges.resurvey.retables.retacked.retackle.retagged.retailed.retailer.retailor.retained.retainer.retakers.retaking.retaping.retarded.retarder.retarget.retasted.retastes.retaught.retaxing.retching.reteamed.retemper.retested.rethinks.rethread.retiarii.reticent.reticles.reticula.reticule.retieing.retiform.retiling.retiming.retinals.retinene.retinite.retinoid.retinols.retinted.retinued.retinues.retinula.retirant.retirees.retirers.retiring.retitled.retitles.retooled.retorted.retorter.retotals.retraced.retracer.retraces.retracks.retracts.retrains.retrally.retreads.retreats.retrench.retrials.retrieve.retroact.retrofit.retronym.retrorse.retrying.retsinas.retuning.returned.returnee.returner.retwists.retyping.reunions.reunited.reuniter.reunites.reuptake.reusable.reutters.revalued.revalues.revamped.revamper.revanche.revealed.revealer.revehent.reveille.revelers.reveling.revelled.reveller.revenant.revenged.revenger.revenges.revenual.revenued.revenuer.revenues.reverbed.reverend.reverent.reverers.reveries.reverify.revering.reversal.reversed.reverser.reverses.reversos.reverted.reverter.revested.revetted.reviewal.reviewed.reviewer.revilers.reviling.revisals.revisers.revising.revision.revisits.revisors.revisory.revivals.revivers.revivify.reviving.revoiced.revoices.revokers.revoking.revolted.revolter.revolute.revolved.revolver.revolves.revoting.revuists.revulsed.rewakens.rewaking.rewarded.rewarder.rewarmed.rewashed.rewashes.rewaxing.reweaved.reweaves.rewedded.reweighs.rewelded.rewetted.rewidens.rewinded.rewinder.rewiring.reworded.reworked.rewriter.rewrites.reynards.rezeroed.rezeroes.rezoning.rhabdome.rhabdoms.rhamnose.rhapsode.rhapsody.rhematic.rheniums.rheobase.rheology.rheophil.rheostat.rhesuses.rhetoric.rheumier.rhinitis.rhizobia.rhizoids.rhizomes.rhizomic.rhizopod.rhizopus.rhodamin.rhodiums.rhodoras.rhomboid.rhonchal.rhonchus.rhubarbs.rhumbaed.rhyolite.rhythmic.ribaldly.ribaldry.ribbands.ribbiest.ribbings.ribboned.ribgrass.ribosome.ribozyme.ribworts.ricebird.ricercar.richened.richness.richweed.rickrack.rickshas.rickshaw.ricochet.ricottas.rictuses.riddance.riddlers.riddling.rideable.ridgetop.ridgiest.ridgling.ridicule.ridottos.riesling.rifampin.rifeness.rifflers.riffling.riffraff.rifleman.riflemen.riflings.riftless.rigadoon.rigatoni.rigaudon.riggings.righters.rightest.rightful.righties.righting.rightism.rightist.rigidify.rigidity.rigorism.rigorist.rigorous.rikishas.rikshaws.rimester.rimfires.riminess.rimlands.rimosely.rimosity.rimpling.rimrocks.rimshots.rindless.ringbark.ringbolt.ringbone.ringdove.ringgits.ringhals.ringlets.ringlike.ringneck.ringside.ringtail.ringtaws.ringtoss.ringworm.rinsable.rinsible.rinsings.riparian.ripcords.ripeners.ripeness.ripening.ripienos.riposted.ripostes.rippable.ripplers.ripplets.ripplier.rippling.ripsawed.ripstops.riptides.risibles.riskiest.riskless.risottos.rissoles.ritually.ritziest.rivaling.rivalled.riverbed.riverine.riveters.riveting.rivetted.rivieras.rivieres.rivulets.rivulose.roaching.roadbeds.roadkill.roadless.roadshow.roadside.roadster.roadways.roadwork.roarings.roasters.roasting.roborant.robotics.robotism.robotize.robustas.robuster.robustly.rocaille.rockable.rockabye.rockaway.rocketed.rocketer.rocketry.rockfall.rockfish.rockiest.rockless.rocklike.rockling.rockoons.rockrose.rockweed.rockwork.rodeoing.roebucks.roentgen.rogation.rogatory.rogering.rogueing.roiliest.roisters.rolamite.rollaway.rollback.rollicks.rollicky.rollings.rollmops.rollouts.rollover.rollways.romaines.romanced.romancer.romances.romanise.romanize.romantic.romaunts.rondeaux.rondelet.rondelle.rondures.rontgens.roofings.roofless.rooflike.roofline.rooftops.rooftree.rookiest.roomette.roomfuls.roomiest.roommate.roorbach.roorback.roosters.roosting.rootages.rootcaps.roothold.rootiest.rootless.rootlets.rootlike.rootling.rootworm.ropelike.roperies.ropewalk.ropeways.ropiness.roqueted.roquette.rorquals.rosaceas.rosarian.rosaries.rosarium.rosebays.rosebuds.rosebush.rosefish.rosehips.roselike.roselles.rosemary.roseolar.roseolas.roseries.roseroot.roseslug.rosettes.rosewood.rosiness.rosining.rosinols.rosinous.rosolios.rostella.rostrate.rostrums.rosulate.rotaries.rotating.rotation.rotative.rotators.rotatory.rotenone.rotifers.rotiform.rototill.rottener.rottenly.rotundas.rotundly.roturier.roughage.roughdry.roughens.roughers.roughest.roughhew.roughies.roughing.roughish.roughleg.rouilles.roulades.rouleaus.rouleaux.roulette.roundels.rounders.roundest.rounding.roundish.roundlet.roundups.roupiest.rousseau.rousters.rousting.routeman.routemen.routeway.routines.rovingly.rowboats.rowdiest.rowdyish.rowdyism.roweling.rowelled.rowlocks.royalism.royalist.roysters.rubaboos.rubaiyat.rubasses.rubbaboo.rubbered.rubbings.rubbishy.rubblier.rubbling.rubboard.rubdowns.rubellas.rubeolar.rubeolas.rubicund.rubidium.rubrical.rubylike.ruchings.ruckling.rucksack.ruckuses.ructions.ructious.ruddiest.ruddling.ruddocks.rudeness.ruderals.ruderies.rudiment.ruefully.ruffians.rufflers.rufflier.rufflike.ruffling.rugalach.rugelach.ruggeder.ruggedly.rugosely.rugosity.rugulose.ruinable.ruinated.ruinates.ruleless.rumbaing.rumblers.rumbling.ruminant.ruminate.rummaged.rummager.rummages.rummiest.rumoring.rumoured.rumpless.rumplier.rumpling.rumpuses.runabout.runagate.runaways.runbacks.rundlets.rundowns.runelike.rungless.runkling.runniest.runnings.runovers.runround.runtiest.ruptured.ruptures.ruralise.ruralism.ruralist.ruralite.rurality.ruralize.rushiest.rushings.rushlike.rustable.rustical.rusticly.rustiest.rustlers.rustless.rustling.rutabaga.ruthenic.ruthless.rutilant.ruttiest.ryegrass.sabatons.sabayons.sabbaths.sabbatic.sabering.sabotage.saboteur.sabulose.sabulous.sacatons.saccades.saccadic.saccular.saccules.sacculus.sachemic.sacheted.sackbuts.sackfuls.sackings.sacklike.sacksful.sacraria.sacredly.sacrings.sacrists.sacristy.saddened.saddlers.saddlery.saddling.sadirons.sadistic.safaried.safeness.safetied.safeties.saffrons.safranin.safroles.sagacity.sagamore.saganash.sageness.saggards.saggared.saggered.saggiest.sagittal.saguaros.sahiwals.sahuaros.sailable.sailboat.sailfish.sailings.sailless.sailorly.sainfoin.saintdom.sainting.salaamed.salacity.saladang.salariat.salaried.salaries.salchows.saleable.saleably.saleroom.salesman.salesmen.salicine.salicins.salience.saliency.salients.salified.salifies.salinity.salinize.salivary.salivate.salliers.sallowed.sallower.sallowly.sallying.salmonid.salpians.salsilla.saltbush.salterns.saltiers.saltiest.saltines.saltings.saltires.saltless.saltlike.saltness.saltpans.saltwork.saltwort.salutary.saluters.saluting.salvable.salvably.salvaged.salvagee.salvager.salvages.salvific.salvoing.samadhis.samarium.sambaing.sambhars.sambhurs.sambucas.sambukes.sameness.samisens.samizdat.samovars.samoyeds.samphire.samplers.sampling.samsaras.samurais.sanative.sanctify.sanction.sanctity.sanctums.sandable.sandaled.sandarac.sandbags.sandbank.sandbars.sandburr.sandburs.sanddabs.sandfish.sandhogs.sandiest.sandless.sandlike.sandling.sandlots.sandpeep.sandpile.sandpits.sandshoe.sandsoap.sandspur.sandwich.sandworm.sandwort.saneness.sangaree.sangrias.sanguine.sanicles.sanidine.sanitary.sanitate.sanities.sanitise.sanitize.sannyasi.sanserif.santalic.santalol.santeras.santeria.santeros.santonin.santoors.santours.sapajous.sapheads.saphenae.saphenas.sapidity.sapience.sapiency.sapients.saplings.saponify.saponine.saponins.saponite.saporous.sapphics.sapphire.sapphism.sapphist.sappiest.sapremia.sapremic.saprobes.saprobic.sapropel.sapsagos.sapwoods.saraband.sarcasms.sarcenet.sarcinae.sarcinas.sarcoids.sarcomas.sardanas.sardined.sardines.sardonic.sardonyx.sargasso.sarkiest.sarmenta.sarments.sarodist.sarsenet.sarsnets.sartorii.sashayed.sashimis.sashless.sassiest.sasswood.sastruga.sastrugi.satanism.satanist.satchels.satiable.satiably.satiated.satiates.satinets.satinpod.satirise.satirist.satirize.satsumas.saturant.saturate.satyrids.saucebox.saucepan.saucepot.sauciers.sauciest.saunaing.saunters.saurians.sauropod.sausages.sauteing.sauterne.sautoire.sautoirs.savagely.savagery.savagest.savaging.savagism.savannah.savannas.savarins.saveable.saveloys.savingly.saviours.savorers.savorier.savories.savorily.savoring.savorous.savoured.savourer.savviest.savvying.sawbills.sawbones.sawbucks.sawdusts.sawdusty.sawflies.sawhorse.sawmills.sawteeth.sawtooth.saxatile.saxhorns.saxonies.saxtubas.sayonara.scabbard.scabbier.scabbily.scabbing.scabbled.scabbles.scabiosa.scabious.scabland.scablike.scabrous.scaffold.scalable.scalably.scalades.scalados.scalages.scalares.scalawag.scalding.scalenus.scalepan.scaleups.scaliest.scallion.scallops.scalpels.scalpers.scalping.scammers.scamming.scammony.scampers.scampies.scamping.scampish.scamster.scandals.scandent.scandias.scandium.scanners.scanning.scansion.scantest.scantier.scanties.scantily.scanting.scaphoid.scapulae.scapular.scapulas.scarcely.scarcest.scarcity.scareder.scarfers.scarfing.scarfpin.scariest.scariose.scarious.scarless.scarlets.scarpers.scarphed.scarping.scarrier.scarring.scarting.scatback.scathing.scatters.scattier.scatting.scaupers.scavenge.scenario.scending.scenical.scenting.scepters.sceptics.sceptral.sceptred.sceptres.schappes.schedule.schemata.schemers.scheming.scherzos.schiller.schizier.schizoid.schizont.schlepps.schliere.schlocks.schlocky.schlumps.schlumpy.schmaltz.schmalzy.schmatte.schmears.schmeers.schmelze.schmoose.schmooze.schmoozy.schmucks.schnapps.schnecke.schnooks.schnozes.scholars.scholium.schooled.schooner.schticks.schussed.schusser.schusses.sciaenid.sciatica.sciatics.sciences.scilicet.scimetar.scimitar.scimiter.scincoid.sciolism.sciolist.scirocco.scirrhus.scissile.scission.scissors.scissure.sciurids.sciurine.sciuroid.sclaffed.sclaffer.sclereid.sclerite.scleroid.scleroma.sclerose.sclerous.scoffers.scoffing.scofflaw.scolders.scolding.scoleces.scolices.scolioma.scollops.scombrid.sconcing.scooched.scooches.scoopers.scoopful.scooping.scooters.scooting.scopulae.scopulas.scorched.scorcher.scorches.scorepad.scorners.scornful.scorning.scorpion.scotched.scotches.scotomas.scotopia.scotopic.scotties.scourers.scourged.scourger.scourges.scouring.scouters.scouther.scouting.scowders.scowlers.scowling.scrabble.scrabbly.scragged.scraggly.scraichs.scraighs.scramble.scramjet.scrammed.scrannel.scrapers.scrapies.scraping.scrapped.scrapper.scrapple.scratchy.scrawled.scrawler.screaked.screamed.screamer.screechy.screeded.screened.screener.screwers.screwier.screwing.screwups.scribble.scribbly.scribers.scribing.scrieved.scrieves.scrimped.scrimper.scrimpit.scripted.scripter.scriving.scrofula.scrolled.scrooges.scrooped.scrootch.scrotums.scrouged.scrouges.scrounge.scroungy.scrubbed.scrubber.scrummed.scrunchy.scrupled.scruples.scrutiny.scubaing.scudding.scuffers.scuffing.scuffled.scuffler.scuffles.sculches.sculkers.sculking.scullers.scullery.sculling.scullion.sculping.sculpins.sculpted.sculptor.scumbags.scumbled.scumbles.scumless.scumlike.scummers.scummier.scummily.scumming.scunners.scuppaug.scuppers.scurfier.scurried.scurries.scurrile.scurvier.scurvies.scurvily.scutages.scutched.scutcher.scutches.scutella.scutters.scuttled.scuttles.scutwork.scuzzier.scyphate.scything.seabeach.seabirds.seaboard.seaboots.seaborne.seacoast.seacocks.seacraft.seadrome.seafarer.seafloor.seafoods.seafowls.seafront.seagoing.seagulls.seahorse.sealable.sealants.sealifts.seallike.sealskin.seamanly.seamarks.seamiest.seamless.seamlike.seamount.seamster.seapiece.seaplane.seaports.seaquake.searched.searcher.searches.searobin.seascape.seascout.seashell.seashore.seasides.seasonal.seasoned.seasoner.seatback.seatbelt.seatings.seatless.seatmate.seatrain.seatrout.seatwork.seawalls.seawants.seawards.seawares.seawater.seaweeds.secalose.secantly.secateur.seceders.seceding.secerned.secluded.secludes.seconals.seconded.seconder.secondes.secondly.secreted.secreter.secretes.secretin.secretly.secretor.sections.sectoral.sectored.seculars.secundly.secundum.securely.securers.securest.securing.security.sedately.sedatest.sedating.sedation.sedative.sederunt.sedgiest.sedilium.sediment.sedition.seducers.seducing.seducive.sedulity.sedulous.seecatch.seedbeds.seedcake.seedcase.seediest.seedless.seedlike.seedling.seedpods.seedsman.seedsmen.seedtime.seemings.seemlier.seepages.seepiest.seesawed.seething.segments.segueing.seicento.seigneur.seignior.seignory.seisable.seisings.seismism.seisures.seizable.seizings.seizures.seladang.selamlik.selcouth.seldomly.selected.selectee.selectly.selector.selenate.selenide.selenite.selenium.selenous.selfdoms.selfheal.selfhood.selfless.selfness.selfsame.selfward.sellable.selloffs.sellouts.seltzers.selvaged.selvages.selvedge.semantic.semester.semiarid.semibald.semicoma.semideaf.semidome.semigala.semihard.semihigh.semihobo.semillon.semimatt.semimild.semimute.seminars.seminary.seminoma.seminude.semiopen.semioses.semiosis.semiotic.semioval.semipros.semisoft.semitist.semitone.semiwild.semolina.semplice.senarius.senators.sendable.sendoffs.senecios.senhoras.senhores.senilely.senility.sennight.senopias.senorita.sensated.sensates.senseful.sensible.sensibly.sensilla.sensoria.sensuous.sentence.sentient.sentimos.sentinel.sentries.sepaline.sepalled.sepaloid.sepalous.separate.seppukus.septages.septaria.septette.septical.septimes.septuple.sequelae.sequence.sequency.sequents.sequined.sequitur.sequoias.seraglio.seraphic.seraphim.seraphin.serenade.serenata.serenate.serenely.serenest.serenity.serfages.serfdoms.serfhood.serflike.sergeant.sergings.serially.seriated.seriates.seriatim.sericins.seriemas.seriffed.seringas.serjeant.sermonic.serology.serosity.serotine.serotiny.serotype.serovars.serpents.serpigos.serranid.serranos.serrated.serrates.serrying.servable.servants.serviced.servicer.services.servings.servitor.sesamoid.sessions.sesspool.sesterce.sestinas.sestines.setbacks.setenant.setiform.setlines.setscrew.settings.settlers.settling.settlors.setulose.setulous.sevenths.severals.severely.severest.severing.severity.seviches.sevrugas.sewerage.sewering.sexiness.sexology.sextains.sextants.sextarii.sextette.sextiles.sextuple.sextuply.sexually.sforzato.sfumatos.shabbier.shabbily.shacking.shackled.shackler.shackles.shackoes.shadblow.shadbush.shadchan.shaddock.shadiest.shadings.shadkhan.shadoofs.shadowed.shadower.shadrach.shafting.shagbark.shaggier.shaggily.shagging.shagreen.shahdoms.shaitans.shakable.shakeout.shakeups.shakiest.shaliest.shalloon.shallops.shallots.shallows.shamable.shamably.shamanic.shambled.shambles.shameful.shamisen.shammash.shammers.shammied.shammies.shamming.shamosim.shamoyed.shampoos.shamrock.shamuses.shandies.shanghai.shanking.shannies.shanteys.shanties.shantihs.shantung.shapable.shapeups.sharable.shariahs.sharkers.sharking.sharpens.sharpers.sharpest.sharpies.sharping.shashlik.shasliks.shatters.shauling.shavable.shavings.shawling.sheafing.shealing.shearers.shearing.sheathed.sheather.sheathes.sheaving.shebangs.shebeans.shebeens.shedable.shedders.shedding.shedlike.sheeneys.sheenful.sheenier.sheenies.sheening.sheepcot.sheepdog.sheepish.sheepman.sheepmen.sheerest.sheering.sheeters.sheetfed.sheeting.sheikdom.sheitans.shekalim.shekelim.shelduck.shelfful.shellack.shellacs.shellers.shellier.shelling.shelters.shelties.shelvers.shelvier.shelving.shending.shepherd.sheqalim.sherbert.sherbets.shereefs.sheriffs.sherlock.sheroots.sherries.shetland.shiatsus.shiatzus.shickers.shicksas.shielded.shielder.shieling.shifters.shiftier.shiftily.shifting.shigella.shiitake.shikaree.shikaris.shikkers.shiksehs.shilingi.shillala.shilling.shimmers.shimmery.shimmied.shimmies.shimming.shinbone.shindies.shindigs.shingled.shingler.shingles.shiniest.shinleaf.shinnery.shinneys.shinnied.shinnies.shinning.shiplaps.shipless.shipload.shipmate.shipment.shippens.shippers.shipping.shippons.shipside.shipways.shipworm.shipyard.shirkers.shirking.shirring.shirtier.shirting.shitakes.shithead.shitless.shitlist.shitload.shittahs.shittier.shittims.shitting.shivaree.shivered.shiverer.shivitis.shkotzim.shlemiel.shlepped.shlumped.shmaltzy.shmoozed.shmoozes.shnorrer.shoalest.shoalier.shoaling.shockers.shocking.shoddier.shoddies.shoddily.shoebill.shoehorn.shoelace.shoeless.shoepack.shoepacs.shoetree.shofroth.shogging.shogunal.shooling.shooters.shooting.shootout.shopboys.shopgirl.shophars.shoplift.shoppers.shopping.shoptalk.shopworn.shorings.shortage.shortcut.shortens.shortest.shortias.shorties.shorting.shortish.shotguns.shothole.shotting.shoulder.shouldst.shouters.shouting.shoveled.shoveler.showable.showboat.showcase.showdown.showered.showerer.showgirl.showiest.showings.showoffs.showring.showroom.showtime.shrapnel.shredded.shredder.shrewder.shrewdie.shrewdly.shrewing.shrewish.shrieked.shrieker.shrieval.shrieved.shrieves.shrilled.shriller.shrimped.shrimper.shrining.shrinker.shrivels.shrivers.shriving.shroffed.shrouded.shrugged.shrunken.shtetels.shuckers.shucking.shudders.shuddery.shuffled.shuffler.shuffles.shunners.shunning.shunpike.shunters.shunting.shushers.shushing.shutdown.shuteyes.shutoffs.shutouts.shutters.shutting.shuttled.shuttler.shuttles.shvartze.shwanpan.shylocks.shysters.sialidan.siamangs.siameses.sibilant.sibilate.siblings.sibyllic.sickbays.sickbeds.sickened.sickener.sickerly.sicklied.sicklier.sicklies.sicklily.sickling.sickness.sickouts.sickroom.siddurim.sidearms.sideband.sidebars.sidecars.sidehill.sidekick.sideline.sideling.sidelong.sidereal.siderite.sideshow.sideslip.sidespin.sidestep.sidewalk.sidewall.sideward.sideways.sidewise.sienites.sierozem.sieverts.siffleur.siftings.siganids.sighless.sighlike.sighters.sighting.sightsaw.sightsee.sigmoids.signages.signaled.signaler.signally.signeted.signiori.signiors.signiory.signoras.signpost.silenced.silencer.silences.silenter.silently.silesias.silicate.silicide.silicify.silicium.silicles.silicone.silicons.silicula.siliquae.siliques.silkiest.silklike.silkweed.silkworm.sillabub.sillibub.silliest.siloxane.siltiest.silurian.silurids.siluroid.silvered.silverer.silverly.silvexes.silvical.simaruba.simazine.simitars.simmered.simoleon.simoniac.simonies.simonist.simonize.simpered.simperer.simplest.simplify.simplism.simplist.simulant.simulars.simulate.sinapism.sincerer.sinciput.sinecure.sinewing.sinfonia.sinfonie.sinfully.singable.singeing.singlets.singling.singsong.singular.sinicize.sinister.sinkable.sinkages.sinkhole.sinology.sinopias.sintered.sinuated.sinuates.sinusoid.siphonal.siphoned.siphonic.sirenian.sirloins.siroccos.sirupier.siruping.sirvente.sissiest.sissyish.sistered.sisterly.sistroid.sistrums.sitarist.sithence.sitology.sittings.situated.situates.sitzmark.sixpence.sixpenny.sixteens.sixtieth.sixtyish.sizeable.sizeably.siziness.sizzlers.sizzling.sjamboks.skankers.skankier.skanking.skatings.skatoles.skeeters.skeining.skeletal.skeleton.skellums.skelping.skelters.skeptics.skerries.sketched.sketcher.sketches.skewback.skewbald.skewered.skewness.skiagram.skidders.skiddier.skidding.skiddoos.skidooed.skidways.skiffled.skiffles.skijorer.skilless.skillets.skillful.skilling.skimmers.skimming.skimpier.skimpily.skimping.skinfuls.skinhead.skinkers.skinking.skinless.skinlike.skinners.skinnier.skinning.skioring.skipjack.skiplane.skippers.skippets.skipping.skirling.skirmish.skirrets.skirring.skirters.skirting.skitters.skittery.skittish.skittles.skivvied.skivvies.sklented.skoaling.skreeghs.skreighs.skulkers.skulking.skullcap.skulling.skunkier.skunking.skyboard.skyborne.skyboxes.skydived.skydiver.skydives.skyhooks.skyjacks.skylarks.skylight.skylines.skysails.skysurfs.skywalks.skywards.skywrite.skywrote.slabbers.slabbery.slabbing.slablike.slackens.slackers.slackest.slacking.slaggier.slagging.slakable.slalomed.slalomer.slammers.slamming.slanders.slangier.slangily.slanging.slanting.slapdash.slapjack.slappers.slapping.slashers.slashing.slatches.slathers.slatiest.slatings.slattern.slatting.slavered.slaverer.slayable.sleaving.sleazier.sleazily.sleazoid.sledders.sledding.sledging.sleekens.sleekers.sleekest.sleekier.sleeking.sleepers.sleepier.sleepily.sleeping.sleetier.sleeting.sleeving.sleighed.sleigher.sleights.sleuthed.slickens.slickers.slickest.slicking.slidable.slideway.slighted.slighter.slightly.slimiest.slimmers.slimmest.slimming.slimness.slimsier.slingers.slinging.slinkier.slinkily.slinking.slipcase.slipform.slipknot.slipless.slipouts.slipover.slippage.slippers.slippery.slippier.slippily.slipping.slipshod.slipslop.slipsole.slipware.slipways.slithers.slithery.slitless.slitlike.slitters.slittier.slitting.slivered.sliverer.slivovic.slobbers.slobbery.slobbier.slobbish.sloggers.slogging.sloppier.sloppily.slopping.slopwork.sloshier.sloshing.slotback.slothful.slotters.slotting.slouched.sloucher.slouches.sloughed.slovenly.slowdown.slowness.slowpoke.slowworm.slubbers.slubbing.sludgier.sludging.sluffing.slugabed.slugfest.sluggard.sluggers.slugging.sluggish.sluicing.slumbers.slumbery.slumgums.slumisms.slumlord.slummers.slummier.slumming.slumping.slurping.slurried.slurries.slurring.slushier.slushily.slushing.sluttier.sluttish.slyboots.smackers.smacking.smallage.smallest.smallish.smallpox.smaltine.smaltite.smaragde.smaragds.smarmier.smarmily.smartass.smartens.smartest.smarties.smarting.smashers.smashing.smashups.smatters.smearers.smearier.smearing.smectite.smeddums.smeeking.smellers.smellier.smelling.smelters.smeltery.smelting.smerking.smidgens.smidgeon.smidgins.smilaxes.smirched.smirches.smirkers.smirkier.smirkily.smirking.smithers.smithery.smithies.smocking.smoggier.smogless.smokable.smokepot.smokiest.smolders.smooched.smoocher.smooches.smooshed.smooshes.smoothed.smoothen.smoother.smoothes.smoothie.smoothly.smothers.smothery.smoulder.smudgier.smudgily.smudging.smuggest.smuggled.smuggler.smuggles.smugness.smushing.smutched.smutches.smuttier.smuttily.smutting.snackers.snacking.snaffled.snaffles.snafuing.snaggier.snagging.snaglike.snailing.snakebit.snakepit.snakiest.snapback.snapless.snappers.snappier.snappily.snapping.snappish.snapshot.snapweed.snarfing.snarkier.snarkily.snarlers.snarlier.snarling.snatched.snatcher.snatches.snazzier.sneakers.sneakier.sneakily.sneaking.sneaping.snedding.sneerers.sneerful.sneerier.sneering.sneeshes.sneezers.sneezier.sneezing.snellest.snelling.snibbing.snickers.snickery.snicking.sniffers.sniffier.sniffily.sniffing.sniffish.sniffled.sniffler.sniffles.snifters.sniggers.sniggled.sniggler.sniggles.sniglets.snippers.snippets.snippety.snippier.snippily.snipping.snitched.snitcher.snitches.sniveled.sniveler.snobbery.snobbier.snobbily.snobbish.snobbism.snogging.snooding.snookers.snooking.snooling.snoopers.snoopier.snoopily.snooping.snootier.snootily.snooting.snoozers.snoozier.snoozing.snoozled.snoozles.snorkels.snorters.snorting.snottier.snottily.snoutier.snouting.snoutish.snowball.snowbank.snowbell.snowbelt.snowbird.snowbush.snowcaps.snowcats.snowdrop.snowfall.snowiest.snowland.snowless.snowlike.snowmelt.snowmold.snowpack.snowplow.snowshed.snowshoe.snowsuit.snubbers.snubbier.snubbing.snubness.snuffbox.snuffers.snuffier.snuffily.snuffing.snuffled.snuffler.snuffles.snuggery.snuggest.snuggies.snugging.snuggled.snuggles.snugness.soakages.soapbark.soapiest.soapless.soaplike.soapsuds.soapwort.soarings.soberest.sobering.soberize.sobriety.socagers.soccages.sociable.sociably.socially.societal.socketed.sockeyes.sockless.sodaless.sodalist.sodalite.sodality.sodamide.soddened.soddenly.sodomies.sodomist.sodomite.sodomize.sofabeds.softback.softball.softcore.softened.softener.softhead.softness.software.softwood.soggiest.soilages.soilless.soilures.sojourns.solacers.solacing.solander.solanine.solanins.solanums.solarise.solarism.solarium.solarize.solating.solation.solatium.soldered.solderer.soldiers.soldiery.solecise.solecism.solecist.solecize.soleless.solemner.solemnly.soleness.solenoid.solerets.soleuses.solfeges.solfeggi.solicits.solidago.solidary.solidest.solidify.solidity.soliquid.solitary.solitons.solitude.solleret.soloists.solonets.solonetz.solstice.solubles.solution.solvable.solvated.solvates.solvency.solvents.somberly.sombrely.sombrero.sombrous.somebody.somedeal.someones.somerset.sometime.someways.somewhat.somewhen.somewise.sonances.sonantal.sonantic.sonarman.sonarmen.sonatina.sonatine.songbird.songbook.songfest.songless.songlike.songster.sonhoods.sonicate.sonneted.sonobuoy.sonogram.sonorant.sonority.sonorous.sonships.sonsiest.soochong.soothers.soothest.soothing.soothsay.sootiest.sophisms.sophists.sopiting.soppiest.sopranos.sorbable.sorbates.sorbents.sorbitol.sorboses.sorcerer.sordidly.sordines.sorehead.soreness.sorghums.soricine.soroches.sororate.sorority.sorption.sorptive.sorriest.sorrowed.sorrower.sortable.sortably.sottedly.soubises.souchong.souffled.souffles.soughing.soulless.soullike.soulmate.soundbox.sounders.soundest.sounding.soundman.soundmen.soupcons.soupiest.soupless.souplike.sourball.sourcing.sourdine.sourness.sourpuss.soursops.sourwood.sousliks.soutache.soutanes.southern.southers.southing.southpaw.southron.souvenir.souvlaki.sovkhozy.sovranly.sovranty.sowbelly.sowbread.soybeans.soymilks.spaceman.spacemen.spaciest.spacings.spacious.spackled.spackles.spadeful.spadices.spadille.spadixes.spadones.spaeings.spaetzle.spagyric.spaldeen.spallers.spalling.spalpeen.spambots.spammers.spamming.spancels.spandrel.spandril.spangled.spangles.spaniels.spankers.spanking.spanless.spanners.spanning.spansule.spanworm.sparable.sparerib.spargers.sparging.sparkers.sparkier.sparkily.sparking.sparkish.sparkled.sparkler.sparkles.sparklet.sparlike.sparling.sparoids.sparrier.sparring.sparrows.sparsely.sparsest.sparsity.spartina.spasming.spastics.spathose.spatters.spatting.spatular.spatulas.spatzles.spavined.spawners.spawning.speakers.speaking.speaning.spearers.speargun.spearing.spearman.spearmen.speccing.specials.speciate.specific.specimen.specious.specking.speckled.speckles.spectate.specters.spectral.spectres.spectrum.specular.speculum.speeches.speeders.speedier.speedily.speeding.speedups.speedway.speeling.speering.speiling.speiring.speisses.spelaean.spellers.spelling.spelters.speltzes.spelunks.spencers.spenders.spendier.spending.spermary.spermine.spermous.sphagnum.sphenoid.spherics.spherier.sphering.spheroid.spherule.sphinges.sphingid.sphinxes.sphygmic.sphygmus.sphynxes.spicated.spiccato.spiciest.spiculae.spicular.spicules.spiculum.spiegels.spielers.spieling.spiering.spiffied.spiffier.spiffies.spiffily.spiffing.spikelet.spikiest.spilikin.spilings.spillage.spillers.spilling.spillway.spinachy.spinages.spinally.spindled.spindler.spindles.spinelle.spiniest.spinifex.spinless.spinners.spinnery.spinneys.spinnies.spinning.spinoffs.spinouts.spinster.spinulae.spinules.spiracle.spiraeas.spiraled.spirally.spirants.spiremes.spiriest.spirilla.spirited.spirting.spirulae.spirulas.spitball.spiteful.spitfire.spitters.spitting.spittles.spittoon.splashed.splasher.splashes.splatted.splatter.splaying.splendid.splendor.splenial.splenium.splenius.splicers.splicing.splining.splinted.splinter.splitter.splodged.splodges.sploshed.sploshes.splotchy.splurged.splurger.splurges.splutter.spodosol.spoilage.spoilers.spoiling.spoliate.spondaic.spondees.spongers.spongier.spongily.sponging.spongins.sponsion.sponsons.sponsors.spontoon.spoofers.spoofery.spoofing.spookery.spookier.spookily.spooking.spookish.spoolers.spooling.spooneys.spoonful.spoonier.spoonies.spoonily.spooning.spooring.sporadic.sporozoa.sporrans.sporters.sportful.sportier.sportily.sporting.sportive.sporular.sporules.spotless.spotters.spottier.spottily.spotting.spousals.spousing.spouters.spouting.spraddle.sprained.sprattle.sprawled.sprawler.sprayers.spraying.spreader.sprigged.sprigger.sprights.springal.springed.springer.springes.sprinkle.sprinted.sprinter.spritzed.spritzer.spritzes.sprocket.sprouted.sprucely.sprucest.sprucier.sprucing.spryness.spudders.spudding.spumiest.spumones.spumonis.spunkier.spunkies.spunkily.spunking.spurgall.spurious.spurners.spurning.spurrers.spurreys.spurrier.spurries.spurring.spurters.spurting.spurtles.sputniks.sputters.sputtery.spyglass.squabble.squadded.squadron.squalene.squalled.squaller.squalors.squamate.squamose.squamous.squander.squarely.squarers.squarest.squaring.squarish.squashed.squasher.squashes.squatted.squatter.squawked.squawker.squeaked.squeaker.squealed.squealer.squeegee.squeezed.squeezer.squeezes.squegged.squelchy.squibbed.squidded.squiffed.squiggle.squiggly.squilgee.squillae.squillas.squinted.squinter.squireen.squiring.squirish.squirmed.squirmer.squirrel.squirted.squirter.squished.squishes.squooshy.squushed.squushes.sraddhas.stabbers.stabbing.stabiles.stablers.stablest.stabling.stablish.staccati.staccato.stackers.stacking.stackups.staddles.stadiums.staffers.staffing.stageful.staggard.staggart.staggers.staggery.staggier.staggies.stagging.stagiest.stagings.stagnant.stagnate.staidest.stainers.staining.stairway.staithes.stakeout.stalkers.stalkier.stalkily.stalking.stalling.stallion.stalwart.stamened.staminal.staminas.stammels.stammers.stampede.stampers.stamping.stanched.stancher.stanches.stanchly.standard.standbys.standees.standers.standing.standish.standoff.standout.standpat.standups.stanging.stanhope.stanines.stannary.stannite.stannous.stannums.stanzaed.stanzaic.stapedes.stapelia.staplers.stapling.starched.starches.stardoms.stardust.starfish.stargaze.starkers.starkest.starless.starlets.starlike.starling.starnose.starrier.starring.starship.starters.starting.startled.startler.startles.startups.starvers.starving.starwort.stashing.stasimon.statable.statedly.statical.statices.staticky.stations.statisms.statists.statives.statuary.statures.statuses.statutes.staumrel.staysail.steadied.steadier.steadies.steadily.steading.stealage.stealers.stealing.stealths.stealthy.steamers.steamier.steamily.steaming.steapsin.stearate.stearine.stearins.steatite.stedfast.steeking.steelier.steelies.steeling.steenbok.steepens.steepers.steepest.steeping.steepish.steepled.steeples.steerage.steerers.steering.steeving.stegodon.steinbok.stellate.stellify.stellite.stemless.stemlike.stemmata.stemmers.stemmery.stemmier.stemming.stemsons.stemware.stenches.stencils.stengahs.stenosed.stenoses.stenosis.stenotic.stentors.stepdame.steplike.steppers.stepping.stepsons.stepwise.stereoed.sterical.sterigma.sterlets.sterling.sternest.sternite.sternson.sternums.sternway.steroids.stertors.stetsons.stetting.stewable.stewards.stewbums.stewpans.sthenias.stibines.stibiums.stibnite.stickers.stickful.stickier.stickies.stickily.sticking.stickled.stickler.stickles.stickman.stickmen.stickout.stickpin.stickums.stickups.stiction.stiffens.stiffest.stiffies.stiffing.stiffish.stiflers.stifling.stigmata.stilbene.stilbite.stiletto.stillest.stillier.stilling.stillman.stillmen.stilting.stimulus.stimying.stingers.stingier.stingily.stinging.stingray.stinkard.stinkbug.stinkers.stinkier.stinking.stinkpot.stinters.stinting.stipends.stipites.stippled.stippler.stipples.stipular.stipuled.stipules.stirrers.stirring.stirrups.stitched.stitcher.stitches.stithied.stithies.stobbing.stoccado.stoccata.stockade.stockage.stockcar.stockers.stockier.stockily.stocking.stockish.stockist.stockman.stockmen.stockpot.stodgier.stodgily.stodging.stoicism.stokesia.stolider.stolidly.stollens.stolonic.stolport.stomachs.stomachy.stomatal.stomates.stomatic.stomodea.stompers.stomping.stonable.stonefly.stoniest.stooging.stookers.stooking.stoolies.stooling.stoopers.stooping.stopbank.stopcock.stopgaps.stopoffs.stopover.stoppage.stoppers.stopping.stoppled.stopples.stopword.storable.storages.storaxes.storeyed.stormier.stormily.storming.storying.stotinka.stotinki.stotinov.stotting.stounded.stoutens.stoutest.stoutish.stowable.stowages.stowaway.straddle.strafers.strafing.straggle.straggly.straight.strained.strainer.straiten.straiter.straitly.stramash.stramony.stranded.strander.stranger.stranges.strangle.strapped.strapper.strasses.strategy.stratify.stratous.stratums.stravage.stravaig.strawhat.strawier.strawing.strayers.straying.streaked.streaker.streamed.streamer.streeked.streeker.streeled.strength.stressed.stresses.stressor.stretchy.strettas.strettos.streusel.strewers.strewing.striated.striates.striatum.stricken.strickle.stricter.strictly.stridden.strident.striders.striding.stridors.strigils.strigose.strikers.striking.stringed.stringer.stripers.stripier.striping.stripped.stripper.strivers.striving.strobila.strobile.strobili.strobils.strokers.stroking.strolled.stroller.stromata.stronger.strongly.strongyl.strontia.strontic.strophes.strophic.stropped.stropper.strowing.stroyers.stroying.strucken.strudels.struggle.strummed.strummer.strumose.strumous.strumpet.strunted.strutted.strutter.stubbier.stubbily.stubbing.stubbled.stubbles.stubborn.stuccoed.stuccoer.stuccoes.studbook.studdies.studding.students.studfish.studiers.studious.studlier.studwork.studying.stuffers.stuffier.stuffily.stuffing.stuivers.stultify.stumbled.stumbler.stumbles.stumming.stumpage.stumpers.stumpier.stumping.stunners.stunning.stunsail.stunting.stuntman.stuntmen.stupider.stupidly.sturdied.sturdier.sturdies.sturdily.sturgeon.stutters.stylings.stylised.styliser.stylises.stylists.stylites.stylitic.stylized.stylizer.stylizes.styluses.stymying.styptics.styraxes.styrenes.suasions.subabbot.subacrid.subacute.subadars.subadult.subagent.subahdar.subareas.subatoms.subaural.subaxial.subbases.subbasin.subbings.subblock.subbreed.subcaste.subcause.subcells.subchief.subclaim.subclans.subclass.subclerk.subcodes.subcools.subcults.subcutes.subcutis.subdeans.subdepot.subduals.subduced.subduces.subducts.subduers.subduing.subdural.subdwarf.subedits.subentry.subepoch.suberect.suberins.suberise.suberize.suberose.suberous.subfield.subfiles.subfixes.subfloor.subfluid.subframe.subfuscs.subgenre.subgenus.subgoals.subgrade.subgraph.subgroup.subheads.subhuman.subhumid.subideas.subindex.subitems.subjects.subjoins.sublated.sublates.sublease.sublevel.sublimed.sublimer.sublimes.sublimit.sublines.sublunar.submenus.submerge.submerse.subnasal.subniche.subnodal.subocean.suboptic.suborder.suborned.suborner.subovate.suboxide.subpanel.subparts.subpenas.subphase.subphyla.subplots.subpoena.subpolar.subpubic.subraces.subrents.subrings.subrules.subsales.subscale.subsects.subsense.subseres.subserve.subshaft.subshell.subshrub.subsided.subsider.subsides.subsists.subsites.subskill.subsoils.subsolar.subsonic.subspace.substage.substate.subsumed.subsumes.subtasks.subtaxon.subteens.subtends.subtests.subtexts.subtheme.subtiler.subtilin.subtilty.subtitle.subtlest.subtlety.subtones.subtonic.subtopia.subtopic.subtotal.subtract.subtrend.subtribe.subtunic.subtypes.subulate.subunits.suburban.suburbed.suburbia.subvened.subvenes.subverts.subvicar.subviral.subvirus.subvocal.subwayed.subworld.subzones.succeeds.succinct.succinic.succinyl.succored.succorer.succours.succubae.succubas.succubus.succumbs.suchlike.suchness.suckered.suckfish.suckiest.sucklers.suckless.suckling.sucrases.sucroses.suctions.sudaries.sudarium.sudation.sudatory.suddenly.sudsiest.sudsless.suffaris.suffered.sufferer.sufficed.sufficer.suffices.suffixal.suffixed.suffixes.sufflate.suffrage.suffused.suffuses.sugarers.sugarier.sugaring.suggests.suicidal.suicided.suicides.suitable.suitably.suitcase.suitings.suitlike.sukiyaki.sulcated.sulfated.sulfates.sulfides.sulfinyl.sulfites.sulfitic.sulfones.sulfonic.sulfonyl.sulfured.sulfuret.sulfuric.sulfuryl.sulkiest.sullages.sullener.sullenly.sullying.sulphate.sulphide.sulphids.sulphite.sulphone.sulphurs.sulphury.sultanas.sultanic.sultrier.sultrily.summable.summands.summated.summates.summered.summerly.summital.summited.summitry.summoned.summoner.sumoists.sumpters.sumpweed.sunbaked.sunbathe.sunbaths.sunbeams.sunbeamy.sunbelts.sunbirds.sunblock.sunburns.sunburnt.sunburst.sunchoke.sundecks.sundered.sunderer.sundials.sundowns.sundress.sundries.sundrily.sundrops.sunglass.sunglows.sunlamps.sunlands.sunlight.sunniest.sunporch.sunproof.sunrises.sunroofs.sunrooms.sunscald.sunshade.sunshine.sunshiny.sunspots.sunstone.sunsuits.sunwards.superadd.superbad.superber.superbly.superbug.supercar.supercop.superego.superfan.superfix.superhit.superhot.supering.superior.superjet.superlay.superlie.superman.supermen.supermom.supernal.superpro.supersex.superspy.supertax.supinate.supinely.supplant.supplely.supplest.supplied.supplier.supplies.suppling.supports.supposal.supposed.supposer.supposes.suppress.supremer.supremes.supremos.surbased.surbases.surcease.surcoats.surefire.sureness.sureties.surfable.surfaced.surfacer.surfaces.surfbird.surfboat.surfeits.surffish.surfiest.surfings.surflike.surfside.surgeons.surgical.suricate.surliest.surmised.surmiser.surmises.surmount.surnamed.surnamer.surnames.surplice.surprint.surprise.surprize.surround.surroyal.surtaxed.surtaxes.surtitle.surtouts.surveils.surveyed.surveyor.survival.survived.surviver.survives.survivor.suspects.suspends.suspense.suspired.suspires.sustains.susurrus.suturing.suzerain.svarajes.svedberg.sveltely.sveltest.swabbers.swabbies.swabbing.swaddled.swaddles.swaggers.swaggies.swagging.swainish.swallows.swampers.swampier.swamping.swampish.swanherd.swankest.swankier.swankily.swanking.swanlike.swannery.swanning.swanpans.swanskin.swappers.swapping.swarajes.swarding.swarmers.swarming.swashers.swashing.swastica.swastika.swatches.swathers.swathing.swatters.swatting.swayable.swayback.swearers.swearing.sweatbox.sweaters.sweatier.sweatily.sweating.sweeneys.sweenies.sweepers.sweepier.sweeping.sweetens.sweetest.sweeties.sweeting.sweetish.sweetsop.swellest.swelling.swelters.swervers.swerving.swiddens.swifters.swiftest.swiftlet.swiggers.swigging.swillers.swilling.swimmers.swimmier.swimmily.swimming.swimsuit.swimwear.swindled.swindler.swindles.swinepox.swingbys.swingers.swingier.swinging.swingled.swingles.swingman.swingmen.swinking.swinneys.swipples.swirlier.swirling.swishers.swishier.swishing.switched.switcher.switches.swithers.swiveled.swizzled.swizzler.swizzles.swobbers.swobbing.swooners.swoonier.swooning.swoopers.swoopier.swooping.swooshed.swooshes.swopping.swordman.swordmen.swotters.swotting.swounded.swouning.sybarite.sycamine.sycamore.sycomore.syconium.syenites.syenitic.syllabic.syllable.syllabub.syllabus.sylphids.sylphish.sylvatic.sylvines.sylvites.symbions.symbiont.symbiote.symbiots.symboled.symbolic.symmetry.sympathy.sympatry.symphony.sympodia.symposia.symptoms.synagogs.synanons.synapsed.synapses.synapsid.synapsis.synaptic.syncarps.syncarpy.synching.synchros.syncline.syncopal.syncopes.syncopic.syncytia.syndeses.syndesis.syndetic.syndical.syndrome.synectic.synergia.synergic.synergid.synfuels.syngamic.syngases.syngenic.synkarya.synonyme.synonyms.synonymy.synopses.synopsis.synoptic.synovial.synovias.syntagma.syntagms.syntaxes.synthpop.syntonic.syphered.syphilis.syphoned.syrettes.syringas.syringed.syringes.syrinxes.syrphian.syrphids.syrupier.syruping.sysadmin.systemic.systoles.systolic.syzygial.syzygies.tabanids.tabarded.tabarets.tabbises.tabbying.tabering.tabetics.tableaus.tableaux.tableful.tableted.tabletop.tabloids.tabooing.tabooley.taborers.taborets.taborine.taboring.taborins.tabouleh.taboulis.taboured.tabourer.tabouret.tabulate.tachinid.tachisme.tachisms.tachiste.tachists.tachyons.taciturn.tackiest.tacklers.tackless.tackling.tacnodes.taconite.tacrines.tactical.tactions.tactless.tadpoles.taffarel.tafferel.taffetas.taffrail.tagalong.tagboard.taggants.taglines.tagmemes.tagmemic.taiglach.tailback.tailbone.tailcoat.tailfans.tailfins.tailgate.tailings.taillamp.tailless.tailleur.taillike.tailored.tailpipe.tailrace.tailskid.tailspin.tailwind.tainting.takeable.takeaway.takedown.takeoffs.takeouts.takeover.takingly.talapoin.talcking.taleggio.talented.talesman.talesmen.taleysim.talipeds.talipots.talisman.talkable.talkback.talkiest.talkings.tallaged.tallages.tallboys.talliers.tallises.tallisim.talliths.tallitim.tallness.tallowed.tallyhos.tallying.tallyman.tallymen.talmudic.talookas.tamandua.tamandus.tamarack.tamaraos.tamaraus.tamarind.tamarins.tamarisk.tamashas.tambalas.tamboura.tambours.tamburas.tameable.tameless.tameness.tampalas.tampered.tamperer.tampions.tamponed.tanagers.tanbarks.tandoori.tandoors.tangelos.tangence.tangency.tangents.tangible.tangibly.tangiest.tanglers.tanglier.tangling.tangoing.tangrams.tanistry.tankages.tankards.tankfuls.tankinis.tankless.tanklike.tankship.tannable.tannages.tannates.tannings.tantalic.tantalum.tantalus.tantaras.tantrism.tantrums.tanyards.tapadera.tapadero.tapeable.tapeless.tapelike.tapeline.tapenade.taperers.tapering.tapestry.tapeworm.tapholes.taphouse.tapiocas.tappable.tappings.taprooms.taproots.tapsters.taqueria.tarantas.tarboosh.tardiest.tardyons.targeted.tariffed.tarlatan.tarletan.tarnally.tarpaper.tarragon.tarriers.tarriest.tarrying.tarsiers.tartanas.tartaric.tartiest.tartlets.tartness.tartrate.tartufes.tartuffe.tarweeds.taskbars.taskwork.tasseled.tastable.tasteful.tastiest.tatouays.tattered.tattiest.tattings.tattlers.tattling.tattooed.tattooer.taunters.taunting.taurines.tautaugs.tautened.tautness.tautomer.tautonym.tavernas.taverner.tawdrier.tawdries.tawdrily.tawniest.taxables.taxation.taxicabs.taxingly.taxiways.taxonomy.taxpayer.teaberry.teaboard.teabowls.teaboxes.teacakes.teacarts.teachers.teaching.teahouse.teakwood.teamaker.teammate.teamster.teamwork.tearable.tearaway.teardown.teardrop.teariest.tearless.tearooms.teasable.teaseled.teaseler.teashops.teaspoon.teatimes.teawares.teazeled.teazling.techiest.technics.tectites.tectonic.teddered.teenaged.teenager.teeniest.teensier.teenybop.teetered.teethers.teething.teetotal.teetotum.tefillin.tegmenta.tegminal.tegument.tegumina.teiglach.tektites.tektitic.telecast.telecoms.telefilm.telegony.telegram.telemark.teleosts.telepath.teleplay.teleport.telerans.teleshop.telestic.teletext.telethon.teletype.teleview.televise.telexing.telfered.telfords.tellable.telltale.telluric.telneted.telomere.telphers.telsonic.temblors.temerity.temperas.tempered.temperer.tempests.templars.template.templets.temporal.tempters.tempting.tempuras.tenacity.tenacula.tenaille.tenanted.tenantry.tendance.tendence.tendency.tendered.tenderer.tenderly.tendrils.tenebrae.tenement.tenesmic.tenesmus.tenfolds.teniases.teniasis.tennises.tennists.tenoners.tenoning.tenorist.tenorite.tenotomy.tenpence.tenpenny.tensible.tensibly.tensions.tentacle.tentages.tentered.tentiest.tentless.tentlike.tentoria.tenurial.tenuring.teocalli.teosinte.tepefied.tepefies.tephrite.tepidity.tequilas.terabyte.teraflop.teraohms.teraphim.teratism.teratoid.teratoma.terawatt.terbiums.tercelet.terebene.tergites.teriyaki.terminal.terminus.termites.termitic.termless.termtime.ternions.terpenes.terpenic.terpinol.terraced.terraces.terrains.terranes.terrapin.terraria.terrases.terrazzo.terreens.terrella.terrenes.terrible.terribly.terriers.terrific.terrines.tertials.tertians.tertiary.terylene.tesserae.testable.testates.testator.testicle.testiest.testoons.testudos.tetanics.tetanies.tetanise.tetanize.tetanoid.tetchier.tetchily.tethered.tetotums.tetracid.tetradic.tetragon.tetramer.tetrapod.tetrarch.tetrodes.tetroxid.tevatron.textbook.textiles.textless.textuary.textural.textured.textures.thacking.thalamic.thalamus.thallium.thalloid.thallous.thalwegs.thanages.thanatos.thankers.thankful.thanking.thataway.thatched.thatcher.thatches.thawless.thearchy.theaters.theatres.theatric.thebaine.theelins.theelols.theistic.thelitis.thematic.thenages.theocrat.theodicy.theogony.theologs.theology.theonomy.theorbos.theorems.theories.theorise.theorist.theorize.therefor.theremin.theriaca.theriacs.therians.thermals.thermels.thermion.thermite.thermits.theropod.thesauri.thespian.thetical.theurgic.thewiest.thewless.thiamine.thiamins.thiazide.thiazine.thiazins.thiazole.thiazols.thickens.thickest.thickets.thickety.thickish.thickset.thievery.thieving.thievish.thimbles.thinclad.thindown.thinkers.thinking.thinners.thinness.thinnest.thinning.thinnish.thionate.thionine.thionins.thionyls.thiophen.thiotepa.thiourea.thirlage.thirling.thirsted.thirster.thirteen.thirties.thisaway.thistles.tholepin.thoracal.thoraces.thoracic.thoraxes.thorites.thoriums.thornier.thornily.thorning.thorough.thoughts.thousand.thowless.thraldom.thralled.thrashed.thrasher.thrashes.thrawart.thrawing.thrawnly.threaded.threader.threaped.threaper.threated.threaten.threeped.threnode.threnody.threshed.thresher.threshes.thrilled.thriller.thrivers.thriving.throated.throbbed.throbber.thrombin.thrombus.thronged.throning.throstle.throttle.throwers.throwing.thrummed.thrummer.thruputs.thrushes.thrusted.thruster.thrustor.thruways.thudding.thuggees.thuggery.thuggish.thuliums.thumbing.thumbkin.thumbnut.thumpers.thumping.thunders.thundery.thunking.thurible.thurifer.thwacked.thwacker.thwarted.thwarter.thwartly.thymiest.thymines.thymosin.thymuses.thyreoid.thyroids.thyroxin.thyrsoid.ticketed.tickings.ticklers.tickling.ticklish.tickseed.ticktack.ticktock.tiddlers.tideland.tideless.tidelike.tidemark.tiderips.tideways.tidiness.tidytips.tiebacks.tiebreak.tieclasp.tiercels.tiffined.tigereye.tigerish.tightens.tightest.tightwad.tilapias.tilefish.tilelike.tillable.tillages.tillered.tillites.tiltable.tiltyard.timaraus.timbales.timbered.timbrels.timecard.timeless.timelier.timeline.timeouts.timework.timeworn.timidest.timidity.timolols.timorous.timpanum.tinamous.tincting.tincture.tinfoils.tingeing.tinglers.tinglier.tingling.tinhorns.tininess.tinkered.tinkerer.tinklers.tinklier.tinkling.tinniest.tinnitus.tinplate.tinseled.tinselly.tinsmith.tinsnips.tinstone.tintings.tintless.tintypes.tinwares.tinworks.tipcarts.tippable.tippiest.tipplers.tippling.tippytoe.tipsheet.tipsiest.tipstaff.tipsters.tipstock.tiramisu.tiredest.tireless.tiresome.tirrivee.tissuing.tissular.titanate.titaness.titanias.titanism.titanite.titanium.titanous.tithable.tithings.tithonia.titivate.titlarks.titlists.titmouse.titrable.titrants.titrated.titrates.titrator.tittered.titterer.tittuped.tittuppy.titubant.titulars.titulary.toadfish.toadflax.toadless.toadlike.toadying.toadyish.toadyism.toasters.toastier.toasting.tobaccos.toboggan.toccatas.tochered.tocology.toddlers.toddling.toeholds.toenails.toepiece.toeplate.toeshoes.tofuttis.together.togglers.toggling.toileted.toiletry.toilette.toilsome.toilworn.tokamaks.tokening.tokenism.tokology.tokomaks.tokonoma.tolarjev.tolbooth.tolerant.tolerate.tolidine.tolidins.tollages.tollbars.tollgate.tollways.toluates.toluenes.toluides.toluidin.toluoles.tomahawk.tomalley.tomatoes.tomatoey.tombacks.tombless.tomblike.tombolas.tombolos.tomentum.tomfools.tommyrot.tomogram.tomorrow.tompions.tonality.tonearms.toneless.tonetics.tonettes.tonguing.tonicity.tonights.tonishly.tonnages.tonneaus.tonneaux.tonsilar.tonsured.tonsures.tontines.toolbars.toolhead.toolings.toolless.toolroom.toolshed.toothier.toothily.toothing.tootlers.tootling.tootsies.topazine.topcoats.topcross.topkicks.topknots.toplines.toplofty.topmasts.topnotch.topology.toponyms.toponymy.topotype.toppings.toppling.topsails.topsider.topsides.topsoils.topspins.topstone.topworks.torchere.torchier.torching.torchons.toreador.toreutic.torments.tornadic.tornados.tornillo.toroidal.torosity.torpedos.torpidly.torquate.torquers.torquing.torrents.torrider.torridly.torsades.torsions.tortilla.tortious.tortoise.tortonis.tortuous.tortured.torturer.tortures.tosspots.tostadas.tostados.totaling.totalise.totalism.totalist.totality.totalize.totalled.toteable.totemism.totemist.totemite.tottered.totterer.touchers.touchier.touchily.touching.touchpad.touchups.toughens.toughest.toughies.toughing.toughish.touracos.tourings.tourisms.tourista.tourists.touristy.tourneys.tousling.touzling.tovarich.tovarish.towardly.towaways.towboats.toweling.towelled.towerier.towering.towheads.towlines.towmonds.towmonts.townfolk.townhome.townless.townlets.township.townsman.townsmen.townwear.towpaths.towplane.towropes.towsacks.toxaemia.toxaemic.toxemias.toxicant.toxicity.toyshops.trabeate.tracheae.tracheal.tracheas.tracheid.trachled.trachles.trachoma.trachyte.tracings.trackage.trackers.tracking.trackman.trackmen.trackpad.trackway.tractate.tractile.traction.tractive.tractors.tradable.tradeoff.traditor.traduced.traducer.traduces.traffics.tragical.tragopan.traiking.trailers.trailing.trainees.trainers.trainful.training.trainman.trainmen.trainway.traipsed.traipses.traitors.trajects.tramcars.trameled.tramells.tramless.tramline.trammels.tramming.trampers.trampier.tramping.trampish.trampled.trampler.tramples.tramroad.tramways.tranches.trancing.trangams.trannies.tranquil.transact.transect.transept.transfer.transfix.tranship.transits.transmit.transoms.transude.trapball.trapdoor.trapesed.trapeses.trapezes.trapezia.trapezii.traplike.trapline.trapnest.trappean.trappers.trapping.trappose.trappous.traprock.trapunto.trashers.trashier.trashily.trashing.trashman.trashmen.trauchle.traumata.travails.traveled.traveler.travelog.traverse.travesty.travoise.trawlers.trawleys.trawling.trawlnet.trayfuls.treacles.treaders.treading.treadled.treadler.treadles.treasons.treasure.treasury.treaters.treaties.treating.treatise.trebling.trecento.treddled.treddles.treelawn.treeless.treelike.treenail.treetops.trefoils.trehalas.trekkers.trekking.trembled.trembler.trembles.tremolos.trenails.trenched.trencher.trenches.trendier.trendies.trendily.trending.trendoid.trepangs.trephine.trespass.tressels.tressier.tressour.tressure.trestles.trevally.triacids.triadics.triadism.triaging.triangle.triarchy.triassic.triaxial.triazine.triazins.triazole.tribades.tribadic.tribally.tribasic.tribrach.tribunal.tribunes.tributes.trichina.trichite.trichoid.trichome.trickers.trickery.trickier.trickily.tricking.trickish.trickled.trickles.triclads.tricolor.tricorne.tricorns.trictrac.tricycle.tridents.triduums.triennia.trientes.triethyl.trifecta.triflers.trifling.trifocal.triforia.triggers.triggest.trigging.triglyph.trigness.trigonal.trigrams.trigraph.trihedra.trilbies.triliths.trillers.trilling.trillion.trillium.trilobal.trilobed.trimaran.trimeric.trimeter.trimmers.trimmest.trimming.trimness.trimorph.trimotor.trindled.trindles.trinkets.trinkums.trinodal.triolets.trioxide.trioxids.tripacks.tripedal.triphase.triplane.triplets.tripling.triplite.triploid.tripodal.tripodic.tripolis.triposes.trippers.trippets.trippier.tripping.triptane.triptans.triptyca.triptych.tripwire.triremes.triscele.trisects.trisemes.trisemic.trishaws.triskele.trisomes.trisomic.tristate.tristeza.tristful.tristich.trithing.triticum.tritiums.tritomas.tritones.triumphs.triumvir.triunity.trivalve.troaking.trochaic.trochars.trochees.trochili.trochils.trochlea.trochoid.trocking.troffers.troilism.troilite.trolands.trollers.trolleys.trollied.trollies.trolling.trollops.trollopy.trombone.trommels.tromping.troopers.troopial.trooping.trophied.trophies.tropical.tropines.tropisms.troponin.trothing.trotline.trotters.trotting.troubled.troubler.troubles.trounced.trouncer.trounces.troupers.troupial.trouping.trousers.troutier.trouvere.trouveur.troweled.troweler.trowsers.truanted.truantly.truantry.truckage.truckers.truckful.trucking.truckled.truckler.truckles.truckman.truckmen.trudgens.trudgeon.trudgers.trudging.trueblue.trueborn.truebred.truelove.trueness.truffled.truffles.truistic.trumeaux.trumpery.trumpets.trumping.truncate.trundled.trundler.trundles.trunkful.trunnels.trunnion.trussers.trussing.trusteed.trustees.trusters.trustful.trustier.trusties.trustily.trusting.trustors.truthful.tryingly.trypsins.trysails.trysters.trysting.tryworks.tsardoms.tsarevna.tsarinas.tsarisms.tsarists.tsaritza.tsatskes.tsktsked.tsorriss.tsunamic.tsunamis.tuataras.tuateras.tubaists.tubbable.tubbiest.tubeless.tubelike.tubenose.tubercle.tuberoid.tuberose.tuberous.tubework.tubeworm.tubiform.tubulate.tubulins.tubulose.tubulous.tubulure.tuckahoe.tuckered.tuckshop.tuftiest.tuftings.tugboats.tughriks.tuitions.tullibee.tumblers.tumbling.tumbrels.tumbrils.tumefied.tumefies.tumesced.tumesces.tumidity.tummlers.tumorous.tumpline.tumulose.tumulous.tuneable.tuneably.tuneless.tungsten.tungstic.tunicate.tunicles.tunnages.tunneled.tunneler.tuppence.tuppenny.turacous.turbaned.turbeths.turbidly.turbinal.turbines.turbiths.turbocar.turbofan.turbojet.turfiest.turfless.turflike.turfskis.turgency.turgidly.turgites.turistas.turmeric.turmoils.turnable.turncoat.turndown.turnhall.turnings.turnkeys.turnoffs.turnouts.turnover.turnpike.turnsole.turnspit.turpeths.turquois.turreted.turrical.turtlers.turtling.tuskless.tusklike.tussises.tussling.tussocks.tussocky.tussores.tussucks.tutelage.tutelars.tutelary.tutorage.tutoress.tutorial.tutoring.tutoyers.tuxedoed.tuxedoes.twaddled.twaddler.twaddles.twangers.twangier.twanging.twangled.twangler.twangles.twankies.twasomes.twattled.twattles.tweakier.tweaking.tweedier.tweedled.tweedles.tweeners.tweeness.tweenies.tweeters.tweeting.tweezers.tweezing.twelfths.twelvemo.twenties.twibills.twiddled.twiddler.twiddles.twiggier.twigging.twigless.twiglike.twilight.twilling.twinborn.twinging.twiniest.twinight.twinjets.twinkies.twinkled.twinkler.twinkles.twinning.twinsets.twinship.twirlers.twirlier.twirling.twisters.twistier.twisting.twitched.twitcher.twitches.twitters.twittery.twitting.twofolds.twoonies.twopence.twopenny.twosomes.tylosins.tympanal.tympanic.tympanum.typeable.typebars.typecase.typecast.typeface.typesets.typhoids.typhonic.typhoons.typhuses.typified.typifier.typifies.typology.tyramine.tyrannic.tyrosine.tzardoms.tzarevna.tzarinas.tzarisms.tzarists.tzaritza.tziganes.tzitzith.ubieties.ubiquity.udometer.udometry.uglified.uglifier.uglifies.ugliness.uintaite.ukeleles.ukuleles.ulcerate.ulcering.ulcerous.ulexites.ulterior.ultimacy.ultimata.ultimate.ultradry.ultrahip.ultrahot.ultraism.ultraist.ultralow.ultrared.ululated.ululates.umangite.umbellar.umbelled.umbellet.umbering.umbilici.umbonate.umbrages.umbrella.umbrette.umlauted.umpirage.umpiring.umteenth.unabated.unabused.unacidic.unafraid.unageing.unagreed.unakites.unallied.unamazed.unamused.unanchor.unaneled.unarched.unargued.unarming.unartful.unatoned.unavowed.unawaked.unawares.unbacked.unbaling.unbanded.unbanned.unbarbed.unbarred.unbasted.unbathed.unbeared.unbeaten.unbelief.unbelted.unbended.unbenign.unbiased.unbidden.unbilled.unbitted.unbitten.unbitter.unblamed.unblocks.unbloody.unbobbed.unbodied.unboiled.unbolted.unbonded.unbonnet.unbooted.unbosoms.unbottle.unbought.unbouncy.unbowing.unboxing.unbraced.unbraces.unbraids.unbraked.unbrakes.unbreech.unbridle.unbright.unbroken.unbuckle.unbuilds.unbundle.unburden.unburied.unburned.unbusted.unbutton.uncaging.uncaking.uncalled.uncandid.uncanned.uncapped.uncarded.uncaring.uncarted.uncarved.uncashed.uncasing.uncasked.uncatchy.uncaught.uncaused.unchains.unchairs.unchancy.uncharge.unchaste.unchewed.unchicly.unchoked.unchokes.unchosen.unchurch.uncially.unciform.uncinate.unclamps.unclasps.unclassy.unclawed.unclench.unclinch.uncloaks.unclosed.uncloses.unclothe.unclouds.uncloudy.uncloyed.uncoated.uncocked.uncoffin.uncoiled.uncoined.uncombed.uncomely.uncommon.uncooked.uncooled.uncorked.uncouple.uncovers.uncrated.uncrates.uncreate.uncrewed.uncrowns.unctions.unctuous.uncuffed.uncurbed.uncurled.uncursed.undamped.undaring.undecked.undenied.undented.underact.underage.underarm.underate.underbid.underbud.underbuy.undercut.underdid.underdog.undereat.underfed.underfur.undergod.underjaw.underlap.underlay.underlet.underlie.underlip.underlit.underpay.underpin.underran.underrun.undersea.underset.undertax.undertow.underuse.underway.undevout.undimmed.undoable.undocile.undocked.undoings.undotted.undouble.undraped.undrapes.undreamt.undubbed.undulant.undulate.undulled.unearned.unearths.uneasier.uneasily.unedible.unedited.unending.unenvied.unequals.unerased.unerotic.unerring.unevaded.unevener.unevenly.unexotic.unexpert.unfading.unfairer.unfairly.unfaiths.unfallen.unfamous.unfasten.unfeared.unfelted.unfenced.unfences.unfetter.unfilial.unfilled.unfilmed.unfished.unfitted.unfixing.unflashy.unflawed.unflexed.unfluted.unfoiled.unfolded.unfolder.unforced.unforged.unforgot.unforked.unformed.unfought.unframed.unfreeze.unfrocks.unfrozen.unfunded.unfurled.ungainly.ungalled.ungarbed.ungazing.ungelded.ungenial.ungentle.ungently.ungifted.ungirded.ungiving.unglazed.ungloved.ungloves.ungluing.ungotten.ungowned.ungraced.ungraded.ungreedy.unground.unguards.unguenta.unguents.unguided.ungulate.unhailed.unhaired.unhairer.unhallow.unhalved.unhanded.unhanged.unharmed.unhatted.unhealed.unheated.unhedged.unheeded.unhelmed.unhelped.unheroic.unhinged.unhinges.unholier.unholily.unhooded.unhooked.unhorsed.unhorses.unhoused.unhouses.unhusked.unialgal.uniaxial.unicolor.unicorns.unicycle.unideaed.unifaces.unifiers.unifilar.uniforms.unifying.unilobed.unimbued.unionise.unionism.unionist.unionize.unipolar.uniquely.uniquest.unironed.unironic.unisexes.unisonal.unissued.unitages.unitards.unitedly.unitized.unitizer.unitizes.unitrust.univalve.universe.univocal.unjammed.unjoined.unjoints.unjoyful.unjudged.unjustly.unkeeled.unkenned.unkennel.unkinder.unkindly.unkingly.unkinked.unkissed.unknowns.unkosher.unlacing.unlading.unlashed.unlashes.unlawful.unlaying.unleaded.unlearns.unlearnt.unleased.unlethal.unletted.unlevels.unlevied.unlicked.unlikely.unlimber.unlinked.unlisted.unlively.unliving.unloaded.unloader.unlocked.unloosed.unloosen.unlooses.unlovely.unloving.unmailed.unmakers.unmaking.unmanful.unmanned.unmapped.unmarked.unmarred.unmasked.unmasker.unmatted.unmeetly.unmellow.unmelted.unmended.unmeshed.unmeshes.unmewing.unmilled.unmingle.unmiters.unmitred.unmitres.unmixing.unmodish.unmolded.unmolten.unmoored.unmoving.unmuffle.unmuzzle.unnailed.unneeded.unnerved.unnerves.unopened.unornate.unpacked.unpacker.unpadded.unpaired.unparted.unpaying.unpeeled.unpegged.unpenned.unpeople.unperson.unpicked.unpiling.unpinned.unpitied.unpitted.unplaced.unplaits.unplayed.unpliant.unplowed.unpoetic.unpoised.unpolite.unpolled.unposted.unpotted.unpretty.unpriced.unprimed.unprized.unprobed.unproved.unproven.unpruned.unpucker.unpurely.unpurged.unpuzzle.unquiets.unquoted.unquotes.unraised.unranked.unravels.unreally.unreason.unreeled.unreeler.unreeved.unreeves.unrented.unrepaid.unrepair.unrested.unretire.unrhymed.unribbed.unriddle.unrifled.unrigged.unrinsed.unripely.unripest.unripped.unrobing.unrolled.unroofed.unrooted.unrounds.unrulier.unrushed.unrusted.unsaddle.unsafely.unsafety.unsalted.unsavory.unsaying.unscaled.unscrews.unsealed.unseamed.unseared.unseated.unseeded.unseeing.unseemly.unseized.unserved.unsettle.unsewing.unsexing.unsexual.unshaded.unshaken.unshamed.unshaped.unshapen.unshared.unshaved.unshaven.unshells.unshifts.unshrunk.unsicker.unsifted.unsights.unsigned.unsilent.unsinful.unslaked.unsliced.unslings.unsmoked.unsnarls.unsoaked.unsocial.unsoiled.unsolder.unsolved.unsonsie.unsorted.unsought.unsoured.unspeaks.unsphere.unspoilt.unspoken.unspools.unsprung.unstable.unstably.unstacks.unstated.unstates.unstayed.unsteady.unsteels.unsticks.unstitch.unstoned.unstraps.unstress.unstring.unstrung.unstuffy.unsubtle.unsubtly.unsuited.unsurely.unswathe.unswayed.unswears.untacked.untagged.untangle.untanned.untapped.untasted.untaught.untended.untented.untested.untether.unthawed.unthinks.unthread.unthrone.untidied.untidier.untidies.untidily.untieing.untilled.untilted.untimely.untinged.untipped.untiring.untitled.untoward.untraced.untracks.untreads.untrendy.untruest.untrusty.untruths.untucked.untufted.untuning.unturned.untwined.untwines.untwists.ununbium.ununited.unusable.unvalued.unvaried.unveiled.unveined.unversed.unvested.unviable.unvoiced.unvoices.unwalled.unwaning.unwanted.unwarier.unwarily.unwarmed.unwarned.unwarped.unwashed.unwasted.unweaned.unweaves.unwedded.unweeded.unweight.unwelded.unwetted.unwieldy.unwifely.unwilled.unwinder.unwisdom.unwisely.unwisest.unwished.unwishes.unwitted.unwonted.unwooded.unworked.unworthy.unyeaned.unyoking.unzipped.upbearer.upboiled.upbraids.upbuilds.upchucks.upclimbs.upcoiled.upcoming.upcurled.upcurved.upcurves.updarted.updaters.updating.updiving.updrafts.updrying.upending.upflings.upflowed.upfolded.upgather.upgazing.upgirded.upgraded.upgrades.upgrowth.upheaped.upheaval.upheaved.upheaver.upheaves.uphoards.upholder.uplander.upleaped.uplifted.uplifter.uplights.uplinked.uploaded.upmarket.uppercut.uppiling.uppishly.upraised.upraiser.upraises.uprating.upreared.uprights.uprisers.uprising.uprivers.uprootal.uprooted.uprooter.uproused.uprouses.uprushed.uprushes.upscaled.upscales.upsetter.upshifts.upshoots.upsilons.upsizing.upsoared.upsprang.upspring.upsprung.upstaged.upstager.upstages.upstairs.upstands.upstared.upstares.upstarts.upstater.upstates.upstream.upstroke.upsurged.upsurges.upsweeps.upswells.upswings.uptalked.uptempos.upthrown.upthrows.upthrust.uptilted.uptossed.uptosses.uptowner.uptrends.upturned.upwafted.upwardly.upwelled.uraemias.uraeuses.uralites.uralitic.uranides.uranisms.uranites.uranitic.uraniums.uranylic.urbanely.urbanest.urbanise.urbanism.urbanist.urbanite.urbanity.urbanize.uredinia.ureteral.ureteric.urethane.urethans.urethrae.urethral.urethras.urgently.urgingly.uridines.urinated.urinates.urinator.urinemia.urinemic.urochord.urodeles.uroliths.urologic.uropodal.uropygia.uroscopy.urostyle.ursiform.urticant.urticate.urushiol.usaunces.usefully.username.ushering.usquabae.usquebae.ustulate.usufruct.usurious.usurpers.usurping.utensils.uteruses.utilidor.utilised.utiliser.utilises.utilized.utilizer.utilizes.utopians.utopisms.utopists.utricles.utriculi.utterers.uttering.uvularly.uvulitis.uxorious.vacantly.vacating.vacation.vaccinal.vaccinas.vaccinee.vaccines.vaccinia.vacuolar.vacuoles.vacuumed.vagabond.vagaries.vagility.vaginate.vagotomy.vagrancy.vagrants.vainness.valanced.valances.valences.valencia.valerate.valerian.valeting.valguses.valiance.valiancy.valiants.validate.validity.valkyrie.valleyed.valonias.valorise.valorize.valorous.valuable.valuably.valuated.valuates.valuator.valvelet.valvulae.valvular.valvules.vambrace.vamoosed.vamooses.vamosing.vampiest.vampires.vampiric.vanadate.vanadium.vanadous.vandalic.vandyked.vandykes.vanguard.vanillas.vanillic.vanillin.vanished.vanisher.vanishes.vanitied.vanities.vanitory.vanloads.vanpools.vanquish.vantages.vapidity.vaporers.vaporing.vaporise.vaporish.vaporize.vaporous.vapoured.vapourer.vaqueros.varactor.variable.variably.variance.variants.variated.variates.varicose.variedly.varietal.variform.variolar.variolas.varioles.variorum.varistor.varletry.varments.varmints.varnishy.varoomed.vascular.vasculum.vaselike.vaseline.vasiform.vasotomy.vastiest.vastness.vaticide.vaulters.vaultier.vaulting.vaunters.vauntful.vaunting.vavasors.vavasour.vavassor.vealiest.vectored.vedalias.vedettes.veganism.vegetant.vegetate.vegetist.vegetive.vehement.vehicles.veiledly.veilings.veillike.veiniest.veinings.veinless.veinlets.veinlike.veinules.veinulet.velamina.velarium.velarize.veligers.velleity.velocity.veloutes.veluring.velveret.velveted.venality.venation.vendable.vendaces.vendetta.vendeuse.vendible.vendibly.veneered.veneerer.venenate.venenose.venerate.venereal.veneries.venetian.vengeful.venially.venisons.venogram.venology.venomers.venoming.venomous.venosity.venously.ventages.ventails.ventless.ventrals.ventured.venturer.ventures.venturis.venulose.venulous.veracity.verandah.verandas.veratria.veratrin.veratrum.verbally.verbatim.verbenas.verbiage.verbiles.verbless.verboten.verdancy.verderer.verderor.verdicts.verditer.verdured.verdures.verecund.vergence.verified.verifier.verifies.verismos.veristic.verities.verjuice.vermeils.vermoulu.vermouth.vermuths.vernacle.vernally.vernicle.verniers.vernixes.veronica.verrucae.verrucas.versants.verseman.versemen.versicle.versines.versions.vertebra.vertexes.vertical.vertices.verticil.vertigos.vervains.vesicant.vesicate.vesicles.vesicula.vesperal.vespiary.vesseled.vestally.vestiary.vestiges.vestigia.vestings.vestless.vestlike.vestment.vestries.vestural.vestured.vestures.vesuvian.veterans.vetivers.vetivert.vexation.vexillar.vexillum.vexingly.viaducts.vialling.viatical.viaticum.viatores.vibrance.vibrancy.vibrants.vibrated.vibrates.vibrator.vibratos.vibrioid.vibrions.vibrissa.vibronic.viburnum.vicarage.vicarate.vicarial.viceless.vicenary.viceroys.vicinage.vicinity.vicomtes.victoria.victress.victuals.vicugnas.videotex.videttes.vidicons.viewable.viewdata.viewiest.viewings.viewless.vigilant.vigneron.vignette.vigorish.vigoroso.vigorous.vilayets.vileness.vilified.vilifier.vilifies.vilipend.villadom.villager.villages.villains.villainy.villatic.villeins.vinasses.vincible.vincibly.vinculum.vindaloo.vinegars.vinegary.vineries.vineyard.vinifera.vinified.vinifies.vinosity.vinously.vintager.vintages.vintners.violable.violably.violated.violater.violates.violator.violence.violists.violones.viomycin.viperine.viperish.viperous.viragoes.virelais.virelays.viremias.virgates.virginal.virgules.viricide.viridian.viridity.virilely.virilism.virility.virilize.virology.virtuosa.virtuose.virtuosi.virtuoso.virtuous.virucide.virulent.virusoid.viscacha.visceral.viscidly.viscoses.viscount.viselike.visional.visioned.visitant.visiters.visiting.visitors.visoring.visually.vitalise.vitalism.vitalist.vitality.vitalize.vitamers.vitamine.vitamins.vitellin.vitellus.vitesses.vitiable.vitiated.vitiates.vitiator.vitiligo.vitrains.vitreous.vitrines.vitriols.vittling.vituline.vivacity.vivaries.vivarium.viverrid.vividest.vivified.vivifier.vivifies.vivipara.vivisect.vixenish.vizarded.vizcacha.vizirate.vizirial.vizoring.vocables.vocalese.vocalics.vocalise.vocalism.vocalist.vocality.vocalize.vocation.vocative.vocoders.vogueing.voguings.voiceful.voicings.voidable.voidance.voidness.volatile.volcanic.volcanos.voleries.volitant.volition.volitive.volleyed.volleyer.volplane.voltages.voltaism.voluming.volutins.volution.volvoxes.volvulus.vomerine.vomiters.vomiting.vomitive.vomitory.vomitous.voodooed.voracity.vorlages.vortexes.vortical.vortices.votaress.votaries.votarist.voteable.voteless.votively.vouchees.vouchers.vouching.voudouns.voussoir.vouvrays.vowelize.voyagers.voyageur.voyaging.vrooming.vuggiest.vulcanic.vulgarer.vulgarly.vulgates.vulguses.vultures.vulvitis.wabblers.wabblier.wabbling.wackiest.waddings.waddlers.waddling.waddying.wadeable.wadmaals.wadmolls.waesucks.wafering.wafflers.wafflier.waffling.waftages.waftures.wageless.wagerers.wagering.wagglier.waggling.waggoned.waggoner.wagonage.wagoners.wagoning.wagtails.wahconda.waiflike.wailsome.wainscot.waisters.waisting.waitered.waitings.waitlist.waitress.waitrons.wakandas.wakeless.wakeners.wakening.wakerife.walkable.walkaway.walkings.walkouts.walkover.walkways.walkyrie.wallaroo.walleyed.walleyes.walloped.walloper.wallowed.wallower.walruses.waltzers.waltzing.wamblier.wambling.wamefous.wamefuls.wammuses.wampuses.wandered.wanderer.wanderoo.wanglers.wangling.wanigans.wannabee.wannabes.wannigan.wantages.wantoned.wantoner.wantonly.warblers.warbling.warcraft.wardenry.wardless.wardress.wardrobe.wardroom.wardship.wareroom.warfares.warfarin.warheads.warhorse.wariness.warisons.warlocks.warlords.warmaker.warmness.warmouth.warnings.warpages.warpaths.warplane.warpower.warpwise.warragal.warrants.warranty.warrener.warrigal.warriors.warships.warslers.warsling.warstled.warstler.warstles.warthogs.wartiest.wartimes.wartless.wartlike.warworks.washable.washbowl.washdays.washiest.washings.washouts.washrags.washroom.washtubs.waspiest.wasplike.wassails.wastable.wastages.wasteful.wastelot.wasterie.wasteway.wastrels.wastries.watchcry.watchdog.watchers.watcheye.watchful.watching.watchman.watchmen.watchout.waterage.waterbed.waterbus.waterdog.waterers.waterhen.waterier.waterily.watering.waterish.waterjet.waterlog.waterloo.waterman.watermen.waterski.waterway.wattages.wattapes.watthour.wattless.wattling.wauchted.waughted.waveband.waveform.waveless.wavelets.wavelike.waveoffs.waverers.wavering.wavicles.waviness.waxberry.waxbills.waxiness.waxplant.waxweeds.waxwings.waxworks.waxworms.waybills.wayfarer.waygoing.waylayer.waypoint.waysides.weakened.weakener.weakfish.weaklier.weakling.weakness.weakside.weanling.weaponed.weaponry.wearable.weariest.weariful.wearying.weasands.weaseled.weaselly.weathers.weazands.webbiest.webbings.webcasts.webpages.websites.websters.webworks.webworms.weddings.wedeling.wedgiest.wedlocks.weediest.weedless.weedlike.weekdays.weekends.weeklies.weeklong.weeniest.weensier.weepiest.weepings.weeviled.weevilly.weftwise.weigelas.weigelia.weighers.weighing.weighman.weighmen.weighted.weighter.weirdest.weirdies.weirding.weirdoes.welchers.welching.welcomed.welcomer.welcomes.weldable.weldless.weldment.welfares.welladay.wellaway.wellborn.wellcurb.welldoer.wellhead.wellhole.wellness.wellsite.welshers.welshing.weltered.weltings.wenchers.wenching.wendigos.wenniest.weregild.werewolf.wergelds.wergelts.wergilds.wessands.westered.westerly.westerns.westings.westmost.westward.wetbacks.wetlands.wetproof.wetsuits.wettable.wettings.wetwares.whackers.whackier.whacking.whaleman.whalemen.whalings.whammies.whamming.whangees.whanging.whappers.whapping.wharfage.wharfing.whatever.whatness.whatnots.whatsits.wheatear.wheatens.wheedled.wheedler.wheedles.wheelers.wheelies.wheeling.wheelman.wheelmen.wheeping.wheepled.wheeples.wheezers.wheezier.wheezily.wheezing.whelkier.whelming.whelping.whenever.wherever.wherried.wherries.whetters.whetting.wheyface.wheylike.whickers.whidding.whiffers.whiffets.whiffing.whiffled.whiffler.whiffles.whimbrel.whimpers.whimseys.whimsied.whimsies.whinchat.whingers.whinging.whiniest.whinnied.whinnier.whinnies.whipcord.whiplash.whiplike.whippers.whippets.whippier.whipping.whiprays.whipsawn.whipsaws.whiptail.whipworm.whirlers.whirlier.whirlies.whirling.whirried.whirries.whirring.whishing.whishted.whiskers.whiskery.whiskeys.whiskies.whisking.whispers.whispery.whisting.whistled.whistler.whistles.whitecap.whitefly.whitened.whitener.whiteout.whitiest.whitings.whitlows.whitrack.whitters.whittled.whittler.whittles.whittret.whizbang.whizzers.whizzier.whizzing.whodunit.wholisms.whomever.whomping.whoofing.whoopees.whoopers.whoopies.whooping.whooplas.whooshed.whooshes.whoppers.whopping.whoredom.whoreson.whortles.whosever.whosises.whumping.whupping.wickapes.wickeder.wickedly.wickings.wickiups.wickless.wickyups.wicopies.widdling.wideband.widebody.wideners.wideness.widening.wideouts.widgeons.widowers.widowing.widthway.wielders.wieldier.wielding.wifedoms.wifehood.wifeless.wifelier.wifelike.wiftiest.wiggiest.wiggings.wigglers.wigglier.wiggling.wigmaker.wildcard.wildcats.wildered.wildfire.wildfowl.wildings.wildland.wildlife.wildling.wildness.wildwood.wilfully.wiliness.willable.williwau.williwaw.willowed.willower.willyard.willyart.willying.willywaw.wimbling.wimpiest.wimpling.winchers.winching.windable.windages.windbags.windbell.windburn.windfall.windflaw.windgall.windiest.windigos.windings.windlass.windless.windling.windmill.windowed.windpipe.windrows.windsock.windsurf.windward.windways.wineless.wineries.winesaps.wineshop.wineskin.winesops.wingback.wingbows.wingding.wingedly.wingiest.wingless.winglets.winglike.wingover.wingspan.wingtips.winkling.winnable.winnings.winnocks.winnowed.winnower.winsomer.wintered.winterer.winterly.wintling.wintrier.wintrily.wipeouts.wiredraw.wiredrew.wirehair.wireless.wirelike.wiretaps.wireways.wirework.wireworm.wiriness.wiseacre.wiseguys.wiselier.wiseness.wishbone.wishless.wispiest.wisplike.wistaria.wisteria.witchery.witchier.witching.withdraw.withdrew.withered.witherer.witherod.withheld.withhold.withiest.withouts.witlings.witloofs.wittiest.wittings.wizardly.wizardry.wizening.wobblers.wobblier.wobblies.wobbling.wobegone.woefully.wofuller.wolffish.wolflike.wolframs.womaning.womanise.womanish.womanism.womanist.womanize.wombiest.wommeras.wondered.wonderer.wondrous.wonkiest.wontedly.woodbind.woodbine.woodbins.woodchat.woodcock.woodcuts.woodener.woodenly.woodhens.woodiest.woodland.woodlark.woodless.woodlore.woodlots.woodnote.woodpile.woodruff.woodshed.woodsias.woodsier.woodsman.woodsmen.woodtone.woodwind.woodwork.woodworm.wooingly.woolfell.woolhats.wooliest.woollens.woollier.woollies.woollike.woollily.woolpack.woolsack.woolshed.woolskin.woolwork.woomeras.woopsing.wooralis.wooraris.wooshing.wooziest.wordages.wordbook.wordiest.wordings.wordless.wordplay.workable.workably.workaday.workbags.workboat.workbook.workdays.workfare.workflow.workfolk.workhour.workings.workless.workload.workmate.workouts.workroom.workshop.workweek.wormgear.wormhole.wormiest.wormlike.wormroot.wormseed.wormwood.wornness.worriers.worrited.worrying.worsened.worships.worsteds.worsting.worthful.worthier.worthies.worthily.worthing.wouldest.wounding.wrackful.wracking.wrangled.wrangler.wrangles.wrappers.wrapping.wrassled.wrassles.wrastled.wrastles.wrathful.wrathier.wrathily.wrathing.wreakers.wreaking.wreathed.wreathen.wreather.wreathes.wreckage.wreckers.wreckful.wrecking.wrenched.wrencher.wrenches.wresters.wresting.wrestled.wrestler.wrestles.wretched.wretches.wricking.wriggled.wriggler.wriggles.wringers.wringing.wrinkled.wrinkles.wristier.wristlet.writable.writerly.writhers.writhing.writings.wrongers.wrongest.wrongful.wronging.wrothful.wrynecks.wurtzite.wussiest.wuthered.xanthans.xanthate.xanthein.xanthene.xanthine.xanthins.xanthoma.xanthone.xanthous.xenogamy.xenogeny.xenolith.xerosere.xeroxing.xiphoids.xylidine.xylidins.xylitols.xylocarp.xylotomy.yabbered.yachters.yachting.yachtman.yachtmen.yahooism.yahrzeit.yakitori.yamalkas.yammered.yammerer.yamulkas.yardages.yardarms.yardbird.yardland.yardwand.yardwork.yarmelke.yarmulke.yashmacs.yashmaks.yatagans.yataghan.yattered.yawmeter.yawpings.yealings.yeanling.yearbook.yearends.yearlies.yearling.yearlong.yearners.yearning.yeasayer.yeastier.yeastily.yeasting.yellowed.yellower.yellowly.yeomanly.yeomanry.yeshivah.yeshivas.yeshivot.yestreen.yielders.yielding.yodelers.yodeling.yodelled.yodeller.yoghourt.yoghurts.yohimbes.yokeless.yokelish.yokemate.yokozuna.yolkiest.youngers.youngest.youngish.younkers.yourself.youthens.youthful.yperites.ytterbia.ytterbic.yttriums.yuckiest.yukkiest.yuletide.yummiest.zabaione.zabajone.zacatons.zaddikim.zaibatsu.zamarras.zamarros.zamindar.zaniness.zapateos.zappiest.zaptiahs.zaptiehs.zaratite.zareebas.zarzuela.zastruga.zastrugi.zealotry.zebranos.zebrines.zecchini.zecchino.zecchins.zelkovas.zemindar.zemstvos.zenaidas.zenithal.zeolites.zeolitic.zeppelin.zeppoles.zestiest.zestless.zibeline.ziggurat.zigzaggy.zikkurat.zikurats.zillions.zincates.zincites.zincking.zingiest.zippered.zippiest.zircaloy.zirconia.zirconic.zitherns.zizzling.zodiacal.zoisites.zombiism.zonation.zoneless.zonetime.zoochore.zooecium.zoogenic.zoogleae.zoogleal.zoogleas.zoogloea.zoolater.zoolatry.zoologic.zoomania.zoometry.zoomorph.zoonoses.zoonosis.zoonotic.zoophile.zoophily.zoophobe.zoophyte.zoosperm.zoospore.zootiest.zootomic.zorillas.zorilles.zorillos.zucchini.zugzwang.zwieback.zygomata.zygosity.zygotene.zymogene.zymogens.zymogram.zymology.zymosans.zyzzyvas.",
		() => ".aardvarks.aasvogels.abamperes.abandoned.abandoner.abasement.abashedly.abashment.abatement.abattises.abattoirs.abbotcies.abbotship.abcoulomb.abdicable.abdicated.abdicates.abdicator.abdominal.abductees.abducting.abduction.abductors.abelmosks.aberrance.aberrancy.aberrants.aberrated.abetments.abeyances.abhenries.abhorrent.abhorrers.abhorring.abidances.abidingly.abilities.abiogenic.abjection.ablations.ablatives.ablegates.ablutions.abnegated.abnegates.abnegator.abnormals.abnormity.aboideaus.aboideaux.aboiteaus.aboiteaux.abolished.abolisher.abolishes.abolition.abominate.aborigine.abortions.abortuses.abounding.abrachias.abradable.abradants.abraiders.abraiding.abrasions.abrasives.abreacted.abridgers.abridging.abrogable.abrogated.abrogates.abrogator.abruptest.abruption.abscessed.abscesses.abscising.abscisins.abscissae.abscissas.absconded.absconder.abseiling.absentees.absenters.absenting.absinthes.absoluter.absolutes.absolvent.absolvers.absolving.absorbant.absorbent.absorbers.absorbing.abstained.abstainer.absterged.absterges.abstinent.abstracts.abstricts.abstruser.absurdest.absurdism.absurdist.absurdity.abuilding.abundance.abusively.abutilons.abutments.abysmally.academias.academics.academies.academism.acalephae.acalephes.acanthine.acanthoid.acanthous.acarboses.acariases.acariasis.acaricide.acaridans.acarology.accedence.accenting.accentors.accentual.acceptant.acceptees.accepters.accepting.acceptive.acceptors.accessary.accessing.accession.accessory.accidence.accidents.accipiter.acclaimed.acclaimer.acclimate.acclivity.acclivous.accoladed.accolades.accompany.accordant.accorders.according.accordion.accosting.accounted.accouters.accoutred.accoutres.accredits.accreting.accretion.accretive.accruable.accumbent.accusable.accusably.accusants.accustoms.aceldamas.acellular.acephalic.acerbated.acerbates.acervulus.acescents.acetabula.acetamide.acetamids.acetified.acetifier.acetifies.acetoxyls.acetylate.acetylene.achalasia.achievers.achieving.achilleas.achromats.achromous.aciculate.aciculums.acidemias.acidheads.acidified.acidifier.acidifies.acidities.acidophil.acidulate.acidulent.acidulous.acidurias.acierated.acierates.aciniform.aconitums.acoustics.acquaints.acquiesce.acquirees.acquirers.acquiring.acquittal.acquitted.acquitter.acridines.acridness.acritarch.acritical.acrobatic.acrodonts.acrogenic.acrolects.acroleins.acroliths.acromions.acronical.acronycal.acronymic.acropetal.acrophobe.acropolis.acrosomal.acrosomes.acrospire.acrostics.acrotisms.acrylates.actinally.actinians.actinides.actinisms.actiniums.actinoids.actioners.activated.activates.activator.activisms.activists.activized.activizes.actresses.actuality.actualize.actuarial.actuaries.actuating.actuation.actuators.aculeated.acuminate.acuminous.acutances.acuteness.acyclovir.acylating.acylation.adamances.adamantly.adamsites.adaptable.adaptions.addendums.addicting.addiction.addictive.additions.additives.addressed.addressee.addresser.addresses.addressor.adducible.adducting.adduction.adductive.adductors.ademption.adenoidal.adenomata.adenosine.adeptness.adherable.adherence.adherends.adherents.adhesions.adhesives.adhibited.adiabatic.adipocere.adipocyte.adiposity.adjacence.adjacency.adjective.adjoining.adjourned.adjudging.adjunctly.adjusters.adjusting.adjustive.adjustors.adjutancy.adjutants.adjuvants.admeasure.admirable.admirably.admiralty.admission.admissive.admittees.admitters.admitting.admixture.admonitor.adnations.adobelike.adoptable.adoptions.adoration.adoringly.adornment.adrenalin.adrenally.adroitest.adscripts.adsorbate.adsorbent.adsorbers.adsorbing.adularias.adulating.adulation.adulators.adulatory.adulterer.adulthood.adultlike.adultness.adultress.adumbrate.advancers.advancing.advantage.advecting.advection.advective.adventive.adventure.adverbial.adversary.adversely.adversity.advertent.adverting.advertise.advertize.advisable.advisably.advisedly.advocated.advocates.advocator.advowsons.adynamias.aepyornis.aequorins.aerations.aerialist.aerifying.aerobatic.aerobrake.aerodrome.aeroducts.aerodynes.aerofoils.aerograms.aerolites.aeroliths.aerolitic.aerologic.aerometer.aerometry.aeronauts.aeronomer.aeronomic.aeropause.aerophobe.aerophore.aerophyte.aeroplane.aeropulse.aeroscope.aerospace.aerostats.aesthesia.aesthetes.aesthetic.aestivate.aethereal.aetiology.affecters.affecting.affection.affective.afferents.affianced affiances.affidavit.affiliate.affirmant.affirmers.affirming.affixable.affixment.affixture.afflicted.afflicter.affluence.affluency.affluents.affording.afforests.affrayers.affraying.affricate.affrights.affronted.affusions.aflatoxin.aforehand.aforesaid.aforetime.aftercare.afterclap.afterdamp.afterdeck.afterglow.afterlife.aftermath.aftermost.afternoon.afterpain.aftertime.afterward.afterword.agalactia.agallochs.agalwoods.agateware.agatizing.agelessly.agenesias.agenizing.agentings.agentival.agentives.agentries.ageratums.aggrading.aggravate.aggregate.aggressed.aggresses.aggressor.aggrieved.aggrieves.agileness.agilities.agiotages.agitating.agitation.agitative.agitators.agitprops.aglycones.agnatical.agnations.agnostics.agonising.agonistes.agonistic.agonizing.agraphias.agrarians.agreeable.agreeably.agreement.agrologic.agronomic.agrypnias.aguacates.agueweeds.ahistoric.aigrettes.aiguilles.ailanthic.ailanthus.aimlessly.airbursts.airbusses.airchecks.airdromes.airfields.airframes.airheaded.airlifted.airliners.airmailed.airmobile.airplanes.airpowers.airproofs.airscapes.airscrews.airspaces.airspeeds.airstream.airstrike.airstrips.airworthy.aisleways.aitchbone.akinesias.alabaster.alachlors.alackaday.alarmable.alarmedly.alarmisms.alarmists.alaruming.albacores.albatross.albertite.albescent.albicores.albinisms.albinotic.albitical.albizzias.albumoses.alburnous.alburnums.albuterol.alcahests.alchemies.alchemist.alchemize.alchymies.alcoholic.aldehydes.aldehydic.aldicarbs.aldolases.aleatoric.alecithal.alehouses.alertness.aleurones.aleuronic.alexander.alfaquins.alfilaria.alfileria.algaecide algarobas.algarroba.algarrobo.algebraic.algerines.algicidal.algicides.algidness.alginates.algometer.algometry.algorisms.algorithm.aliasings.alicyclic.alienable.alienages.alienated.alienates.alienator.alienisms.alienists.alienness.alighting.alignment.alikeness.alimental.alimented.alimonied.alimonies.alinement.aliphatic.aliteracy.aliterate.aliveness.alizarine.alizarins.alkahests.alkalised.alkalises.alkalized.alkalizer.alkalizes.alkaloids.alkaloses.alkalosis.alkalotic.alkoxides.alkylated.alkylates.allanites.allantoic.allantoid.allantoin.allantois.allegedly.allegiant.allegoric.allelisms.alleluias.allemande.allergens.allergies.allergins.allergist.allethrin.alleviant.alleviate.alleyways.alliances.alligator.allocable.allocated.allocates.allocator.allogenic.allograft.allograph.allometry.allomorph.allopaths.allopathy.allopatry.allophane.allophone.alloplasm.allosaurs.allostery.allotment.allotrope.allotropy.allottees.allotters.allotting.allotypes.allotypic.allowable.allowably.allowance.allowedly.allspices.allusions.alluvials.alluvions.alluviums.almagests.almanacks.almandine.almandite.almonries.almsgiver.almshouse.aloneness.alongside.aloofness.alopecias.alpenglow.alpenhorn.alphabets.alpinisms.alpinists.alterable.alterably.alterants.altercate.alternant.alternate.altigraph.altimeter.altimetry.altiplano.altitudes.altricial.altruisms.altruists.aluminate.aluminium.aluminize.aluminous.aluminums.alumroots.alumstone.alveolars.alveolate.amadavats.amanitins.amaranths.amarelles.amarettos.amaryllis.amassable.amassment.amatively.amauroses.amaurosis.amaurotic.amazement.amazingly.amazonian.amazonite.ambagious.ambergris.amberinas.amberjack.amberoids.ambiances.ambiences.ambiguity.ambiguous.ambipolar.ambitions.ambitious.ambiverts.amblyopia.amblyopic.ambrosial.ambrosian.ambrosias.ambrotype.ambulacra.ambulance.ambulated.ambulates.ambulator.ambulette.ambuscade.ambushers.ambushing.amebiases.amebiasis.amebocyte.ameerates.amelcorns.amendable.amendment.amenities.americium.amethysts.ametropia.ametropic.amianthus.amidogens.amidships.aminities.amitroles.ammocetes.ammoniacs.ammoniate.ammonites.ammonitic.ammoniums.ammonoids.amnesiacs.amnestied.amnesties.amoebaean.amoralism.amorality.amorettos.amoristic.amorously.amorphism.amorphous.amortised.amortises.amortized.amortizes.amounting.amperages.ampersand.amphibian.amphibole.amphiboly.amphigory.amphioxus.amphipods.ampleness.amplidyne.amplified.amplifier.amplifies.amplitude.ampullary.amputated.amputates.amputator.amsinckia.amusement.amusingly.amygdalae.amygdales.amygdalin.amygdules.amylogens.amylopsin.amyotonia.anabaenas.anabioses.anabiosis.anabiotic.anabolism.anabranch.anaclises.anaclisis.anaclitic.anacondas.anacruses.anacrusis.anaerobes.anaerobia.anaerobic.anaglyphs.anagogies.analcimes.analcimic.analcites.analectic.analemmas.analeptic.analgesia.analgesic.analgetic.analities.analogies.analogism.analogist.analogize.analogous.analogues.analysand.analysers.analysing.analytics.analyzers.analyzing.anamneses.anamnesis.anapaests.anapestic.anaphases.anaphasic.anaphoral.anaphoras.anaphoric.anaplasia.anaptyxes.anaptyxis.anarchies.anarchism.anarchist.anarthria.anarthric.anasarcas.anathemas.anatomies.anatomise.anatomist.anatomize.anatoxins.ancestors.ancestral.anchorage.anchoress.anchorets.anchoring.anchorite.anchorman.anchormen.anchoveta.anchovies.anchusins.anchylose.ancienter.anciently.ancientry.ancillary.ancipital.ancresses.andantini.andantino.andesites.andesitic.andesytes.andouille.andradite.androecia.androgens.androgyne.androgyny.andrology.andromeda.anecdotal.anecdotes.anecdotic.anelastic.anemology.anestrous.anetholes.aneuploid.aneurisms.aneurysms.angelfish.angelical.angelicas.angeluses.angerless.angiogram.angiology.angiomata.anglepods.anglesite.angleworm.anglicise.anglicism.anglicize.angostura.angriness.angstroms.anguished.anguishes.angularly.angulated.angulates.anhedonia.anhedonic.anhydride.anhydrite.anhydrous.anilingus.anilities.animacies.animalian.animalier.animalism.animalist.animality.animalize.animately.animaters.animating.animation.animatism.animatist.animators.animistic.animosity.anisettes.anisogamy.ankerites.anklebone.ankylosed.ankyloses.ankylosis.ankylotic.annalists.annealers.annealing.annelidan.annotated.annotates.annotator.announced.announcer.announces.annoyance.annualize.annuitant.annuities.annularly.annulated.annulling.annulment.annuluses.anodizing.anointers.anointing.anomalies.anomalous.anonymity.anonymous.anoopsias.anopheles.anorectic.anoretics.anorexias.anorexics.anorexies.anorthite.anosmatic.anovulant.anoxemias.anserines.answerers.answering.antalgics.antalkali.antarctic.anteaters.anteceded.antecedes.antechoir.antedated.antedates.antefixae.antefixal.antefixes.antelopes.antenatal.antennule.antepasts.anterooms.antetypes.anteverts.anthelion.antheming.anthemion.antherids.anthocyan.anthodium.anthology.anthozoan.anthozoic.anthraces.anthropic.anthurium.antiabuse.antiaging.antialien.antiarins.antiarmor.antiatoms.antiauxin.antiblack.antibuser.antically.antichlor.anticivic.anticking.anticline.anticling.anticodon.anticrack.anticrime.anticults.antidotal.antidoted.antidotes.antidraft.antielite.antifraud.antigenes.antigenic.antiglare.antigraft.antihelix.antihuman.antikings.antiknock.antilabor.antilifer.antimacho.antimasks.antimeres.antimeric.antimonic.antimonyl.antimusic.antimycin.antinodal.antinodes.antinoise.antinomes.antinomic.antinovel.antinuker.antinukes.antipapal.antiparty.antipasti.antipasto.antipathy.antiphons.antiphony.antipodal.antipodes.antipolar.antipoles.antipopes.antipress.antipyics.antiquark.antiquary.antiquate.antiquely.antiquers.antiquing.antiquity.antiradar.antiroyal.antirusts.antisense.antiserum.antishark.antishock.antisleep.antismoke.antisnobs.antisolar.antistate.antistats.antistick.antistory.antistyle.antitheft.antitoxic.antitoxin.antitrade.antitragi.antitrust.antitumor.antitypes.antitypic.antiulcer.antiunion.antiurban.antivenin.antivenom.antiviral.antivirus.antiwhite.antiwoman.antonymic.antsiness.anvilling.anviltops.anxieties.anxiously.anybodies.anythings.anywheres.apartheid.apartment.apartness.apathetic.apatosaur.aperients.aperiodic.aperitifs.apertural.apertured.apertures.apetalies.apetalous.aphanites.aphanitic.aphasiacs.aphelions.aphereses.apheresis.apheretic.aphidians.apholates.aphorised.aphorises.aphorisms.aphorists.aphorized.aphorizer.aphorizes.aphrodite.aphyllies.aphyllous.apiaceous.apiarians.apiarists.apiculate.apimanias.apishness.apivorous.aplanatic.apocopate.apocrypha.apodictic.apoenzyme.apogamies.apogamous.apologiae.apologias.apologies.apologise.apologist.apologize.apologues.apomictic.apophases.apophasis.apophyges.apophyses.apophysis.apoptoses.apoptosis.apoptotic.aposporic.apostates.apostille.apostolic.apotheces.apothecia.apothegms.appalling.appaloosa.appanages.apparatus.appareled.apparitor.appealers.appealing.appearing.appeasers.appeasing.appellant.appellate.appellees.appellors.appendage.appendant.appendent.appending.appertain.appestats.appetence.appetency.appetiser.appetites.appetizer.applauded.applauder.applauses.applecart.applejack.appliable.appliance.applicant.appliqued.appliques.appointed.appointee.appointer.appointor.apportion.apposable.appraisal.appraised.appraisee.appraiser.appraises.apprehend.appressed.apprisers.apprising.apprizers.apprizing.approbate.approvals.approvers.approving.apriority.apronlike.apteryxes.aptitudes.aptnesses.aquacades.aquafarms.aqualungs.aquanauts.aquaplane.aquarelle.aquarians.aquarists.aquariums.aquatints.aquatones.aqueducts.aqueously.aquilegia.arabesque.arabicize.arability.arabinose.arabizing.arachnids.arachnoid.aragonite.araneidan.arapaimas.araucaria.arbalests.arbalists.arbelests.arbitrage.arbitrary.arbitrate.arbitress arboreous.arboretum.arborists.arborized.arborizes.arboviral.arbovirus.arbuscles.arbutuses.arcadians.arcadings.arcatures.arccosine.archaeans.archaical.archaised.archaises.archaisms.archaists.archaized.archaizer.archaizes.archangel.archducal.archduchy.archdukes.archenemy.archeries.archetype.archfiend.archicarp.architect.archiving.archivist.archivolt.archosaur.archrival.arcuately.arcuation.ardencies.arduously.arecoline.areolated.arethusas.argentine.argentite.argentous.argentums.argillite.arginases.arginines.argonauts.argufiers.argufying.argumenta.arguments.arhatship.aridities.arillodes.armadillo.armagnacs.armaments.armatured.armatures.armchairs.armigeral.armigeros.armillary.armistice.armonicas.armorials.armorless.armourers.armouries.armouring.armyworms.arointing.aromatase.aromatics.aromatize.arousable.aroynting.arpeggios.arraigned.arraigner.arrangers.arranging.arrearage.arrestant.arrestees.arresters.arresting.arrestive.arrestors.arriviste.arrogance.arrogancy.arrogated.arrogates.arrogator.arrowhead.arrowless.arrowlike.arrowroot.arrowwood.arrowworm.arsenates.arsenical.arsenides.arsenious.arsenites.arsonists.artefacts.artemisia.arterials.arteriole.arteritis.arthritic.arthritis.arthropod.arthroses.arthrosis.artichoke.articling.articular.artifacts.artificer.artifices.artillery.artisanal.artlessly.artsiness.aruspices.arytenoid.arythmias.asafetida.asbestine.asbestous.ascarides.ascendant.ascendent.ascenders.ascending.ascension.ascensive.ascertain.ascetical.ascidians.ascidiate.asclepiad.ascocarps.ascogonia.ascorbate.ascospore.ascribing.asexually.ashamedly.ashlaring.ashlering.ashplants.asininely.asininity.askewness.asparagus.aspartame.aspartate.aspectual.asperated.asperates.aspergill.aspersers.aspersing.aspersion.aspersive.aspersors.asphalted.asphaltic.asphaltum.asphodels.asphyxial.asphyxias.asphyxies.aspirants.aspiratae.aspirated.aspirates.aspirator.assagaied.assailant.assailers.assailing.assassins.assaulted.assaulter.assayable.assegaied.assembled.assembler.assembles.assenters.assenting.assentive.assentors.asserters.asserting.assertion.assertive.assertors.assessing.assessors.assetless.assiduity.assiduous.assignats.assignees.assigners.assigning.assignors.assistant.assisters.assisting.assistive.assistors.associate.assoiling.assonance.assonants.assorters.assorting.assuagers.assuaging.assuasive.assumable.assumably.assumedly.assumpsit.assurable.assurance.assuredly.assurgent.asswaging.astatines.asterisks.asterisms.asteroids.asthenias.asthenics.asthenies.asthmatic.astigmias.astomatal.astonying.astounded.astrachan.astraddle.astragali.astragals.astrakhan.astricted.astringed.astringes.astrocyte.astrodome.astrolabe.astrology.astronaut.astronomy.asyllabic.asymmetry.asymptote.asynapses.asynapsis.asyndetic.asyndeton.atabrines.atamascos.ataractic.ataraxias.ataraxics.ataraxies.atavistic.atemporal.atenolols.atheistic.athelings.athenaeum.atheneums.atheromas.athetoses.athetosis.athetotic.athletics.athrocyte.atmometer.atomicity.atomisers.atomising.atomistic.atomizers.atomizing.atonalism.atonalist.atonality.atoneable.atonement.atonicity.atoningly.atrazines.atrocious.atrophias.atrophied.atrophies.atropines.atropisms.attachers.attaching.attackers.attacking.attackman.attackmen.attainder.attainers.attaining.attainted.attempers.attempted.attempter.attendant.attendees.attenders.attending.attention.attentive.attenuate.attestant.attesters.attesting.attestors.atticisms.atticists.atticized.atticizes.attitudes.attorneys.attorning.attracted.attracter.attractor.attribute.attriting.attrition.attritive.attritted.aubergine.aubretias.aubrietas.aubrietia.auctioned.auctorial.audacious.audibling.audiences.audiobook.audiogram.audiology.audiotape.audiphone.auditable.auditions.auditives.auditoria.augmented.augmenter.augmentor.augustest.aunthoods.auntliest.aureately.aureoling.auriculae.auricular.auriculas.aurochses.aurorally.ausformed.auslander.auspicate.austenite.austerely.austerest.austerity.australes.autacoids.autarchic.autarkies.autarkist.autecious.autecisms.auteurism.auteurist.authentic.authoress.authorial.authoring.authorise.authority.authorize.autistics.autobahns.autobuses.autocades.autoclave.autocoids.autocracy.autocrats.autocrine.autocross.autodynes.autoecism.autofocus.autogamic.autogenic.autogiros.autograft.autograph.autogyros.autoharps.autolysed.autolyses.autolysin.autolysis.autolytic.autolyzed.autolyzes.automaker.automated.automates.automatic.automaton.autonomic.autophagy.autophyte.autopilot.autopsied.autopsies.autopsist.autoroute.autosomal.autosomes.autotelic.autotomic.autotoxic.autotoxin.autotroph.autotypes.autunites.auxiliary.auxotroph.avadavats.available.availably.avalanche.avascular.avengeful.aventails.aventurin.averagely.averaging.averments.averrable.aversions.aversives.avertable.avertible.avianized.avianizes.aviarists.aviations.aviatress.aviatrice.avidities.avifaunae.avifaunal.avifaunas.avigators.avirulent.avocadoes.avocation.avoidable.avoidably.avoidance.avouchers.avouching.avulsions.avuncular.awakeners.awakening.awardable.awareness.awesomely.awestruck.awfullest.awfulness.awkwarder.awkwardly.axiomatic.axletrees.axoplasms.ayahuasca.ayatollah.ayurvedas.ayurvedic.azedarach.azeotrope.azeotropy.azimuthal.azotemias.azotising.azotizing.azoturias.baaskaaps.baasskaps.babbitted.babbittry.babblings.babirusas.babirussa.baboonery.baboonish.babushkas.babydolls.babyhoods.babyishly.babyproof.baccarats.bacchanal.bacchante.bacchants.bacciform.bachelors.bacillary.backaches.backbeats.backbench.backbends.backbiter.backbites.backblock.backboard.backboned.backbones.backcasts.backchats.backcheck.backcloth.backcourt.backcross.backdated.backdates.backdraft.backdrops.backdropt.backfield.backfills.backfired.backfires.backflips.backflows.backhands.backhauls.backhouse.backlands.backlight.backlists.backloads.backpacks.backpedal.backrests.backrooms.backseats.backshore.backsides.backslaps.backslash.backslide.backspace.backspins.backstabs.backstage.backstair.backstamp.backstays.backstops.backstory.backswept.backswing.backsword.backtrack.backwards.backwater.backwoods.backwraps.backyards.baclofens.bacterial.bacterias.bacterins.bacterium.bacterize.bacteroid.badgeless.badgering.badinaged.badinages.badminton.badmouths.badnesses.bafflegab.bagatelle.bagginess.baghouses.bagpipers.bagpiping.baguettes.bahuvrihi.baidarkas.bailiwick.bailments.bairnlier.bakeapple.bakehouse.bakelites.bakemeats.bakeshops.bakewares.baksheesh.balaclava.balalaika.balancers.balancing.balconied.balconies.baldachin.baldaquin.baldfaced.baldheads.baldpated.baldpates.baldricks.balefires.balefully.balisaurs.balkanize.balkiness.balklines.balladeer.balladist.ballasted.ballaster.ballerina.ballgames.ballhawks.ballistae.ballistic.ballonets.ballonnes.ballooned.balloters.balloting.ballparks.ballpoint.ballrooms.ballsiest.ballyards.ballyhoos.ballyrags.balmacaan.balminess.balmorals.balsaming.balusters.bamboozle.banalized.banalizes.bandagers.bandaging.bandannas.bandboxes.banderole.banderols.bandicoot.bandiness.bandmates.bandoleer.bandolier.bandoneon.bandshell.bandstand.bandwagon.bandwidth.baneberry.banefully.bangtails.banishers.banishing.banisters.banjaxing.banjoists.bankbooks.bankcards.banknotes.bankrolls.bankrupts.banksides.bannerets.bannering.bannerols.bannister.banqueted.banqueter.banquette.banterers.bantering.bantlings.baptisias.baptising.baptismal.baptistry.baptizers.baptizing.baratheas.barbarian.barbarism.barbarity.barbarize.barbarous.barbascos.barbecued.barbecuer.barbecues.barbequed.barbeques.barbering.barbettes.barbicans.barbicels.barbitals.barbitone.barbwires.barcarole.bareboats.bareboned.barefaced.barehands.baresarks.bargained.bargainer.bargellos.barghests.barguests.barhopped.bariatric.baritonal.baritones.barkeeper.barleducs.barnacled.barnacles.barnstorm.barnyards.barograms.barograph.barometer.barometry.baronages.baronetcy.baroquely.barosaurs.baroscope.barouches.barquette.barracked.barracker.barracoon.barracuda.barraging.barrancas.barrancos.barraters.barrators.barrelage.barrelful.barreling.barrelled.barrenest.barretors.barrettes.barricade.barricado.barrister.barstools.bartended.bartender.barterers.bartering.bartisans.bartizans.barytones.basaltine.baseballs.baseboard.baseliner.baselines.basements.baseplate.bashfully.basically.basifiers.basifixed.basifying.basilects.basilicae.basilical.basilican.basilicas.basilisks.basinfuls basinlike.basipetal.basketful.basophile.basophils.basseting.bassetted.bassinets.basswoods.bastardly.bastilles.bastinade.bastinado.bastioned.batfishes.batfowled.batfowler.bathhouse.batholith.bathrobes.bathrooms.bathwater.battalias.battalion.battement.batteners.battening.batterers.batteries.battering.battiness.baudekins.bauhinias.baulkiest.bawdiness.bayadeers.bayaderes.bayoneted.bazillion.bdelliums.beachball.beachboys.beachcomb.beachgoer.beachhead.beachiest.beachside.beachwear.beaconing.beadhouse.beadiness.beadledom.beadrolls.beadworks.beamingly.beamishly.beanballs.beaneries.beanpoles.beanstalk.bearberry.beardless.beargrass.bearishly.bearskins.bearwoods.beastings.beastlier.beatified.beatifies.beatitude.beaucoups.beauteous.beautiful.beavering.bebeerine.beblooded.beboppers.becalming.becapping.becarpets.beccafico.bechalked.bechamels.bechanced.bechances.becharmed.beckoners.beckoning.beclamors.beclasped.becloaked.beclogged.beclothed.beclothes.beclouded.beclowned.becomings.becowards.becquerel.becrawled.becriming.becrowded.becrusted.becudgels.becursing.bedabbled.bedabbles.bedamning.bedarkens.bedaubing.bedazzled.bedazzles.bedboards.bedchairs.bedcovers.bedeafens.bedecking.bedehouse.bedeviled.bedfellow.bedframes.bediapers.bedighted.bedimming.bedimpled.bedimples.bedirtied.bedirties.bedizened.bedlamite.bedmakers.bedplates.bedquilts.bedraggle.bedraping.bedridden.bedrivels.bedroomed.bedrugged.bedsheets.bedsoniae.bedsonias.bedspread.bedspring.bedstands.bedsteads.bedstraws.bedumbing.beduncing.bedwarfed.bedwarmer.bedwetter.beebreads.beechiest.beechmast.beechnuts.beechwood.beefaloes.beefcakes.beefeater.beefiness.beefsteak.beefwoods.beekeeper.beelining.beeriness.beestings.beeswaxes.beeswings.beetroots.befalling.befingers.befitting.beflagged.befleaing.beflecked.beflowers.befogging.befooling.befoulers.befouling.befretted.befriends.befringed.befringes.befuddled.befuddles.begalling.begetters.begetting.beggardom.beggaries.beggaring.beginners.beginning.begirding.begirdled.begirdles.begirting.begladded.beglamors.beglamour.begloomed.begoggled.begriming.begrimmed.begroaned.begrudged.begrudger.begrudges.beguilers.beguiling.begulfing.behaviors.behaviour.beheadals.beheaders.beheading.behemoths.beholders.beholding.behooving.behowling.bejabbers.bejeebers.bejeweled.bejumbled.bejumbles.bekissing.beknights.beknotted.belabored.belabours.beladying.belatedly.belauding.beleaguer.beleaping.belemnite.believers.believing.beliquors.belittled.belittler.belittles.bellbirds.bellicose.bellowers.bellowing.bellpulls.bellworts.bellyache.bellyband.bellyfuls.bellylike.belonging.beltlines.belvedere.bemadamed.bemaddens.bemeaning.bemedaled.bemingled.bemingles.bemisting.bemoaning.bemocking.bemuddled.bemuddles.bemurmurs.bemusedly.bemuzzled.bemuzzles.benadryls.benchland.benchless.benchmark.bendaying.benedicks.benedicts.beneficed.benefices.benefited.benefiter.benempted.bengaline.benighted.benignant.benignity.benjamins.bentgrass.benthonic.benthoses.bentonite.bentwoods.benumbing.benzenoid.benzidine.benzidins.benzoates.bepainted.bepimpled.bepimples.bequeaths.berascals.berberine.berberins.berceuses.berdaches.bereavers.bereaving.bergamots.berhyming.beriberis.berimbaus.berkelium.bernicles.berrettas.berryless.berrylike.berserker.berserkly.beryllium.bescoured.bescreens.beseeched.beseecher.beseeches.beseeming.besetment.besetters.besetting.beshadows.beshaming.beshivers.beshouted.beshrewed.beshrouds.besiegers.besieging.besliming.besmeared.besmearer.besmiling.besmoking.besmooths.besmudged.besmudges.besmutted.besnowing.besoothed.besoothes.besotting.bespangle.bespatter.bespoused.bespouses.bespreads.besteaded.bestially.bestirred.bestowals.bestowers.bestowing.bestrewed.bestrides.bestrowed.bestudded.beswarmed.betatrons.betatters.betelnuts.bethanked.bethesdas.bethorned.bethought.bethumped.betokened.betrayals.betrayers.betraying.betrothal.betrothed.bettering.bevatrons.bevellers.bevelling.beverages.bevomited.bewailers.bewailing.bewearied.bewearies.beweeping.bewigging.bewilders.bewitched.bewitcher.bewitches.beworming.beworried.beworries.bewrapped.bewrayers.bewraying.bheesties.biacetyls.biassedly.biathlete.biathlons.biaxially.bibberies.biblicism.biblicist.bibliotic.bicameral.bicentric.bicipital.bickerers.bickering.bicoastal.bicolored.bicolours.biconcave.bicuspids.bicyclers.bicycling.bicyclist.bidarkees.bidentate.biennales.biennials.bienniums.biestings.bifarious.bifilarly.bifocaled.bifoliate.bifurcate.bigamists.bigarades.bigaroons.bigarreau.bigeminal.bigeneric.bigfooted.bigheaded.bigmouths.bignesses.bignonias.bigotedly.bigotries.bijection.bijective.bilabials.bilabiate.bilanders.bilateral.bilection.bilharzia.bilingual.biliously.bilirubin.billabong.billboard.billeters.billeting.billfolds.billheads.billhooks.billiards.billionth.billowier.billowing.billycans.billycock.bilobated.bilobular.bilocular.bimbettes.bimesters.bimethyls.bimonthly.binarisms.binderies.bindingly.bindweeds.binnacles.binocular.binomials.binturong.binuclear.bioactive.bioassays.biocenose.biochemic.biocycles.bioethics.biofouler.biofueled.biogasses.biogenies.biogenous.biography.biohazard.biologics.biologies.biologism.biologist.biomarker.biomasses.biometers.biometric.biomorphs.bionomics.bionomies.bionomist.biophilia.biopiracy.biopirate.bioplasms.biopsying.bioregion.biorhythm.biosafety.bioscopes.biosensor.biosocial.biosolids.biosphere.biostrome.bioterror.biotoxins.bioturbed.bioweapon.bipartite.bipedally.biphenyls.bipinnate.bipyramid.biradical.birdbaths.birdbrain.birdcages.birdcalls.birdfarms.birdfeeds.birdhouse.birdieing.birdlimed.birdlimes.birdseeds.birdseyes.birdshots.birdsongs.birdwatch.birrettas.birthdate.birthdays.birthings.birthmark.birthname.birthrate.birthroot.birthwort.bisecting.bisection.bisectors.bisectrix.biseriate.biserrate.bisexuals.bishoping.bishopric.bismuthal.bismuthic.bisontine.bisulcate.bisulfate.bisulfide.bisulfite bitchiest.biteplate.bitewings.bitmapped.bitstocks.bitstream.bitterest.bittering.bitterish.bitternut.bittiness.bivalence.bivalency.bivalents.bivariate.bivouacks.bizarrely.blabbered.blackball.blackbird.blackbody.blackboys.blackbuck.blackcaps.blackcock.blackdamp.blackened.blackener.blackface.blackfins.blackfish.blackgums.blackhead.blackings.blackjack.blackland.blacklead.blacklegs.blacklist.blackmail.blackness.blackouts.blackpoll.blacktail.blacktops.blackwood.bladeless.bladelike.blaeberry.blaggings.blameable.blameless.blanchers.blanching.blandness.blanketed.blankness.blarneyed.blaspheme.blasphemy.blastemal.blastemas.blastemic.blastiest.blastings.blastment.blastoffs.blastomas.blastulae.blastular.blastulas.blatantly.blathered.blatherer.blattered.blazingly.blazoners.blazoning.bleachers.bleaching.bleakness.bleareyed.bleariest.blebbings.bleedings.blemished.blemisher.blemishes.blenchers.blenching.blennioid.blesbucks.blesseder.blessedly.blessings.blethered.blighters.blighties.blighting.blindages.blindfish.blindfold.blindguts.blindness.blindside.blindworm.blinkards.blinkered.blissless.blistered.blitheful.blithered.blizzards.blizzardy.bloatware.blockable.blockaded.blockader.blockades.blockages.blockbust.blockhead.blockiest.bloggings.blondined.blondines.blondness.bloodbath.bloodfins.bloodiest.bloodings.bloodless.bloodlike.bloodline.bloodlust.bloodroot.bloodshed.bloodshot.bloodworm.bloodwort.bloodying.bloomiest.bloomless.blossomed.blotchier.blotchily.blotching.blottiest.blousiest.bloviated.bloviates.blowbacks.blowballs.blowdowns.blowflies.blowhards.blowholes.blowiness.blowpipes.blowsiest.blowtorch.blowtubes.blowziest.blubbered.blubberer.bludgeons.blueballs.bluebeard.bluebeats.bluebells.blueberry.bluebills.bluebirds.blueblood.bluebooks.bluecoats.bluecurls.bluegills.bluegrass.blueheads.bluejacks.bluejeans.blueliner.bluelines.bluenosed.bluenoses.bluepoint.blueprint.blueshift.bluesiest.bluestems.bluestone.blueticks.blueweeds.bluewoods.bluffable.bluffness.blundered.blunderer.bluntness.blurbists.blurredly.blurriest.blustered.blusterer.boardable.boardings.boardlike.boardroom.boardwalk.boarhound.boatbills.boathooks.boathouse.boatlifts.boatloads.boatnecks.boatswain.boatyards.bobberies.bobbinets.bobolinks.bobsleigh.bobtailed.bobwhites.bocaccios.bodacious.bodements.bodyboard.bodycheck.bodyguard.bodysuits.bodysurfs.bodyworks.boehmites.bogarting.bogginess.bogusness.bohemians.boilingly.boilovers.boiseries.boldfaced.boldfaces.bolection.boletuses.bolivares.boliviano.bollixing.bolloxing.bollworms.bolograph.bolometer.bolshevik.bolstered.bolsterer.boltheads.boltholes.boltonias.boltropes.bombarded.bombarder.bombardon.bombaster.bombastic.bombazine.bombesins.bombinate.bombloads.bombproof.bombshell.bombsight.bombycids.bombycoid.bondmaids.bondstone.bondwoman.bondwomen.boneblack.boneheads.bonemeals.boneyards.bongoists.bonhomies.bonhomous.bonifaces.bonneting.bonniness.bonspells.bonspiels.bonteboks.booboisie.boogerman.boogermen.boogeying.boogeyman.boogeymen.boogieing.boogieman.boogiemen.boohooing.bookcases.bookishly.booklores.booklouse.bookmaker.bookmarks.bookplate.bookracks.bookrests.bookshelf.bookshops.bookstall.bookstand.bookstore.bookworms.boomboxes.boomerang.boomingly.boomtowns.boondocks.boorishly.bootblack.booteries.bootjacks.bootlaces.bootlicks.bootstrap.booziness.boracites.bordellos.bordereau.borderers.bordering.borecoles.boreholes.borescope.borrelias.borrowers.borrowing.boschboks.boschvark.boshvarks.boskiness.bossiness.botanical.botanicas.botanised.botanises.botanists.botanized.botanizer.botanizes.botchedly.botchiest.bothering.bothriums.bottleful.bottlings.bottomers.bottoming.botulinal.botulinum.botulinus.botulisms.bouffants.boughless.boughpots.bouillons.bouldered.boulderer.boulevard.bounciest.boundable.boundless.boundness.bounteous.bountiful.bourgeois.bourgeons.bourrides.bourtrees.bousoukia.bousoukis.boutiques.boutiquey.bouvardia.bouzoukia.bouzoukis.bowelless.bowelling.bowerbird.bowhunter.bowlegged.bowsprits.bowstring.bowstrung.bowwowing.boxboards.boxfishes.boxhauled.boxthorns.boyarisms.boychicks.boycotted.boycotter.boyfriend.brabblers.brabbling.bracelets.brachials.brachiate.bracingly.braciolas.bracioles.bracketed.braconids.bracteate.bracteole.bractless.bractlets.braggarts.braggiest.braidings.braillers.brailling.braillist.braincase.brainiacs.brainiest.brainless.brainpans.brainsick.brainstem.brainwash.brakeages.brakeless.bramblier.brambling.branchiae.branchial.branchier.branching.branchlet.brandings.brandless.brandling.brandying.branniest.brannigan.brantails.brashiest.brashness.brasilein.brasilins.brassages.brassards.brassarts.brasserie.brassicas.brassiere.brassiest.brassware.bratticed.brattices.brattiest.brattling.bratwurst.braunites.bravadoes.braveness.braveries.brawliest.brawniest.brazening.brazilein.brazilins.breachers.breaching.breadless.breadline.breadnuts.breadroot.breakable.breakages.breakaway.breakdown.breakeven.breakfast.breakings.breakneck.breakouts.breakwall.breastfed.breasting.breastpin.breathers.breathier.breathily.breathing.brecciate.breeching.breedings.breezeway.breeziest.bregmatic.breveting.brevetted.brevities.breweries.brewskies.briarroot.briarwood.briberies.brickbats.brickiest.brickkiln.bricklike.brickwork.brickyard.bricolage.bridewell.bridgings.briefcase.briefings.briefless.briefness.brierroot.brierwood.brigadier.brigading.brightens.brightest.brightish.brilliant.brimfully.brimstone.brimstony.brineless.bringdown.brininess.briolette.briquette.brisances.briskness.brislings.bristlier.bristling.britannia.brittania.brittlely.brittlest.brittling.britzskas.broachers.broaching.broadaxes.broadband.broadbean.broadbill.broadcast.broadened.broadener.broadleaf.broadloom.broadness.broadside.broadtail.brocading.brocatels.broccolis.brochette.brochures.brockages.broidered.broiderer.brokerage.brokering.bromating.bromelain.bromeliad.bromelins.brominate.brominism.bromizing.bronchial.bronchium.bronziest.bronzings.broodiest.broodless.broodmare.brookites.brooklets.brooklike.brooklime.broomball.broomcorn.broomiest.broomrape.brothered.brotherly.broughams.brouhahas.browallia.browbands.browbeats.browniest.brownness.brownnose.brownouts.browridge.browsable.brucellae.brucellas.brummagem.brunchers.brunching.brunettes.brunizems.brushback.brushfire.brushiest.brushland.brushless.brushoffs.brushwood.brushwork.brusquely.brusquest.brutalise.brutality.brutalize.brutified.brutifies.brutishly.bryophyte.bryozoans.bubalises.bubblegum.bubbliest.buccaneer.buckaroos.buckayros.buckbeans.buckboard.buckbrush.buckeroos.bucketful.bucketing.buckhound.bucklered.buckramed.buckshees.buckshots.buckskins.bucktails.buckteeth.buckthorn.bucktooth.buckwheat.buckyball.buckytube.buddleias.budgetary.budgeteer.budgeters.budgeting.buffaloed.buffaloes.buffering.buffeters.buffeting.buggeries.buggering.bugginess.bughouses.bugleweed.buglosses.buhlworks.buhrstone.buildable.builddown.buildings.bulbously.bulginess.bulgingly.bulkheads.bulkiness.bullbrier.bulldozed.bulldozer.bulldozes.bulldykes.bulleting.bulletins.bullfight.bullfinch.bullfrogs.bullheads.bullhorns bullishly.bullnecks.bullnoses.bullpouts.bullrings.bullshits.bullshots.bullsnake.bullweeds.bullwhips.bullyboys.bullyrags.bulrushes.bulwarked.bumblebee.bumblings.bumfuzzle.bumpering.bumpiness.bumpkinly.bumptious.bunchiest.buncombes.bundlings.bungalows.bungholes.bunglings.bunkering.bunkhouse.bunkmates.buntlines.buoyances.buoyantly.buprestid.burbliest.burdeners.burdening.burgeoned.burgesses.burgonets.burgraves.burladero.burlesque.burliness.burnables.burningly.burnished.burnisher.burnishes.burnoosed.burnooses.burnouses.burnsides.burrowers.burrowing.burrstone.bursarial.bursaries.bursiform.burstones.burthened.bushbucks.bushelers.busheling.bushelled.busheller.bushelman.bushelmen.bushfires.bushgoats.bushiness.bushlands.bushvelds.bushwhack.busticate.bustiness.bustlines.busulfans.busyworks.butadiene.butanones.butchered.butcherer.butcherly.butchness.buteonine.butleries.butterbur.buttercup.butterfat.butterfly.butterier.butteries.buttering.butternut.buttheads.buttinski.buttinsky.buttoners.buttoning.buttstock.butylated.butylates.butylenes.butyrates.buxomness.buzzingly.buzzwords.bycatches.bypassing.byproduct.bystander.bystreets.byzantine.cabaletta.cabalette.cabalisms.cabalists.caballero.caballing.cabbaging.cabbalahs.cabbalism.cabbalist.cabdriver.cabernets.cabestros.cabezones.cabinetry.cabinmate.cablecast.cablegram.cableways.cabochons.caboodles.cabotages.cabrestas.cabrestos.cabrettas.cabrillas.cabrioles.cabriolet.cabstands.cachalots.cachectic.cachepots.cacheting.cachexias.cachexies.cachuchas.caciquism.cacodemon.cacodylic.cacoethes.cacomixle.cacomixls.cacophony.cacuminal.cadasters.cadastral.cadastres.cadaveric.caddisfly.caddishly.cadencies.cadencing.cadential.cadetship.caecilian.caesarean.caesarian.caesarism.caestuses.cafeteria.cafetoria.caffeines.caffeinic.cagelings.cageyness.cairngorm.cakewalks.calabazas.calaboose.caladiums.calamanco.calamaris.calamatas.calamined.calamines.calamints.calamites.calcaneal.calcaneum.calcaneus.calcarate.calcedony.calcicole.calcified.calcifies.calcifuge.calcimine.calcining.calcspars.calctufas.calctuffs.calculate.calculous.caldarium.calendars.calenders.calendric.calendula.calenture.calescent.calfskins.calibrate.califates.calipered.caliphate.calisayas.callaloos.callbacks.callboard.calliopes.callipees.callipers.callosity.calloused.callouses.callously.callowest.callusing.calmative.calmingly.calorific.calorized.calorizes.calotypes.calthrops.calumnies.calutrons.calvarial.calvarian.calvarias.calvaries.calvarium.calvities.calycinal.calycular.calyculus.calypsoes.calypters.calyptras.camarilla.cambering.cambogias.camcorder.camelback.cameleers.camelhair.camellias.camellike.cameraman.cameramen.camisades.camisados.camisoles.camomiles.camorrist.campaigns.campanile.campanili.campanula.campcraft.campesino.campfires.camphenes.camphines.camphires.camphoric.campiness.camporees.campshirt.campsites.campstool.campusing.camshafts.canailles.canalboat.canalised.canalises.canalized.canalizes.canallers.canalling.cancelers.canceling.cancelled.canceller.cancerous.cancroids.candidacy.candidate.candidest.candlelit.candlenut.candlepin.candygram.candytuft.canebrake.canephors.canescent.canewares.canfields.canicular.canistels.canisters.cankering.cankerous.cannabins.cannelons.canneries.cannibals.cannikins.canniness.cannister.cannonade.cannoneer.cannoning.cannulate.canoeable.canoeists.canonical.canonised.canonises.canonists.canonized.canonizer.canonizes.canonries.canoodled.canoodles.canopying.cantabile.cantaloup.cantering.cantharis.canthitis.canticles.cantilena.cantoning.cantorial.cantraips.canulated.canulates.canvasers.canvasing.canvassed.canvasser.canvasses.canyoneer.canyoning.canzonets.capablest.capacious.capacitor.caparison.capellini.capeskins.capeworks.capillary.capitally.capitated.capitella.capitular.capitulum capmakers.capoeiras.caponatas.caponiers.caponized.caponizes.capouches.capriccio.caprifigs.caprioled.caprioles.capsaicin.capsicins.capsicums.capsizing.capsomere.capsomers.capstones.capsulate.capsuling.capsulize.captaincy.captained.captioned.captivate.captivity.captopril.capturers.capturing.capuchins.capybaras.carabiner.carabines.caracaras.caracoled.caracoler.caracoles.caraganas.carageens.carambola.carangids.carangoid.carapaced.carapaces.carapaxes.carassows.caravaned.caravaner.caravelle.carbachol.carbamate.carbamide.carbamino.carbamoyl.carbamyls.carbanion.carbaryls.carbazole.carbineer.carbinols.carbolics.carbolize.carbonade.carbonado.carbonara.carbonate.carbonium.carbonize.carbonous.carbonyls.carboxyls.carbuncle.carburets.carburise.carburize.carcajous.carcanets.carcasses.carcinoid.carcinoma.cardamoms.cardamons.cardamums.cardboard.cardcases.cardigans.cardinals.cardioids.cardsharp.careeners.careening.careerers.careering.careerism.careerist.carefully.caregiver.caressers.caressing.caressive.caretaken.caretaker.caretakes.carhopped.carillons.carinated.cariosity.caritases.carjacked.carjacker.carmakers.carnality.carnation.carnaubas.carnelian.carnified.carnifies.carnitine.carnivals.carnivora.carnivore.carnivory.carnosaur.carnotite.caroaches.carollers.carolling.caroluses.carotenes.carotidal.carousals.carousels.carousers.carousing.carpaccio.carpenter.carpentry.carpetbag.carpeting.carpingly.carpology.carpooled.carpooler.carrageen.carrefour.carriages.carrioles.carroches.carroming.carronade.carrotier.carrotins.carrottop.carrousel.carryalls.carryback.carryouts.carryover.cartelise.cartelize.carthorse.cartilage.cartloads.cartogram.cartoning.cartooned.cartopper.cartouche.cartridge.cartulary.cartwheel.caruncles.carvacrol.carwashes.caryatids.caryopses.caryopsis.caryotins.cascabels.cascables.cascading.caseating.caseation.casebooks.casefying.caseinate.caseloads.casemated.casemates.casements.caseworks.caseworms.cashbooks.cashboxes.cashiered.cashmeres.cashpoint.casimeres.casimires.casketing.cassation.casserole.cassettes.cassimere.cassingle.cassoulet.cassowary.castanets.castaways.casteisms.castellan.castigate.castoreum.castrated.castrater.castrates.castrator.castratos.casuarina.casuistic.casuistry.catabolic.cataclysm.catacombs.catalases.catalatic.catalepsy.catalexes.catalexis.cataloged.cataloger.catalogic.catalogue.catalyses.catalysis.catalysts.catalytic.catalyzed.catalyzer.catalyzes.catamaran.catamenia.catamites.catamount.cataphora.cataphyll.cataplasm.cataplexy.catapults.cataracts.catarrhal.catatonia.catatonic.catbriers.catcalled.catcaller.catchable.catchalls.catchiest.catchment.catchpole.catchpoll.catchword.catechins.catechise.catechism.catechist.catechize.catechols.categoric.catenated.catenates.catenoids.caterwaul.catfacing.catfights.catfishes.catharses.catharsis.cathartic.cathected.cathectic.cathedrae.cathedral.cathedras.cathepsin.catheptic.catheters.catholics.cathouses.catkinate.catnapers.catnapped.catnapper.catoptric.catrigged.cattaloes.catteries.cattiness.cattishly.cattleman.cattlemen.cattleyas.caucusing.caucussed.caucusses.caudation.caudillos.cauldrons.caulicles.caulkings.causalgia.causalgic.causality.causation.causative.causeless.causeries.causeways.cauterant.cauteries.cauterize.cautioned.cautioner.cavalcade.cavaleros.cavaletti.cavaliers.cavallies.cavalries.cavatinas.caveating.caveators.cavendish.caverning.cavernous.cavillers.cavilling.cavitated.cavitates.cavorters.cavorting.ceanothus.ceasefire.ceaseless.cecropias.cedarbird.cedarwood.ceilinged.ceintures.celandine.celebrant.celebrate.celebrity.celeriacs.celestial.celestine.celestite.celibates.celibatic.cellarage.cellarers.cellarets.cellaring.cellarway.cellblock.cellmates.celloidin.cellphone.cellulars.cellulase.cellulite celluloid.cellulose.cellulous.celotexes.cembalist.cementers.cementing.cementite.cementums.cenobites.cenobitic.cenotaphs.censorial.censoring.censurers.censuring.censusing.centaurea.centauric.centenary.centering.centesimi.centesimo.centiares.centigram.centipede.centraler.centrally.centrical.centrings.centriole.centrisms.centrists.centroids.centupled.centuples.centurial.centuries.centurion.cephalins.cephalous.ceraceous.ceramides.ceramists.ceratodus.cercariae.cercarial.cercarian.cercarias.cerebella.cerebrals.cerebrate.cerebrums.cerecloth.cerements.cerotypes.certainer.certainly.certainty.certified.certifier.certifies.certitude.ceruleans.cerusites.cerussite.cervelats.cesareans.cesarians.cespitose.cessation.cesspools.cetaceans.cetaceous.chabazite.chaconnes.chaetopod.chaffered.chafferer.chaffiest.chaffinch.chagrined.chainfall.chainsaws.chairlift.chairmans.chalazion.chalcogen.chaldrons.chalkiest.challenge.challises.chalumeau.chalutzim.chambered.chambrays.chameleon.chamfered.chamferer.chamfrain.chamfrons.chammying.chamoised.chamoises.chamomile.champacas.champagne.champaign.champerty.champions.champleve.chanceful.chanciest.chancroid.chancrous.chandelle.chandlers.chandlery.chanfrons.changeful.changeups.channeled.channeler.chantable.chantages.chanteuse.chantries.chaparral.chapattis.chapbooks.chaperone.chaperons.chapiters.chaplains.chapleted.chappatis.chapteral.chaptered.chaquetas.charabanc.characids.characins.character.charbroil.charcoals.charcoaly.chargrill.chariness.charioted.charismas.charities.charivari.charlatan.charlocks.charlotte.charmeuse.charmless.charriest.chartable.chartered.charterer.chartists.chartless.charwoman.charwomen.chaseable.chasseing.chassepot.chasseurs.chastened.chastener.chastised.chastiser.chastises.chasubles.chatchkas.chatchkes.chatelain.chatoyant.chatrooms.chattered.chatterer.chattiest.chauffers.chauffeur.chaunters.chaunting.chaussure.chawbacon.chazzanim.chazzenim.cheapened.cheapener.cheapjack.cheapness.cheatable.chechakos.checkable.checkbook.checkered.checkless.checklist.checkmark.checkmate.checkoffs.checkouts.checkrein.checkroom.checkrows.checksums.cheddites.cheechako.cheekbone.cheekfuls.cheekiest.cheekless.cheeriest.cheerlead.cheerless.cheesiest.chelaship.chelating.chelation.chelators.chelicera.cheliform.chelipeds.chelonian.chemicals.chemisorb.chemistry.chemokine.chemosorb.chemostat.chemurgic.chenilles.chenopods.cheongsam.chequered.cherimoya.cherished.cherisher.cherishes.chernozem.chertiest.cherubims.cheshires.chestfuls.chestiest.chestnuts.chevalets.chevalier.chevelure.cheverons.chewiness.chiasmata.chibouque.chicalote.chicaners.chicanery.chicaning.chichiest.chickadee.chickaree.chickened.chickpeas.chickweed.chicories.chidingly.chiefdoms.chiefship.chieftain.chigetais.chignoned.chihuahua.chilblain.childbeds.childcare.childhood.childless.childlier.childlike.chiliadal.chiliadic.chiliarch.chiliasms.chiliasts.chilidogs.chilliest.chillness.chilopods.chiltepin.chimaeras.chimaeric.chimbleys.chimblies.chimerism.chinaware.chinbones.chincapin.chinchier.chinkapin.chinkiest.chinstrap.chintzier.chipboard.chipmucks.chipmunks.chipotles.chippable.chippered.chippiest.chirality.chirimoya.chiropody.chiropter.chirpiest.chirruped.chiselers.chiseling.chiselled.chiseller.chitchats.chitinoid.chitinous.chitlings.chitosans.chittered.chivalric.chivareed.chivarees.chivaried.chivaries.chivvying.chlamydes.chlamydia.chlamyses.chloasmas.chloracne.chlorates.chlordane.chlordans.chlorella.chlorides.chloridic.chlorines.chlorites.chloritic.chloroses.chlorosis.chlorotic.chockfull.chocolate.chocolaty.choirboys.choirgirl.chokeable.chokebore.chokedamp.chokehold.chokingly.cholecyst.choleraic.choleroid.chondrite.chondroma.chondrule.choosiest.chophouse.choplogic.choppered.choppiest.chopsocky.chopstick.chordates.choreatic.choriambs.chorioids.chorionic.chorister.choroidal.chortlers.chortling.chorusing.chorussed.chorusses.chowchows.chowdered.chowhound.chowtimes.chresards.chrismons.christens.christies.chromates.chromatic.chromatid.chromatin.chromides.chromiest.chromings.chromites.chromiums.chromized.chromizes.chromogen.chronaxie.chronicle.chrysalid.chrysalis.chthonian.chubascos.chubbiest.chuckhole.chucklers.chuckling.chuffiest.chugalugs.chummiest.chumships.chunkiest.chuntered.churchier.churching.churchman.churchmen.churnings.chutzpahs.chymosins.cicatrice.cicatrize.cicerones.cichlidae.cicisbeos.cigarette.cigarillo.cigarlike.ciguatera.cilantros.ciliately.ciliation.ciliolate.cimbaloms.cinchonas.cinchonic.cinctured.cinctures.cindering.cinderous.cineastes.cinematic.cinephile.cineraria.cinereous.cingulate.cinnabars.cinnamons.cinnamony.cinnamyls.cinquains.cioppinos.cipherers.ciphering.ciphonies.cipollino.circadian.circinate.circuital.circuited.circuitry.circulars.circulate.cirrhosed.cirrhoses.cirrhosis.cirrhotic.cirriform.cirripede.cirripeds.cisalpine.cisplatin.cisternae.cisternal.cistronic.citations.citifying.citizenly.citizenry.citrinins.cityscape.civetlike.civically.civicisms.civilians.civilised.civilises.civilized.civilizer.civilizes.civilness.clabbered.claddaghs.claddings.cladistic.cladodial.cladogram.clafoutis.claimable.claimants.clamantly.clambakes.clambered.clamberer.clammiest.clamorers.clamoring.clamorous.clamoured.clampdown.clamshell.clamworms.clangored.clangours.clankiest.clapboard.claptraps.claqueurs.clarences.clarified.clarifier.clarifies.clarinets.clarioned.clarionet.clarities.classable.classical classiest.classisms.classists.classless.classmate.classroom.classwork.clathrate.clattered.clatterer.claughted.claustral.claustrum.clavately.clavation.clavering.clavicles.clavicorn.claviform.clawbacks.claybanks.claymores.claystone.claytonia.claywares.cleanable.cleanlier.cleanness.cleansers.cleansing.clearable.clearance.clearcuts.cleareyed.clearings.clearness.clearweed.clearwing.cleavable.cleavages.clemently.clenchers.clenching.clepsydra.clergyman.clergymen.clericals.clerihews.clerisies.clerkdoms.clerklier.clerkship.cleveites.cleverest.cleverish.clickable clickless.clickwrap.clientage.clientele.cliffiest.clifflike.climactic.climatize.climaxing.climbable.climbdown.clinchers.clinching.clingfish.clingiest.clinician.clinkered.clinquant.clintonia.clipboard.clippable.clippings.clipsheet.cliquiest.clitellum.cliticize.cloakroom.clobbered.clochards.clocklike.clockwise.clockwork.cloddiest.clodpates.clodpoles.clodpolls.cloggiest.cloisonne.cloisters.cloistral.clonicity.clonidine.closeable closedown.closeness.closeouts.closetful.closeting.closuring.clothiers.clothings.clothlike.cloturing.cloudiest cloudland.cloudless.cloudlets.cloudlike.cloyingly.clozapine.clubbable.clubbiest.clubfaces.clubhands.clubhauls.clubheads.clubhouse.clubrooms.clubroots.clubwoman.clubwomen.clumpiest.clumplike.clumsiest.clunkiest.clupeoids.clustered.clutching.cluttered.cnidarian.coachable.coachwork.coactions.coadapted.coadjutor.coadmired.coadmires.coadunate.coagulant.coagulase.coagulate.coagulums.coalboxes.coalesced.coalesces.coalfield.coalholes.coalified.coalifies.coalition.coalsacks.coalsheds.coalyards.coanchors.coannexed.coannexes.coappears.coarctate.coarsened.coassists.coassumed.coassumes.coastally.coastings.coastland.coastline.coastward.coastwise.coatdress.coatracks.coatrooms.coattails.coattends.coattests.coauthors.coaxially.coaxingly.cobalamin.cobaltine.cobaltite.cobaltous.cobwebbed.cocainism.cocainize.cocaptain.coccidium.coccoidal.coccolith.coccygeal.cochaired.cochineal.cochleate.cocineras.cockamamy.cockapoos.cockateel.cockatiel.cockatoos.cockbills.cockboats.cockcrows.cockerels.cockering.cockfight.cockhorse.cockiness.cocklebur.cocklofts.cockneyfy.cockroach.cockscomb.cocksfoot.cockshies.cockshuts.cockspurs.cockswain.cocktails.cocoanuts.cocobolas.cocobolos.cocooning.cocoplums.cocounsel.cocozelle.cocreated.cocreates.cocreator.coculture.cocurator.codebooks.codebtors.coderived.coderives.codesigns.codevelop.codfishes.codifiers.codifying.codirects.codpieces.codrivers.codriving.coediting.coeditors.coeffects.coelomata.coelomate.coelostat.coemploys.coempting.coenacted.coenamors.coendured.coendures.coenobite.coenocyte.coenosarc.coenzymes.coequally.coequated.coequates.coercible.coercibly.coercions.coerected.coeternal.coevality.coevolved.coevolves.coexerted.coexisted.coextends.cofactors.cofeature.coffeepot.cofferdam.coffering.coffining.cofinance.cofounded.cofounder.cogencies.cogitable.cogitated.cogitates.cogitator.cognately.cognation.cognising.cognition.cognitive.cognizant.cognizers.cognizing.cognomens.cognomina.cognovits.cogwheels.cohabited.cohabiter.coheading.coheiress.coherence.coherency.cohesions.cohobated.cohobates.coholders.cohostess.cohosting.cohousing.coiffeurs.coiffeuse.coiffured.coiffures.coincided.coincides.coinfects.coinhered.coinheres.coinmates.coinsured.coinsurer.coinsures.cointreau.coinvents.coistrels.coistrils.coitional.cojoining cokeheads.colanders.colcannon.colchicum.colcothar.coldblood.coldcocks.coleaders.coleading.colectomy.coleseeds.coleslaws.colessees.colessors.coleworts.colicines.colickier.colicroot.colicweed.coliforms.coliphage.coliseums.colistins.colitises.collagens.collaging.collagist.collapsed.collapses.collarets.collaring.collating.collation.collators.colleague.collected collector.collegers.collegial.collegian.collegium.colleting.colliders.colliding.colligate.collimate.collinear.collinses.collinsia.collision.collocate.collodion.collogued.collogues.colloidal.colloquia.collotype.collotypy.colluders.colluding.collusion.collusive.colluvial.colluvium.collyrium.colobuses.colocated.colocates.colocynth.colombard.colonelcy.colonials.colonised.colonises.colonists.colonitis.colonized.colonizer.colonizes.colonnade.colophons.colophony.colorable.colorably.colorants.colorbred.colorcast.colorfast.colorific.colorings.colorisms.colorists.colorized colorizer.colorizes.colorless.colorways.colosseum.colostomy.colostral.colostrum.colourers.colouring.coltishly.coltsfoot.colubrids.colubrine.columbary.columbine.columbite.columbium.columella.columneas.columnist.comanaged.comanager.comanages.comatulae.comatulid.combatant.combaters.combating.combative.combatted.combineds.combiners.combining.combusted.combustor.comebacks.comedians.comedones.comedowns comeliest.comembers.comethers.comfiness.comforted.comforter.comically.comingled.comingles.commanded.commander.commandos.commenced.commencer.commences.commendam.commended.commender.commensal.commented.commenter.commerced.commerces.commingle.comminute.commissar.committal.committed.committee.commixing.commodify.commodity.commodore.commonage.commoners.commonest.commotion.commoving.communard.communers.communing.communion.communise.communism.communist.community.communize.commutate.commuters.commuting.comonomer.compacted.compacter.compactly.compactor.compadres.companied.companies.companion.comparers.comparing.comparted.compassed.compasses.compeered.compelled.compeller.compendia.compering.competent.competing.compilers.compiling.complains.complaint.complects.completed.completer.completes.complexed.complexer.complexes.complexly.compliant.complices.complicit.compliers.complines.complying.component.comported.composers.composing.composite.composted.composter.composure.compounds.comprador.comprisal.comprised.comprises.comprized.comprizes.computers.computing.computist.comradely.comradery.conations.concavely.concaving.concavity.concealed.concealer.conceders.conceding.conceited.conceived.conceiver.conceives.concenter.conceptus.concerned.concerted.concertos.conchoids.concierge.conciliar.concisely.concisest.concision.conclaves.concluded.concluder.concludes.concocted.concocter.concoctor.concordal.concordat.concourse.concreted.concretes.concubine.concurred.concussed.concusses.condemned.condemner.condemnor.condensed.condenser.condenses.condignly.condiment.condition.condolent.condolers.condoling.condoners.condoning.conducers.conducing.conducive.conducted.conductor.condyloid.condyloma.conelrads.conenoses.conepates.conepatls.confabbed.confected.conferees.conferral.conferred.conferree.conferrer.confervae.conferval.confervas.confessed.confesses.confessor.confidant.confident.confiders.confiding.configure.confiners.confining.confirmed.confirmer.confiteor.confiture.conflated.conflates.conflicts.confluent.confluxes.conformal.conformed.conformer.confounds.confreres.confronts.confusing.confusion.confuters.confuting.congealed.congealer.congeeing.congeners.congenial.congeries.congested.conglobed.conglobes.congruent.congruity.congruous.conically.conjoined.conjoiner.conjugant.conjugate.conjuncts.conjuntos.conjurers.conjuring.conjurors.connately.connation.connected.connecter.connector.connexion.connivent.connivers.connivery.conniving.connoting.connubial.conodonts.conominee.conquered.conquerer.conqueror.conquests.conquians.conscious.conscribe.conscript.consensus.consented.consenter.conserved.conserver.conserves.considers.consigned.consignee.consigner.consignor.consisted.consolers.consoling.consommes.consonant.consorted.consortia.conspired.conspirer.conspires.constable.constancy.constants.constrain.constrict.construal.construct.construed.construer.construes.consulate.consulted.consulter.consultor.consumers.consuming.contacted.contactee.contactor.contagion.contagium.contained.container.contemned.contemner.contemnor.contempts.contended.contender.contented.contessas.contested.contester.continent.continual.continued.continuer.continues.continuos.continuum.contorted.contoured.contracts.contrails.contralti.contralto.contrasts.contrasty.contrived.contriver.contrives.contumacy.contumely.contusing.contusion.contusive.conundrum.convected.convector.conveners.convening.convenors.convented.converged.converges.conversed.converser.converses.conversos.converted.converter.convertor.convexity.conveyers.conveying.conveyors.convicted.convinced.convincer.convinces.convivial.convokers.convoking.convolute.convolved.convolves.convoying.convulsed.convulses.cookbooks.cookeries.cookhouse.cookshack.cookshops.cookstove.cookwares.cooldowns.coonhound.coonskins.cooperage.cooperate.cooperies.coopering.cooptions.copacetic.coparents.copartner.copasetic.copastors.copatrons.copayment.copemates.copesetic.copestone.copiously.coplotted.copolymer.copperahs.coppering.coppicing.copremias.copresent.coprinces.coproduce.coproduct.coprolite.coprology.copublish.copulated.copulates.copybooks.copydesks.copyedits.copygirls.copyholds.copylefts.copyreads.copyright.coquetted.coquettes.coquilles.coracoids.coralline.coralloid.coralroot.corantoes.corbeille.corbeling.corbelled.corbicula.cordately.cordelled.cordelles.cordgrass.cordially.cordiform.cordoning.cordonnet.cordovans.corduroys.cordwains.cordwoods.coredeems.corelated.corelates.coreopsis.coriander.corkboard.corkiness.corkscrew.corkwoods.cormorant.cornballs.cornbraid.cornbread.corncakes.corncrake.corncribs.corneitis.cornelian.cornering.cornerman.cornermen.cornetist.cornfield.cornhusks.corniches.cornichon.cornicing.cornicles.cornified.cornifies.corniness.cornmeals.cornpones.cornrowed.cornstalk.corollary.corollate.coronachs.coronally.coronated.coronates.coroneted.corotated.corotates.corporals.corporate.corporeal.corposant.corpulent.corpuscle.corrading.corralled.corrasion.corrasive.corrected.correcter.correctly.corrector.correlate.corridors.corrivals.corrodies.corroding.corrosion.corrosive.corrugate.corrupted.corrupter.corruptly.corruptor.corselets.corseting.corticate.corticoid.corticose.cortisols.cortisone.corundums.coruscant.coruscate.corvettes.corybants.corydalis.corymbose.corymbous.coryphaei.coryphees.coscripts.cosecants.coseismal.coseismic.coshering.cosigners.cosigning.cosmetics.cosmogony.cosmoline.cosmology.cosmonaut.cosmotron.cosponsor.cosseting.costarred.costively.costliest.costumers.costumery.costumier.costuming.cotangent.cotenancy.cotenants.cothurnal.cothurnus.cotillion.cotillons.cotinines.cotqueans.cotrustee.cottagers.cottoning.cotyledon.couchette.couchings.coulibiac.coulisses.coulombic.coumarins.coumarone.coumarous.councilor.counseled.counselee.counselor.countable.countably.countdown.countered.countians.countless.countries.coupledom.couplings.couponing.courantes.courantos.courgette.coursings.courteous.courtesan.courtezan.courtiers.courtlier.courtroom.courtship.courtside.courtyard.cousinage.couthiest.couturier.covalence.covalency.covariant.covariate.covarying.covelline.covellite.covenants.coverable.coverages.coveralls.coverings.coverless.coverlets.coverlids.coversine.coverslip.coverture.covetable.cowardice.cowboying.cowfishes.cowhiding.cowinners.cowlstaff.coworkers.cowriters.cowriting.cowritten.coxalgias.coxalgies.coxcombic.coxcombry.coxitides.coxswains.coynesses.coyotillo.cozenages.crabapple.crabbedly.crabbiest.crabeater.crabgrass.crabmeats.crabstick.crackback.crackdown.crackhead.crackings.cracklier.crackling.cracknels.crackpots.cracksman.cracksmen.craftiest.craftsman.craftsmen.craftwork.craggiest.cramoisie.crampfish.crampiest.crampoons.cranberry.cranching.cranially.craniates.crankcase.crankiest.crankling.crankpins.crannoges.cranreuch.crapelike.crappiest.crapshoot.crapulent.crapulous.crassness.cratering.craterlet.craunched.craunches.cravening.crawdaddy.crawliest.crawlways.crayoners.crayoning.crayonist.craziness.crazyweed.creakiest.creamcups.creamiest.creampuff.creamware.creasiest.creatable.creatines.creations.creatives.creatural.creatures.credences.credendum.credenzas.crediting.creditors.credulity.credulous.creepages.creepiest.creeshing.cremating.cremation.cremators.crematory.crenately.crenation.crenature.crenelate.creneling.crenelled.crenelles.crenshaws.crenulate.creodonts.creolised.creolises.creolized.creolizes.creosoted.creosotes.creosotic.crepitant.crepitate.crepuscle.crescendi.crescendo.crescents.crestings.crestless.cretinism.cretinoid.cretinous.cretonnes.crevalles.crevassed.crevasses.crewmates.crewnecks.cribbages.cribbings.cribworks.cricetids.cricketed.cricketer.crimeless.criminals.criminate.criminous.crimpiest.crimpling.crimsoned.crinklier.crinkling.crinoidal.crinoline.cripplers crippling.crispated.crispened.crisphead.crispiest.crispness.cristated.criterial.criterion.criterium.criticise.criticism.criticize.critiqued.critiques.croakiest.croceines.crocheted.crocheter.crocketed.crockpots.crocodile.crocoites.croissant.cromlechs.cronyisms.crookback.crookeder.crookedly.crookneck.croplands.croqueted.croquette.crossable.crossarms.crossbars.crossbeam.crossbill.crossbows.crossbred.crossbuck.crosscuts.crossfire.crosshair.crosshead.crossings.crossjack.crosslets.crossness.crossover.crossroad.crossruff.crosstalk.crosstied.crossties.crosstown.crosstree.crosswalk.crossways.crosswind.crosswise.crossword.crotchets.crotchety.crotonbug.crouching.croupiers.croupiest.croustade.crowberry.crowdedly.crowfoots.crownless.crowsfeet.crowsfoot.crowsteps.crucially.crucibles.crucifers.crucified.crucifier.crucifies.cruciform.cruddiest.crudeness.crudities.cruellest.cruelness.cruelties.cruisings.crumbiest.crumblier.crumbling.crumhorns.crummiest.crumplier.crumpling.crunchers.crunchier.crunchily.crunching.crusaders.crusading.crusadoes.crushable.crustacea.crustiest.crustless.crutching.cruzadoes.cruzeiros.crybabies.cryobanks.cryogenic.cryolites.cryometer.cryophyte.cryoprobe.cryoscope.cryoscopy.cryostats.cryotrons.cryptical.cryptogam.cryptonym.ctenidium.cuadrilla.cubanelle.cubatures.cubbyhole.cubically.cubiculum.cuckolded.cuckoldry.cuckooing.cucullate.cucumbers.cucurbits.cuddliest.cudgelers.cudgeling.cudgelled.cufflinks.cuirassed.cuirasses.cuisinart.cuittling.culicines.cullender.culminant.culminate.cultigens.cultishly.cultivars.cultivate.cultrated.culturati.culturing.culturist.culverins.cumberers.cumbering.cumbrance.cumulated.cumulates.cunctator.cuneately.cuneiform.cuniforms.cunninger.cunningly.cupbearer.cupboards.cupellers.cupelling.cupferron.cupolaing.curandera.curandero.curarines.curarized.curarizes.curassows.curatives.curbsides.curbstone.curculios.curettage.curetting.curiosity.curiouser.curiously.curlicued.curlicues.curliness.curlpaper.curlycues.currajong.currejong.currently.curricles.curricula.currijong.currishly.currycomb.cursedest.cursively.cursorial.cursorily.curtailed.curtailer.curtained.curtesies.curtilage.curtseyed.curtsying.curvature.curveball.curveting.curvetted.cushiness.cushioned.cuspidate.cuspidors.cusswords.custodial.custodian.custodies.customary.customers.customise.customize.custumals.cutaneous.cutesiest.cuticulae.cuticular.cutinised.cutinises.cutinized.cutinizes.cutlasses.cutleries.cutpurses.cutthroat.cuttingly.cutwaters.cyanamide.cyanamids.cyaniding.cyanogens.cyanotype.cyanurate.cybercafe.cybercast.cybernate.cybernaut.cyberporn.cyberpunk.cybrarian.cycadeoid.cyclamate.cyclamens.cyclecars.cycleries.cycleways.cyclicals.cyclicity.cyclitols.cyclizine cyclizing.cycloidal.cyclonite.cyclopean.cyclorama.cyclotron.cylinders.cylindric.cymbaleer.cymbalers.cymbalist.cymbaloms.cymbidium.cymblings.cymogenes.cymograph.cymophane.cynically.cynicisms.cynosural.cynosures.cyphering.cypresses.cyprinids.cyprinoid.cysteines.cysteinic.cystocarp.cystocele.cystolith.cystotomy.cytasters.cytidines.cytokines.cytokinin.cytologic.cytolyses.cytolysin.cytolysis.cytolytic.cytoplasm.cytoplast.cytosines.cytosolic.cytotoxic.cytotoxin.czardases.czarevnas.czaritzas.dabblings.dabchicks.dachshund.dackering.dacoities.dacquoise.dactylics.dadaistic.daedalean.daedalian.daffiness.daffodils.daggering.dahabeahs.dahabiahs.dahabiehs.dahabiyas.daidzeins.daikering.dailiness.dailyness.daintiest.daiquiris.dairyings.dairymaid.daishikis.dakerhens.dakoities.dalliance.dalmatian.dalmatics.daltonian.daltonism.damascene.damaskeen.damasking.dameworts.damnation.damnatory.damndests.damnedest.damnified.damnifies.damningly.dampeners.dampening.damselfly.danceable.dandelion.dandering.dandiacal.dandified.dandifies.dandriffs.dandruffs.dandruffy.dandyisms.danegelds.danegelts.daneweeds.daneworts.dangering.dangerous.dangliest.danseuses.dapperest.daredevil.darkeners.darkening.darkliest.darklings.darkrooms.darlingly.darnation.darndests.darnedest.dartboard.dartingly.dashboard.dashingly.dastardly.dasymeter.databanks.databased.databases.datebooks.datedness.datelined.datelines.dauberies.daubingly.daughters.daundered.dauntless.dauphines.davenport.dawsonite.daybreaks.daydreams.daydreamt.daydreamy.dayflower.daylights.daylilies.dayspring.dayworker.dazedness.deacidify.deaconess.deaconing.deadbeats.deadbolts.deadeners.deadening.deadfalls.deadheads.deadliest.deadlifts.deadlight.deadlined.deadlines.deadlocks.deadwoods.deaerated.deaerates.deaerator.deafening.dealation.deaminase.deaminate.deaminize.deaneries.deanships.deathbeds.deathblow.deathcups.deathless.deathlike.deathsman.deathsmen.deathtrap.debagging.debarkers.debarking.debarment.debarring.debatable.debatably.debauched.debauchee.debaucher.debauches.debeaking.debearded.debenture.debonaire.debouched.debouches.debriding.debriefed.debriefer.debruised.debruises.debuggers.debugging.debunkers.debunking.debutante.debutants.decadence.decadency.decadents.decagonal.decagrams.decahedra.decalcify.decaliter.decalogue.decameter.decamping.decanters.decanting.decapodal.decapodan.decathlon.decayable.decayless.deceasing.decedents.deceitful.deceivers.deceiving.deceleron.decemviri.decemvirs.decencies.decennary.decennial.decennium.decenters.decentest.decentred.decentres.deception.deceptive.decerning.decertify.decidable.decidedly.deciduate.deciduous.decigrams.deciliter.decilitre.decillion.decimally.decimated.decimates.decimator.decimeter.decimetre.deciphers.decisions.deckhands.deckhouse.declaimed.declaimer.declarant.declarers.declaring.declassed.declasses.declawing.decliners.declining.declinist.declivity.decocting.decoction.decoctive.decollate.decollete.decolored.decolours.decompose.decongest.decontrol.decorated.decorates.decorator.decoupage.decoupled.decoupler.decouples.decreased.decreases.decreeing.decrement.decretals.decretive.decretory.decrowned.decrypted.decumbent.decupling.decurions.decurrent.decurving.decussate.dedicated.dedicatee.dedicates.dedicator.deducible.deducibly.deducting.deduction.deductive.deejaying.deemsters.deepeners.deepening.deepfroze.deepwater.deerberry.deerflies.deerhound.deerskins.deerweeds.deeryards.defalcate.defanging.defatting.defaulted.defaulter.defeaters.defeating.defeatism.defeatist.defeature.defecated.defecates.defecator.defecting.defection.defective.defectors.defencing.defendant.defenders.defending.defensing.defensive.deference.deferents.deferment.deferrals.deferrers.deferring.defiances.defiantly.deficient.defiladed.defilades.definable.definably.definiens.deflaters.deflating.deflation.deflators.defleaing.deflected.deflector.deflexion.deflowers.defoamers.defoaming.defocused.defocuses.defoggers.defogging.defoliant.defoliate.deforcers.deforcing.deforests.deformers.deforming.deformity.defragged.defragger.defrauded.defrauder.defrayals.defrayers.defraying.defrocked.defrosted.defroster.defueling.defuelled.defunding.degassers.degassing.degaussed.degausser.degausses.degenders.degerming.deglazing.degraders.degrading.degreased.degreaser.degreases.degumming.degusting.dehiscent.dehiscing.dehorners.dehorning.dehorting.dehydrate.deionized.deionizer.deionizes.deistical.dejecting.dejection.dejeuners.dekagrams.dekaliter.dekalitre.dekameter.dekametre.delations.delayable.deleading.deleaving.delectate.delegable.delegated.delegatee.delegates.delegator.deletable.deletions.delftware.delicates.delicious.delighted.delighter.delimited.delimiter.delineate.delirious.deliriums.delisting.delivered.deliverer.delousers.delousing.delphinia.deltoidei.delusions.delusters.demagoged.demagogic.demagogue.demandant.demanders.demanding.demantoid.demarcate.demarches.demarking.demasting.demeaning.demeanors.demeanour.demential.dementias.dementing.demeraran.demeraras.demergers.demerging.demerited.demijohns.demilunes.demimonde.demisable.demission.demisters.demitasse.demitting.demiurges.demiurgic.demivolte.demivolts.demiworld.demobbing.democracy.democrats.demoniacs.demonical.demonised.demonises.demonisms.demonists.demonized.demonizes.demotions.demotists.demounted.dempsters.demulcent.demulsify.demurrage.demurrals.demurrers.demurring.demystify.denatured.denatures.dendrimer.dendrites.dendritic.denervate.denigrate.denitrate.denitrify.denizened.denominal.denotable.denounced.denouncer.denounces.denseness.densified.densifies.densities.dentality.dentalium.dentately.dentation.denticles.dentiform.dentistry.dentition.dentulous.denturist.denudated.denudates.denyingly.deodorant.deodorize.deorbited.deoxidize.depainted.departees.departing.departure.dependant.dependent.depending.depeopled.depeoples.deperming.depicters.depicting.depiction.depictors.depilated.depilates.depilator.deplaning.depleters.depleting.depletion.depletive.deplorers.deploring.deployers.deploying.depluming.deponents.deportees.deporters.deporting.deposable.deposited.depositor.depravers.depraving.depravity.deprecate.depredate.deprenyls.depressed.depresses.depressor.deprivals.deprivers.depriving.deprogram.depthless.depurated.depurates.depurator.deputable.deputized.deputizes.deraigned.derailing.derangers.deranging.deratting.derelicts.derepress.deringers.derisible.derisions.derivable.derivates.dermatoid.dermatome.dermestid.derogated.derogates.derrieres.derringer.dervishes.desalters.desalting.desanding.descanted.descanter.descended.descender.described.describer.describes.descriers.descrying.desecrate.deselects.deserters.desertify.deserting.desertion.deservers.deserving.desiccant.desiccate.designate.designees.designers.designing.desilvers.desinence.desirable.desirably.desisting.deskbound.desmidian.desmosome.desolated.desolater.desolates.desolator.desorbing.despaired.despairer.desperado.desperate.despisals.despisers.despising.despiting.despoiled.despoiler.desponded.despotism.despumate.destained.destinies.destining.destitute.destriers.destroyed.destroyer.destructs.desuetude.desugared.desulfurs.desultory.detachers.detaching.detailers.detailing.detainees.detainers.detaining.detassels.detecters.detecting.detection.detective.detectors.detention.detentist.detergent.detergers.deterging.determent.determine.deterrent.deterrers.deterring.detersive.detesters.detesting.dethroned.dethroner.dethrones.detickers.deticking.detonable.detonated.detonates.detonator.detouring.detracted.detractor.detrained.detriment.detrition.detruding.detrusion.deuterate.deuteride.deuterium.deuterons.devaluate.devaluing.devastate.deveining.developed.developer.developes.developpe.deverbals.devesting.deviances.deviating.deviation.deviative.deviators.deviatory.devilfish.devilkins.devilling.devilment.devilries.devilwood.deviously.devisable.devitrify.devoicing.devolving.devotedly.devotions.devourers.devouring.devoutest.dewatered.dewaterer.dewclawed.dewlapped.dewooling.dewormers.deworming.dexterity.dexterous.dextrally.dextrines.dextrorse.dextroses.dezincing.dezincked.diabetics.diablerie.diabolism.diabolist.diabolize.diacetyls.diachrony.diaconate.diacritic.diactinic.diademing.diaereses.diaeresis.diaeretic.diagnosed.diagnoses.diagnosis.diagonals.diagramed.diagraphs.dialectal.dialectic.diallages.diallings.diallists.dialogers.dialoging.dialogist.dialogued.dialoguer.dialogues.dialysate.dialysers.dialysing.dialyzate.dialyzers.dialyzing.diamagnet.diamantes.diameters.diametral.diametric.diamonded.diandrous.diapasons.diapaused.diapauses.diapering.diaphones.diaphragm.diaphyses.diaphysis.diarchies.diaristic.diarrheal.diarrheas.diarrheic.diarrhoea.diasporas.diaspores.diasporic.diastases.diastasic.diastatic.diastemas.diastoles.diastolic.diathermy.diatheses.diathesis.diathetic.diatomite.diatribes.diatropic.diazepams.diazinons.diazonium.diazotize.dibromide.dicentras.dicentric.dichasial.dichasium.dichogamy.dichondra.dichotomy.dichroism.dichroite.dichromat.dichromic.dickenses.dickering.dickheads.diclinies.diclinism.diclinous.dicrotism.dictating.dictation.dictators.dictional.dicumarol.dicyclies.didactics.didappers.didjeridu.didymiums.dieldrins.diemakers.dieseling.dieselize.diesinker.diestocks.diestrous.diestrums.dietaries.dietarily.dietetics.dietician.dietitian.different.differing.difficile.difficult.diffident.diffracts.diffusely.diffusers.diffusing.diffusion.diffusive.diffusors.digamists.digastric.digeneses.digenesis.digenetic.digesters.digestifs.digesting.digestion.digestive.digestors.digitalin.digitalis.digitally.digitated.digitized.digitizer.digitizes.digitonin.digitoxin.diglossia.diglossic.dignified.dignifies.dignitary.dignities.digraphic.digressed.digresses.dihedrals.dihedrons.dihybrids.dilatable.dilatably.dilatancy.dilatants.dilatator.dilations.diligence.diltiazem.dilutions.diluvions.diluviums.dimension.dimerisms.dimerized.dimerizes.dimethyls.dimidiate.dimnesses.dimorphic.dimpliest.dimwitted.dingdongs.dinginess.dinosaurs.dinothere.diobolons.diocesans.dioecious.dioecisms.dioestrus.diolefins.dionysiac.dionysian.diopsides.diopsidic.dioptases.dioptrics.diosgenin.dipeptide.diphenyls.diphthong.diplegias.diplexers.diploidic.diplomacy.diplomaed.diplomata.diplomate.diplomats.diplontic.diplopias.diplopods.diplotene.dipnetted.dipperful.dippiness.dipsticks.dipterans.dipterous.directest.directing.direction.directive.directors.directory.directrix.direfully.dirgelike.dirigible.dirigisme.dirigiste.dirtiness.disablers.disabling.disabusal.disabused.disabuses.disaccord.disaffect.disaffirm.disagreed.disagrees.disallows.disannuls.disappear.disarmers.disarming.disarrays.disasters.disavowal.disavowed.disavower.disbanded.disbarred.disbelief.disbosoms.disbowels.disbranch.disbudded.disburden.disbursal.disbursed.disburser.disburses.discalced.discanted.discarded.discarder.discasing.discepted.discerned.discerner.discharge.disciform.discipled.disciples.disclaims.disclimax.disclosed.discloser.discloses.discoidal.discolors.discolour.discomfit.discorded.discounts.discourse.discovers.discovert.discovery.discredit.discrowns.discussed.discusser.discusses.disdained.diseasing.disembark.disembody.disemploy.disenable.disendows.disengage.disentail.disesteem.disfavors.disfavour.disfigure.disfrocks.disgorged.disgorges.disgraced.disgracer.disgraces.disguised.disguiser.disguises.disgusted.dishcloth.dishclout.dishdasha.dishelmed.disherits.dishevels.dishonest.dishonors.dishtowel.dishwares.dishwater.disinfect.disinfest.disinform.disinters.disinvest.disinvite.disjected disjoined.disjoints.disjuncts.diskettes.dislikers.disliking.dislimned.dislocate.dislodged.dislodges.dismalest.dismantle.dismasted.dismaying.dismember.dismissal.dismissed.dismisses.dismounts.disobeyed.disobeyer.disoblige.disorders.disorient.disowning.disparage.disparate.disparity.disparted.dispelled.dispeller.dispended.dispensed.dispenser.dispenses.dispeople.dispersal.dispersed.disperser.disperses.dispirits.displaced.displacer.displaces.displants.displayed.displayer.displease.disploded.displodes.displumed.displumes.disported.disposals.disposers.disposing.disposure.dispraise.dispreads.disprized.disprizes.disproofs.disproval.disproved.disproven.disprover.disproves.disputant.disputers.disputing.disquiets.disrating.disregard.disrelish.disrepair.disrepute.disrobers.disrobing.disrooted.disrupted.disrupter.disruptor.dissaving.disseated.dissected.dissector.disseised.disseisee.disseises.disseisin.disseisor.disseized.disseizee.disseizes.disseizin.disseizor.dissemble.dissensus.dissented.dissenter.disserted.disserved.disserves.dissevers.dissident.dissipate.dissocial.dissolute.dissolved.dissolver.dissolves.dissonant.dissuaded.dissuader.dissuades.distained.distanced.distances.distantly.distasted.distastes.distemper.distended.distender.distichal.distilled.distiller distingue.distorted.distorter.distracts.distrains.distraint.distraite.districts.distrusts.disturbed.disturber.disulfate.disulfide.disulfids.disunions.disunited.disuniter.disunites.disvalued.disvalues.disyoking.ditheisms.ditheists.ditherers.dithering.dithyramb.ditsiness.dittanies.ditziness.diuretics.diurnally.divagated.divagates.divalence.divebombs.divergent.diverging.diversely.diversify.diversion.diversity.diverters.diverting divesting.divesture.dividable.dividedly.dividends.divinised.divinises.divinized.divinizes.divisible.divisibly.divisions.divorcees.divorcers.divorcing.divorcive.divulgate.divulgers.divulging.divulsing.divulsion.divulsive.dizenment.dizygotic.dizziness.djellabah.djellabas.dobsonfly.docketing.dockhands.docklands.docksides.dockyards.doctorate.doctorial.doctoring.doctrinal.doctrines.docudrama.documents.dodderers.doddering.dodecagon.dodgeball.dodgeries.dodginess.dogearing.dogeships.dogfights.dogfishes.dogfought.doggerels.doggeries.doggishly.doggonest.doggoning.doghanged.doghouses.doglegged.dogmatics.dogmatism.dogmatist.dogmatize.dognapers.dognaping.dognapped.dognapper.dogrobber.dolabrate.dolcettos.dolefully.dolerites.doleritic.dollarize.dollhouse.dollishly.dolloping.dollybird.dolomites.dolomitic.doltishly.domesdays.domestics.domically.domiciled.domiciles.dominance.dominancy.dominants.dominated.dominates.dominator.domineers.dominical.dominicks.dominions.dominique.dominiums.donations.donatives.donnicker.donnikers.donnishly.donorship.doodlebug.doohickey.doomfully.doomsayer.doomsdays.doomsters.doorbells.doorjambs.doorknobs.doornails.doorplate.doorposts.doorsills.doorsteps.doorstops.doorwoman.doorwomen.dooryards.dopamines.dopeheads.dopesheet.dopesters.dopeyness.dorbeetle.dorkiness.dormitory.doronicum.dosimeter.dosimetry.dosserets.dosshouse.dotations.dotterels.dottiness.doubleton.doubloons.doublures.doubtable.doubtless.douchebag.doughboys.doughface.doughiest.doughlike.doughnuts.doughtier.doughtily.doupionis.douppioni.douzepers.dovecotes.dovetails.dowdiness.dowelling.dowerless.dowitcher.downbeats.downburst.downcasts.downcomes.downcourt.downdraft.downfalls.downfield.downforce.downgrade.downhauls.downhills.downiness.downlands.downlight.downlinks.downloads.downpipes.downplays.downpours.downrange.downright.downriver.downscale.downshift.downsides.downsized.downsizes.downslide.downslope.downspins.downspout.downstage.downstair.downstate.downswing.downthrow.downticks.downtimes.downtowns.downtrend.downturns.downwards.downzoned.downzones.dowsabels.drabbling.dracaenas.draconian.draffiest.draftable.draftiest.draftings.draftsman.draftsmen.draggiest.draggling.draglines.dragomans.dragonets.dragonfly.dragonish.dragooned.dragropes.dragsters.dragstrip.drainable.drainages.drainpipe.dramadies.dramatics.dramatise.dramatist.dramatize.dramaturg.dramedies.drammocks.dramshops.drapeable.draperied.draperies.draughted.drawbacks.drawbores.drawdowns.drawerful.drawknife.drawliest.drawnwork.drawplate.drawshave.drawtubes.dreadfuls.dreadlock.dreamboat.dreamiest.dreamland.dreamless.dreamlike.dreamtime.dreariest.dredgings.dreggiest.drenchers.drenching.dressages.dressiest.dressings.dribblers.dribblets.dribbling.driftages.driftiest.driftpins.driftwood.drillable.drillings.drinkable.drinkably.drinkings.drippiest.drippings.dripstone.driveable.drivelers.driveline.driveling.drivelled.driveller.driveways drivingly.drizzlier.drizzling.drollness.dromedary.droningly.drooliest.droopiest.dropcloth.dropforge.dropheads.dropkicks.droplight.droppable.droppings.dropshots.dropsical.dropsonde.dropworts.droshkies.drossiest.drouthier.drownding.drowsiest.drubbings.druggiest.druggists.drugmaker.drugstore.druidical.druidisms.drumbeats.drumbling.drumfires.drumheads.drumliest.drumrolls.drumstick.drunkards.drunkenly.drupelets.dryasdust.drynesses.drypoints.drysalter.drywalled.dualistic.dualities.dualizing.dubieties.dubiosity.dubiously.dubitable.dubitably.dubonnets.duchesses.duckbills.duckboard.ducklings.ducktails.duckwalks.duckweeds.ductilely.ductility.ductworks.duecentos.duellists.duenesses.duettists.dulcianas.dulcified.dulcifies.dulcimers.dulcimore.dulcineas.dullishly.dulnesses.dumbbells.dumbcanes.dumbfound.dumbheads.dumfounds.dummkopfs.dumpcarts.dumpiness.dumplings.dumpsites.dumpsters.dumptruck.duncishly.dunelands.dungareed.dungarees.dungeoned.dunghills.dunnesses.duodecimo.duodenums.duologues.duopolies.duplexers.duplexing.duplexity.duplicate.duplicity.duralumin.durations.duratives.durnedest.durometer.duskiness.dustcover.dustheaps.dustiness.dustproof.duststorm.duteously.dutifully.duvetines.duvetynes.dwarfisms.dwarflike.dwarfness.dweebiest.dwellings.dwindling.dyarchies.dyestuffs.dynameter.dynamical.dynamisms.dynamists.dynamited.dynamiter.dynamites.dynamitic.dynamotor.dynasties.dynatrons.dynorphin.dyscrasia.dyscrasic.dyscratic.dysentery.dysgenics.dyslectic.dyslexias.dyslexics.dyspepsia.dyspeptic.dysphagia.dysphagic.dysphasia.dysphasic.dysphonia.dysphonic.dysphoria.dysphoric.dysplasia.dyspnoeas.dystaxias.dysthymia.dysthymic.dystocias.dystonias.dystopian.dystopias.dystrophy.eagerness.eaglewood.ealdorman.ealdormen.earliness.earlships.earlywood.earmarked.earnestly.earphones.earpieces.earringed.earstones.earthborn.earthiest.earthlier.earthlike.earthling.earthnuts.earthpeas.earthrise.earthsets.earthstar.earthward.earthwork.earthworm.earwigged.easefully.easements.eastbound.easterner.eastwards.easygoing.eavesdrop.ebonising.ebonizing.ebullient.eccentric.ecclesiae.ecclesial.ecdysiast.ecdysones.echeloned.echeveria.echinacea.echinated.echinoids.echiuroid.echograms.echolalia.echolalic.echovirus.eclampsia.eclamptic.eclectics.eclipsers.eclipsing.ecliptics.eclogites.eclosions.ecofreaks.ecologies.ecologist.economics.economies.economise.economist.economize.ecosphere.ecosystem.ecraseurs.ecstasies.ecstatics.ecthymata.ectoblast.ectoderms.ectogenic.ectomeres.ectomeric.ectomorph.ectoplasm.ectoproct.ectosarcs.ectotherm.ectozoans.ecumenics.ecumenism.ecumenist.edacities.edelweiss.edematose.edematous.edentates.edibility.edictally.edificial.editorial.editrices.editrixes.educables.educating.education.educative.educators.educatory.eductions.effecters.effecting.effective.effectors.effectual.efferents.efficient.effluence.effluents.effluvial.effluvium.effluxion.effortful.effulgent.effulging.effusions.egestions.eggbeater.eggfruits.eggheaded.eggplants.eggshells.eglantine.eglateres.egomaniac.egomanias.egotistic.egregious.egressing.egression.egyptians.eiderdown.eigenmode.eightball.eighteens.eightfold.eightieth.einsteins.eirenical.eisegeses.eisegesis.ejectable.ejections.ejectives.ejectment.ekistical.ektexines.elaborate.elastases.elastomer.elaterids.elaterins.elaterite.elaterium.elbowroom.eldercare.elderlies.eldership.eldresses.electable.elections.electives.electoral.electress.electrets.electrics.electrify.electrode.electroed.electrons.electrums.electuary.eledoisin.elegances.elegantly.elegiacal.elegising.elegizing.elemental.elenchtic.eleoptene.elephants.elevateds.elevating.elevation.elevators.elevenses.elevenths.eliciting.elicitors.eligibles.eliminate.elkhounds.ellipsoid.elocution.eloigners.eloigning.eloinment.elongated.elongates.elopement.eloquence.elsewhere.elucidate.elusively.elutriate.eluviated.eluviates.emaciated.emaciates.emanating.emanation.emanative.emanators.embalmers.embalming.embanking.embargoed.embargoes.embarking.embarrass.embarring.embassage.embassies.embattled.embattles.embayment.embedding.embedment.embellish.embezzled.embezzler.embezzles.embitters.emblazers.emblazing.emblazons.embleming.emblemize.embodiers.embodying.emboldens.embolisms.emborders.embosking.embosomed.embossers.embossing.emboweled.embowered.embraceor.embracers.embracery.embracing.embracive.embrangle.embrasure.embrittle.embrocate.embroglio.embroider.embroiled.embroiler.embrowned.embruting.embryoids.embryonal.embryonic.embryotic.emeerates.emendable.emendated.emendates.emendator.emergence.emergency.emergents.emersions.emigrants.emigrated.emigrates.eminences.eminently.emissions.emittance.emmetrope.emollient.emolument.emoticons.emotional.emotively.emotivity.empanadas.empaneled.empathies.empathise.empathize.empennage.emphasise.emphasize.emphysema.empirical.emplacing.emplaning.employees.employers.employing.empoisons.emporiums.empowered.empresses.emptiable.emptiness.empurpled.empurples.empyemata.empyreans.emulating.emulation.emulative.emulators.emulously.emulsible.emulsions.emulsoids.emunctory.enactable.enactment.enalapril.enamelers.enameling.enamelist.enamelled.enameller.enamoring.enamoured.encamping.encapsule.encashing.encaustic.enceintes.encephala.enchained.enchanted.enchanter.enchasers.enchasing.enchilada.enchorial.enciphers.encircled.encircles.enclasped.enclaving.enclitics.enclosers.enclosing.enclosure.encodable.encomiast.encomiums.encompass.encounter.encourage.encrimson.encrinite.encrusted.encrypted.encumbers.encyclics.encysting.endamaged.endamages.endamebae.endamebas.endamebic.endamoeba.endangers.endbrains.endearing.endeavors.endeavour.endemical.endemisms.endexines.endleaves.endlessly.endoblast.endocarps.endocasts.endocrine.endocytic.endoderms.endoergic.endogamic.endogenic.endolymph.endomixis.endomorph.endophyte.endoplasm.endoproct.endorphin.endorsees.endorsers.endorsing.endorsive.endorsors.endosarcs.endoscope.endoscopy.endosomes.endosperm.endospore.endosteal.endosteum.endostyle.endotherm.endotoxic.endotoxin.endowment.endpapers.endplates.endplayed.endpoints.endurable.endurably.endurance.energetic.energised.energises.energized.energizer.energizes.energumen.enervated.enervates.enervator.enfeebled.enfeebler.enfeebles.enfeoffed.enfetters.enfevered.enfiladed.enfilades.enflaming.enfolders.enfolding.enforcers.enforcing.enframing.engagedly.engarland.engenders.engilding.engineers.engirding.engirdled.engirdles.englacial.englished.englishes.englutted.engorging.engrafted.engrailed.engrained.engrammes.engrammic.engravers.engraving.engrossed.engrosser.engrosses.engulfing.enhaloing.enhancers.enhancing.enhancive.enigmatic.enjoinder.enjoiners.enjoining.enjoyable.enjoyably.enjoyment.enkindled.enkindler.enkindles.enlargers.enlarging.enlighten.enlistees.enlisters.enlisting.enlivened.enlivener.enmeshing.enneagons.ennoblers.ennobling.enokidake.enokitake.enologies.enologist.enophiles.enouncing.enplaning.enquiries.enquiring.enragedly.enrapture.enrichers.enriching.enrollees.enrollers.enrolling.enrolment.enrooting.ensamples.ensconced.ensconces.enscrolls.ensembles.enserfing.ensheathe.ensheaths.enshrined.enshrinee.enshrines.enshrouds.ensilaged.ensilages.enslavers.enslaving.ensnarers.ensnaring.ensnarled.ensorcell.ensorcels.ensouling.ensphered.enspheres.enstatite.enswathed.enswathes.entailers.entailing.entamebae.entamebas.entamoeba.entangled.entangler.entangles.entelechy.enterable.enterally.enteritis.entertain.enthralls.enthroned.enthrones.enthusing.enthymeme.entitling.entoblast.entoderms.entoiling.entombing.entophyte.entoproct.entourage.entozoans.entrained.entrainer.entranced.entrances.entrapped.entrapper.entreated.entrechat.entrecote.entremets.entrepots.entresols.entropies.entropion.entrusted.entryways.entwining.entwisted.enucleate.enumerate.enunciate.enuretics.enveloped.enveloper.envelopes.envenomed.enviously.environed.envisaged.envisages.envisions.envyingly.enwheeled.enwinding.enwombing.enwrapped.enwreathe.enzootics.enzymatic.eolipiles.eolopiles.eparchial.eparchies.epaulette.ependymas.ephedrine.ephedrins.ephemerae.ephemeral.ephemeras.ephemerid.ephemeris.ephemeron.ephorates.epiblasts.epibolies.epicanthi.epicardia.epicedium.epicenism.epicenter.epicentra.epicotyls.epicrania.epicritic.epicurean.epicurism.epicycles.epicyclic.epidemics.epidermal.epidermic.epidermis.epidurals.epifaunae.epifaunal.epifaunas.epigenist.epigenous.epigonism.epigonous.epigraphs.epigraphy.epigynies.epigynous.epilating.epilation.epilators.epileptic.epilimnia.epilogued.epilogues.epimerase.epimysium.epinastic.epineuria.epiphanic.epiphragm.epiphyses.epiphysis.epiphytes.epiphytic.epirogeny.episcopal.episcopes.epistases.epistasis.epistatic.epistaxes.epistaxis.epistemic.episterna.epistlers.epistoler.epistomes.epistyles.epitaphic.epitaxial.epitaxies.epithelia.epithetic.epitomise.epitomize.epizoisms.epizoites.epizootic.epochally.eponymies.eponymous.epopoeias.epoxidize.epsilonic.equalised.equaliser.equalises.equalized.equalizer.equalizes.equalling.equatable.equations.equerries.equimolal.equimolar.equinoxes.equipages.equipment.equipoise.equippers.equipping.equisetic.equisetum.equitable.equitably.equivocal.equivokes.equivoque.eradiated.eradiates.eradicant.eradicate.erectable.erections.erectness.eremitish.eremitism.erethisms.erethitic.erewhiles.ergatives.ergogenic.ergograph.ergometer.ergometry.ergonomic.ergotisms.ergotized.erigerons.eriophyid.eristical.erogenous.erosional.erosivity.eroticism.eroticist.eroticize.erotizing.errancies.erratical.erroneous.errorless.erstwhile.eructated.eructates.eruditely.erudition.eruptible.eruptions.eruptives.erythemas.erythemic.erythrism.erythrite.erythroid.erythrons.escaladed.escalader.escalades.escalated.escalates.escalator.escallops.escaloped.escalopes.escapable.escapades.escapisms.escapists.escargots.escaroles.escarping.eschalots.escheated.escheator.eschewals.eschewers.eschewing.escorting.escrowing.esculents.esophagus.esoterica.esotropia.esotropic.espaliers.espanoles.esperance.espionage.esplanade.espousals.espousers.espousing.espressos.esquiring.essayists.essential.essonites.establish.estaminet.estancias.esteeming.esterases.esthesias.esthetics.estimable.estimably.estimated.estimates.estimator.estivated.estivates.estivator.estoppage.estoppels.estopping.estradiol.estragons.estranged.estranger.estranges.estraying.estreated.estrogens.estuarial.estuaries.estuarine.esurience.esuriency.etceteras.eternally.eternised.eternises.eternized.eternizes.ethephons.etherized.etherizer.etherizes.ethically.ethicians.ethicists.ethicized.ethicizes.ethionine.ethmoidal.ethnarchs.ethnarchy.ethnicity.ethnology.ethnonyms.ethograms.ethylated.ethylates.ethylenes.ethylenic.etiolated.etiolates.etiologic.etiquette.etouffees etymology.eucalypti.eucalypts.eucaryote.euclidean.euclidian.eudaemons.eudaimons.eudemonia.eugenical.eugenists.euglenids.euglenoid.eukaryote.eulachans.eulachons.eulogised.eulogises.eulogists.eulogiums.eulogized.eulogizer.eulogizes.eunuchism.eunuchoid.eupatrids.eupepsias.eupepsies.euphausid.euphemise.euphemism.euphemist.euphemize.euphenics.euphonies.euphonium.euphonize.euphorbia.euphorias.euphuisms.euphuists.euplastic.eurhythmy.europiums.eurybaths.euryokies.euryokous.eurytherm.eurythmic.eurytopic.eustacies.eustasies.eutectics.eutectoid.euthanize.euthenics.euthenist.eutherian.euthyroid.eutrophic.euxenites.evacuants.evacuated.evacuates.evacuator.evadingly.evaginate.evaluable.evaluated.evaluates.evaluator.evanesced.evanesces.evangelic.evanished.evanishes.evaporate.evaporite.evasional.evasively.evections.evenfalls.evensongs.eventides.eventless.eventuate.everglade.evergreen.eversible.eversions.everwhere.everwhich.everybody.everydays.evictions.evidenced.evidences.evidently.evildoers.evildoing.evincible.evocation.evocative.evocators.evolution.evolvable.evulsions.exactable.exactions.exactness.exaltedly.examinant.examinees.examiners.examining.exampling.exanimate.exanthema.exanthems.exarchate.exarchies.excaudate.excavated.excavates.excavator.exceeders.exceeding.excellent.excelling.excelsior.excepting.exception.exceptive.excerpted.excerpter.excerptor.excessing.excessive.exchanged.exchanger.exchanges.exchequer.excipient.excisable.exciseman.excisemen.excisions.excitable.excitably.excitants.excitedly.excitonic.exclaimed.exclaimer.exclosure.excluders.excluding.exclusion.exclusive.exclusory.excoriate.excrement.excreters.excreting.excretion.excretive.excretory.exculpate.excurrent.excursion.excursive.excusable.excusably.execrable.execrably.execrated.execrates.execrator.executant.executers.executing.execution.executive.executors.executory.executrix.exegetics.exegetist.exemplars.exemplary.exemplify.exempting.exemption.exemptive.exequatur.exercised.exerciser.exercises.exercycle.exergonic.exertions.exfoliant.exfoliate.exhalants.exhalents.exhausted.exhauster.exhibited.exhibiter.exhibitor.exhorters.exhorting.exigences.exigently.existence.existents.exocrines.exocyclic.exocytose.exodermis.exodontia.exoenzyme.exogamies.exogamous.exogenism.exogenous.exonerate.exonumist.exorcised.exorciser.exorcises.exorcisms.exorcists.exorcized.exorcizes.exordiums.exosmoses.exosmosis.exosmotic.exosphere.exospores.exosporia.exostoses.exostosis.exoticism.exoticist.exotoxins.exotropia.exotropic.expanders.expanding.expandors.expansile.expansion.expansive.expatiate.expectant.expecters.expecting.expedient.expedited.expediter.expedites.expeditor.expellant.expellees.expellent.expellers.expelling.expenders.expending.expensing.expensive.experting.expertise.expertism.expertize.expiating.expiation.expiators.expiatory.explained.explainer.explanted.expletive.expletory.explicate.explicits.exploders.exploding.exploited.exploiter.explorers.exploring.explosion.explosive.exponents.exporters.exporting.exposable.exposited.expositor.exposures.expounded.expounder.expressed.expresser.expresses.expressly.expressos.expulsing.expulsion.expulsive.expungers.expunging.expurgate.exquisite.exscinded.exsecants.exsecting.exsection.exsertile.exserting.exsertion.exsiccate.exstrophy.extempore.extenders.extending.extensile.extension.extensity.extensive.extensors.extenuate.exteriors.extermine.externals.extincted.extirpate.extollers.extolling.extolment.extorters.extorting.extortion.extortive.extrabold.extracted.extractor.extradite.extrality.extranets.extravert.extremely.extremest.extremism.extremist.extremity.extricate.extrinsic.extrovert.extruders.extruding.extrusion.extrusive.extubated.extubates.exuberant.exuberate.exudation.exudative.exultance.exultancy.exuviated.exuviates.eyeballed.eyeblacks.eyeblinks.eyebright.eyelashes.eyeletted.eyeliners.eyeopener.eyepieces.eyepoints.eyepopper.eyeshades.eyeshines.eyesights.eyestalks.eyestones.eyestrain.eyewashes.eyewaters.fabaceous.fabricant.fabricate.fabulated.fabulates.fabulator.fabulists.facecloth.facedowns.facelifts.facemasks.faceplate.facetious.facetting.facsimile.facticity.factional.factitive.factoidal.factorage.factorial.factories.factoring.factorize.factotums.factually.faculties faddishly.fadeaways.fadedness.faggoting.fagotings.fahlbands.failingly.faineance.faineants.faintness.fairgoers.fairishly.fairleads.fairyhood.fairyisms.fairyland fairylike.faithfuls.faithless.falchions.falciform.falconers.falconets.falconine.falconoid.falderals.falderols.faldstool.fallacies.fallalery.fallaways.fallbacks.fallboard.fallowing.falseface.falsehood.falseness.falsettos.falsework.falsified.falsifier.falsifies.falsities.faltboats.falterers.faltering.familiars.familisms.famishing.fanatical fancified.fancifies.fanciless.fanciness.fancywork.fandangos.fanegadas.fanfarons.fanfolded.fanlights.fantailed.fantasias.fantasied.fantasies.fantasise.fantasist.fantasize.fantastic.faradised.faradises.faradisms.faradized.faradizer.faradizes.farandole.fareboxes.farewells.farmhands.farmhouse.farmlands.farmstead.farmwives.farmworks.farmyards.farnesols.farnesses.farolitos.farragoes.farrowing.farseeing.farthings.fasciated.fascicled.fascicles.fascicule.fasciculi fasciitis.fascinate.fascistic.fashioned.fashioner.fastbacks.fastballs.fasteners.fastening.fastigium.fatalisms.fatalists.fatalness.fatefully.fatheaded.fathering.fathomers.fathoming.fatidical.fatigable.fatiguing.fatnesses.fatstocks.fatteners.fattening.fattiness.fatuities.fatuously.faubourgs.faultiest.faultless.faunistic.fauteuils.faveolate.favorable.favorably.favorites.favourers.favouring.fawningly.fayalites.fearfully.feasances.feastless.feathered.featliest.featuring.febricity.febrifuge.febrility.feculence.fecundate fecundity.federally.federated.federates.federator.feedbacks.feedboxes.feedgrain.feedholes.feedstock.feedstuff.feedyards.feelingly.feetfirst.feignedly.feistiest.feldscher.feldshers.feldspars.felicific.fellaheen.fellating.fellation.fellatios.fellators.fellatrix.fellowing.fellowman.fellowmen.felonious.felonries.felstones.feminazis.feminines.feminised.feminises.feminisms.feminists.feminized.feminizes.fenagling.fenceless.fencerows.fencibles.fenestrae.fenestral.fentanyls.fenthions.fenugreek.feodaries.feoffment.fermented.fermenter.fermentor.fermionic.ferneries.ferocious.ferreling.ferrelled.ferreters.ferreting.ferriages.ferritins.ferrocene.ferrotype.ferruling.ferryboat.fertilely.fertility.fertilize.fervently.fervidity.festering.festinate.festivals.festively.festivity.festooned.fetations.feteritas.fetichism.feticidal.feticides.fetidness.fetishism.fetishist.fetishize.fetoscope fetoscopy.fetterers.fettering.fettlings.fettucine.fettucini.feudalism.feudalist.feudality.feudalize.feudaries.feudatory.feverfews.feverroot.feverweed.feverwort.fewnesses.feynesses.fiberfill.fiberized.fiberizes.fiberless.fiberlike.fibrannes.fibrefill.fibrillae.fibrillar.fibrinoid.fibrinous.fibromata.fibrously.fictional.fictively.fideistic.fidelismo.fidelista.fidgeters.fidgeting.fiduciary.fieldfare.fieldsman.fieldsmen.fieldwork.fieriness.fifteenth.fiftieths.figeaters.fightable.fightings.figulines.figurable.figurally.figurants.figuredly.figurines.filagreed.filagrees.filaments.filariids.filatures.filenames.filiating.filiation.filicides.filigreed.filigrees.filisters.fillagree.filleting.filliping.fillister.filmcards.filmgoers.filmgoing.filminess.filmlands.filmmaker.filmstrip.filoplume.filopodia.filovirus.filterers.filtering.filthiest.filtrable.filtrated.filtrates.fimbriate.finaglers.finagling.finalised.finalises.finalisms.finalists.finalized.finalizer.finalizes.financial.financier.financing.finessing.finfishes.fingerers fingering.fingertip.finically.finickier.finicking.finishers.finishing.finitudes.finnmarks.finocchio.finochios.fioratura.fioritura.fioriture.firearmed.firebacks.fireballs.firebases.firebirds.fireboard.fireboats.firebombs.fireboxes.firebrand.firebrats.firebreak.firebrick.fireclays.firedamps.firedrake.firefangs.firefight.fireflies.fireflood.fireguard.firehalls.firehouse.firelight.firelocks.firemanic.firepinks.fireplace.fireplugs.firepower.fireproof.firerooms.fireships.firesides.firestone.firestorm.firethorn firetraps.firetruck.firewalls.firewater.fireweeds.firewoods.fireworks.fireworms.firmament.firmwares.firstborn.firsthand.firstling.firstness.fiscalist.fishbolts.fishbones.fishbowls.fisheries.fisherman.fishermen.fishhooks.fishiness.fishkills.fishlines.fishmeals.fishplate fishpoles.fishponds.fishtails.fishwives.fishworms.fissility fissional.fissioned.fissipeds.fissuring.fistfight.fisticuff.fistnotes.fistulate.fistulous.fitnesses.fittingly.fixations.fixatives.fixedness.flabbiest.flabellum.flaccidly.flagellar.flagellin.flagellum.flageolet.flaggiest.flaggings.flagpoles flagrance.flagrancy.flagships.flagstaff.flagstick.flagstone.flakiness.flambeaus.flambeaux.flambeing.flameless.flamelike.flamencos.flameouts.flamingly.flamingos.flammable.flancards.flaneries.flanneled.flannelet.flannelly.flaperons.flapjacks.flappable.flappiest.flareback.flaringly.flashback.flashbulb.flashcard.flashcube.flashguns.flashiest.flashings.flashlamp.flashover.flashtube.flatboats.flatbread.flatfoots.flatheads.flatirons.flatlands.flatlined.flatliner.flatlines.flatlings.flatmates.flattened.flattener.flattered.flatterer.flatulent.flatwares.flatworks.flatworms.flaunters flauntier.flauntily.flaunting.flautists.flavanols.flavanone.flavonoid.flavonols.flavorers.flavorful.flavoring.flavorist.flavorous.flavoured.flaxseeds.fleabanes.fleabites.fleaworts.flechette.fleckless.flections.fledgiest.fledgling.fleeching.fleeciest.fleetness.flehmened.flemished.flemishes.flenching.fleshiest.fleshings.fleshless.fleshlier.fleshment.fleshpots.fletchers.fletching.flexagons.flexional.flexitime.flextimer.flextimes.flichters.flickable.flickered.flightier.flightily.flighting.flimflams.flimsiest.flinchers.flinching.flinkites.flinthead.flintiest.flintlike.flintlock.flipbooks.flipflops.flippancy.flirtiest.flitching.flittered.floatable.floatages.floatiest.floccules.flocculus.flockiest.flockings.flockless.floggable.floggings.floodable.floodgate.floodtide.floodwall.floodways.floorages.floorings.floorless.floorshow.flophouse.flopovers.floppiest.floreated.florences.floriated.floricane.floridity.florigens.floristic.floristry.flossiest.flotation.flotillas.flouncier.flouncing.flounders.flourless.flowchart.flowerage.flowerers.flowerets.flowerful.flowerier.flowerily.flowering.flowerpot.flowingly flowmeter.flowstone.fluctuant.fluctuate.fluencies.fluffiest.fluidally.fluidised.fluidises.fluidized.fluidizer.fluidizes.fluidlike.fluidness.fluidrams.flukiness.flummoxed.flummoxes.flunkyism.fluorenes.fluoresce.fluorides.fluorines.fluorites.fluoroses.fluorosis.fluorotic.fluorspar.flurrying.flushable.flushness.flustered.flutelike fluttered.flutterer.fluxgates.fluxional.flybridge.flyleaves.flypapers.flyrodder.flysheets.flyspecks.flyweight.flywheels.foaminess.focaccias.focalised.focalises.focalized.focalizes.focusable.focusless.focussing.foddering.fogeyisms.fogfruits.fogginess.foldaways.foldboats.folderols.foliating.foliation.foliolate.folklives.folklores.folkloric.folkmoots.folkmotes.folksiest.folksongs.folktales.follicles.followers.following.followups.fomenters.fomenting.fondlings.fondueing.fontanels.foodstuff.foofaraws.fooleries.foolhardy.foolisher.foolishly.foolproof.foolscaps.foosballs.footballs.footbaths.footboard.footcloth.footfalls.footfault.footgears.foothills.footholds.footlight.footloose.footmarks.footnoted.footnotes.footpaces.footpaths.footprint.footraces.footrests.footropes.footslogs.footstalk.footstall.footsteps.footstock.footstone.footstool.footwalls.footworks.fopperies.foppishly.foraminal.forasmuch.forbearer.forbidals.forbidden.forbidder.forboding.forceable.forceless.forcemeat.forearmed.forebears.foreboded.foreboder.forebodes.forebooms.forebrain.forecasts.forecheck.foreclose.forecourt.foredated.foredates.foredecks.foredoing.foredooms.forefaces.forefeels.forefends.forefront.foregoers.foregoing.forehands.foreheads.forehoofs.foreigner.forejudge.foreknown.foreknows.forelands.forelimbs.forelocks.foremasts.foremilks.forenamed.forenames.forenoons.forensics.foreparts.forepeaks.foreplays.foreranks.forereach.foresails.foreseers.foreshank.foresheet.foreshock.foreshore.foreshown.foreshows.foresides.foresight.foreskins.forespake.forespeak.forespoke.forestage.forestall.forestays.foresters.forestial.foresting.foreswear.foreswore.foresworn.foretaste.foreteeth.foretells.foretimes.foretoken.foretooth.forewarns.forewings.forewoman.forewomen.forewords.foreyards.forfeited.forfeiter.forfended.forficate.forgather.forgeable.forgeries.forgetful.forgetive.forgetter.forgivers.forgiving.forgotten.forjudged.forjudges.forkballs.forkiness.forklifts.forlorner forlornly.formalins.formalise.formalism.formalist.formality.formalize.formamide.formation.formative.formatted.formatter.formicary.formulaic.formulary.formulate.formulism.formulist.formulize.formworks.fornicate.forrarder.forsakers.forsaking.forswears.forsythia.fortalice.forthwith.fortieths.fortified.fortifier.fortifies.fortitude.fortnight.fortunate.fortuning.forwarded.forwarder.forwardly.forzandos.foscarnet.fossettes.fossicked.fossicker.fossilise.fossilize.fossorial.fosterage.fosterers.fostering.foulbrood.foundered.foundling.foundries.fountains.fourpence.fourpenny.fourscore.foursomes.fourteens.foveiform.foveolate.foveolets.fowlpoxes.foxfishes.foxgloves.foxhounds.foxhunted.foxhunter.fractions.fractious.fractural.fractured.fracturer.fractures.fraggings.fragilely.fragility.fragments.fragrance.fragrancy.frailness.frailties.frambesia.framboise.frameable.frameless.framework.franchise.franciums.francized.francizes.francolin.frangible.franglais.frankable.frankfort.frankfurt.franklins.frankness.franseria.franticly.fraternal.fraudster.fraughted.frauleins.frazzling.freakiest.freakouts.frecklier.freckling.freebased.freebaser.freebases.freeboard.freeboots.freeholds.freelance.freeloads.freemason.freestone.freestyle.freewares.freewheel.freewrite.freewrote.freezable.freighted.freighter.frenchify.frenching.frenetics.frenulums.frenzying.frequence.frequency.frequents.frescoers.frescoing.frescoist.freshened.freshener.freshness.fretboard.fretfully.frettiest.fretworks.friarbird.fribblers.fribbling.fricassee.fricative.frictions.friedcake.friending.frightens.frightful.frighting.frigidity.frilliest.frillings.fringiest.frisettes.friskiest.frittatas.frittered.fritterer.frivolers.frivoling.frivolity.frivolled.frivoller.frivolous.frizettes.frizziest.frizzlers.frizzlier.frizzling.frockless.froggiest.frogmarch.frolicked.frolicker.frondeurs.frontages.frontally.frontenis.frontiers.frontless.frontlets.frontline.frontlist.frontpage.frontward.frostbite.frostfish.frostiest.frostings.frostless.frostline.frostnips.frostwork.frothiest.frottages.frotteurs.froufrous.frouncing.frouziest.frowardly.frowsiest.frowstier.frowsting.frowziest.fructoses.fructuous.frugality.frugivore.fruitages.fruitcake.fruiterer.fruitiest.fruitions.fruitless.fruitlets.fruitlike.fruitwood.frumpiest.frustrate.frustules.fruticose.frybreads.fuchsines.fuelwoods.fugacious.fugitives.fuguelike.fulfilled.fulfiller.fulgently.fulgurant.fulgurate.fulgurite.fulgurous.fullbacks.fullblood.fullerene.fulleries.fullering.fullfaces.fulminant.fulminate.fulmining.fulnesses.fulsomely.fumarases.fumarates.fumaroles.fumarolic.fumigants.fumigated.fumigates.fumigator.functions.fundament.fundraise.fungibles.fungicide.fungiform.fungistat.funhouses.funicular.funiculus.funkiness.funneling.funnelled.funniness.funplexes.furanoses.furbearer.furbelows.furbished.furbisher.furbishes.furcately.furcating.furcation.furcraeas.furfurals.furfurans.furiously.furloughs.furmeties.furmities.furnacing.furnished.furnisher.furnishes.furniture.furriners.furriness.furrowers.furrowing.furthered.furtherer.furtively.furuncles.fuselages.fusileers.fusiliers.fusillade.fusionism.fusionist.fussiness.fustigate.fustiness.fusulinid.futurisms.futurists.fuzziness.fuzztones.gabardine.gabbiness.gaberdine.gablelike.gadabouts.gadgeteer.gadrooned.gainfully.gainliest.gainsayer.galabiehs.galabiyah.galabiyas.galactose.galangals.galantine.galavants.galbanums.galenical.galenites.galingale.galivants.gallamine.gallanted.gallantly.gallantry.gallerias.galleried.galleries.galleting.gallflies.galliards.gallicism.gallicize.gallingly.gallinule.gallipots.gallivant.galliwasp.gallonage.gallooned.gallopade.gallopers.galloping.gallowses.gallstone.galopades.galumphed.galvanise.galvanism.galvanize.gambadoes.gambesons.gambogian.gamboling.gambolled.gambusias.gamecocks.gamesters.gammadion.gammoners.gammoning.gamodemes.gandering.ganglands gangliate.gangliest.ganglions.gangplank.gangplows.gangrened.gangrenes.gangsters.ganisters.gannister.gantelope.gantleted.gantlines.gantlopes.ganymedes.gapeseeds.gapeworms.gaposises.garageman.garagemen.garbanzos.garboards.garbology.gardeners.gardenful.gardenias.gardening.garderobe.garfishes.garganeys.gargantua.gargoyled.gargoyles.garibaldi.garlanded.garlicked.garmented.garnering.garnished.garnishee.garnisher.garnishes.garniture.garotters.garotting.garrisons.garroters.garroting.garrotted.garrottes.garrulity.garrulous.gartering.gasaliers.gasconade.gaseities.gaseliers.gasholder.gashouses.gasifiers.gasifying.gaslights.gasogenes.gasolenes.gasoliers.gasolines.gasolinic.gasometer.gaspereau.gaspingly.gassiness.gastraeas.gastritic.gastritis.gastropod.gastrulae.gastrular.gastrulas.gatecrash.gatefolds.gatehouse.gateposts.gatherers.gathering.gaucherie.gauderies.gaudiness.gauffered.gaugeable.gauleiter.gauntlets.gauntness.gauntries.gauzelike.gauziness.gavelkind.gavelling.gavelocks.gavialoid.gavotting.gawkiness.gawkishly.gaynesses.gazehound.gazetteer.gazetting.gazillion.gazogenes.gazpachos.gazumpers.gazumping.gearboxes.gearcases.gearheads.gearshift.gearwheel.geekiness.geepounds.gelatines.gelations.gelidness.gelignite.gelsemium.gematrias.geminally.geminated.geminates.gemmating.gemmation.gemminess.gemmology.gemsbucks.gemstones.gemutlich.gendarmes.gendering.genderize.genealogy.generable.generalcy.generally.generated.generates.generator.generical.genetical.geniality.genically.genistein.genitalia.genitalic genitally.genitival.genitives.genitures.gennakers.genocidal.genocides.genograms.genotypes.genotypic.genteeler.genteelly.gentility.gentleman.gentlemen.gentrices.genuflect.genuinely.geobotany.geocorona.geodesics.geodesies.geodesist.geodetics.geography.geologers.geologies.geologist.geologize.geomancer.geomantic.geometers.geometric.geometrid.geophagia.geophones.geophytes.geophytic.geoponics.geoprobes.georgette.georgical.geotactic.geotropic.geranials.geraniols.geraniums.gerardias.gerbilles.gerfalcon.geriatric.germander.germanely.germanium.germanize.germicide.germinant.germinate.germiness.germplasm.germproof.gerundial.gerundive.gesneriad.gestalten.gestating.gestation.gestative.gestatory.gesturers.gesturing.getatable.gettering.geyserite.ghastlier.gheraoing.ghettoing.ghettoize.ghostiest.ghostings.ghostlier.ghostlike.giantisms.giantlike.gibbering.gibberish.gibbeting.gibbetted.gibbosity.gibbously.gibbsites.giddiness.giftables.giftwares.giftwraps.gigabytes.gigacycle.gigaflops.gigahertz.gigantean.gigantism.gigawatts.giggliest.gildhalls.giltheads.gimbaling.gimballed.gimcracks.gimleting.gimmicked.gimmickry.gingeleys.gingelies.gingellis.gingering.gingillis.giraffish.girandola.girandole.girasoles.girdingly.girlhoods.girlishly.giveaways.givebacks.glabellae.glabellar.glacially.glaciated.glaciates.glaciered.gladdened.gladdener.gladelike.gladiator.gladiolar.gladiolas.gladiolus.gladliest.gladsomer.gladstone.glairiest.glamorise.glamorize.glamorous.glamoured.glandered.glandless.glandular.glandules.glariness.glaringly.glasnosts.glassfuls.glassiest.glassines.glassless.glassware.glasswork.glassworm.glasswort.glaucomas.glaziness.gleamiest.gleanable.gleanings.glebeless.gleefully.gleetiest.glengarry.gliadines.glidepath.glimmered.glimpsers.glimpsing.glintiest.glissaded.glissader.glissades.glissandi.glissando.glistened.glistered.glitchier.glittered.glitziest.gloamings.globalise.globalism.globalist.globalize.globbiest.globefish.globelike.globetrot.globosely.globosity.globulars.globulins.glochidia.glomerate.glomerule.glomeruli.gloomiest.gloomings.gloppiest.glorified.glorifier.glorifies.glorioles.glossator.glossemes.glossiest.glossinas.glossitic.glossitis.glottides.glottises.glowering.glowflies.glowingly.glowworms.gloxinias.glucagons.glucinums.gluconate.glucoside.glueyness.gluhweins.glumpiest.glunching.glutamate.glutamine.glutelins.glutenins.glutenous.glutinous.glyceride.glycerine.glycerins.glycerols.glyceryls.glycogens.glyconics.glycoside.glycosyls.gnarliest.gnathions.gnathites.gnathonic.gnattiest.gnawingly.gneissoid.gneissose.gnomelike.gnostical.goalmouth.goalposts.goatherds.goatishly.goatskins.gobshites.goddammed.goddesses.godfather.godlessly.godliness.godmother.godparent.goethites.goffering.goggliest.goitrogen.golcondas.goldbrick.goldenest.goldeneye.goldenrod.goldfield.goldfinch.goldsmith.goldstone.golgothas.goliardic.golliwogg.golliwogs.gollywogs.gombroons.gomphoses.gomphosis.gondolier.gonfalons.gonfanons.gonococci.gonocytes.gonophore.gonopores.gonorrhea.goodliest.goodwills.goodwives.gooeyness.goofballs.goofiness.goosander.goosefish.goosefoot.gooseherd.gooseneck.gorgerins.gorgonian.gorgonize.gospelers.gospeller.gossamers.gossamery.gossipers.gossiping.gossipped.gossipper.gossypols.gothicism.gothicize.goulashes.gouramies.gourmands.goutiness.governess.governing.governors.grabbable.grabbiest.grabblers.grabbling.graceless.gracility.graciosos.gradating.gradation.gradeless.gradients.gradually.graduands.graduated.graduates.graduator.graecized.graecizes.graffitis.graftages.grainiest.grainless.gramaries.gramaryes.grampuses.granaries.grandaddy.grandames.grandaunt.grandbaby.granddads.granddams.grandeurs.grandiose.grandioso.grandkids.grandmama.grandness.grandpapa.grandsire.grandsirs.grandsons.granitoid.granolith.grantable.grantsman.grantsmen.granulate.granulite.granuloma.granulose.grapelike.graperies.grapeshot.grapevine.graphemes.graphemic.graphical.graphites.graphitic.grapiness.graplines.grapplers.grappling.graspable.grassiest.grassland.grassless.grasslike.grassplot.grassroot.grateless.graticule.gratified.gratifier.gratifies.gratineed.gratinees.gratingly.gratitude.gratulate.gravamens.gravamina.graveless.gravelike.graveling.gravelled.graveness.graveside.gravesite.graveward.graveyard.gravidity.gravitate.gravities.gravitino.gravitons.graybacks.graybeard.grayhound.graylings.graymails.grayscale.graywacke.graywater.grazeable.grazingly.greasiest.greatcoat.greatened.greatness.grecizing.greediest.greedless.greedsome.greegrees.greenback.greenbelt.greenbugs.greengage.greenhead.greenhorn.greeniest.greenings.greenlets.greenling.greenmail.greenness.greenroom.greensand.greensick.greenwash.greenways.greenwing.greenwood.greetings.gregarine.grenadier.grenadine.grewsomer.greyhound.griddling.gridirons.gridlocks.grievance.grievants.grillades.grillages.grillroom.grillwork.grimacers.grimacing.grimalkin.griminess.grindelia.grippiest.gripsacks.grisaille.grisettes.grisliest.gristlier.gristmill.grittiest.grizzlers.grizzlier.grizzlies.grizzling.groceries.groggiest.grogshops.grommeted.gromwells.groomsman.groomsmen.grooviest.gropingly.grosbeaks.grosgrain.grossness.grossular.grotesque.grottiest.grouchier.grouchily.grouching.grounders.groundhog.grounding.groundnut.groundout.groundsel.groupable.groupings.groupoids.groupware.groutiest.grovelers.groveless.groveling.grovelled.groveller.growingly.growliest.growthier.grubbiest.grubstake.grubworms.gruelings.gruellers.gruelling.gruesomer.gruffiest.gruffness.grumblers.grumbling.grummeted.grumphies.grumpiest.grungiest.gruntling.grutching.guacamole.guacharos.guaiacols.guaiacums.guaiocums.guanabana.guanidine.guanidins.guanosine.guaranies.guarantee.guarantor.guardants.guarddogs.guardedly.guardians.guardrail.guardroom.guardsman.guardsmen.guayabera.gudgeoned.guerdoned.gueridons.guerillas.guernseys.guerrilla.guessable.guesswork.guffawing.guidances.guidebook.guideless.guideline.guidepost.guideways.guideword.guildhall.guildship.guildsman.guildsmen.guileless.guillemet.guillemot.guilloche.guiltiest.guiltless.guitarist.guitguits.gulfweeds.gulpingly.gumbotils.gummatous.gumminess.gumptions.gumptious.guncotton.gunfights.gunflints.gunfought.gunkholed.gunkholes.gunmetals.gunneries.gunnybags.gunnysack.gunpapers.gunpoints.gunpowder.gunrunner.gunsmiths.gunstocks.guruships.gushiness.gushingly.gusseting.gustables.gustation.gustative.gustatory.gustiness.gutbucket.gutsiness.guttation.guttering.gutturals.gymkhanas.gymnasial.gymnasium.gymnastic.gynaeceum.gynaecium.gynarchic.gynocracy.gynoecium.gynophobe.gynophore.gypsydoms.gypsyisms.gyrations.gyrfalcon.gyropilot.gyroplane.gyroscope.gyrostats.habaneras.habaneros.habdalahs.habergeon.habitable.habitably.habitants.habituate.habitudes.hacendado.hachuring.haciendas.hackamore.hackberry.hackliest.hackneyed.hacksawed.hackworks.hadrosaur.haecceity.haematics.haematins.haematite.haftarahs.haftaroth.haftorahs.haftoroth.hagadists.hagbushes.hagfishes.haggadahs.haggadist.haggadoth.haggardly.haggishly.hagiarchy.hagiology.hagridden.hagriders.hagriding.hailstone.hailstorm.hairballs.hairbands.hairbrush.haircloth.hairiness.hairlines.hairlocks.hairpiece.hairspray.hairstyle.hairworks.hairworms.halachist.halachoth.halakhahs.halakhist.halakhoth.halakists.halations.halazones.halfbacks.halfbeaks.halflives.halfpence.halfpenny.halfpipes.halftimes.halftones.halftrack.halidomes.halitoses.halitosis.halituses.halliards.hallmarks.halloaing.hallooing.hallowers.hallowing.halobiont.halocline.halogeton.halophile.halophyte.halothane.haltering.haltingly.hamadryad.hamadryas.hamartias.hamboning.hamburger.hammerers.hammering.hammerkop.hammertoe.hamminess.hamperers.hampering hamstring.hamstrung.handballs.handbells.handbills.handblown.handbooks.handcarts.handclaps.handclasp.handcraft.handcuffs.handfasts.handgrips.handhelds.handholds.handicaps.handiness.handiwork.handlebar.handlings.handlists.handlooms.handmaids.handovers.handpicks.handpress.handprint.handrails.handseled.handshake.handsomer.handspike.handstamp.handstand.handwheel.handworks.handwoven.handwrite.handwrote.hangaring.hangbirds.hangfires.hangnails.hangnests.hangovers.hankerers.hankering.hanseatic.hanseling.hanselled.haphazard.haphtarah.haphtaras.haphtarot.haplessly.haploidic.haplology.haplontic.haplopias.haplotype.happening.happiness.harangued.haranguer.harangues.harassers.harassing.harbinger.harborage.harborers.harborful.harboring.harborous.harboured.hardasses.hardbacks.hardballs.hardboard.hardboots.hardbound.hardcores.hardcourt.hardcover.hardedges.hardeners.hardening.hardgoods.hardhacks.hardheads.hardihood.hardiment.hardiness.hardnoses.hardpacks.hardships.hardstand.hardtacks.hardwares.hardwired.hardwires.hardwoods.harebells.harkeners.harkening.harlequin.harmattan.harmfully.harmonica.harmonics.harmonies.harmonise.harmonist.harmonium.harmonize.harnessed.harnesses.harpooned.harpooner.harpylike.harquebus.harridans.harrowers.harrowing.harrumphs.harshened.harshness.hartshorn.harumphed.harvested.harvester.hashheads.hashishes.hastately.hasteners.hastening.hastiness.hatchable.hatchback.hatchecks.hatcheled.hatchings.hatchling.hatchment.hatchways.hatefully.hatmakers.hatterias.haughtier.haughtily.haulmiest.haulyards.hausfraus.haustella.haustoria.havdalahs.havelocks.haversack.havockers.havocking.hawkbills.hawkishly.hawkmoths.hawknoses.hawksbill.hawkshaws.hawkweeds.hawsehole.hawsepipe.hawthorns.hawthorny.hayfields.haymakers.haystacks.hazarders.hazarding.hazardous.hazelhens.hazelnuts.headaches.headachey.headbands.headboard.headcount.headdress.headfirst.headgates.headgears.headhunts.headiness.headlamps.headlands.headlight.headlined.headliner.headlines.headlocks.headnotes.headphone.headpiece.headraces.headrests.headrooms.headsails.headships.headspace.headstall.headstand.headstays.headstock.headstone.headwater.headwinds.headwords.headworks.healthful.healthier.healthily.hearkened.hearkener.heartache.heartbeat.heartburn.heartened.heartener.heartfelt.heartfree.hearthrug.heartiest.heartland.heartless.heartsick.heartsome.heartsore.heartwood.heartworm.heathbird.heathenry.heathered.heathiest.heathland.heathless.heathlike.heatproof.heaviness.hebdomads.hebetated.hebetates.hebetudes.hebraized.hebraizes.hecatombs.hectogram.hectoring.hedgehogs.hedgehops.hedgepigs.hedgerows.hedgingly.hedonisms.hedonists.heedfully.heehawing.heelballs.heelpiece.heelplate.heelposts.heftiness.hegemonic.hegumenes.hegumenos.heightens.heightism.heinously.heiresses.heirlooms.heirships.hektogram.helically.helicline.helicoids.heliconia.helicopts.helictite.helilifts.heliogram.heliostat.heliotype.heliotypy.heliozoan.heliozoic.heliports.helistops.hellboxes.hellbroth.helldiver.hellebore.hellenize.helleries.hellfires.hellholes.hellhound.hellishly.hellkites.helmeting.helminths.helotages.helotisms.helotries.helpfully.helpmates.helpmeets.hemateins.hematines.hematinic.hematites.hematitic.hematomas.hematoses.hematosis.hematozoa.hematuria.hematuric.hemelytra.hemialgia.hemicycle.hemiolias.hemipters.hemistich.hemitrope.hemocoels.hemocytes.hemolymph.hemolyses.hemolysin.hemolysis.hemolytic.hemolyzed.hemolyzes.hemophile.hemostats.hemotoxic.hemotoxin.hempseeds.hempweeds.hemstitch.hendiadys.henequens.henequins.henhouses.heniquens.henneries.hennishly.henpecked.hepaticae.hepaticas.hepatitis.hepatized.hepatizes.hepatomas.heptagons.heptarchs.heptarchy.heralding.heraldist.herbalism.herbalist.herbarial.herbarium.herbicide.herbivore.herbivory.herbology.herculean.hereabout.hereafter.hereaways.heretical.hereunder.heritable.heritably.heritages.hermetism.hermetist.hermitage.hermitism.herniated.herniates.heroicize.heroinism.heroizing.heronries.hesitance.hesitancy.hesitated.hesitater.hesitates.hesitator.hessonite.hetaerism.hetairism.heterodox.heteronym.heteroses.heterosis.heterotic.heuristic.hexachord.hexagonal.hexagrams.hexahedra.hexameter.hexamines.hexaploid.hexastich.hibakusha.hibernate.hiccoughs.hiccuping.hiccupped.hickories.hiddenite.hideaways.hidebound.hideosity.hideously.hidrotics.hierarchs.hierarchy.hierodule.hierology.hifalutin.highballs.highbrows.highchair.highflier.highflyer.highjacks.highlands.highlifes.highlight.highrises.highroads.highspots.hightails.hijackers.hijacking.hilarious.hillbilly.hillcrest.hilliness.hilloaing.hillocked.hillsides.hillslope.himations.hindbrain.hinderers.hindering.hindrance.hindshank.hindsight.hiphugger.hipnesses.hipparchs.hippiedom.hippieish.hippiness.hippocras.hiraganas.hirelings.hirseling.hirselled.hirsutism.hispanism.hispidity.histamine.histamins.histidine.histidins.histogens.histogram.histology.historian.historied.histories.hitchhike.hizzoners.hoactzins.hoardings.hoarfrost.hoariness.hoarsened.hoatzines.hobbyists.hobgoblin.hobnailed.hobnobbed.hobnobber.hockshops.hocussing.hodaddies.hodoscope.hogfishes.hoggishly.hogmanays.hogmenays.hogsheads.hogtieing.hogwashes.hoidening.hokeyness.holandric.holdbacks.holddowns.holdfasts.holdovers.holidayed.holidayer.hollering.holloaing.hollooing.holloware.hollowest.hollowing.hollyhock.holocaust.holocrine.holograms.holograph.hologynic.holophyte.holotypes.holotypic.holsteins.holstered.holystone.holytides.homebound.homebreds.homebrews.homebuilt.homecomer.homegirls.homegrown.homelands.homeliest.homemaker.homeopath.homeowner.homepages.homeplace.homeports.homerooms.homesites.homespuns.homestand.homestays.homestead.hometowns.homewards homeworks.homeyness.homicidal.homicides.homiletic.homilists.hominians.hominized.hominizes.hominoids.homocercy.homograft.homograph.homologic.homologue.homolyses.homolysis.homolytic.homonymic.homophile.homophobe.homophone.homophony.homophyly.homoplasy.homopolar.homosexes.homospory.homostyly.homotaxes.homotaxis.homunculi.honchoing.honestest.honesties.honeworts.honeybees.honeybuns.honeycomb.honeydews.honeymoon.honeypots.honorable.honorably.honorands.honoraria.honorific.honourers.honouring.hoodmolds.hoodooing.hoodooism.hoodwinks.hoofbeats.hoofbound.hoofprint.hooknosed.hooknoses.hookworms.hooligans.hoopskirt.hoopsters.hoorahing.hooraying.hoosegows.hoovering.hopefully.hopscotch.hordeolum.horehound.horizonal.hornbeams.hornbills.hornbooks.horniness.hornpipes.hornpouts.hornstone.horntails.hornworms.hornworts.horologer.horologes.horologic.horoscope.horoscopy.horribles.horridest.horrified.horrifies.horseback.horsebean.horsecars.horsehair.horsehide.horseless.horselike.horsemint.horseplay.horserace.horseshit.horseshod.horseshoe.horsetail.horseweed.horsewhip.horsiness.hortative.hortatory.hosannaed.hosannahs.hosepipes.hosieries.hospitals.hospitium.hospodars.hostelers.hosteling.hostelled.hosteller.hostessed.hostesses.hostilely.hostility.hotbloods.hotchpots.hotdogged.hotdogger.hoteldoms.hoteliers.hotfooted.hotheaded.hothoused.hothouses.hotnesses.hourglass.houseboat.houseboys.housecarl.housecoat.housefuls.household.housekeep.housekept.houseleek.houseless.houseling.houselled.housemaid.housemate.houseroom.housesits.housetops.housewife.housework.houstonia.hovelling.howitzers.howlingly.howsoever.hoydening.hoydenish.huaraches.huarachos.hubristic.huckaback.hucksters.huffiness.huffishly.hugeously.huisaches.hulloaing.hullooing.humanhood.humanised.humanises.humanisms.humanists.humanized.humanizer.humanizes.humankind.humanlike.humanness.humanoids.humblebee.humbugged.humbugger.humdinger.humectant.humidexes.humidness.humiliate.humitures.hummocked.humongous.humorists.humorless.humouring.humpbacks.humpiness.humungous.hunchback.hundredth.hungering.hungriest.hunkering.hurrahing.hurraying.hurricane.hurriedly.hurtfully.husbanded.husbander.husbandly.husbandry.hushpuppy.huskiness.huzzahing.hyacinths.hyalogens.hybridism.hybridist.hybridity.hybridize.hybridoma.hybristic.hydathode.hydracids.hydragogs.hydrangea.hydranths.hydrastis.hydrating.hydration.hydrators.hydraulic.hydrazide.hydrazine.hydrillas.hydrocast.hydrocele.hydrofoil.hydrogels.hydrogens.hydrolase.hydrology.hydrolyte.hydrolyze.hydromels.hydronium.hydropath.hydropses.hydrosere.hydroskis.hydrosols.hydrostat.hydroxide.hydroxyls.hydrozoan.hygieists.hygienics.hygienist.hygrostat.hylozoism.hylozoist.hymeneals.hymeniums.hymnaries.hymnbooks.hymnodies.hymnodist.hymnology.hyoscines.hypallage.hypanthia.hyperacid.hyperarid.hyperbola.hyperbole.hypercube.hyperemia.hyperemic.hyperfine.hypergamy.hypergols.hyperlink.hyperopes.hyperopia.hyperopic.hyperpnea.hyperpure.hypertext.hypethral.hyphemias.hyphenate.hyphening.hypnoidal.hypnology.hypnotics.hypnotism.hypnotist.hypnotize.hypobaric.hypoblast.hypocaust.hypocotyl.hypocrisy.hypocrite.hypoderma.hypoderms.hypogeous.hypomania.hypomanic.hypomorph.hyponasty.hyponoias.hypoploid.hypopneas.hypopneic.hypopyons.hypostome.hypostyle.hypotaxes.hypotaxis.hypothecs.hypotonia.hypotonic.hypoxemia.hypoxemic.hyracoids.hysterias.hysterics.hysteroid.ibogaines.ibuprofen.iceblinks.iceboater.icecapped.icehouses.icekhanas.icemakers.ichneumon.ichnolite.ichnology.ichthyoid.icinesses.iconicity.iconology.icterical.icteruses.idealised.idealises.idealisms.idealists idealized.idealizer.idealizes.idealless.idealogue.ideations.identical.identikit.ideograms.ideograph.ideologic.ideologue.ideomotor.ideophone.idioblast.idiolects.idiomatic.idiopathy.idioplasm.idiotical.idiotisms idiotypes.idiotypic.idocrases.idolaters.idolators.idolisers idolising.idolizers.idolizing.idyllists.ignescent.ignifying.ignitable.ignitible.ignitions.ignitrons.ignorable.ignoramus.ignorance.iguanians.iguanodon.ileitides.ileostomy.illations.illatives.illegally.illegible.illegibly.illiberal.illicitly.illiniums.illnesses.illogical.illumined.illumines.illusions.illuviate.illuviums.ilmenites.imageable.imageries.imaginary.imaginers.imagining.imagistic.imbalance.imbalmers.imbalming.imbarking.imbeciles.imbecilic.imbedding.imbitters.imblazing.imbodying.imboldens.imbosomed.imbowered.imbricate.imbroglio.imbrowned.imbruting.imbuement.imidazole.imitating.imitation.imitative.imitators.immanence.immanency.immatures.immediacy.immediate.immensely.immensest.immensity.immerging.immersing.immersion.immeshing.immigrant.immigrate.imminence.imminency.immingled.immingles.immixture.immodesty.immolated.immolates.immolator.immorally.immortals.immovable.immovably.immunised.immunises.immunized.immunizer.immunizes.immunogen.immutable.immutably.impacters.impactful.impacting.impaction.impactive.impactors.impainted.impairers.impairing.impaneled.imparking.imparters.impartial.imparting.impassion.impassive.impasting.impastoed.impatiens.impatient.impawning.impeached.impeacher.impeaches.impearled.impeccant.impedance.impellent.impellers.impelling.impellors.impendent.impending.imperator.imperfect.imperials.imperiled.imperious.imperiums.impetigos.impetrate.impetuous.impetuses.impieties.impingers.impinging.impiously.implanted.implanter.impleaded.impleader.impledged.impledges.implement.impletion.implicate.imploding.implorers.imploring.implosion.implosive.impolitic.important.importers.importing.importune.imposable.imposters.imposting.impostors.impostume.imposture.impotence.impotency.impotents.impounded.impounder.impowered.imprecate.imprecise.impregned.impressed.impresses.imprinted.imprinter.imprisons.improbity.impromptu.improvers.improving.improvise.imprudent.impudence.impudency.impugners.impugning.impulsing.impulsion.impulsive.imputable.imputably.inability.inactions.inamorata.inamorato.inaneness.inanimate.inanities.inanition.inaptness.inarching.inaudible.inaudibly.inaugural.inbounded.inbreathe.inbreeder.incanting.incapable.incapably.incarnate.incaution.incensing.incenters.incenting.incentive.incepting.inception.inceptive.inceptors.incessant.inchworms.incidence.incidents.incipient.incisions.incisures.incitable.incitants.inclasped.inclement.incliners.inclining.inclipped.inclosers.inclosing.inclosure including.inclusion.inclusive.incognita.incognito.incomings.incommode.incompact.incondite.incorpsed.incorpses.incorrect.incorrupt.increased.increaser.increases.increment.incretion.incrossed.incrosses.incrusted.incubated.incubates.incubator.incubuses.inculcate.inculpate.incumbent.incumbers.incunable.incurable.incurably.incurious.incurrent.incurring.incursion.incursive.incurvate.incurving.indagated.indagates.indagator.indamines.indecency.indecorum.indelible.indelibly.indemnify.indemnity.indenters.indenting.indention.indentors.indenture.indexable.indexical.indexings.indicants.indicated.indicates.indicator.indiciums.indictees.indicters.indicting.indiction indictors.indigence.indigency.indigenes.indigents.indignant.indignity.indigoids.indigotin.indinavir.indispose.indolence.indorsees.indorsers.indorsing.indorsors.indraught.inducible.inductees.inductile.inducting.induction.inductive.inductors.indulgent.indulgers.indulging.indulines.indurated.indurates.indusiate.indweller.inearthed.inebriant.inebriate.inebriety.ineffable.ineffably.inelastic.inelegant.ineptness.inerrable.inerrancy.inertness.inexactly.inexperts.infalling.infancies.infantile.infantine.infarcted.infatuate.infectant.infecters.infecting.infection.infective.infectors.infeoffed.inferable.inferably.inference.inferiors.inferrers.inferring.infertile.infestant.infesters.infesting.infidelic.infielder.infighter.infinites.infirmary.infirming.infirmity.infixions.inflamers.inflaming.inflaters.inflating.inflation.inflators.inflected.inflector.inflexion.inflicted.inflicter.inflictor.influence.influents.influenza.infobahns.infolders.infolding.informant.informers.informing.infracted.infractor.infrareds.infringed.infringer.infringes.infuriate.infuscate.infusible.infusions.ingathers.ingenious.ingenuity.ingenuous.ingesting.ingestion.ingestive.inglenook.ingrafted.ingrained.ingresses.ingrowing.ingrowths.ingulfing.inhabited.inhabiter.inhalants.inhalator.inharmony.inhaulers.inherence.inherency.inherited.inheritor.inhesions.inhibited.inhibiter.inhibitor.inholders.inholding.inhumanly.initialed initialer.initially.initiated.initiates.initiator.injectant.injecting.injection.injective.injectors.injurable.injurious.injustice.inkstands.inkstones.inlanders.inletting.inmeshing.innermost.innerness.innersole.innervate.innerving.innkeeper.innocence.innocency.innocents.innocuous.innovated.innovates.innovator.innoxious.innuendos.inoculant.inoculate.inoculums.inodorous.inorganic.inositols.inotropic.inpatient.inpouring.inputters.inputting.inquieted.inquiline.inquirers.inquiries inquiring.inrushing.insatiate.inscribed.inscriber.inscribes.inscrolls.insculped.insectary.insectile.inselberg.insensate.inserters.inserting.insertion.insetters.insetting.insheathe.insheaths.inshrined.inshrines.insidious.insignias.insincere.insinuate.insipidly.insistent.insisters.insisting.insnarers.insnaring.insolated.insolates.insolence.insolents.insoluble.insolubly.insolvent.insomniac.insomnias.insouling.inspanned.inspected.inspector.insphered.inspheres.inspirers.inspiring.inspirits.installed.installer.instanced.instances.instanter.instantly.instarred.instating.instigate instilled.instiller.instincts.institute.instrokes.instructs.insulants.insularly.insulated.insulates.insulator.insulters insulting.insurable.insurance.insurants.insurgent.inswathed.inswathes.intaglios.intarsias.integrals.integrand.integrant.integrate.integrity.intellect.intendant intendeds.intenders.intending.intensely.intensest.intensify.intension.intensity.intensive.intention.interacts.interarch.interbank.interbeds.interbred.intercede.intercell.intercept.intercity.interclan.interclub.intercoms.intercrop.intercuts.interdict.interests.interface.interfere.interfile.interfirm.interflow.interfold.interfuse.intergang.interiors.interject.interjoin.interknit.interknot.interlace.interlaid.interlaps.interlard.interlays.interleaf.interlend.interlent.interline.interlink.interloan.interlock.interloop.interlope.interlude.intermale.intermats.interment.intermesh.intermits.intermont.internals.internees.interning.internist.internode.interplay.interpled.interpose.interpret.interrace.interring.interrupt.intersect.interterm.interties.intertill.interunit.intervale.intervals.intervene.interview.interwork.interwove.interzone.intestacy.intestate.intestine.inthralls.inthroned.inthrones.intifadah.intifadas.intifadeh.intimated.intimater.intimates.intimists.intitling.intituled.intitules.intombing.intonated.intonates.intorting.intracity.intranets.intreated.intricacy.intricate.intrigant.intrigued.intriguer.intrigues.intrinsic.introduce.introfied.introfies.introject.intromits.introvert.intruders.intruding.intrusion.intrusive.intrusted.intubated.intubates.intuiting.intuition.intuitive.intumesce.intwining.intwisted.inunction.inundated.inundates.inundator.inurement.inurnment.inutilely.inutility.invalided.invalidly.invariant.invasions.invective.inveighed.inveigher.inveigled.inveigler.inveigles.inventers.inventing.invention.inventive.inventors.inventory.inverness.inversely.inversing.inversion.inversive.invertase.inverters.inverting.invertins.invertors.investing.investors.invidious.inviolacy.inviolate.invisible.invisibly.invocated.invocates invoicing.involucel.involucra.involucre.involuted.involutes.involvers.involving.inwalling.inweaving.inwinding.inwrapped.inwrought.iodations.iodinated.iodinates.iodoforms.iodometry.iodophors.iodopsins.ionizable.ionogenic.ionophore.ionosonde.iotacisms.irascible.irascibly.irateness.iridology.irksomely.ironbarks.ironbound.ironclads.ironizing.ironsides.ironsmith.ironstone.ironwares.ironweeds.ironwoman.ironwomen.ironwoods.ironworks.irradiant.irradiate.irreality.irredenta.irregular.irridenta.irrigable.irrigably.irrigated.irrigates.irrigator.irriguous.irritable.irritably.irritancy.irritants.irritated.irritates.irritator.irrupting.irruption.irruptive.isagogics.isallobar.isarithms.ischaemia.ischemias.ischiadic.ischiatic.iseikonia.iseikonic.isinglass.islanders.islanding.isobarism.isobathic.isobutane.isobutene.isobutyls.isocheims.isochimes.isochores.isochoric.isochrone.isochrons.isoclinal.isoclines.isoclinic.isocyclic.isoenzyme.isogamete.isogamies.isogamous.isogeneic.isogenies.isogenous.isogonals.isogonics.isogonies.isografts.isographs.isohyetal.isolating.isolation.isolators.isologous.isologues.isomerase.isomerism.isomerize.isomerous.isometric.isomorphs.isoniazid.isonomies.isooctane.isophotal.isophotes.isopleths.isopodans.isoprenes.isopropyl.isopycnic.isosceles.isosmotic.isostatic.isosteric.isotactic.isotheral.isotheres.isotherms isotopies.isotropic.issuances.issueless.isthmians.isthmuses.italicise.italicize.itchiness.itemising.itemizers itemizing.iterances.iterating.iteration.iterative.itineracy.itinerant.itinerary.itinerate.ivorybill.ivorylike.jabberers.jabbering.jaborandi.jacaranda.jacinthes.jackaroos.jackasses.jackboots.jackeroos.jacketing.jackfruit.jackknife.jacklight.jackplane.jackrolls.jackscrew.jackshaft.jacksmelt.jacksnipe.jackstays.jackstone.jackstraw.jacobuses.jacquards.jacquerie.jactation.jaculated.jaculates.jadedness.jaggaries.jaggedest.jaggeries.jailbirds.jailbreak.jailhouse.jalapenos.jaloppies.jalousied.jalousies.jambalaya.jamborees.jampacked.jangliest.janissary.japanized.japanizes.japanners.japanning.japonicas.jargoneer.jargonels.jargoning.jargonish.jargonist.jargonize.jarlsberg.jarosites.jarovized.jarovizes.jarringly.jaspilite.jaundiced.jaundices.jauntiest.javelinas.javelined.jawboners.jawboning.jayhawker.jaywalked.jaywalker.jazziness.jealously.jeeringly.jellified.jellifies.jellybean.jellyfish.jellylike.jellyroll.jelutongs.jeoparded.jequirity.jeremiads.jerkiness.jerkingly.jerkwater.jeroboams.jerricans.jerrycans.jessamine.jestingly.jesuitism.jetlagged.jetliners.jetstream.jettiness.jettisons.jewelfish.jewellers.jewellery.jewellike.jewelling.jewelries.jewelweed.jewfishes.jiggering.jiggliest.jigsawing.jingliest.jingoisms.jingoists.jinriksha.jipijapas.jitterbug.jitterier.jittering.jiujitsus.jiujutsus.jobberies.jobholder.jockettes.jockeying.jockeyish.jockstrap.jocularly.jocundity.johnboats.joineries.jointedly.jointless.jointress.jointured jointures.jointweed.jointworm.jokesters.jollified.jollifies.jolliness.jollities.jollyboat.joltingly.jongleurs.jonnycake.joshingly.jounciest.journaled.journeyed.journeyer.joviality.jowliness.joyfuller.joylessly.joypopped.joypopper.joyridden.joyriders.joyriding.joysticks.jubilance.jubilated.jubilates.juddering.judgement.judgeship.judgmatic.judgments.judicable.judiciary.judicious.jugglings.jugulated.jugulates.juicehead.juiceless.juiciness.jukeboxes.julienned.juliennes.jumpiness.jumpingly.jumpsuits.junctions.junctural.junctures.junglegym.jungliest.juniorate.juniority.junketeer.junketers.junketing.junkyards.juridical.jurywoman.jurywomen.justiciar.justified.justifier.justifies juttingly.juveniles.juvenilia.juxtapose.kabalisms.kabalists.kabbalahs.kabbalism.kabbalist.kabeljous.kaddishes.kaddishim.kaffiyahs.kaffiyehs.kailyards.kairomone.kaiserdom.kaiserins.kaiserism.kakemonos.kakiemons.kalamatas.kalanchoe.kalewives.kaleyards.kalifates.kaliphate.kallidins.kalsomine.kalyptras.kamaainas.kamacites.kamikazes.kanamycin.kangaroos.kaoliangs.kaolinite.karabiner.karateist.karyogamy.karyology.karyosome.karyotins.karyotype.kashering.kashruths.katabatic.katakanas.katchinas.katharses.katharsis.kavakavas.kayakings.kazillion.kedgerees.keelboats.keelhaled.keelhales.keelhauls.keepsakes.keeshonds.keffiyahs.keffiyehs.keiretsus.kenneling.kennelled.kenosises.kenotrons.kentledge.kephalins.keratitis.keratomas.keratoses.keratosic.keratosis.keratotic.kerchiefs.kerflooey.kerfuffle.kermesses.kerneling.kernelled.kerosenes.kerosines.kerplunks.kerygmata.ketamines.ketogenic.ketonemia.ketonuria.keyboards.keybutton.keynoters.keynoting.keystones.keystroke.khakilike.khalifate.khamseens.khedivial.kibbitzed.kibbitzer.kibbitzes.kibbutzim.kibitzers.kibitzing kiboshing.kickbacks.kickballs.kickboard.kickboxed.kickboxer.kickboxes.kickshaws.kickstand.kickstart.kiddingly.kiddushes.kidnapees.kidnapers.kidnaping.kidnapped.kidnappee.kidnapper.kielbasas.kieselgur.kieserite.kilderkin.killdeers.killifish.killingly.kilobases.kilobauds.kilobytes.kilocurie.kilocycle.kilogauss.kilograms.kilohertz.kilojoule.kiloliter.kilolitre.kilometer.kilometre.kilomoles.kilovolts.kilowatts.kindliest.kindlings.kinematic.kinescope.kingbirds.kingbolts.kingcraft.kinghoods.kingliest.kingmaker.kingposts.kingships.kingsides.kingsnake.kingwoods.kinkajous.kinkiness.kinswoman.kinswomen.kipperers.kippering.kirigamis.kirmesses.kitchenet.kitschify.kittening.kittenish.kittiwake.kiwifruit.klatsches.kleenexes.klezmorim.klondikes.kludgiest.klutziest.klystrons.knackered.knapsacks.knapweeds.knaveries.knavishly.kneadable.kneeholes.kneepiece.kneesocks.knifelike.knighting.knittable.knittings.knobbiest.knobblier.knockdown.knockless.knockoffs.knockouts.knotgrass.knotholes.knottiest.knottings.knotweeds.knowinger.knowingly.knowledge.knubbiest.knucklers.knucklier.knuckling.knurliest.kolbassis.kolkhoses.kolkhozes.komondors.kookiness.koshering.koumisses.koumysses.kowtowers.kowtowing.kreutzers.krumhorns.krumkakes.krummholz.krummhorn.kryolites.kryoliths.kundalini.kurbashed.kurbashes.kurrajong.kvetchers.kvetchier.kvetching.kyanising.kyanizing.kyboshing.kymograms.kymograph.laagering.labdanums.labelable.labellate.labellers.labelling.labelloid.labiality.labialize.laboredly.laborious.laborites.labourers.labouring.labradors.laburnums.labyrinth.laccolith.lacerable.lacerated.lacerates.lacertids.lacewings.lacewoods.laceworks.lachrymal.laciniate.lackering.lackeying.laconisms.lacquered.lacquerer.lacqueyed.lacrimals.lacrosses.lactating.lactation.lacteally.lacunaria.laddering.ladlefuls ladybirds.ladyhoods.ladyloves.ladypalms.ladyships.laetriles.laggardly.lagnappes.lagniappe.lagomorph.laicising.laicizing.lairdship.laitances.lakefront.lakeports.lakeshore.lakesides.lallation.lallygags.lambasted.lambastes.lambently.lambkills.lambrusco.lambskins.lamebrain.lamellate.lamellose.lamenters.lamenting.laminable.laminaria.laminarin.laminated.laminates.laminator.laminitis.lamisters.lampblack.lamperses.lamplight.lampooned.lampooner.lampposts.lampshade.lampshell.lampyrids.lancelets.lancewood.lanciform.lancinate.landaulet.landfalls.landfills.landforms.landgrabs.landgrave.landlines.landloper.landlords.landmarks.landowner.landscape.landsides.landskips.landsleit.landslide.landslips.landwards.langlaufs.langouste.langrages.langridge.langshans.langsynes.languages.languette.languidly.laniaries.lankiness.lannerets.lanolines.lanthanon.lanthanum.lanthorns.lapboards.lapidated.lapidates.lapidists.lappering.lapstrake.lapstreak.larboards.larceners.larcenies.larcenist.larcenous.largeness.largesses.larghetto.lariating.larkiness.larkspurs.larrigans.larrikins.larrupers.larruping.larvicide.laryngals.laryngeal.laserdisc.laserdisk.lassitude.lastborns.lastingly.latchkeys.latecomer.lateeners.latencies.lateraled.laterally.laterborn.laterites.lateritic.laterized.laterizes.latewoods.latherers.lathering.lathworks.lathyrism.laticifer.latimeria latinized.latinizes.latitudes.latosolic.latticing.laudanums laudation.laudative.laudators.laudatory.laughable.laughably.laughings.laughline.laughters.launchers.launching.launchpad.laundered.launderer.laundress.laundries.laureated.laureates.laureling.laurelled.lavalavas.lavaliere.lavaliers.lavations.laveering.lavenders.laverocks.lavishers.lavishest.lavishing.lawgivers.lawgiving.lawlessly.lawmakers.lawmaking.lawnmower.lawyering.laxations.laxatives.laxnesses.layabouts.layerages.layerings.laypeople.layperson.lazarette.lazaretto.lazulites.lazurites.lazybones.lazzarone.lazzaroni.leachable.leachates.leachiest.leadening.leadplant.leadscrew.leadworks.leadworts.leafiness.leafleted.leafleter.leafstalk.leafworms.leaguered.leakiness.leakproof.leapfrogs.learnable.learnedly.learnings.leaseback.leasehold.leastways.leastwise.leathered.leavening.lebkuchen.lechayims.lecheries.lechering.lecherous.lecithins.lectotype.lecturers.lecturing.leeboards.leechlike.leeriness.leeringly.leewardly.leftmosts.leftovers.leftwards.legaleses.legalised.legalises.legalisms.legalists.legalized.legalizer.legalizes.legations.legendary.legendize.legginess.legionary.legislate.legwarmer.leiomyoma.leistered.leisurely.leitmotif.leitmotiv.lemmatize.lemniscal.lemniscus.lemonades.lemonlike.lemurlike.lemuroids.lengthens.lengthier.lengthily.leniences.leniently.lenitions.lenitives.lenticels.lenticule.leotarded.lepidotes.leporidae.leprosies.leprously.leptophos.leptosome.leptotene.lesioning.lespedeza.lessening.lessoning.lethality.lethargic.letterbox.letterers lettering.letterman.lettermen.leucemias.leucocyte.leukaemia.leukemias.leukemics.leukemoid.leukocyte.leukotomy.levanters.levantine.levanting.levatores.levellers.levelling.levelness.leveraged.leverages.leviathan.levigated.levigates.levirates.leviratic.levitated.levitates.levitator.levodopas.levuloses.lewisites.lewissons.lexically.liability.libations.libecchio.libeccios.libelants.libelists.libellant.libellees.libellers.libelling.libellous.liberally.liberated.liberates.liberator.liberties.libertine.libidinal.librarian.libraries.librating.libration.libratory.librettos.libriform.licencees.licencers.licencing.licensees.licensers.licensing.licensors.licensure.lichening.lichenins.lichenose.lichenous.licitness.lickerish.lickspits.licorices.lictorian.lidocaine.lifeblood.lifeboats.lifecares.lifeguard.lifelines.lifesaver.lifespans.lifestyle.lifetimes.lifeworks.lifeworld.liftgates.ligaments.ligations.ligatured.ligatures.lightbulb.lightened.lightener lightered.lightface.lightfast.lightings.lightless.lightness.lightning.lightship.lightsome.lightwave.lightwood.lignaloes.lignified.lignifies.ligroines.ligulated.likeliest.lilangeni.lilliputs.liltingly.limberest.limbering.limekilns.limelight.limericks.limestone.limewater.limitable.limitedly.limitless.limnology.limonenes.limonites.limonitic.limousine.limpidity.limpingly.limpsiest.limuloids.linalools.linchpins.lineality.lineament.linearise.linearity.linearize.lineation.lineolate.linerless.lingberry.lingerers.lingeries.lingering.lingually.linguicas.linguines.linguinis.linguisas.linguists.lingulate.liniments.linksland.linkworks.linoleate.linoleums.linotyped.linotyper.linotypes.linstocks.lintwhite.lionesses.lionisers.lionising.lionizers.lionizing.lipectomy.lipocytes.lipolitic.lipolyses.lipolysis.lipolytic.liposomal.liposomes.lipotropy.lippening.lippering.lippiness.lipreader.lipsticks.liquating.liquation.liquefied.liquefier.liquefies.liquidate.liquidity.liquidize.liquified.liquifies.liquorice.liquoring.liquorish.liripipes.lispingly.lissomely.listeners.listening.listerias.literally.literates.literatim.literator.literatus.litharges.lithemias.litheness.lithesome.lithiases.lithiasis.lithified.lithifies.lithoidal.lithology.lithopone.lithosols.lithotomy.litigable.litigants.litigated.litigates.litigator.litigious.litterbag.litterbug.litterers.littering.littorals.liturgics.liturgies.liturgism.liturgist.liveliest.liverleaf.liverwort.liveryman.liverymen.livestock.livetraps.lividness.lixiviate.lixiviums.loadstars.loadstone.loaminess.loanshift.loanwords.loathings.loathness.loathsome.lobations.lobbygows.lobbyisms.lobbyists.lobectomy.lobelines.lobscouse.lobstered.lobsterer.lobsticks.lobularly.lobulated.localised.localises.localisms.localists.localites.localized.localizer.localizes.localness.locatable.locations.locatives.lockboxes.lockdowns.lockmaker.locksmith.locksteps.locofocos.locomoted.locomotes.locomotor.locoweeds.loculated.locutions.lodestars.lodestone.lodgement.lodgments.lodicules.loftiness.logaoedic.logarithm.logically.logicians.logicised.logicises.logicized.logicizes.logicless.logistics.logjammed.lognormal.logograms.logograph.logogriph.logomachs.logomachy.logophile.logorrhea.logotypes.logrolled.logroller.loincloth.loiterers.loitering.lollingly.lollipops.lolloping.lollygags.lollypops.lomentums.loneliest.lonesomes.longboats.longcloth.longerons.longevity.longevous.longhairs.longhands.longheads.longhorns.longhouse.longicorn.longingly.longitude.longjumps.longlines.longnecks.longships.longshore.longspurs.longueurs.lookalike.lookdowns.looksisms.looniness.loopholed.loopholes.loopiness.looseners.looseness.loosening.loppering.lopsticks.loquacity.lorazepam.lordliest.lordlings.lordships.lorgnette.loricated.loricates.lorikeets.lotharios.lotteries.lotusland.loudening.loudliest.loudmouth.lousewort.lousiness.loutishly.lovebirds.lovefests.loveliest.lovelocks.lovemaker.loveseats.lovevines.lowballed.lowbrowed.lowercase.lowermost.lowlander.lowlifers.lowlights.lowlihead.lowliness.lownesses.lowriders.loxodrome.loyalisms.loyalists.loyalties.lubricant.lubricate.lubricity.lubricous.lucencies.lucidness.luciferin.luckiness.lucrative.lucubrate.ludicrous.lullabied.lullabies.lumberers.lumbering.lumberman.lumbermen.lumbrical.luminaire.luminance.luminaria.luminesce.luminisms.luminists.lumpiness.lumpingly.lumpishly.lunarians.lunations.luncheons.lunchmeat.lunchroom.lunchtime.lungworms.lungworts.lunisolar.lunitidal.lunkheads.lunulated.luridness.lurkingly.lustering.lustfully.lustihood.lustiness.lustrated.lustrates.lustrings.lutanists.luteciums.lutefisks.luteinize.lutenists.luteolins.lutetiums.luxations.luxuriant.luxuriate.luxurious.lychnises.lycopenes.lymphatic.lymphomas.lynchings.lynchpins.lyonnaise.lyophiled.lyophilic.lyophobic.lyrebirds.lyrically lyricised.lyricises.lyricisms.lyricists.lyricized.lyricizes.lysimeter.lysogenic.lysosomal.lysosomes.lysozymes.lytically.macabrely.macadamia.macaronic.macaronis.macaroons.maccabaws.maccaboys.maccoboys.macedoine.macerated.macerater.macerates.macerator.machinate.machinery.machining.machinist.machismos.machoisms.machzorim.macintosh.mackerels.mackinaws.macrocosm.macrocyst.macrocyte.macrodont.macromere.macromole.macrurans.macrurous.maculated.maculates.maddening.madeleine.maderized.maderizes.madhouses.madnesses.madrasahs.madrassah.madrassas.madrepore.madrigals.madrilene.maelstrom.maenadism.maestosos.mafficked.mafficker.magalogue.magazines.magdalene.magdalens.magically.magicians.magicking.magisters.magistral.magnesian.magnesias.magnesite.magnesium.magnetics.magnetise.magnetism.magnetite.magnetize.magnetons.magnetron.magnifico.magnified.magnifier.magnifies.magnitude.magnolias.maharajah.maharajas.maharanee.maharanis.maharishi.mahimahis.mahjonggs.mahlstick.maiasaura.maiasaurs.maidhoods.mailboxes.mailgrams.mailrooms.mainframe.mainlands.mainlined.mainliner.mainlines.mainmasts.mainsails.mainsheet.mainstays.maintains.maiolicas.majesties.majolicas.majordomo.majorette.majuscule.makebates.makefasts.makeovers.makeready.makeshift.makimonos.malachite.maladroit.malaguena.malamutes.malanders.malaperts.malaprops.malarious.malarkeys.malarkies.malaromas.malathion.maledicts.malemiuts.malemutes.malformed.malicious.malignant.maligners.maligning.malignity.malihinis.malingers.malleable.malleably.mallemuck.malleolar.malleolus.malpighia.maltiness.maltreats.maltsters.malvasian.malvasias.mamaligas.mamelukes.mammalian.mammality.mammalogy.mammering.mammillae.mammocked.mammogram.mammonism.mammonist.manacling.manciples.mandarins.mandatary.mandating.mandators.mandatory.mandibles.mandiocas.mandoline.mandolins.mandrakes.mandrills.manducate.maneuvers.mangabeys.mangabies.manganate.manganese.manganins.manganite.manganous.manginess.mangonels.mangroves.manhandle.manhattan.manically.manicotti.manicured.manicures.manifesto.manifests.manifolds.manipular.manlikely.manliness.mannequin.mannerism.mannerist.mannikins.mannishly.mannitols.manoeuvre.manometer.manometry.manpowers.mansarded.manslayer.mantelets.manticore.mantillas.mantissas.mantlings.manubrial.manubrium.manyplies.manzanita.maplelike.mapmakers.mapmaking.maquettes.marabouts.maranatha.marasmoid.marathons.marauders.marauding.maravedis.marbelize.marbleise.marbleize.marbliest.marblings.marcasite.marcelled.marceller.marchland.marchlike.marchpane.margarine.margarins.margarita.margarite.margented.marginals.marginate.margining.margraves.mariachis.marigolds.marihuana.marijuana.marimbist.marinaded.marinades.marinaras.marinated.marinates.mariposas.maritally.marjorams.markdowns.marketeer.marketers.marketing.markhoors.marlstone.marmalade.marmoreal.marmorean.marmosets.marocains.marooning.marquetry.marquises.marriages.marrowfat.marrowing.marseille.marshalcy.marshaled.marshalls.marshiest.marshland.marshlike.marsupial.marsupium.martagons.martellos.martially.martinets.martingal.martyrdom.martyries.martyring.martyrize.marveling.marvelled.marvelous.maryjanes.marzipans.mascaraed.masculine.mashgiach.mashgihim.masochism.masonites.masonries.massacred.massacrer.massacres.massagers.massaging.masscults.masseters.masseuses.massicots.massiness.massively.mastabahs.masterdom.masterful.masteries.mastering.mastheads.masticate.mastiches.mastodons.mastodont.mastopexy.masuriums.matambala.matchable.matchbook.matchless.matchlock.matchmade.matchmake.matchmark.matchwood.matelasse matelotes.materials.materiels.maternity.mateships.mateyness.matrasses.matriarch.matricide.matrimony.matronize.matsutake.matterful.mattering.maturated.maturates.matutinal.maudlinly.maulstick.maundered.maunderer.mausolean.mausoleum.mavericks.mavournin.mawkishly.maxicoats.maxillary.maximally.maximised.maximises.maximites.maximized.maximizer.maximizes.maximumly.mayapples.maybushes.mayflower.mayhappen.mayoralty.mayorship.mazaedium.mazedness.mazourkas.mbaqangas.mealiness.mealtimes.mealworms.mealybugs.meandered.meanderer.meandrous.meaningly.meantimes.meanwhile.measliest.measurers.measuring.meatballs.meatheads.meatiness.mechanics.mechanism.mechanist.mechanize.mechitzas.mechitzot.meclizine.meconiums.medaillon.medalists.medalling.medallion.medallist.medevaced.mediacies.mediaeval.mediately.mediating.mediation.mediative.mediatize.mediators.mediatory.mediatrix.medicable.medicaids.medically.medicants.medicares.medicated.medicates.medicides.medicinal.medicined.medicines.medievals.meditated.meditates.meditator.medivaced.medullary.medusoids.megabucks.megabytes.megacycle.megadeals.megadeath.megadoses.megadynes.megafauna.megaflops.megahertz.megaliths.megalopic.megaphone.megapixel.megapodes.megaspore.megastars.megathere.megavolts.megawatts.megillahs.melaleuca.melamines.melanisms.melanists.melanites.melanitic.melanized.melanizes.melanoids.melanomas.melanoses.melanosis.melanotic.melaphyre.melastome.melatonin.melilites.melinites.meliorate.meliorism.meliorist.melismata.mellotron.mellowest.mellowing.melodeons.melodicas.melodious.melodised.melodises.melodists.melodized.melodizer.melodizes.melodrama.melongene.melphalan.meltdowns.meltingly.meltwater.membranal.membraned.membranes.mementoes.memoirist.memorable.memorably.memoranda.memorials.memorised.memorises.memoriter.memorized.memorizer.memorizes.memsahibs.menadione.menagerie.menarches.mendacity.mendicant.mendicity.menhadens.meningeal.meniscate.meniscoid.menopause.menorrhea.menseless.menstrual.menstruum.mentalese.mentalism.mentalist.mentality.mentation.menthenes.mentioned.mentioner.mentoring.merbromin.mercaptan.mercenary.merceries.mercerise.mercerize.merchants.merciless.mercurate.mercurial.mercuries.mercurous.merengues.merganser.mergences.meridians.meringues.meristems.meritless.merocrine.merozoite.merriment.merriness.mescaline.meseemeth.mesentera.mesentery.meshugaas.meshuggah meshworks.mesically.mesmerise.mesmerism.mesmerist.mesmerize.mesoblast.mesocarps.mesocrany.mesoderms.mesogleal.mesogleas.mesogloea.mesomeres.mesomorph.mesopause.mesophyll.mesophyls.mesophyte.mesoscale.mesosomes.mesotrons.mesozoans.mesquites.messaging.messaline.messenger.messianic.messieurs.messiness.messmates.messuages.mestesoes.mestinoes.mestizoes.mestranol.metabolic.metacarpi.metagenic.metalhead.metalised.metalises.metalists.metalized.metalizes.metallics.metallike.metalline.metalling.metallist.metallize.metalloid.metalmark.metalware.metalwork.metameres.metameric.metaphase.metaphors.metaplasm.metatarsi.metaxylem.metazoans.meteorite.meteoroid.meterages.metestrus.metformin.methadone.methadons.methanols.metheglin.methodise.methodism.methodist.methodize.methought.methoxide.methylals.methylase.methylate.methylene.metonymic.metralgia.metrazols.metricate.metricism.metricize.metrified.metrifies.metrology.metronome.metroplex.mezereons.mezereums.mezquites.mezzaluna.mezzanine.mezzotint.miasmatic.micaceous.micawbers.micrified.micrifies.microbars.microbeam.microbial.microbian.microbrew.microchip.microcode.microcopy.microcosm.microcyte.microdont.microdots.microfilm.microform.microgram.microinch.microlith.microloan.micromere.micromhos.micromini.micromole.micronize.micropore.micropyle.microsome.microtome.microtomy.microtone.microvolt.microwatt.microwave.micturate.midbrains.midcourse.middleman.middlemen.middlings.middorsal.midfields.midinette.midiskirt.midlifers.midmonths.midnights.midpoints.midranges.midrashic.midrashim.midrashot.midspaces.midstream.midsummer.midweekly.midwifery.midwifing.midwinter.midwiving.miffiness.mightiest.migraines.migrating.migration.migrators.migratory.mijnheers.mildening.mildewing.mileposts.milesimos.milestone.miliarial.miliarias.militance.militancy.militants.militaria.militated.militates.milkiness.milkmaids.milkshake.milksheds.milksoppy.milkweeds.milkwoods.milkworts.millboard.millcakes.millenary.millennia.millepede.millepeds.millepore.millerite.millhouse.milliards.milliares.millibars.milliemes.milligals.milligram.millimhos.millimole.milliners.millinery.milliohms.millionth.millipede.millipeds.millirems.millivolt.milliwatt.millponds.millraces.millstone.millworks.mimesises.mimetites.mimickers.mimicking.mimicries.minacious.minareted.mincemeat.mincingly.mindfully.minefield.minelayer.mineshaft.miniature.minibiker.minibikes.minibuses.minicamps.minidiscs.minidress.minifying.minimally.minimaxes.minimills.minimised.minimises.minimized.minimizer.minimizes.miniparks.minipills.miniscule.minishing.miniskirt.ministate.ministers.minitower.minitrack.minoxidil.minstrels.minuscule.minuteman.minutemen.miquelets.mirabelle.miracidia.mirandize.mirlitons.mirroring.mirthless.misacting.misadapts.misadding.misadjust.misadvice.misadvise.misagents.misaiming.misaligns.misallied.misallies.misallots.misalters.misassays.misassign.misatoned.misatones.misawards.misbecame.misbecome.misbegins.misbehave.misbelief.misbiased.misbiases.misbilled.misbrands.misbuilds.misbutton.miscalled.miscaller.mischance.mischarge.mischiefs.mischoice.mischoose.mischosen.misciting.misclaims.miscoding.miscoined.miscolors.miscooked.miscopied.miscopies.miscounts.miscreant.miscreate.misdating.misdealer.misdeemed.misdefine.misdialed.misdirect.misdivide.misdoings.misdoubts.misdriven.misdrives.miseating.misedited.misemploy.misenroll.misenrols.misenters.miserable.miserably.misereres.misesteem.misevents.misfaiths.misfeasor.misfields.misfiling.misfiring.misfitted.misformed.misframed.misframes.misgauged.misgauges.misgiving.misgovern.misgraded.misgrades.misgrafts.misguided.misguider.misguides.mishandle.mishanter.mishegaas.mishegoss.misinfers.misinform.misinters.misjoined.misjudged.misjudges.miskicked.mislabels.mislabors.mislayers.mislaying.misleader.misleared.mislearns.mislearnt.mislights.mislikers.misliking.misliving.mislocate.mislodged.mislodges.mismaking.mismanage.mismarked.mismating.mismoving.misnaming.misnomers.misnumber.misogamic.misogynic.misoneism.misoneist.misorders.misorient.mispaging.mispaints.misparsed.misparses.misparted.mispenned.misphrase.mispickel.misplaced.misplaces.misplants.misplayed.mispleads.mispoints.mispoised.mispoises.mispriced.misprices.misprints.misprized.misprizer.misprizes.misquoted.misquoter.misquotes.misraised.misraises.misrating.misreckon.misrecord.misrefers.misrelate.misrelied.misrelies.misrender.misreport.misrhymed.misrouted.misroutes.misruling.missaying.misseated.missenses.misshaped.misshapen.misshaper.misshapes.missileer.missilery.missional.missioned.missioner.missorted.missounds.misspaced.misspaces.misspeaks.misspells.misspends.misspoken.misstamps.misstarts.misstated.misstates.missteers.misstrike.misstruck.misstyled.misstyles.missuited.mistakers.mistaking.mistaught.mistended.mistermed.misthinks.misthrown.misthrows.mistiming.mistiness.mistitled.mistitles.mistletoe.mistraced.mistraces.mistrains.mistreats.mistrials.mistrusts.mistruths.mistrysts.mistuning.mistutors.mistyping.misunions.misusages.misvalued.misvalues.misworded.miswrites.misyoking.miterwort.miticidal.miticides.mitigable.mitigated.mitigates.mitigator.mitogenic.mitomycin.mitrewort.mizenmast.mnemonics.moaningly.mobbishly.mobilised.mobilises.mobilized.mobilizer.mobilizes.mobocracy.mobocrats.moccasins.mockeries.mockingly.mocktails.modelings.modelists.modellers.modelling.moderated.moderates.moderator.moderatos.modernest.modernise.modernism.modernist.modernity.modernize.modestest.modesties.modifiers.modifying.modillion.modularly.modulated.modulates.modulator.moffettes.moilingly.moistened.moistener.moistness.moistures.moldboard.moldering.moldiness.moldwarps.molecular.molecules.molehills.moleskins.molesters.molesting.mollified.mollifier.mollifies.molluscan.molluscum.molluskan.mollymawk.molybdate.molybdous.momentary.momentoes.momentous.momentums.monachism.monacidic.monadical.monadisms.monadnock.monarchal.monarchic.monastery.monastics.monatomic.monazites.monecious.monellins.monetised.monetises.monetized.monetizes.moneybags.moneyless.moneywort.mongering.mongolian.mongolism.mongoloid.mongooses.mongrelly.monickers.monishing.monitions.monitored.monkeries.monkeying.monkeyish.monkeypod.monkeypot.monkhoods.monkishly.monkshood.monoacids.monoamine.monobasic.monocarps.monochord.monocline.monocoque.monocotyl.monocracy.monocrats.monocular.monocycle.monocytes.monocytic.monodical.monodists.monodrama.monoecies.monoecism.monoester.monofuels.monogamic.monogenic.monoglots.monograms.monograph monohulls.monoicous.monokines.monolayer.monoliths.monologic.monologue.monomania.monomeric.monometer.monomials.monophagy.monophony.monophyly.monoplane monoploid.monopodes.monopodia.monopoles.monopsony.monorails.monorchid.monorhyme.monosomes.monosomic.monostele.monostely.monostich.monostome.monotints.monotones.monotonic.monotreme.monotypes.monotypic.monovular.monoxides.monsignor.monsoonal.monsteras.monstrous.montadale.montaging.monteiths.monthlies.monthlong.monticule.monuments.monzonite.moodiness.moonbeams.moonblind.moonchild.moondusts.moonfaced.mooniness.moonishly.moonlight.moonports.moonquake.moonrises.moonroofs.moonsails.moonscape.moonseeds.moonshine.moonshiny.moonshots.moonstone.moonwalks.moonwards.moonworts.moorcocks.moorfowls.moorlands.moorworts.moosebird.moosewood.mopboards.moquettes.moralised.moralises.moralisms.moralists.moralized.moralizer.moralizes.moratoria.morbidity.mordacity.mordanted.mordantly.moresques.morganite.moronisms.morphemes.morphemic.morphines.morphings.morphinic.morphogen.morphoses.morphosis.morseling.morselled.mortality.mortaring.mortarman.mortarmen.mortgaged.mortgagee.mortgager.mortgages.mortgagor.mortician.morticing.mortified.mortifier.mortifies.mortisers.mortising.mortmains.mosaicism.mosaicist.mosaicked.mosasaurs.moschatel.mosquitos.mossbacks.mossgrown.mossiness.mothballs.mothering.mothproof.motioners.motioning.motivated.motivates.motivator.motleyest.motocross.motorbike.motorboat.motorcade.motorcars.motordoms.motorings.motorised.motorises.motorists.motorized.motorizes.motorless.motorship.motorways.mouchoirs.moufflons.mouldered.mouldiest.mouldings.moundbird.mountable.mountains.mountainy.mountings.mournings.mousebird.mouselike.mousepads.mousetail.mousetrap.mousiness.moussakas.moustache.mouthfeel.mouthfuls.mouthiest.mouthless.mouthlike.mouthpart.mouthwash.moutonnee.moveables.movements.moviedoms.moviegoer.movieolas.mozzettas.mridangam.mridangas.muchachos.mucilages.mucinogen.muckamuck.mucklucks.muckraked.muckraker.muckrakes.muckworms.mucolytic.mucronate.mudcapped.muddiness.mudfishes.mudguards.mudslides.mudstones.muensters.muffineer.mufflered.mugginess.mujahedin.mujahidin.mulattoes.muleteers.mullahism.mulligans.mullioned.multiatom.multiband.multibank.multicell.multicity.multicopy.multidisc.multidrug.multifoil.multifold.multiform.multigerm.multigrid.multihued.multihull.multilane.multiline.multilobe.multimode.multipack.multipage.multipara.multipart.multipath.multipede.multipeds.multipion.multiples.multiplet.multiplex.multipole.multiport.multiroom.multisite.multisize.multistep.multitask.multitone.multitude.multiunit.multiuser.multiwall.multiyear.mummeries.mummichog.mummified.mummifies.munchable.munchkins.mundanely.mundanity.mundungos.mundungus.mungooses.municipal.muniments.munitions.muraenids.muralists.murderees.murderers.murderess.murdering.murderous.muricated.murkiness.murmurers.murmuring.murmurous.murrelets.murthered.muscadels.muscadets.muscadine.muscarine.muscatels.muscleman.musclemen.muscovado.muscovite.museology.mushiness.mushrooms.musicales.musically.musicians.musicking.musicless.musketeer.muskiness.muskmelon.muskroots.mussiness.mustached.mustaches.mustachio.mustelids.musteline.mustering.mustiness.mutagenic.mutations.mutchkins.mutilated.mutilates.mutilator.mutineers.mutinying.mutterers.muttering.mutualism.mutualist.mutuality.mutualize.muzziness.mycetomas.mycoflora.mycologic.mycophagy.mycophile.mycorhiza.mycotoxin.mycovirus.mydriases.mydriasis.mydriatic.myelocyte.myelogram.myelomata.mylonites.myoblasts.myocardia.myoclonic.myoclonus.myofibril.myoglobin.myographs.myologies.myologist.myomatous.myoneural.myopathic.myoscopes.myotonias.myriapods.myriopods.myrmidons.myrobalan.mystagogs.mystagogy.mysteries.mysticete.mysticism.mystified.mystifier.mystifies.mystiques.mythicize.mythmaker.mythology.mythopeic.myxamebae.myxamebas.myxamoeba.myxedemas.myxedemic.myxocytes.myxoedema.myxoviral.myxovirus.nabobisms.naethings.naggingly.nailbiter.nailbrush.nailfolds.nailheads.nainsooks.naissance.naiveness.naiveties.nakedness.naloxones.namaycush.nameplate.namesakes.nancified.nanograms.nanometer.nanometre.nanoscale.nanotechs.nanotesla.nanotubes.nanowatts.napalming.naphthene.naphthols.naphthous.naphthyls.napoleons.nappiness.naproxens.narceines.narcissus.narcistic.narcomata.narcotics.narcotism.narcotize.narghiles.nargilehs.narraters.narrating.narration.narrative.narrators.narrowest.narrowing.narrowish.narthexes.narwhales.nasalised.nasalises.nasalisms.nasalized.nasalizes.nascences.naseberry.nastiness.natations.natatoria.natheless.nationals.nativisms.nativists.natrolite.nattering.nattiness.naturally.naturisms.naturists.naugahyde.naughtier.naughties.naughtily.naumachia.nauseants.nauseated.nauseates.nautiloid.navelwort.navicerts.navicular.navigable.navigably.navigated.navigates.navigator.naysayers.naysaying.nazifying.nearliest.nearshore.nearsides.neatening.neatherds.nebbishes.nebenkern.nebulised.nebulises.nebulized.nebulizer.nebulizes.necessary.necessity.neckbands.neckcloth.necklaced.necklaces.necklines.neckpiece.necrology.necropoli.necrosing.necrotize.necrotomy.nectarean.nectarial.nectaried.nectaries.nectarine.nectarous.needfully.neediness.needlings.nefarious.negations.negatived.negatives.negatrons.neglected.neglecter.neglector.negligees.negligent.negotiant.negotiate.negritude.negrophil.neighbors.neighbour.nelumbium.nematodes.nemertean.nemertine.nemophila.neocortex.neodymium.neolithic.neologies.neologism.neologist.neologize.neomorphs.neomycins.neophilia.neophytes.neophytic.neoplasia.neoplasms.neoplasty.neoprenes.neotenies.neotenous.neoterics.neotropic.nepenthes.nepheline.nephelite.nephogram.nephology.nephridia.nephrisms.nephrites.nephritic.nephritis.nephroses.nephrosis.nephrotic.nepotisms.nepotists.neptunium.nerdiness.nervation.nervature.nerveless.nerviness.nervosity.nervously.nescience.nescients.nestlings.netminder.nettliest.networked.networker.neuralgia.neuralgic.neuraxons.neuritics.neurocoel.neuroglia.neurology.neuromast.neuromata.neuropath.neurotics.neurotomy.neustonic.neutering.neutrally.neutrinos.neutronic.nevermind.nevermore.newcomers.newlyweds.newmarket.newnesses.newsagent.newsbeats.newsbreak.newscasts.newsdesks.newsgirls.newsgroup.newshawks.newshound.newsiness.newsmaker.newspaper.newspeaks.newsprint.newsreels.newsrooms.newsstand.newswires.newswoman.newswomen.newwavers.ngultrums.nialamide.niccolite.nickeling.nickelled.nickelous.nickering.nicknacks.nicknamed.nicknamer.nicknames.nicotiana.nicotines.nicotinic.nictating.nictation.nictitant.nictitate.nidations.niddering.niderings.nidifying.niellists.nielloing.niffering.niftiness.niggarded.niggardly.niggliest.nigglings.nightcaps.nightclub.nightfall.nightglow.nightgown.nighthawk.nightjars.nightless.nightlife.nightlong.nightmare.nightside.nightspot.nighttide.nighttime.nightwear.nigrified.nigrifies.nigritude.nigrosine.nigrosins.nihilisms.nihilists.nilpotent.nimbyness.nimieties.ninebarks.nineteens.ninetieth.ninhydrin.nippiness.nippingly.nitpicked.nitpicker.nitrating.nitration nitrators.nitriding.nitrified.nitrifier.nitrifies.nitrogens.nitrosyls.nizamates.nobeliums.nobiliary.nobleness.noblesses.noctiluca.nocturnal.nocturnes.nocuously.noddingly.noiseless.noisettes.noisiness.noisomely.nomadisms.nominally.nominated.nominates.nominator.nomograms.nomograph.nomologic.nonacidic.nonacting.nonaction.nonactive.nonactors.nonaddict.nonadults.nonagonal.nonanimal.nonanswer.nonarable.nonartist.nonatomic.nonauthor.nonbeings.nonbelief.nonbinary.nonbiting.nonblacks.nonbodies.nonbonded.nonbuying.noncaking.noncampus.noncareer.noncasual.noncausal.noncereal.nonchurch.noncoding.noncoital.noncoking.noncolors.noncombat.nonconcur.noncounty.noncredit.noncrimes.noncrises.noncrisis.noncyclic.nondancer.nondances.nondegree.nondemand.nondesert.nondoctor.nondollar.nondriver.nondrying.nonedible.nonending.nonenergy.nonentity.nonequals.nonerotic.nonethnic.nonevents.nonexempt.nonexotic.nonexpert.nonextant.nonfactor.nonfading.nonfamily.nonfarmer.nonfeudal.nonfilial.nonfinite.nonfiscal.nonfluids.nonflying.nonformal.nonfossil.nonfrozen.nonfunded.nonghetto.nonglares.nonglazed.nonglossy.nongolfer.nongraded.nongreasy.nongrowth.nonguests.nonguilts.nonheroes.nonheroic.nonhumans.nonhunter.nonillion.nonimages.nonimmune.nonimpact.noninjury.noninsect.nonissues.nonjoiner.nonjuries.nonjuring.nonjurors.nonkosher.nonlawyer.nonleaded.nonleague.nonlegume.nonlethal.nonliable.nonlineal.nonlinear.nonliquid.nonliving.nonlocals.nonloving.nonmajors.nonmanual.nonmarket.nonmature.nonmember.nonmental.nonmetals.nonmetric.nonmobile.nonmodern.nonmortal.nonmotile.nonmoving.nonmusics.nonmutant.nonmutual.nonnative.nonneural.nonnormal.nonnovels.nonorally.nonowners.nonpagans.nonpapist.nonpareil.nonparent.nonparity.nonpaying.nonperson.nonplanar.nonplayer.nonpliant.nonplused.nonpluses.nonpoetic.nonpolice.nonporous.nonpostal.nonprofit.nonproven.nonpublic.nonracial.nonrandom.nonreader.nonrhotic.nonrioter.nonrivals.nonrubber.nonruling.nonsacred.nonsaline.nonschool.nonsecret.nonsecure.nonselves.nonsenses.nonserial.nonsexist.nonsexual.nonshrink.nonsigner.nonskater.nonskiers.nonsmoker.nonsocial.nonsolids.nonspeech.nonstaple.nonstatic.nonsteady.nonsticky.nonstyles.nonsuches.nonsugars.nonsuited.nonsystem.nontalker.nontarget.nontariff.nontheist.nontragic.nontribal.nontruths.nonunions.nonunique.nonurgent.nonusable.nonvacant.nonvector.nonvenous.nonverbal.nonvested.nonviable.nonviewer.nonvirgin.nonvirile.nonvisual.nonvocals.nonvoters.nonvoting.nonwhites.nonwinged.nonworker.nonwovens.nonwriter.noontides.noontimes.noosphere.nootropic.nopalitos.normalise.normality.normalize.normative.northeast.northerly.northerns.northings.northland.northmost.northward.northwest.nosebands.nosebleed.nosedived.nosedives.noseguard.nosepiece.nosewheel.nosologic.nostalgia.nostalgic.nostology.notabilia.notarized.notarizes.notations.notchback.notebooks.notecards.notecases.notedness.notepaper.notifiers.notifying.notochord.notoriety.notorious.nourished.nourisher.nourishes.nouvelles.novations.novelette.novelised.novelises.novelists.novelized.novelizer.novelizes.novelties.noviciate.novitiate.novocaine.nowhither.nownesses.noxiously.nubbiness.nubbliest.nucleases.nucleated.nucleates.nucleator.nucleinic.nucleoids.nucleolar.nucleoles.nucleolus.nucleonic.nucleuses.nuisances.nullified.nullifier.nullifies.nullipara.nullipore.nullities.numberers.numbering.numbingly.numbskull.numchucks.numerable.numerably.numerally.numerated.numerates.numerator.numerical.nummulite.numskulls.nunchakus.nunnation.nunneries.nuptially.nursemaid.nurseries.nurslings.nurturant.nurturers.nurturing.nutations.nuthouses.nutrients.nutriment.nutrition.nutritive.nutsedges.nutshells.nuttiness.nymphalid.nymphetic.nymphette.nystagmic.nystagmus.nystatins.oakmosses.oarfishes.oarswoman.oarswomen.oasthouse.obbligati.obbligato.obconical.obcordate.obeahisms.obedience.obeisance.obeliscal.obelising.obelizing.obeseness.obesities.obfuscate.objectify.objecting.objection.objective.objectors.objurgate.oblations.obligable.obligated.obligates.obligator.obligatos.obliquely.obliquing.obliquity.oblivions.oblivious.obloquial.obloquies.obnoxious.obscenely.obscenest.obscenity.obscurant.obscurely.obscurest.obscuring.obscurity.obsecrate.obsequies.observant.observers.observing.obsessing.obsession.obsessive.obsessors.obsidians.obsolesce.obsoleted.obsoletes.obstacles.obstetric.obstinacy.obstinate.obstructs.obstruent.obtainers.obtaining.obtesting.obtruders.obtruding.obtrusion.obtrusive.obtundent.obtunding.obtundity.obturated.obturates.obturator.obversely.obversion.obverting.obviating.obviation.obviators.obviously.occasions.occidents.occipital.occludent.occluding.occlusion.occlusive.occulters.occulting.occultism.occultist.occupancy.occupants.occupiers.occupying.occurrent.occurring.oceanaria.oceanauts.ocellated.ochlocrat.ocotillos.octachord.octagonal.octahedra.octameter.octangles.octennial.octillion.octoploid.octopodan.octopodes.octopuses.octoroons.octothorp.octuplets.octupling.ocularist.odalisque.oddnesses.oddsmaker.odiferous.odographs.odometers.odontoids.odorizing.odorously.oedipally.oeillades.oenophile.oesophagi.oestriols.oestrogen.oestrones.oestruses.offenders.offending.offensive.offerings.offertory.offhanded.officered.officials officiant.officiary.officiate.officinal.officious.offloaded.offprints.offscreen.offshoots.offshores.offspring.offstages.oghamists.ogreishly.ohmically.ohmmeters.oilcloths.oilpapers.oilstones.ointments.oiticicas.okeydokey.oldnesses.oldsquaws.oldstyles.oleanders.oleasters.olecranal.olecranon.oleograph.oleoresin.olfaction.olfactive.olfactory.olibanums.oligarchs.oligarchy.oligocene.oligogene.oligomers.oligopoly.oligurias.olivenite.ololiuqui.olympiads.ombudsman.ombudsmen.omelettes.ominously.omissible.omissions.ommatidia.omniarchs.omnibuses.omnirange.omnivores.omophagia.omophagic.onanistic.oncidiums.oncogenes.oncogenic.oncologic.oncomings.oncovirus.ondograms.onenesses.onerously.onionskin.onloading.onlookers.onlooking.onomastic.onrushing.onslaught.ontically.ontogenic.ontologic.oogametes.oogeneses.oogenesis.oogenetic.oogoniums.oolachans.oological.oologists.oompahing.oospheres.opacified.opacifier.opacifies.opacities.opalesced.opalesces.openworks.operagoer.operantly.operatics.operating.operation.operative.operators.operceles.opercular.opercules.operculum.operettas.operosely.ophidians.ophiolite.ophiology.ophiuroid.opinioned.opiumisms.oppilated.oppilates.opponency.opponents.opportune.opposable.opposites.oppressed.oppresses.oppressor.oppugnant.oppugners.oppugning.opsonized.opsonizes.optatives.optically.opticians.opticists.optimally.optimised.optimises.optimisms.optimists.optimized.optimizer.optimizes.optionals.optionees.optioning.optometer.optometry.opulences.opulently.opuscular.opuscules.opusculum.oralities.orangeade.orangerie.orangiest.orangutan.oratories.oratorios.oratrices.orbicular.orchestra.ordainers.ordaining.orderable.orderless.orderlies.ordinally.ordinance.ordinands.ordinates.ordnances.oreodonts.organdies.organelle.organised.organiser.organises.organisms.organists.organized.organizer.organizes.organosol.organzine.orgasming.orgiastic.oribatids.orientals.orientate.orienteer.orienters.orienting.orificial.oriflamme.origanums.originals.originate.orinasals.ornaments.orneriest.ornithine.ornithoid.orogenies.orography.orologies.orologist.orometers.orphanage.orphaning.orphreyed.orpiments.orrisroot.orthicons.orthodoxy.orthoepic.orthopter.orthoptic.orthotics.orthotist.oscillate.oscitance.oscitancy.osculated.osculates.osmeteria.osmically.osmometer.osmometry.osmundine.osnaburgs.ossatures.osseously.ossicular.ossifiers.ossifrage.ossifying.ossuaries.ostensive.ostensory.osteocyte.osteology.osteomata.osteopath.osteotome.osteotomy.ostiaries.ostinatos.ostomates.ostosises.ostracise.ostracism.ostracize.ostracode.ostracods.ostriches.otherness.otherwise.otocystic.otolithic.otologies.otologist.otoplasty.otoscopes.oubliette.ouistitis.ourselves.outacting.outadding.outargued.outargues.outasking.outbacker.outbaking.outbarked.outbawled.outbeamed.outbegged.outbidden.outbidder.outblazed.outblazes.outbleats.outblooms.outbluffs.outboards.outboasts.outbought.outboxing.outbraved.outbraves.outbrawls.outbrazen.outbreaks.outbreeds.outbribed.outbribes.outbuilds.outbulged.outbulges.outbulked.outburned.outbursts.outbuying.outcapers.outcastes.outcaught.outcavils.outcharge.outcharms.outcheats.outchided.outchides.outcities.outclimbs.outcooked.outcounts.outcrawls.outcrowds.outcrowed.outcrying.outcursed.outcurses.outcurves.outdanced.outdances.outdaring.outdating.outdazzle.outdebate.outdesign.outdodged.outdodges.outdoorsy.outdreams.outdreamt.outdrinks.outdriven.outdrives.outdueled.outearned.outeating.outechoed.outechoes.outercoat.outermost.outerwear.outfabled.outfables.outfacing.outfasted.outfawned.outfeasts.outfenced.outfences.outfields.outfights.outfigure.outfiring.outfished.outfishes.outfitted.outfitter.outflanks.outfloats.outflowed.outflying.outfooled.outfooted.outfought.outfoxing.outfrowns.outfumble.outgained.outgallop.outgamble.outgassed.outgasses.outgazing.outgiving.outglared.outglares.outgleams.outglowed.outgnawed.outgoings.outgroups.outgrowth.outguided.outguides.outgunned.outgushed.outgushes.outhandle.outhomers.outhouses.outhowled.outhumors.outhunted.outhustle.outjinxed.outjinxes.outjockey.outjuggle.outjumped.outjutted.outkicked.outkilled.outkissed.outkisses.outlander.outlasted.outlaughs.outlawing.outlaying.outleaped.outlearns.outlearnt.outliners.outlining.outlivers.outliving.outloving.outmanned.outmaster.outmoding.outmoving.outmuscle.outnumber.outoffice.outpacing.outpaints.outpassed.outpasses.outpeople.outpitied.outpities.outplaced.outplaces.outplayed.outpoints.outpolled.outpoured.outpourer.outpowers.outprayed.outpreach.outpreens.outpriced.outprices.outpulled.outpupils.outpursue.outpushed.outpushes.outputted.outquoted.outquotes.outracing.outraging.outraised.outraises.outrances.outranged.outranges.outranked.outrating.outraving.outreason.outreckon.outridden.outriders.outriding.outrigged.outrigger.outrivals.outroared.outrocked.outrolled.outrooted.outrowing.outrunner.outrushed.outrushes.outsailed.outsavors.outsaying.outscheme.outscolds.outscoops.outscored.outscores.outscorns.outscream.outseeing.outserved.outserves.outshamed.outshames.outshined.outshines.outshoots.outshouts.outsiders.outsights.outsinned.outskated.outskates.outskirts.outsleeps.outslicks.outsmarts.outsmells.outsmiled.outsmiles.outsmoked.outsmokes.outsnored.outsnores.outsoared.outsource.outspeaks.outspeeds.outspells.outspends.outspoken.outsprang.outspread.outspring.outsprint.outsprung.outstands.outstared.outstares.outstarts.outstated.outstates.outstayed.outsteers.outstride.outstrips.outstrive.outstrode.outstroke.outstrove.outstunts.outsulked.outswears.outsweeps.outswings.outtalked.outtasked.outthanks.outthieve.outthinks.outthrobs.outthrown.outthrows.outthrust.outtowers.outtraded.outtrades.outtravel.outtricks.outtrumps.outvalued.outvalues.outvaunts.outvoiced.outvoices.outvoting.outwaited.outwalked.outwardly.outwarred.outwashes.outwasted.outwastes.outweighs.outwhirls.outwiling.outwilled.outwinded.outwished.outwishes.outwitted.outworked.outworker.outwrites.outyelled.outyelped.outyields.ovalbumin.ovalities.ovarioles.ovational.ovenbirds.ovenproof.ovenwares.overacted.overacute.overalert.overalled.overarmed.overawing.overbaked.overbakes.overbears.overbeats.overbills.overbites.overblown.overblows.overboard.overboils.overbooks.overborne.overbrake.overbreed.overbrief.overbroad.overbuild.overbuilt.overburns.overburnt.overcalls.overcasts.overcheap.overchill.overcivil.overclaim.overclass.overclean.overclear.overclose.overcloud.overcoach.overcoats.overcolor.overcomer.overcomes.overcooks.overcools.overcount.overcrams.overcrops.overcrowd.overcured.overcures.overdared.overdares.overdecks.overdoers.overdoing.overdosed.overdoses.overdraft.overdrank.overdrawn.overdraws.overdress.overdried.overdries.overdrink.overdrive.overdrove.overdrunk.overdyers.overeager.overeaten.overeater.overedits.overemote.overexert.overfavor.overfears.overfeeds.overfills.overflies.overflood.overflown.overflows.overfocus.overfrank.overfunds.overfussy.overgilds.overgirds.overglaze.overgoads.overgrade.overgraze.overgreat.overgrown.overgrows.overhands.overhangs.overhasty.overhated.overhates.overhauls.overheads.overheaps.overheard.overhears.overheats.overholds.overhonor.overhoped.overhopes.overhunts.overhyped.overhypes.overissue.overjoyed.overkills.overlabor.overladed.overladen.overlades.overlands.overlarge.overleaps.overleapt.overlearn.overlends.overlight.overlived.overlives.overloads.overlooks.overlords.overloved.overloves.overlying.overmatch.overmelts.overmilks.overmined.overmines.overmixed.overmixes.overnight.overpacks.overpedal.overplaid.overplans.overplant.overplays.overplied.overplies.overplots.overpower.overprice.overprint.overprize.overproof.overproud.overpumps.overquick.overrated.overrates.overreach.overreact.overrides.overrigid.overroast.overruffs.overruled.overrules.oversales.oversalts.oversauce.oversaved.oversaves.overscale.overscore.overseeds.overseers.oversells.oversewed.oversexed.overshade.oversharp.overshirt.overshoes.overshoot.overshots.oversides.oversight.oversized.oversizes.overskirt.oversleep.overslept.overslips.overslipt.oversmoke.oversoaks.oversouls.overspend.overspent.overspice.overspill.overspilt.overspins.overstaff.overstate.overstays.oversteer.oversteps.overstirs.overstock.overstory.overstrew.overstudy.overstuff.oversweet.overswing.overswung.overtaken.overtakes.overtalks.overtasks.overtaxed.overtaxes.overteach.overthick.overthink.overthrew.overthrow.overtight.overtimed.overtimes.overtimid.overtired.overtires.overtness.overtoils.overtones.overtrade.overtrain.overtreat.overtrick.overtrims.overtrump.overtured.overtures.overturns.overurged.overurges.overusing.overvalue.overviews.overvivid.overvoted.overvotes.overwarms.overwatch.overwater.overwears.overweary.overweens.overweigh.overwhelm.overwinds.overwords.overworks.overwound.overwrite.overwrote.overzeals.oviductal.oviferous.oviparity.oviparous.oviposits.oviraptor.ovotestes.ovotestis.ovulating.ovulation.ovulatory.ownership.oxacillin.oxalating.oxazepams.oxidating.oxidation.oxidative.oxidisers.oxidising.oxidizers.oxidizing.oximeters.oxpeckers.oxtongues.oxycodone.oxygenase.oxygenate.oxygenize.oxygenous.oxymorons.oxyphiles.oxyphilic.oxytocics.oxytocins.oysterers.oystering.oysterman.oystermen.ozocerite.ozokerite.ozonating.ozonation.ozonising.ozonizers.ozonizing.pacemaker.pachadoms.pachalics.pachinkos.pachoulis.pachyderm.pachytene.pacifical.pacifiers.pacifisms.pacifists.pacifying.packagers.packaging.packboard.packeting.packhorse.packsacks.packwaxes.paddlings.paddocked.paddywack.padishahs.padlocked.padronism.paduasoys.paeanisms.pagandoms.paganised.paganises.paganisms.paganists.paganized.paganizer.paganizes.pageantry.paginated.paginates.pagurians.pahoehoes.paillards.paillasse.paillette.painfully.paintable.paintball.painterly.paintiest.paintings.paintwork.palaestra.palankeen.palanquin.palatable.palatably.palatally.palatines.palavered.palaverer.palefaces.paleocene.paleogene.paleolith.paleology.paleosols.paleozoic.palestrae.palestral.palestras.palinodes.palisaded.palisades.palladium.palladous.palleting.palletise.palletize.pallettes.palliasse.palliated.palliates.palliator.palmately.palmation.palmettes.palmettos.palmister.palmistry.palmitate.palmitins.palominos.paloverde.palpating.palpation.palpators.palpatory.palpebrae.palpebral.palpebras.palpitant.palpitate.palsgrave.palsylike.palterers.paltering.paltriest.paludisms.pamperers.pampering.pamphlets.panatelas.panatella.panbroils.pancaking.pancettas.panchaxes.pancratia.pancratic.pandemics.panderers.pandering.pandurate.panegyric.panelings.panelists.panelized.panelling.panetelas.panetella.panettone.panettoni.panfishes.panfrying.pangolins.panhandle.panically.panickier.panicking.panjandra.panmictic.panmixias.panniered.pannikins.panoplied.panoplies.panoramas.panoramic.pansexual.pansophic.pantalets.pantalone.pantaloon.pantdress.pantheism.pantheist.pantheons.pantihose.pantingly.pantoffle.pantofles.pantomime.pantropic.pantryman.pantrymen.pantsuits.pantyhose.paparazzi.paparazzo.paperback.paperbark.paperboys.paperclip.papergirl.paperless.paperwork.papeterie.papillary.papillate.papilloma.papillons.papillose.papillote.pappadams.pappooses.papyruses.parablast.parabolas.parabolic.parachors.parachute.paraclete.paracrine.paradigms.paradisal.paradises.paradores.paradoses.paradoxes.paradrops.paraffine.paraffins.parafoils.paraforms.paraglide.paragoges.paragoned.paragraph.parakeets.parakites.paralegal.parallels.paralysed.paralyses.paralysis.paralytic.paralyzed.paralyzer.paralyzes.paramatta.paramecia.paramedic.paramenta.paraments.parameter.paramorph.paramount.paramours.paramylum.paranoeas.paranoiac.paranoias.paranoics.paranoids.paranymph.parapeted.parapodia.paraquats.paraquets.parasails.parasangs.parashahs.parashoth.parasites.parasitic.parasoled.parataxes.parataxis.parathion.paratroop.paravanes.parawings.parazoans.parbaking.parboiled.parbuckle.parceling.parcelled.parcenary.parceners.parcheesi.parchesis.parchisis.parchment.parcloses.pardoners.pardoning.parecisms.paregoric.parentage.parenting.parfleche.pargeting.pargetted.pargyline.parhelion.parietals.parkettes.parklands.parlances.parlaying.parleyers.parleying.parlously.parmesans.parochial.parodical.parodists.parodying.parolable.paronymic.paroquets.parosmias.parotitic.parotitis.parotoids.paroxysms.parqueted.parquetry.parrakeet.parricide.parridges.parrokets.parroters.parroting.parsimony.parsleyed.parsonage.parsonish.partakers.partaking.parterres.partially.particles.partisans.partition.partitive.partizans.partnered.partridge.partygoer.parvenues.parvoline.parvolins.pashadoms.pashalics.pashaliks.pashminas.pasodoble.passadoes.passaging.passalong.passbands.passbooks.passenger.passepied.passerine.passersby.passingly.passional.passivate.passively.passivism.passivist.passivity.passovers.passports.passwords.pastalike.pastedown.pastelist.pasticcio.pastiches.pastilles.pastiness.pastitsio.pastitsos.pastorale.pastorali.pastorals.pastorate.pastoring.pastorium.pastramis.pastromis.pasturage.pasturers.pasturing.patchable.patchiest.patchouli.patchouly.patchwork.patellate.patencies.patentees.patenting.patentors.paternity.pathogene.pathogens.pathogeny.pathology.patiences.patienter.patiently.patinated.patinates.patinized.patinizes.patissier.patnesses.patooties.patriarch.patriated.patriates.patrician.patricide.patriliny.patrimony.patriotic.patristic.patrolled.patroller.patrolman.patrolmen.patronage.patroness.patronise.patronize.pattamars.patterers.pattering.patterned.pattypans.paucities.pauldrons.paulownia.paunchier.paupering.pauperism.pauperize.paupiette.pavements.pavilions.pavillons.pawkiness.pawnshops.paychecks.paygrades.paymaster.peaceable.peaceably.peaceniks.peacetime.peachblow.peachiest.peacocked.pearliest.pearlites.pearlitic.pearlized.pearmains.peartness.pearwoods.peasantry.peasecods.peasouper.pebbliest.peccantly.peccaries.peckishly.pecorinos.pectinate.pectinous.pectizing.pectorals.peculated.peculates.peculator.peculiars.pecuniary.pedagogic.pedagogue.pedalfers.pedaliers.pedallers.pedalling.pederasts.pederasty.pedestals.pediatric.pedicular.pedicured.pedicures.pedigreed.pedigrees.pediments.pedipalps.pedlaries.pedleries.pedocalic.pedogenic.pedologic.pedometer.pedophile.pedorthic.peduncled.peduncles.peekaboos.peekapoos.peepholes.peepshows.peeresses.peesweeps.peetweets.peevishly.pegboards.peglegged.pegmatite.peignoirs.pelecypod.pelerines.pellagras.pellagrin.pelleting.pelletise.pelletize.pellicles.pellitory.pellmells.peloruses.peltately.peltation.peltering.pemmicans.pemolines.pemphigus.pemphixes.penalised.penalises.penalized.penalizes.penalties.penancing.penchants.pencilers.penciling.pencilled.penciller.pendantly.pendently.pendragon.pendulous.pendulums.peneplain.peneplane.penetrant.penetrate.penholder.peninsula.penitence.penitents.penknives.penlights.penniless.pennoncel.pennywise.pennywort.penoncels.penpoints.pensioned.pensioner.pensiones.pensively.penstemon.penstocks.pentacles.pentagons.pentagram.pentamery.pentangle.pentanols.pentarchs.pentarchy.penthouse.pentosans.pentoside.pentoxide.penuchles.penuckles.penultima.penumbrae.penumbral.penumbras.penurious.peperomia.peperonis.peponidas.peponiums.pepperbox.pepperers.peppering.pepperoni.peppiness.pepsinate.peptalked.peptidase.peptizers.peptizing.peptonize.perborate.percaline.perceived.perceiver.perceives.percental.perchance.percolate.percussed.percusses.percussor.perdition.perduring.peregrine.peregrins.pereiopod.perennate.perennial.pereopods.perfectas.perfected.perfecter.perfectly.perfectos.perfervid.perfidies.perforate.performed.performer.perfumers.perfumery.perfuming.perfusate.perfusing.perfusion.perfusive.perhapses.perianths.periapses.periapsis.periblems.pericarps.pericopae.pericopal.pericopes.pericopic.pericycle.periderms.peridotic.perihelia.perikarya.perilling.perilunes.perilymph.perimeter.perimetry.perimorph.perimysia.perinatal.periodate.periodids.periostea.peripatus.peripetia.periphery.periplasm.periplast.peripters.perisarcs.periscope.perishing.peristome.peristyle.peritonea.peritrich.perjurers.perjuries.perjuring.perkiness.permalloy.permanent.permeable.permeably.permeance.permeases.permeated.permeates.permeator.permitted.permittee.permitter.permuting.perniones.perorally.perorated.perorates.perorator.peroxided.peroxides.peroxidic.perpended.perpetual.perplexed.perplexer.perplexes.persecute.persevere.persimmon.persisted.persister.personage.personals.personate.personify.personnel.perspexes.perspired.perspires.persuaded.persuader.persuades.pertained.pertinent.perturbed.perturber.pertussal.pertusses.pertussis.perusable.pervaders.pervading.pervasion.pervasive.perverted.perverter.peskiness.pessaries.pessimism.pessimist.pesterers.pestering.pestholes.pesthouse.pesticide.pestilent.petabytes.petahertz.petallike.petasoses.petasuses.petechiae.petechial.petiolate.petiolule.petitions.petnapers.petnaping.petnapped.petnapper.petrified.petrifier.petrifies.petrogeny.petroleum.petrology.petronels.petticoat.pettifogs.pettiness.pettishly.pettitoes.petulance.petulancy.petuntses.petuntzes.pewholder.pewterers.phagedena.phagocyte.phagosome.phalangal.phalanger.phalanges.phalanxes.phalarope.phallisms.phallists.phalluses.phantasma.phantasms.phantasts.pharaonic.pharisaic.pharisees.pharmings.pharyngal.pharynges.pharynxes.phasedown.phaseouts.pheasants.phellogen.phelonion.phenacite.phenakite.phenazine.phenazins.phenetics.phenetole.phenetols.phenocopy.phenolate.phenolics.phenology.phenomena.phenotype.phenoxide.phenylene.phenytoin.pheromone.philabegs.philander.philately.philibegs.philippic.philistia.philogyny.philology.philomela.philomels.philtered.philtring.phlebitic.phlebitis.phlegmier.phlorizin.phlyctena.phoebuses.phoenixes.phonathon.phonating.phonation.phonemics.phonetics.phonetist.phoneying.phoniness.phonogram.phonolite.phonology.phonotype.phonotypy.phoresies.phoronids.phosgenes.phosphate.phosphene.phosphide.phosphids.phosphine.phosphins.phosphite.phosphore.phosphori.phosphors.photocell.photocopy.photogene.photogram.photolyze.photomaps.photomask.photonics.photopias.photoplay.photoscan.photosets.photostat.phototaxy.phototube.phototype.phrasally.phrasings.phratries.phreakers.phreaking.phrenetic.phrenitis.phrensied.phrensies.phthalate.phthalein.phthalins.phthisics.phycology.phyletics.phyllites.phyllitic.phyllodes.phyllodia.phylloids.phyllomes.phyllomic.phyllopod.phylogeny.physiatry.physicals.physician.physicist.physicked.physiqued.physiques.phytogeny.phytolith.phytology.phytotron.pianistic.piassabas.piassavas.picadillo.picadores.picaninny.picaroons.picayunes.picholine.pickaback.pickadils.pickaroon.pickaxing.pickeered.pickerels.picketers.picketing.pickiness.picklocks.pickproof.pickthank.pickwicks.piclorams.picnicked.picnicker.picofarad.picograms.picolines.picometer.picometre.picomoles.picowaved.picowaves.pictogram.pictorial.picturing.picturize.pidginize.piecemeal.piecewise.piecework.piecrusts.piedforts.piedmonts.pieplants.piercings.pieridine.pierogies.pietistic.pigeonite.pigfishes.piggeries.pigginess.piggishly.piggyback.pigheaded.pigmented.pignolias.pigsticks.pigtailed.pikeperch.pikestaff.pilasters.pilchards.pileworts.pilferage.pilferers.pilfering.pilgarlic.pillagers.pillaging.pillaring.pillboxes.pilloried.pillories.pillowing.pilonidal.pilotages.pilotfish.pilotings.pilotless.pilseners.pimientos.pimpernel.pimpliest.pinaceous.pinafored.pinafores.pinasters.pinballed.pinchbeck.pinchbugs.pinchcock.pinchecks.pineapple.pinecones.pinedrops.pinelands.pinewoods.pinfishes.pinfolded.pinheaded.pinioning.pinkening.pinkroots.pinnacled.pinnacles.pinnately.pinnation.pinnipeds.pinnulate.pinochles.pinocytic.pinpoints.pinpricks.pinschers.pinsetter.pinstripe.pintadoes.pintailed.pintsized.pinwheels.pinwrench.pioneered.piosities.piousness.pipelined.pipelines.piperines.piperonal.pipestems.pipestone.pipetting.pipistrel.pipsqueak.piquances.piquantly.piracetam.pirarucus.piratical.piroplasm.pirouette.piscaries.piscators.piscatory.pisciform.piscivore.pishogues.pisiforms.pisolites.pisoliths.pisolitic pistaches.pistachio.pistareen.pistoleer.pistolero.pistolier.pistoling.pistolled.pitahayas.pitchfork.pitchiest.pitchouts.pitchpole.piteously.pithecoid.pithiness.pitifully pittances.pittering.pituitary.pityingly.pivotable.pivotally.pixilated.pizzalike.pizzazzes.pizzelles.pizzerias.pizzicati.pizzicato.placarded.placaters.placating.placation.placative.placatory.placeable.placeboes.placekick.placeless.placement.placentae.placental.placentas.placidity.placoderm.plainness.plainsman.plainsmen.plainsong.plaintext.plaintful.plaintiff.plaintive.plaisters.plaitings.planarian.planarias.planarity.planation.planchets.planeload.planeness.planeside.planetary.planetoid.planforms.plangency.planished.planisher.planishes.plankings.plankters.planktons.plannings.planosols.plantable.plantains.plantings.plantlets.plantlike.plantsman.plantsmen.planulate.planuloid.plashiest.plasmagel.plasmasol.plasmatic.plasmodia.plasmoids.plastered.plasterer.plasticky.plasticly.plastique.plastisol.plastrons.plastrums.plateaued.platefuls.platelets.platelike.platesful.platforms.platinize.platinoid.platinous.platinums.platitude.platonism.platooned.platyfish.plausible.plausibly.playacted.playactor.playbacks.playbills.playbooks.playdates.playdowns.playfield.playfully.playgirls.playgoers.playgoing.playgroup.playhouse.playlands.playlists.playmaker.playmates.playrooms.playsuits.plaything.playtimes.pleaching.pleadable.pleadings.pleasance.pleasured.pleasures.pleathers.pleatless.plebeians.plectrons.plectrums.pledgeors.pleiocene.pleiotaxy.plenaries.plenarily.plenished.plenishes.plenitude.plenteous.plentiful.pleonasms.plethoras.plethoric.pleuritic.pleustons.plexiform.pliancies.plicately.plication.plicature.plighters.plighting.plimsoles.plimsolls.pliofilms.pliotrons.plotlines.plottages.plottiest.ploughers.ploughing.plowbacks.plowheads.plowlands.plowshare.pluckiest.plumbable.plumbagos.plumbeous.plumbings.plumbisms.plumbness.plumelets.plumerias.plumipeds.plummeted.plummiest.plumosely.plumosity.plumpened.plumpness.plumulose.plundered.plunderer.plunkiest.pluralism.pluralist.plurality.pluralize.plushiest.plushness.plussages.plutocrat.plutonian.plutonism.plutonium.pneumatic.pneumonia.pneumonic.poachable.poachiest.pocketers.pocketful.pocketing.pockmarks.podagrous.podcasted.podcaster.podiatric.podomeres.podzolize.poechores.poenology.poetaster.poetesses.poeticism.poeticize.poetisers.poetising.poetizers.poetizing.pogroming.pogromist.poignance.poignancy.poinciana.pointable.pointedly.pointelle.pointiest.pointless.poisoners.poisoning.poisonous.pokeberry.pokeroots.pokeweeds.polarised.polarises.polarized.polarizer.polarizes.poleaxing.polemical.polemists.polemized.polemizes.polestars.policeman.policemen.polishers.polishing.politburo.politesse.political.politicks.politicly.politicos.pollarded.pollenate.pollening.pollinate.pollinium.pollinize.polliwogs.pollsters.polltaker.pollutant.polluters.polluting.pollution.pollutive.pollywogs.polonaise.poloniums.poltroons.polyamide.polyamine.polyandry.polyantha.polyanthi.polybasic.polybrids.polycarpy.polychete.polyester.polygalas.polygamic.polygenes.polygenic.polyglots.polygonal.polygonum.polygraph.polyhedra.polyimide.polymaths.polymathy.polymeric.polymorph.polymyxin.polyonymy.polyparia.polyphagy.polyphase.polyphone.polyphony.polypides.polyploid.polypneas.polypneic.polypores.polyptych.polypuses.polysemic.polysomes.polysomic.polythene.polytonal.polytypes.polytypic.polyurias.polyvinyl.polywater.polyzoans.polyzoary.pomaceous.pomanders.pommeling.pommelled.pompadour.pomposity.pompously.ponderers.pondering.ponderosa.ponderous.pondweeds.poniarded.pontonier.ponytails.poolhalls.poolrooms.poolsides.poontangs.poorhouse.poormouth.poortiths.popinjays.popliteal.popliteus.poppadoms.poppadums.poppycock.poppyhead.popsicles.populaces.popularly.populated.populates.populisms.populists.porbeagle.porcelain.porcupine.poriferal.poriferan.porkiness.porkwoods.poromeric.porphyria.porphyric.porphyrin.porpoised.porpoises.porridges.porringer.portables.portaging.portances.portapack.portapaks.portative.portended.porterage.porteress.portering.portfolio.portholes.porticoed.porticoes.portieres.portioned.portioner.portliest.portraits.portrayal.portrayed.portrayer.portulaca.positions.positiver.positives.positrons.posologic.possessed.possesses.possessor.possibler.postaxial.postboxes.postcards.postcavae.postcaval.postcavas.postcodes.postcrash.postdated.postdates.posterior.posterity.postfaces.postfault.postfixal.postfixed.postfixes.postforms.postgrads.posthaste.postheats.postholes.postiches.postilion.postiques.postludes.postmarks.postnasal.postnatal.postponed.postponer.postpones.postposed.postposes.postrider.postsyncs.postteens.posttests.posttrial.postulant.postulate.posturers.posturing.posturist.potassium.potations.potatobug.potboiled.potboiler.potencies.potentate.potential.pothering.potholder.pothouses.pothunter.potlaches.potometer.potpourri.potshards.potsherds.potstones.potterers.potteries.pottering.pottiness.pouchiest.poulardes.poulterer.poulticed.poultices.poultries.poundages.poundcake.pourboire.pouringly.pourpoint.poussette.poutingly.poverties.powderers.powdering.powerboat.powerless.powwowing.pozzolana.pozzolans.practical.practiced.practicer.practices.practicum.practised.practises.praecipes.praefects.praelects.praenomen.praesidia.pragmatic.prankster.pratfalls.pratingly.pratiques.prattlers.prattling.prayerful.preabsorb.preaccuse.preachers.preachier.preachify.preachily.preaching.preacting.preadapts.preadjust.preadmits.preadopts.preadults.preallots.prealters.preambled.preambles.prearming.preassign.preassure.preatomic.preattune.preaudits.prebaking.prebattle.prebendal.prebidden.prebilled.prebiotic.prebirths.preboards.preboiled.prebooked.prebought.prebudget.prebuilds.prebuying.precancel.precancer.precative.precatory.precaudal.precedent.preceding.precensor.precented.precentor.preceptor.precessed.precesses.precharge.prechecks.prechills.prechoose.prechosen.precieuse.precincts.precipice.precisely.precisest.precisian.precising.precision.precleans.preclears.precluded.precludes.precocial.precocity.precoding.precoital.preconize.precooked.precooker.precooled.precrease.precrisis.precuring.precursor.predacity.predating.predation.predatism.predators.predatory.predeaths.predebate.prededuct.predefine.predellas.predicant.predicate.predicted.predictor.predigest.predinner.predrills.predrying.preedited.preelects.preempted.preemptor.preenacts.preerects.preexcite.preexempt.preexilic.preexists.preexpose.prefabbed.prefacers.prefacing.prefading.prefatory.preferred.preferrer.prefeudal.prefigure.prefiling.prefilled prefiring.prefixing.prefixion.preflight.preformat.preformed.prefranks.prefreeze.prefrozen.prefunded.pregnable.pregnancy.pregrowth.preguided.preguides.prehandle.preharden.preheated.preheater.prehiring.prehumans.preimpose.preinform.preinsert.preinvite.prejudged.prejudger.prejudges.prejudice.prelacies.prelatism.prelature.prelaunch.prelected.prelector.prelimits.preloaded.prelocate.preluders.preludial.preluding.prelusion.prelusive.prelusory.premarket.premature.premedics.premerger.premiered.premieres.premising.premisses.premixing.premodern.premodify.premolars.premolded.premonish.prenomens.prenomina.prenotify.prenotion.prenticed.prentices.prenumber.preobtain.preoccupy.preoption.preordain.preorders.prepacked.preparers.preparing.prepasted.prepastes.prepaving.prepaying.preplaced.preplaces.prepotent.preppiest.prepriced.preprices.preprints.prepueblo.preputial.prerecord.prerectal.prereform.prereturn.prereview.prerinsed.prerinses.presagers.presaging.presbyope.presbyter.preschool.prescient.prescinds.prescored.prescores.prescreen.prescribe.prescript.preseason.preselect.presences.presented.presentee.presenter.presently.preserved.preserver.preserves.presettle.preshaped.preshapes.preshowed.preshrank.preshrink.preshrunk.president.presiders.presidial.presiding.presidios.presidium.presifted.presignal.presliced.preslices.presoaked.presolved.presolves.presorted.pressgang.pressings.pressmark.pressroom.pressruns.pressured.pressures.presswork.prestamps.presterna.prestiges.prestored.prestores.prestress.prestrike.presumers.presuming.presummit.presurvey.pretaping.pretasted.pretastes.pretences.pretended.pretender.pretenses.preterite.preterits.pretermit.pretested.pretexted.pretorial.pretorian.pretrains.pretravel.pretreats.pretrials.prettiest.prettying.prettyish.pretyping.preunions.preunited.preunites.prevailed.prevailer.prevalent.prevalued.prevalues.prevented.preventer.preverbal.previable.previewed.previewer.prevising.prevision.previsits.previsors.prewarmed.prewarned.prewashed.prewashes.preweighs.prewiring.preworked.priapisms.priapuses.priceable.priceless.prickiest.prickings.pricklier.prickling.priedieus.priedieux.priestess.priesting.priggisms.primacies.primality.primaries.primarily.primatals.primatial.primavera.primeness.primipara.primitive.primordia.primroses.princedom.princekin.princelet.princesse.principal.principia.principle.princocks.princoxes.printable.printhead.printings.printless.printouts.priorates.priorship.prismatic.prismoids.prisoners.prisoning.prissiest.pristanes.privacies.privateer.privately.privatest privation.privatise.privatism.privatist.privative.privatize.privilege.privities.proaction.proactive.probables.probating.probation.probative.probatory.probingly.probiotic.probities.proboscis.procaines.procambia.procedure.proceeded.proceeder.processed.processer.processes.processor.prochoice.prochurch.proclaims.proclises.proclisis.proclitic.proconsul.procreant.procreate.proctitis.proctodea.proctored.procurals.procurers.procuress.procuring.prodigals.prodigies.prodromal.prodromes.prodromic.producers.producing.proenzyme.proestrus.profamily.profanely.profaners.profaning.profanity.professed.professes.professor.proffered.profferer.profilers.profiling.profiteer.profiters.profiting.profluent.profounds.profusely.profusion.profusive.progenies.progerias.progestin.prognosed.prognoses.prognosis.programed.programer.programme.prohibits.projected.projector.prolactin.prolamine.prolamins.prolapsed.prolapses.prolapsus.prolately.prolepses.prolepsis.proleptic.proletary.prolixity.prologing.prologist.prologize.prologued.prologues.prolonged.prolonger.prolonges.prolusion.prolusory.promenade.prometric.prominent.promisees.promisers.promising.promisors.promodern.promoters.promoting.promotion.promotive.prompters.promptest.prompting.promulged.promulges.pronating.pronation.pronators.proneness.pronephra.pronghorn.pronounce.pronuclei.proofread.proofroom.propagate.propagule.propelled.propeller.propellor.propended.propenols.properdin.properest.prophages.prophases.prophasic.prophetic.propining.proponent.proponing.proposals.proposers.proposing.propositi.propounds.propretor.propriety.proptoses.proptosis.propylaea.propylene.propylite.prorating.proration.proreform.prorogate.prorogued.prorogues.prosaical.prosaisms.prosaists.prosateur.proscenia.proscribe.prosected.prosector.prosecute.proselyte.prosimian.prosiness.prosodies.prosodist.prosomata.prospects.prospered.prostates.prostatic.prostomia.prostrate.prostyles.protamine.protamins.proteases.protected.protecter.protector.protegees.proteides.proteinic.protended.proteomes.proteomic.proteoses.protested.protester.protestor.proteuses.prothalli.protheses.prothesis.prothetic.prothorax.protistan.protistic.protocols.protoderm.protonate.protonema.protopods.protostar.prototype.protoxide.protoxids.protozoal.protozoan.protozoic.protozoon.protracts.protruded.protrudes.proudness.proustite.provender.proverbed.provident.providers.providing.provinces.provision.provisoes.provisory.provokers.provoking.provolone.prowesses.proxemics.proximate.proximity.prudences.prudently.pruderies.prudishly.prunellas.prunelles.prunellos.prurience.pruriency.prussiate.psalmbook.psalmists.psalmodic.psalteria.psaltries.psammites.psammitic.psephites.psephitic.pseudonym.pseudopod.psilocins.psoraleas.psoralens.psoriases.psoriasis.psoriatic.psychical.psychoses.psychosis.psychotic.psylliums.ptarmigan.pteridine.pteropods.pterosaur.pterygial.pterygium.pterygoid.ptomaines.ptomainic.ptyalisms.puberties.pubescent.publicans.publicise.publicist.publicity.publicize.published.publisher.publishes.puckerers.puckerier.puckering.puckishly.puddliest.puddlings.pudencies.pudginess.puerilely.puerilism.puerility.puerperae.puerperal.puerperia.puffballs.pufferies.puffiness.puggarees.pugginess.pugilisms.pugilists.pugnacity.puissance.pulicides.pullbacks.pullovers.pullulate.pulmonary.pulmonate.pulmotors.pulpiness.pulpwoods.pulsatile.pulsating.pulsation.pulsative.pulsators.pulsatory.pulsejets.pulsojets.pulverise.pulverize.pulvillar.pulvillus.pulvinate.pumiceous.pumicites.pummeling.pummelled.punchball.puncheons.punchiest.punchless.punctated.punctilio.punctuate.punctured.punctures.pungently.punishers.punishing.punitions.punkiness.punningly.pupations.pupfishes.pupilages.pupillage.pupillary.puppeteer.puppydoms.puppyhood.puppylike.purchased.purchaser.purchases.pureblood.purebreds.purflings.purgation.purgative.purgatory.purgeable.purifiers.purifying.puritanic.purloined.purloiner.puromycin.purported.purposely.purposing.purposive.purpurins.purringly.purselike.pursiness.purslanes.pursuable.pursuance.purulence.purulency.purveying.purveyors.pushballs.pushcarts.pushchair.pushdowns.pushiness.pushingly.pushovers.pussycats.pussyfoot.pussytoes.pustulant.pustulate.pustulous.putonghua.putrefied.putrefier.putrefies.putridity.putschist.putterers.puttering.puttyless.puttylike.puttyroot.puzzledly.pycnidial.pycnidium.pyelogram.pygmyisms.pyloruses.pyodermas.pyodermic.pyorrheal.pyorrheas.pyorrhoea.pyralidid.pyramidal.pyramided.pyramidic.pyranoses.pyrenoids.pyrethrin.pyrethrum.pyridines.pyridoxal.pyridoxin.pyritical.pyroceram.pyrogenic.pyrolized.pyrolizes.pyrolyses.pyrolysis.pyrolytic.pyrolyzed.pyrolyzer.pyrolyzes.pyromancy.pyromania.pyrometer.pyrometry.pyronines.pyrosises.pyrostats.pyroxenes.pyroxenic.pyroxylin.pyruvates.pythoness.quaaludes.quackiest.quackisms.quadrants.quadrated.quadrates.quadratic.quadricep.quadrifid.quadrigae.quadrille.quadrivia.quadroons.quadruped.quadruple.quadruply.quaestors.quaggiest.quagmires.quaintest.quakiness.quakingly.qualified.qualifier.qualifies.qualities.qualmiest.quamashes.quandangs.quandongs.quantally.quantiles.quantized.quantizer.quantizes.quantongs.quarreled.quarreler.quarriers.quarrying.quarryman.quarrymen.quartered.quarterer.quarterly.quarterns.quartette.quartiers.quartiles.quartzite.quartzose.quartzous.quatorzes.quatrains.quaverers.quavering.quaysides.queasiest.queaziest.quebracho.queendoms.queenlier.queenship.queenside.queerness.quellable.quenchers.quenching.quenelles.quercetic.quercetin.querulous.questions.quetzales.quibblers.quibbling.quickened.quickener.quicklime.quickness.quicksand.quicksets.quickstep.quidnuncs.quiescent.quietened.quietener.quietisms.quietists.quietness.quietudes.quietuses.quillaias.quillajas.quillback.quillings.quillwork.quillwort.quiltings.quinaries.quinellas.quinidine.quinielas.quinoidal.quinoline.quinolins.quinolone.quinonoid.quintains.quintette.quintiles.quintuple.quintuply.quippiest.quipsters.quirkiest.quislings.quitclaim.quitrents.quittance.quiverers.quivering.quixotism.quizzical.quodlibet.quotation.quotidian.quotients.rabbeting.rabbinate.rabbinism.rabbiters.rabbiting.rabidness.racehorse.racemates.racemisms.racemized.racemizes.racetrack.racewalks.racheting.rachillae.racialism.racialist.racialize.racketeer.racketier.racketing.rackingly.rackworks.raclettes.raconteur.radiances.radiantly.radiately.radiating.radiation.radiative.radiators.radically.radicands.radicated.radicates.radicchio.radicular.radiogram.radiology.radionics.radwastes.raffinate.raffinose.raffishly.rafflesia.raggedest.raggedier.ragouting.ragpicker.railbirds.railbuses.railheads.railroads.rainbands.rainbirds.raincheck.raincoats.raindrops.rainfalls.raininess.rainmaker.rainproof.rainspout.rainstorm.rainwater.raiseable.rakehells.rakehelly.ralliform.rallyings.rallyists.rambutans.ramequins.ramifying.ramillies.rampagers.rampaging.rampantly.ramparted.ramrodded.ramshorns.ramtillas.rancheria.rancheros.ranchless.ranchlike.rancidity.rancorous.rancoured.randiness.randomize.rangeland.ranginess.ransacked.ransacker.ransomers.ransoming.rantingly.ranunculi.rapacious.rapeseeds.rapidness.rapparees.rappeling.rappelled.raptorial.rapturing.rapturous.rarefiers.rarefying.rareripes.rarifying.rascality raspberry.raspiness.raspingly.rataplans.ratcheted.ratemeter.ratepayer.ratfishes.raticides.ratifiers.ratifying.rationale.rationals.rationing.ratooners.ratooning.ratsbanes.rattailed.ratteners.rattening.rattlebox.rattlings.rattooned.raucities.raucously.raunchier.raunchily.rauwolfia.ravelings.ravellers.ravelling.ravelment.ravenings.ravenlike.ravigotes.ravigotte.ravishers.ravishing.rawhiding.rawnesses.razorback.razorbill.razzberry.reabsorbs.reacceded.reaccedes.reaccents.reaccepts.reacclaim.reaccused.reaccuses.reachable.reacquire.reactance.reactants.reactions.readapted.readdicts.readdress.readiness.readjusts.readopted.readorned.readymade.reaffirms.reaffixed.reaffixes.realigned.realisers.realising.realistic.realities.realizers.realizing.realtered.reanalyze.reanimate.reannexed.reannexes.reanoints.reaphooks.reappears.reapplied.reapplies.reappoint.reapprove.rearguard.rearguing.rearmouse.rearousal.rearoused.rearouses.rearrange.rearrests.rearwards.reascends.reascents.reasoners.reasoning.reassails.reasserts.reassigns.reassorts.reassumed.reassumes.reassured.reassures.reattacks.reattains.reattempt.reavailed.reavowing.reawakens.reawaking.rebaiting.rebalance.rebaptism.rebaptize.rebbetzin.rebeldoms.rebelling.rebellion.rebidding.rebilling.rebinding.reblended.rebloomed.reboarded.rebodying.reboiling.rebooking.rebooting.rebottled.rebottles.rebounded.rebounder.rebuffing.rebuilded.reburials.reburying.rebuttals.rebutters.rebutting.rebuttons.recallers.recalling.recamiers.recanters.recanting.recapping.recapture.recarpets.recarried.recarries.recasting.recatalog.recaution.receipted.receiptor.receivers.receiving.recements.recencies.recension.recensors.recentest.reception.receptive.receptors.recertify.recessing.recession.recessive.rechanged.rechanges.rechannel.recharged.recharger.recharges.recharted.recharter.rechauffe.rechecked.recherche.rechewing.rechooses.recipient.recircled.recircles.recisions.reckoners.reckoning.recladded.reclaimed.reclaimer.reclasped.recleaned.reclinate.recliners.reclining.reclothed.reclothes.reclusion.reclusive.recoaling.recoating.recocking.recognise.recognize.recoilers.recoiling.recoinage.recoining.recollect.recolored.recombine.recombing.recommend.recommits.recompile.recompose.recompute.reconcile.recondite.reconduct.reconfers.reconfine.reconfirm.reconnect.reconning.reconquer.reconsign.reconsole.reconsult.recontact.recontour.reconvene.reconvert.reconveys.reconvict.recooking.recopying.recorders.recording.recordist.recorking.recountal.recounted.recounter.recouping.recoupled.recouples.recourses.recovered.recoverer.recrating.recreance.recreancy.recreants.recreated.recreates.recrement.recrossed.recrosses.recrowned.recruited.recruiter.rectangle.rectified.rectifier.rectifies.rectitude.rectocele.rectorate.rectorial.rectories.rectrices.recumbent.recurrent.recurring.recursion.recursive.recurvate.recurving.recusancy.recusants.recutting.recyclers.recycling.redacting.redaction.redactors.redamaged.redamages.redargued.redargues.redbaited.redbaiter.redbreast.redbricks.reddening.redecided.redecides.redeemers.redeeming.redefeats.redefects.redefined.redefines.redefying.redeliver.redemands.redenying.redeploys.redeposit.redescend.redesigns.redevelop.redfishes.redheaded.redhorses.redialing.redialled.redictate.redigests.redigress.redingote.redipping.redirects.rediscuss.redisplay.redispose.redistill.redivided.redivides.redivivus.redivorce.redliners.redlining.rednecked.rednesses.redocking.redolence.redolency.redonning.redoubled.redoubler.redoubles.redounded.redrafted.redrawers.redrawing.redreamed.redressed.redresser.redresses.redressor.redrilled.redriving.redshanks.redshifts.redshirts.redstarts.redubbing.reducible.reducibly.reductant.reductase.reduction.reductive.reductors.redundant.reduviids.reearning.reechiest.reechoing.reedbirds.reedbucks.reedified.reedifies.reediness.reediting.reedition.reedlings.reeducate.reejected.reelected.reelevate.reembarks.reembrace.reemerged.reemerges.reemitted.reemploys.reenacted.reenactor.reendowed.reenforce.reengaged.reengages.reengrave.reenjoyed.reenlarge.reenlists.reenrolls.reenslave.reentered.reentrant.reentries.reerected.reevoking.reexamine.reexecute.reexhibit.reexplain.reexplore.reexports.reexposed.reexposes.reexpress.refalling.refashion.refastens.refecting.refection.refective.refectory.refeeding.refeeling.refelling.refencing.referable.reference.referenda.referents.referrals.referrers.referring.refigured.refigures.refilling.refilming.refilters.refinable.refinance.refinding.refitting.reflagged.reflating.reflation.reflected.reflector.reflexing.reflexion.reflexive.refloated.reflooded.reflowers.reflowing.refluence.refluxing.refocused.refocuses.refolding.reforests.reforging.reformate.reformats.reformers.reforming.reformism.reformist.refortify.refounded.refracted.refractor.refrained.refrainer.reframing.refreezes.refreshed.refreshen.refresher.refreshes.refronted.refueling.refuelled.refulgent.refunders.refunding.refurbish.refurnish.refusable.refusenik.refusniks.refutable.refutably.regainers.regaining.regalness.regardant.regardful.regarding.regathers.regauging.regearing.regelated.regelates.regencies.regicidal.regicides.regilding.regiments.regionals.regisseur.registers.registrar.reglazing.reglorify.reglossed.reglosses.reglowing.regoliths.regorging.regrading.regrafted.regranted.regrating.regreened.regreeted.regressed.regresses.regressor.regretful.regretted.regretter.regroomed.regrooved.regrooves.regrouped.regrowing.regrowths.regulable.regularly.regulated.regulates.regulator.reguluses.rehabbers.rehabbing.rehammers.rehandled.rehandles.rehanging.rehardens.rehashing.rehearing.rehearsal.rehearsed.rehearser.rehearses.reheaters.reheating.reheeling.rehemming.rehinging.rehoboams.rehousing.rehydrate.reignited.reignites.reimagine.reimaging.reimburse.reimmerse.reimplant.reimports.reimposed.reimposes.reincited.reincites.reindeers.reindexed.reindexes.reindicts.reinduced.reinduces.reinducts.reinfects.reinflame.reinflate.reinforce.reinforms.reinfused.reinfuses.reinhabit.reinjects.reinjured.reinjures.reinserts.reinspect.reinspire.reinstall.reinstate.reinsured.reinsurer.reinsures.reinvaded.reinvades.reinvents.reinvests.reinvited.reinvites.reinvoked.reinvokes.reinvolve.reissuers.reissuing.reiterate.rejackets.rejectees.rejecters.rejecting.rejection.rejective.rejectors.rejiggers.rejigging.rejoicers.rejoicing.rejoinder.rejoining.rejudging rejuggled.rejuggles.rejustify.rekindled.rekindles.reknitted.reknotted.relabeled.relacquer.relanding.relapsers.relapsing.relatable.relatedly.relations.relatives.relaunder.relaxable.relaxants.relaxedly.relearned.releasers.releasing.relegable.relegated.relegates.relending.relenting.reletters.reletting.relevance.relevancy.reliables.reliances.reliantly.relicense.reliction.relievers.relieving.relighted.religions.religiose.religious.relinking.reliquary.reliquefy.reliquiae.relishing.relisting.relivable.reloaders.reloading.reloaning.relocated.relocatee.relocates.relocking.relooking.reluctant.reluctate.relucting.relumined.relumines.remailing.remainder.remaining.remanding.remanence.remanning.remapping.remarkers.remarkets.remarking.remarques.remarried.remarries.remasters.rematched.rematches.remeasure.remediate.remedying.remeeting.remelting.remembers.remending.remerging.remigrate.reminders.remindful.reminding.reminisce.reminting.remission.remissive.remitment.remittals.remittent.remitters.remitting.remittors.remixture.remnantal.remodeled.remodeler.remoisten.remolades.remolding.remontant.remotions.remoulade.remounted.removable.removably.removedly.renailing.renascent.renatured.renatures.rencontre.renderers.rendering.rendition.rendzinas.renegaded.renegades.renegados.renesting.renewable.renewably.renewedly.renigging.renitence.renitency.renograms.renounced.renouncer.renounces.renovated.renovates.renovator.renowning.renumbers.reobjects.reobserve.reobtains.reoffered.reopening.reoperate.reopposed.reopposes.reordains.reordered.reorients.reoutfits.reoxidize.repackage.repacking.repainted.repairers.repairing.repairman.repairmen.repaneled.repapered.reparable.reparably.reparking.repartees.repassage.repassing.repasting.repatched.repatches.repattern.repayable.repayment.repealers.repealing.repeaters.repeating.repechage.repegging.repellant.repellent.repellers.repelling.repentant.repenters.repenting.repeopled.repeoples.reperking.repertory.repetends.rephrased.rephrases.repigment.repinning.replacers.replacing.replanned.replanted.replaster.replating.replaying.repleaded.repleader.repledged.repledges.replenish.repletely.repletion.replevied.replevies.replevins.replicase.replicate.replicons.replotted.replowing.replumbed.replunged.replunges.repolling.reportage.reporters.reporting.reposedly.reposeful.reposited.repossess.repotting.repouring.repousses.repowered.reprehend.represent.repressed.represser.represses.repressor.repricing.reprieval.reprieved.reprieves.reprimand.reprinted.reprinter.reprisals.reprising.reprobate.reprobing.reprocess.reproduce.reprogram.reprovals.reprovers.reproving.reptilian.reptilium.republics.republish.repudiate.repugnant.repugning.repulsers.repulsing.repulsion.repulsive.repumping.repurpose.repursued.repursues.reputable.reputably.reputedly.requalify.requested.requester.requestor.requirers.requiring.requisite.requitals.requiters.requiting.reracking.reradiate.reraising.rereading.rerebrace.rerecords.reredoses.rerelease.rereminds.reremouse.rerenting.rerepeats.rereviews.rerewards.rerigging.rerollers.rerolling.reroofing.rerouting.rerunning.resaddled.resaddles.resailing.resalable.resaluted.resalutes.resampled.resamples.rescaling.reschools.rescinded.rescinder.rescoring.rescreens.rescripts.rescuable.resculpts.resealing.reseasons.reseating.resecting.resection.resecured.resecures.reseeding.reseeking.reseizing.reseizure.reselects.resellers.reselling.resembled.resembler.resembles.resending.resentful.resenting.resentive.reserpine.reservers.reservice.reserving.reservist.reservoir.resetters.resetting.resettled.resettles.reshapers.reshaping.resharpen.reshaving.reshingle.reshining.reshipped.reshipper.reshoeing.reshowers.reshowing.reshuffle.residence.residency.residents.residuals.residuary.residuums.resifting.resighted.resigners.resigning.resilient.resilvers.resinated.resinates.resinlike.resinoids resistant.resisters.resisting.resistive.resistors.resitting.resituate.reslating.resmelted.resmooths.resoaking.resodding.resoftens.resolders.resoluble.resoluter.resolutes.resolvent.resolvers.resolving.resonance.resonants.resonated.resonates.resonator.resorbing.resorcins.resorters.resorting.resounded.resources.respacing.respading.respecify.respected.respecter.respelled.respiring.respiting.respliced.resplices.responded.responder.responses.responsum.respooled.respotted.resprayed.respreads.resprings.resprouts.restabled.restables.restacked.restaffed.restaging.restamped.restarted.restating.restation.restfully.restiform.restitute.restively.restocked.restoking.restorals.restorers.restoring.restrains.restraint.restretch restricts.restrikes.restrings.restriven.restrives.restrooms.restudied.restudies.restuffed.restyling.resubject.resubmits.resultant.resultful.resulting.resumable.resummons.resurface.resurgent.resurging.resurrect.resurveys.resuspend.reswallow.retacking.retackled.retackles.retagging.retailers.retailing.retailors.retainers.retaining.retaliate.retallied.retallies.retardant.retardate.retarders.retarding.retargets.retasting.reteaches.reteaming.retearing.retelling.retempers.retention.retentive.retestify.retesting.retexture.rethinker rethought.rethreads.retiarius.reticence.reticency.reticular.reticules.reticulum.retighten.retinenes.retinites.retinitis.retinoids.retinting.retinulae.retinular.retinulas.retirants.retiredly.retitling.retooling.retorsion.retorters.retorting.retortion.retotaled.retouched.retoucher.retouches.retracers.retracing.retracked.retracted.retractor.retrained.retrainee.retreaded.retreated.retreater.retrieval.retrieved.retriever.retrieves.retrimmed.retroacts.retrocede.retrodict.retrofire.retrofits retroflex.retronyms.retropack.retrousse.returnees.returners.returning.retwisted.reunified.reunifies.reuniters.reuniting.reuptakes.reusables.reutilize.reuttered.revaluate.revaluing.revampers.revamping.revanches.revarnish.revealers.revealing.reveilles.revelator.revellers.revelling.revelment.revelries.revelrous.revenants.revengers.revenging.revenuers.reverable.reverbing.reverence.reverends.reversals.reversely.reversers.reversing.reversion.revertant.reverters.reverting.revertive.revesting.revetment.revetting.revibrate.revictual.reviewals.reviewers.reviewing.reviolate.revisable.revisions.revisited.revivable.revocable.revocably.revoicing.revokable.revolters.revolting.revolvers.revolving.revulsion.revulsive.rewakened.rewarders.rewarding.rewarming.rewashing.rewearing.reweaving.rewedding.reweighed.rewelding.rewetting.rewidened.rewinders.rewinding.rewinning.rewording.reworking.rewrapped.rewriters.rewriting.rewritten.rewrought.rezeroing.rhabdomal.rhabdomes.rhachides.rhachises.rhamnoses.rhamnuses.rhapsodes.rhapsodic.rhatanies.rheobases.rheobasic.rheologic.rheometer.rheophile.rheostats.rheotaxes.rheotaxis.rhetorics.rheumatic.rheumatiz.rheumiest.rhigolene.rhinoceri.rhinology.rhizobial.rhizobium.rhizoidal.rhizomata.rhizopods.rhizotomy.rhodamine.rhodamins.rhodolite.rhodonite.rhodopsin.rhombical.rhomboids.rhombuses.rhonchial.rhotacism.rhumbaing.rhymeless.rhymester.rhyolites.rhyolitic.rhythmics.rhythmist.rhythmize.rhytidome.ribavirin.ribboning.ribosomal.ribosomes.ribozymal.ribozymes.ricebirds.ricercare.ricercari.ricercars.richening.richweeds.ricinuses.ricketier.rickracks.rickshaws.ricochets.riddances.riderless.ridership.ridgeback.ridgeline.ridgeling.ridgepole.ridgetops.ridglings.ridiculed.ridiculer ridicules.rieslings.rifampins.rifamycin.riffraffs.riflebird.rifleries.rigadoons.rigatonis.rigaudons.righteous.rightisms.rightists.rightmost.rightness.rightsize.rightward.rigidness.rigmarole.rigorisms.rigorists.rijstafel rillettes.rimesters.ringbarks.ringbolts.ringbones.ringdoves.ringingly.ringleted.ringnecks.ringsides.ringtails.ringtones.ringworms.riotously.riposting.rippingly.rippliest.riprapped.ripsawing.riskiness.ritonavir ritualism.ritualist.ritualize.ritziness.rivalling.rivalries.rivalrous.riverbank.riverbeds.riverboat.riverhead.riverless.riverlike.riverside.riverward.riverweed.rivetting roadblock.roadhouse.roadkills.roadshows.roadsides.roadstead.roadsters.roadworks.roaringly.robberies.roborants.robotisms.robotized.robotizes.robotries.robustest.rocailles.rocambole.rockabies.rockabyes.rockaways.rockbound.rockeries.rocketeer.rocketers.rocketing.rockfalls.rockhound.rockiness.rockingly.rocklings.rockroses.rockshaft.rockslide.rockweeds.rockworks.roentgens.rogations.rogueries.roguishly.roistered.roisterer.rolamites.rollaways.rollbacks.rollicked.rollovers.romancers.romancing.romanised.romanises.romanized.romanizes.romantics.romeldale.rompingly.rondelets.rondelles.rooflines.rooftrees.rookeries.roomettes.roominess.roommates.roorbachs.roorbacks.rootholds.rootiness.rootstalk.rootstock.rootworms.ropewalks.roqueting.roquettes.rosaceous.rosanilin.rosarians.rosariums.roseately.roseroots.roseslugs.rosewater.rosewoods.rosinweed.rostellar.rostellum.rostrally.rotameter.rotatable.rotations.rotatores.rotavirus.rotenones.rotiferal.rotiferan.rototills.rottenest.rotundity.roturiers.roughages.roughback.roughcast.roughened.roughhewn.roughhews.roughlegs.roughneck.roughness.roughshod.rouletted.roulettes.roundball.roundelay.roundheel.roundlets.roundness.roundsman.roundsmen.roundtrip.roundwood.roundworm.rousement.rousingly.rousseaus.routeways.routinely.routinism.routinist.routinize.rowdiness.rowdyisms.rowelling.royalisms.royalists.royalmast.royalties.roystered.rubbaboos.rubberier.rubbering.rubberize.rubbishes.rubbliest.rubboards.rubellite.rubescent.rubidiums.rubricate.rubrician.rucksacks.rudbeckia.ruddiness.ruddleman.ruddlemen.rudesbies.rudiments.rufescent.ruffianly.ruffliest.ruggedest.ruggedize.ruinating.ruination.ruinously.rulership.rumblings.ruminants.ruminated.ruminates.ruminator.rummagers.rummaging.rumouring.rumpliest.rumrunner.runabouts.runagates.runaround.runcinate.runniness.runrounds.runtiness.runtishly.rupturing.ruralised.ruralises.ruralisms.ruralists.ruralites.ruralized.ruralizes.rushlight.russeting.russified.russifies.rusticals.rusticate.rusticity.rustiness.rustproof.rutabagas.ruthenium.ruthfully.ruttiness.ruttishly.sabadilla.sabbatics.saberlike.sablefish.sabotaged.sabotages.saboteurs.saccharic.saccharin.sacculate.sackcloth.sacralize.sacrament.sacrarial.sacrarium.sacrifice.sacrilege.sacristan.saddening.saddlebag.saddlebow.sadnesses.safariing.safeguard.safelight.safetying.safetyman.safetymen.safflower.safranine.safranins.sagacious.sagamores.sagebrush.saggaring.saggering.sagittary.sagittate.sailboard.sailboats.sailcloth.sailmaker.sailplane.sainfoins.saintdoms.sainthood.saintlier.saintlike.saintship.salaaming.salacious.saladangs.salariats.salarying.salaryman.salarymen.saleratus.salerooms.salesgirl.saleslady.salesroom.salicines.saliences.saliently.salifying.salimeter.salimetry.salinized.salinizes salivated.salivates.salivator.sallowest.sallowing.sallowish.salmonids.salmonoid.salometer.salpiform.salpinges.salsifies.salsillas.saltation.saltatory.saltboxes saltchuck.saltiness.saltpeter.saltpetre.saltwater.saltworks.saltworts.salubrity.saluretic.salvagees.salvagers.salvaging.salvarsan.salvation.samaritan.samariums.samizdats.samphires.samplings.sanatoria.sanbenito.sanctions.sanctuary.sandaling.sandalled.sandaracs.sandbanks.sandblast.sandboxes.sandburrs.sandcrack.sandflies.sandglass.sandiness.sandlings.sandpaper.sandpeeps.sandpiles.sandpiper.sandshoes.sandsoaps.sandspurs.sandstone.sandstorm.sandworms.sandworts.sangarees.sangfroid.sanguines.sanidines.sanitaria.sanitated.sanitates.sanitised.sanitises.sanitized.sanitizer.sanitizes.sanitoria.sannyasin.sannyasis.sanserifs.santalols.santerias.santolina.santonica.santonins.sapanwood.sapheaded.saphenous.sapiences.sapiently.sapodilla.sapogenin.saponated.saponines.saponites.saporific.sapphires.sapphisms.sapphists.sappiness.sapraemia.sapremias.saprobial.saprolite.sapropels.saprozoic.sapsucker.sarabande.sarabands.sarcastic.sarcenets.sarcocarp.sarcology.sarcomata.sarcomere.sarcosome.sardining.sardiuses.sargassos.sargassum.sarmentum.sarodists.sarsenets.sartorial.sartorius.sashaying.saskatoon.sasquatch.sassabies.sassafras.sassiness.sasswoods.sassywood.satanical.satanisms.satanists.satcheled.satellite.satiating.satiation.satieties.satinette.satinpods.satinwood.satirical.satirised.satirises.satirists.satirized.satirizer.satirizes.satisfice.satisfied.satisfier.satisfies.satrapies.saturable.saturants.saturated.saturater.saturates.saturator.saturniid.saturnine.saturnism.satyrical.satyrlike.sauceboat.saucepans.saucepots.sauciness.sauntered.saunterer.sauropods.sauternes.sautoires.savagisms.savannahs.savoriest.savorless.savourers.savourier.savouries.savouring.savviness.sawfishes.sawhorses.sawtimber.saxifrage.saxitoxin.saxophone.sayonaras.scabbards.scabbiest.scabbling.scabietic.scabiosas.scablands.scaffolds.scagliola.scalation.scalawags.scaleless.scalelike.scalepans.scaletail.scaliness.scallawag.scallions.scalloped.scalloper.scallywag.scalogram.scampered.scamperer.scamsters.scandaled.scandiums.scannable.scannings.scansions.scantiest.scantling.scantness.scapegoat.scaphoids.scaphopod.scapolite.scapulars.scapulary.scarabaei.scaraboid.scarecrow.scaredest.scarehead.scarfpins.scarfskin.scarified.scarifier.scarifies.scariness scarpered.scarphing.scarriest.scatbacks.scatology.scattered.scatterer.scattiest.scavenged.scavenger.scavenges.scenarios.scenarist.sceneries.scentless.sceptered.sceptical.sceptring.schatchen.schedular.scheduled.scheduler.schedules.scheelite.schematic.schillers.schilling.schistose.schistous.schiziest.schizoids.schizonts.schizopod.schizzier.schlemiel.schlemihl.schlepped.schlieren.schlieric.schlumped.schmaltzy.schmalzes.schmattes.schmeared.schmeered.schmelzes.schmoosed.schmooses.schmoozed.schmoozer.schmoozes.schnapper.schnauzer.schnecken.schnitzel.schnorkel.schnorrer.schnozzes.schnozzle.scholarly.scholiast.scholiums.schoolbag.schoolboy.schooling.schoolkid.schoolman.schoolmen.schooners.schussers.schussing.schvartze.schwartze.sciaenids.sciaenoid.sciamachy.sciaticas.sciential.scientism.scientist.scientize.scimetars.scimitars.scimiters.scincoids.scintilla.sciolisms.sciolists.sciroccos.scirrhoid.scirrhous.scissions.scissored.scissures.sciurines.sclaffers.sclaffing.sclereids.sclerites.scleritic.scleritis.scleromas.sclerosal.sclerosed.scleroses.sclerosis.sclerotia.sclerotic.sclerotin.scofflaws.scoldings.scolecite.scoliomas.scolioses.scoliosis.scoliotic.scolloped.scombrids.scombroid.sconcheon.scooching.scoopable.scoopfuls.scoopsful.scootched.scootches.scopulate.scorbutic.scorchers.scorching.scorecard.scoreless.scorepads.scorified.scorifier.scorifies.scorpioid.scorpions.scotching.scotomata.scotophil.scotopias.scoundrel.scourgers.scourging.scourings.scouthers.scoutings.scowdered.scrabbled.scrabbler.scrabbles.scraggier.scraggily.scragging.scraiched.scraighed.scrambled.scrambler.scrambles.scramjets.scramming.scrannels.scrapbook.scrapheap.scrapings.scrappage.scrappers.scrappier.scrappily.scrapping.scrapples.scratched.scratcher.scratches.scrawlers.scrawlier.scrawling.scrawnier.screaking.screamers.screaming.screeched.screecher.screeches.screeding.screeners.screenful.screening.screwable.screwball.screwbean.screwiest.screwlike.screwworm.scribbled.scribbler.scribbles.scrieving.scrimmage.scrimpers.scrimpier.scrimpily.scrimping.scrimshaw.scripters.scripting.scripture.scrivener.scrofulas.scroggier.scrolling.scrooched.scrooches.scrooping.scrouging.scrounged.scrounger.scrounges.scrubbers.scrubbier.scrubbily.scrubbing.scrubland.scruffier.scruffily.scrummage.scrumming.scrunched.scrunches.scrunchie.scrupling.scrutable.scufflers.scuffling.scullions.sculpting.sculptors.sculpture.scultches.scumbling.scummiest.scuncheon.scungilli.scunnered.scuppaugs.scuppered.scurfiest.scurrying.scurviest.scutcheon.scutchers.scutching.scutellar.scutellum.scutiform.scuttered.scuttling.scutworks.scuzzball.scuzziest.seaboards.seacoasts.seacrafts.seadromes.seafarers.seafaring.seafloors.seafronts.seahorses.sealeries.sealifted.sealskins.seaminess.seamounts.seamsters.seapieces.seaplanes.seaquakes.searchers.searching.searingly.searobins.seascapes.seascouts.seashells.seashores.seasonals.seasoners.seasoning.seastrand.seatbacks.seatbelts.seatmates.seatrains.seatrouts.seatworks.seawaters.seaworthy.sebaceous.seborrhea.secaloses.secateurs.secerning.secession.secluding.seclusion.seclusive.secondary.seconders.seconding.secrecies.secretary.secretest.secreting.secretins.secretion.secretive.secretors.secretory.sectarian.sectaries.sectility.sectional.sectioned.sectorial.sectoring.secularly.securable.securance.sedations.sedatives.sedentary.sederunts.sediments.seditions.seditious.seducible.seduction.seductive.seedcakes.seedcases.seedeater.seediness.seedlings.seedstock.seedtimes.seemingly.seemliest.seeresses.seesawing.segmental.segmented.segregant.segregate.seicentos.seigneurs.seigneury.seigniors.seigniory.seismical.seismisms.selachian.seladangs.selamliks.selectees.selecting.selection.selective.selectman.selectmen.selectors.selenates.selenides.selenious.selenites.selenitic.seleniums.selenoses.selenosis.selfheals.selfhoods.selfishly.selfwards.sellotape.selvedged.selvedges.semainier.semanteme.semantics.semaphore.semblable.semblably.semblance.semeiotic.semesters.semestral.semiangle.semibreve.semicolon.semicomas.semicured.semideify.semidomed.semidomes.semidwarf.semierect.semifinal.semifluid.semigloss.semigroup.semihobos.semillons.semilunar.semimatte.semimetal.semimicro.semimoist.seminally.seminomad.seminomas.semiology.semiotics.semipious.semirigid.semiround.semirural.semisolid.semistiff.semisweet.semitists.semitonal.semitones.semitonic.semitruck.semiurban.semivowel.semiworks.semolinas.senescent.seneschal.senhorita.seniority.sennachie.sennights.senoritas.sensately.sensating.sensation.senseless.sensibler.sensibles.sensillae.sensillum.sensitise.sensitive.sensitize.sensorial.sensorium.sensually.sentenced.sentencer.sentences.sententia.sentience.sentiency.sentients.sentiment.sentinels.separable.separably.separated.separates.separator.sepiolite.septarian.septarium.septenary.septettes.septicity.septupled.septuples.septuplet.sepulcher.sepulchre.sepulture.sequacity.sequelize.sequenced.sequencer.sequences.sequester.sequestra.sequining.sequinned.sequiturs.seraglios.seraphims.serenaded.serenader.serenades.serenatas.serfhoods.sergeancy.sergeants.sergeanty.serialise.serialism.serialist.serialize.seriately.seriating.seriation.sericeous.serigraph.seriously.serjeants.serjeanty.sermonize.serologic.serotinal.serotines.serotonin.serotyped.serotypes.serpigoes.serranids.serranoid.serrating.serration.serrature.serriedly.serrulate.servicers.servicing.serviette.servilely.servility.servitors.servitude.sesamoids.sessility.sessional.sesspools.sesterces.sestertia.setaceous.setenants.setscrews.settlings.sevenfold.seventeen.seventhly.seventies.severable.severally.severalty.severance.sewerages.sewerless.sewerlike.sexennial.sexlessly.sexologic.sextarius.sextettes.sextupled.sextuples.sextuplet.sexuality.sexualize.sforzandi.sforzando.sforzatos.sgraffiti.sgraffito.shabbatot.shabbiest.shacklers.shackling.shadberry.shadblows.shadchans.shaddocks.shadeless.shadflies.shadiness.shadkhans.shadowbox.shadowers.shadowier.shadowily.shadowing.shadrachs.shaftings.shagbarks.shaggiest.shagreens.shakeable.shakedown.shakeouts.shakiness.shalelike.shalloons.shallowed.shallower.shallowly.shamanism.shamanist.shambling.shambolic.shameable.shameably.shamefast.shameless.shamisens.shammasim.shammosim.shammying.shamoying.shampooed.shampooer.shamrocks shanachie.shanghais.shantungs.shantyman.shantymen.shapeable.shapeless.shapelier.shapewear.shareable.sharecrop.shareware.sharifian.sharklike.sharkskin.sharpened.sharpener.sharpness.shashlick.shashliks.shattered.shatterer.shaveling.shavetail.sheaflike.shealings.shearings.shearlegs.shearling.sheatfish.sheathers.sheathing.sheddable.sheeniest.sheepcote.sheepcots.sheepdogs.sheepfold.sheephead.sheepskin.sheepwalk.sheerlegs.sheerness.sheetings.sheetless.sheetlike.sheetrock.sheikdoms.sheikhdom.sheldrake.shelducks.shelffuls.shelflike.shellacks.shellback.shellbark.shellfire.shellfish.shelliest.shellwork.sheltered shelterer.shelviest.shelvings.shepherds.sherberts.sherlocks.sherrises.shetlands.shewbread.shickered.shielders.shielding.shielings.shiftable.shiftiest.shiftless.shigellae.shigellas.shiitakes.shikarees.shikarred.shillalah.shillalas.shillelah.shillings.shimmered.shimmying.shinbones.shinglers.shingling.shinguard.shininess.shiningly.shinleafs.shinneyed.shinnying.shipboard.shipborne.shiploads.shipmates.shipments.shipowner.shippable.shippings.shipshape.shipsides.shipworms.shipwreck.shipyards.shirrings.shirtiest.shirtings.shirtless.shirttail.shitfaced.shitheads.shitlists.shitloads.shittiest.shivareed.shivarees.shiverers.shivering.shlemiehl.shlemiels.shlepping.shlimazel.shlockier.shlumping.shmaltzes.shmoozing.shnorrers.shoaliest.shockable.shoddiest.shoebills.shoeblack.shoeboxes.shoehorns.shoelaces.shoemaker.shoepacks.shoeshine.shoetrees.shogunate.shooflies.shootdown.shootings.shootouts.shopgirls.shophroth.shoplifts.shoppings.shoptalks.shorebird.shoreless.shoreline.shoreside.shoreward.shortages.shortcake.shortcuts.shortened.shortener.shortfall.shorthair.shorthand.shorthead.shorthorn.shortlist.shortness.shortstop.shortwave.shotholes.shoulders.shouldest.shovelers.shovelful.shoveling.shovelled.shoveller.showbizzy.showboats.showbread.showcased.showcases.showdowns.showerers.showering.showgirls.showiness.showmanly.showpiece.showplace.showrings.showrooms.showtimes.shredders.shredding.shrewdest.shrewdies.shrewlike.shrewmice.shriekers.shriekier.shrieking.shrieving.shrillest.shrilling.shrimpers.shrimpier.shrimping.shrinkage.shrinkers.shrinking.shriveled.shroffing.shrouding.shrubbery.shrubbier.shrubland.shrublike.shrugging.shtetlach.shtickier.shuckings.shuddered.shufflers.shuffling.shunnable.shunpiked.shunpiker.shunpikes.shutdowns.shuttered.shuttlers.shuttling.shvartzes.shwanpans.shylocked.shynesses.sialidans.sibilance.sibilancy.sibilants.sibilated.sibilates.sibilator.sibylline.siccative.sickeners.sickening.sickishly.sicklemia.sicklemic.sickliest.sicklying.sickrooms.sidebands.sideboard.sideburns.sidecheck.sidedness.sidedress.sidehills.sidekicks.sidelight.sidelined.sideliner.sidelines.sidepiece.siderites.sideritic.sideroses.siderosis.siderotic.sideshows.sideslips.sidespins.sidesteps.sideswipe.sidetrack.sidewalks.sidewalls.sidewards.sidlingly.sierozems.siffleurs.sightings.sightless.sightlier.sightline.sightseen.sightseer.sightsees.sigmoidal.signalers.signaling.signalise.signalize.signalled.signaller.signalman.signalmen.signatory.signature.signboard.signeting.significs.signified.signifier.signifies.signories.signorina.signorine.signposts.silencers.silencing.silentest.silicates.siliceous.silicides.silicious.siliciums.silicones.silicoses.silicosis.silicotic.siliculae.siliquose.siliquous.silkaline.silkiness.silkoline.silkweeds.silkworms.sillabubs.sillibubs.silliness.siloxanes.siltation.siltstone.siluroids.silverers.silvering.simarubas.simazines.similarly.simmering.simoleons.simoniacs.simonists.simonized.simonizes.simpatico.simperers.simpering.simpleton.simplexes.simplices.simplicia.simplisms.simplists.simulacra.simulacre.simulants.simulated.simulates.simulator.simulcast.sinapisms.sincerely.sincerest.sincerity.sincipita.sinciputs.sinecures.sinewless.sinfonias.singalong.singleton.singsongs.singsongy.singspiel.singulars.sinicized.sinicizes.sinistral.sinkholes.sinlessly.sinologue.sintering.sinuately.sinuating.sinuation.sinuosity.sinuously.sinusitis.sinuslike.sinusoids.siphonage.siphoning.sirenians.sirupiest.sirventes.sissified.sissiness.sissyness.sistering.sitarists.situating.situation.sitzmarks.sixpences.sixteenmo.sixteenth.sixtieths.sizarship.sjamboked.skaldship.skankiest.skedaddle.skeletons.skeltered.skepsises.skeptical.sketchers.sketchier.sketchily.sketching.sketchpad.skewbacks.skewbalds.skewering.skiagrams.skiagraph.skiascope.skiascopy.skibobber.skiddiest.skiddooed.skidooing.skidproof.skiffless.skiffling.skijorers.skijoring.skilfully.skillings.skimboard.skimmings.skimobile.skimpiest.skinflick.skinflint.skinheads.skinniest.skintight.skiorings.skipjacks.skiplanes.skippable.skippered.skirtings.skirtless.skirtlike.skittered.skivvying.sklenting.skreeghed.skreighed.skullcaps.skunkiest.skunkweed.skyboards.skybridge.skydivers.skydiving.skyjacked.skyjacker.skylarked.skylarker.skylights.skyrocket.skysurfed.skysurfer.skywriter.skywrites.slabbered.slackened.slackener.slackness.slaggiest.slalomers.slaloming.slalomist.slamdance.slammings.slandered.slanderer.slangiest.slanguage.slantways.slantwise.slaphappy.slapjacks.slapstick.slashings.slatelike.slathered.slatiness.slatterns.slattings.slaughter.slaverers.slaveries.slavering.slavishly.slavocrat.sleazebag.sleaziest.sleazoids.sleddings.sleekened.sleekiest.sleekness.sleepaway.sleepiest.sleepings.sleepless.sleeplike.sleepover.sleepwalk.sleepwear.sleetiest.sleevelet.sleighers.sleighing.slenderer.slenderly.sleuthing.sliceable.slickened.slickener.slickness.slickrock.slickster.slideways.slighters.slightest.slighting.slimeball.sliminess.slimpsier.slimsiest.slingback.slingshot.slinkiest.slipcased.slipcases.slipcover.slipdress.slipforms.slipknots.slipovers.slippages.slippered.slippiest.slipsheet.slipslops.slipsoles.slipwares.slithered.slittiest.sliverers.slivering.slivovitz.slobbered.slobberer.slobbiest.sloganeer.sloganize.slopingly.sloppiest.slopworks.sloshiest.slotbacks.slouchers.slouchier.slouchily.slouching.sloughier.sloughing.slowdowns.slowpokes.slowworms.slubbered.slubbings.sludgiest.slugabeds.slugfests.sluggards.sluiceway.slumbered.slumberer.slumbrous.slumlords.slummiest.slungshot.slurrying.slushiest.sluttiest.slynesses.smallages.smallness.smalltime.smaltines.smaltites.smaragdes.smarmiest.smartened.smartness.smartweed.smattered.smatterer.smearcase.smeariest.smectites.smectitic.smelliest.smidgeons.smiercase.smileless.smilingly.smirching.smirkiest.smockings.smoggiest.smokeable.smokejack.smokeless.smokelike.smokepots.smokiness.smoldered.smoochers.smooching.smooshing.smoothens.smoothers.smoothest.smoothies.smoothing.smothered.smotherer.smoulders.smudgiest.smugglers.smuggling.smutchier.smutching.smuttiest.snaffling.snaggiest.snaillike.snakebird.snakebite.snakefish.snakehead.snakelike.snakepits.snakeroot.snakeskin.snakeweed.snakiness.snapbacks.snappiest.snapshots.snapweeds.snarkiest.snarliest.snatchers.snatchier.snatching.snazziest.sneakered.sneakiest.sneeriest.sneeziest.snickered.snickerer.snideness.sniffable.sniffiest.snifflers.sniffling.sniggered.sniggerer.snigglers.sniggling.snippiest.snitchers.snitching.snivelers.sniveling.snivelled.sniveller.snobbiest.snobbisms.snookered.snoopiest.snootiest.snooziest.snoozling.snorkeled.snorkeler.snottiest.snoutiest.snowballs.snowbanks.snowbells.snowbelts.snowberry.snowbirds.snowblink.snowboard.snowbound.snowbrush.snowdrift.snowdrops.snowfalls.snowfield.snowflake.snowiness.snowlands.snowmaker.snowmelts.snowmolds.snowpacks.snowplows.snowscape.snowsheds.snowshoed.snowshoer.snowshoes.snowslide.snowstorm.snowsuits.snubbiest.snuffiest.snufflers.snufflier.snuffling.snuggerie.snuggling.soapbarks.soapberry.soapboxed.soapboxes.soapiness.soapstone.soapsudsy.soapworts.soaringly.sobbingly.soberized.soberizes.soberness.sobriquet.sociables.socialise.socialism.socialist.socialite.sociality.socialize.societies.sociogram.sociolect.sociology.sociopath.socketing.sodalists.sodalites.sodamides.sodbuster.soddening.sodomists.sodomites.sodomitic.sodomized.sodomizes.softbacks.softballs.softbound.softcover.softeners.softening.softgoods.softheads.softshell.softwares.softwoods.sogginess.soilborne.sojourned.sojourner.solanders.solanines.solarised.solarises.solarisms.solariums.solarized.solarizes.solations.solderers.soldering.soldiered.soldierly.solecised.solecises.solecisms.solecists.solecized.solecizes.solemnest.solemnify.solemnity.solemnize.solenodon.solenoids.soleplate.soleprint.solfatara.solfeggio.solferino.solicited solicitor.solidagos.solidness.soliloquy.solipsism.solipsist.soliquids.solitaire.solitudes.sollerets.soloistic.solonchak.solstices.solutions.solvating.solvation.solvently.sombreros.someplace.somersets.something.sometimes.somewhats.somewhere.sommelier.somnolent.sonatinas.songbirds.songbooks.songfests.songfully.songsmith.songsters.sonically.sonicated.sonicates.sonicator.sonneteer.sonneting.sonnetize.sonnetted.sonobuoys.sonograms.sonorants.sonovoxes.soochongs.soothfast.soothsaid.soothsays.sootiness.sopapilla.sophistic.sophistry.sophomore.soporific.soppiness.sopranino.sorbitols.sorcerers.sorceress.sorceries.sorcerous.soreheads.sororally.sororates.sorosises.sorptions.sorriness.sorrowers.sorrowful.sorrowing.sortieing.sortilege.sortition.sostenuti.sostenuto.sottishly soubrette.souchongs.souffleed.soukouses.soulfully.soulmates.soundable.soundings.soundless.soundness.soupspoon.sourballs.sourceful.sourdines.sourdough.sourwoods.soutaches.southeast.southerly.southerns.southings.southland.southpaws.southrons.southward.southwest.souvenirs.souvlakia.souvlakis.sovereign.sovietism.sovietize.sovkhozes.sowbreads.spaceband.spaceless.spaceport.spaceship.spacesuit.spacewalk.spaceward.spacially.spaciness.spackling.spadefish.spadefuls.spadework.spadilles.spaetzles.spaghetti.spagyrics.spaldeens.spallable.spalpeens.spanceled.spandexes.spandrels.spandrils.spanglier.spangling.spankings.spansules.spanworms.sparables.spareable.spareness.spareribs.sparingly.sparkiest.sparklers.sparklets.sparklier.sparkling.sparkplug.sparlings.sparriest.sparteine.spartinas.spasmodic.spatially.spattered.spatulate.speakable.speakeasy.speakings.spearfish.spearguns.spearhead.spearlike.spearmint.spearwort.specialer.specially.specialty.speciated.speciates.specifics.specified.specifier.specifies.specimens.speckling.spectacle.spectated.spectates.spectator.spectrums.speculate.speculums.speechify.speedball.speedboat.speediest.speedings.speedread.speedster.speedways.speedwell.speerings.spellbind.spelldown.spellings.spelunked.spelunker.spendable.spendiest.spermatia.spermatic.spermatid.spermines.sphagnous.sphagnums.sphenodon.sphenoids.spherical.spheriest.spheroids.spherular.spherules.sphincter.sphingids.spiccatos.spicebush.spiceless.spiceries.spiciness.spiculate.spiderier.spiderish.spiderweb.spiffiest.spiffying.spikelets.spikelike.spikenard.spikiness.spilikins.spillable.spillages.spillikin.spillover.spillways.spinaches.spindlers.spindlier.spindling.spindrift.spineless.spinelike.spinelles.spininess.spinnaker.spinneret.spinnings.spinosely.spinosity.spinsters.spinulose.spiracles.spiraling.spirality.spiralled spirillum.spiriting.spiritism.spiritist.spiritoso.spiritous.spiritual.spirituel.spirogyra.spirulina.spitballs.spitfires.spittoons.splashers.splashier.splashily.splashing.splatters.splatting.splayfeet.splayfoot.spleenful.spleenier.spleenish.splendent.splendors.splendour.splenetic.spleuchan.splinters.splintery.splinting.splitters splitting.splodging.sploshing.splotched.splotches.splurgers.splurgier.splurging.splutters.spluttery.spodosols.spodumene.spoilable.spoilages.spoilsman.spoilsmen.spokesman.spokesmen.spoliated.spoliates.spoliator.spondaics.spongiest.sponsions.sponsored.spontoons.spookiest.spoolings.spoonbill.spoonfuls.spooniest.spoonsful.sporangia.sporicide.sporocarp.sporocyst.sporogony.sporophyl.sporozoal.sporozoan.sporozoic.sporozoon.sportiest.sportsman.sportsmen.sporulate.spotlight.spottable.spottiest.spousally.spoutings.spoutless.spraddled.spraddles.spraining.sprattled.sprattles.sprawlers.sprawlier.sprawling.spreaders.spreading.spriggers.spriggier.sprigging.sprightly.sprigtail.springald.springals.springbok.springers.springier.springily.springing.springlet.sprinkled.sprinkler.sprinkles.sprinters.sprinting.spritsail.spritzers.spritzing.sprockets.sprouting.spruciest.spunkiest.spurgalls.spurriers.sputtered.sputterer.spymaster.squabbier.squabbled.squabbler.squabbles.squadding.squadrons.squalenes.squalider.squalidly.squallers.squallier.squalling.squallish.squamates.squamosal.squanders.squarrose.squashers.squashier.squashily.squashing.squatness.squatters.squattest.squattier.squattily.squatting.squawbush.squawfish.squawkers.squawking.squawroot.squeakers.squeakier.squeakily.squeaking.squealers.squealing.squeamish.squeegeed.squeegees.squeezers.squeezing.squegging.squelched.squelcher.squelches.squibbing.squidding.squiffier.squiggled.squiggles.squilgeed.squilgees.squinched.squinches.squinnied.squinnier.squinnies.squinters.squintest.squintier.squinting.squireens.squirmers.squirmier.squirming.squirrels.squirrely.squirters.squirting.squishier.squishing.squooshed.squooshes.squushing.stabbings.stabilise.stability.stabilize.stableboy.stableman.stablemen.stablings.staccatos.stackable.stackless.stageable.stagefuls.stagehand.stagelike.staggards.staggarts.staggered.staggerer.staggiest.staghound.staginess.stagnance.stagnancy.stagnated.stagnates.staidness.stainable.stainless.staircase.stairhead.stairless.stairlike.stairstep.stairways.stairwell.stakeouts.stalemate.staleness.stalkiest.stalkings.stalkless.stalklike.stallions.stalwarts.stalworth.staminate.stamineal.staminode.staminody.stammered.stammerer.stampeded.stampeder.stampedes.stampless.stanchers.stanchest.stanching.stanchion.standards.standaway.standdown.standfast.standings.standoffs.standouts.standpipe.stanhopes.stannites.stapedial.stapelias.starboard.starburst.starchier.starchily.starching.stardusts.starfruit.stargazed.stargazer.stargazes.staringly.starkness.starlight.starlings.starnoses.starriest.starships.startlers.startling.starworts.stateable.statehood.stateless.statelier.statement.stateroom.stateside.statesman.statesmen.statewide.stational.stationed.stationer.statistic.statocyst.statolith.statuette.statutory.staumrels.staunched.stauncher.staunches.staunchly.stavudine.staysails.steadfast.steadiers.steadiest.steadings.steadying.stealable.stealages.stealings.steamboat.steamered.steamiest.steamroll.steamship.steapsins.stearates.stearines.steatites.steatitic.steedlike.steelhead.steeliest.steelwork.steelyard.steenboks.steenbuck.steepened.steepness.steerable.steerages.steersman.steersmen.steevings.stegodons.stegosaur.steinboks.stellated.stellites.stellular.stemmatic.stemmiest.stemwares.stenchful.stenchier.stenciled.stenciler.stenobath.stenokies.stenokous.stenotype.stenotypy.stepchild.stepdames.stepstool.steradian.sterculia.stereoing.sterigmas.sterilant.sterilely.sterilise.sterility.sterilize.sterlings.sternites.sternmost.sternness.sternpost.sternsons.sternward.sternways.steroidal.stevedore.stewarded.stibnites.stickable.stickball.stickfuls.stickiest.sticklers.sticklike.stickling.stickouts.stickpins.stickseed.stickweed.stickwork.stictions.stiffened.stiffener.stiffness.stigmatic.stilbenes.stilbites.stilettos.stillborn.stilliest.stillness.stillroom.stiltedly.stimulant.stimulate.stingaree.stingiest.stingless.stingrays.stinkards.stinkbugs.stinkeroo.stinkhorn.stinkiest.stinkpots.stinkweed.stinkwood.stipiform.stipitate.stipplers.stippling.stipulate.stirabout.stirrings.stitchers.stitchery.stitching.stithying.stoccados.stoccatas.stockaded.stockades.stockages.stockcars.stockfish.stockiest.stockinet.stockings.stockists.stockpile.stockpots.stockroom.stockyard.stodgiest.stoically.stoicisms.stokehold.stokehole.stokesias.stolidest.stolidity.stolonate.stolports.stomached.stomacher.stomachic.stomatous.stomodaea.stomodeal.stomodeum.stoneboat.stonechat.stonecrop.stonefish.stonewall.stoneware.stonewash.stonework.stonewort.stoniness.stonished.stonishes.stoopball.stopbanks.stopcocks.stoplight.stopovers.stoppable.stoppages.stoppered.stoppling.stopwatch.stopwords.storables.storeroom.storeship.storewide.stormiest.storybook.stounding.stoutened.stoutness.stovepipe.stowaways.straddled.straddler.straddles.straggled.straggler.straggles.straights.strainers.straining.straitens.straitest.stranders.stranding.strangely.strangers.strangest.strangled.strangler.strangles.strangury.straphang.straphung.strapless.strappado.strappers.strappier.strapping.stratagem.strategic.stravaged.stravages.stravaigs.strawiest.strawworm.streakers.streakier.streakily.streaking.streambed.streamers.streamier.streaming.streamlet.streekers.streeking.streeling.streetcar.strengths.strenuous.stressful.stressing.stressors.stretched.stretcher.stretches.streusels.strewment.striating.striation.strickled.strickles.strictest.striction.stricture.stridence.stridency.strifeful.strikeout.stringent.stringers.stringier.stringily.stringing.stripiest.stripings.stripling.strippers.stripping.strobilae.strobilar.strobiles.strobilus.strollers.strolling.stromatic.strongbox.strongest.strongish.strongman.strongmen.strongyle.strongyls.strontian.strontias.strontium.strophoid.strophuli.stroppers.stroppier.stropping.strouding.structure.struggled.struggler.struggles.strumatic.strummers.strumming.strumpets.strunting.strutters.strutting.strychnic.stubbiest.stubblier.stuccoers.stuccoing.studbooks.studdings.studhorse.studiedly.studliest.studworks.stuffiest.stuffings.stuffless.stumblers.stumbling.stumpages.stumpiest.stunsails.stupefied.stupefier.stupefies.stupidest.stupidity.stuporous.sturdiest.sturgeons.stuttered.stutterer.stylebook.styleless.styliform.stylisers.stylishly.stylising.stylistic.stylitism.stylizers.stylizing.stylobate.stylolite.stymieing.stypsises.styptical.styrofoam.suability.suasively.suaveness.suavities.subabbots.subacidly.subadults.subaerial.subagency.subagents.subahdars.subalpine.subaltern.subapical.subarctic.subastral.subatomic.subbasins.subbasses.subblocks.subbranch.subbreeds.subbureau.subcastes.subcauses.subcavity.subcellar.subcenter.subchaser.subchiefs.subclaims.subclause.subclerks.subclimax.subcolony.subconsul.subcooled.subcortex.subcostal.subcounty.subdeacon.subdealer.subdepots.subdeputy.subdermal.subdivide.subduable.subduably.subducing.subducted.subduedly.subdwarfs.subechoes.subedited.subeditor.subepochs.suberised.suberises.suberized.suberizes.subfamily.subfields.subfloors.subfossil.subframes.subgenera.subgenres.subgrades.subgraphs.subgroups.subhumans.subinfeud.subjacent.subjected.subjoined.subjugate.sublating.sublation.subleased.subleases.sublessee.sublessor.sublethal.sublevels.sublimate.sublimely.sublimers.sublimest.subliming.sublimits.sublimity.sublunary.submarine.submarket.submerged.submerges.submersed.submerses.submicron.submittal.submitted.submitter.submucosa.subniches.subnormal.subnuclei.suborders.suborners.suborning.suboscine.suboxides.subpanels.subpenaed.subperiod.subphases.subphylar.subphylum.subpoenas.subpotent.subregion.subrogate.subsample.subscales.subscribe.subscript.subsector.subsenses.subseries.subserved.subserves.subshafts.subshells.subshrubs.subsiders.subsidies.subsiding.subsidise.subsidize.subsisted.subsister.subskills.subsocial.subsoiled.subsoiler.subspaces.substages.substance.substates.substrata.substrate.subsuming.subsystem.subtaxons.subtenant.subtended.subthemes.subtilely.subtilest.subtilins.subtility.subtilize.subtitled.subtitles.subtonics.subtopias.subtopics.subtorrid.subtotals.subtracts.subtrends.subtribes.subtropic.subtunics.suburbans.suburbias.subvassal.subvening.subverted.subverter.subvicars.subvisual.subwaying.subwoofer.subworlds.subwriter.succedent.succeeded.succeeder.successes.successor.succinate.succinyls.succorers.succories.succoring.succotash.succoured.succulent.succumbed.succussed.succusses.suckering.sucklings.sucralose.suctional.suctioned.suctorial.suctorian.sudations.sudatoria.sudorific.sufferers.suffering.sufficers.sufficing.suffixing.suffixion.sufflated.sufflates.suffocate.suffragan.suffrages.suffusing.suffusion.suffusive.sugarbush.sugarcane.sugarcoat.sugariest.sugarless.sugarlike.sugarloaf.sugarplum.suggested.suggester.suiciding.suitcases.sukiyakis.sulcation.sulfatase.sulfating.sulfation.sulfinyls.sulfonate sulfonium.sulfonyls.sulfoxide.sulfurate.sulfurets.sulfuring.sulfurize.sulfurous.sulfuryls.sulkiness.sullenest.sulliable.sulphated.sulphates.sulphides.sulphites.sulphones.sulphured.sultanate.sultaness.sultriest.summaries.summarily.summarise.summarist.summarize.summating.summation.summative.summerier.summering.summerset.summiteer.summiting.summoners.summoning.summonsed.summonses.sumptuary.sumptuous.sumpweeds.sunbathed.sunbather.sunbathes.sunblocks.sunbonnet.sunburned.sunbursts.sunchokes.sunderers.sundering.sundowned.sundowner.sunfishes.sunflower.sunlights.sunniness.sunscalds.sunscreen.sunseeker.sunshades.sunshines.sunstones.sunstroke.sunstruck.suntanned.superable.superably.superadds.superatom.superbank.superbest.superbomb.superbugs.supercars.supercede.superchic.supercity.superclub.supercoil.supercool.supercops.supercute.superegos.superette.superfans.superfarm.superfast.superfine.superfirm.superfund.supergene.superglue.supergood.superheat.superhero.superhits.superhype.superiors.superjets.superjock.superlain.superlies.superlong.supermale.supermind.supermini.supermoms.supernate.supernova.superpimp.superport.superpose.superpros.superrace.superreal.superrich.superroad.supersafe.supersale.supersaur.supersede.supersell.supershow.supersize.supersoft.supersold.superstar.superstud.superthin.supervene.supervise.superwave.superwide.superwife.supinated.supinates.supinator.supplants.suppliant.suppliers.supplying.supported.supporter.supposals.supposers.supposing.suppurate.supremacy.supremely.supremest.surceased.surceases.surcharge.surcingle.surculose.surfacers.surfacing.surfbirds.surfboard.surfboats.surfeited.surfeiter.surficial.surfperch.surgeries.suricates.surliness.surmisers.surmising.surmounts.surmullet.surnamers.surnaming.surpassed.surpasser.surpasses.surpliced.surplices.surplused.surpluses.surprints.surprisal.surprised.surpriser.surprises.surprized.surprizes.surreally.surrender.surrogacy.surrogate.surrounds.surroyals.surtaxing.surtitles.surveying.surveyors.survivals.survivers.surviving.survivors.suspected.suspended.suspender.suspenser.suspenses.suspensor.suspicion.suspiring.sustained.sustainer.susurrant.susurrate.susurrous.suturally.suzerains.svedbergs.swaddling.swaggered.swaggerer.swallowed.swallower.swampiest.swampland.swanherds.swankiest.swansdown.swanskins.swarajism.swarajist.swarthier.swarthily.swartness.swasticas.swastikas.swaybacks.swearword.sweatband.sweatiest.sweatshop.sweatsuit.sweepback.sweepiest.sweepings.sweetened.sweetener.sweetings.sweetmeat.sweetness.sweetshop.sweetsops.swellfish.swellhead.swellings.sweltered.sweltrier.sweptback.sweptwing.swiftlets.swiftness.swimmable.swimmeret.swimmiest.swimmings.swimsuits.swindlers.swindling.swineherd.swingeing.swingiest.swingings.swingling.swinishly.swirliest.swishiest.switchers.switching.switchman.switchmen.swithered.swiveling.swivelled.swizzlers.swizzling.swooniest.swoopiest.swooshing.swordfish.swordlike.swordplay.swordsman.swordsmen.swordtail.swounding.sybarites.sybaritic.sycamines.sycamores.sycomores.sycophant.syllabary.syllabics.syllabify.syllabism.syllabize.syllabled.syllables.syllabubs.syllepses.syllepsis.sylleptic.syllogism.syllogist.syllogize sylphlike.sylvanite.sylvinite.symbionts.symbioses.symbiosis.symbiotes.symbiotic.symboling.symbolise.symbolism.symbolist.symbolize.symbolled.symbology.symmetric.sympathin.sympatico.sympatric.sympetaly.symphonic.symphyses.symphysis.sympodial.sympodium.symposiac.symposium.synagogal.synagogue.synalepha.synapsids.synapsing.synchrony.synclinal.synclines.syncopate.syncretic.syncytial.syncytium.syndactyl.syndicate.syndromes.syndromic.synereses.syneresis.synergias.synergids.synergies.synergism.synergist.synesises.syngamies.syngamous.syngasses.syngeneic.synizeses.synizesis.synkaryon.synodical.synoicous.synonymes.synonymic.synopsize.synovitis.syntactic.syntagmas.syntheses.synthesis.synthetic.synthpops.syntonies.syphering.syphiloid.syphoning.syringeal.syringing.syrphians.syrupiest.syruplike.sysadmins.systaltic.systemics.systemize.syzygetic.tabbouleh.tablature.tablefuls.tableland.tableless.tablemate.tablesful.tableting.tabletops.tabletted.tableware.tabooleys.taborines.taboulehs.tabourers.tabourets.tabouring.tabulable.tabularly.tabulated.tabulates.tabulator.tacamahac.tachinids.tachismes.tachistes.tachylite.tachylyte.tachyonic.tacitness.tackboard.tackified.tackifier.tackifies.tackiness.tacklings.taconites.tactfully.tactician.tactilely.tactility.tactually.taekwondo.taeniases.taeniasis.taffarels.tafferels.taffrails.tagalongs.tagboards.tagmemics.tahsildar.tailbacks.tailboard.tailbones.tailcoats.tailender.tailgated.tailgater.tailgates.taillamps.tailleurs.taillight.tailoring.tailpiece.tailpipes.tailplane.tailraces.tailskids.tailslide.tailspins.tailstock.tailwater.tailwinds.taintless.takeaways.takedowns.takeovers.talapoins.taleggios.talismans.talkathon.talkative.talkbacks.talkfests.talkiness.tallaging.tallaisim.tallgrass.tallithes.tallithim.tallitoth.tallowing.tallyhoed.talmudism.tamanduas.tamaracks.tamarillo.tamarinds.tamarisks.tambouras.tamboured.tambourer.tambourin.tamoxifen.tamperers.tampering.tamponing.tandooris.tangences.tangental.tangerine.tangibles.tanginess.tangliest.tangolike.tankships.tanneries.tantalate.tantalise.tantalite.tantalize.tantalous.tantalums.tantivies tantrisms.tanzanite.tapaderas.tapaderos.tapelines.tapenades.tapeworms.taphonomy.taphouses.taquerias.tarantism.tarantist.tarantula.tarbushes.tardiness.targeting.tariffing.tarlatans.tarletans.tarmacked.tarnation.tarnished.tarnishes.tarpapers.tarpaulin.tarragons.tarriance.tarriness.tartarous.tartiness.tartrated.tartrates.tartuffes.taskworks.tasseling.tasselled.tasteable.tasteless.tastiness.tattering.tattiness.tattooers.tattooing.tattooist.tautening.tautology.tautomers.tautonyms.tautonymy.taverners.tawdriest.tawniness.taxations.taxidermy.taximeter.taxonomic.taxpayers.taxpaying.tchotchke.teaboards.teachable.teachably.teacherly.teachings.teacupful.teahouses.teakettle.teakwoods.teamakers.teammates.teamsters.teamworks.tearaways.teardowns.teardrops.tearfully.teargases.teariness.tearstain.tearstrip.teaselers.teaseling.teaselled.teaseller.teasingly.teaspoons.teataster.teazeling.teazelled.technical.technique.technopop.tectonics.tectonism.tectorial.tectrices.teddering.tediously.teemingly.teenagers.teensiest.teentsier.teetering.teethings.teethless.teetotals.teetotums.tegmental.tegmentum.tegularly.tegulated.teguments.telamones.telecasts.telefaxes.telefilms.telegenic.telegonic.telegrams.telegraph.telemarks.telemeter.telemetry.teleology.teleonomy.telepaths.telepathy.telephone.telephony.telephoto.teleplays.teleports.telescope.telescopy.teleshops.telestich.telestics.teletexts.telethons.teletyped.teletypes.televiews.televised.televises.televisor.telfering.telically.tellingly.telltales.tellurian.telluride.tellurion.tellurite.tellurium.tellurize.tellurous.telneting.telnetted.telomeres.telophase.telotaxes.telotaxis.telphered.temblores.temperate.temperers.tempering.tempested.templates.temporals.temporary.temporise.temporize.temptable.temptress.tenacious.tenaculum.tenailles.tenancies.tenanting.tendances.tendences.tenderers.tenderest.tendering.tenderize.tendinous.tendresse.tendriled.tenebrism.tenebrist.tenebrous.tenements.tenorists.tenorites.tenpences.tenseness.tensilely.tensility.tensional.tensioned.tensioner.tensities tensorial.tentacled.tentacles.tentative.tentering.tentmaker.tentorial.tentorium.tenuities.tenuously.tenurable.teocallis.teosintes.tepefying.tephrites.tephritic.tepidness.terabytes.teraflops.terahertz.teratisms.teratogen.teratomas.terawatts.tercelets.terebenes.terebinth.teredines.teriyakis.termagant.terminals.terminate.termitary.termtimes.ternaries.ternately.terpenoid.terpineol.terpinols.terracing.terraform.terrapins.terrarium.terrazzos.terrellas.terrenely.terrified.terrifier.terrifies.territory.terrorise.terrorism.terrorist.terrorize.terseness.tervalent.terylenes.tesselate.tesseract.tessitura.tessiture.testacean.testacies.testament.testators.testatrix.testcross.testicles.testified.testifier.testifies.testimony.testiness.tetanical.tetanised.tetanises.tetanized.tetanizes.tetanuses.tetchiest.tethering.tetracids.tetragons.tetragram.tetralogy.tetramers.tetrapods.tetrarchs.tetrarchy.tetroxide.tetroxids.teutonize.tevatrons.textbooks.textually.texturing.texturize.thalassic.thallious.thalliums.thalluses.thaneship.thankless.thatchers.thatchier.thatching.theatrics.thebaines.thecodont.theirself.thematics.theocracy.theocrats.theogonic.theologic.theologue.theomachy.theophany.theoretic.theorised.theorises.theorists.theorized.theorizer.theorizes.theosophy.therapies.therapist.therapsid.therefore.therefrom.thereinto.theremins.thereunto.thereupon.therewith.theriacal.theriacas.thermally.thermidor.thermions.thermites.thermoses.thermoset.theropods.thesaural.thesaurus.thespians.theurgies.theurgist.thiamines.thiazides.thiazines.thiazoles.thickened.thickener.thicketed.thickhead.thickness.thicksets.thighbone.thinclads.thindowns.thingness.thingummy.thinkable.thinkably.thinkings.thionates.thionines.thiophene.thiophens.thiotepas.thioureas.thirdhand.thirlages.thirsters.thirstier thirstily.thirsting.thirteens.thirtieth.thirtyish.thistlier.thitherto.tholeiite.tholepins.thornback.thornbush.thorniest.thornless.thornlike.thousands.thraldoms.thralldom.thralling.thrashers.thrashing.threaders.threadfin.threadier.threading.threapers.threaping.threatens.threating.threefold.threeping.threesome.threnodes.threnodic.threonine.threshers.threshing.threshold.thriftier.thriftily.thrillers.thrilling.throatier.throatily.throating.throbbers.throbbing.thrombins.thrombose.thronging.throstles.throttled.throttler.throttles.throughly.throwaway.throwback.throwster.thrummers.thrummier.thrumming.thrusters.thrustful.thrusting.thrustors.thumbhole.thumbkins.thumbless.thumbnail.thumbnuts.thumbtack.thundered.thunderer.thuribles.thurifers.thwackers.thwacking.thwarters.thwarting.thylacine.thylakoid.thymidine.thymocyte.thymosins.thyratron.thyristor.thyroidal.thyroxine.thyroxins.ticketing.tickseeds.ticktacks.ticktocks.tictacked.tictocked.tidelands.tidemarks.tidewater.tiebreaks.tieclasps.tierceron.tiffanies.tiffining.tigereyes.tigerlike.tightened.tightener.tightknit.tightness.tightrope.tightwads.tightwire.tigresses.tilburies.tillering.tillerman.tillermen.tiltmeter.tiltrotor.tiltyards.timbering.timberman.timbermen.timecards.timeliest.timelines.timeously.timepiece.timesaver.timescale.timetable.timeworks.timidness.timocracy.timothies.timpanist.timpanums.tinctured.tinctures.tinderbox.tingliest.tinkerers.tinkering.tinkertoy.tinkliest.tinklings.tinniness.tinplates.tinseling.tinselled.tinsmiths.tinstones.tippytoed.tippytoes.tipsheets.tipsiness.tipstaffs.tipstaves.tipstocks.tiptoeing tiramisus.tiredness.tirewoman.tirewomen.tirrivees.titanates.titanisms.titanites.titaniums.tithonias.titillate.titivated.titivates.titrating.titration.titrators.titterers.tittering.tittivate.tittuping.tittupped.titularly.toadeater.toadstone.toadstool.toadyisms.toastiest.tobaccoes.toboggans.tochering.toenailed.toepieces.toeplates.togavirus.toggeries.toileting.toilettes.toilfully.tokenisms.tokonomas.tolbooths.tolerable.tolerably.tolerance.tolerated.tolerates.tolerator.tolidines.tollbooth.tollgates.tollhouse.toluidide.toluidine.toluidins.tomahawks.tomalleys.tomatillo.tomboyish.tombstone.tomcatted.tomentose.tommyrots.tomograms.tomograph.tomorrows.tonguings.tonically.tonometer.tonometry.tonoplast.tonsillar.tonsorial.tonsuring.toolboxes.toolheads.toolhouse.toolmaker.toolrooms.toolsheds.toothache.toothiest.toothless.toothlike.toothpick.toothsome.toothwort.topflight.topiaries.topically.topminnow.topograph.topologic.toponymic.topotypes.topsiders.topsoiled.topstitch.topstones.topworked.torchable.torcheres.torchiere.torchiers.torchiest.torchlike.torchwood.toreadors.toreutics.tormented.tormenter.tormentil.tormentor.tornadoes.tornillos.torpedoed.torpedoes.torpidity.torqueses.torrefied.torrefies.torridest.torridity.torrified.torrifies.torsional.tortillas.tortoises.tortricid.tortrixes.torturers.torturing.torturous.totalised.totalises.totalisms.totalists.totalized.totalizer.totalizes.totalling.totaquine.totemisms.totemists.totemites.totterers.tottering.touchable.touchback.touchdown.touchhole.touchiest.touchline.touchmark.touchpads.touchtone.touchwood.toughened.toughener.toughness.touristas.touristed.touristic.tournedos.tourneyed.towelette.towelings.towelling.toweriest.towerlike.towheaded.townhomes.townhouse.townscape.townsfolk.townships.towplanes.toxaemias.toxaphene.toxically.toxicants.toxicoses.toxicosis.toxigenic.toxophily.trabeated.trabecula.traceable.traceably.traceless.traceried.traceries.tracheary.tracheate.tracheids.tracheole.trachling.trachomas.trachytes.trachytic.trackable.trackages.trackball.trackings.trackless.trackpads.trackside.tracksuit.trackways.tractable.tractably.tractates.tractions.tradeable.trademark.tradeoffs.tradesman.tradesmen.tradition.traditive.traducers.traducing.tragedian.tragedies.tragopans.trailered.trailhead.trailless.trailside.trainable.trainband.trainfuls.trainings.trainload.trainways.traipsing.traitress.trajected.trameling.tramelled.tramlines.trammeled.trammeler.trampiest.tramplers.trampling.tramroads.transacts.transaxle.transcend.transduce.transects.transepts.transeunt.transfect.transfers.transfixt.transform.transfuse.transgene.tranships.transient.transited.translate.transmits.transmute.transonic.transpire.transport.transpose.transship.transuded.transudes.trapanned.trapballs.trapdoors.trapesing.trapezial.trapezist.trapezium.trapezius.trapezoid.traplines.trapnests.trappings.traprocks.trapuntos.trashiest.trattoria.trattorie.trauchled trauchles.traumatic.travailed.travelers.traveling.travelled.traveller.travelogs.traversal.traversed.traverser.traverses.travoises.trawlnets.trazodone.treachery.treaclier.treadlers.treadless.treadling.treadmill.treasured.treasurer.treasures.treatable.treatises.treatment.trebbiano.trebuchet.trebucket.trecentos.treddling.treehouse.treelawns.treenails.treenware.trehalose.treillage.trellised.trellises.trematode.tremblers.tremblier.trembling.tremolite.tremorous.tremulant.tremulous.trenchant.trenchers.trenching.trendiest.trendoids.trepanned.trepanner.trephined.trephines.trepidant.treponema.treponeme.tressiest.tressours.tressures.tretinoin.trevallys.triadisms.trialogue.triangled.triangles.triathlon.triatomic.triazines.triazoles.tribadism.tribalism.tribalist.tribesman.tribesmen.tribology.tribrachs.tribulate.tribunals.tribunary.tribunate.tributary.tricepses.trichinae.trichinal.trichinas.trichites.trichomes.trichomic.trichoses.trichosis.trichroic.trichrome.trickiest.tricklier.trickling.tricksier.trickster.triclinia.triclinic.triclosan.tricolors.tricolour.tricornes.tricotine.tricrotic.trictracs.tricuspid.tricycles.tricyclic.tridactyl.tridental.triennial.triennium.trierarch.trifacial.trifectas.triflings.trifocals.trifolium.triforium.triformed.triggered.triglyphs.trigonous.trigraphs.trihedral.trihedron.trihybrid.trijugate.trijugous.trilinear.trilithon.trillions.trilliums.trilobate.trilobite.trilogies.trimarans.trimerism.trimerous.trimester.trimeters.trimetric.trimmings.trimorphs.trimotors.trindling.trinities.trinketed.trinketer.trinketry.trinomial.trioxides.triplanes.triplexes.triplites.triploids.triploidy.tripodies.trippiest.trippings.triptanes.triptycas.triptychs.tripwires.trisceles.trisected.trisector.triskeles.triskelia.trismuses.trisodium.trisomics.trisomies.tristezas.tristichs.triteness.tritheism.tritheist.trithings.tritiated.triticale.triticums.triturate.triumphal.triumphed.triumviri.triumvirs.trivalent.trivalves.trivially.triweekly.trochaics.trochilus.trochleae.trochlear.trochleas.trochoids.troilisms.troilites.troiluses.trolleyed.trollings.trollying.trombones.troopials.troopship.troostite.tropaeola.tropeolin.trophying.tropicals.tropistic.tropology.troponins.trotlines.troublers.troubling.troublous.trouncers.trouncing.troupials.trousseau.troutiest.trouveres.trouveurs.trowelers.troweling.trowelled.troweller.truancies.truanting.truceless.truckable.truckages.truckfuls.truckings.trucklers.truckline.truckling.truckload.truculent.trudgeons.trueblues.trueloves.truepenny.trumpeted.trumpeter.truncated.truncates.truncheon.trundlers.trundling.trunkfish.trunkfuls.trunksful.trunnions.trussings.trustable.trustiest trustless.truthless.tsaddikim.tsarevnas.tsaritzas.tsimmeses.tsktsking.tubbiness.tubenoses.tubercles.tuberoses.tubeworks.tubeworms.tubifexes.tubificid.tubularly.tubulated.tubulates.tubulator.tubulures.tuckahoes.tuckering.tuckshops.tufaceous.tuitional.tularemia.tularemic.tuliplike.tulipwood.tullibees.tumblebug.tumbleset.tumblings.tumefying.tumescent.tumescing.tumidness.tumorlike.tumplines.tumuluses.tundishes.tunefully.tunesmith.tungstate.tungstens.tungstite.tunicated.tunicates.tunnelers.tunneling.tunnelled.tunneller.tuppences.turbanned.turbaries.turbidite.turbidity.turbinals.turbinate.turbocars.turbofans turbojets.turboprop.turbulent.turfgrass.turgidity.turkoises.turmerics.turmoiled.turnabout.turncoats.turndowns.turneries.turnhalls.turnovers.turnpikes.turnsoles.turnspits.turnstile.turnstone.turntable.turophile.turpitude.turquoise.turtlings.tusheries.tussocked.tutelages.tutorages.tutorials.tutorship.tutoyered.twaddlers.twaddling.twangiest.twanglers.twangling.twattling.twayblade.tweakiest.tweediest.tweedling.twelvemos.twentieth.twiddlers.twiddlier.twiddling.twiggiest.twilights.twillings.twinberry.twingeing.twinklers.twinkling.twinnings.twinships.twirliest.twistable.twistiest.twistings.twitchers.twitchier.twitchily.twitching.twittered.twitterer.twopences.tympanies.tympanist.tympanums.typecases.typecasts.typefaces.typestyle.typewrite.typewrote.typhlitic.typhlitis.typhoidal.typically.typifiers.typifying.typograph.typologic.tyramines.tyrannies.tyrannise.tyrannize.tyrannous.tyrocidin.tyrosines.tzaddikim.tzarevnas.tzaritzas.tzimmeses.udometers.ufologies.ufologist.uglifiers.uglifying.uintahite.uintaites.uitlander.ulcerated.ulcerates.ultimated.ultimates.ultimatum.ultrachic.ultracold.ultracool.ultrafast.ultrafine.ultraheat.ultrahigh.ultraisms.ultraists.ultraleft.ultraposh.ultrapure.ultrarare.ultrareds.ultrarich.ultrasafe.ultraslow.ultrasoft.ultrathin.ultratiny.ultrawide.ululating.ululation.umangites.umbellate.umbellets.umbellule.umbilical.umbilicus.umbrellas.umbrettes.umlauting.umpirages.umpteenth.unabashed.unabating.unabetted.unabiding.unabjured.unaborted.unabraded.unabusive.unaccrued.unacerbic.unactable.unadapted.unadeptly.unadmired.unadopted.unadorned.unadvised.unaidedly.unalarmed.unalerted.unaligned.unallayed.unalleged.unallowed.unalloyed.unaltered.unamassed.unamended.unamiable.unamusing.unanchors.unanimity.unanimous.unannexed.unannoyed.unapplied.unaptness.unarmored.unaroused.unarrayed.unashamed.unassayed.unassured.unattired.unattuned.unaudited.unavenged.unaverage.unaverted.unawarded.unawarely.unawesome.unbalance.unbandage.unbanning.unbarring.unbearded.unbearing.unbeknown.unbeliefs.unbeloved.unbelting.unbemused.unbending.unbiassed.unbigoted.unbinding.unblended.unblessed.unblinded.unblocked.unblooded.unblurred.unboarded.unbolting.unbonnets.unbookish.unbosomed.unbosomer.unbottled.unbottles.unbounded.unbracing.unbraided.unbraking.unbranded.unbridged.unbridled.unbridles.unbriefed.unbroiled.unbrowned.unbruised.unbrushed.unbuckled.unbuckles.unbudging.unbundled.unbundles.unburdens.unbuttons.uncandled.uncannier.uncannily.uncapable.uncapping.uncatered.unceasing.uncertain.unchained.unchaired.unchanged.uncharged.uncharges.uncharred.uncharted.unchaster.unchecked.unchilled.unchoking.unciforms.uncinaria.uncivilly.unclaimed.unclamped.unclarity.unclasped.uncleaned.uncleaner.uncleanly.uncleared.unclearer.unclearly.uncliched.unclipped.uncloaked.unclogged.unclosing.unclothed.unclothes.unclouded.uncloying.unclutter.uncoating.uncobbled.uncocking.uncoerced.uncoffins.uncoiling.uncolored.unconcern.unconfuse.uncorking.uncorrupt.uncounted.uncoupled.uncoupler.uncouples.uncouthly.uncovered.uncracked.uncrating.uncreated.uncreates.uncropped.uncrossed.uncrosses.uncrowded.uncrowned.uncrumple.uncrushed.uncuffing.uncurable.uncurably.uncurbing.uncurious.uncurling.uncurrent.uncynical.undamaged.undatable.undaunted.undebated.undecayed.undeceive.undecided.undefaced.undefiled.undefined.undeleted.undeluded.underacts.underaged.underages.underarms.underbake.underbids.underbite.underbody.underboss.underbred.underbrim.underbuds.underbuys.undercard.underclad.underclay.undercoat.undercook.undercool.undercuts.underdoes.underdogs.underdone.underdose.undereats.underfeed.underflow.underfoot.underfund.underfurs.undergird.undergirt.undergods.undergoer.undergoes.undergone.undergrad.underhair.underhand.underheat.underhung.underived.underjaws.underkill.underlaid.underlain.underlaps.underlays.underlets.underlies.underline.underling.underlips.underload.undermine.undermost.underpaid.underpart.underpass.underpays.underpins.underplay.underplot.underprop.underrate.underripe.underruns.underseas.undersell.undersets.undershot.underside.undersign.undersize.undersoil.undersold.undersong.underspin.undertake.undertint.undertone.undertook.undertows.underused.underuses.undervest.undervote.underwear.underwent.underwing.underwire.underwood.underwool.underwork.undesired.undiluted.undivided.undocking.undoubled.undoubles.undoubted.undrained.undraping.undrawing.undreamed.undressed.undresses.undrilled.undulance.undulated.undulates.undulator.undutiful.undyingly.undynamic.uneagerly.unearthed.unearthly.uneasiest.uneatable.uneffaced.unelected.unendowed.unengaged.unenjoyed.unensured.unentered.unenvious.unequaled.unequally.unessayed.unethical.unevenest.unevolved.unexalted.unexcited.unexcused.unexpired.unexposed.unfailing.unfairest.unfastens.unfavored.unfearful.unfearing.unfeeling.unfeigned.unfencing.unfertile.unfetters.unfitness.unfitting.unflapped.unfledged.unflyable.unfocused.unfolders.unfolding.unfounded.unfreedom.unfreeing.unfreezes.unfrocked.unfurling.unfussily.ungallant.ungenteel.ungenuine.ungirding.unglossed.ungloving.ungodlier.ungreased.ungroomed.ungrouped.unguarded.unguentum.unguinous.ungulates.unhairers.unhairing.unhallows.unhandier.unhandily.unhanding.unhandled.unhanging.unhappier.unhappily.unharmful.unharness.unharried.unhatched.unhatting.unhealthy.unheedful.unheeding.unhelming.unhelpful.unhinging.unhirable.unhitched.unhitches.unholiest.unhonored.unhooding.unhooking.unhopeful.unhorsing.unhostile.unhousing.unhumanly.unhumbled.unhurried.unhusking.unicycled.unicycles.unifiable.uniformed.uniformer.uniformly.unijugate.unilineal.unilinear.unimpeded.unindexed.uninjured.uninstall.uninsured.uninvited.uninvoked.unionised.unionises.unionisms.unionists.unionized.unionizer.unionizes.uniparous.uniplanar.unipotent.uniramous.unisexual.unisonant.unisonous.unitarian.unitarily.unitively.unitizers.unitizing.unitrusts.univalent.univalved.univalves.universal.universes.univocals.unjamming.unjointed.unkennels.unkindest.unkindled.unkinking.unknitted.unknotted.unknowing.unlabeled.unlabored.unlashing.unlatched.unlatches.unleadeds.unleading.unlearned.unleashed.unleashes.unleveled.unlighted.unlikable.unlimbers.unlimited.unlinking.unlivable.unloaders.unloading.unlocated.unlocking.unloosens.unloosing.unlovable.unluckier.unluckily.unlyrical.unmanaged.unmanlier.unmanning.unmannish.unmarried.unmaskers.unmasking.unmatched.unmatured.unmeaning.unmerited.unmeshing.unmindful.unmingled.unmingles.unmitered.unmitring.unmixable.unmixedly.unmolding.unmooring.unmorally.unmortise.unmounted.unmourned.unmovable.unmuffled.unmuffles.unmusical.unmuzzled.unmuzzles.unnailing.unnamable.unnatural.unneedful.unnerving.unnoticed.unnuanced.unoffered.unopposed.unordered.unorderly.unpackers.unpacking.unpainful.unpainted.unpatched.unpegging.unpenning.unpeopled.unpeoples.unperfect.unpersons.unpicking.unpierced.unpinning.unpitying.unplaited.unplanned.unplanted.unpleased.unpledged.unpliable.unplucked.unplugged.unplumbed.unpointed.unpoliced.unpolitic.unpopular.unpressed.unprinted.unpuckers.unpuzzled.unpuzzles.unquaking.unquelled.unquieter.unquietly.unquoting.unravaged.unraveled.unreached.unreadier.unreadily.unreality.unreasons.unrebuked.unreelers.unreeling.unreeving.unrefined.unrelated.unrelaxed.unrenewed.unrepairs.unreserve.unrestful.unresting.unretired.unretires.unrevised.unrevoked.unridable.unriddled.unriddler.unriddles.unrigging.unripened.unripping.unrivaled.unroasted.unrolling.unroofing.unrooting.unrounded.unruffled.unruliest.unrumpled.unsaddled.unsaddles.unsaintly.unsalable.unsalably.unsampled.unsavoury.unsayable.unscanned.unscarred.unscathed.unscented.unscrewed.unsealing.unseaming.unseating.unsecured.unseeable.unselfish.unselling.unserious.unsetting.unsettled.unsettles.unshackle.unshapely.unsheathe.unshelled.unshifted.unshipped.unshirted.unsighted.unsightly.unsimilar.unskilful.unskilled.unsmiling.unsnagged.unsnapped.unsnarled.unsoberly.unsolders.unsoothed.unsounded.unsounder.unsoundly.unsourced.unsparing.unsphered.unspheres.unspilled.unspoiled.unspooled.unspotted.unsprayed.unsquared.unstabler.unstacked.unstained.unstalked.unstamped.unstarred.unstating.unsteeled.unstemmed.unstepped.unsterile.unstinted.unstocked.unstopped.unstopper.unstrings.unstriped.unstudied.unstuffed.unstylish.unsubdued.unsuccess.unsullied.unswathed.unswathes.unswollen.untacking.untactful.untainted.untamable.untangled.untangles.unteaches.untenable.untenably.untenured.untethers.unthanked.unthought.unthreads.unthrifty.unthroned.unthrones.untidiest.untidying.untimeous.untouched.untracked.untrained.untrapped.untreaded.untreated.untrimmed.untrodden.untrussed.untrusses.untucking.untunable.untuneful.untutored.untwilled.untwining.untwisted.untypical.ununbiums.unununium.unusually.unuttered.unvarying.unveiling.unvisited.unvoicing.unwakened.unwariest.unwarlike.unwasheds.unwatched.unwatered.unwearied.unweaving.unweeting.unweighed.unweights.unwelcome.unwhipped.unwilling.unwinders.unwinding.unwinking.unwisdoms.unwishing.unwitting.unwomanly.unworldly.unworried.unwounded.unwrapped.unwreathe.unwrinkle.unwritten.unwrought.unzealous.unzipping.upbearers.upbearing.upbinding.upboiling.upbraided.upbraider.upbuilder.upcasting.upchucked.upclimbed.upcoiling.upcountry.upcurling.upcurving.updarting.upflowing.upfolding.upgathers.upgirding.upgrading.upgrowing.upgrowths.upheaping.upheavals.upheavers.upheaving.uphoarded.upholders.upholding.upholster.uplanders.upleaping.uplifters.uplifting.uplighted.uplinking.uploading.upmanship.uppercase.uppercuts.uppermost.upperpart.uppropped.upraisers.upraising.upreached.upreaches.uprearing.uprighted.uprightly.uprisings.uprootals.uprooters.uprooting.uprousing.uprushing.upsadaisy.upscaling.upsending.upsetters.upsetting.upshifted.upsoaring.upsprings.upstagers.upstaging.upstaring.upstarted.upstaters.upstepped.upstirred.upstrokes.upsurging.upswelled.upswollen.uptalking.uptearing.upthrusts.uptilting.uptossing.uptowners.upturning.upwafting.upwelling.uraninite.uranology.urbanised.urbanises.urbanisms.urbanists.urbanites.urbanized.urbanizes.urceolate.uredinial.uredinium.ureotelic.urethanes.urgencies.urinaries.urinating.urination.urinative.urinators.urinemias.urochords.urochrome.urogenous.urokinase.urolithic.urologies.urologist.uropodous.uropygial.uropygium.uroscopic.urostyles.urticants.urticaria.urticated.urticates.urushiols.usability.uselessly.usernames.usherette.usquabaes.usquebaes.usualness.usufructs.utilidors.utilisers.utilising.utilities.utilizers.utilizing.utopistic.utricular.utriculus.utterable.utterance.uttermost.utterness.uvarovite.uveitises.uxorially.uxoricide.vacancies.vacatable.vacations.vaccinate.vaccinees.vaccinial.vaccinias.vacillant.vacillate.vacuities.vacuolate.vacuously.vacuuming.vagabonds.vagarious.vaginally.vaginated.vaginitis.vaginoses.vaginosis.vagotonia.vagotonic.vagrantly.vagueness.vainglory.valancing.valencias.valencies.valentine.valerates.valerians.valiances.valiantly.validated.validates.validness.valkyries.vallation.vallecula.valorised.valorises.valorized.valorizes.valuables.valuating.valuation.valuators.valueless.valveless.valvelets.valvelike.vambraced.vambraces.vamoosing.vampirish.vampirism.vampishly.vanadates.vanadiate.vanadiums.vanaspati.vandalise.vandalish.vandalism.vandalize.vanguards.vanillins.vanishers.vanishing.vapidness.vaporable.vaporetti.vaporetto.vaporific.vaporings.vaporised.vaporises.vaporized.vaporizer.vaporizes.vaporless.vaporlike.vaporware.vapourers.vapouring.varactors.variables.variances.variating.variation.varicella.varicosed.varicoses.varicosis.variegate.varietals.varieties.variolate.variolite.varioloid.variolous.variorums.variously.varisized.varistors.varnished.varnisher.varnishes.varooming.varsities.varyingly.vasculums.vasectomy.vaselines.vasomotor.vasospasm.vasotocin.vasovagal.vassalage.vastities.vastitude.vaticides.vaticinal.vaultiest.vaultings.vavasours.vavassors.vectorial.vectoring.veeringly.veganisms.vegetable.vegetably.vegetally.vegetated.vegetates.vegetists.vehemence.vehemency.vehicular.veinstone.veinulets.velarized.velarizes.vellicate.velodrome.velverets.velveteen.velvetier.venatical.venations.vendables.vendettas.vendeuses.vendibles.vendition.veneerers.veneering.venenated.venenates.venerable.venerably.venerated.venerates.venerator.venetians.vengeance.veniality.venireman.veniremen.venograms.ventifact.ventilate.ventrally.ventricle.venturers.venturing.venturous.veracious.verandaed.verandahs.verapamil.veratrias.veratrine.veratrins.veratrums.verbalism.verbalist.verbalize.verbiages.verbicide.verbified.verbifies.verbosely.verbosity.verdantly.verderers.verderors.verdigris.verditers.verdurous.vergences.verglases.veridical.verifiers.verifying.veritable.veritably.veritates.verjuices.vermicide.vermiform.vermifuge.vermilion.verminous.vermouths.vernacles.vernalize.vernation.vernicles.veronicas.verrucose.verrucous.versatile.versicles.versified.versifier.versifies.versional.vertebrae.vertebral vertebras.verticals.verticils.vertigoes.vesicants.vesicated.vesicates.vesiculae.vesicular.vesperals.vestibule.vestigial.vestigium.vestments.vestryman.vestrymen.vesturing.vesuvians.vetchling.vetiverts.vexations.vexatious.vexedness.vexillary.vexillate.viability.viaticals.viaticums.vibracula.vibraharp.vibrances.vibrantly.vibratile.vibrating.vibration.vibrative.vibrators.vibratory.vibrionic.vibrioses.vibriosis.vibrissae.vibrissal.viburnums.vicarages.vicarates.vicariant.vicariate.vicarious.vicarship.vicegeral.vicennial.viceregal.vicereine.vicinages.viciously.victimise.victimize.victorias.victories.victualed.victualer.videlicet.videodisc.videodisk.videoland.videotape.videotext.viduities.viewdatas.viewpoint.vigesimal.vigilance.vigilante.vignerons.vignetted.vignetter.vignettes.vilifiers vilifying.vilipends.villadoms.villagers.villagery.villenage.villiform.villosity.villously.vimineous.vinaceous.vinculums.vindaloos.vindicate.vinegared.vineyards.viniferas.vinifying.vintagers.violaters.violating.violation.violative.violators.violences.violently.violinist.viomycins.viosterol.viperfish.vireonine.virescent.virginals.virginity.virgulate.viricidal.viricides.viridians.virilisms.virilized.virilizes.virilocal.virologic.virtually.virtuosas.virtuosic.virtuosos.virucidal.virucides.virulence.virulency.viruslike.virusoids.viscachas.viscidity.viscoidal.viscosity viscounts.viscounty.viscously.visionary.visioning.visitable.visitants.visorless.vistaless.visualise.visualist.visuality.visualize.vitalised.vitalises.vitalisms.vitalists.vitalized.vitalizer.vitalizes.vitalness.vitamines.vitaminic.vitelline.vitellins.vitiating.vitiation.vitiators.vitiligos.vitrified.vitrifies.vitriform.vitrioled.vitriolic.vivacious.vivariums.viverrids.viverrine.vividness.vivifiers.vivifying.vivisects.vizcachas.vizierate.vizierial.vizirates.vocabular.vocaleses.vocalised.vocalises.vocalisms.vocalists.vocalized.vocalizer.vocalizes.vocalness.vocations.vocatives.vogueings.voguishly.voiceless.voicemail.voiceover.voidances.volatiles.volcanics.volcanism.volcanize.volcanoes.volitions.volkslied.volleyers.volleying.volplaned.volplanes.voltaisms.voltmeter.volumeter.voluntary.volunteer.volutions.vomitives.vomituses.voodooing.voodooism.voodooist.voracious.vorticism.vorticist.vorticity.vorticose.votarists.votresses.vouchered.vouchsafe.voussoirs.vowelized.vowelizes.voyageurs.voyeurism.vulcanian.vulcanise.vulcanism.vulcanite.vulcanize.vulgarest.vulgarian.vulgarise.vulgarism.vulgarity.vulgarize.vulnerary.vulturine.vulturish.vulturous.vulviform.vuvuzelas.wabbliest.wackiness.wadsetted.waenesses.waffliest.wafflings.waggeries.waggishly.waggliest.waggoners.waggoning.wagonages.wagonette.wagonload.wahcondas.wailfully.wailingly.wainscots.waistband.waistcoat.waistings.waistless.waistline.waitering.waitlists.waitstaff.wakeboard.wakefully.wakenings.walkabout.walkathon.walkaways.walkovers.walkyries.wallabies.wallaroos.wallboard.wallopers.walloping.wallowers.wallowing.wallpaper.wallyball.wallydrag.wambliest.wampished.wampishes.wanderers.wandering.wanderoos.wannabees.wannesses.wannigans.wantoners.wantoning.wapentake.warbonnet.warcrafts.wardrobed.wardrobes.wardrooms.wardships.warehouse.warerooms.warfarins.warhorses.warmakers.warmonger.warmouths.warningly.warplanes.warpowers.warragals.warranted.warrantee.warranter.warrantor.warreners.warrigals.warstlers.warstling.washables.washbasin.washboard.washbowls.washcloth.washerman.washermen.washhouse.washiness.washrooms.washstand.washwoman.washwomen.waspiness.waspishly.wassailed.wassailer.wasteland.wastelots.wasteries.wasteways.wastingly.watchable.watchband.watchcase.watchdogs.watcheyes.watchouts.watchword.waterages.waterbeds.waterbird.waterbuck.waterdogs.waterfall.waterfowl.waterhead.waterhens.wateriest.waterings.waterjets.waterleaf.waterless.waterlily.waterline.waterlogs.waterloos.watermark.watershed.waterside.waterskis.waterways.waterweed.waterwork.waterworn.waterzooi.watthours.wattmeter.wauchting.waughting.wavebands.waveforms.waveguide.wavellite.waveshape.waxplants.waxworker.wayfarers.wayfaring.waygoings.waylayers.waylaying.waypoints.waywardly.weakeners.weakening.weakishly.weakliest.weaklings.weaksides.wealthier.wealthily.weanlings.weaponeer.weaponing.weaponize.wearables.weariless.weariness.wearingly.wearisome.wearproof.weaseling.weaselled.weathered.weatherly.webcasted.webcaster.webmaster.wedgelike.weediness.weekended.weekender.weeknight.weensiest.weepiness.weepingly.weeweeing.weigelias.weighable.weighters.weightier.weightily.weighting.weirdness.welcomely.welcomers.welcoming.weldments.welfarism.welfarist.welladays.wellaways.wellcurbs.welldoers.wellheads.wellholes.wellhouse.wellsites.weltering.weregilds.wernerite.werwolves.westbound.westering.westerner.westwards.wetnesses.whackiest.whaleback.whaleboat.whalebone.whalelike.wharfages.whatsises.wheatears.wheatland.wheatless.wheatworm.wheedlers.wheedling.wheelbase.wheelings.wheelless.wheelsman.wheelsmen.wheelwork.wheepling.wheeziest.whelkiest.whelpless.whereases.wherefore.wherefrom.whereinto.whereunto.whereupon.wherewith.wherrying.whetstone.wheyfaced.wheyfaces.whichever.whickered.whifflers.whiffling.whimbrels.whimpered.whimperer.whimsical.whinchats.whingding.whingeing.whininess.whiningly.whinniest.whinnying.whinstone.whipcords.whippiest.whippings.whipsawed.whipsnake.whipstall.whipstock.whiptails.whipworms.whirliest.whirligig.whirlpool.whirlwind.whirrying.whishting.whiskered.whispered.whisperer.whistlers.whistling.whitebait.whitecaps.whitecomb.whiteface.whitefish.whitehead.whiteners.whiteness.whitening.whiteouts.whitetail.whitewall.whitewash.whitewing.whitewood.whitracks.whittlers.whittling.whittrets.whizbangs.whizzbang.whizziest.whodunits.whodunnit.wholemeal.wholeness.wholesale.wholesome.wholistic.whooshing.whoosises.whoredoms.whoresons.whorishly.whosoever.wickedest.wideawake.widowbird.widowered.widowhood.widthways.widthwise.wieldable.wieldiest.wifehoods.wifeliest.wiggeries.wiggliest.wigmakers.wigwagged.wigwagger.wildcards.wildering.wildfires.wildfowls.wildlands.wildlings.wildwoods.willemite.willfully.willinger.willingly.williwaus.williwaws.willowers.willowier willowing.willpower.willywaws.wimpiness.windbells.windblast.windblown.windbreak.windburns.windburnt.windchill.windfalls.windflaws.windgalls.windhover.windiness.windingly.windlings.windmills.windowing.windpipes.windproof.windrowed.windrower.windsocks.windstorm.windsurfs.windswept.windthrow.windwards.wineglass.winemaker.winepress.wineshops.wineskins.wingbacks.wingchair.wingdings.wingovers.wingspans.winkingly.winningly.winnowers.winnowing.winsomely.winsomest.winterers.winterfed.winterier.wintering.winterish.winterize.wintriest.wiredrawn.wiredraws.wiregrass.wirehairs.wirephoto.wireworks.wireworms.wiseacres.wiseasses.wisecrack.wiseliest.wisewoman.wisewomen.wishbones.wishfully.wispiness.wistarias.wisterias.wistfully.witchhood.witchiest.witchings.witchlike.witchweed.withdrawn.withdraws.witherers.withering.witherite.witherods.withholds.withstand.withstood.witlessly.witnessed.witnesser.witnesses.witticism.wittiness.wittingly.woadwaxen.woadwaxes.wobbliest.woebegone.woefuller.woenesses.wofullest.wolfberry.wolfhound.wolfishly.wolfsbane.wolverine.womanhood.womanised.womanises.womanisms.womanists.womanized.womanizer.womanizes.womankind.womanless.womanlier.womanlike.womanness.womenfolk.womenkind.wonderers.wonderful.wondering.woodbinds.woodbines.woodblock.woodborer.woodboxes.woodchats.woodchuck.woodcocks.woodcraft.woodenest.woodgrain.woodiness.woodlands.woodlarks.woodlores.woodnotes.woodpiles.woodruffs.woodsheds.woodsiest.woodstove.woodtones.woodwaxen.woodwaxes.woodwinds.woodworks.woodworms.woolfells.wooliness.woolliest.woolpacks.woolsacks.woolsheds.woolskins.woolworks.wooziness.wordbooks.wordiness.wordplays.wordsmith.workbench.workboats.workbooks.workboxes.workfares.workflows.workfolks.workforce.workhorse.workhours.workhouse.workloads.workmanly.workmates.workpiece.workplace.workprint.workrooms.worksheet.workshops.workspace.worktable.workweeks.workwoman.workwomen.worldbeat.worldlier.worldling.worldview.worldwide.wormgears.wormholes.worminess.wormroots.wormseeds.wormwoods.worriedly.worriment.worrisome.worriting.worrywart.worsening.worshiped.worshiper.worthiest.worthless.woundedly.woundless.woundwort.wranglers.wrangling.wrappings.wrassling.wrastling.wrathiest.wreathers.wreathing.wreckages.wreckings.wrenchers.wrenching.wrestlers.wrestling.wrigglers.wrigglier.wriggling.wrinklier.wrinkling.wristband.wristiest.wristlets wristlock.writeable.wrongdoer.wrongness.wrynesses.wulfenite.wurtzites.wuthering.wyandotte.wyliecoat.xanthates.xantheins.xanthenes.xanthines.xanthomas.xanthones.xenoblast.xenocryst.xenogenic.xenograft.xenoliths.xenophile.xenophobe.xenopuses.xerically.xeriscape.xeroderma.xerophile.xerophily.xerophyte.xeroseres.xylidines.xylocarps.xylograph.xylophage.xylophone.yabbering.yachtings.yachtsman.yachtsmen.yahooisms.yahrzeits.yakitoris.yammerers.yammering.yappingly.yardbirds.yardlands.yardstick.yardwands.yardworks.yarmelkes.yarmulkes.yataghans.yattering.yawmeters.yawningly.yeanlings.yearbooks.yearlings.yearnings.yeasayers.yeastiest.yeastless.yeastlike.yellowest.yellowfin.yellowing.yellowish.yeshivahs.yeshivoth.yesterday.yestereve.yestreens.yieldable.yodellers.yodelling.yoghourts.yohimbine.yokemates.yokozunas.yottabyte.youngling.youngness.youngster.youthened.ytterbias.ytterbium.ytterbous.yuckiness.yuletides.yumminess.yuppiedom.yuppieish.yuppified.yuppifies.zabaiones.zabajones.zamindari.zamindars.zapateado.zaratites.zarzuelas.zealously.zebrafish.zebrasses.zebrawood.zecchinos.zedoaries.zeitgeber.zeitgeist.zemindars.zemindary.zeppelins.zestfully.zettabyte.zeugmatic.zibelines.zibelline.ziggurats.zigzagged.zigzagger.zikkurats.zillionth.zincified.zincifies.zinfandel.zinkenite.zinkified.zinkifies.zippering.zircaloys.zirconias.zirconium.zitherist.zombified.zombifies.zombiisms.zonations.zonetimes.zoochores.zoogamete.zoogenies.zoogenous.zoogloeae.zoogloeal.zoogloeas.zoogloeic.zoography.zookeeper.zoolaters.zoologies.zoologist.zoomanias.zoometric.zoomorphs.zoophiles.zoophilia.zoophilic.zoophobes.zoophobia.zoophytes.zoophytic.zoosperms.zoospores.zoosporic.zoosterol.zootomies.zootomist.zucchetti.zucchetto.zucchinis.zugzwangs.zwiebacks.zygomatic.zygospore.zygotenes.zymogenes.zymogenic.zymograms.zymologic.zymolyses.zymolysis.zymolytic.zymometer.zymurgies.",
		() => ".aardwolves.abacterial.abandoners.abandoning.abasements.abashments.abatements.abbotships.abbreviate.abcoulombs.abdicating.abdication.abdicators.abdominals.abducentes.abductions.abductores.aberrances aberrantly.aberration.abeyancies.abhorrence.abiogenist.abjections.abjectness.abjuration.ablatively.abnegating.abnegation.abnegators.abnormally.abolishers.abolishing.abolitions.abominable.abominably.abominated.abominates.abominator.aboriginal.aborigines.abortively.aboveboard.abraidedly.abrasively.abreacting.abreaction.abridgment.abrogating.abrogation.abrogators.abruptions.abruptness.abscessing.abscission.absconders.absconding.absolutely.absolutest.absolution.absolutism.absolutist.absolutive.absolutize.absolvents.absorbable.absorbance.absorbancy.absorbants.absorbency.absorbents.absorption.absorptive.abstainers.abstaining.abstemious.abstention.absterging.abstinence.abstracted.abstracter.abstractly.abstractor.abstricted.abstrusely.abstrusest.abstrusity.absurdisms.absurdists.absurdness.abundances.abundantly.academical.academisms.acanthuses.acaricidal.acaricides.accedences.accelerant.accelerate.accentless.accentuate.acceptable.acceptably.acceptance.acceptedly.accessible.accessibly.accessions.accidences.accidental.accidently.accipiters.acclaimers.acclaiming.acclimated.acclimates.accolading.accomplice.accomplish.accordance.accordions.accoucheur.accountant.accounting.accoutered.accoutring.accredited.accretions.accruement.accumulate.accuracies.accurately.accursedly.accusation.accusative.accusatory.accusingly.accustomed.acephalous.acerbating.acerbities.acetabular.acetabulum.acetamides.acetanilid.acetifiers.acetifying.acetylated.acetylates.acetylenes.acetylenic.achalasias.achievable.achinesses.achondrite.achromatic.acidifiers.acidifying.acidimeter.acidimetry.acidnesses.acidophile.acidophils.acidulated.acidulates.acierating.acoelomate.acoustical.acquainted.acquiesced.acquiesces.acquirable.acquisitor.acquittals.acquitters.acquitting.acridities.acrimonies.acritarchs.acrobatics.acromegaly.acrophobes.acrophobia.acrospires.acrostical.acrylamide.actability.actinolite.actionable.actionably.actionless.activating.activation.activators.activeness.activistic.activities.activizing.actomyosin.actualized.actualizes.actuations.acuminated.acuminates.acyclovirs.acylations.adamancies.adamantine.adaptation.adaptively.adaptivity.addictions.additional.additively.additivity.addlepated.addressees.addressers.addressing.addressors.adductions.ademptions.adenitises.adenosines.adenoviral.adenovirus.adequacies.adequately.adherences.adherently.adhesional.adhesively.adhibiting.adipoceres.adipocytes.adjacences.adjacently.adjectival.adjectives.adjourning.adjudicate.adjunction.adjunctive.adjuration.adjuratory.adjustable.adjustment.admeasured.admeasures.administer.admiration.admiringly.admissible.admissions.admittance.admittedly.admixtures.admonished.admonisher.admonishes.admonition.admonitors.admonitory.adolescent adoptively.adorations.adornments.adrenaline.adrenalins.adrenergic.adroitness.adsorbable.adsorbates.adsorbents.adsorption.adsorptive.adulations.adulterant.adulterate.adulterers.adulteress.adulteries.adulterine.adulterous.adulthoods.adumbrated.adumbrates.advantaged.advantages.advections.adventitia.adventives.adventured.adventurer.adventures.adverbials.advertence.advertency.advertised.advertiser.advertises.advertized.advertizes.advisement.advisories.advocacies.advocating.advocation.advocative.advocators.aeciospore.aerenchyma.aerialists.aerobatics.aerobicize.aerobioses.aerobiosis.aerobraked.aerobrakes.aerodromes.aerogramme.aerologies.aerometers.aeronautic.aeronomers.aeronomies.aeronomist.aeropauses.aerophobes.aerophores.aerophytes.aeroplanes.aeropulses.aeroscopes.aerosolize.aerospaces.aesthesias.aesthetics.aestivated.aestivates.affability.affectable.affectedly.affections.affectless.afferently.affiancing.affidavits.affiliated.affiliates.affinities.affirmable.affirmance.affirmants.affixation.affixments.affixtures.afflatuses.afflicters.afflicting.affliction.afflictive.affluences.affluently.affordable.affordably.afforested.affricated.affricates.affrighted.affronting.aficionada.aficionado.aflatoxins.afterbirth.aftercares.afterclaps.afterdamps.afterdecks.afterglows.afterimage.afterlifes.afterlives.aftermaths.afternoons.afterpains.afterpiece.aftershave.aftershock.aftertaste.aftertimes.afterwards.afterwords.afterworld.agalactias.agapanthus.agatewares.agednesses.agendaless.agglutinin.aggrandise.aggrandize.aggravated.aggravates.aggregated.aggregates.aggressing.aggression.aggressive.aggressors.aggrieving.agitatedly.agitations.agoraphobe.agreements.agrimonies.agrologies.agronomies.agronomist airbrushed.airbrushes.aircoaches.airdropped.airfreight.airinesses.airlifting.airmailing.airmanship.airproofed.airstreams.airstrikes.aitchbones.alabasters.alacrities.alacritous.alarmingly.albertites.albinistic.albuminous.albuterols.alchemical.alchemists.alchemized.alchemizes.alcoholics.alcoholism.alderflies.aldermanic.alderwoman.alderwomen.alexanders.alfilarias.alfilerias.algaecides.algarrobas.algarrobos.algebraist.algidities.algolagnia.algologies.algologist.algometers.algorithms.alienating.alienation.alienators.alightment.alignments.alimentary.alimenting.alinements.aliterates.alizarines.alkahestic.alkalified.alkalifies.alkalinity.alkalinize.alkalising.alkalizers.alkalizing.alkaloidal.alkylating.alkylation.allantoids.allantoins.allargando.allegation.allegiance.allegiants.allegories.allegorise.allegorist.allegorize.allegretto.allemandes.allergenic.allergists.allethrins.alleviants.alleviated.alleviates.alleviator.alliaceous.alligators.alliterate.allocating.allocation.allocators.allocution.allogamies.allogamous.allogeneic.allografts.allographs.allometric.allomorphs.allopatric.allophanes.allophones.allophonic.alloplasms.allosaurus.allosteric.allotments.allotropes.allotropic.allotypies.allowables.allowanced.allowances.allurement.alluringly.allusively.almandines.almandites.almsgivers.almsgiving.almshouses.alogically.alongshore.alpenglows.alpenhorns.alpenstock.alphabeted.alphabetic.alphameric.alphosises.altarpiece.altazimuth.alteration.altercated.altercates.alterities.alternants.alternated.alternates.alternator.altigraphs.altimeters.altiplanos.altocumuli.altogether.altostrati.altruistic.aluminates.aluminiums.aluminized.aluminizes.alumstones.alveolarly.amalgamate.amantadine.amanuenses.amanuensis.amassments.amateurish.amateurism.amazements.amazonians.amazonites.ambassador.amberjacks.ambisexual.ambitioned.ambivalent.amblyopias.ambrotypes.ambulacral.ambulacrum.ambulances.ambulating.ambulation.ambulators.ambulatory.ambulettes.ambuscaded.ambuscader.ambuscades.ambushment.amebocytes.ameliorate.ameloblast.amendatory.amendments.amenorrhea.amercement.amerciable.americiums.ametropias.amiability.amiantuses.ammoniacal.ammoniated.ammoniates.ammonified.ammonifies.ammunition.amnestying.amoebiases.amoebiasis.amoebocyte.amoralisms.amorphisms.amortising.amortizing.ampersands.amphibians.amphibious.amphiboles.amphibrach.amphimacer.amphimixes.amphimixis.amphiphile.amphiploid.amphoteric.ampicillin.amplexuses.amplidynes.amplifiers.amplifying.amplitudes.amputating.amputation.amputators.amsinckias.amusements.amygdalins.amygdaloid.amylolytic.amyloplast amylopsins.amyotonias.anabaptism.anablepses.anabolisms.anachronic.anacolutha.anadromous.anaerobium.anageneses.anagenesis.anaglyphic.anagogical.anagrammed.analemmata.analeptics.analgesias.analgesics.analgetics.analogical.analogisms.analogists.analogized.analogizes.analphabet.analysands.analytical.analyzable.anamnestic.anamorphic.anapestics.anaplasias.anaplastic.anarchical.anarchisms.anarchists.anarthrias.anasarcous.anastigmat.anastomose.anastrophe anathemata.anatomical.anatomised.anatomises.anatomists.anatomized.anatomizes.anatropous.ancestored ancestress.ancestries.anchorages.anchorites.anchoritic.anchorless.anchovetas.anchovetta.anchylosed.anchyloses.ancientest.andalusite.andantinos.andouilles.andradites.androecium.androgenic.androgynes.andromedas.anecdotage.anecdotist.anemically.anemograph.anemometer.anemometry.anesthesia.anesthetic.anestruses.aneuploids.aneuploidy.aneurysmal.angelology.angiogenic.angiograms.angiosperm.anglerfish.anglesites.angleworms.anglicised.anglicises.anglicisms.anglicized.anglicizes.anglophone.angosturas.anguishing.angularity.angulating.angulation.anhedonias.anhydrides.anhydrites.anilinctus.animadvert.animalcula.animalcule.animaliers.animalisms.animalists.animalized.animalizes.animallike.animatedly.animations.animatisms.animatists.anisotropy.anklebones.ankylosaur.ankylosing.annalistic.annelidans.annexation.annihilate.annotating.annotation.annotative.annotators.announcers.announcing.annoyances.annoyingly.annualized.annualizes.annuitants.annulation.annulments.annunciate.anodically.anointment.anopheline.anorectics.anorthites.anorthitic.anovulants.answerable.antagonism.antagonist.antagonize.antalkalis.antebellum.antecedent.anteceding.antecessor.antechapel.antechoirs.antedating.antemortem.antennular.antennules.antependia.antepenult.anteriorly.anteverted.anthelices.anthelions.anthelixes.antheridia.anthocyans.anthozoans.anthracene.anthracite.anthropoid.anthuriums.antianemia.antiasthma.antiauxins.antibaryon.antibioses.antibiosis.antibiotic.antibodies.antibusers.antibusing.anticaking.anticancer.anticaries.antichlors.antichoice.antichurch.anticipant.anticipate.anticlimax.anticlinal.anticlines.anticodons.antidoting.antidromic.antielites.antiemetic.antierotic.antifamily.antifemale.antifreeze.antifungal.antigrowth.antiheroes.antiheroic.antiherpes.antihijack.antihunter.antiknocks.antilepton.antilifers.antilitter.antilogies.antimarket.antimatter.antimerger.antimodern.antimonial.antimonide.antimonies.antimonyls.antimusics.antimycins.antinature.antinausea.antinomian.antinomies.antinovels.antinukers.antipastos.antiphonal.antipiracy.antiplague.antiplaque.antipodals.antipodean.antipoetic.antipolice.antiproton.antipyrine.antiquarks.antiquated.antiquates.antirabies.antiracism.antiracist.antiradars.antireform.antisepses.antisepsis.antiseptic.antiserums.antisexist.antisexual.antishocks.antismoker.antisocial.antistatic.antistress.antistrike.antistyles.antitheses.antithesis.antithetic.antitoxins.antitrades.antitragus.antitumors.antivenins.antivenoms.antonymies.antonymous.anxiolytic.apartheids.apartments.apatosaurs.aphaereses.aphaeresis.aphaeretic.aphorising.aphoristic.aphorizers.aphorizing.aphrodites.apiculture.apiologies.apoapsides.apocalypse.apocarpies.apocopated.apocopates.apocryphal.apodeictic.apoenzymes.apolitical.apologetic.apologised.apologises.apologists.apologized.apologizer.apologizes.apophonies.apophthegm.apophyseal.apoplectic.apoplexies.aposematic apospories.aposporous.apostacies.apostasies.apostatise.apostatize.apostilles.apostolate.apostrophe.apothecary.apothecial.apothecium.apotheoses.apotheosis.apotropaic.appaloosas.appareling.apparelled.apparently.apparition.apparitors.appealable.appearance.appeasable.appellants.appendages.appendants.appendents.appendices.appendixes.apperceive.appertains.appetences.appetisers.appetising.appetitive.appetizers.appetizing.applauders.applauding.applecarts.applejacks.applesauce.appliances.applicable.applicants.applicator.appointees.appointers.appointing.appointive.appointors.apportions.appositely.apposition.appositive.appraisals.appraisees.appraisers.appraising.appraisive.appreciate.apprehends.apprentice.approached.approaches.approbated.approbates.approvable.approvably.aquafarmed.aquamarine.aquaplaned.aquaplaner.aquaplanes.aquarelles.aquatinted.aquatinter.aquiferous.aquilegias.aquilinity.arabesques.arabicized.arabicizes.arabinoses.arachnoids.aragonites.aragonitic.araucarian.araucarias.arbitrable.arbitraged.arbitrager.arbitrages.arbitrated.arbitrates.arbitrator.arboreally.arboretums.arborizing.arborvitae.arccosines.archaising.archaistic.archaizers.archaizing.archangels.archbishop.archdeacon.archegonia.archeology.archerfish.archetypal.archetypes.archfiends.archicarps.architects.architrave.archivists.archivolts.archnesses.archosaurs.archpriest.archrivals.arctangent.arctically.arcuations.arecolines.arenaceous.areologies.argentines.argentites.argillites.argumentum.arhatships.aridnesses.aristocrat.arithmetic.armadillos.armaturing.armigerous.armistices.armorially.aromatases.aromatized.aromatizes.arpeggiate.arquebuses.arraigners.arraigning.arrearages.arrestants.arrestment.arrhythmia.arrhythmic.arrivistes.arrogances.arrogantly.arrogating.arrogation.arrogators.arrowheads.arrowroots.arrowwoods.arrowworms.arsenicals.artemisias.arterially.arteriolar.arterioles.artfulness.arthralgia.arthralgic.arthritics.arthropods.artichokes.articulacy.articulate.artificers.artificial.artinesses.artistries.arytenoids.asafetidas.asafoetida.asbestoses.asbestosis.asbestuses.ascariases.ascariasis.ascendable.ascendance.ascendancy.ascendants.ascendence.ascendency.ascendents.ascendible.ascensions.ascertains.asceticism.asclepiads.ascocarpic.ascogonium.ascomycete.ascorbates.ascospores.ascosporic.ascribable.ascription.ascriptive.asexuality.ashinesses.asparagine.aspartames.aspartates.asperating.aspergilla.aspergilli.aspergills.asperities.aspersions.asphalting.asphaltite.asphaltums.aspherical.asphyxiate.aspidistra.aspirating.aspiration.aspirators.assagaiing.assailable.assailants.assaulters.assaulting.assaultive.assegaiing.assemblage.assemblers.assemblies.assembling.assertedly.assertions.assessable.assessment.asseverate.assignable.assignment.assimilate.assistance.assistants.associated.associates.assoilment.assonances.assonantal.assortment.assumpsits.assumption.assumptive.assurances.astarboard.asteriated.asterisked.asteroidal.asthmatics.astigmatic.astonished.astonishes.astounding.astrachans.astragalus.astrakhans.astricting.astringent.astringing.astrocytes.astrocytic.astrodomes.astrolabes.astrologer.astrometry.astronauts.astronomer.astronomic.astuteness.asymmetric.asymptotes asymptotic.asynchrony.asyndetons.ataractics.athanasies.athenaeums.atheromata.athrocytes.atmometers.atmosphere.atomically.atonalisms.atonalists.atonements.atrocities.atrophying.attachable.attachment.attainable.attainders.attainment.attainting.attempered.attempters.attempting.attendance.attendants.attendings.attentions.attenuated.attenuates.attenuator.attestants.atticizing.attornment.attractant.attracters.attracting.attraction.attractive.attractors.attributed.attributes.attritions.attritting.attunement.atypically.aubergines.aubrietias.auctioneer.auctioning.audacities.audibility.audiobooks.audiogenic.audiograms.audiologic.audiometer.audiometry.audiophile.audiotaped.audiotapes.audiphones.auditioned.auditories.auditorily.auditorium.augmenters.augmenting.augmentors.augustness.auralities.auriculars.auriculate.auriferous.auscultate.ausforming.auslanders.auspicated.auspicates.auspicious.austenites.austenitic.autarchies.autarkical.autarkists.autecology.auteurisms.auteurists.authorised.authorises.authorized.authorizer.authorizes.authorship.autobahnen.autobusses.autochthon.autoclaved.autoclaves.autocratic.autodidact.autoecious.autoecisms.autoerotic.autogamies.autogamous.autogenies.autogenous.autografts.autographs.autography.autoimmune.autologous.autolysate.autolysing.autolysins.autolyzate.autolyzing.automakers.automatics.automating.automation.automatism.automatist.automatize.automatons.automobile.automotive.autonomies.autonomist.autonomous.autophytes.autopilots.autopsists.autopsying.autorotate.autoroutes.autosexing.autostrada.autostrade.autotomies.autotomize.autotomous.autotoxins.autotrophs.autotrophy.autotypies.autoworker.autumnally.auxotrophs.auxotrophy.avalanched.avalanches.avaricious.aventurine.aventurins.averseness.aversively.avgolemono.avianizing.aviatrices.aviatrixes.aviculture.avidnesses.avocations.avoidances.avouchment.awakenings.awaynesses.awkwardest.axenically.axialities.axillaries.axiologies.axiomatize.axoplasmic.ayahuascas.ayatollahs.ayurvedics.azedarachs.azeotropes.babbitries.babbitting.babblement.babesioses.babesiosis.babirussas.babyproofs.babysitter.bacchanals.bacchantes.bacitracin.backbiters.backbiting.backbitten.backblocks.backboards.backchecks.backcloths.backcourts.backdating.backdrafts.backfields.backfilled.backfiring.backfitted.backgammon.background.backhanded.backhander.backhauled.backhoeing.backhouses.backlashed.backlasher.backlashes.backlights.backlisted.backloaded.backlogged.backpacked.backpacker.backpedals.backrushes.backshores.backslider.backslides.backspaced.backspaces.backsplash.backstages.backstairs.backstamps.backstitch.backstreet.backstroke.backswings.backswords.backtracks.backwardly backwashed.backwashes.backwaters.backwoodsy.bacteremia.bacteremic.bacterials.bacterized.bacterizes.bacteroids.badinaging.badmintons.badmouthed.bafflegabs.bafflement.bafflingly.bagatelles.bahuvrihis.bailiwicks.bairnliest.baitfishes.bakeapples.bakehouses.bakshished.bakshishes.balaclavas.balalaikas.balbriggan.baldachino.baldachins.baldaquins.balderdash.baldheaded.baldnesses.balkanized.balkanizes.balladeers.balladists.balladries.ballasters.ballasting.ballerinas.ballistics.ballooning.balloonist.ballplayer.ballpoints.ballyhooed.balmacaans.balneology.balustrade.bamboozled.bamboozles.banalities.banalizing.banderilla.banderoles.bandicoots.banditries.bandleader.bandmaster.bandoleers.bandoliers.bandoneons.bandshells.bandstands.bandwagons.bandwidths.banishment.banistered.bankrolled.bankroller.bankruptcy.bankrupted.bannerette.bannisters.banqueters.banqueting.banquettes.baptistery.barbarians.barbarisms.barbarized.barbarizes.barbascoes.barbecuers.barbecuing.barbequing.barberries.barbershop.barbitones.barcaroles.barcarolle.bardolater.bardolatry.barebacked.barefooted.barehanded.bareheaded.barenesses.bargainers.bargaining.bargeboard.barhopping.barkeepers.barkentine.barleycorn.barnstorms.baroceptor.barographs.barometers.barometric.baronesses.baronetage.baroscopes.barquettes.barrackers.barracking.barracoons.barracouta.barracudas.barramunda.barramundi.barratries.barrelages.barrelfuls.barrelhead.barrelling.barrelsful.barrenness.barretries.barricaded.barricades.barricados.barristers.bartenders.bartending.baseboards.baseliners.basenesses.baseplates.basicities.basketball.basketfuls.basketlike.basketries.basketsful.basketwork.basophiles.basophilia.basophilic.bassetting.bassnesses.bassoonist.bastardies.bastardise.bastardize.bastinaded.bastinades.batfowlers.batfowling.bathhouses.batholiths.bathwaters.bathymetry.bathyscaph.batrachian.battailous.battalions.battements.battlement.battleship.baudronses.bawdyhouse.bayberries.bayoneting.bayonetted.bazillions.beachballs.beachcombs.beachfront.beachgoers.beachheads.beadhouses.beadledoms.beanstalks.beastliest.beatifying.beatitudes.beautician.beautified.beautifier.beautifies.bebeerines.beblooding.becarpeted.beccaficos.bechalking.bechancing.becharming.beclamored.beclasping.becloaking.beclogging.beclothing.beclouding.beclowning.becomingly.becowarded.becquerels.becrawling.becrowding.becrusting.becudgeled.bedabbling.bedarkened.bedazzling.bedchamber.bedclothes.bedeafened.bedehouses.bedeviling.bedevilled.bedfellows.bediapered.bedighting.bedimpling.bedirtying.bedizening.bedlamites.bedraggled.bedraggles.bedrenched.bedrenches.bedriveled.bedrugging.bedspreads.bedsprings bedwarfing.bedwarmers.bedwetters.beechdrops.beechmasts.beechwoods.beefeaters.beefsteaks.beekeepers.beekeeping.befingered.beflagging.beflecking.beflowered.beforehand.beforetime.befretting.befriended.befringing.befuddling.beggardoms.beggarweed.beginnings.begirdling.begladding.beglamored.beglamours.beglooming.begrimming.begroaning.begrudgers.begrudging.behavioral.behaviours.beheadings.behindhand.bejeweling.bejewelled.bejumbling.beknighted.beknotting.belaboring.belaboured.beleaguers.belemnites.believable.believably.beliquored.belittlers.belittling.belladonna.belletrist.bellflower.bellwether.bellyached.bellyacher.bellyaches.bellybands.belongings.belowdecks.belvederes.bemadaming.bemaddened.bemedalled.bemingling.bemuddling.bemurmured.bemusement.bemuzzling.benchlands.benchmarks.benefactor.beneficent.beneficial.beneficing.benefiters.benefiting.benefitted.benevolent.bengalines.benignancy.bentonites.bentonitic.benzenoids.benzidines.benzocaine.benzofuran.bepainting.bepimpling.bequeathal.bequeathed.berascaled.berberines.berberises.beribboned.berkeliums.berserkers.berylliums.bescorched.bescorches.bescouring.bescreened.beseechers.beseeching.besetments.beshadowed.beshivered.beshouting.beshrewing.beshrouded.besmearers.besmearing.besmirched.besmirches.besmoothed.besmudging.besmutting.besoothing.bespangled.bespangles.bespatters.bespeaking.bespousing.besprinkle.besteading.bestialize.bestiaries.bestirring.bestrewing.bestridden.bestriding.bestrowing.bestseller.bestudding.beswarming.betattered.bethanking.bethinking.bethorning.bethumping.betokening.betrothals.betrotheds.betrothing.betterment.bevomiting.bewearying.bewildered.bewitchers.bewitchery.bewitching.beworrying.bewrapping.biannually.biasnesses.biathletes.biblically.biblicisms.biblicists.bibliology.bibliopegy.bibliopole.bibliotics.bibliotist.bibulously.bichromate.bicultural.bicyclists.bidonville.biennially.bifacially.bifidities.bifurcated.bifurcates.bigamously.bigarreaus.bigeminies.bigfooting.bighearted.bigmouthed.bijections.bijouterie.bilberries.bilections.bilgewater.bilharzial.bilharzias.bilinguals.bilirubins.biliverdin.billabongs.billboards.billfishes.billionths.billowiest.billycocks.bilocation.bimanually.bimetallic.bimodality.binational.binaurally.binoculars.binomially.binturongs.binucleate.bioassayed.biocenoses.biocenosis.biochemist.biocontrol.biodegrade.biodynamic.bioethical.biofoulers.biofouling.biogeneses.biogenesis.biogenetic.biographee.biographer.biographic.biohazards.biological.biologisms.biologists.biomarkers.biomedical.biometrics.biometries.biomimetic.biomorphic.bionomists.biophilias.biophysics.biopirates.biopolymer.bioreactor.bioregions.biorhythms.bioscience.bioscopies.biosensors.biospheres.biospheric.biostromes.bioterrors.bioweapons.biparental.bipartisan.bipedalism.bipedality.bipolarity.bipolarize.bipyramids.biradicals.birdbrains.birddogged.birdhouses.birdliming.birthdates.birthmarks.birthnames.birthplace.birthrates.birthright.birthroots.birthstone.birthworts.bisections.bisexually.bishoprics.bistouries.bisulfates.bisulfides.bisulfites.bitartrate.bitcheries.bitchiness.biteplates.bitstreams.bitterness.bitternuts.bitterroot.bitterweed.bituminize.bituminous.bivalences.bivouacked.biweeklies.bizarrerie.blabbering.blackamoor.blackballs.blackberry.blackbirds.blackboard.blackbucks.blackcocks.blackdamps.blackeners.blackening.blackfaces.blackflies.blackguard.blackheads.blackheart.blackjacks.blacklands.blackleads.blacklists.blackmails.blackpolls.blacksmith.blacksnake.blacktails.blackthorn.blackwater.blackwoods.bladdernut.blamefully.blancmange.blandished.blandisher.blandishes.blanketing.blanquette.blarneying.blasphemed.blasphemer.blasphemes.blastemata.blastments.blastocoel.blastocyst.blastoderm.blastodisc.blastomata.blastomere.blastopore.blatancies.blatherers.blathering.blattering.blazonings.blazonries.bleachable.bleariness.blemishers.blemishing.blessedest.blethering.blimpishly.blindfolds.blindingly.blindsided.blindsides.blindworms.blinkering.blissfully.blistering.blithering.blithesome.blitzkrieg.blizzardly.bloatwares.blockaders.blockading.blockbusts.blockheads.blockhouse.blondining.bloodbaths.bloodguilt.bloodhound.bloodiness.bloodlines.bloodlusts.bloodroots.bloodsheds.bloodstain.bloodstock.bloodstone.bloodworms.bloodworts.bloomeries.blossoming.blotchiest.bloviating.bloviation.blowfishes.blubberers.blubbering.bludgeoned.bluebeards.bluebloods.bluebonnet.bluebottle.bluefishes.bluejacket.blueliners.bluenesses.bluepoints.blueprints.blueshifts.bluestones.bluetongue.bluishness.blunderers.blundering.blurriness.blurringly.blushingly.blusterers.blustering.blusterous.boardrooms.boardwalks.boarfishes.boarhounds.boastfully.boathouses.boatlifted.boatswains.bobsledded.bobsledder.bobsleighs.bobtailing.bodyboards.bodychecks.bodyguards.bodysurfed.bodysurfer.boilersuit.boisterous.boldfacing.boldnesses.bolections.bolivianos.bolographs.bolometers.bolometric.bolsheviki.bolsheviks.bolshevism.bolshevize.bolsterers.bolstering.bombarders.bombardier.bombarding.bombardons.bombasters.bombazines.bombinated.bombinates.bombproofs.bombshells.bombsights.bondholder.bondstones.boneblacks.bonefishes.boneheaded.bonesetter.boninesses.booboisies bookbinder.bookkeeper.bookmakers.bookmaking.bookmarked.bookmarker.bookmobile.bookplates.bookseller.bookstalls.bookstands.bookstores.boomerangs.boondoggle.boosterism.bootblacks.bootlegged.bootlegger.bootlessly.bootlicked.bootlicker.bootstraps.borborygmi.bordereaux.borderland.borderline.borescopes.boringness.borrowings.boschvarks.botanicals.botanising.botanizers.botanizing.botcheries.bothersome.botryoidal.botrytises.bottlefuls.bottleneck.bottomland.bottomless.bottommost.bottomries.botulinums.boulderers.bouldering.boulevards.bouncingly.boundaries.bounderish.bourbonism.bourgeoise.bourgeoned.bouvardias.bovinities.bowdlerise.bowdlerize.bowerbirds.bowhunters.bowstrings.boxberries.boxhauling.boxinesses.boycotters.boycotting.boyfriends.boyishness.brachiated.brachiates.brachiator.brachiopod.bracketing.bracteoles.bradykinin.braillists.braincases.brainchild.braininess.brainpower.brainstems.brainstorm.brambliest.bramblings.branchiest.branchless.branchlets.branchline.brandished.brandishes.brandlings.brannigans.brasileins.brassbound.brasseries.brassieres.brassiness.brasswares.bratticing.brattiness.bratwursts.brawniness.brazenness.brazileins.brazilwood.breadboard.breadboxes.breadfruit.breadlines.breadroots.breadstuff.breakables.breakaways.breakdowns.breakevens.breakfasts.breakfront.breaksaway breakwalls.breakwater.breastbone.breastfeed.breastpins.breastwork.breathable.breathiest.breathings.breathless.brecciated.brecciates.breechings.breezeless.breezeways.breeziness.brevetcies.brevetting.breviaries.briarroots.briarwoods.brickfield.brickkilns.bricklayer.brickworks.brickyards.bricolages.bridegroom.bridesmaid.bridewells.bridgeable.bridgehead.bridgeless.bridgework.briefcases.brierroots.brierwoods.brigadiers.brigandage.brigandine.brigantine.brightened.brightener.brightness.brightwork.brilliance.brilliancy.brilliants.brimstones.bringdowns.briolettes.briquetted.briquettes.bristliest.britannias.brittanias.broadbands.broadbeans.broadbills.broadcasts.broadcloth.broadeners.broadening.broadlooms.broadscale.broadsheet.broadsided.broadsides.broadsword.broadtails.brocatelle.brochettes.brogueries.broiderers.broideries.broidering.brokenness.brokerages.brokerings.bromegrass.bromelains.bromeliads.brominated.brominates.brominisms.bronchiole.bronchites.bronchitic.bronchitis.brontosaur.broodiness.broodingly.broodmares.brooklimes.broomballs.broomcorns.broomrapes.broomstick.brothering.browallias.browbeaten.brownfield.brownnosed.brownnoser.brownnoses.brownshirt.brownstone.browridges.browsables.brummagems.brushbacks.brushfires.brushlands.brushwoods.brushworks.brusquerie.brutalised.brutalises.brutalized.brutalizes.brutifying.bryologies.bryologist.bryophytes.bryophytic.bubblegums.bubblehead.buccaneers.buccinator.buckboards.bucketfuls.bucketsful.buckhounds.bucklering.buckraming.buckthorns.buckwheats.buckyballs.buckytubes.budgerigar.budgeteers.buffaloing.bufflehead.buffoonery.buffoonish.bugleweeds.buhrstones.builddowns.bullbriers.bulldogged.bulldogger.bulldozers.bulldozing.bulletined.bullfights.bullheaded.bullnecked.bullrushes.bullsnakes.bulwarking.bumblebees.bumblingly.bumfuzzled.bumfuzzles.bumpkinish.bunchberry bunchgrass.bunglesome.bunglingly.bunkhouses.buoyancies.buprestids.burdensome.bureaucrat.burgeoning burglaries.burglarize.burgundies.burladeros.burlesqued.burlesquer.burlesques.burnishers.burnishing.burrstones.bursitises.burthening.bushellers.bushelling.bushmaster.bushranger.bushwhacks.businesses.busticated.busticates.bustlingly.busybodies.busynesses.butadienes.butcherers.butcheries.butchering.buteonines.butterball.butterburs.buttercups.butterfats.butterfish.butteriest.butterless.buttermilk.butternuts.butterweed.butterwort.buttinskis.buttonball.buttonbush.buttonhole.buttonhook.buttonless.buttonwood.buttressed.buttresses.buttstocks.butylating.butylation.byproducts.byssinoses.byssinosis.bystanders.cabalettas.cabalistic.caballeros.cabbalisms.cabbalists.cabdrivers.cabinmates.cablecasts.cablegrams.cabriolets.cacciatore.cachinnate.caciquisms.cacodemons.cacography.cacomistle.cacomixles.caconymies.cacuminals.cadaverine.cadaverous.caddisworm.cadetships.caducities.caecilians.caesareans.caesarians.caesarisms.caespitose.cafeterias.cafetorium.caginesses.cairngorms.cajolement.cajoleries.cakewalked.cakewalker.cakinesses.calabashes.calabooses.calamancos.calamander.calamaries.calamining.calamities.calamitous.calamondin.calcareous.calcicoles.calciferol.calcifuges.calcifying.calcimined.calcimines.calcinoses.calcinosis.calcitonin.calculable.calculated.calculates.calculator.calculuses.calendared.calendered.calenderer.calendulas.calentures.calibrated.calibrates.calibrator.caliginous.calipashes.calipering.caliphates.callboards.callipered.callithump.callousing.callowness.calmatives.calmnesses.calmodulin.calorizing.calumniate.calumnious.calvadoses.calvariums.camarillas.camcorders.camelbacks.camelhairs.camelopard.camerlengo.camisadoes.camorrista.camorristi.camorrists.camouflage.campaigned.campaigner.campaniles.campanulas.campcrafts.campesinos.campestral.campground.camphorate.campshirts.campstools.canalboats.canaliculi.canalising.canalizing.cancelable.cancellers.cancelling.cancellous.candelabra.candescent.candidates.candidness.candlefish.candlenuts.candlepins.candlewick.candlewood.candyfloss.candygrams.candytufts.canebrakes.caninities.cankerworm.cannabinol.cannabises.cannelloni.cannisters.cannonaded.cannonades.cannonball.cannoneers.cannonries.cannulated.cannulates.canonesses.canonicals.canonicity.canonising.canonizers.canonizing.canoodling.canorously.cantabiles.cantaloupe.cantaloups.cantatrice.cantatrici.cantilenas.cantilever.cantillate.cantonment.canulating.canvasback.canvaslike.canvassers.canvassing.canyoneers.canyonings.caoutchouc.capability.capacitate.capacities.capacitive.capacitors.caparisons.capitalise.capitalism.capitalist.capitalize.capitation.capitellum.capitulary.capitulate.caponizing.cappuccino.capriccios.capricious.caprioling.capsaicins.capsomeres.capsulated.capsulized.capsulizes.captaining.captioning.captiously.captivated.captivates.captivator.captoprils.carabineer.carabinero.carabiners.carabinier.caracolers.caracoling.caracolled.carambolas.caramelise.caramelize.caravaners.caravaning.caravanned.caravanner.caravelles.carbachols.carbamates.carbamides.carbamoyls.carbanions.carbazoles.carbineers.carbolized.carbolizes.carbonades.carbonados.carbonaras.carbonated.carbonates.carboniums.carbonized.carbonizes.carbonless.carbonnade carbonylic.carboxylic.carbuncled.carbuncles.carbureted.carburetor.carburised.carburises.carburized.carburizes.carcinogen.carcinoids.carcinomas.cardboards.cardholder.cardinally.cardiogram.cardiology.carditises.cardplayer.cardsharps.careerisms.careerists.carefuller.caregivers.caregiving.carelessly.caretakers.caretaking.carhopping.caricature.cariogenic.carjackers.carjacking.carmagnole.carnallite.carnassial.carnations.carnelians.carnifying.carnitines.carnivores.carnosaurs.carnotites.carotenoid.carotinoid.carpaccios.carpellary.carpellate.carpenters.carpetbags.carpetings.carpetweed.carpogonia.carpoolers.carpooling.carpophore.carpospore.carrageens.carragheen.carrefours.carritches.carronades.carrotiest.carrottops.carrousels.carrybacks.carryovers.cartelised.cartelises.cartelized.cartelizes.carthorses.cartilages.cartograms.cartooning.cartoonish.cartoonist.cartoppers.cartouches.cartridges.cartwheels.carvacrols.caryatides.cascarilla.caseations.casebearer.caseinates.caseworker.cashiering.cashpoints.cassations.casseroles.cassimeres.cassingles.cassoulets.castellans.castigated.castigates.castigator.castoreums.castraters.castrating.castration.castrators.castratory.casualness.casualties.casuarinas.catabolism.catabolite.catabolize.cataclysms.catafalque.catalectic.cataleptic.catalogers.cataloging.catalogued.cataloguer.catalogues.catalyzers.catalyzing.catamarans.catamenial.catamounts.cataphoras.cataphoric.cataphylls.cataplasms.catapulted.catarrhine.catatonias.catatonics.catcallers.catcalling.catchflies.catchments.catchpenny.catchpoles.catchpolls.catchwords.catecheses.catechesis.catechised.catechises.catechisms.catechists.catechized.catechizer.catechizes.catechumen.categories.categorise.categorize.catenaries.catenating.catenation.cateresses.caterwauls.catfacings.cathartics.cathecting.cathedrals.cathepsins.cathodally.catholicoi.catholicon.catholicos.catnappers.catnapping.caucussing.caudations.causalgias.causations.causatives.causewayed.causticity.cauterants.cauterized.cauterizes.cautionary.cautioners.cautioning.cautiously.cavalcades.cavaliered.cavalierly.cavalletti.cavalryman.cavalrymen.cavefishes.cavitating.cavitation.ceasefires.cedarbirds.cedarwoods.ceilometer.celandines.celebrants.celebrated.celebrates.celebrator.celerities.celestials.celestines.celestites.celibacies.cellarages.cellarette.cellarways.cellblocks.cellobiose.celloidins.cellophane.cellphones.cellulases.cellulites.cellulitis.celluloids.celluloses.cellulosic.cembalists.cementites.cemeteries.censorious.censorship.censurable.centaureas.centauries.centennial.centerfold.centerings.centerless.centerline.centesimal.centesimos.centigrade.centigrams.centiliter.centillion.centimeter.centipedes.centralest.centralise.centralism.centralist.centrality.centralize.centricity.centrifuge.centrioles.centromere.centrosome.centupling.centurions.cephalexin.cephalopod.ceramicist.cercarians.cerebellar.cerebellum.cerebrally.cerebrated.cerebrates.cerecloths.ceremonial.ceremonies.certainest.certifiers.certifying.certiorari.certitudes.ceruminous.cerussites.cervelases.cervicites.cervicitis.cessations.cetologies.cetologist.chabazites.chaetopods.chafferers.chaffering.chagrining.chagrinned.chainfalls.chainsawed.chainwheel.chairlifts.chairmaned.chairwoman.chairwomen.chalazions.chalcedony.chalcocite.chalcogens.chalkboard.challenged.challenger.challenges.chalumeaus.chalybeate.chambering.chameleons.chamferers.chamfering.chamfrains.chamoising.chamomiles.champagnes.champaigns.champignon.championed.champleves.chancellor.chanceries.chanciness.chancroids.chandelier.chandelled.chandelles.changeable.changeably.changeless.changeling changeover.channelers.channeling.channelize.channelled.chanteuses.chaparajos.chaparejos.chaparrals.chaperoned.chaperones.chapfallen.chaplaincy.chaptering.charabancs.characters.charactery.charbroils.charcoaled.chardonnay.chargeable.chargehand.chargrills.charioteer.charioting.charismata.charitable.charitably.charivaris.charladies.charlatans.charlottes.charmeuses.charminger.charmingly.charterers.chartering.chartreuse.chartulary.chassepots.chasteners.chasteness.chastening.chastisers.chastising.chastities.chatelaine.chatelains.chatoyance.chatoyancy.chatoyants.chatterbox.chatterers.chattering.chattiness.chauffeurs.chaussures.chautauqua.chauvinism.chauvinist.chawbacons.cheapeners.cheapening.cheapishly.cheapjacks.cheapskate.checkbooks.checkering.checklists.checkmarks.checkmated.checkmates.checkpoint.checkreins.checkrooms.checkrowed.cheechakos.cheekbones.cheekiness.cheerfully.cheeriness.cheerleads.cheesecake.cheesiness.chelaships.chelatable.chelations.chelicerae.cheliceral.chelonians.chemically.chemisette.chemisorbs.chemokines.chemosorbs.chemostats.chemotaxes.chemotaxis.chemurgies.cheongsams.chequering.cherimoyas.cherishers.cherishing.chernozems.cherrylike.cherublike.chessboard.chevaliers.chevelures.chiasmatic.chibouques.chicalotes.chiccories.chickadees.chickarees.chickening.chickenpox.chickories.chickweeds.chicnesses.chiefships.chieftains.chiffchaff.chiffonade.chiffonier.chifforobe.chihuahuas.chilblains.childbirth.childcares.childhoods.childishly.childliest.childproof.chiliarchs.chiliastic.chilliness.chillingly.chiltepins.chimaerism.chimerical.chimerisms.chimpanzee.chinaberry.chinawares.chincapins.chinchiest.chinchilla.chinkapins.chinquapin.chinstraps.chintziest.chinwagged.chionodoxa.chipboards.chippering.chirimoyas.chiromancy.chironomid.chiropters.chirruping.chirurgeon.chisellers.chiselling.chittering.chivalries.chivalrous.chivariing.chlamydiae.chlamydial.chloasmata.chloracnes.chloralose.chloramine.chlordanes.chlorellas.chlorinate.chlorinity.chloroform.choanocyte.chocoholic.chocolates.chocolatey.choiceness.choirgirls.chokeberry.chokebores.chokedamps.chokeholds.cholecysts.chondrites.chondritic.chondromas.chondrules.chopfallen.chophouses.choplogics.choppering.choppiness.chopsticks.choraguses.choreguses.choreiform.choristers.chorussing.chowdering.chowhounds.christened.chromaffin.chromatics.chromatids.chromatins.chromizing.chromogens chromomere.chromonema.chromophil.chromosome.chronaxies.chronicity.chronicled.chronicler.chronicles.chronogram.chronology.chrysalids.chrysolite.chrysotile.chubbiness.chuckholes.chuckwalla.chumminess.chuntering.churchgoer.churchiest.churchings.churchless.churchlier.churchyard.churlishly.cicatrices.cicatrixes.cicatrized.cicatrizes.cicisbeism.cigarettes.cigarillos.ciguateras.ciliations.cimetidine.cinchonine.cinchonism.cincturing.cinemagoer.cinematize.cinephiles.cinerarias.cinerarium.cinquefoil.ciphertext.cipollinos.circuities.circuiting.circuitous.circularly.circulated.circulates.circulator.circumcise.circumflex.circumfuse.circumvent.cirrhotics.cirripedes.cisplatins.citational.citizeness.citronella.citrulline.cityscapes.civilising.civilities.civilizers.civilizing.clabbering.cladistics.cladoceran.cladograms.cladophyll.clamberers.clambering.clamminess.clamouring.clampdowns.clamshells.clangoring.clangorous.clangoured.clankingly.clannishly.clapboards.clarifiers.clarifying.clarionets.clarioning.classicals.classicism.classicist.classicize.classified.classifier.classifies.classiness.classmates.classrooms.classworks.clathrates.clatterers.clattering.claughting.clavations.clavichord.clavicular.clavierist.clawhammer.claystones.claytonias.cleanliest.clearances.clearstory.clearweeds.clearwings.clematises.clemencies.clepsydrae.clepsydras.clerestory.clerically.clerkliest.clerkships.cleverness.clientages.clienteles.clientless.climatized.climatizes.climaxless.climbdowns.clingstone.clinically.clinicians.clinkering.clinometer.clinquants.clintonias.cliometric.clipboards.clipsheets.cliquishly.cliticized.cliticizes.clitorides.clitorises.cloakrooms.clobbering.clockworks.clodhopper.clofibrate.cloisonnes.cloistered.cloistress.clomiphene.clonidines.closedowns.closestool.closetfuls.clostridia.clothbound.clothespin.cloudberry.cloudburst.cloudiness.cloudlands.cloudscape.cloverleaf.clowneries.clownishly.clozapines.clubbiness.clubfooted.clubhauled.clubhouses.clumsiness.clustering.cluttering.cnidarians.coacervate.coachworks.coadjutors.coadjutrix.coadmiring.coadmitted.coagencies.coagulable.coagulants.coagulases.coagulated.coagulates.coalescent.coalescing.coalfields.coalfishes.coalifying.coalitions.coanchored.coannexing.coappeared.coaptation.coarseness.coarsening.coassisted.coassuming.coastguard.coastlands.coastlines.coastwards.coatimundi.coattended.coattested.coauthored.cobalamins.cobaltines.cobaltites.cobwebbier.cobwebbing.cocainisms.cocainized.cocainizes.cocaptains.cocatalyst.coccoliths.cochairing.cochairman.cochairmen.cochampion.cochineals.cockalorum.cockamamie.cockateels.cockatiels.cockatrice.cockbilled.cockchafer.cockeyedly.cockfights.cockhorses.cockleburs.cockneyish.cockneyism.cockscombs.cocksfoots.cocksurely.cockswains.cocktailed.cocomposer.cocoonings.cocounsels.cocozelles.cocreating.cocreators.cocultured.cocultures.cocurators.coderiving.codesigned.codevelops.codicology.codirected.codirector.codiscover.codominant.codswallop.coelacanth.coelentera.coelomates.coelostats.coembodied.coembodies.coemployed.coenacting.coenamored.coenduring.coenobites.coenocytes.coenocytic.coenosarcs.coequality.coequating.coercively.coercivity.coerecting.coetaneous.coevolving.coexecutor.coexerting.coexistent.coexisting.coextended.cofavorite.cofeatured.cofeatures.coffeecake.coffeepots.cofferdams.cofinanced.cofinances.cofounders.cofounding.cofunction.cogitating.cogitation.cogitative.cogitators.cognations.cognitions.cognizable.cognizably.cognizance.cognominal.cohabitant.cohabiters.cohabiting.coherences.coherently.cohesively.cohobating.cohomology.cohousings.coiffeuses.coiffuring.coincident.coinciding.coinfected.coinferred.coinhering.coinsurers.coinsuring.cointerred.cointreaus.coinvented.coinventor.coinvestor.colatitude.colcannons.colchicine.colchicums.colcothars.coldcocked.coldnesses.colemanite.coleoptera.coleoptile.coleorhiza.colickiest.colicroots.colicweeds.coliphages.collagists.collapsing.collarbone.collarless.collateral.collations.colleagues.collecting.collection.collective.collectors.collegians.collegiate.collegiums.collieries.colligated.colligates.collimated.collimates.collimator.collinsias.collisions.collocated.collocates.collodions.colloguing.colloquial.colloquies.colloquist.colloquium.collotypes.collusions.colluviums.collyriums.colobomata.colocating.colocynths.colombards.colonially.colonising.colonizers.colonizing.colonnaded.colonnades.coloration.coloratura.colorblind.colorbreed.colorcasts.colorectal.colorfully.coloristic.colorizers.colorizing.colorpoint.colossally.colosseums.colossuses.colostrums.colotomies.colpitises.colportage.colporteur.coltsfoots.columbaria.columbines.columbites.columbiums.columellae.columellar.columnists.comanagers.comanaging.comatulids.combatants.combatting.combinable.combusting.combustion.combustive.combustors.comedienne.comeliness.comestible.comforters.comforting.comicality.comingling.commandant.commandeer.commanders.commandery.commanding.commandoes.commencers.commencing.commendams.commenders.commending.commensals.commentary.commentate.commenters.commenting.commercial.commercing.commingled.commingles.comminuted.comminutes.commissars.commissary.commission.commissure.commitment.committals.committees.committing.commixture.commodious.commodores.commonages.commonalty.commonness.commonweal.commotions.communally.communards.communions.communique.communised.communises.communisms.communists.communized.communizes.commutable.commutated.commutates.commutator.comonomers.compacters.compactest.compacting.compaction.compactors.companions.companying.comparable.comparably.comparator.comparison.comparting.compassing.compassion.compatible.compatibly.compatriot.compeering.compellers.compelling.compendium.compensate.competence.competency.competitor.complacent.complained.complainer.complaints.complected.complement.completely.completers.completest completing.completion.completist.completive.complexest.complexify.complexing.complexion.complexity.compliance.compliancy.complicacy.complicate.complicity.compliment.complotted.components.comporting.composedly.composited.composites.compositor.composters.composting.composures.compounded.compounder.compradore.compradors.comprehend.compressed.compresses.compressor.comprisals.comprising.comprizing compromise.compulsion.compulsive.compulsory.computable.computists.concealers.concealing.concededly.conceiting.conceivers.conceiving.concenters.concentric.conception.conceptive.conceptual.concerning.concertina.concerting.concertino.concertize.concession.concessive.conchoidal.conchology.concierges.conciliate.concinnity.concisions.concluders.concluding.conclusion.conclusive.conclusory.concocters.concocting.concoction.concoctive.concoctors.concordant.concordats.concourses.concretely.concreting.concretion.concretism.concretist.concretize.concubines.concurrent.concurring.concussing.concussion.concussive.condemners.condemning.condemnors.condensate.condensers.condensing.condescend.condiments.conditions.condolence.condonable.conducting.conduction.conductive.conductors.condylomas.coneflower.confabbing.confecting.confection.confederal.conference.conferment.conferrals.conferrees.conferrers.conferring.confessing.confession.confessors.confidante.confidants.confidence.configured.configures.confirmand.confirmers.confirming.confiscate.confiteors.confitures.conflating.conflation.conflicted.confluence.confluents.confocally.conformers.conforming.conformism.conformist.conformity.confounded.confounder.confrontal.confronted.confronter.confusedly.confusions.congealers.congealing.congeneric.congenital.congesting.congestion.congestive.conglobate.conglobing.congregant.congregate.congressed.congresses.congruence.congruency.conicities.coniferous.conjecture.conjoiners.conjoining.conjointly.conjugally.conjugants.conjugated.conjugates.connations.connatural.connecters.connecting.connection.connective.connectors.connexions.conniption.connivance.conominees.conquerers conquering.conquerors.conscience.conscribed.conscribes.conscripts.consecrate.consensual.consenters.consenting.consequent.conservers.conserving.considered.consignees.consigners.consigning.consignors.consistent.consisting.consistory.consociate.consonance.consonancy.consonants.consorting.consortium.conspectus.conspiracy.conspirers.conspiring.constables.constantan.constantly.constative.constipate.constitute.constrains.constraint.constricts.constringe.construals.constructs.construers.construing.consuetude.consulates.consulship.consultant.consulters.consulting.consultive.consultors.consumable.consumedly.consummate.contactees.contacting.contactors contagions.contagious.containers.containing.contemners.contemning.contemnors.contenders.contending.contenting.contention.contestant.contesters.contesting.contextual.contexture.contiguity.contiguous.continence.continents.contingent.continuant.continuate.continuers.continuing.continuity.continuous.continuums.contorting.contortion.contortive.contouring.contraband.contrabass.contracted.contractor.contradict.contraltos.contrarian.contraries.contrarily.contrasted.contravene.contribute.contritely.contrition.contrivers.contriving.controlled.controller.controvert.contusions.conundrums.convalesce.convecting.convection.convective.convectors.convenient.conventing.convention.conventual.convergent.converging.conversant.conversely.conversers.conversing.conversion.converters.converting.convertors.conveyance.convicting.conviction.convincers.convincing.convoluted.convolutes.convolving.convolvuli.convulsant.convulsing.convulsion.convulsive.cookhouses.cookshacks.cookstoves.coolheaded.coolnesses.coonhounds.cooperages.cooperated.cooperates.cooperator.coordinate.coparcener.coparented.copartners.copayments.copestones.coplotting.copolymers.copperases.copperhead.copresents.coprisoner.coproduced.coproducer.coproduces.coproducts.coprolites.coprolitic.copromoter.coprophagy.copulating.copulation.copulative.copulatory.copurified.copurifies.copycatted.copyedited.copyholder.copyreader.copyrights.copywriter.coquetries.coquetting.coquettish.coralbells.coralberry.corallines.coralroots.corbeilles.corbelings.corbelling.corbiculae.cordelling.cordiality.cordierite.cordillera.cordlesses.cordonnets.corduroyed.cordwainer.coredeemed.corelating.coresident.coriaceous.corianders.corkboards.corkscrews.cormorants.cornbraids.cornbreads.corncrakes.cornelians.cornerback.cornerways.cornerwise.cornetcies.cornetists.cornettist.cornfields.cornflakes.cornflower.cornhusker.cornichons.cornifying.cornrowing.cornstalks.cornstarch.cornucopia.coromandel.coronaries.coronating.coronation.corotating.corotation.corporally.corporates.corporator.corporeity.corposants.corpulence.corpulency.corpuscles.corralling.corrasions.correctest.correcting.correction.corrective.correctors.correlated.correlates.correlator.correspond.corrigenda.corrigible.corroboree.corrodible.corrosions.corrosives.corrugated.corrugates.corrupters.corruptest.corrupting.corruption.corruptive.corruptors.corselette.corsetiere.corsetries.cortically.corticoids.cortisones.coruscated.coruscates.corybantes.corybantic.coryneform.coryphaeus.coscripted.coseismals.coseismics.cosinesses.cosmically.cosmogenic.cosmogonic.cosmolined.cosmolines.cosmonauts.cosmopolis.cosmotrons.cosponsors.costarring.costlessly.costliness.costmaries.costumiers.cotangents.cotillions.cotransfer.cotrustees.cotterless.cottonseed.cottontail.cottonweed.cottonwood.coturnixes.cotyledons.cotylosaur.couchettes.coulibiacs.coulometer.coulometry.coumarones.councillor.councilman.councilmen.councilors.counselees.counseling.counselled.counsellor.counselors.countdowns.counteract.counterbid.countercry.countering.counterion.counterman.countermen.counterspy.countersue.countertop.countesses.countryish.countryman.countrymen.coupledoms.couplement.couponings.courageous.courantoes.courgettes.courseware.courtesans.courtesied.courtesies.courtezans.courthouse.courtliest.courtrooms.courtships.courtsides.courtyards.couscouses.cousinages.cousinhood.cousinries.cousinship.couturiere.couturiers.covalences.covalently.covariance.covariates.covellines.covellites.covenantal.covenanted.covenantee.covenanter.covenantor.coveralled.coversines.coverslips.covertness.covertures.covetingly.covetously.cowardices.cowberries.cowcatcher.cowlstaffs.cowlstaves.cowpuncher.coxswained coyotillos.cozinesses.crabapples.crabeaters.crabsticks.crackajack.crackbacks.crackbrain.crackdowns.crackheads.crackliest.cracklings.cradlesong.craftiness.craftworks.cragginess.cramoisies.cranesbill.craniology.craniotomy.crankcases.crankiness.crankshaft.cranreuchs.crapshoots.crashingly.crassitude.craterings.craterlets.craterlike.craunching.cravenness.crawfished.crawfishes.crawlspace.crayfishes.crayonists.crazyweeds.creakiness.creameries.creaminess.creampuffs.creamwares.creaseless.creatinine.creatively.creativity.creaturely.credential.creditable.creditably.creepiness.cremations.crematoria.crenations.crenatures.crenelated.crenelates.crenelling.crenulated.creolising.creolizing.creosoting.crepitated.crepitates.crepuscles.crepuscule.crescendos.crescentic.crescively.cretinisms.crevassing.crewelwork.cribriform.cricketers.cricketing.criminally.criminated.criminates.crimsoning.crinkliest.crinolined.crinolines.crispbread.crispening.crispheads.crispiness.crisscross.criterions.criteriums.critically.criticised.criticises.criticisms.criticized.criticizer criticizes.critiquing.crocheters.crocheting.crockeries.crocodiles.croissants.crookbacks.crookedest.crookeries.crooknecks.croqueting.croquettes.crossbeams.crossbills.crossbones.crossbreds.crossbreed.crossbucks.crosscourt.crossfires.crosshairs.crosshatch.crossheads.crossjacks.crossovers.crosspatch.crosspiece.crossroads.crossruffs.crosstalks.crosstrees.crosswalks.crosswinds.crosswords.crotonbugs.croustades.crowbarred.crowkeeper.crucifiers.crucifixes.cruciforms.crucifying.crumbliest.crumblings.crumminess.crumpliest.crunchable.crunchiest.crushingly.crushproof.crustacean.crustiness.cryogenics.cryogenies.cryometers.cryophilic.cryophytes.cryoprobes.cryoscopes.cryoscopic.cryostatic.cryptogams.cryptogram.cryptology.cryptonyms.crystalize.ctenophore.cuadrillas.cubanelles.cubbyholes.cubicities.cuckolding.cuckoopint.cuddlesome.cudgelling.cuirassier.cuirassing.cuisinarts.culinarian.culinarily.cullenders.culminated.culminates.cultivable.cultivated.cultivates.cultivator.culturally.culturists.cumberbund.cumbersome.cumbrances.cumbrously.cummerbund.cumulating.cumulation.cumulative.cumuliform.cunctation.cunctative.cunctators.cuneiforms.cunningest.cupbearers.cupferrons.cupidities.curability.curanderas.curanderos.curarizing.curatively.curatorial.curbstones.curettages.curiousest.curlicuing.curlpapers.curmudgeon.currajongs.currejongs.currencies.curricular.curriculum.currieries.currijongs.currycombs.cursedness.curtailers.curtailing.curtaining.curtalaxes.curtilages.curtnesses.curtseying.curvaceous.curvacious.curvatures.curveballs.curvetting.cushioning.cussedness.custodians.customised.customises.customized.customizer.customizes cutability.cutcheries.cutenesses.cutgrasses.cutinising.cutinizing.cutthroats.cuttlebone.cuttlefish.cyanamides.cyanogenic.cyanotypes.cyanurates.cybercafes.cybercasts.cybernated.cybernates.cybernauts.cybernetic.cyberporns.cyberpunks.cybersexes.cyberspace.cybrarians.cycadeoids.cyclamates.cyclically.cyclizines.cyclodiene.cyclometer.cyclonites.cyclopedia.cyclopedic.cycloramas.cycloramic.cyclostome.cyclostyle.cyclotomic.cyclotrons.cylindered.cymbaleers.cymbalists.cymbidiums.cymographs.cymophanes.cyprinoids.cypripedia.cysteamine.cysticerci.cystinuria.cystitides.cystocarps.cystoceles.cystoliths.cystoscope.cystoscopy.cytochrome.cytogenies.cytokinins.cytologies.cytologist.cytolysins.cytopathic.cytophilic.cytoplasms.cytoplasts.cytostatic.cytotoxins.czarevitch.dachshunds.dacquoises.daftnesses.daggerlike.daintiness.dairymaids.dalliances.dalmatians.daltonisms.damagingly.damascened.damascenes.damaskeens.damnations.damnedests.damnifying.dampnesses.damselfish.dandelions.dandifying.dandyishly.danknesses.dapperness.daredevils.daringness.darknesses.darnations.darnedests.dartboards.dashboards.dasymeters.databasing.datelining.daundering.daunomycin.dauntingly.davenports.dawsonites.daydreamed.daydreamer.dayflowers.daylighted.daysprings dayworkers.dazzlingly.deaconries.deactivate.deadenings.deadheaded.deadlifted.deadlights.deadliness.deadlining.deadlocked.deadnesses.deadpanned.deadpanner.deadweight.deaerating.deaeration.deaerators.deafenings.deafnesses.dealations.dealership.dealfishes.deaminases.deaminated.deaminates.deaminized.deaminizes.dearnesses.deathblows.deathtraps.deathwatch.debarments.debasement.debatement.debauchees.debauchers.debauchery.debauching.debearding.debentures.debilitate.debilities.debonairly.debouching.debriefers.debriefing.debruising.debutantes.decadences.decadently.decahedron.decaliters.decalogues.decameters.decametric.decampment.decapitate.decapodans.decapodous.decathlete.decathlons.deceivable.decelerate.decelerons.decemviral.decenaries.decennials.decenniums.decentered.decentring.deceptions.deciliters.decilitres.decillions.decimalize.decimating.decimation.decimators.decimeters.decimetres.deciphered.decipherer.decisional.decisioned.decisively.deckhouses.declaimers.declaiming.declarable.declarants.declassify.declassing.declension.declinable.declinists.decoctions.decollated.decollates.decolletes.decolonize.decoloring.decolorize.decoloured.decomposed.decomposer.decomposes.decompound.decompress.decongests.decontrols.decorating.decoration.decorative.decorators.decorously.decoupaged.decoupages.decouplers.decoupling.decreasing.decrements.decrepitly.decrescent.decrowning.decrypting.decryption.decussated.decussates.dedicatees.dedicating.dedication.dedicators.dedicatory.deductible.deductions.deepfreeze.deepfrozen.deepnesses.deerhounds.deescalate.defacement.defalcated.defalcates.defalcator.defamation.defamatory.defaulters.defaulting.defeasance.defeasible.defeatisms.defeatists.defeatures.defecating.defecation.defecators.defections.defectives.defeminize.defenceman.defencemen.defendable.defendants.defenseman.defensemen.defensible.defensibly.defensives.deferences.deferments.deferrable.deficiency.deficients.defilading.defilement.definement.definienda.definitely.definition.definitive.definitize.definitude.deflagrate.deflations.deflecting.deflection.deflective.deflectors.deflexions.deflowered.deflowerer.defocusing.defocussed.defocusses.defoliants.defoliated.defoliates.defoliator.deforested.deformable.defraggers.defragging.defrauders.defrauding.defrayable.defrocking.defrosters.defrosting.deftnesses.defuelling.degaussers.degaussing.degendered.degeneracy.degenerate.degradable.degradedly.degreasers.degreasing.degressive.dehiscence.dehumanize.dehumidify.dehydrated.dehydrates.dehydrator deionizers.deionizing.dejectedly.dejections.dekaliters.dekalitres.dekameters.dekametres.dekametric.delaminate.delectable.delectably.delectated.delectates.delegacies.delegatees.delegating.delegation.delegators.delftwares.deliberate.delicacies.delicately.delighters.delightful.delighting.delimiters.delimiting.delineated.delineates.delineator.delinquent.deliquesce.deliverers.deliveries.delivering.delocalize.delphinium.deltoideus.delusional.delusively.delustered.demagogies.demagoging.demagogued.demagogues.demandable.demandants.demantoids.demarcated.demarcates.demeanours.dementedly.demergered.demeriting.demimondes.demissions.demitasses.demivoltes.demiworlds.demobilize.democratic.demodulate.demography.demoiselle.demolished.demolisher.demolishes.demolition.demonesses.demonetize.demoniacal.demonising.demonizing.demonology.demoralize.demounting.demulcents.demureness.demurrages.denaturant.denaturing.denazified.denazifies.dendriform.dendrimers.dendrogram.dendrology.denegation.denervated.denervates.denigrated.denigrates.denigrator.denitrated.denitrates.denizening.denominate.denotation.denotative.denotement.denouement.denouncers.denouncing.densifying.dentaliums.dentations.dentifrice.dentitions.denturists.denudating.denudation.denudement.deodorants.deodorized.deodorizer.deodorizes.deontology.deorbiting.deoxidized.deoxidizer.deoxidizes.depainting.department.departures.dependable.dependably.dependance.dependants.dependence.dependency.dependents.depeopling.depictions.depilating.depilation.depilators.depilatory.depletable.depletions.deplorable.deplorably.deployable.deployment.depolarize.depolished.depolishes.depopulate.deportable.deportment.depositary.depositing.deposition.depositors.depository.depravedly.deprecated.deprecates.depreciate.depredated.depredates.depredator.depressant.depressing.depression.depressive.depressors.deprograms.depurating.depurators.deputation.deputizing.deracinate.deraigning.derailleur.derailment.deregulate.deridingly.derisively.derivation.derivative.derivatize.dermatites.dermatitis.dermatogen.dermatomal.dermatomes.dermatoses.dermatosis.dermestids.derogating.derogation.derogative.derogatory.derringers.desalinate.desalinize.descanters.descanting.descendant.descendent.descenders.descending.descension.describers.describing.descriptor.desecrated.desecrater.desecrates.desecrator.deselected.desertions.deservedly.deservings.deshabille.desiccants.desiccated.desiccates.desiccator.desiderata.desiderate.designated.designates.designator.designedly.designings.designment.desilvered.desinences.desirables.desirously.desistance.desmosomal.desmosomes.desolately.desolaters.desolating.desolation.desolators.desorption.despairers.despairing.despatched.despatches.desperados.despicable.despicably.despiteful.despiteous.despoilers.despoiling.despondent.desponding.despotisms.despumated.despumates.desquamate.destaining.destituted.destitutes.destroyers.destroying.destructed.desuetudes.desugaring.desulfured.detachable.detachably.detachedly.detachment.detailedly.detailings.detainment.detasseled.detectable.detections.detectives.detentions.detentists.detergency.detergents.determents.determined.determiner.determines.deterrable.deterrence.deterrents.detersives.detestable.detestably.dethatched.dethatches.dethroners.dethroning.detonating.detonation.detonative.detonators.detoxicant.detoxicate.detoxified.detoxifies.detracting.detraction.detractive.detractors.detraining.detriments.detritions.detrusions.deuterated.deuterates.deuterides.deuteriums.deutoplasm.devaluated.devaluates.devastated.devastates.devastator.developers.developing.developpes.deviancies.deviations.devilishly.devilments.deviltries.devilwoods.devitalize.devocalize.devolution.devotement.devotional.devoutness.dewaterers.dewatering.dewberries.dewinesses.dextranase.dezincking.diableries.diabolical.diabolisms.diabolists.diabolized.diabolizes.diachronic.diaconates.diacritics.diadromous.diageneses.diagenesis.diagenetic.diagnosing.diagnostic.diagonally.diagraming.diagrammed.diakineses.diakinesis.dialectics.dialogical.dialogists.dialoguers.dialoguing.dialysates.dialyzable.dialyzates.diamagnets.diamonding.dianthuses.diapausing.diapedeses.diapedesis.diaphanous.diaphonies.diaphorase.diaphragms.diaphyseal.diaphysial.diarrhetic.diarrhoeas.diastemata.diathermic.diatomites.diazoniums.diazotized.diazotizes.dibromides.dicentrics.dichlorvos.dichondras.dichroisms.dichroites.dichromate.dichromats.dickcissel.diclinisms.dicoumarin.dicoumarol.dicrotisms.dictations.dictionary.dictyosome.dicumarols.dicynodont.didactical.didgeridoo.didjeridoo.didjeridus.didynamies.dielectric.dieselings.dieselized.dieselizes.diesinkers.diestruses.dieticians.dietitians.difference.difficulty.diffidence.diffracted.diffusible.diffusions.digastrics.digestible.digestions.digestives.digitalins.digitalize.digitately.digitizers.digitizing.digitonins.digitoxins.diglossias.dignifying.digressing.digression.digressive.dilapidate.dilatation.dilatators.dilatorily.dilemmatic.dilettante.dilettanti.diligences.diligently.dillydally.diltiazems.diluteness.dimensions.dimerizing.dimethoate.dimidiated.dimidiates.diminished.diminishes.diminuendo.diminution.diminutive.dimorphism.dimorphous.dingdonged.dinnerless.dinnertime.dinnerware.dinotheres.diosgenins.dipeptides.diphosgene.diphtheria.diphthongs.diphyletic.diphyodont.diplococci.diplodocus.diploidies.diplomaing.diplomates.diplomatic.diplophase.diplotenes.dipnetting.dipperfuls.dipsomania.directions.directives.directness.directress.directrice.direnesses.dirigibles.dirigismes.disability.disabusals.disabusing.disaccords.disaffects.disaffirms.disallowed.disappears.disappoint.disapprove.disarrange.disarrayed.disastrous.disavowals.disavowers.disavowing.disbanding.disbarment.disbarring.disbeliefs.disbelieve.disbenefit.disbosomed.disboweled.disbudding.disburdens.disbursals.disbursers.disbursing.discanting.discarders.discarding.discarnate.discepting.discerners.discerning.discharged.dischargee.discharger.discharges.discipline.discipling.disclaimed.disclaimer.disclosers.disclosing.disclosure.discolored.discolours.discomfits.discomfort.discommend.discommode.discompose.disconcert.disconfirm.disconnect.discontent.discophile.discordant.discording.discounted.discounter.discourage.discoursed.discourser.discourses.discovered.discoverer.discredits.discreeter.discreetly.discrepant.discretely.discretion.discrowned.discursive.discussant.discussers.discussing.discussion.disdainful.disdaining.diseconomy.disembarks.disembogue.disembowel.disemploys.disenabled.disenables.disenchant.disendowed.disendower.disengaged.disengages.disentails.disenthral.disentitle.disesteems.disfavored.disfavours.disfigured.disfigures.disfrocked.disfurnish.disgorging.disgracers.disgracing.disgruntle.disguisers.disguising.disgustful.disgusting.dishabille.disharmony.dishcloths.dishclouts.dishdashas.dishearten.dishelming.disherited.disheveled.dishonesty.dishonored.dishonorer.dishtowels.dishwasher.dishwaters.disincline.disinfects.disinfests.disinforms.disinherit.disinhibit.disinvests.disinvited.disinvites.disjecting.disjoining.disjointed.dislikable.dislimning.dislocated.dislocates.dislodging.disloyally.disloyalty.dismalness.dismantled.dismantles.dismasting.dismembers.dismissals.dismissing.dismission.dismissive.dismounted.disobeyers.disobeying.disobliged.disobliges.disordered.disorderly.disorients.disownment.disparaged.disparager.disparages.disparting.dispassion.dispatched.dispatcher.dispatches.dispellers.dispelling.dispending.dispensary.dispensers.dispensing.dispeopled.dispeoples.dispersals.dispersant.dispersers.dispersing.dispersion.dispersive.dispersoid.dispirited.dispiteous.displacers.displacing.displanted.displayers.displaying.displeased.displeases.disploding.displosion.displuming.disporting.disposable.dispossess.disposures.dispraised.dispraiser.dispraises.disprizing.disprovals.disprovers.disproving.disputable.disputably.disputants.disqualify.disquieted.disquietly.disregards.disrelated.disrepairs.disreputes.disrespect.disrooting.disrupters.disrupting.disruption.disruptive.disruptors.dissatisfy.disseating.dissecting.dissection.dissectors.disseisees.disseising.disseisins.disseisors.disseizees.disseizing.disseizins.disseizors.dissembled.dissembler.dissembles.dissension.dissenters.dissenting.dissention.dissertate.disserting.disservice.disserving.dissevered.dissidence.dissidents.dissimilar.dissipated.dissipater.dissipates.dissociate.dissoluble.dissolvent.dissolvers.dissolving.dissonance.dissuaders.dissuading.dissuasion.dissuasive.distaining.distancing.distasting.distelfink.distempers.distenders.distending.distension.distention.distichous.distillate.distillers.distillery.distilling.distincter.distinctly.distorters.distorting.distortion.distracted.distrained.distrainer.distrainor.distraints.distraught.distressed.distresses.distribute.districted.distrusted.disturbers.disturbing.disulfates.disulfides.disulfiram.disulfoton.disuniters.disunities.disuniting.disutility.disvaluing.disyllabic.disyllable.dithyrambs.divagating.divagation.divalences.divaricate.divebombed.divergence.divergency.diversions.divestment.divestures.divination.divinatory.divinising.divinities.divinizing.divisional.divisively.divulgated.divulgates.divulgence.divulsions.dizenments.dizzyingly.djellabahs.docilities.dockmaster.dockworker.doctorates.doctorless.doctorship.docudramas.documental.documented.documenter.dodecagons.dodgeballs.dogberries.dogcatcher.doggedness.doggoneder.doglegging.dogmatical.dogmatisms.dogmatists.dogmatized.dogmatizer.dogmatizes.dognappers.dognapping.dogrobbers.dogsbodies.dogsledded.dogsledder.dogtrotted.dogwatches.dolefuller.dollarized.dollarizes.dollhouses.dollybirds.dolomitize.dolorously.domiciling.dominances.dominantly.dominating.domination.dominative.dominators.dominatrix.domineered.dominicker.dominiques.donenesses.donkeywork.donnickers.donnybrook.donorships.doodlebugs.doohickeys.doohickies.doomsayers.doomsaying.doomsdayer.doorkeeper.doorplates.dopesheets.dopinesses.dorbeetles.dormancies.doronicums.dosimeters.dosimetric.dosshouses.doubleness doubletons.doubtfully.doubtingly.douchebags.doughfaces.doughtiest.douppionis.dournesses.dovetailed.dovishness.dowitchers.downbursts.downdrafts.downfallen.downforces.downgraded.downgrades.downhiller.downlights.downlinked.downloaded.downplayed.downscaled.downscales.downshifts.downsizing.downslides.downspouts.downstages.downstairs.downstater.downstates.downstream.downstroke.downswings.downthrows.downtowner.downtrends.downwardly.downwashes.downzoning.doxologies.dozinesses.drabnesses.draftiness.draggingly.dragonhead.dragooning.dragstrips.drainpipes.dramatised.dramatises.dramatists.dramatized.dramatizes.dramaturge.dramaturgs.dramaturgy draughtier.draughting.drawbridge.drawerfuls.drawknives.drawlingly.drawnworks.drawplates.drawshaves.drawstring.dreadfully.dreadlocks.dreamboats.dreamfully.dreaminess.dreamlands.dreamtimes.dreamworld.dreariness.dressiness.dressmaker.driftingly.driftwoods.drinkables.dripstones.drivelines.drivellers.drivelling.drivenness.driverless.driveshaft.drivetrain.drizzliest.drolleries.droopingly.dropcloths.dropforged.dropforges.dropkicker.droplights.dropperful.dropsondes.drosophila.droughtier.drouthiest.drowsiness.drudgeries.drudgingly.drugmakers.drugstores.druidesses.drumbeater.drumfishes.drumsticks.drupaceous.dryasdusts.drysalters.drysaltery.drywalling.dubitation.duckboards.duckwalked.duennaship.dulcifying.dulcimores.dullnesses.dullsville.dumbfounds.dumbnesses.dumbstruck.dumbwaiter.dumfounded.dumptrucks.dunderhead.dungeoning.duodecimal.duodecimos.duopsonies.duplicated.duplicates.duplicator.durability.duralumins.durometers.dustcovers.duststorms.duumvirate.dwarfishly.dyadically.dyeability.dynameters.dynamistic.dynamiters.dynamiting.dynamotors.dynorphins.dysarthria.dyscrasias.dysenteric.dysgeneses.dysgenesis.dyskinesia.dyskinetic.dyslectics.dyspepsias.dyspepsies.dyspeptics.dysphagias.dysphasias.dysphasics.dysphemism.dysphonias.dysphorias.dysplasias.dysplastic.dysprosium.dysthymias.dysthymics.dystrophic.eaglewoods.earlywoods.earmarking.earthbound.earthiness.earthliest.earthlight.earthlings.earthmover.earthquake.earthrises.earthshine.earthstars.earthwards.earthworks.earthworms.earwigging.earwitness.easinesses.easterlies.easterners.eavesdrops.ebullience.ebulliency.ebullition.eccentrics.ecchymoses.ecchymosis.ecchymotic.ecdysiasts.echeloning.echeverias.echinaceas.echinoderm.echiuroids.echolalias.eclampsias.eclipsises.ecological.ecologists.econoboxes.economical.economised.economises.economists.economized.economizer.economizes.ecospecies.ecospheres.ecosystems.ecotourism.ecotourist.ectoblasts.ectodermal.ectomorphs.ectoplasms.ectoprocts.ectotherms.ecumenical.ecumenisms.ecumenists.eczematous.edentulous.edginesses.edibleness.editorials.editorship.editresses.educations.edulcorate.eelgrasses.eerinesses.effaceable.effacement.effectives.effectuate.effeminacy.effeminate.efferently.effervesce.effeteness.efficacies.efficacity.efficiency.effloresce.effluences.effluviums.effluxions.effortless.effrontery.effulgence.effusively.eggbeaters.eglantines.egocentric.egoistical.egomaniacs.egressions.eicosanoid.eiderdowns.eigenmodes.eigenvalue.eightballs.eighteenth.eightieths.eisteddfod.ejaculator.ejectments.elaborated.elaborates.elasticity.elastomers.elatedness.elaterites.elateriums.elbowrooms.elderberry.eldercares.elderships.elecampane.electively.electorate.electrical.electrodes.electroing.electrojet.electronic.eledoisins.elegancies.elementals.elementary.eleoptenes.elevations.eliminated.eliminates.eliminator.ellipsoids.elliptical.elocutions.eloinments.elongating.elongation.elopements.eloquences.eloquently.elucidated.elucidates.elucidator.elucubrate.elutriated.elutriates.elutriator.eluviating.eluviation.emaciating.emaciation.emalangeni.emanations.emancipate.emarginate.emasculate.embalmment.embankment.embargoing.embarkment.embassages.embattling.embayments.embeddings.embedments.embezzlers.embezzling.embittered.emblazoned.emblazoner.emblazonry.emblematic.emblements.emblemized.emblemizes.embodiment.emboldened.embolismic.embonpoint.embordered.embosoming.embossable.embossment.embouchure.emboweling.embowelled.embowering.embraceors.embrangled.embrangles.embrasures.embrittled.embrittles.embrocated.embrocates.embroglios.embroiders.embroidery.embroilers.embroiling.embrowning.embryogeny.embryology.emendating.emendation.emendators.emergences.emetically.emigrating.emigration.eminencies.emissaries.emissivity.emittances.emmetropes.emollients.emoluments.empaneling.empanelled.empathetic.empathised.empathises.empathized.empathizes.empennages.emphasised.emphasises.emphasized.emphasizes.emphysemas.emphysemic.empiricism.empiricist.employable.employment.empoisoned.empowering.empurpling.emulations.emulsified.emulsifier.emulsifies.emulsoidal.enactments.enalaprils.enamelists.enamellers.enamelling.enamelware.enamouring.enantiomer.encampment.encapsuled.encapsules.encasement.encashable.encashment.encaustics.encephalon.enchaining.enchanters.enchanting.enchiladas.enchiridia.enciphered.encipherer.encircling.enclasping.enclosures.encomiasts.encounters.encouraged.encourager.encourages.encrimsons.encrinites.encroached.encroacher.encroaches.encrusting.encrypting.encryption.encumbered.encyclical.encystment.endamaging.endamoebae.endamoebas.endangered.endarchies.endearment.endeavored.endeavours.endemicity.endergonic.endobiotic.endoblasts.endocardia.endocrines.endodermal.endodermis.endodontic.endoenzyme.endogamies.endogamous.endogenies.endogenous.endolithic.endolymphs.endometria.endomorphs.endomorphy.endophytes.endophytic.endoplasms.endopodite.endoprocts.endorphins.endorsable.endoscopes.endoscopic.endosmoses.endosperms.endospores.endostyles.endosulfan.endothecia.endothelia.endotherms.endothermy.endotoxins.endowments.endplaying.endurances.enduringly.energetics.energising.energizers.energizing.energumens.enervating.enervation.enervators.enfeeblers.enfeebling.enfeoffing.enfettered.enfevering.enfilading.enfleurage.engagement.engagingly.engarlands.engendered.engineered.engineries.engirdling.englishing.englutting.engrafting.engrailing.engraining.engravings.engrossers.engrossing.engulfment.enharmonic.enjambment.enjoinders.enjoyments.enkephalin.enkindlers.enkindling.enlacement.enlightens.enlistment.enliveners.enlivening.enmeshment.enokidakes.enokitakes.enological.enologists.enormities.enormously.enraptured.enraptures.enravished.enravishes.enregister.enrichment.enrollment.enrolments.ensanguine.ensconcing.enscrolled.enserfment.ensheathed.ensheathes.enshrinees.enshrining.enshrouded.ensigncies.ensilaging.ensnarling.ensorceled.ensorcells.ensphering.enstatites.enswathing.entailment.entamoebae.entamoebas.entanglers.entangling.entelluses.enterocoel.enterprise.entertains.enthalpies.enthralled.enthroning.enthusiasm.enthusiast.enthymemes.enticement enticingly.entireness.entireties.entoblasts.entodermal.entodermic.entombment.entomology.entophytes.entoprocts.entourages.entrainers.entraining.entrancing.entrapment.entrappers.entrapping.entreaties.entreating.entrechats.entrecotes.entrenched.entrenches.entropions.entrusting.entwisting.enucleated.enucleates.enumerable.enumerated.enumerates.enumerator.enunciable.enunciated.enunciates.enunciator.enuresises.envelopers.enveloping.envenoming.environing.envisaging.envisioned.enwheeling.enwrapping.enwreathed.enwreathes.enzymology.eohippuses.eosinophil.epauletted.epaulettes.epeirogeny.epentheses.epenthesis.epenthetic.epexegeses epexegesis.epexegetic.ephedrines.ephemerals.ephemerids.ephemerons.epiblastic.epicalyces.epicalyxes.epicanthus.epicardial.epicardium.epicenisms.epicenters.epicentral.epicentrum.epicranium.epicureans.epicurisms.epicuticle.epicycloid.epidemical.epidendrum.epidermoid.epididymal.epididymis.epigastric.epigeneses.epigenesis.epigenetic.epigenists.epiglottal.epiglottic.epiglottis.epigonisms.epigrapher.epigraphic.epilations.epilepsies.epileptics.epileptoid.epilimnion.epiloguing.epimerases.epinasties.epinephrin.epineurium.epipelagic.epiphanies.epiphanous.epiphragms.epiphyseal.epiphysial.epiphytism.episcopacy.episcopate.episiotomy.episodical.episomally.epistasies.episternum.epistolary.epistolers.epistrophe.epitaphial.epithelial.epithelium.epithelize.epitomical.epitomised.epitomises.epitomized.epitomizes.epizootics.epizooties.epoxidized.epoxidizes.equability.equalisers.equalising.equalities.equalizers.equalizing.equanimity.equational.equatorial.equestrian.equilibria.equinities.equipments.equipoised.equipoises.equisetums.equitation.equivalent.equivocate.equivoques.eradiating.eradicable.eradicants.eradicated.eradicates.eradicator.erectility.eremitical.eremitisms.eremuruses.ergodicity.ergographs.ergometers.ergometric.ergonomics.ergonomist.ergonovine.ergosterol.ergotamine.ericaceous.eriophyids.erotically.eroticisms.eroticists.eroticized.eroticizes.erotogenic.errantries.erraticism.eructating.eructation.eruditions.eruptively.erysipelas.erythremia.erythrisms.erythrites.erythrosin.escadrille.escaladers.escalading.escalating.escalation.escalators.escalatory.escalloped.escaloping.escapement.escapology.escarpment.escharotic.escheating.escheators.escritoire.escutcheon.esophageal.esotropias.espadrille.espaliered.especially.esperances.espionages.esplanades.essayistic.essentials.estaminets.esterified.esterifies.esthesises.estimating.estimation.estimative.estimators.estivating.estivation.estivators.estoppages.estradiols.estrangers.estranging.estreating.estrogenic.esuriences.esuriently.eternalize.eternising.eternities.eternizing.ethambutol.ethereally.etherified.etherifies.etherizers.etherizing.ethicality.ethicizing.ethionines.ethnically.ethnologic.ethologies.ethologist.ethylating.etiolating.etiolation.etiologies.etiquettes.eucalyptol.eucalyptus.eucaryotes.eucharises.eudemonias.eudiometer.eugenicist.euglenoids.euglobulin.euhemerism.euhemerist.eukaryotes.eukaryotic.eulogising.eulogistic.eulogizers.eulogizing.eunuchisms.eunuchoids.euonymuses.eupatridae.euphausids.euphausiid.euphemised.euphemises.euphemisms.euphemists.euphemized.euphemizer.euphemizes.euphonious.euphoniums.euphonized.euphonizes.euphorbias.euphoriant.euphrasies.euphuistic.euplastics.euploidies.eurhythmic.eurybathic.euryhaline.eurypterid.eurytherms.eurythmics.eurythmies.eutectoids.euthanasia.euthanasic.euthanized.euthanizes.euthenists.eutherians.euthyroids.eutrophies.evacuating.evacuation.evacuative.evacuators.evaginated.evaginates.evaluating.evaluation.evaluative.evaluators.evanescent.evanescing.evangelism.evangelist.evangelize.evanishing.evaporated.evaporates.evaporator.evaporites.evaporitic.evenhanded.evennesses.eventfully.eventually.eventuated.eventuates.everduring.everglades.evergreens.everyplace.everything.everywhere.everywoman.everywomen.evidencing.evidential.evildoings.evilnesses.eviscerate.evocations.evolutions.evolvement.evonymuses.exacerbate.exactingly.exactitude.exaggerate.exahertzes.exaltation.examinable.examinants.exanthemas.exarchates.exasperate.excavating.excavation.excavators.excellence.excellency.excelsiors.exceptions.excerpters.excerpting.excerption.excerptors.exchangers.exchanging.exchequers.excipients.excisional.excitation.excitative.excitatory.excitement.excitingly.exclaimers.exclaiming.exclosures.excludable.excludible.exclusions.exclusives.excogitate.excoriated.excoriates.excrements.excrescent.excretions.excruciate.exculpated.exculpates.excursions.excursuses.excusatory.execrating.execration.execrative.execrators.executable.executants.executions.executives.exegetical.exegetists.exemptions.exenterate.exequaturs.exercisers.exercising.exercycles.exfoliants.exfoliated.exfoliates.exhalation.exhausters.exhausting.exhaustion.exhaustive.exhibiters.exhibiting.exhibition.exhibitive.exhibitors.exhibitory.exhilarate.exhumation.exigencies.exiguities.exiguously.existences.exobiology.exocytosed.exocytoses.exocytosis.exocytotic.exodontias.exodontist.exoenzymes.exogenisms.exonerated.exonerates.exonumists.exorbitant.exorcisers.exorcising.exorcistic.exorcizing.exospheres.exospheric.exosporium.exothermal.exothermic.exotically.exoticisms.exoticists.exoticness.exotropias.expandable.expansible.expansions.expatiated.expatiates.expatriate.expectable.expectably.expectance.expectancy.expectants.expectedly.expedience.expediency.expedients.expediters.expediting.expedition.expeditors.expellable.expellants.expellents.expendable.experience.experiment.expertises.expertisms.expertized.expertizes.expertness.expiations.expiration.expiratory.explainers.explaining.explanting.expletives.explicable.explicably.explicated.explicates.explicator.explicitly.exploiters.exploiting.exploitive.explosions.explosives.exportable.expositing.exposition.expositive.expositors.expository.expounders.expounding.expressage.expressers.expressing.expression.expressive.expressman.expressmen.expressway.expulsions.expunction.expurgated.expurgates.expurgator.exquisites.exscinding.exsections.exsertions.exsiccated.exsiccates.exsolution.extemporal.extendable.extendedly.extendible.extensible.extensions.extenuated.extenuates.extenuator.exteriorly.extermined.extermines.externally.externship.extincting.extinction.extinctive.extinguish.extirpated.extirpates.extirpator.extolments.extortions.extrabolds.extracting.extraction.extractive.extractors.extradited.extradites.extradoses.extralegal.extramural.extraneous.extraverts.extremisms.extremists.extricable.extricated.extricates.extroverts.extrudable.extrusions.extubating.exuberance.exuberated.exuberates.exudations.exultances.exultantly.exultation.exultingly.exurbanite.exuviating.exuviation.eyeballing.eyebrights.eyednesses.eyedropper.eyeglasses.eyeletting.eyeopeners.eyepoppers.eyestrains.eyestrings.eyewitness.fabricants.fabricated.fabricates.fabricator.fabulating.fabulators.fabulistic.fabulously.facecloths.facelifted.faceplates.facileness.facilitate.facilities.facsimiled.facsimiles.factiously.factitious.factorable.factorages.factorials.factorized.factorizes.factorship.factualism.factualist.factuality.faggotings.faggotries.faineances.fairground.fairleader.fairnesses.fairyhoods.fairylands.faithfully.falconries.faldstools.fallacious.fallboards.fallfishes.fallowness.falsefaces.falsehoods.falseworks.falsifiers.falsifying.familiarly.familistic.famishment.famousness.fanaticism.fanaticize.fancifully.fancifying.fancyworks.fanfolding.fantasised.fantasises.fantasists.fantasized.fantasizer.fantasizes.fantastico.fantastics.fantasying.fantoccini.faradising.faradizers.faradizing.farandoles.farcically.farewelled.farmerette.farmhouses.farmsteads.farmworker.farrieries.farsighted.fasciation.fascicular.fascicules.fasciculus.fascinated.fascinates.fascinator.fascitises.fashioners.fashioning.fastballer.fastenings.fastidious.fastigiate.fastigiums.fastnesses.fatalistic.fatalities.fatherhood.fatherland.fatherless.fatherlike.fathomable.fathomless.fatshedera.faultiness.favoritism.fearfuller.fearlessly.fearsomely.featherbed.featherier.feathering.featurette.febrifuges.fecklessly.feculences.fecundated.fecundates.federacies.federalese.federalism.federalist.federalize.federating.federation.federative.federators.feebleness.feedgrains.feedstocks.feedstuffs.feistiness.feldschers.felicitate.felicities.felicitous.felinities.fellations.fellmonger.fellnesses.fellowship.femaleness.feminacies.femininely.femininity.feminising.feministic.feminities.feminizing.fenderless.fenestrate.fenugreeks.feoffments.feracities.feretories.fermenters.fermenting.fermentors.ferocities.ferredoxin.ferrelling.ferretings.ferrocenes.ferrotyped.ferrotypes.ferryboats.fertilized.fertilizer.fertilizes.fervencies.fervidness.fescennine.festinated.festinates.festoonery.festooning.fetchingly.fetichisms.fetidities.fetishisms.fetishists.fetishized.fetishizes.fetologies.fetologist.fetoscopes.fettuccine.fettuccini.feudalisms.feudalists.feudalized.feudalizes.feuilleton.feverishly.feverroots.feverweeds.feverworts.fianchetti.fianchetto.fiberboard.fiberfills.fiberglass.fiberizing.fiberscope.fibreboard.fibrefills.fibreglass.fibrillate.fibrinogen.fibrinoids.fibroblast.fibrosites.fibrositis.fickleness.fictioneer.fictionist.fictionize.fictitious.fiddleback.fiddlehead.fidelismos.fidelistas.fidelities.fiducially.fieldfares.fieldpiece.fieldstone.fieldstrip.fieldworks.fiendishly.fierceness.fifteenths.figuration.figurative.figurehead.filariases.filariasis.filefishes.filiations.filibuster.fillagreed.fillagrees.fillisters.filmically.filmmakers.filmmaking.filmsetter.filmstrips.filoplumes.filopodium.filterable.filthiness.filtrating.filtration.fimbriated.finalising.finalities.finalizers.finalizing.financiers.financings.finenesses.fingerhold.fingerings.fingerlike.fingerling.fingernail.fingerpick.fingerpost.fingertips.finickiest.finiteness.finnickier.finocchios.fioraturae.fireballer.fireboards.firebombed.firebrands.firebreaks.firebricks.firedrakes.firefanged.firefights.firefloods.fireguards.firehouses.firelights.fireplaced.fireplaces.firepowers.fireproofs.firestones.firestorms.firethorns.firetrucks.firewaters.firmaments.firmnesses.firstborns.firstlings.fiscalists.fisherfolk.fishmonger.fishplates.fishtailed.fissioning.fistfights.fisticuffs.fitfulness.flabbiness.flabellate.flaccidity.flackeries.flagellant.flagellate.flagellins.flagellums.flageolets.flaggingly.flagitious.flagrances.flagrantly.flagstaffs.flagstaves.flagsticks.flagstones.flamboyant.flameproof.flamingoes.flammables.flannelets.flanneling.flannelled.flapdoodle.flarebacks.flashbacks.flashboard.flashbulbs.flashcards.flashcubes.flashiness.flashlamps.flashlight.flashovers.flashtubes.flatbreads.flatfishes.flatfooted.flatlander.flatliners.flatlining.flatnesses.flatteners.flattening.flatterers.flatteries.flattering.flatulence.flatulency.flatwashes.flauntiest.flavanones.flavonoids.flavorings.flavorists.flavorless.flavorsome.flavouring.flawlessly.fleahopper.flechettes.fledglings.fleeringly.fleetingly.flehmening.flemishing.fleshiness.fleshliest.fleshments.fletchings.flexitimes.flextimers.flichtered.flickering.flightiest.flightless.flimsiness.flintheads.flintiness.flintlocks.flippantly.flirtation.flittering.floatation.floatplane.flocculant.flocculate.flocculent.floodgates.floodlight.floodplain.floodtides.floodwalls.floodwater.floorboard.floorcloth.floorshows.flophouses.floppiness.florescent.floriation.floribunda.floricanes.floridness.florigenic.florilegia.flotations.flounciest.flouncings.floundered.flourished.flourisher.flourishes.flowcharts.flowerages.flowerette.floweriest.flowerless.flowerlike.flowerpots.flowmeters.flowstones.fluctuated.fluctuates.fluffiness.flugelhorn.fluidising.fluidities.fluidizers.fluidizing.flummeries.flummoxing.flunkyisms.fluoresced.fluorescer.fluoresces.fluoridate.fluorinate.fluorspars.fluoxetine.flustering.flutterers.fluttering.fluviatile.flyblowing.flybridges.flycatcher.flyrodders.flyspecked.flyswatter.flyweights.foamflower.focalising.focalizing.foliaceous.foliations.folklorish.folklorist.folksiness.folksinger.follicular.followings.fondnesses.fontanelle.foodstuffs.foolfishes.foolishest.footballer.footboards.footbridge.footcloths.footfaults.footlessly.footlights.footlocker.footnoting.footprints.footstalks.footstalls.footstocks.footstones.footstools.foraminous.forbearers.forbearing.forbidders.forbidding.forcefully.forcemeats.forearming.foreboders.forebodies.foreboding.forebrains.forecaddie.forecasted.forecaster.forecastle.forechecks.foreclosed.forecloses.forecourts.foredating.foredoomed.forefather.forefended.forefinger.forefronts.foregather.foreground.forehanded.forehooves.foreigners.foreignism.forejudged.forejudges.foreladies.forelocked.foremother.foreordain.forepassed.forerunner.foreseeing.foreshadow.foreshanks.foresheets.foreshocks.foreshores.foreshowed.foresights.forespeaks.forespoken.forestages.forestalls.forestland.forestries.foreswears.foretasted.foretastes.foreteller.foretokens.foretopman.foretopmen.forewarned.forfeiters.forfeiting.forfeiture.forfending.forgathers.forgetters.forgetting.forgivable.forgivably.forjudging.forklifted.forlornest.formalised.formalises.formalisms.formalists.formalized.formalizer.formalizes.formalness.formamides.formations.formatives.formatters.formatting.formidable.formidably.formlessly.formulated.formulates.formulator.formulisms.formulists.formulized.formulizes.fornicated.fornicates.fornicator.forsythias.fortalices.fortepiano.forthright.fortifiers.fortifying.fortissimi.fortissimo.fortitudes.fortnights.fortressed.fortresses.fortuities.fortuitous.fortunates.forwarders.forwardest.forwarding.foscarnets.fossickers.fossicking.fossilised.fossilises.fossilized.fossilizes.fosterages.fosterling.foulbroods.foulnesses.foundation.foundering.foundlings.fountained.fourpences.fourplexes.fourragere.foursquare.fourteener.fourteenth.foxhunters.foxhunting.foxinesses.foxtrotted.fozinesses.fractional.fractioned.fracturers.fracturing.fragmental.fragmented.fragrances.fragrantly.frambesias.framboises.frameshift.frameworks.franchised.franchisee.franchiser.franchises.franchisor.francizing.francolins.frangipane.frangipani.frankforts.frankfurts.franserias.fraternity.fraternize.fratricide.fraudsters.fraudulent.fraughting.fraxinella.freakiness.freakishly.freckliest.freebasers.freebasing.freeboards.freebooted.freebooter.freedwoman.freedwomen.freehanded.freeholder.freelanced.freelancer.freelances.freeloaded.freeloader.freemartin.freemasons.freenesses.freestones.freestyler.freestyles.freewheels.freewrites.freezingly.freightage.freighters.freighting.fremituses.frenziedly.frequences.frequented.frequenter.frequently.frescoists.fresheners.freshening.freshwater.fretboards.friability.friarbirds.fricandeau.fricandoes.fricasseed.fricassees.fricatives.frictional.friedcakes.friendless.friendlier.friendlies.friendlily.friendship.friezelike.frightened.frigidness.frigorific.fripperies.friskiness.fritillary.fritterers frittering.frivollers.frivolling.frizziness.frizzliest.frogfishes.froghopper.frolickers.frolicking.frolicsome.fromenties.frontality.frontcourt.frontlines.frontlists.frontpaged.frontpages.frontwards.frostbites.frostiness.frostlines.frostworks.frothiness.frowningly.frowstiest.frozenness.fructified.fructifies.frugivores.fruitarian.fruitcakes.fruiterers.fruitfully.fruitiness.fruitwoods.frumenties.frustrated.frustrates.frutescent.fugacities.fugitively.fulfillers.fulfilling.fulfilment.fulgurated.fulgurates.fulgurites.fuliginous.fullbloods.fullerenes.fullnesses.fulminated.fulminates.fumatories.fumblingly.fumigating.fumigation.fumigators.fumitories.functional.functioned.fundaments.fundraised.fundraiser.fundraises.funereally.fungicidal.fungicides.fungistats.funiculars.funnelform.funnelling.furanoside.furbearers.furbelowed.furbishers.furbishing.furcations.furloughed.furmenties.furnishers.furnishing.furnitures.furosemide.furrieries.furtherers.furthering.fusibility.fusilladed.fusillades.fusionisms.fusionists.fussbudget.fustigated.fustigates.fusulinids.futileness.futilities.futureless.futuristic.futurities.futurology.gabardines.gaberdines.gadgeteers.gadgetries.gadolinite.gadolinium.gadrooning.gadzookery.gaillardia.gaingiving.gainsayers.gainsaying.galabiyahs.galactoses.galactosyl.galantines.galavanted.galenicals.galingales.galivanted.gallamines.gallanting.galleasses.gallerying.galleryite.galliasses.gallicisms.gallicized.gallicizes.gallinules.gallivants.galliwasps.gallonages.gallopades.gallstones.galumphing.galvanised.galvanises.galvanisms.galvanized.galvanizer.galvanizes.gambolling.gamekeeper.gamenesses.gamesomely.gametangia.gametocyte.gaminesses.gangbanger.gangbuster.ganglionic.gangplanks.gangrening.gangrenous.gannisters.gantelopes.gantleting.garbageman.garbagemen.gardenfuls.garderobes.gargantuan.gargantuas.garibaldis.garishness.garlanding.garlickier.garlicking.garmenting.garnierite.garnisheed.garnishees.garnishers.garnishing.garnitures.garrisoned.garrotting.gasconaded.gasconader.gasconades.gasholders.gasometers.gaspereaux.gastnesses.gastrolith.gastronome.gastronomy.gastropods.gastrulate.gatehouses.gatekeeper.gatherings.gaucheness.gaucheries.gauffering.gauleiters.gauntleted.gavelkinds.gazehounds.gazetteers.gazillions.gearchange.gearshifts.gearwheels.gelatinize.gelatinous.gelidities.gelignites.gelsemiums.geminating.gemination.gemmations.gemologies.gemologist.gendarmery.genderized.genderizes.generalise.generalist.generality.generalize.generating.generation.generative.generators.generatrix.generosity.generously.geneticist.geniculate.genisteins.gentamicin.genteelest.genteelism.gentilesse.gentlefolk.gentleness.gentrified.gentrifier.gentrifies.genuflects.geobotanic.geocentric.geochemist.geocoronae.geocoronas.geodesists.geodetical.geognosies.geographer.geographic.geological.geologists.geologized.geologizes.geomancers.geomancies.geometrics.geometrids.geometries.geometrise.geometrize.geomorphic.geophagias.geophagies.geophysics.georgettes.geoscience.geothermal.geotropism.gerfalcons.geriatrics.germanders.germaniums.germanized.germanizes.germicidal.germicides.germinally.germinated.germinates.germplasms.gerundives.gesneriads.gestaltist.gestations.gesturally.gesundheit.geyserites.ghastfully.ghastliest.ghettoized.ghettoizes.ghostliest.ghostwrite.ghostwrote.ghoulishly.giantesses.giardiases.giardiasis.gibbetting.giftedness.gigacycles.gigantisms.gigglingly.gillnetted.gillnetter.gimballing.gimmicking.gingellies.gingerroot.gingersnap.gingivites.gingivitis.girandolas.girandoles.girlfriend.glaciating.glaciation.glaciology.gladdeners.gladdening.gladiators.gladnesses.gladsomely.gladsomest.gladstones.glamorised.glamorises.glamorized.glamorizer.glamorizes.glamouring.glamourize.glamourous.glancingly.glasshouse.glassiness.glassmaker.glasspaper.glasswares.glassworks.glassworms.glassworts.glauconite.glazieries.glegnesses.gleization.glibnesses.glidepaths.glimmering.glissaders.glissading.glissandos.glistening.glistering.glitchiest.glitterati.glittering.gloatingly.globalised.globalises.globalisms.globalists.globalized.globalizes.globetrots.glochidium.glomerular.glomerules.glomerulus.gloominess.glorifiers.glorifying.gloriously.glossarial.glossaries.glossarist.glossators.glossiness.gluconates.glucosides.glucosidic.gluinesses.glumnesses.glutamates.glutamines.gluttonies.gluttonous.glycerides.glyceridic.glycerines.glycolipid.glycolyses.glycolysis.glycolytic.glycosides.glycosidic.glycosuria.gnosticism.goalkeeper.goalmouths.goaltender.goatfishes.goatsucker.goddamming.goddamning.godfathers.godmothers.godparents.gofferings.goitrogens.goldbricks.goldeneyes.goldenness.goldenrods.goldenseal.goldfields.goldfishes.goldsmiths.goldstones.golliwoggs.gondoliers.gonenesses.goniometer.goniometry.gonococcal.gonococcus.gonophores.gonorrheal.gonorrheas.goodnesses.goodwilled.googolplex.goosanders.gooseberry.gooseflesh.goosefoots.goosegrass.gooseherds.goosenecks.gorbellies.gorgeously.gorgonians.gorgonized.gorgonizes.gorinesses.gormandise.gormandize.gospellers.gossippers.gossipping.gossipries.gothically.gothicisms.gothicized.gothicizes.governable.governance.governessy.government.gracefully.graciously.gradations.gradualism.gradualist.graduating.graduation.graduators.graecizing.graffitied.graffiting.graffitist.grainfield.graininess.gramercies.gramicidin.gramineous.grammarian.gramophone.granadilla.grandaunts.grandchild.granddaddy.grandmamas.grandniece.grandpapas.grandsires.grandstand.granduncle.grangerism.granoliths.granophyre.granulated.granulates.granulator.granulites.granulitic.granulomas.granuloses.granulosis.grapefruit.grapevines.graphemics.graphitize.grapholect.graphology.grapplings.graptolite.graspingly.grasslands.grassplots.grassroots.gratefully.graticules.gratifiers.gratifying.gratitudes.gratuities.gratuitous.gratulated.gratulates.gravelling.gravesides.gravesites.gravestone.graveyards.gravimeter.gravimetry.gravitases.gravitated.gravitates.gravitinos.graybeards.grayfishes.grayhounds.graynesses.graywackes.graywaters.greaseball.greaseless.greasewood.greasiness.greatcoats.greatening.grecianize.greediness.greenbacks.greenbelts.greenbrier.greeneries.greenfield.greenfinch.greenflies.greengages.greenheads.greenheart.greenhorns.greenhouse.greenlight.greenlings.greenmails.greenrooms.greensands.greenshank.greenstone.greenstuff.greensward.greenwings.greenwoods.gregarines.gregarious.grenadiers.grenadines.grewsomest.greyhounds greynesses.gridironed.gridlocked.grievances.grievously.grilleries.grillrooms.grillworks.grimalkins.grimnesses.grindelias.grinderies.grindingly.grindstone.grinningly.grippingly.grisailles.grisliness.gristliest.gristmills.grittiness.grizzliest.groggeries.grogginess.grommeting.grosgrains.grossulars.grotesques.grouchiest.groundfish.groundhogs.groundings.groundless.groundling.groundmass.groundnuts.groundouts.groundsels.groundsman.groundsmen.groundwood.groundwork.groupthink.groupwares.grovellers.grovelling.growliness.growlingly.growthiest.grubbiness.grubstaked.grubstaker.grubstakes.grudgingly.gruelingly.gruellings.gruesomely.gruesomest.grummeting.grumpiness.guacamoles.guacharoes.guanabanas.guanidines.guanosines.guaranteed.guarantees.guarantied.guaranties.guarantors.guardhouse.guardrails.guardrooms.guayaberas.gudgeoning.guerdoning.guerrillas.guessworks.guesthouse.guidebooks.guidelines.guideposts.guidewords.guidwillie.guildhalls.guildships.guilefully.guillemets.guillemots.guilloches.guillotine.guiltiness.guitarfish.guitarists.gulosities.gumshoeing.guncottons.gunfighter.gunkholing.gunnysacks.gunpowders.gunrunners.gunrunning.gunslinger.gustations.gutbuckets.guttations.gutterings.gymnasiums.gymnastics.gymnosperm.gynandries.gynandrous.gynarchies.gynecology.gyniatries.gynophobes.gynophores.gypsophila.gyrational.gyrfalcons.gyropilots.gyroplanes.gyroscopes.gyroscopic.habergeons.habiliment.habilitate.habitation.habitually.habituated.habituates.hacendados.haciendado.hackamores.hackmatack.hackneying.hacksawing.hadrosaurs.haematites.hagberries.haggadists.hagiologic.hagioscope.hailstones.hailstorms.haircloths.haircutter.hairpieces.hairsprays.hairspring.hairstreak.hairstyles.halachists.halakhists.halenesses.halfnesses.halftracks.hallelujah.hallmarked.halobionts.halocarbon.haloclines.halogenate.halogenous.halogetons.halophiles.halophilic.halophytes.halophytic.halothanes.hamadryads.hamantasch.hamburgers.hammerhead.hammerkops.hammerless.hammerlock.hammertoes.hamstrings.handbarrow.handbasket.handclasps.handcrafts handcuffed.handedness.handfasted.handicraft.handiworks.handleable.handlebars.handleless.handmaiden.handpicked.handprints.handseling.handselled.handshakes.handsomely.handsomest.handspikes.handspring.handstamps.handstands.handwheels.handworker.handwrites.hankerings.hanselling.hantavirus.haphazards.haphtarahs.haphtaroth.haploidies.haplotypes.happenings.haranguers.haranguing.harassment.harbingers.harborages harborfuls.harborless.harborside.harbouring.hardboards.hardbounds.hardcovers.hardenings.hardfisted.hardhanded.hardheaded.hardihoods.hardiments.hardnesses.hardstands.hardwiring.harlequins.harlotries.harmattans.harmlessly.harmonicas.harmonious.harmonised.harmonises.harmonists.harmoniums.harmonized.harmonizer.harmonizes.harnessing.harpooners.harpooning.harrumphed.harshening.hartebeest.hartshorns.harumphing.haruspices.harvesters.harvesting.harvestman.harvestmen.hasheeshes.hatchbacks.hatcheling.hatchelled.hatcheries.hatchlings.hatchments.hatemonger.haughtiest.hauntingly.hausfrauen.haustellum.haustorial.haustorium.haversacks.hawfinches.hawksbills.hawseholes.hawsepipes.hazinesses.headachier.headboards.headcheese.headcounts.headfishes.headhunted.headhunter.headlights.headliners.headlining.headmaster.headphones.headpieces.headspaces.headspring.headstalls.headstands.headstocks.headstones.headstream.headstrong.headwaiter.headwaters.healthiest.hearkeners.hearkening.heartaches.heartbeats.heartbreak.heartburns.hearteners.heartening.hearthrugs.heartiness.heartlands.heartsease.heartthrob.heartwoods.heartworms.heathbirds.heathendom.heathenish.heathenism.heathenize.heathlands.heatstroke.heavenlier.heavenward.hebdomadal.hebetating.hebetation.hebraizing.hectically.hectograms.hectograph.hectoliter.hectometer.hedonistic.heedlessly.heelpieces.heelplates.hegemonies.hegumenies heightened.heightisms.hektograms.heliacally.helicities.heliclines.helicoidal.heliconias.helicopted.helicopter.helictites.helilifted.heliograms.heliograph.heliolatry.heliometer.heliostats.heliotrope.heliotyped.heliotypes.heliozoans.hellacious.hellbender.hellbroths.helldivers.hellebores.hellenized.hellenizes.hellhounds.helmetlike.helminthic.helplessly.hemangioma.hematinics.hematocrit.hematology.hematomata.hematozoon.hematurias.hemelytron.hemelytrum.hemiacetal.hemialgias.hemicycles.hemihedral.hemiplegia.hemiplegic.hemipteran.hemisphere.hemistichs.hemitropes.hemizygous.hemocyanin.hemoglobin.hemolymphs.hemolysins.hemolyzing.hemophiles.hemophilia.hemophilic.hemoptyses.hemoptysis.hemorrhage.hemorrhoid.hemostases.hemostasis.hemostatic.hemotoxins.henceforth.henotheism.henotheist.henpecking.hepatizing.hepatocyte.hepatomata.heptachlor.heptagonal.heptameter.heraldists.heraldries.herbaceous.herbalisms.herbalists.herbariums.herbicidal.herbicides.herbivores.herculeses.hereabouts.hereafters.hereditary.heredities.heresiarch.heretofore.heretrices.heretrixes.heritrices.heritrixes.hermatypic.hermetical.hermetisms.hermetists.hermitages.hermitisms.hermitries.herniating.herniation.heroically.heroicized.heroicizes.heroicomic.heroinisms.herrenvolk.herstories.hesitances.hesitantly.hesitaters.hesitating.hesitation.hesitators.hesperidia.hesperidin.hessonites.hetaerisms.hetairisms.heteroatom.heterocyst.heterodoxy.heterodyne.heterogamy.heterogeny.heterogony.heteronomy.heteronyms.heterophil.heulandite.heuristics.hexachords.hexahedron.hexameters.hexaploids.hexaploidy.hexapodies.hexarchies.hexastichs.hexokinase.hibernated.hibernates.hibernator.hibiscuses.hiccoughed.hiccupping.hiddenites.hiddenness.hierarchal.hierarchic.hierodules.hieroglyph.hierophant.hierurgies.highballed.highbinder.highbrowed.highchairs.highfliers.highflyers.highhanded.highjacked.highlander.highlights.highnesses.hightailed.highwayman.highwaymen.hijackings hilarities.hillcrests.hillslopes.hindbrains.hindrances.hindshanks.hindsights.hinterland.hippiedoms.hippieness.hippocampi.hippodrome.hippogriff.hipsterism.hirselling.hirsutisms.hispanidad.hispanisms.histamines.histidines.histiocyte.histograms.histologic.histolyses.histolysis.historians.historical.histrionic.hitchhiked.hitchhiker.hitchhikes.hithermost.hitherward.hoactzines.hoarfrosts.hoarseness.hoarsening.hobblebush.hobbyhorse.hobgoblins.hobnailing.hobnobbers.hobnobbing.hodgepodge.hodoscopes.hokeypokey.hokinesses.hokypokies.holidayers.holidaying.holinesses.hollowares.hollowness.hollowware.hollyhocks.holocausts.holoenzyme.hologamies.holographs.holography.hologynies.holohedral.holophytes.holophytic.holstering.holystoned.holystones.homebodies.homecomers.homecoming.homeliness.homemakers.homemaking.homeoboxes.homeopaths.homeopathy.homeotherm.homeowners.homeplaces.homeported.homeschool.homestands.homesteads.homiletics.hominesses.hominizing.homocercal.homoerotic.homogamies.homogamous.homogenate.homogenies.homogenise.homogenize.homogenous.homogonies.homografts.homographs.homologate.homologies.homologize.homologous.homologues.homonymies.homonymous.homoousian.homophiles.homophobes.homophobia.homophobic.homophones.homophonic.homopteran.homosexual.homosocial.homozygote.homozygous.homunculus.honeybunch.honeycombs.honeyeater.honeyguide.honeymoons.honoraries.honorarily honorarium.honorifics.honourable.hoodedness.hoodlumish.hoodlumism.hoodooisms.hoodwinked.hoodwinker.hoofprints.hoopskirts.hootenanny.hopelessly.hopsacking.horehounds.horizontal.hormogonia.hormonally.hornblende.hornedness.hornstones.horologers.horologies.horologist.horoscopes.horrendous.horridness.horrifying.horsebacks.horsebeans.horseflesh.horseflies.horsehairs.horsehides.horselaugh.horsemints.horseplays.horsepower.horsepoxes horseraces.horseshits.horseshoed.horseshoer.horseshoes.horsetails.horseweeds.horsewhips.horsewoman.horsewomen.hosannaing.hospitable.hospitably.hostellers.hostelling.hostelries.hostessing.hotchpotch.hotdoggers.hotdogging.hotfooting.hothousing.hotpressed.hotpresses.houseboats.housebound.housebreak.housebroke.housecarls.houseclean.housecoats.housedress.houseflies.housefront.houseguest.households.housekeeps.houseleeks.houselling.housemaids.housemates.houseplant.houserooms.housewares.housewifey.housewives.houseworks.houstonias.hovercraft.hoverflies.huckabacks.huckstered.hugenesses.hullabaloo.humaneness.humanhoods.humanising.humanistic.humanities.humanizers.humanizing.humblebees.humbleness.humblingly.humbuggers.humbuggery.humbugging.humdingers.humectants.humidified.humidifier.humidifies.humidistat.humidities.humiliated.humiliates.humilities.hummocking.humoresque.humoristic.humorously.humpbacked.hunchbacks.hundredths.hungriness.huntresses.hurricanes.husbanders.husbanding.husbandman.husbandmen.hyaloplasm.hybridisms.hybridists.hybridized.hybridizer.hybridizes.hybridomas.hydathodes.hydrangeas.hydrations.hydraulics.hydrazides.hydrazines.hydrocasts.hydroceles.hydrocrack.hydrofoils.hydrolases.hydrologic.hydrolyses.hydrolysis.hydrolytes.hydrolytic.hydrolyzed.hydrolyzes.hydromancy.hydrometer.hydroniums.hydropaths.hydropathy.hydrophane.hydrophone.hydrophyte.hydroplane.hydroponic.hydropower.hydropsies.hydroseres.hydrosolic.hydrospace.hydrostats.hydroxides.hydroxylic.hydrozoans.hygienists.hygrograph.hygrometer.hygrophyte.hygrostats.hylozoisms.hylozoists.hymeneally.hymnodists.hypabyssal.hypaethral.hypallages.hypanthium.hyperacute.hyperalert.hyperaware.hyperbaric.hyperbolae.hyperbolas.hyperboles.hyperbolic.hypercubes.hyperemias.hypergolic.hyperlinks.hypermania.hypermanic.hypermedia.hypermeter.hyperopias.hyperplane.hyperploid.hyperpneas.hyperpneic.hypersonic.hyperspace.hypertense.hypertexts.hypertonia.hypertonic.hyphenated.hyphenates.hyphenless.hypnagogic.hypnogogic.hypnotisms.hypnotists.hypnotized.hypnotizes.hypoblasts.hypocausts.hypocenter.hypocorism.hypocotyls.hypocrites.hypodermal.hypodermas.hypodermic.hypodermis.hypogynies.hypogynous.hypolimnia.hypomanias.hypomanics.hypomorphs.hyponymies.hypophyses.hypophysis.hypoplasia.hypoploids.hypostases hypostasis.hypostatic.hypostomes.hypostyles.hypotactic.hypotenuse.hypotheses.hypothesis.hypotonias.hypoxemias.hypsometer.hystereses.hysteresis.hysteretic.hysterical.iatrogenic.ibuprofens.iceboaters.iceboating.icebreaker.ichneumons.ichnolites.ichthyoids.ickinesses.iconically.iconoclasm.iconoclast.iconolatry.iconoscope.icosahedra.idealising.idealistic.idealities.idealizers.idealizing.idealogies.idealogues.ideational.idempotent.identified.identifier.identifies.identities.ideogramic.ideographs.ideography.ideologies.ideologist.ideologize.ideologues.ideophones.idioblasts.idiolectal.idiopathic.idioplasms.idlenesses.idolatries.idolatrous.idoneities.iffinesses.ignescents.ignimbrite.ignobility.ignominies.ignorances.ignorantly.iguanodons.illatively.illaudable.illaudably.illegality.illegalize.illiteracy.illiterate.illuminant.illuminate.illuminati.illumining.illuminism.illuminist.illusional.illusively.illusorily.illustrate.illuviated.illuviates.imaginable.imaginably.imbalanced.imbalances.imbecility.imbibition.imbittered.imboldened.imbosoming.imbowering.imbricated.imbricates.imbroglios.imbrowning.imbuements.imidazoles.imipramine.imitations.immaculacy.immaculate.immanences.immanently.immaterial.immaturely.immaturity.immemorial.immersible.immersions.immigrants.immigrated immigrates.imminences.imminently.immingling.immiscible.immittance.immixtures.immobilism.immobility.immobilize.immoderacy.immoderate.immodestly.immolating.immolation.immolators.immoralism.immoralist.immorality.immortally.immortelle.immovables.immunising.immunities.immunizers.immunizing.immunoblot.immunogens.immunology.immurement.impactions.impainting.impairment.impalement.impalpable.impalpably.impaneling.impanelled.imparadise.imparities.impartible.impartibly.impartment.impassable.impassably.impassible.impassibly.impassions.impatience.impeachers.impeaching.impearling.impeccable.impeccably.impedances.impediment.impellents.impenitent.imperative.imperators.imperfects.imperially.imperiling.imperilled.impersonal.impervious.impetrated.impetrates.impishness.implacable.implacably.implanters.implanting.impleaders.impleading.impledging.implements.impletions.implicated.implicates.implicitly.implosions.implosives.impolicies.impolitely.importable.importance.importancy.importuned.importuner.importunes.imposingly.imposition.impossible.impossibly.imposthume.impostumes.impostures.impotences.impotently.impounders.impounding.impoverish.impowering.imprecated.imprecates.impregnant.impregnate.impregning.impresario.impressing.impression.impressive.impressure.imprimatur.imprinters.imprinting.imprisoned.improbable.improbably.impromptus.improperly.improvable.improvised.improviser.improvises.improvisor.imprudence.impudences.impudently.impudicity.impugnable.impuissant.impulsions.impunities.impureness.impurities.imputation.imputative.inaccuracy.inaccurate.inactivate.inactively.inactivity.inadequacy.inadequate.inamoratas.inamoratos.inanitions.inapparent.inapposite.inaptitude.inarguable.inarguably.inartistic.inaugurals.inaugurate.inbounding.inbreathed.inbreathes.inbreeders.inbreeding.incandesce.incapacity.incarnated.incarnates.incautions.incautious.incendiary.incentives.inceptions.inceptives.incessancy.incestuous.inchoately.inchoative.incidences.incidental.incinerate.incipience.incipiency.incisively.incitation.incitement.incivility.inclasping.inclemency.inclinable.inclinings.inclipping.inclosures.includable.includible.inclusions.incogitant.incognitas.incognitos.incoherent.incommoded.incommodes.incomplete.inconstant.incorpsing.increasers.increasing.incredible.incredibly.increments.increscent.incretions.incrossing.incrusting.incubating.incubation.incubative.incubators.incubatory.inculcated.inculcates.inculcator.inculpable.inculpated.inculpates.incumbency.incumbents.incumbered.incunables.incunabula.incurables.incurrence.incursions.incurvated.incurvates.indagating.indagation.indagators.indecenter.indecently.indecision.indecisive.indecorous.indecorums.indefinite.indelicacy.indelicate.indentions.indentured.indentures.indexation.indexicals.indicating.indication.indicative.indicators.indicatory.indictable.indictions.indictment.indigences.indigenize.indigenous.indigested.indigotins.indinavirs.indirectly.indiscreet.indisposed.indisposes.indistinct.individual.indocility.indolences.indolently.indophenol.indraughts.inducement.inductance.inductions.indulgence.indurating.induration.indurative.industrial.industries.indwellers.indwelling.inearthing.inebriants.inebriated.inebriates.ineducable.inefficacy.inelegance.ineligible.ineloquent.ineludible.ineptitude.inequality.inequities.inertially.inevitable.inevitably.inexistent.inexorable.inexorably.inexpertly.inexpiable.inexpiably.inexplicit.infallible.infallibly.infamously.infantries.infarction.infatuated.infatuates.infeasible.infections.infectious.infelicity.infeoffing.inferences.inferiorly.infernally.inferrible.infestants.infibulate.infidelity.infielders.infighters.infighting.infiltrate.infinitely.infinities.infinitive.infinitude.infixation.inflatable.inflations.inflecting.inflection.inflective.inflectors.inflexible.inflexibly.inflexions.inflicters.inflicting.infliction.inflictive.inflictors.influenced.influences.influenzal.influenzas.informally.informants.informedly.infracting.infraction.infractors.infrahuman.infrasonic.infrequent.infringers.infringing.infuriated.infuriates.infusorian.ingathered.ingestible.ingestions.inglenooks.inglorious.ingrafting.ingraining.ingratiate.ingredient.ingression.ingressive.inhabitant.inhabiters.inhabiting.inhalation.inhalators.inharmonic.inherences.inherently.inheriting.inheritors.inheritrix.inhibiters.inhibiting.inhibition.inhibitive.inhibitors.inhibitory.inholdings.inhumanely.inhumanity.inhumation.inimically.inimitable.inimitably.iniquities.iniquitous.initialers.initialing.initialism.initialize.initialled.initiating.initiation.initiative.initiators.initiatory.injectable.injectants.injections.injunction.injunctive.injustices.inkberries.inkinesses.innateness.innermosts.innersoles.innervated.innervates.innkeepers.innocences.innocenter.innocently.innominate.innovating.innovation.innovative.innovators.innovatory.innuendoed.innuendoes.innumeracy.innumerate.innumerous.inoculants.inoculated.inoculates.inoculator.inoperable.inordinate.inosculate.inpatients.inpourings.inquieting.inquietude.inquilines.inquisitor.inrushings.insaneness.insanitary.insanities.insatiable.insatiably.inscribers.inscribing.inscrolled.insculping.insecurely.insecurity.inselberge.inselbergs.inseminate.insensible.insensibly.insentient.insertions.insheathed.insheathes.inshrining.insightful.insinuated.insinuates.insinuator.insipidity.insistence.insistency.insobriety.insociable.insociably.insolating.insolation.insolences.insolently.insolubles.insolvable.insolvably.insolvency.insolvents.insomniacs.insouciant.inspanning.inspecting.inspection.inspective.inspectors.insphering.inspirator.inspirited.inspissate.installers.installing.instalment.instancies.instancing.instarring.instigated.instigates.instigator.instillers.instilling.instituted.instituter.institutes institutor.instructed.instructor.instrument.insufflate.insularism.insularity.insulating.insulation.insulators.insurances.insurgence.insurgency.insurgents.inswathing.intactness.intaglioed.intangible.intangibly.integrable.integrally.integrands.integrants.integrated.integrates.integrator.integument.intellects.intendance.intendants.intendedly.intendment.intenerate.intensions.intensives.intentions.intentness.interabang.interacted.interbasin.interbreed.intercaste.interceded.interceder.intercedes.intercepts.interchain.interclass.intercrops.intercross.interdicts.interested.interfaced.interfaces.interfaith.interfered.interferer.interferes.interferon.interfiber.interfiled.interfiles.interflows.interfluve.interfolds.interfused.interfuses.intergrade.intergraft.intergroup.interionic.interiorly.interjects.interjoins.interknits.interknots.interlaced.interlaces.interlards.interlayer.interleave.interlends.interlined.interliner.interlines.interlinks.interloans.interlocal.interlocks.interloops.interloped.interloper.interlopes.interludes.interlunar.intermarry.intermedin.interments.intermezzi.intermezzo.intermixed.intermixes.intermodal.intermural.internally.internists.internment.internodal.internodes.internship.interocean.interorgan.interparty.interphase.interplant.interplays.interplead.interpoint.interposed.interposer.interposes.interprets.interreges.interregna.interrenal.interrogee.interrupts.intersects.intersexes.interspace.interstage.interstate.interstice.intertidal.intertills.intertrial.intertroop.intertwine.intertwist.interunion.interurban.intervales.intervened.intervener.intervenes.intervenor.interviews.interweave.interworks.interwoven.interzonal.intestates.intestinal.intestines.inthralled.inthroning.intifadahs.intifadehs.intimacies.intimately.intimaters.intimating.intimation.intimidate.intinction.intituling.intolerant.intonating.intonation.intoxicant.intoxicate.intradoses.intragenic.intramural.intranasal.intraplate.intrastate.intravital.intravitam.intrazonal.intreating.intrenched.intrenches.intrepidly.intrigants.intriguant.intriguers.intriguing.introduced.introducer.introduces.introfying.introjects.introspect.introverts.intrusions.intrusives.intrusting.intubating.intubation.intuitable.intuitions.intumesced.intumesces.intwisting.inunctions.inundating.inundation.inundators.inundatory.inurements.inurnments.invaginate.invalidate.invaliding.invalidism.invalidity.invaluable.invaluably.invariable.invariably.invariance.invariants.invasively.invectives.inveighers.inveighing.inveiglers.inveigling.inventions.inventress.inverities.inversions.invertases.invertible.investable.investment.inveteracy.inveterate.invigilate.invigorate.invincible.invincibly.inviolable.inviolably.invisibles.invitation.invitatory.invitingly.invocating.invocation.invocatory.involucels.involucral.involucres.involucrum.involuting.involution.involvedly.inwardness.inwrapping.iodinating.iodination.ionicities.ionization.ionophores.ionosondes.ionosphere.iproniazid.irenically.iridescent.iridosmine.ironfisted.ironhanded.ironically.ironmaster.ironmonger.ironnesses.ironsmiths.ironstones.ironworker.irradiance.irradiated.irradiates.irradiator.irrational.irredentas.irregulars.irrelative.irrelevant.irreligion.irremeable.irresolute.irreverent.irridentas.irrigating.irrigation.irrigators.irritating.irritation.irritative.irritators.irruptions.isallobars.ischaemias.iseikonias.isentropic.isoantigen.isobarisms.isobutanes.isobutenes.isocaloric.isochronal.isochrones.isoclinals.isoclinics.isocracies.isocyanate.isoenzymes.isoenzymic.isogametes.isogametic.isoglossal.isoglosses.isoglossic.isografted.isolatable.isolations.isoleucine.isomerases.isomerisms.isomerized.isomerizes.isometrics.isometries.isomorphic.isoniazids.isooctanes.isopiestic.isoplethic.isoprenoid.isopropyls.isospories.isostacies.isostasies.isothermal.isotropies.italianate.italianise.italianize.italicised.italicises.italicized.italicizes.iterations.itinerancy.itinerants.itinerated.itinerates.ivermectin.ivorybills.jaborandis.jaboticaba.jacarandas.jackanapes.jackassery.jackbooted.jacketless.jackfishes.jackfruits.jackhammer.jackknifed.jackknifes.jackknives.jacklights.jackplanes.jackrabbit.jackrolled.jackscrews.jackshafts.jacksmelts.jacksnipes.jackstones.jackstraws.jacqueries.jactations.jaculating.jaggedness.jaggheries.jaguarondi.jaguarundi.jailbreaks.jailhouses.jambalayas.janisaries.janitorial.janizaries.japanizing.jardiniere.jargoneers.jargonists.jargonized.jargonizes.jarlsbergs.jarovizing.jasperware.jaspilites.jaundicing.jauntiness.javelining.jawbonings.jawbreaker.jayhawkers.jaywalkers.jaywalking.jealousies.jejuneness.jejunities.jellifying.jellybeans.jellyrolls.jeopardies.jeoparding.jeopardise.jeopardize.jerkwaters.jessamines.jesuitical.jesuitisms.jesuitries.jetstreams.jettisoned.jewelweeds.jimsonweed.jingoistic.jinricksha.jinrikisha.jinrikshas.jitterbugs.jitteriest.jobholders.jockstraps.jocoseness.jocosities.jocularity.johnnycake.jointuring.jointweeds.jointworms.jokinesses.jollifying.jollyboats.jonnycakes.journalese.journaling.journalism.journalist.journalize.journeyers.journeying.journeyman.journeymen.jovialties.joyfullest.joyfulness.joyousness.joypoppers.joypopping.joyridings.jubilances.jubilantly.jubilarian.jubilating.jubilation.judgements.judgeships.judgmental.judicatory.judicature.judicially.juggernaut.juggleries.jugulating.juiceheads.julienning.junctional.junglegyms.junglelike.juniorates.junketeers.justiciars.justifiers.justifying.justnesses.juvenility.juxtaposed.juxtaposes.kabbalisms.kabbalists.kairomones.kaiserdoms.kaiserisms.kalanchoes.kaliphates.kallikrein.kalsomined.kalsomines.kanamycins.kaolinites.kaolinitic.karabiners.karateists.karyologic.karyolymph.karyosomes.karyotyped.karyotypes.karyotypic.kazatskies.kazillions.keelhaling.keelhauled.keennesses.keeshonden.kennelling.kenspeckle.kentledges.keratinize.keratinous.keratomata.keratotomy.kerchiefed.kerchieves.kerfuffles.kernelling.kerplunked.kerseymere.kerygmatic.ketonemias.ketonurias.kettledrum.keyboarded.keyboarder.keybuttons.keypunched.keypuncher.keypunches.keystroked.keystrokes.khalifates.kibbitzers.kibbitzing.kibbutznik.kickboards.kickboxers.kickboxing.kickstands.kickstarts.kidnappees.kidnappers.kidnapping.kieselguhr.kieselgurs.kieserites.kilderkins.kilocuries.kilocycles.kilojoules.kiloliters.kilolitres.kilometers.kilometres.kiloparsec.kilopascal.kimberlite.kindlessly.kindliness.kindnesses.kinematics.kinescoped.kinescopes.kineticist.kinetosome.kingcrafts.kingfisher.kingfishes.kingliness.kingmakers.kingsnakes.kitchenets.kittiwakes.kiwifruits.klebsiella.klutziness.knackeries.knackwurst.knapsacked.kneecapped kneepieces.knickknack.knifepoint.knighthood.knobbliest.knobkerrie.knockabout.knockdowns.knockwurst.knottiness.knowingest.knowledges.knuckliest.kohlrabies.kolinskies.kolkhoznik.komondorok.kookaburra.krummhorns.kundalinis.kurbashing.kurrajongs.kurtosises.kvetchiest.kymographs.kymography.labialized.labializes.labilities.labiovelar.laboratory.labyrinths.laccoliths.lacerating.laceration.lacerative.lachrymals.lachrymose.lacinesses.lackluster.lacquerers.lacquering.lacqueying.lacrimator.lactations.lactogenic.lacustrine.ladderlike.ladyfinger.ladyfishes.lagniappes.lagomorphs.lairdships.lakefronts.lakeshores.lallations.lamaseries.lambasting.lambencies.lambrequin.lambruscos.lamebrains.lamenesses.lamentable.lamentably.lamentedly.laminarian.laminarias.laminarins.laminating.lamination.laminators.lampblacks.lamplights.lampooners.lampoonery.lampooning.lampshades.lampshells.lanceolate.lancewoods.lancinated.lancinates.landaulets.landfilled.landgraves.landholder.landladies.landlocked.landlopers.landlubber.landmarked.landmasses.landowners.landowning.landscaped.landscaper.landscapes.landslides.langlaufer.langostino.langoustes.langridges.languettes.languished.languisher.languishes.languorous.lanknesses.lanosities.lanthanide.lanthanons.lanthanums.lanuginous.laparotomy.lapidarian.lapidaries.lapidating.lapidified.lapidifies.larcenists.largemouth.larghettos.larvicidal.larvicides.laryngeals.laryngites.laryngitic.laryngitis.lascivious.laserdiscs.laserdisks.lassitudes.latecomers.latenesses.lateraling.lateralize.lateralled.laterborns.laterizing.lathyrisms.lathyritic.laticifers.latifundia.latifundio.latimerias.latinities.latinizing.latticings.laudations.laughingly.laughlines.launchpads.launderers.laundering.laundrette.laundryman.laundrymen.laureating.laureation.laurelling.lavalieres.lavalliere.lavatories.lavendered.lavishness.lawbreaker.lawfulness.lawgivings.lawmakings.lawnmowers lawrencium.lawyerings.lawyerlike.laypersons.lazarettes.lazarettos.lazinesses.leadenness.leaderless.leadership.leadplants.leadscrews.leafhopper.leafleteer.leafleters.leafleting.leafletted.leafstalks.leaguering.leannesses.leasebacks.leaseholds.leathering.leavenings.lebensraum.lectionary.lectotypes.lederhosen.legalising.legalistic.legalities.legalizers.legalizing.legateship.legendized.legendizes.legendries.legerities.legibility.legislated.legislates.legislator.legitimacy.legitimate.legitimise.legitimism.legitimist.legitimize.leguminous.legwarmers.leiomyomas.leishmania.leistering.leitmotifs.leitmotivs.lemmatized.lemmatizes.lemniscate.lemongrass.lengthened lengthener.lengthiest.lengthways.lengthwise.leniencies.lenitively.lentamente.lenticular.lenticules.lentigines.lentissimo.lentivirus.leopardess.lepidolite.leprechaun.leprosaria.leptosomes.leptospire.leptotenes.lesbianism.lespedezas.lethargies.letterform.letterhead.letterings.leucocidin.leucocytes.leucoplast.leukaemias.leukocytes.leukocytic.leukopenia.leukopenic.leukorrhea.levantines.leveraging.leviathans.levigating.levigation.levitating.levitation.levitators.levorotary.lewdnesses.lexicality.lexicalize.lexicology.libecchios.libellants.liberalise.liberalism.liberalist.liberality.liberalize.liberating.liberation.liberators.libertines.libidinous.librarians.librations.librettist.licensable.licensures.licentiate.licentious.lidocaines.lienteries.lieutenant.lifebloods.lifeguards.lifelessly.lifesavers.lifesaving.lifestyles.lifeworlds.ligaturing.lightbulbs.lighteners.lightening.lighterage.lightering.lightfaced.lightfaces.lighthouse.lightnings.lightplane.lightproof.lightships.lighttight.lightwoods.lignifying.likability.likelihood.likenesses.limberness.limelights.limestones.limewaters.liminesses.limitation.limitative.limitingly.limitrophe.limnologic.limousines.limpidness.limpnesses.lincomycin.lineaments.linearised.linearises.linearized.linearizes.lineations.linebacker.linecaster.linerboard.linguistic.linkslands.linoleates.linotypers.linotyping.lintwhites.lionfishes.lipomatous.lipophilic.lipotropic.lipotropin.lipreaders.lipreading.lipsticked.liquations.liquefiers.liquefying.liquescent.liquidated.liquidates.liquidator.liquidized.liquidizes.liquidness.liquifying.liquorices.listenable.listlessly.litenesses.literacies.literalism.literalist.literality.literalize.literarily.literately.literation.literators.literature.lithifying.lithograph.lithologic.lithophane.lithophyte.lithopones.litigating.litigation.litigators.litterbags.litterbugs.littermate.littleneck.littleness.liturgical.liturgisms.liturgists.livability.livelihood.liveliness.livenesses.liverworts.liverwurst.livestocks.lividities.livingness.lixiviated.lixiviates.loadmaster.loadstones.loanshifts.loblollies.lobotomies.lobotomise.lobotomize.lobscouses.lobsterers.lobstering.lobsterman.lobstermen.lobulation.localising.localities.localizers.localizing.locational.lockkeeper.lockmakers.locksmiths.lockstitch.locomoting.locomotion.locomotive.locomotors.locomotory.locutories.lodestones.lodgements.loganberry.logaoedics.logarithms.loggerhead.logicality.logicising.logicizing.loginesses.logistical.logjamming.logographs.logogriphs.logophiles.logorrheas.logorrheic.logotypies.logrollers.logrolling.loincloths.loneliness.lonenesses.lonesomely.longbowman.longbowmen.longcloths.longhaired.longheaded.longhouses.longicorns.longitudes.longjumped.longleaves.longnesses.longsomely.lookalikes.loopholing.lophophore.lopsidedly.loquacious.lorazepams.lordliness.lorgnettes.lornnesses.lostnesses.lotuslands.loudmouths.loudnesses.loungewear.louseworts.lovability.lovastatin.lovelessly.loveliness.lovemakers.lovemaking.lovingness.lowballing.lowercased.lowercases.lowlanders.lowliheads.loxodromes.lubricants.lubricated.lubricates.lubricator.lubricious.lucidities.luciferase.luciferins.luciferous.lucubrated.lucubrates.luculently.luftmensch.lugubrious.lukewarmly.lullabying.lumberings.lumberjack.lumberyard.lumbricals.luminaires.luminances.luminarias.luminaries.luminesced.luminesces.luminosity.luminously.lumpectomy.lumpfishes.lunchboxes.lunchmeats.lunchrooms.lunchtimes.lungfishes.lunkheaded.lusciously.lushnesses.lusterless.lusterware.lustihoods.lustrating.lustration.lustrously.luteinized.luteinizes.lutestring.luxuriance.luxuriated.luxuriates.lycopodium.lymphatics.lymphocyte.lymphogram.lymphokine.lymphomata.lyophilise.lyophilize.lyricising.lyricizing.lysimeters.lysimetric.lysogenies.lysogenise.lysogenize.macadamias.macadamize.macaronics.macaronies.macedoines.maceraters.macerating.maceration.macerators.machinable.machinated.machinates.machinator.machinists.mackintosh.macrocosms.macrocysts.macrocytes.macrocytic.macromeres.macromoles.macrophage.macrophyte.macroscale.maculating.maculation.madeleines.maderizing.madrassahs.madrepores.madreporic.madrilenes.maelstroms.maenadisms.maffickers.mafficking.magalogues.magazinist.magdalenes.magistracy.magistrate.magnesites.magnesiums.magnetised.magnetises.magnetisms.magnetites.magnetized.magnetizer.magnetizes.magnetrons.magnifical.magnificat.magnificos.magnifiers.magnifying.magnitudes.maharajahs.maharanees.maharishis.mahlsticks.mahoganies.maiasauras.maidenhair.maidenhead.maidenhood.mainframes.mainlander.mainliners.mainlining.mainsheets.mainspring.mainstream.maintained.maintainer.maisonette.majordomos.majorettes.majorities.majuscular.majuscules.makeshifts.makeweight.malachites.malacology.maladapted.maladroits.malaguenas.malapertly.malapropos.malathions.malcontent.maledicted.malefactor.maleficent.malenesses.malevolent.malignance.malignancy.malingered.malingerer.mallemucks.malodorous.malolactic.maltreated.maltreater.mammalians.mammillary.mammitides.mammocking.mammograms.mammonisms.mammonists.manageable.manageably.management.manageress.managerial.manchineel.mandamused.mandamuses.mandarinic.mandibular.mandolines.mandragora.manducated.manducates.maneuvered.maneuverer.manfulness.manganates.manganeses.manganites.mangosteen.manhandled.manhandles.manhattans.maniacally.manicottis.manicuring.manicurist.manifested.manifester.manifestly.manifestos.manifolded.manifoldly.manipulars.manipulate.mannequins.mannerisms.mannerists.mannerless.manoeuvred.manoeuvres.manometers.manometric.manservant.manslayers.mansuetude.manticores.manubriums.manumitted.manuscript.manzanitas.mapmakings.maquillage.maranathas.maraschino.marasmuses.marathoner.marbelized.marbelizes.marbleised.marbleises.marbleized.marbleizes.marcasites.marcellers.marcelling.marchlands.marchpanes.margarines.margaritas.margarites.margenting.marginalia.marginally.marginated.marginates.margravate.margravial.margravine.marguerite.marihuanas.marijuanas.marimbists.marinading.marinating.marination.marionette.markedness.marketable.marketeers.marketings.markswoman.markswomen.marlstones.marmalades.marquesses.marquisate.marrowbone.marrowfats.marseilles.marshaling.marshalled.marshiness.marshlands.marsupials.martensite.martingale.martingals.martyrdoms.martyrized.martyrizes.marvelling.marvellous.mascaraing.mascarpone.masculines.mashgichim.masochisms.masochists.masquerade.massacrers.massacring.massasauga.masseteric.mastectomy.masterdoms.mastermind.mastership.masterwork.mastheaded.masticated.masticates.masticator.mastitides.mastodonic.mastodonts.matchboard.matchbooks.matchboxes.matchlocks.matchmaker.matchmakes.matchmarks.matchstick.matchwoods.matelasses.materially.maternally.mathematic.matinesses.matriarchs.matriarchy.matricidal.matricides.matronized.matronizes.matronymic.matsutakes.mattrasses.mattresses.maturating.maturation.maturities.maulsticks.maumetries.maunderers.maundering.mausoleums.mavourneen.mavournins.maxilliped.maximalist.maximising.maximizers.maximizing.mayflowers.mayonnaise.mayoresses.mayorships.mazinesses.meadowland.meadowlark.meagerness.meanderers.meandering.meaningful.meannesses.meanwhiles.measurable.measurably.measuredly.meatloaves.mechanical.mechanisms.mechanists.mechanized.mechanizer.mechanizes.meclizines.medaillons.medallions.medallists.meddlesome.medevacing.medevacked.mediaevals.mediagenic.mediastina.mediations.mediatized.mediatizes.medicament.medicating.medication.medicinals.medicining.medievally.mediocrity.meditating.meditation.meditative.meditators.mediumship.medivacing.medivacked.medullated.meeknesses.meerschaum.meetnesses.megacities.megacycles.megadeaths.megafaunae.megafaunal.megafaunas.megagamete.megalithic.megalopses.megaparsec.megaphoned.megaphones.megaphonic.megapixels.megaplexes.megascopic.megaspores.megasporic.megatheres.meitnerium.melaleucas.melancholy.melanistic.melanizing.melanocyte.melanomata.melanosome.melaphyres.melatonins.meliorated.meliorates meliorator.meliorisms.meliorists.melismatic.mellophone.mellotrons.mellowness.melodising.melodizers.melodizing.melodramas.melongenes.melphalans.meltwaters.membership.membranous.memoirists.memorandum.memorially.memorising.memorizers.memorizing.menacingly.menadiones.menageries.menarcheal.mendacious.mendicancy.mendicants.meningioma.meningitic.meningitis.meniscuses.menologies.menopausal.menopauses.menorrheas.menstruate.menstruums.mensurable.mentaleses.mentalisms.mentalists.mentations.mentioners.mentioning.mentorship.meperidine.mephitises.merbromins.mercantile.mercaptans.mercerised.mercerises mercerized.mercerizes.merchanted.mercifully.mercurated.mercurates.mercurials.mergansers.meridional.meritocrat.meromyosin.merozoites.merriments.merrymaker.mescalines.mesenchyme.mesenteric.mesenteron.mesmerised.mesmerises.mesmerisms.mesmerists.mesmerized.mesmerizer.mesmerizes.mesnalties.mesoblasts.mesodermal.mesogloeas.mesomorphs.mesomorphy.mesopauses.mesophylls.mesophytes.mesophytic.mesosphere.mesothelia.mesothorax.messalines.messengers.messianism.mestranols.metabolism.metabolite.metabolize.metacarpal.metacarpus.metacenter.metaethics.metagalaxy.metalheads.metalising.metalizing.metallists.metallized.metallizes.metalloids.metallurgy.metalmarks.metalsmith.metalwares.metalworks.metamerism.metaphases.metaphoric.metaphrase.metaphysic.metaplasia.metaplasms.metastable.metastably metastases.metastasis.metastatic.metatarsal.metatarsus.metatheses.metathesis.metathetic.metathorax.metaxylems meteorites.meteoritic.meteoroids.meterstick.metformins.methadones.methedrine.metheglins.methionine.methodical methodised.methodises.methodisms.methodists.methodized.methodizes.methoxides.methylases.methylated.methylates.methylator.methyldopa.methylenes.meticulous.metonymies.metralgias.metrically.metricated.metricates.metricisms.metricized.metricizes.metrifying.metritises.metronomes.metronomic.metropolis.mettlesome.mezzalunas.mezzanines.mezzotints.micrifying.microbeams.microbrews.microburst.microbuses.microchips.microcline.micrococci.microcodes.microcosms.microcurie.microcytes.microcytic.microfarad.microfauna.microfiche.microfilms.microflora.microforms.microfungi.micrograms.micrograph.microimage.microliter.microliths.microloans.microluces.microluxes.micromeres.micrometer.microminis.micromolar.micromoles.micronized.micronizes.microphage.microphone.microphyll.micropipet.micropores.microprism.microprobe.micropylar.micropyles.microquake.microscale.microscope.microscopy.microseism.microsomal.microsomes.microspore.microstate.microtomes.microtonal.microtones.microvilli.microvolts.microwatts.microwaved.microwaves.microworld.micrurgies.micturated.micturates.middlebrow.middlingly.midfielder.midinettes.midiskirts.midnightly.midrashoth.midsection.midshipman.midshipmen.midstories.midstreams.midsummers.midwatches.midwestern.midwinters.mightiness.mignonette.migrainous.migrations.mildnesses.milestones.militances.militantly.militaries.militarily.militarise.militarism.militarist.militarize.militating.militiaman.militiamen.milkfishes.milkshakes.millboards.millefiori.millefleur.millennial.millennium.millepedes.millepores.millerites.millesimal.millhouses.milliaries.millicurie.milligrams.millihenry.milliliter.milliluces.milliluxes.millimeter.millimolar.millimoles.millionths.milliosmol.millipedes.millivolts.milliwatts.millstones.millstream.millwright.mimeograph.minacities.minaudiere.mincemeats.mindblower.mindedness.mindlessly.minefields minelayers.mineralise.mineralize.mineralogy.mineshafts.minestrone.miniatures.minibikers.minibusses.minicourse.minimalism.minimalist.minimising.minimizers.minimizing.minischool.miniscules.miniseries.miniskirts.ministates.ministered.ministrant.ministries.minitowers.minitracks.minorities.minoxidils.minstrelsy.minuscules.minuteness.mirabelles.miracidial.miracidium.miraculous.mirandized.mirandizes.mirinesses.mirrorlike.mirthfully.misadapted.misaddress.misadjusts.misadvices.misadvised.misadvises.misaligned.misallying.misaltered.misandries.misapplied.misapplies.misassayed.misassigns.misatoning.misaverred.misawarded.misbalance.misbecomes.misbehaved.misbehaver.misbehaves.misbeliefs.misbelieve.misbiasing.misbiassed.misbiasses.misbilling.misbinding.misbranded.misbuttons.miscallers.miscalling.miscaption.miscarried.miscarries.miscasting.miscatalog.miscellany.mischances.mischannel.mischarged.mischarges.mischoices.mischooses.misclaimed.misclassed.misclasses.miscoining.miscolored.miscompute.misconduct.misconnect.miscooking.miscopying.miscounted.miscreants.miscreated.miscreates.miscutting.misdealers.misdealing.misdeeming.misdefined.misdefines.misdevelop.misdialing.misdialled.misdirects.misdivided.misdivides.misdoubted.misdrawing.misdriving.misediting.miseducate.misemploys.misenrolls.misentered.misentries.miserables.misericord.misesteems.misfeasors.misfeeding.misfielded.misfitting.misfocused.misfocuses.misforming.misfortune.misframing.misgauging.misgivings.misgoverns.misgrading.misgrafted.misgrowing.misguessed.misguesses.misguiders.misguiding.mishandled.mishandles.mishanters.mishearing.mishitting.mishmashes.mishmoshes.misinforms.misjoinder.misjoining misjudging.miskeeping.miskicking.misknowing.mislabeled.mislabored.misleaders.misleading.mislearned.mislighted.mislocated.mislocates.mislodging.mismanaged.mismanages.mismarking.mismatched.mismatches.mismeeting.misnomered.misnumbers.misogamies.misogamist.misogynies.misogynist.misologies.misoneisms.misoneists.misordered.misorients.mispackage.mispainted.misparsing.misparting.mispatched.mispatches.mispenning.misphrased.misphrases.mispickels.misplacing.misplanned.misplanted.misplaying.mispleaded.mispointed.mispoising.mispricing.misprinted.misprision.misprizers.misprizing.misprogram.misquoters.misquoting.misraising.misreading.misreckons.misrecords.misrelated.misrelates.misrelying.misrenders.misreports.misrouting.misseating.missending.missetting.misshapers.misshaping.missileers.missileman.missilemen.missilries.missiology.missionary.missioners.missioning.missionize.missorting.missounded.misspacing.misspelled.misstamped.misstarted.misstating.missteered.misstepped.misstopped.misstrikes.misstyling.missuiting.mistakable.mistakenly.misteaches.mistending.misterming.misthought.mistitling.mistletoes.mistouched.mistouches.mistracing.mistrained.mistreated.mistresses.mistrusted.mistrysted.mistutored.misvaluing.miswording.miswriting.miswritten.miterworts.mithridate.mitigating.mitigation.mitigative.mitigators.mitigatory.mitomycins.mitreworts.mittimuses.mixologies.mixologist.mizenmasts.mizzenmast.mobilising.mobilities.mobilizers.mobilizing.mobocratic.modalities.moderately.moderating.moderation.moderators.modernised.modernises.modernisms.modernists.modernized.modernizer.modernizes.modernness.modifiable.modillions.modishness.modularity.modulating.modulation.modulators.modulatory.moisteners.moistening.moisturise.moisturize.molalities.molarities.molasseses.moldboards.mollifiers.mollifying.molluscans.molluskans.mollymawks.molybdates.molybdenum.monachisms.monadnocks.monandries.monarchial.monarchies.monarchism.monarchist.monaurally.monestrous.monetarily monetarism.monetarist.monetising.monetizing.moneymaker.moneyworts.mongolisms.mongoloids.mongrelize.moniliases.moniliasis.moniliform.monitorial.monitories.monitoring.monkeypods.monkeypots.monkfishes.monkshoods.monoacidic.monoamines.monocarpic.monochasia.monochords.monochrome.monoclines.monoclinic.monoclonal.monocoques.monocotyls.monocratic.monoculars.monocycles.monocyclic.monodramas.monoecious.monoecisms.monoesters.monogamies.monogamist.monogamous.monogenean.monogenies.monogramed.monographs.monogynies.monogynous.monohybrid.monohydric.monolayers.monolithic.monologged.monologies.monologist.monologued.monologues.monomaniac.monomanias.monometers.monophonic.monoplanes.monoploids.monopodial.monopodies.monopodium.monopolies.monopolise.monopolist.monopolize.monorchids.monorhymed.monorhymes.monosomics.monosomies.monosteles.monostelic.monostichs.monotheism.monotheist.monotonies.monotonous.monotremes.monovalent.monsignori.monsignors.monstrance.montadales.montagnard.monticules.monumental.monzonites.mooncalves.moonfishes.moonflower.moonlights.moonquakes.moonscapes.moonshined.moonshiner.moonshines.moonstones.moonstruck.moonwalked.moosebirds.moosewoods.mootnesses.mopinesses.moralising.moralistic.moralities.moralizers.moralizing.moratorium.morbidness.mordancies.mordanting.morenesses.morganatic.morganites.moronities moroseness.morosities.morphactin.morphemics.morphinism.morphogens.morphology.morselling.mortadella.mortarless.mortgagees.mortgagers.mortgaging.mortgagors.morticians.mortifiers.mortifying.mortuaries.morulation.mosaically.mosaicisms.mosaicists.mosaicking.mosaiclike.moschatels.mosquitoes.mosquitoey.mossbacked.mothballed.motherhood.motherings.motherland.motherless.mothproofs.motilities.motionless.motivating.motivation.motivative.motivators.motiveless.motivities.motoneuron.motorbiked.motorbikes.motorboats.motorbuses.motorcaded.motorcades.motorcycle.motorising.motorizing.motormouth.motorships.motortruck.mouldering.moundbirds.mountebank.mournfully.mourningly.mousebirds.mousetails.mousetraps.mousseline.moustaches.moustachio.mouthfeels.mouthparts.mouthpiece.movability.movelessly.moviegoers.moviegoing.moviemaker.mozzarella.mridangams.muchnesses.mucidities.mucinogens.muckamucks.muckrakers.muckraking.mucosities.mudcapping.mudpuppies.mudskipper.mudslinger.muffineers.mujahedeen.mujahideen.mulberries.muliebrity.mulishness.mullahisms.mullioning.multiarmed.multiaxial.multichain.multicolor.multicurie.multiflash.multifocal.multifoils.multigenic.multigrade.multigrain.multigroup.multihulls.multilanes.multilayer.multilevel.multilobed.multilobes.multimedia.multimodal.multipacks.multipaned.multiparae.multiparas.multiparty.multipedes.multiphase.multipiece.multiplant.multiplets.multiplied.multiplier.multiplies.multipolar.multipoles.multipower.multirange.multisense.multisided.multispeed.multisport.multistage.multistate.multistory.multitasks.multitones.multitrack.multitudes.multiunion.mummichogs.mummifying.munchables.municipals.munificent.munitioned.murthering.muscadines.muscarines.muscarinic.muscovados.muscovites.muscularly.mushroomed.musicalise.musicality.musicalize.musicianly.musicology.musketeers.musketries.muskmelons.musquashes.mustachios.mutability.mutational.mutenesses.mutilating.mutilation.mutilators.mutineered.mutinously.muttonfish.mutualisms.mutualists.mutualized.mutualizes.myasthenia.myasthenic.mycetomata.mycetozoan.mycoflorae.mycofloras.mycologies.mycologist.mycophiles.mycoplasma.mycorhizae.mycorhizas.mycorrhiza.mycotoxins.mydriatics.myelinated.myelitides.myeloblast.myelocytes.myelocytic.myelograms.myelopathy.myocardial.myocardium.myofibrils myoglobins.myologists.myopathies.myopically.myositises.myosotises.myrmidones.myrobalans.mystagogue.mysterious.mystically.mysticetes.mysticisms.mystifiers.mystifying.mythically.mythicized.mythicizer.mythicizes.mythmakers.mythmaking.mythologer.mythologic.mythomania.mythopoeia.mythopoeic.myxamoebae.myxamoebas.myxoedemas.myxomatous.myxomycete.naboberies.nabobesses.nailbiters.naissances.nalorphine.naltrexone.namelessly.nameplates.nanometers.nanometres.nanosecond.nanoteslas.naphthenes.naphthenic.naprapathy.narcissism.narcissist.narcolepsy.narcotisms.narcotized.narcotizes.narrations.narratives.narrowband.narrowness.nasalising.nasalities.nasalizing.nascencies.nasturtium.natalities.natatorial.natatorium.nationally.nationhood.nationwide.nativeness.nativistic.nativities.natrolites.naturalise.naturalism.naturalist.naturalize.naturopath.naugahydes.naughtiest.naumachiae.naumachias.naumachies.nauseating.nauseously.nautically.nautiloids.nautiluses.navelworts.naviculars.navigating.navigation.navigators.naysayings.nearnesses.neatnesses.nebenkerns.nebulising.nebulizers.nebulizing.nebulosity.nebulously.neckcloths.necklacing.neckpieces.necromancy.necropoles.necropolis.necropsied.necropsies.necrotized.necrotizes.nectarines.needlefish.needlelike.needlessly.needlework.negational.negatively.negativing.negativism.negativist.negativity.neglecters.neglectful.neglecting.neglectors.negligence.negligible.negligibly.negotiable.negotiants.negotiated.negotiates.negotiator.negritudes.negrophils.negrophobe.neighbored.neighborly.neighbours.nelumbiums.nematicide.nematocide.nematocyst.nematology.nemerteans.nemertines.nemophilas.neoclassic.neodymiums.neoliberal.neologisms.neologists.neologized.neologizes.neonatally.neophiliac.neophilias.neoplasias.neoplastic.neorealism.neorealist.neotropics.nepenthean.nephelines.nephelinic.nephelites.nephograms.nephoscope.nephridial.nephridium.nephrology.nephrotics.nepotistic.neptuniums.nervations.nervatures.nesciences.nethermost.netiquette.netminders.nettlesome.networkers.networking.neuralgias.neurilemma.neuritides.neuritises.neurocoels.neurogenic.neuroglial.neuroglias.neurohumor.neurologic.neuromasts.neuropaths.neuropathy.neurospora.neurotoxic.neurotoxin.neutralise.neutralism.neutralist.neutrality.neutralize.neutrophil.neverminds.newfangled.newmarkets.newsagents.newsbreaks.newscaster.newsdealer.newsgroups.newshounds.newsletter.newsmakers.newsmonger.newspapers.newspeople.newsperson.newsprints.newsreader.newsstands.newsweekly.newsworthy.nialamides.niccolites.nicenesses.nickelling.nicknamers.nicknaming.nicotianas.nictations.nictitated.nictitates.nidderings.nidicolous.nidifugous.nifedipine.niggarding.nigglingly.nighnesses.nightclubs.nightdress.nightfalls.nightglows.nightgowns.nighthawks.nightlifes.nightlives.nightmares.nightscope.nightshade.nightshirt.nightsides.nightspots.nightstand.nightstick.nighttides.nighttimes.nigrifying.nigritudes.nigrosines.nihilistic.nihilities.nilpotents.nimbleness.nincompoop.nineteenth.ninetieths.ninhydrins.nitpickers.nitpickier.nitpicking.nitrations.nitrifiers.nitrifying.nitrofuran.nobilities.noblewoman.noblewomen.noctilucas.nodalities.nodosities.nodulation.noisemaker.nomarchies.nominalism.nominalist.nominating.nomination.nominative.nominators.nomographs.nomography.nomologies.nomothetic.nonaccrual.nonactions.nonaddicts.nonadmirer.nonaligned.nonallelic.nonanswers.nonaquatic.nonaqueous.nonartists.nonascetic.nonaspirin.nonathlete.nonauthors.nonbanking.nonbearing.nonbeliefs.nonbetting.nonbinding.nonbonding.nonbreeder.noncabinet.noncaloric.noncapital.noncardiac.noncarrier.noncentral.nonchalant.noncitizen.nonclasses.noncollege.noncolored.noncomplex.nonconcern.nonconcurs.nonconform.noncontact.noncountry.noncurrent nondancers.nondefense.nondemands.nondeviant.nondoctors.nondormant.nondrinker.nondrivers.nondurable.nonearning.nonedibles.nonelastic.nonelected.nonentries.nonenzymic.nonesuches.nonethical.nonethnics.nonexempts.nonexperts.nonexposed.nonfactors.nonfactual.nonfaculty.nonfarmers.nonfederal.nonferrous.nonfiction.nonfluency.nongaseous.nongenetic.nongenital.nongolfers.nongrowing.nonhistone.nonhostile.nonhousing.nonhunters.nonhunting.nonillions.noninitial.noninsects.noninsured.nonjoinder.nonjoiners.nonkoshers.nonlawyers.nonlegumes.nonlexical.nonlibrary.nonliquids.nonliteral.nonlivings.nonlogical.nonmarital.nonmarkets.nonmedical.nonmeeting.nonmembers.nonmigrant.nonmimetic.nonmoderns.nonmortals.nonmusical.nonmutants.nonnatives.nonnatural.nonnetwork.nonnuclear.nonobscene.nonobvious.nonoptimal.nonorganic.nonpapists.nonpareils.nonparents.nonparties.nonpassive.nonpayment.nonpersons.nonplastic.nonplayers.nonplaying nonplusing.nonplussed.nonplusses.nonproblem.nonprofits.nonprogram.nonprossed.nonprosses.nonprotein.nonreactor.nonreaders.nonreading.nonreceipt.nonrenewal.nonrioters.nonrioting.nonroutine.nonsalable.nonscience.nonsecrets.nonseptate.nonserials.nonserious.nonsigners.nonskaters.nonsmokers.nonsmoking.nonspatial.nonspeaker.nonstaples.nonstarter.nonsteroid.nonstories.nonstudent.nonsubject.nonsuccess.nonsuiting.nonsupport.nonswimmer.nonsystems.nontalkers.nontaxable.nontenured.nontheists.nonthermal.nontobacco.nontrivial.nontypical.nonuniform.nonutility.nonutopian.nonvectors.nonveteran.nonviewers.nonvintage.nonviolent.nonvirgins.nonviscous.nonwinning.nonworkers.nonworking.nonwriters noospheres.nootropics.normalcies.normalised.normalises.normalized.normalizer.normalizes.northbound.northeasts.northerner.northlands.northwards.northwests.nosebleeds.nosediving.noseguards.nosepieces.nosewheels.nosinesses.nosocomial.nosologies.nostalgias.nostalgics.nostalgist.notability.notarially.notarizing.notational.notchbacks.notepapers.noteworthy.noticeable.noticeably.notifiable.notionally.notochords.nourishers.nourishing.novaculite.novelettes.novelising.novelistic.novelizers.novelizing.noviciates.novitiates.novobiocin.novocaines.nubilities.nucleating.nucleation.nucleators.nucleonics.nucleoside.nucleosome.nucleotide.nudenesses.nudibranch nullifiers.nullifying.nulliparae.nulliparas.nullipores.numberable.numberless.numbfishes.numbnesses.numbskulls.numeracies.numerating.numeration.numerators.numerology.numerously.numinouses.numismatic.nummulites.nunciature.nunnations.nuptiality.nursemaids.nurseryman.nurserymen.nurturance.nutational.nutcracker.nutgrasses.nuthatches.nutriments.nutritions.nutritious.nutritives.nyctalopia.nymphalids.nymphettes.nympholept.oafishness.oasthouses.obbligatos.obduracies.obdurately.obediences.obediently.obeisances.obeisantly.obfuscated.obfuscates.obituaries.obituarist.objections.objectives.objectless.objurgated.objurgates.oblateness.obligately.obligating.obligation.obligators.obligatory.obligingly.obliterate.obnubilate.obscurants.obsecrated.obsecrates.obsequious.observable.observably.observance.observants.obsessions.obsessives.obsolesced.obsolesces.obsoletely.obsoleting.obstetrics.obstructed.obstructor.obstruents.obtainable.obtainment.obtrusions.obtundents.obturating.obturation.obturators.obtuseness.obtusities.obversions.obviations.occasional.occasioned.occidental.occipitals.occlusions.occlusives.occultisms.occultists.occupation.occurrence.occurrents.oceanarium.oceanfront.oceangoing.oceanology.ochlocracy.ochlocrats.octachords.octahedral.octahedron.octameters.octarchies.octillions.octonaries.octoploids.octopodans.octothorps.ocularists.oculomotor.odalisques.oddsmakers.odiousness.odometries.oecologies.oenologies.oenophiles.oesophagus.oestrogens.offensives.officering.officially.officiants.officiated.officiates.officinals.offishness.offloading.offprinted.offsetting.offsprings.oftentimes.oilinesses.oinologies.oldfangled.oleaginous.olecranons.oleographs.oleoresins.olfactions.oligarchic.oligoclase.oligogenes.oligomeric.oligophagy.oligopsony.olivaceous.olivenites.olivinitic.ololiuquis.ommatidial.ommatidium.omnibusses.omnificent.omnipotent.omniranges.omniscient.omnivorous.omophagias.omophagies.oncologies.oncologist.onionskins.onomastics.onslaughts.ontogenies.ontologies.ontologist.oozinesses.opacifiers.opacifying.opalescent.opalescing.opaqueness.openhanded.opennesses.operagoers.operagoing.operations.operatives.operculars.operculate.operculums.operettist.ophiolites.ophiuroids.ophthalmia.ophthalmic.oppilating.opposeless.oppositely.opposition.oppressing.oppression.oppressive.oppressors.opprobrium.opsonified.opsonifies.opsonizing.optatively.optimality.optimising.optimistic.optimizers.optimizing.optionally.optometers.optometric.opulencies.oracularly.orangeades.orangeries.orangewood.orangutans.oratorical.oratresses.orbiculate.orchardist.orchestral.orchestras.orchidlike.orchitises.ordainment.ordinances.ordinarier.ordinaries.ordinarily.ordination.ordonnance.organelles.organicism.organicist.organicity.organisers.organising.organismal.organismic.organizers.organizing.organology.organosols.organzines.orientally.orientated.orientates.orienteers.oriflammes.originally.originated.originates.originator.orismology.ornamental.ornamented.ornateness.orneriness.ornithines.ornithopod.ornithoses.ornithosis.orogeneses.orogenesis.orogenetic.orographic.orologists.oropharynx.orotundity.orphanages.orphanhood.orphically.orrisroots.orthoclase.orthodoxes.orthodoxly.orthoepies.orthoepist.orthogonal.orthograde.orthopedic.orthoptera.orthopters.orthotists.oscillated.oscillates.oscillator.oscitances.osculating.osculation.osculatory.osmeterium.osmiridium.osmolality.osmolarity.osmometers.osmometric.osmundines ossifrages.osteitides.ostensible.ostensibly.ostensoria.osteoblast.osteoclast.osteocytes.osteogenic.osteopaths.osteopathy.osteosises.osteotomes.ostracised.ostracises.ostracisms.ostracized.ostracizes.ostracodes.otherguess.otherwhere.otherwhile.otherworld.otioseness.otiosities.otologists.otoscopies.oubliettes.outachieve.outarguing.outbackers.outbalance.outbargain.outbarking.outbawling.outbeaming.outbegging.outbidders.outbidding.outbitched.outbitches.outblazing.outbleated.outblessed.outblesses.outbloomed.outbluffed.outblushed.outblushes.outboasted.outbragged.outbraving.outbrawled.outbrazens.outbribing.outbulging.outbulking.outbullied.outbullies.outburning.outcapered.outcatches.outcaviled.outcharged.outcharges.outcharmed.outcheated.outchidden.outchiding.outclassed.outclasses.outclimbed.outcoached.outcoaches.outcompete outcooking.outcounted.outcrawled.outcropped.outcrossed.outcrosses.outcrowded.outcrowing.outcursing.outdancing.outdatedly.outdazzled.outdazzles.outdebated.outdebates.outdeliver.outdesigns.outdodging.outdragged.outdrawing.outdreamed.outdressed.outdresses.outdriving.outdropped.outdueling.outduelled.outearning.outechoing.outercoats.outfabling.outfasting.outfawning.outfeasted.outfeeling.outfencing.outfielder.outfigured.outfigures.outfinding.outfishing.outfitters.outfitting.outflanked.outfloated.outflowing.outfooling.outfooting.outfrowned.outfumbled.outfumbles.outgaining.outgallops.outgambled.outgambles.outgassing.outgeneral.outgivings.outglaring.outgleamed.outglitter.outglowing.outgnawing.outgrinned.outgrossed.outgrosses.outgrowing.outgrowths.outguessed.outguesses outguiding.outgunning.outgushing.outhandled.outhandles.outhearing.outhitting.outhomered.outhowling.outhumored.outhunting.outhustled.outhustles.outjinxing.outjockeys.outjuggled.outjuggles.outjumping.outjutting.outkeeping.outkicking.outkilling.outkissing.outlanders.outlandish.outlasting.outlaughed.outlawries.outleading.outleaping.outlearned.outmanning.outmarched.outmarches.outmasters.outmatched.outmatches.outmuscled.outmuscles.outnumbers.outoffices.outpainted.outpassing.outpatient.outpeopled.outpeoples.outperform.outpitched.outpitches.outpitying.outplacing.outplanned.outplaying.outplodded.outplotted.outpointed.outpolling.outpourers.outpouring.outpowered.outpraying.outpreened.outpressed.outpresses.outpricing.outproduce.outpromise.outpulling.outpunched.outpunches.outpursued.outpursues.outpushing.outputting.outquoting.outrageous.outraising.outranging.outranking.outreached.outreaches.outreading.outreasons.outrebound.outreckons.outriggers.outrigging.outrightly.outringing.outrivaled.outroaring.outrocking.outrolling.outrooting.outrunners.outrunning.outrushing.outsailing.outsavored.outschemed.outschemes.outscolded.outscooped.outscoring.outscorned.outscreams.outselling.outserving.outshaming.outshining.outshouted.outsinging.outsinning.outsitting.outskating.outslicked.outsmarted.outsmelled.outsmiling.outsmoking.outsnoring.outsoaring.outsourced.outsources.outspanned.outsparkle.outspeeded.outspelled.outspreads.outsprings.outsprints.outstaring.outstarted.outstating.outstation.outstaying.outsteered.outstretch.outstrides.outstriven.outstrives.outstrokes.outstudied.outstudies.outstunted.outsulking.outtalking.outtasking.outtelling.outthanked.outthieved.outthieves.outthought.outthrusts.outtowered.outtrading.outtravels.outtricked.outtrotted.outtrumped.outvaluing.outvaunted.outvoicing.outwaiting.outwalking.outwarring.outwasting.outwatched.outwatches.outwearied.outwearies.outwearing.outweeping.outweighed.outwhirled.outwilling.outwinding.outwishing.outwitting.outworkers.outworking.outwrestle.outwriting.outwritten.outwrought.outyelling.outyelping.outyielded.ovalbumins.ovalnesses.ovariotomy.ovaritides.overacting.overaction.overactive.overarched.overarches.overarming.overassert.overbaking.overbeaten.overbetted.overbidden.overbilled.overbleach.overblouse.overboiled.overbooked.overborrow.overbought.overbraked.overbrakes.overbreeds.overbriefs.overbright.overbrowse.overbrutal.overbuilds.overburden.overburned.overbuying.overcalled.overcasted.overcharge.overchills.overclaims.overcleans.overclears.overclouds.overcolors.overcomers.overcoming.overcommit.overcooked.overcooled.overcounts.overcrowds.overcuring.overdaring.overdecked.overdesign.overdirect.overdosage.overdosing.overdrafts.overdrinks.overdriven.overdrives.overdrying.overdubbed.overdyeing.overeaters.overeating.overedited.overemoted.overemotes.overexcite.overexerts.overexpand.overexpose.overextend.overfacile.overfavors.overfeared.overfilled.overfished.overfishes.overflight.overfloods.overflowed.overflying.overfunded.overgilded.overgirded.overglazed.overglazes.overgoaded.overgovern.overgraded.overgrades.overgrazed.overgrazes.overgrowth.overhanded.overhandle.overhating.overhauled.overheaped.overheated.overhonors.overhoping.overhunted.overhyping.overinform.overinsure.overissued.overissues.overjoying.overkilled.overlabors.overlading.overlapped.overlavish.overlaying.overleaped.overlearns.overlearnt.overlength.overlights.overliving.overloaded.overlooked.overlorded.overloving.overmanage.overmanned.overmantel.overmaster.overmature.overmelted.overmighty.overmilked.overmining.overmixing.overmodest.overmuches.overnights.overpacked.overpassed.overpasses.overpaying.overpedals.overpeople overplaids.overplants.overplayed.overpluses.overplying.overpotent.overpowers.overpraise.overpriced.overprices.overprints.overprized.overprizes.overpumped.overrating.overreacts.overreport.overridden.overriding.overroasts.overruffed.overruling.oversalted.oversauced.oversauces.oversaving.overscaled.overscored.overscores.overseeded.overseeing.oversewing.overshaded.overshades.overshadow.overshirts.overshoots.oversights.oversimple.oversimply.overskirts.overslaugh.oversleeps.oversmoked.oversmokes.oversoaked.overspends.overspiced.overspices.overspills.overspread.overstaffs.overstated.overstates.overstayed.oversteers.overstocks.overstrain.overstress.overstrewn.overstrews.overstride.overstrike.overstrode.overstruck.overstrung.overstuffs.oversubtle.oversudsed.oversudses.oversupped.oversupply.overswings.overtaking.overtalked.overtasked.overtaught.overtaxing.overthinks.overthrown.overthrows.overtiming.overtipped.overtiring.overtoiled.overtopped.overtraded.overtrades.overtrains.overtreats.overtricks.overtrumps.overturing.overturned.overurging.overvalued.overvalues.overvoting.overwarmed.overwaters.overweened.overweighs.overweight.overwetted.overwhelms.overwinter.overworked.overwrites.oviposited.ovipositor.oviraptors.ovulations.owlishness.ownerships.oxacillins.oxidations.oxidizable.oximetries.oxycodones.oxygenases.oxygenated.oxygenates.oxygenator.oxygenized.oxygenizes.oxygenless.oxymoronic.oxyuriases.oxyuriasis.oysterings.ozocerites.ozokerites.ozonations.pacemakers.pacemaking.pacesetter.pachyderms.pachytenes.pacifiable.pacificism.pacificist.pacifistic.packagings.packboards.packhorses.packnesses.packsaddle.packthread.paclitaxel.paddleball.paddleboat.paddlefish.paddocking.paddywacks.padlocking.padronisms.paediatric.paedogenic.paganising.paganizers.paganizing.paginating.pagination.paillasses.paillettes.painfuller.painkiller.painlessly.paintballs.paintbrush.paintworks.palaestrae.palaestras.palankeens.palanquins.palatalize.palatially.palatinate.palaverers.palavering.palenesses.paleoliths.palimonies.palimpsest.palindrome.palisading.palladiums.pallbearer.palletised.palletises.palletized.palletizer.palletizes.palliasses.palliating.palliation.palliative.palliators.pallidness.palmations.palmerworm.palmettoes.palmisters.palmitates.paloverdes.palpations.palpitated.palpitates.palsgraves.paltriness.palynology.panatellas.panbroiled.pancratium.pancreases.pancreatic.pancreatin.pandanuses.pandowdies.panegyrics.panegyrist.panellings.panetellas.panettones.pangeneses.pangenesis.pangenetic.panhandled.panhandler.panhandles.panickiest.paniculate.panjandrum.panmixises.pansexuals.pansophies.pantalones.pantaloons.pantheisms pantheists.pantoffles.pantograph.pantomimed.pantomimes.pantomimic.pantsuited.pantywaist.papaverine.paperbacks.paperbarks.paperboard.paperbound.paperclips.papergirls.paperiness.papermaker.paperworks.papeteries.papillomas.papillotes.papistries.papyrology.parabioses.parabiosis.parabiotic.parablasts.paraboloid.parachuted.parachutes.parachutic.paracletes.paradiddle.paradisaic.paradisiac.paradisial.paraffined.paraffines.paraffinic.paraglided.paraglides.paragoning.paragraphs.paralegals.parallaxes.paralleled.paralogism.paralysing.paralytics.paralyzers.paralyzing.paramagnet.paramattas.paramecium.paramedics.parameters.parametric.paramnesia.paramorphs.paramounts.paramylums.paranoiacs.paranoidal.paranormal.paranymphs.paraphrase.paraphyses.paraphysis.paraplegia.paraplegic.parapodial.parapodium.parasailed.parasexual.parashioth.parasitise.parasitism.parasitize.parasitoid.paratactic.parathions.paratroops.parboiling.parbuckled.parbuckles.parcelling.parcheesis.parchments.pardonable.pardonably.paregorics.parenchyma.parentages.parentally.parenteral.parenthood.parentings.parentless.parfleches.parfleshes.pargetings.pargetting.pargylines.parimutuel.parliament.parmigiana.parmigiano.parodistic.paronymous.paroxysmal.parqueting.parrakeets.parricidal.parricides.parritches.parsonages.partiality.participle.particular.partisanly.partitions.partitives.partnering.partridges.parturient.partygoers.parvolines.parvovirus.pasodobles.pasquinade.passageway passalongs.passengers.passepieds.passerines.passionals.passionate.passivated.passivates.passivisms.passivists.pasteboard.pastedowns.pastelists.pastellist.pasteurise.pasteurize.pasticcios.pasticheur.pastitsios.pastnesses.pastorales.pastorally.pastorates.pastoriums.pastorship.pasturages.patchboard.patchiness.patchoulis.patchworks.patentable.paternally.pathetical.pathfinder.pathogenes.pathogenic.pathologic.patientest.patinating.patination.patinizing.patisserie.patissiers.patriarchs.patriarchy.patriating.patricians.patriciate.patricidal.patricides.patriotism.patristics.patrollers.patrolling.patronages.patronised.patronises.patronized.patronizes.patronymic.patterning.paulownias.paunchiest.pauperisms.pauperized.pauperizes.paupiettes.pavilioned.pawnbroker.paymasters.peacefully.peacemaker.peacetimes.peachblows.peacockier.peacocking.peacockish.peakedness.pearlashes.peashooter.peasoupers.peccadillo.peccancies.peckerwood.peculating.peculation.peculators.peculiarly.pedagogics.pedagogies.pedagogues.pedantries.peddleries pederastic.pedestaled.pedestrian.pediatrics.pediatrist.pediculate.pediculous.pedicuring.pedicurist.pedimental.pedimented.pedologies.pedologist.pedometers.pedophiles.pedophilia.pedophilic.peduncular.peerlessly.pegmatites.pegmatitic.pejorative.pelecypods.pellagrins.pellagrous.pelletised.pelletises.pelletized.pelletizer.pelletizes.pellucidly.peltations.pelycosaur.penalising.penalities.penalizing.pencilings.pencillers.pencilling.pendencies.pendentive.pendragons.peneplains.peneplanes.penetrable.penetralia.penetrance.penetrants.penetrated.penetrates.penholders.penicillia.penicillin.peninsular.peninsulas.penitences.penitently.penmanship.pennoncels.pennycress.pennyroyal.pennyworth.pennyworts.penologies.penologist.pensionary.pensioners.pensioning.penstemons.pentagonal pentagrams.pentahedra.pentameter.pentangles.pentaploid.pentathlon.pentatonic.penthouses.pentosides.pentoxides.pentstemon.penultimas.peoplehood.peopleless.peperomias.peppercorn.peppermint.pepperonis.peppertree pepsinated.pepsinates.pepsinogen.peptalking.peptidases.peptonized.peptonizes.perborates.percalines.perceivers.perceiving.percentage.percentile.perception.perceptive.perceptual.percipient.percolated.percolates.percolator.percussing.percussion.percussive.percussors.perditions.perdurable.perdurably.peregrines.pereiopods.peremptory.perennated.perennates.perennials.perfecters.perfectest.perfecting.perfection.perfective.perfidious.perfoliate.perforated.perforates.perforator.performers.performing.perfusates.perfusions.pericardia.pericrania.pericycles.pericyclic.peridotite.perigynies.perigynous.perihelial.perihelion.perikaryal.perikaryon.perilously.perilymphs.perimeters.perimorphs.perimysium.perineuria.periodates.periodical.periosteal.periosteum.peripeteia.peripetias.peripeties.peripheral.periphytic.periphyton.periplasms.periplasts.periscopes.periscopic.perishable.peristomes.peristyles.perithecia.peritoneal.peritoneum.peritricha.peritrichs.periwigged.periwinkle.perjurious.permafrost.permalloys.permanence.permanency.permanents.permeances.permeating.permeation.permeative.permeators.permethrin.permillage.permission.permissive.permittees.permitters.permitting.permutable.pernicious.pernickety.perorating.peroration.perorators.perovskite.peroxidase.peroxiding.peroxisome.perpending.perpetrate.perpetuals.perpetuate.perpetuity.perplexers.perplexing.perplexity.perquisite.persecuted.persecutee.persecutes.persecutor.persevered.perseveres.persiflage.persimmons.persistent.persisters.persisting.personable.personages.personally.personalty.personated.personates.personator.personhood.personnels.perspiring.persuaders.persuading.persuasion.persuasive.pertaining.pertinence.pertinency.pertnesses.perturbers.perturbing.pervasions.perversely.perversion.perversity.perversive.perverters.perverting.pessimisms.pessimists.pesthouses.pesticides.pestilence.petalodies.petiolules.petiteness.petitioned.petitioner.petnapings.petnappers.petnapping.petrifiers.petrifying.petroglyph.petrolatum.petroleums.petrologic.petticoats.petulances.petulantly.pewholders.phagedenas.phagocytes.phagocytic.phagosomes.phalangeal.phalangers.phalaropes.phallicism.phanerogam.phantasied.phantasies.phantasmal.phantasmic.pharisaism.pharmacies.pharmacist.pharyngals.pharyngeal.phasedowns.phatically.phelloderm.phellogens.phelonions.phenacaine.phenacetin.phenacites.phenakites.phenazines.phenetoles.phenocryst.phenolated.phenolates.phenomenal.phenomenas.phenomenon.phenotypes.phenotypic.phenoxides.phenylenes.phenytoins.pheromonal.pheromones.philanders.philatelic.philippics.philistias.philistine.philomelas.philosophe.philosophy.philtering.phlebogram.phlebology.phlebotomy.phlegmatic.phlegmiest.phlogistic.phlogiston.phlogopite.phlorizins.phlyctenae.phonathons.phonations.phonematic.phonetists.phonically.phonograms.phonograph.phonolites.phonologic.phonotypes.phosphates phosphatic.phosphenes.phosphides.phosphines.phosphites.phosphores.phosphoric.phosphorus.phosphoryl photically.photocells.photodiode.photoflash.photoflood.photogenes.photogenic.photograms.photograph.photolyses.photolysis.photolytic.photolyzed.photolyzes.photomasks.photometer.photometry.photomural.photophase.photophore.photoplays.photoscans.photostats.phototaxes.phototaxis.phototoxic.phototubes.phototypes.phreakings.phrenology.phrensying.phthalates.phthaleins.phthisical.phylactery.phylaxises.phylesises.phyllaries.phyllodium.phyllopods.phyllotaxy.phylloxera.physically.physicians.physicists.physicking.physiology.phytoliths.phytotoxic.phytotrons.pianissimi.pianissimo.pianoforte.picadillos.picaresque.picarooned.picayunish.piccalilli.piccoloist.picholines.pickabacks.pickaninny.pickaroons.pickeering.picketboat.pickpocket.pickthanks.picnickers.picnicking.picofarads.picometers.picometres.picosecond.picowaving.picrotoxin.pictograms.pictograph.pictorials.picturized.picturizes.pidginized.pidginizes.pieceworks.piercingly.piezometer.pigeonhole.pigeonites.pigeonwing.piggybacks.pigmentary.pigmenting.pigsticked.pigsticker.pikestaffs.pikestaves.pilferable.pilferages.pilgarlics.pilgrimage.pillarless.pillorying.pillowcase.pilosities.pilothouse.pimpernels.pimpmobile.pinballing.pincerlike.pinchbecks.pinchcocks.pinchpenny.pincushion.pineapples.pinfeather.pinfolding.pingrasses.pinknesses.pinnacling.pinnatifid.pinnations.pinpointed.pinpricked.pinsetters.pinspotter.pinstriped.pinstripes.pinwheeled.pioneering.pipefishes.pipelining.piperazine.piperidine.piperonals.pipestones.pipinesses.pipistrels.pipsissewa.pipsqueaks.piquancies.piracetams.piroplasma.piroplasms.pirouetted.pirouettes.piscivores.pistachios.pistareens.pistillate.pistoleers.pistoleros.pistoliers.pistolling.pitapatted.pitcherful.pitchforks.pitchpoled.pitchpoles.pitchwoman.pitchwomen.pitifuller.pitilessly.pityriases.pityriasis.pixilation.pixillated.pixinesses.placarding.placations.placekicks.placements.placentals.placidness.placoderms.plagiaries.plagiarise.plagiarism.plagiarist.plagiarize.plainchant.plainsongs.plaintexts.plaintiffs.plaistered.planarians.planations.planchette.planeloads.planesides.planetaria.planetlike.planetoids.planetwide.plangently.planimeter.planishers.planishing.planktonic.planlessly.plantation.plasmagels.plasmagene.plasmasols.plasmodesm.plasmodium.plasmogamy.plasmolyze.plasterers.plastering.plasticene.plasticine.plasticity.plasticize.plastidial.plastiques.plastisols.plateauing.plateglass.platemaker.platinized.platinizes.platinoids.platitudes.platonisms.platooning.platterful.platypuses.playacting.playactors.playfellow.playfields.playgoings.playground.playgroups.playhouses.playmakers.playmaking playthings.playwright.pleadingly.pleasances.pleasanter.pleasantly.pleasantry.pleasingly.pleasuring.plebeianly.plebiscite.pleiotropy.plenishing.plenitudes.plentitude.pleochroic.pleonastic.plesiosaur.pleurisies.pleustonic.pliability.pliantness.plications.plicatures.ploddingly.plowshares.pluckiness.pluguglies.plumberies.plummeting.plumpening.plunderers.plundering.plunderous.pluperfect.pluralisms.pluralists.pluralized.pluralizes.plushiness.plutocracy.plutocrats.plutonisms.plutoniums.plyometric.pneumatics.pneumonias.pocketable.pocketbook.pocketfuls pocketsful.pockmarked.podcasters.podcasting.podiatries.podiatrist.podophylli.podzolized.podzolizes.poetasters.poetically.poeticisms.poeticized.poeticizes.pogromists.poignances.poignantly.poincianas.poinsettia.pointelles.poisonings.poisonwood.pokinesses.polarising.polarities.polarizers.polarizing.polemicist.polemicize.polemizing.polemonium.poliovirus.politburos.politeness.politesses.politician.politicise.politicize.politicked.politicker.politicoes.pollarding.pollenated.pollenates.pollenizer.pollenoses.pollenosis.pollinated.pollinates.pollinator.pollinized.pollinizer.pollinizes.pollinoses.pollinosis.polltakers.pollutants.pollutions.polonaises.polyamides.polyamines.polyanthas.polyanthus.polyatomic.polychaete.polychetes.polychrome.polychromy.polyclinic.polyclonal.polycyclic.polycystic.polydactyl.polydipsia.polydipsic.polyesters.polygamies.polygamist.polygamize.polygamous.polygonies.polygonums.polygraphs.polygynies.polygynous.polyhedral.polyhedron.polyhistor.polyimides.polylysine.polymathic.polymerase.polymerise.polymerism.polymerize.polymorphs.polymyxins.polynomial.polyolefin.polyparies.polyparium.polyphagia.polyphasic.polyphenol.polyphones.polyphonic.polyploids.polyploidy.polypodies.polyptychs.polyrhythm.polysemies.polysemous.polysomics.polytenies.polytheism.polytheist.polythenes.polyvalent.polywaters.pommelling.pomologies.pomologist.pompadours.ponderable.ponderosas.poniarding.pontifical.pontifices.pontoniers.ponytailed.poorhouses.poormouths.poornesses.poppycocks.poppyheads.popularise.popularity.popularize.populating.population.populistic.populously.porbeagles.porcelains.porcupines.poriferans.poromerics.porosities.porousness.porphyrias.porphyries.porphyrins.porpoising.porringers.portabella.portabello.portamenti.portamento.portapacks.portcullis.portending.portentous.porterages.portfolios.portioners.portioning.portliness.portobello.portrayals.portrayers.portraying.portresses.portulacas.poshnesses.positional.positioned.positively.positivest.positivism.positivist.positivity.posologies.possessing.possession.possessive.possessors.possessory.possiblest.postarrest.postatomic.postattack.postbellum.postcoital.postcrises.postcrisis.postdating.postdebate.posteriors.postexilic.postfixing.postflight.postformed.postfreeze.posthastes.posthumous.postilions.postillion.postimpact.postlaunch.postmarked.postmaster.postmating.postmodern.postmortem.postpartum.postponers.postponing.postposing.postprison.postriders.postscript.postseason.poststrike.postsynced.postulancy.postulants.postulated.postulates.postulator.posturings.posturists.potability.potassiums.potatobugs.potbellied.potbellies.potboilers.potboiling.potentates.potentials.potentiate.potentilla.potholders.pothunters.pothunting.potlatched.potlatches.potometers.potpourris.poulterers.poulticing.poultryman.poultrymen.poundcakes.pourboires.pourparler.pourpoints.poussetted.poussettes.powderless.powderlike.powerboats.powerfully.powerhouse.poxviruses.pozzolanas pozzolanic.practicals.practicers.practicing.practicums.practising.praelected.praemunire.praenomens.praenomina.praesidium.praetorial.praetorian.pragmatics.pragmatism.pragmatist.prankishly.pranksters.pratincole.praxeology.preabsorbs.preaccused.preaccuses.preachiest.preachment.preadapted.preadjusts.preadopted.prealtered.preapplied.preapplies.preapprove.prearrange.preassigns.preassured.preassures.preattuned.preattunes.preaverred.prebendary.prebidding.prebilling.prebinding.preblessed.preblesses.preboarded.preboiling.prebooking.prebudgets.precalculi.precancels.precancers.precarious.precasting.precaution.precedence.precedency.precedents.precensors precenting.precentors.preceptive.preceptors.preceptory.precertify.precessing.precession.precharged.precharges.prechecked.prechilled.prechooses.preciosity.preciouses.preciously.precipices.precipitin.precisians.precisions.precleaned.precleared.precluding.preclusion.preclusive.precocious.precollege.precompute.preconcert.preconized.preconizes.precontact.precookers.precooking.precooling.precreased.precreases.precursors.precursory.precutting.predaceous.predacious.predations.predatisms.predecease.prededucts.predefined.predefines.predestine.predicable.predicants.predicated.predicates.predicting.prediction.predictive.predictors.predigests.predinners.predispose.prednisone.predrilled.preediting.preelected.preembargo.preeminent.preempting.preemption.preemptive.preemptors preemptory.preenacted.preerected.preethical.preexcited.preexcites.preexempts.preexisted.preexposed.preexposes.prefabbing.prefascist.prefecture.preferable.preferably.preference.preferment.preferrers.preferring.prefigured.prefigures.prefinance.prefixions.preflights.prefocused.prefocuses.preformats.preforming.prefranked.prefreezes.prefrontal.prefunding.pregenital.pregnantly.pregrowths.preguiding.prehandled.prehandles.prehardens.preharvest.preheaters.preheating.prehensile.prehension.prehistory.preholiday.prehominid.preimposed.preimposes.preinforms.preinserts.preinvited.preinvites.prejudgers.prejudging.prejudiced.prejudices.prelatisms.prelatures.prelecting.prelection.prelectors.prelimited.preloading.prelocated.prelocates.prelogical.prelusions.premarital.premarkets.prematures.premaxilla.premeasure.premedical.premeiotic.premiering.premoisten.premolding.premycotic.prenatally.prenotions.prenticing.prenumbers.prenuptial.preobtains.preopening.preoptions.preordains.preordered.prepackage.prepacking.preparator.preparedly.prepasting.prepayment.prepensely.preplacing.preplanned.preportion.prepossess.prepotency.preppiness.prepricing.preprimary.preprinted.preprocess.preprogram.prepuberal.prepuberty.prepunched prepunches.prequalify.prerecords.prerelease.prerequire.prerinsing.presageful.presbyopes.presbyopia.presbyopic.presbyters.presbytery.preschools.prescience.prescinded.prescoring.prescreens.prescribed.prescriber.prescribes.prescripts.preseasons.preselects.preselling.presentees.presenters.presenting.presentism.presentist.preservers.preservice.preserving.presetting.presettled.presettles.preshaping.preshipped.preshowing.preshrinks.presidency.presidents.presidiary.presidiums.presifting.presignals.presignify.preslicing.presoaking.presolving.presorting.prespecify.pressboard.pressgangs.pressingly.pressmarks.pressrooms.pressuring.pressurise.pressurize.pressworks.prestamped.presternum.prestorage.prestoring.presumable.presumably.presumedly.presummits.presuppose.presurgery.presurveys.presweeten.pretasting.pretelling.pretenders.pretending.pretension.preterites.pretermits.pretesting.pretexting.pretheater.pretorians.pretrained.pretreated.pretrimmed.prettified.prettifier.prettifies.prettiness.preuniting.prevailers.prevailing.prevalence.prevalents.prevaluing.prevenient.preventers.preventing.prevention.preventive.previewers.previewing.previously.previsions.previsited.prevocalic.prewarming.prewarning.prewashing.preweaning.preweighed.preworking.prewrapped.prewriting.prickliest.pridefully.priesthood.priestlier.priggeries.priggishly.primatials.primaveras.primevally.primiparae.primiparas.primitives.primnesses.primordial.primordium.princedoms.princekins.princelets.princelier.princeling.princeship.princesses.principals.principium.principled.principles.printeries.printheads.printmaker.prioresses.priorities.prioritize.priorships.prismatoid.prismoidal.prissiness.pristinely.privateers.privations.privatised.privatises.privatisms.privatists.privatives.privatized.privatizes.privileged.privileges.prizefight.proactions.probations.probenecid.probiotics.procambial.procambium.procaryote.procedural.procedures.proceeders.proceeding.procercoid.processers.processing.procession.processors.proclaimed.proclaimer.proclitics.proclivity.proconsuls.procreated.procreates.procreator.procryptic.proctodaea.proctodeum.proctology.proctorial.proctoring.procumbent.procurable.procurator.prodigally.prodigious.prodromata.producible.production.productive.proenzymes.professing.profession.professors.profferers.proffering.proficient.profilings.profitable.profitably.profiteers.profitless.profitwise.profligacy.profligate.profounder.profoundly.profundity.profusions.progenitor.progestins.proglottid.proglottis.prognosing.prognostic.programers.programing.programmed.programmer.programmes.progressed.progresses.prohibited.proinsulin.projectile.projecting.projection.projective.projectors.prokaryote.prolactins.prolamines.prolapsing.prolocutor.prologists.prologized.prologizes.prologuing.prologuize.prolongers.prolonging.prolusions.promenaded.promenader promenades.promethium.prominence.promissory.promontory.promotable.promotions.promptbook.promptness.promulgate.promulging.pronations.pronatores.pronephric.pronephroi.pronephros.pronghorns.pronominal.pronounced.pronouncer.pronounces.pronuclear.pronucleus.proofreads.proofrooms.propagable.propaganda propagated.propagates.propagator.propagules.propellant.propellent.propellers.propelling.propellors.propending.propensity.properdins.properness.propertied.properties.prophecies.prophesied.prophesier.prophesies.prophetess.propionate.propitiate.propitious.proplastid.propolises.proponents.proportion.propositus.propounded.propounder.propraetor.propretors.proprietor.propulsion.propulsive.propylaeum.propylenes.propylites.prorations.prorogated.prorogates.proroguing.prosateurs.proscenium.prosciutti.prosciutto.proscribed.proscriber.proscribes.prosecting.prosectors.prosecuted.prosecutes.prosecutor.proselyted.proselytes.proseminar.prosimians.prosodical.prosodists.prospected.prospector.prospectus.prospering.prosperity.prosperous.prostatism.prostheses.prosthesis.prosthetic.prostitute.prostomial.prostomium.prostrated.prostrates.protamines.protectant.protecters.protecting.protection.protective.protectors.protectory.proteinase.protending.protensive.protestant.protesters.protesting.protestors.prothallia.prothallus.protistans.protocoled.protoderms.protohuman.protonated.protonates.protonemal.protoplasm.protoplast.protostars.protostele.protostome.prototroph.prototypal.prototyped.prototypes.prototypic.protoxides.protoxylem.protozoans.protozoons.protracted.protractor.protreptic.protruding.protrusion.protrusive.proustites.provenance.provenders.proverbial.proverbing.providence.provincial.proviruses.provisions.provitamin.provolones.proximally.prudential.pruriences.pruriently.prurituses.prussiates.psalmbooks.psalmodies.psalteries.psalterium.psephology.pseudocoel.pseudonyms.pseudopods.psilocybin.psilophyte.psittacine.psoriatics.psychiatry.psychology.psychopath.psychotics.ptarmigans.pteranodon.pteridines.pterosaurs.pterygiums.pterygoids.puberulent.pubescence.publically.publicised.publicises.publicists.publicized.publicizes.publicness.publishers.publishing.puckeriest.puerilisms.puerperium.pugilistic.pugnacious.puissances.pullulated.pullulates.pulmonates.pulsations.pulverable.pulverised.pulverises.pulverized.pulverizer.pulverizes.pummelling.punchballs.punchboard.punctation.punctilios.punctually.punctuated.punctuates.punctuator.puncturing.punditries.pungencies.puninesses.punishable.punishment.punitively.pupillages.puppeteers.puppetlike.puppetries.puppyhoods.purblindly.purchasers.purchasing.purebloods.purenesses.purgations.purgatives.puritanism.purloiners.purloining.puromycins.purporting.purposeful.pursuances.pursuivant.purtenance.purulences.purveyance.pushchairs.pussyfoots.pustulants.pustulated.pustulates.putatively.putonghuas.putrefiers.putrefying.putrescent.putrescine.putschists.puttyroots.puzzlement.puzzlingly.pycnogonid.pycnometer.pyelitises.pyelograms.pyorrhoeas.pyracantha.pyralidids.pyramiding.pyranoside.pyrethrins.pyrethroid.pyrethrums.pyridoxals.pyridoxine.pyridoxins.pyrimidine.pyrocerams.pyrogallol.pyrolizing.pyrologies.pyrolusite.pyrolysate.pyrolyzate.pyrolyzers.pyrolyzing.pyromaniac.pyromanias.pyrometers.pyrometric.pyrophoric.pyroxenite.pyroxenoid.pyroxylins.pyrrhotite.quackeries.quadplexes.quadrangle.quadrantal.quadrantes.quadratics.quadrating.quadrature.quadrennia.quadriceps.quadrilles.quadrivial.quadrivium.quadrumvir.quadrupeds.quadrupled.quadruples.quadruplet.quadrupole.quagmirier.quaintness.qualifiers.qualifying.qualmishly.quandaries.quantified.quantifier.quantifies.quantitate.quantities.quantizers.quantizing.quarantine.quarrelers.quarreling.quarrelled.quarreller.quarryings.quarterage.quarterers.quartering.quartettes.quartzites.quartzitic.quaternary.quaternion.quaternity.quatrefoil.queasiness.quebrachos.queenliest.queenships.queensides.quenchable.quenchless.quercetins quercitron.quesadilla.questioned.questioner.quickeners.quickening.quicklimes.quicksands.quicksteps.quiddities.quiescence.quieteners.quietening.quietistic.quillbacks.quillworks.quillworts.quinacrine.quincunxes.quinidines.quinolines.quinolones.quintettes.quintupled.quintuples.quintuplet.quirkiness.quitclaims.quittances.quixotical.quixotisms.quixotries.quizmaster.quodlibets.quotations.quotidians.rabbinates.rabbinical.rabbinisms.rabbitries.rabblement.rabidities.racecourse.racehorses.racemizing.racetracks.racewalked.racewalker.rachitides.racialisms.racialists.racialized.racializes.racinesses.racketeers.racketiest.raconteurs.radarscope.radiancies.radiations.radicalise.radicalism.radicalize.radicating.radicchios.radiogenic.radiograms.radiograph.radiolabel.radiologic.radiolyses.radiolysis.radiolytic.radiometer.radiometry.radiopaque.radiophone.radiophoto.radiosonde.raffinates.raffinoses.rafflesias.ragamuffin.raggediest.raggedness.ragpickers.railbusses.railleries.railroaded.railroader.rainchecks.rainmakers.rainmaking.rainproofs.rainspouts.rainsquall.rainstorms.rainwashed.rainwashes.rainwaters.rakishness.ramblingly.ramosities.rampageous.rampancies.ramparting.ramrodding.ramshackle.rancherias.rancidness.randomized.randomizer.randomizes.randomness.rangelands.ranknesses.ransackers.ransacking.ranunculus.rapacities.rapidities.rappelling.rapporteur.raptnesses.rarenesses.rashnesses.ratcheting.ratemeters.ratepayers.rationales.rationally.rattletrap.rattlingly.rattooning.raunchiest.rauwolfias.ravagement.ravellings.ravelments.ravenously.ravigottes.ravishment.rawinsonde.raygrasses.razorbacks.razorbills.razzmatazz.reabsorbed.reacceding.reaccented.reaccepted.reacclaims.reaccredit.reaccusing.reacquaint.reacquired.reacquires.reactances.reactivate.reactively.reactivity.readapting.readdicted.readership.readjusted.readmitted.readopting.readorning.readymades.reaffirmed.reaffixing.reafforest.realigning.realizable.reallocate.reallotted.realnesses.realtering.reanalyses.reanalysis.reanalyzed.reanalyzes.reanimated.reanimates.reannexing.reanointed.reappeared.reapplying.reappoints.reappraise.reapproved.reapproves.reargument.rearmament.rearousals.rearousing.rearranged.rearranges.rearrested.reascended.reasonable.reasonably.reasonings.reasonless.reassailed.reassemble.reassembly.reasserted.reassessed.reassesses.reassigned.reassorted.reassuming reassuring.reattached.reattaches.reattacked.reattained.reattempts.reavailing.reawakened.rebalanced.rebalances.rebaptisms.rebaptized.rebaptizes.rebbetzins.rebellions.rebellious.reblending.reblooming.reboarding.rebottling.rebounders.rebounding.rebranched.rebranches.rebreeding.rebuilding.rebuttable.rebuttoned.recallable.recanalize.recappable.recaptured.recaptures.recarpeted.recarrying.recatalogs.recautions.receipting.receiptors.receivable.recemented.recensions.recensored.recentness.receptacle.receptions.recessions.recessives.rechanging.rechannels.rechargers.recharging.recharters.recharting.rechauffes.rechecking.rechoosing.rechristen.recidivism.recidivist.recipients.reciprocal.recircling.recitalist.recitation.recitative.recitativi.recitativo.recklessly.reckonings.recladding.reclaimers.reclaiming.reclasping.reclassify.recleaning.reclosable.reclothing.reclusions.recodified.recodifies.recognised.recognises.recognized.recognizer.recognizes.recoilless.recoinages.recollects.recolonize.recoloring.recombined.recombines.recommence.recommends.recompense.recompiled.recompiles.recomposed.recomposes.recomputed.recomputes.reconceive.reconciled.reconciler.reconciles.recondense.reconducts.reconfined.reconfines.reconfirms.reconnects.reconquers.reconquest.reconsider.reconsigns.reconsoled.reconsoles.reconsults.recontacts.recontours.reconvened.reconvenes.reconverts.reconveyed.reconvicts.reconvince.recordable.recordings.recordists.recountals.recounters.recounting.recoupable.recoupling.recoupment.recoverers.recoveries.recovering.recreances.recreating.recreation.recreative.recrements.recrossing.recrowning.recrudesce.recruiters.recruiting.rectangles.rectifiers.rectifying.rectitudes.rectoceles.rectorates.rectorship.recumbency.recuperate.recurrence.recursions.recyclable.redactions.redamaging.redarguing.redbaiters.redbaiting.redbreasts.redeciding.redecorate.rededicate.redeemable.redefeated.redefected.redefining.redelivers.redelivery.redemanded.redemption.redemptive.redemptory.redeployed.redeposits.redescends.redescribe.redesigned.redevelops.redialling.redictated.redictates.redigested.redingotes.redirected.rediscount.rediscover.redisplays.redisposed.redisposes.redissolve.redistills.redistrict.redividing.redivision.redivorced.redivorces.redlinings.redolences.redolently.redoublers.redoubling.redounding.redrafting.redreaming.redressers.redressing.redressors.redrilling.redshifted.redshirted.reductants.reductases.reductions.redundancy.reedifying.reeditions.reeducated.reeducates.reejecting.reelecting.reelection.reelevated.reelevates.reeligible.reembarked.reembodied.reembodies.reembraced.reembraces.reemerging.reemission.reemitting.reemphases reemphasis.reemployed.reenacting.reenactors.reendowing reenergize.reenforced.reenforces.reengaging.reengineer.reengraved.reengraves.reenjoying.reenlarged.reenlarges.reenlisted.reenrolled.reenslaved.reenslaves.reentering.reenthrone.reentrance.reentrants.reequipped.reerecting.reescalate.reestimate.reevaluate.reexamined.reexamines.reexecuted.reexecutes.reexhibits.reexpelled.reexplains.reexplored.reexplores.reexported.reexposing.reexposure.refashions.refastened.refections.refereeing.referenced.references.referendum.refighting.refiguring.refillable.refiltered.refinanced.refinances.refinement.refineries.refinished.refinisher.refinishes.reflagging.reflations.reflecting.reflection.reflective.reflectors.reflexions.reflexives.refloating.reflooding.reflowered.refluences.refocusing.refocussed.refocusses.reforested.reformable.reformates.reformisms.reformists.refounding.refractile.refracting.refraction.refractive.refractors.refractory.refrainers.refraining.refreezing.refreshens.refreshers.refreshing.refronting.refuelling.refugeeism.refulgence.refundable.refuseniks.refutation.regalities.regardless.regathered.regelating.regeneracy.regenerate.regimental.regimented.regionally.regisseurs.registered.registrant.registrars.registries.reglossing.regnancies.regrafting.regranting.regreening.regreeting.regressing.regression.regressive.regressors.regretters.regretting.regrinding.regrooming.regrooving.regrouping.regularity.regularize.regulating.regulation.regulative.regulators.regulatory.rehammered.rehandling.rehardened.rehearings.rehearsals.rehearsers.rehearsing.rehumanize.rehydrated.rehydrates.reichsmark.reidentify.reigniting.reignition.reimagined.reimagines.reimbursed.reimburses.reimmersed.reimmerses.reimplants.reimported.reimposing.reinciting.reincurred.reindexing.reindicted.reinducing.reinducted.reinfected.reinflamed.reinflames.reinflated.reinflates.reinforced.reinforcer.reinforces.reinformed.reinfusing.reinhabits.reinitiate.reinjected.reinjuries.reinjuring.reinserted.reinspects.reinspired.reinspires.reinstalls.reinstated.reinstates.reinsurers.reinsuring.reinterred.reinvading.reinvasion.reinvented.reinvested.reinviting.reinvoking.reinvolved.reinvolves.reiterated.reiterates.rejacketed.rejections.rejiggered.rejoicings.rejoinders.rejuggling.rejuvenate.rekeyboard.rekindling.reknitting.reknotting.relabeling.relabelled.relacquers.relational.relatively.relativism.relativist.relativity.relativize.relaunched.relaunches.relaunders.relaxation.relearning.releasable.relegating.relegation.relentless.relettered.relevances.relevantly.relicensed.relicenses.relictions.relievable.relievedly.relighting.relinquish.relishable.relocatees.relocating.relocation.reluctance.reluctancy.reluctated.reluctates.relumining.remainders.remanences.remarkable.remarkably.remarketed.remarriage.remarrying.remastered.rematching.remeasured.remeasures.remediable.remedially.remediated.remediates.remediless.remembered.rememberer.remigrated.remigrates.reminisced.reminiscer.reminisces.remissible.remissibly.remissions.remissness.remitments.remittable.remittance.remixtures.remobilize.remodelers.remodeling.remodelled.remodified.remodifies.remoistens.remonetize.remontants.remorseful.remortgage.remoteness.remotivate.remoulades remounting.removeable.remunerate.renascence.renaturing rencontres.rencounter.renderable.renderings.rendezvous.renditions.renegading.renegadoes.renewables.renitences.renography.renominate.renotified.renotifies.renouncers.renouncing.renovating.renovation.renovative.renovators.renumbered.renunciate.reobjected.reobserved.reobserves.reobtained.reoccupied.reoccupies.reoccurred.reoffering.reopenings.reoperated.reoperates.reopposing.reordained.reordering.reorganize.reoriented.reoviruses.reoxidized.reoxidizes.repacified.repacifies.repackaged.repackager.repackages.repainting.repairable.repaneling.repanelled.repapering.reparation.reparative.repassages.repatching.repatriate.repatterns.repayments.repealable.repeatable.repeatedly.repechages.repellants.repellency.repellents.repentance.repeopling.repertoire.repetition.repetitive.rephrasing.repigments.replanning.replanting.replasters.repleaders.repleading.repledging.repletions.replevined.replevying.replicable.replicases.replicated.replicates.replotting.replumbing.replunging.repolarize.repolished.repolishes.repopulate.reportable.reportages.reportedly.repositing.reposition.repository.repowering.reprehends.represents.repressers.repressing.repression.repressive.repressors.reprievals.reprieving.reprimands.reprinters.reprinting.reproached.reproacher.reproaches.reprobance.reprobated.reprobates.reproduced.reproducer.reproduces.reprograms.reptilians.republican.repudiated.repudiates.repudiator.repugnance.repugnancy.repulsions.repurchase.repurified.repurifies.repurposed.repurposes.repursuing.reputation.requesters.requesting.requestors.requiescat.requisites.reradiated.reradiates.rereadings.rerebraces.rerecorded.reregister.reregulate.rereleased.rereleases.rereminded.rerepeated.rereviewed.resaddling.resaluting.resampling.reschedule.reschooled.rescinders.rescinding.rescission.rescissory.rescreened.resculpted.resealable.researched.researcher.researches.reseasoned.resectable.resections.resecuring.reseizures.reselected.resemblant.resemblers.resembling.resentence.resentment.reserpines.reservable.reservedly.reserviced.reservices.reservists.reservoirs.resettable.resettling.resharpens.reshingled.reshingles.reshippers.reshipping.reshooting.reshowered.reshuffled.reshuffles.residences.residually.resighting.resignedly.resilience.resiliency.resilvered.resinating.resinified.resinifies.resistance.resistants.resistible.resistless.resittings.resituated.resituates.resketched.resketches.resmelting.resmoothed.resoftened.resoldered.resolidify.resolutely.resolutest.resolution.resolvable.resolvents.resonances.resonantly.resonating.resonators.resorcinol.resorption.resorptive.resounding.respeaking.respecters.respectful.respecting.respective.respelling.respirable.respirator.resplicing.respondent.responders.responding.responsive.responsory.respooling.respotting.respraying.resprouted.restabling.restacking.restaffing.restamping.restarting.restations.restaurant.restfuller.restitched.restitches.restituted.restitutes.restlessly.restocking.restorable.restrained.restrainer.restraints.restressed.restresses.restricken.restricted.restriking.restriving.restudying.restuffing.resubjects.resultants.resultless.resummoned.resumption.resupinate.resupplied.resupplies.resurfaced.resurfacer.resurfaces.resurgence.resurrects.resurveyed.resuspends.reswallows.retackling.retailings.retailored.retaliated.retaliates.retallying.retardants.retardates.retargeted.reteaching.retellings.retempered.retentions.retextured.retextures.rethinkers.rethinking.rethreaded.reticences.reticently.reticulate.reticulums.retightens.retinacula.retirement.retiringly.retorsions.retortions.retotaling.retotalled.retouchers.retouching.retracking.retractile.retracting.retraction.retractors.retrainees.retraining.retransfer.retransmit.retreading.retreatant.retreaters.retreating.retrenched.retrenches.retrievals.retrievers.retrieving.retrimming.retroacted.retroceded.retrocedes.retrodicts.retrofired.retrofires.retrograde.retrogress.retropacks.retrospect.retroviral.retrovirus.returnable.retwisting.reunifying.reunionist.reutilized.reutilizes.reuttering.revalidate.revalorize.revaluated.revaluates.revanchism.revanchist.revealable.revealment.revegetate.revelation.revelators.revelatory.revelments.revengeful.reverenced.reverencer.reverences.reverently.reverified.reverifies.reversible.reversibly.reversions.revertants.revertible.revetments.revibrated.revibrates.revictuals.reviewable.revilement.reviolated.reviolates.revisiting.revitalise.revitalize.revivalism.revivalist.revivified.revivifies.revocation.revolution.revolvable.revulsions.rewakening.rewardable.reweighing.rewidening.rewrapping.rhabdomere.rhapsodies.rhapsodist.rhapsodize.rheologies.rheologist.rheometers.rheophiles.rheostatic.rhetorical.rheumatics.rheumatism.rheumatoid.rhigolenes.rhinestone.rhinitides.rhinoceros.rhinoscopy.rhinovirus.rhizoplane.rhizopuses.rhodamines.rhodolites.rhodonites.rhodopsins.rhomboidal.rhomboidei.rhotacisms.rhymesters.rhythmical.rhythmists.rhythmized.rhythmizes.rhytidomes.ribaldries.ribavirins.ribbonfish.ribbonlike.ribgrasses.riboflavin.richnesses.ricketiest.rickettsia.ricocheted.riderships.ridgebacks.ridgelines.ridgelings.ridgepoles.ridiculers.ridiculing.ridiculous.rifampicin.rifamycins.rifenesses.riflebirds.rigamarole.rightfully.rightsized.rightsizes.rigidified.rigidifies.rigidities.rigmaroles.rigoristic.rigorously.rijstafels.rijsttafel.riminesses.rimosities.rinderpest.ringbarked.ringhalses.ringleader.ringmaster.ringtosses.ripenesses.riprapping.ripsnorter.risibility.ritardando.ritonavirs.ritornelli.ritornello.ritualisms.ritualists.ritualized.ritualizes.riverbanks.riverboats.riverfront.riverheads.riversides.riverwards.riverweeds.rivetingly.roadblocks.roadhouses.roadrunner.roadsteads.roadworthy.robotizing.robustious.robustness.rocamboles.rockabilly.rocketeers.rocketries.rockfishes.rockhopper.rockhounds.rockshafts.rockslides.roisterers.roistering.roisterous.rollicking.romanising.romanizing.romeldales.rootedness.rootstalks.rootstocks.ropedancer.ropewalker.ropinesses.roquelaure.rosanilins.rosebushes.rosefishes.rosemaling.rosemaries.rosinesses.rosinweeds.rostellums.rotameters.rotational.rotatively.rotiferans.rotisserie.rotorcraft.rototilled.rototiller.rottenness.rottweiler.rotundness.roughbacks.roughcasts.roughdried.roughdries.roughening.roughhewed.roughhouse.roughnecks.roughrider.rouletting.roundabout.roundballs.roundelays.roundheels.roundhouse.roundtable.roundtrips.roundwoods.roundworms.rouseabout.rousements.roustabout.routinisms.routinists.routinized.routinizes.rowanberry.royalmasts.roystering.rubberiest.rubberized.rubberizes.rubberlike.rubberneck.rubellites.rubrically.rubricated.rubricates.rubricator.rubricians.rubythroat.rudbeckias.rudderless.rudderpost.rudenesses.rudimental.ruefulness.ruffianism.ruggedized.ruggedizes.ruggedness.rugosities.ruinations.rulerships.ruminantly.ruminating.rumination.ruminative.ruminators.rumrunners.runarounds.ruralising.ruralities.ruralizing.rushlights.russetings.russetting.russifying.rustically.rusticated.rusticates.rusticator.rustproofs.rutheniums.ruthlessly.ryegrasses.sabadillas.sabbatical.sabotaging.sacahuista.sacahuiste.saccharase.saccharide.saccharify.saccharine.saccharins.sacculated.sacerdotal.sackcloths.sacralized.sacralizes.sacraments.sacredness.sacrificed.sacrificer.sacrifices.sacrileges.sacristans.sacristies.sacroiliac.sacrosanct.saddlebags.saddlebows.saddlebred.saddleless.saddleries.saddletree.safeguards.safelights.safenesses.safflowers.safranines.sagacities.saganashes.sagenesses.sagittally.sailboards.sailboater.sailcloths.sailfishes.sailmakers.sailplaned.sailplaner.sailplanes.sainthoods.saintliest.saintships.salability.salacities.salamander.salesclerk.salesgirls.salesrooms.saleswoman.saleswomen.salicylate.saliencies.salimeters.salinities.salinizing.salivating.salivation.salivators.sallowness.salmagundi.salmonella.salmonoids.salometers.saltarello.saltations.saltbushes.saltcellar.saltchucks.saltnesses.saltpeters.saltpetres.saltshaker.salubrious.saluretics.salutarily.salutation.salutatory.salvarsans.salvations.salverform.samaritans.samarskite.samenesses.sanatorium.sanbenitos.sanctified.sanctifier.sanctifies.sanctimony.sanctioned.sanctities.sandalling.sandalwood.sandbagged.sandbagger.sandblasts.sandcracks.sanderling.sandfishes.sandgrouse.sandlotter.sandpapers.sandpapery.sandpipers sandstones.sandstorms.sandwiched.sandwiches.sanenesses.sangfroids.sanguinary.sanguinely.sanguinity.sanitarian.sanitaries.sanitarily.sanitarium.sanitating.sanitation.sanitising.sanitizers.sanitizing.sanitorium.sannyasins.santolinas.santonicas.sapanwoods.sapidities.sapiencies.sapodillas.sapogenins.saponified.saponifier.saponifies.sapphirine.sapraemias.saprogenic.saprolites.saprophyte.sapsuckers.sarabandes.sarcocarps.sarcolemma.sarcomeres.sarcophagi.sarcoplasm.sarcosomal.sarcosomes.sardonyxes.sargassums.sarracenia.saskatoons.sassywoods.satchelful.satellites.satiations.satinettes.satinwoods.satirising.satirizers.satirizing.satisficed.satisfices.satisfiers.satisfying.saturaters.saturating.saturation.saturators.saturnalia.saturniids.saturnisms.satyagraha.satyriases.satyriasis.sauceboats.sauceboxes.saucerlike.sauerkraut.saunterers.sauntering.savageness.savageries.savoriness.savouriest.sawboneses.sawtimbers.saxicolous.saxifrages.saxitoxins.saxophones.saxophonic.scabbarded.scabiouses.scabrously.scaffolded.scagliolas.scalations.scaletails.scallawags.scallopers.scalloping.scallopini.scallywags.scalograms.scaloppine.scammonies.scamperers.scampering.scandaling.scandalise.scandalize.scandalled.scandalous.scantiness.scantlings.scapegoats.scapegrace.scaphopods.scapolites.scarabaeus.scaramouch.scarceness.scarcities.scarecrows.scareheads.scarfskins.scarifiers.scarifying.scarlatina.scarpering.scatheless.scathingly.scatterers.scattergun.scattering.scavengers.scavenging.scenarists.scenically.sceptering.scepticism.schatchens.schedulers.scheduling.scheelites.schematics.schematism.schematize.scherzando.schillings.schipperke.schismatic.schizocarp.schizogony.schizopods.schizziest.schlemiels.schlemihls.schlepping.schlockier.schlumpier.schlumping.schmaltzes.schmalzier.schmearing.schmeering.schmoosing.schmoozers.schmoozier.schmoozing.schnappers.schnauzers.schnitzels.schnorkels.schnorrers.schnozzles.scholastic.scholiasts.schoolbags.schoolbook.schoolboys.schoolgirl.schoolings.schoolkids.schoolmarm.schoolmate.schoolroom.schooltime.schoolwork.schvartzes.schwartzes.sciaenoids.scientific.scientisms.scientists.scientized.scientizes.scintillae.scintillas.sciolistic.scirrhuses.scissoring.scleromata.sclerosing.sclerotial.sclerotics.sclerotins.sclerotium.scolecites.scolloping.scombroids.sconcheons.scootching.scoreboard.scorecards.scorifiers.scorifying.scornfully.scorpaenid.scoundrels.scoutcraft.scouthered.scowdering.scowlingly.scrabblers.scrabblier.scrabbling.scraggiest.scragglier.scraiching.scraighing.scramblers.scrambling.scrapbooks.scrapheaps.scrappages.scrappiest.scratchers.scratchier.scratchily.scratching.scrawliest.scrawniest.screechers.screechier.screeching.screenable.screenfuls.screenings.screenland.screenplay.screwballs.screwbeans.screwiness.screwworms.scribblers.scribbling.scrimmaged.scrimmager.scrimmages.scrimpiest.scrimshaws.scriptoria.scriptural.scriptures.scriveners.scrofulous.scroggiest.scrollwork.scrooching.scrootched.scrootches.scroungers.scroungier.scrounging.scrubbable.scrubbiest.scrublands.scrubwoman.scrubwomen.scruffiest.scrummaged.scrummages.scrunchies.scrunching.scrupulous.scrutineer.scrutinies.scrutinise.scrutinize.sculleries.sculptress.sculptural.sculptured.sculptures.scuncheons.scungillis.scunnering.scuppering.scurrility.scurrilous.scurviness.scutcheons.scutellate.scuttering.scuzzballs.scyphozoan.seabeaches.seaborgium.seafarings.sealifting.seamanlike.seamanship.seamlessly.seamstress.searchable.searchless.seasonable.seasonably.seasonally.seasonings.seasonless.seastrands.seborrheas.seborrheic.secessions.secludedly.seclusions.secondhand.secretions.sectarians.sectionals.sectioning.sectorials.secularise.secularism.secularist.secularity.secularize.securances.securement.secureness.securities.securitize.sedateness.sedimented.seducement.seductions.seductress.sedulities.sedulously.seecatchie.seedeaters.seedstocks.seemliness.seersucker.segmentary.segmenting.segregants.segregated.segregates.seguidilla.seignorage.seignorial.seignories.seismicity.seismogram.seismology.selachians.selectable.selections.selectness.selenology.selflessly.selfnesses.sellotaped.sellotapes.semainiers.semantemes.semantical.semaphored.semaphores.semblables.semblances.semeiology.semeiotics.semestrial.semiangles.semiannual.semibreves.semicircle.semicolons.semicolony.semidesert.semidivine.semidrying.semidwarfs.semifeudal.semifinals.semifitted.semifluids.semiformal.semigroups.semihoboes.semilethal.semiliquid.semimetals.seminarian.seminaries.seminarist.seminomads.seminomata.seminudity.semiopaque.semipostal.semipublic.semiquaver.semirounds.semisacred.semisecret.semisolids.semitropic.semitrucks.semivowels.semiweekly.semiyearly.sempstress senatorial.senatorian.senescence.seneschals.senhoritas.senilities.sennachies.sensations.sensibilia.sensiblest.sensitised.sensitises.sensitives.sensitized.sensitizer.sensitizes.sensoriums.sensualism.sensualist.sensuality.sensualize.sensuosity.sensuously.sentencers.sentencing.sententiae.sentential.sentiences.sentiently.sentiments.sentineled.separately.separating.separation.separatism.separatist.separative.separators.sepiolites.septenarii.septennial.septicemia.septicemic.septicidal.septillion.septuplets.septupling.sepulchers.sepulchral.sepulchred.sepulchres.sepultures.sequacious.sequelized.sequelizes.sequencers.sequencies.sequencing.sequential.sequesters.sequestrum.serenaders.serenading.sereneness.serenities.serialised.serialises.serialisms.serialists.serialized.serializes.seriations.serigraphs.serigraphy.seriocomic.sermonette.sermonized.sermonizer.sermonizes.serologies.serologist.serosities.serotinies.serotinous.serotonins.serotyping.serpentine.serpigines.serrations.serratures.serviceman.servicemen.serviettes.servitudes.servomotor.sestertium.settleable.settlement.seventeens.seventieth.severances.severeness.severities.sewability.sexennials.sexinesses.sexologies.sexologist.sextillion.sextuplets.sextupling.sexualized.sexualizes.sforzandos.shabbiness.shadbushes.shadchanim.shadkhanim.shadowiest.shadowless.shadowlike.shagginess.shaggymane.shakedowns.shallowest.shallowing.shamanisms.shamanists.shamefaced.shamefully.shammashim.shampooers.shampooing.shanachies.shandygaff.shanghaied.shanghaier.shankpiece.shantytown.shapeliest.sharecrops.sharewares.sharkskins.sharpeners.sharpening.shashlicks.shatterers.shattering.shavelings.shavetails.shearlings.shearwater.sheathbill.sheathings.sheepberry.sheepcotes.sheepfolds.sheepheads.sheepishly.sheepshank.sheepshead.sheepskins.sheepwalks.sheetrocks.sheikhdoms.sheldrakes.shellacked.shellbacks.shellbarks.shellfires.shellproof.shellworks.shelterers.sheltering.shenanigan.shepherded.sheriffdom.shewbreads.shibboleth.shiftiness.shikarring.shillalahs.shillelagh.shillelahs.shimmering.shinguards.shinleaves.shinneries.shinneying.shipboards.shipfitter.shipmaster.shipowners.shipwrecks.shipwright.shirtdress.shirtfront.shirtmaker.shirttails.shirtwaist.shlemiehls.shlimazels.shlockiest.shmaltzier.shockingly.shockproof.shoddiness.shoeblacks.shoehorned.shoemakers.shoeshines.shoestring.shogunates.shootdowns.shopkeeper.shoplifted.shoplifter.shopwindow.shorebirds.shorefront.shorelines.shorewards.shortbread.shortcakes.shorteners.shortening.shortfalls.shorthairs.shorthands.shortheads.shorthorns.shortlists.shortstops.shortwaved.shortwaves.shotgunned.shotgunner shouldered.shovelfuls.shovellers.shovelling.shovelnose.shovelsful.showbizzes.showboated.showbreads.showcasing.showerhead.showerless.showpieces.showplaces.shrewdness.shrewishly.shrewmouse.shriekiest.shrievalty.shrillness.shrimpiest.shrimplike.shrinkable.shrinkages.shriveling.shrivelled.shrubbiest.shrublands.shtickiest.shuddering.shunpikers.shunpiking.shutterbug.shuttering.shylocking.sialagogue.sibilances.sibilantly.sibilating.sibilation.sibilators.siccatives.sicklemias.sickliness.sicknesses.sideboards.sideburned.sidechecks.sidelights.sideliners.sidelining.sidepieces.siderolite.sidesaddle.sidestream.sidestroke.sideswiped.sideswipes.sidetracks.sidewinder.sightliest.sightlines.sightseers.signalised.signalises.signalized.signalizes.signallers.signalling.signalment.signatures.signboards.signifieds.signifiers.signifying.signiories.signorinas.signposted.silentness.silhouette.silicified.silicifies.silicotics.silkalines.silkolines.siltations.siltstones.silverback.silverfish.silverings.silverside.silverware.silverweed.similarity.similitude.simoniacal.simonizing.simpleness.simpletons.simplicial.simplicity.simplified.simplifier.simplifies.simplistic.simulacres.simulacrum.simulating.simulation.simulative.simulators.simulcasts.sincipital.sinfulness.singalongs.singleness.singletons.singletree.singspiels.singularly.sinicizing.sinisterly.sinistrous.sinoatrial.sinologies.sinologist.sinologues.sinsemilla.sinuations.sinusoidal.siphonages.sisterhood.sitologies.sitosterol.situations.sixteenmos.sixteenths.sizarships.sizinesses.sjamboking.skaldships.skateboard.skedaddled.skedaddler.skedaddles.skeletally.skeletonic.skeltering.skepticism.sketchbook.sketchiest.sketchpads.skewnesses.skiagraphs.skiascopes.skibobbers.skibobbing.skiddooing.skijorings.skillfully.skimboards.skimobiled.skimobiles.skimpiness.skinflicks.skinflints.skinniness.skippering.skirmished.skirmisher.skirmishes.skitterier.skittering.skittishly.skreeghing.skreighing.skunkweeds.skybridges.skydivings.skyjackers.skyjacking.skylarkers.skylarking.skylighted.skyrockets.skyscraper.skysurfers.skysurfing.skywriters.skywriting.skywritten.slabbering.slackeners.slackening.slalomists.slamdanced.slamdances.slanderers.slandering.slanderous.slanginess.slanguages.slantingly.slapdashes.slapsticks.slashingly.slathering.slatternly.slaughters.slavocracy.slavocrats.sleazebags.sleazeball.sleaziness.sleekening.sleepiness.sleepovers.sleepwalks.sleepyhead.sleeveless.sleevelets.slenderest.slenderize.slickeners.slickening.slickrocks.slicksters.slightness.slimeballs.slimnesses.slimpsiest.slingbacks.slingshots.slinkiness.slipcovers.slipformed.slipperier.slipsheets.slipstream.slithering.slivovices.slobberers.slobbering.sloganeers.sloganized.sloganizes.sloppiness.slothfully.slouchiest.sloughiest.slovenlier.slownesses.slubbering.sluggardly.sluggishly.sluiceways.slumberers.slumbering.slumberous.slungshots.slushiness.sluttishly.smallmouth.smallpoxes.smallsword.smaragdine.smaragdite.smarminess.smartasses.smartening.smartphone.smartweeds.smashingly.smatterers.smattering smearcases.smelteries.smiercases.smitheries.smokehouse.smokejacks.smokestack.smoldering.smoothbore.smoothened.smoothness.smotherers.smothering.smouldered.smudginess.smugnesses.smutchiest.smuttiness.snakebirds.snakebites.snakeheads.snakeroots.snakeskins.snakeweeds.snapdragon.snappiness.snappishly.snatchiest.sneakiness.sneakingly.sneezeweed.snickerers.snickering.sniffiness.sniffishly.sniggerers.sniggering.snippetier.snivellers.snivelling.snobberies.snobbishly.snookering.snootiness.snorkelers.snorkeling.snottiness.snowballed.snowblinks.snowblower.snowboards.snowbushes.snowcapped.snowdrifts.snowfields.snowflakes.snowmakers.snowmaking.snowmobile.snowplowed.snowscapes.snowshoers.snowslides.snowstorms.snubbiness.snubnesses.snuffboxes.snuffliest.snuggeries.snugnesses.soapboxing.soapstones.soberizing.sobersided.sobersides.sobrieties.sobriquets.socialised.socialises.socialisms.socialists.socialites.socialized.socializer.socializes.societally.sociograms.sociolects.sociologic.sociometry.sociopaths.sodalities.sodbusters.soddenness.sodomizing.softballer.softbounds.softcovers.softheaded.softnesses.softshells.sojourners.sojourning.solacement.solarising.solarizing.soldieries.soldiering.solecising.solecistic.solecizing.solemnized.solemnizes.solemnness.solenesses.solenodons.solenoidal.soleplates.soleprints.solfataras.solfeggios.solferinos.solicitant.soliciting.solicitors.solicitous.solicitude.solidarism.solidarist.solidarity.solidified.solidifies.solidities.solipsisms.solipsists.solitaires.solitaries.solitarily.solonchaks.solonetses.solonetzes.solonetzic.solstitial.solubilise.solubility.solubilize.solvations.solvencies.solvolyses.solvolysis.solvolytic.somatology.somatotype.somberness.somebodies.someplaces.somersault.somerseted.somethings.somewheres.sommeliers.somnolence.songlessly.songsmiths.songstress.songwriter.sonicating.sonication.sonicators.sonneteers.sonnetized.sonnetizes.sonnetting.sonography.sonorities.sonorously.soothingly.soothsayer.sopaipilla.sopapillas.sophomores.sophomoric.soporifics.sopraninos.sordidness.soreheaded.sorenesses.sororities.sortileges.sortitions.sostenutos.soubrettes.soubriquet.soullessly.soundalike.soundboard.soundboxes.soundingly.soundproof.soundstage.soundtrack.soupspoons.sourcebook.sourceless.sourdoughs.sournesses.sourpusses.sousaphone.southbound.southeasts.southerner.southlands.southwards.southwests.souvlakias.sovereigns.sovietisms.sovietized.sovietizes.sovranties.sowbellies.spacebands.spacecraft.spaceports.spaceships.spacesuits.spacewalks.spaciously.spadeworks.spaghettis.spallation.spanceling.spancelled.spangliest.sparkliest.sparkplugs.sparseness.sparsities.sparteines.spasticity.spathulate.spatiality.spattering.spearheads.spearmints.spearworts.specialest.specialise.specialism.specialist.speciality.specialize.speciating.speciation.speciesism.specifiers.specifying.speciosity.speciously.spectacled.spectacles.spectating.spectators.spectrally.specularly.speculated.speculates.speculator.speechless.speedballs.speedboats.speediness.speedreads.speedsters.speedwells.speleology.spellbinds.spellbound.spelldowns.spelunkers.spelunking.spermaceti.spermaries.spermatial.spermatids.spermatium.spermicide.sperrylite.sphalerite.sphenodons.sphenodont.sphenoidal.sphenopsid sphericity.spheroidal.spherulite.sphincters.sphinxlike.sphygmuses.spideriest.spiderlike.spiderwebs.spiderwort.spiffiness.spikenards.spillikins.spillovers.spindliest.spindrifts.spinifexes.spinnakers.spinnerets.spinneries.spinsterly.spiracular.spiralling.spiritedly.spiritisms.spiritists.spiritless.spirituals.spirituous.spirochete.spirogyras.spirometer.spirometry.spirulinas.spitefully.spittlebug.splanchnic.splashdown.splashiest.splattered.spleeniest.spleenwort.splendider.splendidly.splendours.splendrous.splenetics.spleuchans.splintered.splotchier.splotching.splurgiest.spluttered.splutterer.spodumenes.spoilsport.spokeshave.spoliating.spoliation.spoliators.spongeware.sponginess.sponsorial.sponsoring.spooferies.spookeries.spookiness.spoonbills.spoonerism.sporangial.sporangium.sporicidal.sporicides.sporocarps.sporocysts.sporogenic.sporogonia.sporogonic.sporophore.sporophyll.sporophyls.sporophyte.sporozoans.sporozoite.sportfully.sportiness.sportingly.sportively.sportscast.sportswear.sporulated.sporulates.spotlessly.spotlights.spottiness.spraddling.sprattling.sprawliest.spreadable.spriggiest.sprightful.sprigtails.springalds.springboks.springeing.springhead.springiest.springings.springlets.springlike.springtail.springtide.springtime.springwood.sprinklers.sprinkling.spritsails.spruceness.sprynesses.spunbonded.spunkiness.spurgalled.spuriously.sputterers.sputtering.spyglasses.spymasters.squabbiest.squabblers.squabbling.squadroned.squalidest.squalliest.squamation.squamosals.squamulose.squandered.squanderer.squareness.squarishly.squashiest.squattered.squattiest.squawroots.squeakiest.squeezable.squelchers.squelchier.squelching.squeteague.squiffiest.squigglier.squiggling.squinching.squinniest.squinnying.squintiest.squirarchy.squirmiest.squirreled.squirrelly.squishiest.squooshier.squooshing.stabilised.stabilises.stabilized.stabilizer.stabilizes.stableboys.stablemate.stableness.stablished.stablishes.stagecoach.stagecraft.stagehands.staggerers.staggering.staghounds.stagnances.stagnantly.stagnating.stagnation.stainproof.staircases.stairheads.stairsteps.stairwells.stalactite.stalagmite.stalemated.stalemates.stalwartly.stalworths.staminodes.staminodia.stammerers.stammering stampeders.stampeding.stanchions.standardly.standdowns.standfasts.standishes.standpipes.standpoint.standstill.stannaries.starboards.starbursts.starchiest.starfishes.starflower.starfruits.stargazers.stargazing.starlights.starstruck.starvation.starveling.statecraft.statehoods.statehouse.stateliest.statements.staterooms.statically.stationary.stationers.stationery.stationing.statistics.statoblast.statocysts.statoliths.statoscope.statuaries.statuesque.statuettes.statutable.staunchest.staunching.staurolite.stavesacre.stavudines.steadiness.steakhouse.stealthier.stealthily.steamboats.steamering.steaminess.steamrolls.steamships.steelheads.steeliness.steelmaker.steelworks.steelyards.steenbucks.steepening.stegosaurs.stellified.stellifies.stemmeries.stenchiest.stencilers.stenciling.stencilled.stenciller.stenobaths.stenotherm.stenotopic.stenotyped.stenotypes.stentorian.stepfamily.stepfather.stepladder.stepmother.stepparent.stepsister.stepstools.steradians.stereogram.stereology.stereopses.stereopsis.stereotype.stereotypy.sterically.sterigmata.sterilants.sterilised.sterilises.sterilized.sterilizer.sterilizes.sterlingly.sternposts.sternwards.stertorous.stevedored.stevedores.stewardess.stewarding.stickballs.stickiness.stickseeds.sticktight.stickweeds.stickworks.stiffeners.stiffening.stiflingly.stigmatics.stigmatist.stigmatize.stilettoed.stilettoes.stillbirth.stillborns.stillrooms.stimulants.stimulated.stimulates.stimulator.stingarees.stinginess.stingingly.stinkeroos.stinkhorns.stinkingly.stinkweeds.stinkwoods.stipplings.stipulated.stipulates.stipulator.stirabouts.stirringly.stitchwort.stochastic.stockading.stockiness.stockinets.stockinged.stockpiled.stockpiler.stockpiles.stockrooms.stockyards.stodginess.stokeholds.stokeholes.stomachers.stomachics.stomaching.stomatitis.stomatopod.stomodaeal.stomodaeum.stomodeums.stoneboats.stonechats.stonecrops.stoneflies.stonemason.stonewalls.stonewares.stoneworks.stoneworts.stonishing.stoopballs.stoplights.stoppering.storefront.storehouse.storerooms.storeships.storksbill.stormbound.storminess.storyboard.storybooks.stoutening.stovepipes.strabismic.strabismus.straddlers.straddling.stragglers.stragglier.straggling.straighted.straighten.straighter.straightly.straitened.straitness.stramashes.stramonies.stramonium.strandline.strangered.stranglers.strangling.straphangs.strappados.strappiest.strappings.stratagems.strategies.strategist.strategize.strathspey.stratified.stratifies.stratiform.stravaging.stravaiged.strawberry.strawworms.streakiest.streakings.streambeds.streamiest.streamings.streamlets.streamline.streamside.streetcars.streetlamp.streetwise.strengthen.stressless.stretchers.stretchier.stretching.strewments.striations.strickling.strictions.strictness.strictures.stridences.stridently.stridulate.stridulous.strifeless.strikeouts.strikeover.strikingly.stringency.stringendo.stringhalt.stringiest.stringings.stringless.stripeless.striplings.strippable.striptease.strobotron.stroganoff.stronghold.strongyles.strontians.strontiums.strophoids.strophulus.stroppiest.stroudings.structural.structured.structures.strugglers.struggling.struthious.strychnine.stubbliest.stubborner.stubbornly.stuccowork.studfishes.studhorses.studiously.stuffiness.stultified.stultifies.stumblebum.stunningly.stuntwoman.stuntwomen.stupefiers stupefying.stupendous.stupidness.sturdiness.stutterers.stuttering.stylebooks.stylistics.stylitisms.stylobates.stylolites.stylopodia.styrofoams.subacutely.subalterns.subaquatic.subaqueous.subarctics.subaudible.subaverage.subbureaus.subbureaux.subcabinet.subceiling.subcellars.subcenters.subcentral.subchapter.subchasers.subclassed.subclasses.subclauses.subclavian.subcluster.subcollege.subcompact.subconsuls.subcooling.subcordate.subcostals.subcrustal.subculture.subcutises.subdeacons.subdealers.subdialect.subdivided.subdivider.subdivides.subducting.subduction.subeconomy.subediting.subeditors.subentries.suberising.suberizing.subfossils.subgenuses.subglacial.subgrouped.subheading.subindexes.subindices.subinfeuds subjacency.subjecting.subjection.subjective.subjoining.subjugated.subjugates.subjugator.subkingdom.sublations.subleasing.sublessees.sublessors.subletting.sublicense.sublimable.sublimated.sublimates.subliminal.sublingual.submanager.submarined.submariner.submarines.submarkets.submaximal.submediant.submerging.submersing.submersion.subminimal.submission.submissive.submittals.submitters.submitting.submucosae.submucosal.submucosas.subnetwork.subnormals.subnuclear.subnucleus.suboceanic.suboptimal.suboptimum.suborbital.suboscines.subpenaing.subperiods.subpoenaed.subpotency.subprimate.subproblem.subprocess.subproduct.subprogram.subproject.subregions.subreption.subrogated.subrogates.subroutine.subsampled.subsamples.subscience.subscribed.subscriber.subscribes.subscripts.subsection.subsectors.subsegment.subseizure.subsequent.subserving.subsidence.subsidiary.subsidised.subsidises.subsidized.subsidizer.subsidizes.subsistent.subsisters.subsisting.subsociety.subsoilers.subsoiling.subspecies.substances.substation.substitute.substrates.substratum.subsumable.subsurface.subsystems.subtenancy.subtenants.subtending.subterfuge.subtextual.subtilisin.subtilized.subtilizes.subtilties.subtitling.subtleness.subtleties.subtotaled.subtotally.subtracted.subtracter.subtrahend.subtropics.subvariety.subvassals.subvention.subversion.subversive.subverters.subverting.subviruses.subvisible.subvocally.subwoofers.subwriters.succedanea.succeeders.succeeding.successful.succession.successive.successors.succinates.succincter.succinctly.succouring.succubuses.succulence.succulents.succumbing.succussing.suchnesses.suckfishes.sucraloses suctioning.suctorians.sudatories.sudatorium.suddenness.sudorifics.sufferable.sufferably.sufferance.sufferings.sufficient.suffixions.sufflating.suffocated.suffocates.suffragans.suffragist.suffusions.sugarberry.sugarcanes.sugarcoats.sugarhouse.sugarplums.suggesters.suggesting suggestion.suggestive.suicidally.sulcations.sulfatases.sulfations.sulfhydryl.sulfonated.sulfonates.sulfoniums.sulfoxides.sulfurated.sulfurates.sulfureted.sulfurized.sulfurizes.sullenness.sulphating.sulphuring.sulphurise.sulphurous.sultanates.sultriness.summarised.summarises.summarists.summarized.summarizer.summarizes.summations.summeriest.summerlike.summerlong.summersets.summertime.summerwood.summiteers.summitries.summonable.summonsing.sunbathers.sunbathing.sunbonnets.sunburning.sundowners.sundowning.sundresses.sunflowers.sunglasses.sunporches.sunscreens.sunseekers.sunstrokes.suntanning.superadded.superagent.superalloy.superatoms superbanks.superbitch.superblock.superbness.superboard.superbombs.supercargo.superceded.supercedes.superclass.superclean.superclubs.supercoils.supercools.superelite.superettes.superfarms.superfirms.superfixes.superflack.superfluid.superfunds.supergenes.supergiant.superglued.superglues.supergroup.superheats.superheavy superhelix.superhuman.superhyped.superhypes.superiorly.superjocks.superjumbo.superlarge.superlight.superliner.superlunar.superlying.supermacho.supermales.supermicro.superminds.superminis.supermodel.supernally.supernates.supernovae.supernovas.superorder.superoxide.superpimps.superplane.superports.superposed.superposes.superpower.superraces.superroads.supersales.supersaurs.superscale.superscout.superseded.superseder.supersedes.supersells.supersexes.supersharp.supershows.supersized.supersizes.superslick.supersmart.supersonic.superspies.superstars.superstate.superstock.superstore.superstuds.supersweet.supertaxes.superthick.supertight.supertonic.supervened.supervenes.supervised.supervises.supervisor.superwaves.superwides.superwives.superwoman.superwomen.supinating.supination.supinators.supineness.suppertime.supplanted.supplanter.supplejack.supplement.suppleness.suppletion.suppletive.suppletory.suppliance.suppliants.supplicant.supplicate.supporters.supporting.supportive.supposable.supposably.supposedly.suppressed.suppresses.suppressor.suppurated.suppurates.supraoptic.suprarenal.supravital.surceasing.surcharged.surcharges.surcingled.surcingles.surefooted.surenesses.suretyship.surfacings.surfactant.surfboards.surfeiters.surfeiting.surffishes.surgically.surjection.surjective.surmounted.surmullets.surpassers.surpassing.surplusage.surplusing.surplussed.surplusses.surprinted.surprisals.surprisers.surprising.surprizing.surrealism.surrealist.surrenders.surrogated.surrogates.surrounded.surveilled.surveyings.survivable.survivance.susceptive.suspecting.suspenders.suspending.suspensers.suspension.suspensive.suspensors.suspensory.suspicions suspicious.sustainers.sustaining.sustenance.susurrated.susurrates.susurruses.suzerainty.svelteness.swaggerers.swaggering.swallowers.swallowing.swampiness.swamplands.swankiness.swanneries.swansdowns.swarajisms.swarajists.swarthiest.swaybacked.swearwords.sweatbands.sweatboxes.sweatiness.sweatpants.sweatshirt.sweatshops.sweatsuits.sweepbacks.sweepingly.sweetbread.sweetbriar.sweetbrier.sweeteners.sweetening.sweetheart.sweetishly.sweetmeats.sweetshops.swellheads sweltering.sweltriest.sweptwings.swimmerets.swimmingly.swineherds.swinepoxes.swingingly.swirlingly.swishingly.switchable.switchback.switcheroo.switchyard.swithering.swivelling.swooningly.swoopstake.swordplays.swordtails.sybaritism.sycophancy.sycophants.syllabisms.syllabized.syllabizes.syllabling.syllabuses.syllogisms.syllogists.syllogized.syllogizes.sylvanites.sylvinites.symbolical.symbolised.symbolises.symbolisms.symbolists.symbolized.symbolizer.symbolizes.symbolling.symmetries.symmetrize.sympathies.sympathins.sympathise.sympathize.sympatries symphonies.symphonist.symphyseal.symphysial.symposiacs.symposiast.symposiums.synaereses.synaeresis.synagogues.synalephas.synaloepha.syncarpies.syncarpous.synchronal.synchronic.syncopated.syncopates.syncopator.syncretise.syncretism.syncretist.syncretize.syndactyls.syndactyly.syndesises.syndicated.syndicates.syndicator.synecdoche.synecology.synergetic.synergisms.synergists.synkaryons.synonymies.synonymist.synonymity.synonymize.synonymous.synopsized.synopsizes.synoptical.synostoses.synostosis.syntactics.syntagmata.synthesist.synthesize.synthetase.synthetics.syphilises.syphilitic.systematic.systemized.systemizes.systemless.tabboulehs.tabernacle.tablatures.tablecloth.tablelands.tablemates.tablespoon.tabletting.tablewares.tabulating.tabulation.tabulators.tacamahacs.tachometer.tachylites.tachylytes.tackboards.tackifiers.tackifying.tactically.tacticians.tactlessly.taekwondos.taffetized.tahsildars.tailboards.tailcoated.tailenders.tailgaters.tailgating.taillights.tailorbird.tailorings.tailpieces.tailplanes.tailslides.tailstocks.tailwaters.talebearer.talentless.talismanic.talkathons.tallnesses.tallyhoing.talmudisms.tamarillos.tambourers.tambourine.tambouring.tambourins.tamenesses.tamoxifens.tangencies.tangential.tangerines.tanglement.tanistries.tantalates.tantalised.tantalises.tantalites.tantalized.tantalizer.tantalizes.tantaluses.tantamount.tanzanites.taperstick.tapestried.tapestries.taphonomic.taradiddle.tarantases.tarantella.tarantisms.tarantists.tarantulae.tarantulas.tarbooshes.tardigrade.targetable.tarmacadam.tarmacking.tarnations.tarnishing.tarpaulins.tarriances.tartnesses.taskmaster.tasselling.tastefully.tastemaker.tattersall.tattletale.tattooists.tauntingly.tautnesses.tautomeric.tawdriness.taxidermic.taximeters.taxonomies.taxonomist.taxpayings.tchotchkes.teaberries.teacupfuls.teacupsful.teakettles.teargassed.teargasses.tearjerker.tearstains.tearstrips.teasellers.teaselling.teatasters.teazelling.technetium.technicals.technician.techniques.technocrat.technology.technopops.tectonisms.teentsiest.teethridge.teetotaled.teetotaler.teetotally.telecasted.telecaster.telecourse.telegonies.telegraphs.telegraphy.telemeters.telemetric.teleologic.teleonomic.teleostean.telepathic.telephoned.telephoner.telephones.telephonic.telephotos.teleported.telescoped.telescopes.telescopic.telestichs.teletyping.televiewed.televiewer.televising.television.televisors.televisual.teliospore.tellurians.tellurides.tellurions.tellurites.telluriums.tellurized.tellurizes.telnetting.telophases.telphering.temerities.temperable.temperance.tempesting.temporally.temporised.temporises.temporized.temporizer.temporizes.temptation.temptingly.tenability.tenacities.tenaculums.tenantable.tenantless.tenantries.tendencies.tenderfeet.tenderfoot.tenderized.tenderizer.tenderizes.tenderloin.tenderness.tendinites.tendinitis.tendonites.tendonitis.tendresses.tendrilled.tendrilous.tenebrific.tenebrious.tenebrisms.tenebrists.tenesmuses.tenotomies.tenpounder.tensioners.tensioning.tentacular.tentatives.tenterhook.tentmakers.tenurially.tepidities.teratogens.teratology.teratomata.terebinths.termagants.terminable.terminably.terminally.terminated.terminates.terminator.terminuses.termitaria.terneplate.terpenoids.terpineols.terpolymer.terraforms.terrariums.terreplein.terrifiers.terrifying.terrorised.terrorises.terrorisms.terrorists.terrorized.terrorizes.terrorless.tertiaries.tesselated.tesselates.tessellate.tesseracts.tessituras.testaceans.testaceous.testaments.testicular.testifiers.testifying.testudines.tetanising.tetanizing.tetchiness.tetherball.tetracaine.tetrachord.tetragonal.tetragrams.tetrahedra.tetrameric.tetrameter.tetraploid.tetrarchic.tetraspore.tetrazzini.tetroxides.teutonized.teutonizes.textuaries.texturally.texturized.texturizes.thanatoses.thaneships.thankfully.thatchiest.thatchings.thearchies.theatrical.thecodonts.theistical.thelitises.themselves.theocratic.theodicies.theodolite.theogonies.theologian.theologies.theologise.theologize.theologues.theonomies.theonomous.theophanic.theorising.theorizers.theorizing.therapists.therapsids.thereabout.thereafter.thereunder.thermalize.thermidors.thermionic.thermistor.thermoform.thermogram.thermopile.thermosets.thermostat.thetically.theurgical.theurgists.thiaminase.thickeners.thickening.thickheads.thieveries.thievishly.thighbones.thimbleful.thimblerig.thimerosal.thinkingly.thinnesses.thiopental.thiophenes.thiouracil.thirstiest.thirteenth.thirtieths.thistliest.thixotropy.tholeiites.tholeiitic.thorianite.thornbacks.thorniness.thorougher.thoroughly.thoughtful.thoughtway.thousandth.thralldoms.thrashings.threadbare.threadfins.threadiest.threadless.threadlike.threadworm.threatened.threatener.threepence.threepenny.threescore.threesomes.threnodies.threnodist.threonines.thresholds.thriftiest.thriftless.thrivingly.throatiest.thrombosed.thromboses.thrombosis.thrombotic.throttlers.throttling.throughout.throughput.throughway.throwaways.throwbacks throwsters.thrummiest.thuggeries.thumbholes.thumbnails.thumbprint.thumbscrew.thumbtacks.thumbwheel.thunderers.thundering.thunderous.thwartwise.thylacines.thylakoids.thymectomy.thymidines.thymocytes.thyratrons.thyristors.thyroxines.thysanuran.ticketless.ticklishly.ticktacked.ticktocked.tictacking.tictocking.tidewaters.tidinesses.tiebreaker.tiemannite.tiercerons.tigerishly.tighteners.tightening.tightropes.tightwires.tilefishes.tillandsia.tiltmeters.tiltrotors.timberhead.timberings.timberland.timberline.timberwork.timbrelled.timekeeper.timelessly.timeliness.timepieces.timesavers.timesaving.timescales.timeserver.timetables.timeworker.timidities.timocratic.timorously.timpanists.tinctorial.tincturing.tinglingly.tininesses.tinkertoys.tinnituses.tinselling.tirelessly.tiresomely.titanesses.titillated.titillates.titivating.titivation.titratable.titrations.tittivated.tittivates.tittupping.titularies.toadeaters.toadfishes.toadflaxes.toadstones.toadstools.tobogganed.tobogganer.tocologies.tocopherol.toenailing.toiletries.toilsomely.tokologies.tolerances.tolerantly.tolerating.toleration.tolerative.tolerators.tollbooths.tollhouses.toluidides.toluidines.tomahawked.tomatillos.tombstones.tomcatting.tomfoolery.tomographs.tomography.tonalities.tonelessly.tongueless.tonguelike.tonicities.tonometers.tonoplasts.toolholder.toolhouses.toolmakers.toolmaking.toothaches.toothbrush.toothpaste.toothpicks.toothworts.topcrosses.topgallant.topicality.toploftier.toploftily.topminnows.topnotcher.topographs.topography.topologies.topologist.toponymies.toponymist.topsoiling.topworking.torchieres.torchlight.torchwoods.tormenters.tormentils.tormenting.tormentors.toroidally.torosities.torpedoing.torrefying.torrential.torridness.torrifying.tortellini.tortiously.tortricids.tortuosity.tortuously.totalising.totalistic.totalities.totalizers.totalizing.totaquines.totemistic.totipotent.touchbacks.touchdowns.touchholes.touchiness.touchingly.touchlines.touchmarks.touchstone.touchtones.touchwoods.tougheners.toughening.tourbillon.tourmaline.tournament.tourneying.tourniquet.tovariches.tovarishes.towelettes.towellings.toweringly.townhouses.townscapes.townswoman.townswomen.toxaphenes.toxicities.toxicology.toxoplasma.trabeation.trabeculae.trabecular.trabeculas.tracheated.tracheates.tracheites.tracheitis.tracheolar.tracheoles.trackballs.tracklayer.tracksides.tracksuits.tractional.tradecraft.trademarks.traditions.traditores.trafficked.trafficker.tragacanth.tragedians.tragically.tragicomic.trailering.trailerist.trailerite.trailheads.trainbands.trainloads.traitoress.traitorous.trajecting.trajection.trajectory.tramelling.trammelers.trammeling.trammelled.tramontane.trampoline.trancelike.tranquiler.tranquilly.transacted.transactor.transaxles.transcends.transcribe.transcript.transduced.transducer.transduces.transected.transeptal.transfects.transferal.transferee.transferor.transfixed.transfixes.transforms.transfused.transfuses.transgenes.transgenic.transgress.transience.transiency.transients.transistor.transiting.transition.transitive.transitory.translated.translates.translator.transmuted.transmutes.transpired.transpires.transplant.transpolar.transports.transposed.transposes.transposon.transshape.transships.transsonic.transudate.transuding.transvalue.transverse.trapanning.trapezists.trapeziums.trapezoids.trapnested.trashiness.trattorias.trauchling.traumatise.traumatism.traumatize.travailing.travellers.travelling.travelogue.traversals.traversers.traversing.travertine.travestied.travesties.trawlerman.trawlermen.trazodones.treacliest.treadmills.treasonous.treasurers.treasuries.treasuring.treatments.trebbianos.trebuchets.trebuckets.treehopper.treehouses.treenwares.trehaloses.treillages.trellising.trematodes.trembliest.tremendous.tremolites.tremolitic.trenchancy.trendiness.trepanners.trepanning.trephining.treponemal.treponemas.treponemes.trespassed.trespasser.trespasses.tretinoins.trevallies.triacetate.trialogues.triangular.triarchies.triathlete.triathlons.tribadisms.tribalisms.tribalists.tribrachic.tribulated.tribulates.tribunates.trichiases.trichiasis.trichinize.trichinous.trichocyst.trichogyne.trichology.trichotomy.trichromat.trickeries.trickiness.trickishly.trickliest.tricksiest.tricksters.triclinium.triclosans.tricolette.tricolored.tricolours.tricotines.tricuspids.tricyclics.triennials.trienniums.trierarchs.trierarchy.trifacials.trifoliate.trifoliums.trifurcate.trigeminal.triggering.triggerman.triggermen.triglyphic.trignesses.trigonally.trigraphic.trihedrals.trihedrons.trihybrids.trihydroxy.trilateral.trilingual.triliteral.trilithons.trillionth.trilobites.trimerisms.trimesters.trimnesses.trimonthly.trimorphic.trinketers.trinketing.trinocular.trinomials.tripartite.triphthong.tripinnate.tripletail.triplicate.triplicity.trippingly.triradiate.trisecting.trisection trisectors.triskelion.tristearin.tristfully.trisulfide.tritheisms.tritheists.triticales.triturable.triturated.triturates.triturator.triumphant.triumphing.triunities.trivialise.trivialist.triviality.trivialize.trochanter.trochlears.trochoidal.troglodyte.trolleybus.trolleying.trombonist.troopships.troostites.tropaeolum.tropeolins.tropically.tropologic.tropopause.tropotaxes.tropotaxis.troubadour.trousseaus.trousseaux.trowellers.trowelling.truantries.trucklines.truckloads.truculence.truculency.truenesses.trumperies.trumpeters.trumpeting.truncating.truncation.truncheons.trusteeing.trustfully.trustiness.trustingly.truthfully.tryptamine.tryptophan.tubercular.tuberculin.tuberosity.tubificids.tubulating.tubulators.tuffaceous.tularemias.tulipwoods.tumblebugs.tumbledown.tumblerful.tumblesets.tumbleweed.tumescence.tumidities.tumultuary.tumultuous.tunability.tunelessly.tunesmiths.tungstates.tungstites.tunnelings.tunnellers.tunnellike.tunnelling.turbidites.turbidness.turbinated.turbinates.turboprops.turboshaft.turbulence.turbulency.turfskiing.turgencies.turgescent.turgidness.turmoiling.turnabouts.turnaround.turnbuckle.turnstiles.turnstones.turntables.turnverein.turophiles.turpentine.turpitudes.turquoises.turtleback.turtledove.turtlehead.turtleneck.tutelaries.tutoresses.tutorships.tutoyering.twayblades.tweediness.tweenesses.twentieths.twiddliest.twinflower.twinklings.twitchiest.twitterers.twittering.tympanists.tympanites.tympanitic.typescript.typesetter.typestyles.typewriter.typewrites.typhlosole.typicality.typographs.typography.typologies.typologist.tyrannical.tyrannised.tyrannises.tyrannized.tyrannizer.tyrannizes.tyrocidine.tyrocidins.tyrosinase.ubiquinone.ubiquities.ubiquitous.udometries.ufological.ufologists.uglinesses.uintahites.uitlanders.ulcerating.ulceration.ulcerative.ulteriorly.ultimacies.ultimately.ultimating.ultimatums.ultrabasic.ultraclean.ultradense.ultrafiche.ultraheats.ultraheavy.ultrahuman.ultraistic.ultralight.ultramafic.ultramicro.ultraquiet.ultrarapid.ultraright.ultrasharp.ultrashort.ultraslick.ultrasmall.ultrasmart.ultrasonic.ultrasound.ultravacua.ululations.umbellifer.umbellules.umbilicals.umbilicate.umbrageous.umbrellaed.unabatedly.unabridged.unabsorbed.unacademic.unaccented.unaccepted.unachieved.unactorish.unadjusted.unadmitted.unaffected.unaffluent.unalluring.unamenable.unanalyzed.unanchored.unanswered.unapparent.unappeased.unapproved.unarguable.unarguably.unarrogant.unartistic.unassailed.unassigned.unassisted.unassuaged.unassuming.unathletic unattached.unattended.unattested.unavailing.unawakened.unbalanced.unbalances.unbandaged.unbandages.unbaptized.unbarbered.unbearable.unbearably.unbeatable.unbeatably.unbecoming.unbeholden.unbeliever.unbendable.unbendings.unbiblical.unbleached.unblenched.unblinking.unblocking.unbloodied.unblushing.unbonneted.unbosomers.unbosoming.unbottling.unbraiding.unbranched.unbreeched.unbreeches.unbridling.unbuckling.unbudgeted.unbuffered.unbuilding.unbundling.unburdened.unburnable.unbuttered.unbuttoned.uncalcined.uncanceled.uncandidly.uncanniest.uncarpeted.uncensored.uncensured unchaining.unchairing.unchanging.uncharging.uncharming.unchastely.unchastest.unchastity.unchewable.unchurched.unchurches.unchurchly.unciliated.uncinarias.unclamping.unclasping.uncleanest.unclearest.unclenched.unclenches.unclinched.unclinches.unclipping.uncloaking.unclogging.unclothing.unclouding.unclutters.uncoalesce.uncoatings.uncodified.uncoercive.uncoffined.uncombined.uncommoner.uncommonly.unconcerns.unconfined.unconfused.unconfuses.unconsumed.unconvoyed.uncorseted.uncouplers.uncoupling.uncovering.uncreating.uncreative.uncredited.uncrippled.uncritical.uncrossing.uncrowning.uncrumpled.uncrumples.unctuously.uncultured undecadent.undeceived.undeceives.undecideds.undeclared.undefeated.undefended.undeformed.undeniable.undeniably.underacted.underbaked.underbakes.underbelly.underbites.underbrims.underbrush.undercards.underclass.underclays.undercoats.undercooks.undercools.undercount.undercover.undercroft.underdoing.underdosed.underdoses.undereaten.underfeeds.underflows.underfunds.undergirds.underglaze.undergoers.undergoing.undergrads.underhairs.underhands.underheats underkills.underlined.underlines.underlings.underloads.underlying.undermined.undermines.underneath.underpants.underparts.underplays.underplots.underprice.underproof.underprops.underrated.underrates.underreact.underscore.undersells.undersexed.undershirt.undershoot.undershrub.undersides.undersigns.undersized.underskirt.underslung.undersoils.undersongs.underspins.understand.understate.understeer.understood.understory.understudy.undertaken.undertaker.undertakes.undertaxed.undertaxes.undertints.undertones.undertrick.underusing.undervalue.undervests.undervotes.underwater.underwhelm.underwings.underwires.underwoods.underwools.underworks.underworld.underwrite.underwrote.undeserved undetected.undeterred.undidactic.undigested.undirected.undismayed.undisputed.undoctored.undogmatic.undomestic.undoubling.undoubting.undramatic.undressing.undulances.undulating.undulation.undulators.undulatory.unearthing.uneasiness.uneconomic.unedifying.uneducable.uneducated.unemphatic.unemployed.unenclosed.unendingly.unenforced.unenlarged.unenriched.unenviable.unequalled.unequipped.unerringly.unevenness.uneventful.unexamined.unexampled.unexcelled.unexciting.unexpected.unexpended.unexploded.unexplored.unfadingly.unfairness.unfaithful.unfamiliar.unfastened.unfathered.unfavorite.unfeasible.unfeminine.unfettered.unfilially.unfiltered.unfindable.unfinished.unflagging.unfocussed.unfoldment.unforeseen.unforested.unfreedoms unfreezing.unfriended.unfriendly.unfrocking.unfruitful.ungainlier.ungenerous.ungimmicky.ungodliest.ungraceful.ungracious.ungrateful.ungrounded.ungrudging.unguarding.unhallowed.unhampered.unhandiest.unhandsome.unhappiest.unheralded.unhindered.unhitching.unholiness.unhouseled.unhumorous.unhygienic.unicameral.unicycling.unicyclist.unifoliate.uniformest.uniforming.uniformity.unilateral.unilingual.unilocular.unimpaired.unimposing.unimproved.unindicted.uninfected.uninflated.uninformed.uninitiate.uninspired.uninstalls.uninsureds.unintended.uninterest.uninviting.uninvolved.unionising.unionizers.unionizing.uniqueness.unitarians.univalents.univariate.universals.university.univocally.unjointing.unjustness.unkenneled.unkindlier.unkindness.unknitting.unknotting.unknowable.unknowings.unladylike.unlamented.unlatching.unlawfully.unlearning.unleashing.unleavened.unlettered.unleveling.unlevelled.unlicensed.unlikelier.unlikeness.unlimbered.unliterary.unloosened.unlovelier.unluckiest.unmanliest.unmannered.unmannerly.unmarrieds.unmeasured.unmediated.unmerciful.unmilitary.unmingling.unmitering.unmodified.unmolested.unmorality.unmortised.unmortises.unmuffling.unmuzzling.unnameable.unneurotic.unnumbered.unobserved.unoccupied.unofficial.unopenable.unoriginal.unorthodox.unparented.unpassable.unpastoral.unpedantic.unpeopling.unplaiting.unplayable.unpleasant.unpleasing.unplugging.unpolished.unpolluted.unpregnant.unprepared.unproduced.unprompted.unprovable.unprovoked.unpuckered.unpunctual.unpunished.unpuzzling.unquietest.unraveling.unravelled.unravished.unreadable.unreadiest.unrealized.unreasoned.unrecorded.unredeemed.unreformed.unreleased.unreliable unrelieved.unremarked.unreported.unrequited.unreserved.unreserves.unresolved.unrestored.unretiring.unrevealed.unreviewed.unrewarded.unrhythmic.unriddlers.unriddling.unripeness.unrivalled.unromantic.unrounding.unruliness.unsaddling.unsafeties.unsalaried.unsanitary.unsaturate.unsayables.unscalable.unschooled.unscramble.unscreened.unscrewing.unscripted.unseasoned.unseemlier.unselected.unsellable.unsettling.unshackled.unshackles.unshakable.unshakably.unsheathed.unsheathes.unshelling.unshifting.unshipping.unsighting.unsinkable.unskillful.unslakable.unslinging.unsmoothed.unsnagging.unsnapping.unsnarling.unsociable.unsociably.unsocially.unsoldered.unsolvable.unsoundest.unspeaking.unspecific.unsphering.unspooling.unstablest.unstacking.unsteadied.unsteadier.unsteadies.unsteadily.unsteeling.unstepping.unsticking.unstinting.unstitched.unstitches.unstoppers.unstopping.unstrained.unstrapped.unstressed.unstresses.unsuitable.unsuitably.unswathing.unswearing.unswerving.untalented.untangling.unteaching.untempered.untenanted.untestable.untethered.unthinking.unthreaded.unthroning.untidiness.untillable.untimelier.untiringly.untogether.untowardly.untracking.untraveled.untreading.untrimming.untroubled.untrussing.untrusting.untruthful.untwisting.unununiums.unutilized.unveilings.unverified.unwariness.unwavering.unwearable.unweighted.unwieldier unwieldily.unwinnable.unwontedly.unworkable.unworthier.unworthies.unworthily.unwrapping.unwreathed.unwreathes.unwrinkled.unwrinkles.unyielding.upbraiders.upbraiding.upbringing.upbuilders.upbuilding.upchucking.upclimbing.upflinging.upgathered.upgradable.uphoarding.upholsters.upholstery.uplighting.upmanships.uppercased.uppercases.upperparts.uppishness.uppitiness.uppityness.uppropping.upreaching.uprighting.uproarious.upshifting.upshooting.upstanding.upstarting.upstepping.upstirring.upsweeping.upswelling.upswinging.upthrowing.upthrusted.upwardness.upwellings.uraninites.urbanising.urbanistic.urbanities.urbanizing.urbanology.uredospore.ureotelism.urethrites.urethritis.uricosuric.uricotelic.urinalyses.urinalysis.urinations.urinometer.urochromes.urogenital.urokinases.urological.urologists.uropygiums.uroscopies.urticarial.urticarias.urticating.urtication.usableness.usefulness.usherettes.usquebaugh.usuriously.usurpation.utilizable.utopianism.utterances.uttermosts.uvarovites.uvulitises.uxoricides.uxoriously.vacantness.vacationed.vacationer.vaccinated.vaccinates.vaccinator.vacillated.vacillates.vacillator.vacuolated.vagabonded.vagilities.vaginismus.vagotomies.vagotonias.vagrancies.vainnesses.valentines.valiancies.validating.validation.validities.vallations.valleculae.vallecular.valorising.valorizing.valorously.valuations.valvulites.valvulitis.vampirisms.vanadiates.vanaspatis.vandalised.vandalises.vandalisms.vandalized.vandalizes.vanitories.vanpooling.vanquished.vanquisher.vanquishes.vapidities.vaporettos.vaporising.vaporizers.vaporizing.vaporously.vaporwares.variations.varicellas.varicocele.varicosity.variegated.variegates.variegator.variolated.variolates.variolites.varioloids.variometer.varletries.varnishers.varnishing.vasculitis.vasoactive.vasospasms.vasotocins.vasotomies.vassalages.vastitudes.vastnesses.vaticinate.vaudeville.vaultingly.vauntingly.vegetables.vegetarian.vegetating.vegetation.vegetative.vehemences.vehemently.veinstones.velarizing.velleities.vellicated.vellicates.velocipede.velocities.velodromes.velveteens.velvetiest.velvetlike.venalities.venditions.veneerings.venenating.venerables.venerating.veneration.venerators.vengeances.vengefully.venialness.venography.venologies.venomously.venosities.ventifacts.ventilated.ventilates.ventilator.ventricles.ventricose.ventriculi.veracities.verandahed.verapamils.veratrines.verbalisms.verbalists.verbalized.verbalizer.verbalizes.verbicides.verbifying.verdancies.verifiable.vermicelli.vermicides.vermicular.vermifuges.vermilions.vermillion.vernacular.vernalized.vernalizes.vernations.vernissage.versicular.versifiers.versifying.vertebrate.vertically.vertigines.vesicating.vesiculate.vespertine.vespiaries.vestiaries.vestibular.vestibuled.vestibules.vestmental.vetchlings.veterinary.vibraculum.vibraharps.vibrancies.vibraphone.vibrations.vicariance.vicariants.vicariates.vicarships.vicegerent.vicereines.vicinities.victimhood.victimised.victimises.victimized.victimizer.victimizes.victimless.victorious.victresses.victualers.victualing.victualled.victualler.videodiscs.videodisks.videolands.videophile.videophone.videotaped.videotapes.videotexes.videotexts.viewership.viewfinder.viewlessly.viewpoints.vigilances.vigilantes.vigilantly.vignetters.vignetting.vignettist.vigorishes.vigorously.vilenesses.vilipended.villainess.villainies.villainous.villanella.villanelle.villenages.vindicable.vindicated.vindicates.vindicator.vindictive.vinegarish.vinosities.vinylidene.violaceous.violations.violinists.viosterols.viperously.viraginous.vireonines.virescence.virginally.viridities.virilities.virilizing.virologies.virologist.virtuality.virtueless.virtuosity.virtuously.virulences.virulently.viscerally.viscometer.viscometry.viscountcy.visibility.visionally.visionless.visitation.visualised.visualises.visualists.visualized.visualizer.visualizes.vitalising.vitalistic.vitalities.vitalizers.vitalizing.vitellines.vitelluses.vitiations.vitrectomy.vitreouses.vitrifying.vitrioling.vitriolled.vituperate.vivacities.vivandiere.viverrines.viviparity.viviparous.vivisected.vivisector.vizierates.viziership.vocabulary.vocalising.vocalities.vocalizers.vocalizing.vocational.vocatively.vociferant.vociferate.vociferous.voicemails.voiceovers.voiceprint.voidnesses.volatilise.volatility.volatilize.volcanisms.volcanized.volcanizes.volitional.volleyball.volplaning.voltmeters.volubility.volumeters.volumetric.voluminous.volunteers.voluptuary.voluptuous.volvuluses.vomitories.voodooisms.voodooists.voracities.vortically.vorticella.vorticisms.vorticists.votaresses.votiveness.vouchering.vouchsafed.vouchsafes.vowelizing.voyeurisms.vulcanised.vulcanises.vulcanisms.vulcanites.vulcanized.vulcanizer.vulcanizes.vulgarians.vulgarised.vulgarises.vulgarisms.vulgarized.vulgarizer.vulgarizes.vulnerable.vulnerably.vulvitises.wadsetting.wageworker.wagonettes.wagonloads.wainscoted.wainwright.waistbands.waistcoats.waistlines.waitlisted.waitperson.waitressed.waitresses.waitstaffs.wakeboards.walkabouts.walkathons.wallboards.wallflower.wallopings.wallpapers.wallyballs.wallydrags.wampishing.wampumpeag.wanderings.wanderlust.wantonness.wapentakes.warbonnets.wardenries.wardenship.wardresses.wardrobing.warehoused.warehouser.warehouses.warinesses.warlordism.warmnesses.warmongers.warrantees.warranters.warrantied.warranties.warranting.warrantors.washateria.washbasins.washboards.washcloths.washeteria.washhouses.washstands.wassailers.wassailing.wastefully.wastelands.wastepaper.wastewater.watchables.watchbands.watchcases.watchcries.watchfully.watchmaker.watchtower.watchwords.waterbirds.waterborne.waterbucks.waterbuses.watercolor.watercraft.watercress.waterfalls.waterflood.waterfowls.waterfront.waterheads.wateriness.waterleafs.waterlines.watermarks.watermelon.waterpower.waterproof.waterscape.watersheds.watersides.waterspout.watertight.waterweeds.waterwheel.waterworks.waterzoois.wattlebird.wattmeters.waveguides.wavelength.wavelessly.wavellites.waveringly.waveshapes.wavinesses.waxberries.waxinesses.waxworkers.wayfarings.weakfishes.weakliness weaknesses.wealthiest.weaponeers.weaponized.weaponizes.weaponless.weaponries.wearifully.weaselling.weathering.weatherize.weatherman.weathermen.weaverbird.webcasters.webcasting.webmasters.weekenders.weekending.weeknights.weightiest.weightless.weimaraner.welfarisms.welfarists.wellhouses.wellnesses.wellspring.wentletrap.werewolves.wernerites.westerlies.westerners.westernise.westernize.whalebacks.whaleboats.whalebones.wharfinger.whatnesses.whatsoever.wheatlands.wheatworms.wheelbases.wheelchair.wheelhorse.wheelhouse.wheelworks.wheeziness.whensoever.whereabout.wherefores.wherewiths.whetstones.whickering.whimperers.whimpering.whingdings whinstones.whiplashes.whipsawing.whipsnakes.whipstalls.whipstitch.whipstocks.whirligigs.whirlpools.whirlwinds.whirlybird.whisperers.whispering.whistlings.whitebaits.whitebeard.whitecombs.whitefaces.whiteflies.whiteheads.whitenings.whitesmith.whitetails.whitewalls.whitewings.whitewoods.whittlings.whizzbangs.whodunnits.wholesaled.wholesaler.wholesales.wholesomer.whomsoever.whorehouse.wickedness.wickerwork.wideawakes.widebodies.widenesses.widespread.widowbirds.widowhoods.wifeliness.wigwaggers.wigwagging.wildcatted.wildcatter.wildebeest.wilderment.wilderness.wildflower.wildfowler.wildnesses.wilinesses.willemites.willingest.willowiest.willowlike.willowware.willpowers.windblasts.windbreaks.windburned.windchills.windflower.windhovers.windjammer.windlassed.windlasses.windlessly.windmilled.windowless.windowpane.windowsill.windrowers.windrowing.windscreen.windshield.windstorms.windsurfed.windthrows.winegrower.winemakers.winemaking.wingchairs.wingspread.winterfeed.winteriest.winterized.winterizes.winterkill.wintertide.wintertime.wintriness.wiredrawer.wirehaired.wirelessed.wirelesses.wirephotos.wiretapped.wiretapper.wirinesses.wisecracks.wisenesses.witchcraft.witcheries.witchgrass.witchhoods.witchweeds.withdrawal.witherites.withholder.withstands.witnessers.witnessing.witticisms.wizardries.woadwaxens.wobbliness.woefullest.woefulness.wolffishes.wolfhounds.wolframite.wolfsbanes.wolverines.womanhoods.womanishly.womanising.womanizers.womanizing.womanliest.womanpower.womenfolks.wonderland.wonderment.wonderwork.wondrously.wontedness.woodblocks.woodborers.woodcarver.woodchucks.woodcrafts.woodcutter.woodenhead.woodenness.woodenware.woodgrains.woodlander.woodpecker.woodstoves.woodwaxens.woodworker.woolliness.wordlessly.wordmonger.wordsmiths.workaholic.workbasket.workforces.workhorses.workhouses.workingman.workingmen.workpeople.workpieces.workplaces.workprints worksheets.workspaces.worktables.worldbeats.worldliest.worldlings.worldviews.wornnesses.worriments.worrywarts.worshipers.worshipful.worshiping.worshipped.worshipper.worthiness.worthwhile.woundworts.wraithlike.wraparound.wrathfully.wrestlings.wretcheder.wretchedly.wriggliest.wrinkliest.wristbands.wristlocks.wristwatch.wrongdoers.wrongdoing.wrongfully.wulfenites.wunderkind.wyandottes.wyliecoats.xanthomata.xenobiotic.xenoblasts.xenocrysts.xenogamies.xenogeneic.xenogenies.xenografts.xenolithic.xenophiles.xenophobes.xenophobia.xenophobic.xenotropic.xeriscapes.xerodermae.xerodermas.xerography xerophytes.xerophytic.xylographs.xylography.xylophages.xylophones.xylotomies.yardmaster.yardsticks.yearningly.yeastiness.yellowfins.yellowlegs.yellowtail.yellowware.yellowwood.yeomanries.yesterdays.yestereves.yesteryear.yohimbines.yokefellow.yottabytes.youngberry.younglings.youngsters.yourselves.youthening.youthfully.youthquake.ytterbiums.yuppiedoms.yuppifying.zabaglione.zamindaris.zaninesses.zapateados.zealotries.zebrawoods.zeitgebers.zeitgeists.zettabytes.zibellines.zidovudine.zigzaggers.zigzagging.zincifying.zinfandels.zinkenites.zinkifying.zirconiums.zitherists.zombielike.zombifying.zoogametes.zookeepers.zoolatries.zoological.zoologists.zoometries.zoomorphic.zoophilias.zoophilies.zoophilous.zoophobias.zoosterols.zootomists.zucchettos.zwitterion.zygodactyl.zygomatics.zygomorphy.zygosities.zygospores.zymologies zymometers.",
		() => "3",
		() => "4",
		() => "5",
		() => "6",
		() => "7",
		() => "8",
		() => "9",
		() => "10"
];


}

